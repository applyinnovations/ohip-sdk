/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the MarketGroupCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketGroupCriteria{}

// MarketGroupCriteria Request object that holds the details of Market Group to be created.
type MarketGroupCriteria struct {
	MarketGroup *MarketGroupType `json:"marketGroup,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewMarketGroupCriteria instantiates a new MarketGroupCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketGroupCriteria() *MarketGroupCriteria {
	this := MarketGroupCriteria{}
	return &this
}

// NewMarketGroupCriteriaWithDefaults instantiates a new MarketGroupCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketGroupCriteriaWithDefaults() *MarketGroupCriteria {
	this := MarketGroupCriteria{}
	return &this
}

// GetMarketGroup returns the MarketGroup field value if set, zero value otherwise.
func (o *MarketGroupCriteria) GetMarketGroup() MarketGroupType {
	if o == nil || IsNil(o.MarketGroup) {
		var ret MarketGroupType
		return ret
	}
	return *o.MarketGroup
}

// GetMarketGroupOk returns a tuple with the MarketGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketGroupCriteria) GetMarketGroupOk() (*MarketGroupType, bool) {
	if o == nil || IsNil(o.MarketGroup) {
		return nil, false
	}
	return o.MarketGroup, true
}

// HasMarketGroup returns a boolean if a field has been set.
func (o *MarketGroupCriteria) HasMarketGroup() bool {
	if o != nil && !IsNil(o.MarketGroup) {
		return true
	}

	return false
}

// SetMarketGroup gets a reference to the given MarketGroupType and assigns it to the MarketGroup field.
func (o *MarketGroupCriteria) SetMarketGroup(v MarketGroupType) {
	o.MarketGroup = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MarketGroupCriteria) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketGroupCriteria) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MarketGroupCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *MarketGroupCriteria) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *MarketGroupCriteria) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketGroupCriteria) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *MarketGroupCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *MarketGroupCriteria) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o MarketGroupCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketGroupCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketGroup) {
		toSerialize["marketGroup"] = o.MarketGroup
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableMarketGroupCriteria struct {
	value *MarketGroupCriteria
	isSet bool
}

func (v NullableMarketGroupCriteria) Get() *MarketGroupCriteria {
	return v.value
}

func (v *NullableMarketGroupCriteria) Set(val *MarketGroupCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketGroupCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketGroupCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketGroupCriteria(val *MarketGroupCriteria) *NullableMarketGroupCriteria {
	return &NullableMarketGroupCriteria{value: val, isSet: true}
}

func (v NullableMarketGroupCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketGroupCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


