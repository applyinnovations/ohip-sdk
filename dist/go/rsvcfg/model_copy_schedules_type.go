/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the CopySchedulesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopySchedulesType{}

// CopySchedulesType The collection of Schedules to be copied.
type CopySchedulesType struct {
	// The collection of schedule copy criteria.
	Schedule []CopyScheduleType `json:"schedule,omitempty"`
	// Hotel Code for the Copy Policy operation.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewCopySchedulesType instantiates a new CopySchedulesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopySchedulesType() *CopySchedulesType {
	this := CopySchedulesType{}
	return &this
}

// NewCopySchedulesTypeWithDefaults instantiates a new CopySchedulesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopySchedulesTypeWithDefaults() *CopySchedulesType {
	this := CopySchedulesType{}
	return &this
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CopySchedulesType) GetSchedule() []CopyScheduleType {
	if o == nil || IsNil(o.Schedule) {
		var ret []CopyScheduleType
		return ret
	}
	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopySchedulesType) GetScheduleOk() ([]CopyScheduleType, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CopySchedulesType) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given []CopyScheduleType and assigns it to the Schedule field.
func (o *CopySchedulesType) SetSchedule(v []CopyScheduleType) {
	o.Schedule = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CopySchedulesType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopySchedulesType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CopySchedulesType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CopySchedulesType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o CopySchedulesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopySchedulesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableCopySchedulesType struct {
	value *CopySchedulesType
	isSet bool
}

func (v NullableCopySchedulesType) Get() *CopySchedulesType {
	return v.value
}

func (v *NullableCopySchedulesType) Set(val *CopySchedulesType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopySchedulesType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopySchedulesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopySchedulesType(val *CopySchedulesType) *NullableCopySchedulesType {
	return &NullableCopySchedulesType{value: val, isSet: true}
}

func (v NullableCopySchedulesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopySchedulesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


