/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the PreCheckInTimeRuleTypes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreCheckInTimeRuleTypes{}

// PreCheckInTimeRuleTypes struct for PreCheckInTimeRuleTypes
type PreCheckInTimeRuleTypes struct {
	// The latest possible Internet check-in time for a reservation based on the Time rule type
	EndTime *string `json:"endTime,omitempty"`
	// The earliest possible Internet check-in time for a reservation based on the Time rule type
	StartTime *string `json:"startTime,omitempty"`
	// The number of days before the arrival date that the reservation can be checked in through the Internet. A zero will mean the day of arrival
	DaysBeforeArrival *int32 `json:"daysBeforeArrival,omitempty"`
	// The number of days after the booking date that the reservation can be checked in over the Internet
	DaysAfterBooking *int32 `json:"daysAfterBooking,omitempty"`
	// Enter the number of hours before the property's official check-in time that the reservation will be eligible for Internet check in
	HoursPriorToCheckIn *int32 `json:"hoursPriorToCheckIn,omitempty"`
	// Enter the number of hours after the property's official check-in time that the reservation will be eligible for Internet check in
	HoursPostCheckIn *int32 `json:"hoursPostCheckIn,omitempty"`
	// Absolute Flag value for Time Limit Rule.
	AbsoluteFlag *bool `json:"absoluteFlag,omitempty"`
}

// NewPreCheckInTimeRuleTypes instantiates a new PreCheckInTimeRuleTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreCheckInTimeRuleTypes() *PreCheckInTimeRuleTypes {
	this := PreCheckInTimeRuleTypes{}
	return &this
}

// NewPreCheckInTimeRuleTypesWithDefaults instantiates a new PreCheckInTimeRuleTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreCheckInTimeRuleTypesWithDefaults() *PreCheckInTimeRuleTypes {
	this := PreCheckInTimeRuleTypes{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *PreCheckInTimeRuleTypes) SetEndTime(v string) {
	o.EndTime = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *PreCheckInTimeRuleTypes) SetStartTime(v string) {
	o.StartTime = &v
}

// GetDaysBeforeArrival returns the DaysBeforeArrival field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetDaysBeforeArrival() int32 {
	if o == nil || IsNil(o.DaysBeforeArrival) {
		var ret int32
		return ret
	}
	return *o.DaysBeforeArrival
}

// GetDaysBeforeArrivalOk returns a tuple with the DaysBeforeArrival field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetDaysBeforeArrivalOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysBeforeArrival) {
		return nil, false
	}
	return o.DaysBeforeArrival, true
}

// HasDaysBeforeArrival returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasDaysBeforeArrival() bool {
	if o != nil && !IsNil(o.DaysBeforeArrival) {
		return true
	}

	return false
}

// SetDaysBeforeArrival gets a reference to the given int32 and assigns it to the DaysBeforeArrival field.
func (o *PreCheckInTimeRuleTypes) SetDaysBeforeArrival(v int32) {
	o.DaysBeforeArrival = &v
}

// GetDaysAfterBooking returns the DaysAfterBooking field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetDaysAfterBooking() int32 {
	if o == nil || IsNil(o.DaysAfterBooking) {
		var ret int32
		return ret
	}
	return *o.DaysAfterBooking
}

// GetDaysAfterBookingOk returns a tuple with the DaysAfterBooking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetDaysAfterBookingOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysAfterBooking) {
		return nil, false
	}
	return o.DaysAfterBooking, true
}

// HasDaysAfterBooking returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasDaysAfterBooking() bool {
	if o != nil && !IsNil(o.DaysAfterBooking) {
		return true
	}

	return false
}

// SetDaysAfterBooking gets a reference to the given int32 and assigns it to the DaysAfterBooking field.
func (o *PreCheckInTimeRuleTypes) SetDaysAfterBooking(v int32) {
	o.DaysAfterBooking = &v
}

// GetHoursPriorToCheckIn returns the HoursPriorToCheckIn field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetHoursPriorToCheckIn() int32 {
	if o == nil || IsNil(o.HoursPriorToCheckIn) {
		var ret int32
		return ret
	}
	return *o.HoursPriorToCheckIn
}

// GetHoursPriorToCheckInOk returns a tuple with the HoursPriorToCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetHoursPriorToCheckInOk() (*int32, bool) {
	if o == nil || IsNil(o.HoursPriorToCheckIn) {
		return nil, false
	}
	return o.HoursPriorToCheckIn, true
}

// HasHoursPriorToCheckIn returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasHoursPriorToCheckIn() bool {
	if o != nil && !IsNil(o.HoursPriorToCheckIn) {
		return true
	}

	return false
}

// SetHoursPriorToCheckIn gets a reference to the given int32 and assigns it to the HoursPriorToCheckIn field.
func (o *PreCheckInTimeRuleTypes) SetHoursPriorToCheckIn(v int32) {
	o.HoursPriorToCheckIn = &v
}

// GetHoursPostCheckIn returns the HoursPostCheckIn field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetHoursPostCheckIn() int32 {
	if o == nil || IsNil(o.HoursPostCheckIn) {
		var ret int32
		return ret
	}
	return *o.HoursPostCheckIn
}

// GetHoursPostCheckInOk returns a tuple with the HoursPostCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetHoursPostCheckInOk() (*int32, bool) {
	if o == nil || IsNil(o.HoursPostCheckIn) {
		return nil, false
	}
	return o.HoursPostCheckIn, true
}

// HasHoursPostCheckIn returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasHoursPostCheckIn() bool {
	if o != nil && !IsNil(o.HoursPostCheckIn) {
		return true
	}

	return false
}

// SetHoursPostCheckIn gets a reference to the given int32 and assigns it to the HoursPostCheckIn field.
func (o *PreCheckInTimeRuleTypes) SetHoursPostCheckIn(v int32) {
	o.HoursPostCheckIn = &v
}

// GetAbsoluteFlag returns the AbsoluteFlag field value if set, zero value otherwise.
func (o *PreCheckInTimeRuleTypes) GetAbsoluteFlag() bool {
	if o == nil || IsNil(o.AbsoluteFlag) {
		var ret bool
		return ret
	}
	return *o.AbsoluteFlag
}

// GetAbsoluteFlagOk returns a tuple with the AbsoluteFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreCheckInTimeRuleTypes) GetAbsoluteFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.AbsoluteFlag) {
		return nil, false
	}
	return o.AbsoluteFlag, true
}

// HasAbsoluteFlag returns a boolean if a field has been set.
func (o *PreCheckInTimeRuleTypes) HasAbsoluteFlag() bool {
	if o != nil && !IsNil(o.AbsoluteFlag) {
		return true
	}

	return false
}

// SetAbsoluteFlag gets a reference to the given bool and assigns it to the AbsoluteFlag field.
func (o *PreCheckInTimeRuleTypes) SetAbsoluteFlag(v bool) {
	o.AbsoluteFlag = &v
}

func (o PreCheckInTimeRuleTypes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreCheckInTimeRuleTypes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.DaysBeforeArrival) {
		toSerialize["daysBeforeArrival"] = o.DaysBeforeArrival
	}
	if !IsNil(o.DaysAfterBooking) {
		toSerialize["daysAfterBooking"] = o.DaysAfterBooking
	}
	if !IsNil(o.HoursPriorToCheckIn) {
		toSerialize["hoursPriorToCheckIn"] = o.HoursPriorToCheckIn
	}
	if !IsNil(o.HoursPostCheckIn) {
		toSerialize["hoursPostCheckIn"] = o.HoursPostCheckIn
	}
	if !IsNil(o.AbsoluteFlag) {
		toSerialize["absoluteFlag"] = o.AbsoluteFlag
	}
	return toSerialize, nil
}

type NullablePreCheckInTimeRuleTypes struct {
	value *PreCheckInTimeRuleTypes
	isSet bool
}

func (v NullablePreCheckInTimeRuleTypes) Get() *PreCheckInTimeRuleTypes {
	return v.value
}

func (v *NullablePreCheckInTimeRuleTypes) Set(val *PreCheckInTimeRuleTypes) {
	v.value = val
	v.isSet = true
}

func (v NullablePreCheckInTimeRuleTypes) IsSet() bool {
	return v.isSet
}

func (v *NullablePreCheckInTimeRuleTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreCheckInTimeRuleTypes(val *PreCheckInTimeRuleTypes) *NullablePreCheckInTimeRuleTypes {
	return &NullablePreCheckInTimeRuleTypes{value: val, isSet: true}
}

func (v NullablePreCheckInTimeRuleTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreCheckInTimeRuleTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


