/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the ChangeServiceRequestCodePrioritiesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeServiceRequestCodePrioritiesRequest{}

// ChangeServiceRequestCodePrioritiesRequest struct for ChangeServiceRequestCodePrioritiesRequest
type ChangeServiceRequestCodePrioritiesRequest struct {
	Links []InstanceLink `json:"links,omitempty"`
	// List of Service Request Code Priorities.
	ServiceRequestCodePriorities []ServiceRequestCodePriorityType `json:"serviceRequestCodePriorities,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewChangeServiceRequestCodePrioritiesRequest instantiates a new ChangeServiceRequestCodePrioritiesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeServiceRequestCodePrioritiesRequest() *ChangeServiceRequestCodePrioritiesRequest {
	this := ChangeServiceRequestCodePrioritiesRequest{}
	return &this
}

// NewChangeServiceRequestCodePrioritiesRequestWithDefaults instantiates a new ChangeServiceRequestCodePrioritiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeServiceRequestCodePrioritiesRequestWithDefaults() *ChangeServiceRequestCodePrioritiesRequest {
	this := ChangeServiceRequestCodePrioritiesRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *ChangeServiceRequestCodePrioritiesRequest) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetServiceRequestCodePriorities returns the ServiceRequestCodePriorities field value if set, zero value otherwise.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetServiceRequestCodePriorities() []ServiceRequestCodePriorityType {
	if o == nil || IsNil(o.ServiceRequestCodePriorities) {
		var ret []ServiceRequestCodePriorityType
		return ret
	}
	return o.ServiceRequestCodePriorities
}

// GetServiceRequestCodePrioritiesOk returns a tuple with the ServiceRequestCodePriorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetServiceRequestCodePrioritiesOk() ([]ServiceRequestCodePriorityType, bool) {
	if o == nil || IsNil(o.ServiceRequestCodePriorities) {
		return nil, false
	}
	return o.ServiceRequestCodePriorities, true
}

// HasServiceRequestCodePriorities returns a boolean if a field has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) HasServiceRequestCodePriorities() bool {
	if o != nil && !IsNil(o.ServiceRequestCodePriorities) {
		return true
	}

	return false
}

// SetServiceRequestCodePriorities gets a reference to the given []ServiceRequestCodePriorityType and assigns it to the ServiceRequestCodePriorities field.
func (o *ChangeServiceRequestCodePrioritiesRequest) SetServiceRequestCodePriorities(v []ServiceRequestCodePriorityType) {
	o.ServiceRequestCodePriorities = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ChangeServiceRequestCodePrioritiesRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ChangeServiceRequestCodePrioritiesRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ChangeServiceRequestCodePrioritiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeServiceRequestCodePrioritiesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ServiceRequestCodePriorities) {
		toSerialize["serviceRequestCodePriorities"] = o.ServiceRequestCodePriorities
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableChangeServiceRequestCodePrioritiesRequest struct {
	value *ChangeServiceRequestCodePrioritiesRequest
	isSet bool
}

func (v NullableChangeServiceRequestCodePrioritiesRequest) Get() *ChangeServiceRequestCodePrioritiesRequest {
	return v.value
}

func (v *NullableChangeServiceRequestCodePrioritiesRequest) Set(val *ChangeServiceRequestCodePrioritiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeServiceRequestCodePrioritiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeServiceRequestCodePrioritiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeServiceRequestCodePrioritiesRequest(val *ChangeServiceRequestCodePrioritiesRequest) *NullableChangeServiceRequestCodePrioritiesRequest {
	return &NullableChangeServiceRequestCodePrioritiesRequest{value: val, isSet: true}
}

func (v NullableChangeServiceRequestCodePrioritiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeServiceRequestCodePrioritiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


