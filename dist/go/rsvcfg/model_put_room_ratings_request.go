/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the PutRoomRatingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutRoomRatingsRequest{}

// PutRoomRatingsRequest struct for PutRoomRatingsRequest
type PutRoomRatingsRequest struct {
	Links []InstanceLink `json:"links,omitempty"`
	// Collection of rooms and their ratings.
	RoomRatingsInfo []RoomRatingInfoType `json:"roomRatingsInfo,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPutRoomRatingsRequest instantiates a new PutRoomRatingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutRoomRatingsRequest() *PutRoomRatingsRequest {
	this := PutRoomRatingsRequest{}
	return &this
}

// NewPutRoomRatingsRequestWithDefaults instantiates a new PutRoomRatingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutRoomRatingsRequestWithDefaults() *PutRoomRatingsRequest {
	this := PutRoomRatingsRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PutRoomRatingsRequest) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomRatingsRequest) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PutRoomRatingsRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *PutRoomRatingsRequest) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetRoomRatingsInfo returns the RoomRatingsInfo field value if set, zero value otherwise.
func (o *PutRoomRatingsRequest) GetRoomRatingsInfo() []RoomRatingInfoType {
	if o == nil || IsNil(o.RoomRatingsInfo) {
		var ret []RoomRatingInfoType
		return ret
	}
	return o.RoomRatingsInfo
}

// GetRoomRatingsInfoOk returns a tuple with the RoomRatingsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomRatingsRequest) GetRoomRatingsInfoOk() ([]RoomRatingInfoType, bool) {
	if o == nil || IsNil(o.RoomRatingsInfo) {
		return nil, false
	}
	return o.RoomRatingsInfo, true
}

// HasRoomRatingsInfo returns a boolean if a field has been set.
func (o *PutRoomRatingsRequest) HasRoomRatingsInfo() bool {
	if o != nil && !IsNil(o.RoomRatingsInfo) {
		return true
	}

	return false
}

// SetRoomRatingsInfo gets a reference to the given []RoomRatingInfoType and assigns it to the RoomRatingsInfo field.
func (o *PutRoomRatingsRequest) SetRoomRatingsInfo(v []RoomRatingInfoType) {
	o.RoomRatingsInfo = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutRoomRatingsRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomRatingsRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutRoomRatingsRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PutRoomRatingsRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PutRoomRatingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutRoomRatingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.RoomRatingsInfo) {
		toSerialize["roomRatingsInfo"] = o.RoomRatingsInfo
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutRoomRatingsRequest struct {
	value *PutRoomRatingsRequest
	isSet bool
}

func (v NullablePutRoomRatingsRequest) Get() *PutRoomRatingsRequest {
	return v.value
}

func (v *NullablePutRoomRatingsRequest) Set(val *PutRoomRatingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutRoomRatingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutRoomRatingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutRoomRatingsRequest(val *PutRoomRatingsRequest) *NullablePutRoomRatingsRequest {
	return &NullablePutRoomRatingsRequest{value: val, isSet: true}
}

func (v NullablePutRoomRatingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutRoomRatingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


