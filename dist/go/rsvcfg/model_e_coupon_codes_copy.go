/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the ECouponCodesCopy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ECouponCodesCopy{}

// ECouponCodesCopy Request object to copy the existing eCoupon codes from source property to the selected target properties.
type ECouponCodesCopy struct {
	ECouponCopy *ECouponCopyType `json:"eCouponCopy,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewECouponCodesCopy instantiates a new ECouponCodesCopy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewECouponCodesCopy() *ECouponCodesCopy {
	this := ECouponCodesCopy{}
	return &this
}

// NewECouponCodesCopyWithDefaults instantiates a new ECouponCodesCopy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewECouponCodesCopyWithDefaults() *ECouponCodesCopy {
	this := ECouponCodesCopy{}
	return &this
}

// GetECouponCopy returns the ECouponCopy field value if set, zero value otherwise.
func (o *ECouponCodesCopy) GetECouponCopy() ECouponCopyType {
	if o == nil || IsNil(o.ECouponCopy) {
		var ret ECouponCopyType
		return ret
	}
	return *o.ECouponCopy
}

// GetECouponCopyOk returns a tuple with the ECouponCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECouponCodesCopy) GetECouponCopyOk() (*ECouponCopyType, bool) {
	if o == nil || IsNil(o.ECouponCopy) {
		return nil, false
	}
	return o.ECouponCopy, true
}

// HasECouponCopy returns a boolean if a field has been set.
func (o *ECouponCodesCopy) HasECouponCopy() bool {
	if o != nil && !IsNil(o.ECouponCopy) {
		return true
	}

	return false
}

// SetECouponCopy gets a reference to the given ECouponCopyType and assigns it to the ECouponCopy field.
func (o *ECouponCodesCopy) SetECouponCopy(v ECouponCopyType) {
	o.ECouponCopy = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ECouponCodesCopy) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECouponCodesCopy) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ECouponCodesCopy) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *ECouponCodesCopy) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ECouponCodesCopy) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ECouponCodesCopy) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ECouponCodesCopy) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ECouponCodesCopy) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ECouponCodesCopy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ECouponCodesCopy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ECouponCopy) {
		toSerialize["eCouponCopy"] = o.ECouponCopy
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableECouponCodesCopy struct {
	value *ECouponCodesCopy
	isSet bool
}

func (v NullableECouponCodesCopy) Get() *ECouponCodesCopy {
	return v.value
}

func (v *NullableECouponCodesCopy) Set(val *ECouponCodesCopy) {
	v.value = val
	v.isSet = true
}

func (v NullableECouponCodesCopy) IsSet() bool {
	return v.isSet
}

func (v *NullableECouponCodesCopy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableECouponCodesCopy(val *ECouponCodesCopy) *NullableECouponCodesCopy {
	return &NullableECouponCodesCopy{value: val, isSet: true}
}

func (v NullableECouponCodesCopy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableECouponCodesCopy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


