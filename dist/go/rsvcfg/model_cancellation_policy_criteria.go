/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the CancellationPolicyCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancellationPolicyCriteria{}

// CancellationPolicyCriteria Request object that holds the details of Cancellation Policy to be created.
type CancellationPolicyCriteria struct {
	CancelPenalty *HotelConfigCancelPenaltiesType `json:"cancelPenalty,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCancellationPolicyCriteria instantiates a new CancellationPolicyCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancellationPolicyCriteria() *CancellationPolicyCriteria {
	this := CancellationPolicyCriteria{}
	return &this
}

// NewCancellationPolicyCriteriaWithDefaults instantiates a new CancellationPolicyCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancellationPolicyCriteriaWithDefaults() *CancellationPolicyCriteria {
	this := CancellationPolicyCriteria{}
	return &this
}

// GetCancelPenalty returns the CancelPenalty field value if set, zero value otherwise.
func (o *CancellationPolicyCriteria) GetCancelPenalty() HotelConfigCancelPenaltiesType {
	if o == nil || IsNil(o.CancelPenalty) {
		var ret HotelConfigCancelPenaltiesType
		return ret
	}
	return *o.CancelPenalty
}

// GetCancelPenaltyOk returns a tuple with the CancelPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationPolicyCriteria) GetCancelPenaltyOk() (*HotelConfigCancelPenaltiesType, bool) {
	if o == nil || IsNil(o.CancelPenalty) {
		return nil, false
	}
	return o.CancelPenalty, true
}

// HasCancelPenalty returns a boolean if a field has been set.
func (o *CancellationPolicyCriteria) HasCancelPenalty() bool {
	if o != nil && !IsNil(o.CancelPenalty) {
		return true
	}

	return false
}

// SetCancelPenalty gets a reference to the given HotelConfigCancelPenaltiesType and assigns it to the CancelPenalty field.
func (o *CancellationPolicyCriteria) SetCancelPenalty(v HotelConfigCancelPenaltiesType) {
	o.CancelPenalty = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CancellationPolicyCriteria) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationPolicyCriteria) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CancellationPolicyCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CancellationPolicyCriteria) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CancellationPolicyCriteria) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancellationPolicyCriteria) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CancellationPolicyCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CancellationPolicyCriteria) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CancellationPolicyCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancellationPolicyCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CancelPenalty) {
		toSerialize["cancelPenalty"] = o.CancelPenalty
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCancellationPolicyCriteria struct {
	value *CancellationPolicyCriteria
	isSet bool
}

func (v NullableCancellationPolicyCriteria) Get() *CancellationPolicyCriteria {
	return v.value
}

func (v *NullableCancellationPolicyCriteria) Set(val *CancellationPolicyCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCancellationPolicyCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCancellationPolicyCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancellationPolicyCriteria(val *CancellationPolicyCriteria) *NullableCancellationPolicyCriteria {
	return &NullableCancellationPolicyCriteria{value: val, isSet: true}
}

func (v NullableCancellationPolicyCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancellationPolicyCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


