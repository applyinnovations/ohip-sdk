/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the GuaranteeCodesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuaranteeCodesType{}

// GuaranteeCodesType The Collection of Guarantee Codes Type.
type GuaranteeCodesType struct {
	// Guarantee Code details.
	GuaranteeCode []GuaranteeConfigType `json:"guaranteeCode,omitempty"`
	// Hotel code for fetched template Guarantee Codes.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewGuaranteeCodesType instantiates a new GuaranteeCodesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuaranteeCodesType() *GuaranteeCodesType {
	this := GuaranteeCodesType{}
	return &this
}

// NewGuaranteeCodesTypeWithDefaults instantiates a new GuaranteeCodesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuaranteeCodesTypeWithDefaults() *GuaranteeCodesType {
	this := GuaranteeCodesType{}
	return &this
}

// GetGuaranteeCode returns the GuaranteeCode field value if set, zero value otherwise.
func (o *GuaranteeCodesType) GetGuaranteeCode() []GuaranteeConfigType {
	if o == nil || IsNil(o.GuaranteeCode) {
		var ret []GuaranteeConfigType
		return ret
	}
	return o.GuaranteeCode
}

// GetGuaranteeCodeOk returns a tuple with the GuaranteeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeCodesType) GetGuaranteeCodeOk() ([]GuaranteeConfigType, bool) {
	if o == nil || IsNil(o.GuaranteeCode) {
		return nil, false
	}
	return o.GuaranteeCode, true
}

// HasGuaranteeCode returns a boolean if a field has been set.
func (o *GuaranteeCodesType) HasGuaranteeCode() bool {
	if o != nil && !IsNil(o.GuaranteeCode) {
		return true
	}

	return false
}

// SetGuaranteeCode gets a reference to the given []GuaranteeConfigType and assigns it to the GuaranteeCode field.
func (o *GuaranteeCodesType) SetGuaranteeCode(v []GuaranteeConfigType) {
	o.GuaranteeCode = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *GuaranteeCodesType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeCodesType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *GuaranteeCodesType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *GuaranteeCodesType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o GuaranteeCodesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuaranteeCodesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuaranteeCode) {
		toSerialize["guaranteeCode"] = o.GuaranteeCode
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableGuaranteeCodesType struct {
	value *GuaranteeCodesType
	isSet bool
}

func (v NullableGuaranteeCodesType) Get() *GuaranteeCodesType {
	return v.value
}

func (v *NullableGuaranteeCodesType) Set(val *GuaranteeCodesType) {
	v.value = val
	v.isSet = true
}

func (v NullableGuaranteeCodesType) IsSet() bool {
	return v.isSet
}

func (v *NullableGuaranteeCodesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuaranteeCodesType(val *GuaranteeCodesType) *NullableGuaranteeCodesType {
	return &NullableGuaranteeCodesType{value: val, isSet: true}
}

func (v NullableGuaranteeCodesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuaranteeCodesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


