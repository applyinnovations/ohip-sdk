/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the CopyServiceRequestCodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyServiceRequestCodes{}

// CopyServiceRequestCodes struct for CopyServiceRequestCodes
type CopyServiceRequestCodes struct {
	Links []InstanceLink `json:"links,omitempty"`
	// List of the template service request code(s) to be copied.
	ServiceRequestCodes []CopyConfigurationCodeType `json:"serviceRequestCodes,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCopyServiceRequestCodes instantiates a new CopyServiceRequestCodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyServiceRequestCodes() *CopyServiceRequestCodes {
	this := CopyServiceRequestCodes{}
	return &this
}

// NewCopyServiceRequestCodesWithDefaults instantiates a new CopyServiceRequestCodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyServiceRequestCodesWithDefaults() *CopyServiceRequestCodes {
	this := CopyServiceRequestCodes{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CopyServiceRequestCodes) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyServiceRequestCodes) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CopyServiceRequestCodes) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CopyServiceRequestCodes) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetServiceRequestCodes returns the ServiceRequestCodes field value if set, zero value otherwise.
func (o *CopyServiceRequestCodes) GetServiceRequestCodes() []CopyConfigurationCodeType {
	if o == nil || IsNil(o.ServiceRequestCodes) {
		var ret []CopyConfigurationCodeType
		return ret
	}
	return o.ServiceRequestCodes
}

// GetServiceRequestCodesOk returns a tuple with the ServiceRequestCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyServiceRequestCodes) GetServiceRequestCodesOk() ([]CopyConfigurationCodeType, bool) {
	if o == nil || IsNil(o.ServiceRequestCodes) {
		return nil, false
	}
	return o.ServiceRequestCodes, true
}

// HasServiceRequestCodes returns a boolean if a field has been set.
func (o *CopyServiceRequestCodes) HasServiceRequestCodes() bool {
	if o != nil && !IsNil(o.ServiceRequestCodes) {
		return true
	}

	return false
}

// SetServiceRequestCodes gets a reference to the given []CopyConfigurationCodeType and assigns it to the ServiceRequestCodes field.
func (o *CopyServiceRequestCodes) SetServiceRequestCodes(v []CopyConfigurationCodeType) {
	o.ServiceRequestCodes = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CopyServiceRequestCodes) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyServiceRequestCodes) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CopyServiceRequestCodes) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CopyServiceRequestCodes) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CopyServiceRequestCodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyServiceRequestCodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ServiceRequestCodes) {
		toSerialize["serviceRequestCodes"] = o.ServiceRequestCodes
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCopyServiceRequestCodes struct {
	value *CopyServiceRequestCodes
	isSet bool
}

func (v NullableCopyServiceRequestCodes) Get() *CopyServiceRequestCodes {
	return v.value
}

func (v *NullableCopyServiceRequestCodes) Set(val *CopyServiceRequestCodes) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyServiceRequestCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyServiceRequestCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyServiceRequestCodes(val *CopyServiceRequestCodes) *NullableCopyServiceRequestCodes {
	return &NullableCopyServiceRequestCodes{value: val, isSet: true}
}

func (v NullableCopyServiceRequestCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyServiceRequestCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


