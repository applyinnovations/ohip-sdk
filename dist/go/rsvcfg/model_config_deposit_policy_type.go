/*
OPERA Cloud Reservation Master Data Management API

APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsvcfg

import (
	"encoding/json"
)

// checks if the ConfigDepositPolicyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigDepositPolicyType{}

// ConfigDepositPolicyType Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.
type ConfigDepositPolicyType struct {
	AmountPercent *PolicyAmountPercentType `json:"amountPercent,omitempty"`
	Deadline *PolicyDeadlineType `json:"deadline,omitempty"`
	// Text description of the Payment in a given language.
	Description *string `json:"description,omitempty"`
	// Receipt number associated with the deposit policy
	DepositReceiptNo *int32 `json:"depositReceiptNo,omitempty"`
	// Transaction Date associated with the deposit policy
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Flag to indicate if deposit policy is reversed
	DepositReqReversed *bool `json:"depositReqReversed,omitempty"`
	// Formatted Text Rule of the deposit policy.
	FormattedRule *string `json:"formattedRule,omitempty"`
	TypeOfCharges *DepositCancelRevenueType `json:"typeOfCharges,omitempty"`
	// Deposit Policy Code
	PolicyCode *string `json:"policyCode,omitempty"`
	// Flag to indicate if the cancellation policy is manual.
	Manual *bool `json:"manual,omitempty"`
	// The sequence number that determines the position of this rule in the Deposit or Cancellation rules LOV.
	Sequence *int32 `json:"sequence,omitempty"`
	// Inactive rules are no longer available for attachment to rate codes, reservation types or reservations; however, they are still recorded in the database for historical purposes.
	Inactive *bool `json:"inactive,omitempty"`
}

// NewConfigDepositPolicyType instantiates a new ConfigDepositPolicyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigDepositPolicyType() *ConfigDepositPolicyType {
	this := ConfigDepositPolicyType{}
	return &this
}

// NewConfigDepositPolicyTypeWithDefaults instantiates a new ConfigDepositPolicyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigDepositPolicyTypeWithDefaults() *ConfigDepositPolicyType {
	this := ConfigDepositPolicyType{}
	return &this
}

// GetAmountPercent returns the AmountPercent field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetAmountPercent() PolicyAmountPercentType {
	if o == nil || IsNil(o.AmountPercent) {
		var ret PolicyAmountPercentType
		return ret
	}
	return *o.AmountPercent
}

// GetAmountPercentOk returns a tuple with the AmountPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetAmountPercentOk() (*PolicyAmountPercentType, bool) {
	if o == nil || IsNil(o.AmountPercent) {
		return nil, false
	}
	return o.AmountPercent, true
}

// HasAmountPercent returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasAmountPercent() bool {
	if o != nil && !IsNil(o.AmountPercent) {
		return true
	}

	return false
}

// SetAmountPercent gets a reference to the given PolicyAmountPercentType and assigns it to the AmountPercent field.
func (o *ConfigDepositPolicyType) SetAmountPercent(v PolicyAmountPercentType) {
	o.AmountPercent = &v
}

// GetDeadline returns the Deadline field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetDeadline() PolicyDeadlineType {
	if o == nil || IsNil(o.Deadline) {
		var ret PolicyDeadlineType
		return ret
	}
	return *o.Deadline
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetDeadlineOk() (*PolicyDeadlineType, bool) {
	if o == nil || IsNil(o.Deadline) {
		return nil, false
	}
	return o.Deadline, true
}

// HasDeadline returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasDeadline() bool {
	if o != nil && !IsNil(o.Deadline) {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given PolicyDeadlineType and assigns it to the Deadline field.
func (o *ConfigDepositPolicyType) SetDeadline(v PolicyDeadlineType) {
	o.Deadline = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigDepositPolicyType) SetDescription(v string) {
	o.Description = &v
}

// GetDepositReceiptNo returns the DepositReceiptNo field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetDepositReceiptNo() int32 {
	if o == nil || IsNil(o.DepositReceiptNo) {
		var ret int32
		return ret
	}
	return *o.DepositReceiptNo
}

// GetDepositReceiptNoOk returns a tuple with the DepositReceiptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetDepositReceiptNoOk() (*int32, bool) {
	if o == nil || IsNil(o.DepositReceiptNo) {
		return nil, false
	}
	return o.DepositReceiptNo, true
}

// HasDepositReceiptNo returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasDepositReceiptNo() bool {
	if o != nil && !IsNil(o.DepositReceiptNo) {
		return true
	}

	return false
}

// SetDepositReceiptNo gets a reference to the given int32 and assigns it to the DepositReceiptNo field.
func (o *ConfigDepositPolicyType) SetDepositReceiptNo(v int32) {
	o.DepositReceiptNo = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *ConfigDepositPolicyType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetDepositReqReversed returns the DepositReqReversed field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetDepositReqReversed() bool {
	if o == nil || IsNil(o.DepositReqReversed) {
		var ret bool
		return ret
	}
	return *o.DepositReqReversed
}

// GetDepositReqReversedOk returns a tuple with the DepositReqReversed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetDepositReqReversedOk() (*bool, bool) {
	if o == nil || IsNil(o.DepositReqReversed) {
		return nil, false
	}
	return o.DepositReqReversed, true
}

// HasDepositReqReversed returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasDepositReqReversed() bool {
	if o != nil && !IsNil(o.DepositReqReversed) {
		return true
	}

	return false
}

// SetDepositReqReversed gets a reference to the given bool and assigns it to the DepositReqReversed field.
func (o *ConfigDepositPolicyType) SetDepositReqReversed(v bool) {
	o.DepositReqReversed = &v
}

// GetFormattedRule returns the FormattedRule field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetFormattedRule() string {
	if o == nil || IsNil(o.FormattedRule) {
		var ret string
		return ret
	}
	return *o.FormattedRule
}

// GetFormattedRuleOk returns a tuple with the FormattedRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetFormattedRuleOk() (*string, bool) {
	if o == nil || IsNil(o.FormattedRule) {
		return nil, false
	}
	return o.FormattedRule, true
}

// HasFormattedRule returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasFormattedRule() bool {
	if o != nil && !IsNil(o.FormattedRule) {
		return true
	}

	return false
}

// SetFormattedRule gets a reference to the given string and assigns it to the FormattedRule field.
func (o *ConfigDepositPolicyType) SetFormattedRule(v string) {
	o.FormattedRule = &v
}

// GetTypeOfCharges returns the TypeOfCharges field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetTypeOfCharges() DepositCancelRevenueType {
	if o == nil || IsNil(o.TypeOfCharges) {
		var ret DepositCancelRevenueType
		return ret
	}
	return *o.TypeOfCharges
}

// GetTypeOfChargesOk returns a tuple with the TypeOfCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetTypeOfChargesOk() (*DepositCancelRevenueType, bool) {
	if o == nil || IsNil(o.TypeOfCharges) {
		return nil, false
	}
	return o.TypeOfCharges, true
}

// HasTypeOfCharges returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasTypeOfCharges() bool {
	if o != nil && !IsNil(o.TypeOfCharges) {
		return true
	}

	return false
}

// SetTypeOfCharges gets a reference to the given DepositCancelRevenueType and assigns it to the TypeOfCharges field.
func (o *ConfigDepositPolicyType) SetTypeOfCharges(v DepositCancelRevenueType) {
	o.TypeOfCharges = &v
}

// GetPolicyCode returns the PolicyCode field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetPolicyCode() string {
	if o == nil || IsNil(o.PolicyCode) {
		var ret string
		return ret
	}
	return *o.PolicyCode
}

// GetPolicyCodeOk returns a tuple with the PolicyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetPolicyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyCode) {
		return nil, false
	}
	return o.PolicyCode, true
}

// HasPolicyCode returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasPolicyCode() bool {
	if o != nil && !IsNil(o.PolicyCode) {
		return true
	}

	return false
}

// SetPolicyCode gets a reference to the given string and assigns it to the PolicyCode field.
func (o *ConfigDepositPolicyType) SetPolicyCode(v string) {
	o.PolicyCode = &v
}

// GetManual returns the Manual field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetManual() bool {
	if o == nil || IsNil(o.Manual) {
		var ret bool
		return ret
	}
	return *o.Manual
}

// GetManualOk returns a tuple with the Manual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetManualOk() (*bool, bool) {
	if o == nil || IsNil(o.Manual) {
		return nil, false
	}
	return o.Manual, true
}

// HasManual returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasManual() bool {
	if o != nil && !IsNil(o.Manual) {
		return true
	}

	return false
}

// SetManual gets a reference to the given bool and assigns it to the Manual field.
func (o *ConfigDepositPolicyType) SetManual(v bool) {
	o.Manual = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ConfigDepositPolicyType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *ConfigDepositPolicyType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigDepositPolicyType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *ConfigDepositPolicyType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *ConfigDepositPolicyType) SetInactive(v bool) {
	o.Inactive = &v
}

func (o ConfigDepositPolicyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigDepositPolicyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountPercent) {
		toSerialize["amountPercent"] = o.AmountPercent
	}
	if !IsNil(o.Deadline) {
		toSerialize["deadline"] = o.Deadline
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DepositReceiptNo) {
		toSerialize["depositReceiptNo"] = o.DepositReceiptNo
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.DepositReqReversed) {
		toSerialize["depositReqReversed"] = o.DepositReqReversed
	}
	if !IsNil(o.FormattedRule) {
		toSerialize["formattedRule"] = o.FormattedRule
	}
	if !IsNil(o.TypeOfCharges) {
		toSerialize["typeOfCharges"] = o.TypeOfCharges
	}
	if !IsNil(o.PolicyCode) {
		toSerialize["policyCode"] = o.PolicyCode
	}
	if !IsNil(o.Manual) {
		toSerialize["manual"] = o.Manual
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	return toSerialize, nil
}

type NullableConfigDepositPolicyType struct {
	value *ConfigDepositPolicyType
	isSet bool
}

func (v NullableConfigDepositPolicyType) Get() *ConfigDepositPolicyType {
	return v.value
}

func (v *NullableConfigDepositPolicyType) Set(val *ConfigDepositPolicyType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigDepositPolicyType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigDepositPolicyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigDepositPolicyType(val *ConfigDepositPolicyType) *NullableConfigDepositPolicyType {
	return &NullableConfigDepositPolicyType{value: val, isSet: true}
}

func (v NullableConfigDepositPolicyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigDepositPolicyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


