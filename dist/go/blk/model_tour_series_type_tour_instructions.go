/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the TourSeriesTypeTourInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TourSeriesTypeTourInstructions{}

// TourSeriesTypeTourInstructions Instructions which will be considered when creating the tour series from a source block. If this element is not sent, all the flags will be assumed to be ignored.
type TourSeriesTypeTourInstructions struct {
	// When true, this will adjust the decision and followup date on the tour series blocks to the same offset as the source block.
	AdjustDecisionAndFollowupDate *bool `json:"adjustDecisionAndFollowupDate,omitempty"`
	// When true, this will copy the source block's comments to the tour series blocks.
	BlockComments *bool `json:"blockComments,omitempty"`
	// When true, this will copy the source block's complimentary information to the tour series blocks.
	ComplimentaryInfo *bool `json:"complimentaryInfo,omitempty"`
	// When true, this will copy the source block's contract billing information to the tour series blocks.
	ContractBilling *bool `json:"contractBilling,omitempty"`
	// When true, this will copy the source block's event comments to the events of the tour series blocks.
	EventComments *bool `json:"eventComments,omitempty"`
	// When true, this will copy the source block's events to the tour series blocks.
	Events *bool `json:"events,omitempty"`
	// When true, this will copy the source block's group profile to the tour series blocks.
	GroupProfile *bool `json:"groupProfile,omitempty"`
	// When true, this will copy the source block's rate codes to the tour series blocks.
	Rates *bool `json:"rates,omitempty"`
	// When true, this will copy the source block's resource comments to the resources of the tour series blocks.
	ResourceComments *bool `json:"resourceComments,omitempty"`
	// When true, this will copy the source block's resources to the tour series blocks.
	Resources *bool `json:"resources,omitempty"`
	// When true, this will copy the source block's room allocation to the tour series blocks.
	Rooms *bool `json:"rooms,omitempty"`
}

// NewTourSeriesTypeTourInstructions instantiates a new TourSeriesTypeTourInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTourSeriesTypeTourInstructions() *TourSeriesTypeTourInstructions {
	this := TourSeriesTypeTourInstructions{}
	return &this
}

// NewTourSeriesTypeTourInstructionsWithDefaults instantiates a new TourSeriesTypeTourInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTourSeriesTypeTourInstructionsWithDefaults() *TourSeriesTypeTourInstructions {
	this := TourSeriesTypeTourInstructions{}
	return &this
}

// GetAdjustDecisionAndFollowupDate returns the AdjustDecisionAndFollowupDate field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetAdjustDecisionAndFollowupDate() bool {
	if o == nil || IsNil(o.AdjustDecisionAndFollowupDate) {
		var ret bool
		return ret
	}
	return *o.AdjustDecisionAndFollowupDate
}

// GetAdjustDecisionAndFollowupDateOk returns a tuple with the AdjustDecisionAndFollowupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetAdjustDecisionAndFollowupDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AdjustDecisionAndFollowupDate) {
		return nil, false
	}
	return o.AdjustDecisionAndFollowupDate, true
}

// HasAdjustDecisionAndFollowupDate returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasAdjustDecisionAndFollowupDate() bool {
	if o != nil && !IsNil(o.AdjustDecisionAndFollowupDate) {
		return true
	}

	return false
}

// SetAdjustDecisionAndFollowupDate gets a reference to the given bool and assigns it to the AdjustDecisionAndFollowupDate field.
func (o *TourSeriesTypeTourInstructions) SetAdjustDecisionAndFollowupDate(v bool) {
	o.AdjustDecisionAndFollowupDate = &v
}

// GetBlockComments returns the BlockComments field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetBlockComments() bool {
	if o == nil || IsNil(o.BlockComments) {
		var ret bool
		return ret
	}
	return *o.BlockComments
}

// GetBlockCommentsOk returns a tuple with the BlockComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetBlockCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockComments) {
		return nil, false
	}
	return o.BlockComments, true
}

// HasBlockComments returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasBlockComments() bool {
	if o != nil && !IsNil(o.BlockComments) {
		return true
	}

	return false
}

// SetBlockComments gets a reference to the given bool and assigns it to the BlockComments field.
func (o *TourSeriesTypeTourInstructions) SetBlockComments(v bool) {
	o.BlockComments = &v
}

// GetComplimentaryInfo returns the ComplimentaryInfo field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetComplimentaryInfo() bool {
	if o == nil || IsNil(o.ComplimentaryInfo) {
		var ret bool
		return ret
	}
	return *o.ComplimentaryInfo
}

// GetComplimentaryInfoOk returns a tuple with the ComplimentaryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetComplimentaryInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.ComplimentaryInfo) {
		return nil, false
	}
	return o.ComplimentaryInfo, true
}

// HasComplimentaryInfo returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasComplimentaryInfo() bool {
	if o != nil && !IsNil(o.ComplimentaryInfo) {
		return true
	}

	return false
}

// SetComplimentaryInfo gets a reference to the given bool and assigns it to the ComplimentaryInfo field.
func (o *TourSeriesTypeTourInstructions) SetComplimentaryInfo(v bool) {
	o.ComplimentaryInfo = &v
}

// GetContractBilling returns the ContractBilling field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetContractBilling() bool {
	if o == nil || IsNil(o.ContractBilling) {
		var ret bool
		return ret
	}
	return *o.ContractBilling
}

// GetContractBillingOk returns a tuple with the ContractBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetContractBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.ContractBilling) {
		return nil, false
	}
	return o.ContractBilling, true
}

// HasContractBilling returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasContractBilling() bool {
	if o != nil && !IsNil(o.ContractBilling) {
		return true
	}

	return false
}

// SetContractBilling gets a reference to the given bool and assigns it to the ContractBilling field.
func (o *TourSeriesTypeTourInstructions) SetContractBilling(v bool) {
	o.ContractBilling = &v
}

// GetEventComments returns the EventComments field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetEventComments() bool {
	if o == nil || IsNil(o.EventComments) {
		var ret bool
		return ret
	}
	return *o.EventComments
}

// GetEventCommentsOk returns a tuple with the EventComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetEventCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EventComments) {
		return nil, false
	}
	return o.EventComments, true
}

// HasEventComments returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasEventComments() bool {
	if o != nil && !IsNil(o.EventComments) {
		return true
	}

	return false
}

// SetEventComments gets a reference to the given bool and assigns it to the EventComments field.
func (o *TourSeriesTypeTourInstructions) SetEventComments(v bool) {
	o.EventComments = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetEvents() bool {
	if o == nil || IsNil(o.Events) {
		var ret bool
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given bool and assigns it to the Events field.
func (o *TourSeriesTypeTourInstructions) SetEvents(v bool) {
	o.Events = &v
}

// GetGroupProfile returns the GroupProfile field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetGroupProfile() bool {
	if o == nil || IsNil(o.GroupProfile) {
		var ret bool
		return ret
	}
	return *o.GroupProfile
}

// GetGroupProfileOk returns a tuple with the GroupProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetGroupProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.GroupProfile) {
		return nil, false
	}
	return o.GroupProfile, true
}

// HasGroupProfile returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasGroupProfile() bool {
	if o != nil && !IsNil(o.GroupProfile) {
		return true
	}

	return false
}

// SetGroupProfile gets a reference to the given bool and assigns it to the GroupProfile field.
func (o *TourSeriesTypeTourInstructions) SetGroupProfile(v bool) {
	o.GroupProfile = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetRates() bool {
	if o == nil || IsNil(o.Rates) {
		var ret bool
		return ret
	}
	return *o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetRatesOk() (*bool, bool) {
	if o == nil || IsNil(o.Rates) {
		return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasRates() bool {
	if o != nil && !IsNil(o.Rates) {
		return true
	}

	return false
}

// SetRates gets a reference to the given bool and assigns it to the Rates field.
func (o *TourSeriesTypeTourInstructions) SetRates(v bool) {
	o.Rates = &v
}

// GetResourceComments returns the ResourceComments field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetResourceComments() bool {
	if o == nil || IsNil(o.ResourceComments) {
		var ret bool
		return ret
	}
	return *o.ResourceComments
}

// GetResourceCommentsOk returns a tuple with the ResourceComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetResourceCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResourceComments) {
		return nil, false
	}
	return o.ResourceComments, true
}

// HasResourceComments returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasResourceComments() bool {
	if o != nil && !IsNil(o.ResourceComments) {
		return true
	}

	return false
}

// SetResourceComments gets a reference to the given bool and assigns it to the ResourceComments field.
func (o *TourSeriesTypeTourInstructions) SetResourceComments(v bool) {
	o.ResourceComments = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetResources() bool {
	if o == nil || IsNil(o.Resources) {
		var ret bool
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetResourcesOk() (*bool, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given bool and assigns it to the Resources field.
func (o *TourSeriesTypeTourInstructions) SetResources(v bool) {
	o.Resources = &v
}

// GetRooms returns the Rooms field value if set, zero value otherwise.
func (o *TourSeriesTypeTourInstructions) GetRooms() bool {
	if o == nil || IsNil(o.Rooms) {
		var ret bool
		return ret
	}
	return *o.Rooms
}

// GetRoomsOk returns a tuple with the Rooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TourSeriesTypeTourInstructions) GetRoomsOk() (*bool, bool) {
	if o == nil || IsNil(o.Rooms) {
		return nil, false
	}
	return o.Rooms, true
}

// HasRooms returns a boolean if a field has been set.
func (o *TourSeriesTypeTourInstructions) HasRooms() bool {
	if o != nil && !IsNil(o.Rooms) {
		return true
	}

	return false
}

// SetRooms gets a reference to the given bool and assigns it to the Rooms field.
func (o *TourSeriesTypeTourInstructions) SetRooms(v bool) {
	o.Rooms = &v
}

func (o TourSeriesTypeTourInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TourSeriesTypeTourInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjustDecisionAndFollowupDate) {
		toSerialize["adjustDecisionAndFollowupDate"] = o.AdjustDecisionAndFollowupDate
	}
	if !IsNil(o.BlockComments) {
		toSerialize["blockComments"] = o.BlockComments
	}
	if !IsNil(o.ComplimentaryInfo) {
		toSerialize["complimentaryInfo"] = o.ComplimentaryInfo
	}
	if !IsNil(o.ContractBilling) {
		toSerialize["contractBilling"] = o.ContractBilling
	}
	if !IsNil(o.EventComments) {
		toSerialize["eventComments"] = o.EventComments
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.GroupProfile) {
		toSerialize["groupProfile"] = o.GroupProfile
	}
	if !IsNil(o.Rates) {
		toSerialize["rates"] = o.Rates
	}
	if !IsNil(o.ResourceComments) {
		toSerialize["resourceComments"] = o.ResourceComments
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Rooms) {
		toSerialize["rooms"] = o.Rooms
	}
	return toSerialize, nil
}

type NullableTourSeriesTypeTourInstructions struct {
	value *TourSeriesTypeTourInstructions
	isSet bool
}

func (v NullableTourSeriesTypeTourInstructions) Get() *TourSeriesTypeTourInstructions {
	return v.value
}

func (v *NullableTourSeriesTypeTourInstructions) Set(val *TourSeriesTypeTourInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableTourSeriesTypeTourInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableTourSeriesTypeTourInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTourSeriesTypeTourInstructions(val *TourSeriesTypeTourInstructions) *NullableTourSeriesTypeTourInstructions {
	return &NullableTourSeriesTypeTourInstructions{value: val, isSet: true}
}

func (v NullableTourSeriesTypeTourInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTourSeriesTypeTourInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


