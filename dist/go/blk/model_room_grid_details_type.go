/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the RoomGridDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomGridDetailsType{}

// RoomGridDetailsType Indicates the values of room inventory or rate amount per room type.
type RoomGridDetailsType struct {
	// Indicates the Generic Room Type (Room Pool) the Room Type belongs to.
	GenericRoomType *string `json:"genericRoomType,omitempty"`
	Inventory *BlockGridInvType `json:"inventory,omitempty"`
	Rate *BlockGridRatesType `json:"rate,omitempty"`
	// Indicates the room type for which the inventory or rate values are applicable.
	RoomType *string `json:"roomType,omitempty"`
}

// NewRoomGridDetailsType instantiates a new RoomGridDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomGridDetailsType() *RoomGridDetailsType {
	this := RoomGridDetailsType{}
	return &this
}

// NewRoomGridDetailsTypeWithDefaults instantiates a new RoomGridDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomGridDetailsTypeWithDefaults() *RoomGridDetailsType {
	this := RoomGridDetailsType{}
	return &this
}

// GetGenericRoomType returns the GenericRoomType field value if set, zero value otherwise.
func (o *RoomGridDetailsType) GetGenericRoomType() string {
	if o == nil || IsNil(o.GenericRoomType) {
		var ret string
		return ret
	}
	return *o.GenericRoomType
}

// GetGenericRoomTypeOk returns a tuple with the GenericRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGridDetailsType) GetGenericRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GenericRoomType) {
		return nil, false
	}
	return o.GenericRoomType, true
}

// HasGenericRoomType returns a boolean if a field has been set.
func (o *RoomGridDetailsType) HasGenericRoomType() bool {
	if o != nil && !IsNil(o.GenericRoomType) {
		return true
	}

	return false
}

// SetGenericRoomType gets a reference to the given string and assigns it to the GenericRoomType field.
func (o *RoomGridDetailsType) SetGenericRoomType(v string) {
	o.GenericRoomType = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *RoomGridDetailsType) GetInventory() BlockGridInvType {
	if o == nil || IsNil(o.Inventory) {
		var ret BlockGridInvType
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGridDetailsType) GetInventoryOk() (*BlockGridInvType, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *RoomGridDetailsType) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given BlockGridInvType and assigns it to the Inventory field.
func (o *RoomGridDetailsType) SetInventory(v BlockGridInvType) {
	o.Inventory = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *RoomGridDetailsType) GetRate() BlockGridRatesType {
	if o == nil || IsNil(o.Rate) {
		var ret BlockGridRatesType
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGridDetailsType) GetRateOk() (*BlockGridRatesType, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *RoomGridDetailsType) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given BlockGridRatesType and assigns it to the Rate field.
func (o *RoomGridDetailsType) SetRate(v BlockGridRatesType) {
	o.Rate = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *RoomGridDetailsType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomGridDetailsType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *RoomGridDetailsType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *RoomGridDetailsType) SetRoomType(v string) {
	o.RoomType = &v
}

func (o RoomGridDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomGridDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GenericRoomType) {
		toSerialize["genericRoomType"] = o.GenericRoomType
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	return toSerialize, nil
}

type NullableRoomGridDetailsType struct {
	value *RoomGridDetailsType
	isSet bool
}

func (v NullableRoomGridDetailsType) Get() *RoomGridDetailsType {
	return v.value
}

func (v *NullableRoomGridDetailsType) Set(val *RoomGridDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomGridDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomGridDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomGridDetailsType(val *RoomGridDetailsType) *NullableRoomGridDetailsType {
	return &NullableRoomGridDetailsType{value: val, isSet: true}
}

func (v NullableRoomGridDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomGridDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


