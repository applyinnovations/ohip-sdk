/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockInstructionTypeBlockSecurity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockInstructionTypeBlockSecurity{}

// BlockInstructionTypeBlockSecurity Block security information used for an external system. Only available if configured in OPERA Cloud.
type BlockInstructionTypeBlockSecurity struct {
	// Number of days before the arrival date a reservation can be canceled without losing the deposit.
	AdvanceCancelDays *float32 `json:"advanceCancelDays,omitempty"`
	// All Description DD Secured.
	AllDescriptionDDSecured *bool `json:"allDescriptionDDSecured,omitempty"`
	// Determines if Travel Agent commission will be paid on reservations booked through the HOLIDEX Plus TACP program.
	CommissionableYn *bool `json:"commissionableYn,omitempty"`
	// Number of Days Deposit due to guarantee the guest booking.
	DaysDepositRequired *float32 `json:"daysDepositRequired,omitempty"`
	// Housing Information Secured.
	HousingInformationSecured *bool `json:"housingInformationSecured,omitempty"`
	// Rates Secured from All Displays.
	RatesSecuredfromAllDisplays *bool `json:"ratesSecuredfromAllDisplays,omitempty"`
	// Rates Secured from GNR.
	RatesSecuredfromGNR *bool `json:"ratesSecuredfromGNR,omitempty"`
	// Return One Day at a time.
	ReturnOneDayAtTimeYn *bool `json:"returnOneDayAtTimeYn,omitempty"`
	// Secured from DI Display.
	SecuredFromDIdisplayYn *bool `json:"securedFromDIdisplayYn,omitempty"`
}

// NewBlockInstructionTypeBlockSecurity instantiates a new BlockInstructionTypeBlockSecurity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockInstructionTypeBlockSecurity() *BlockInstructionTypeBlockSecurity {
	this := BlockInstructionTypeBlockSecurity{}
	return &this
}

// NewBlockInstructionTypeBlockSecurityWithDefaults instantiates a new BlockInstructionTypeBlockSecurity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockInstructionTypeBlockSecurityWithDefaults() *BlockInstructionTypeBlockSecurity {
	this := BlockInstructionTypeBlockSecurity{}
	return &this
}

// GetAdvanceCancelDays returns the AdvanceCancelDays field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetAdvanceCancelDays() float32 {
	if o == nil || IsNil(o.AdvanceCancelDays) {
		var ret float32
		return ret
	}
	return *o.AdvanceCancelDays
}

// GetAdvanceCancelDaysOk returns a tuple with the AdvanceCancelDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetAdvanceCancelDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.AdvanceCancelDays) {
		return nil, false
	}
	return o.AdvanceCancelDays, true
}

// HasAdvanceCancelDays returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasAdvanceCancelDays() bool {
	if o != nil && !IsNil(o.AdvanceCancelDays) {
		return true
	}

	return false
}

// SetAdvanceCancelDays gets a reference to the given float32 and assigns it to the AdvanceCancelDays field.
func (o *BlockInstructionTypeBlockSecurity) SetAdvanceCancelDays(v float32) {
	o.AdvanceCancelDays = &v
}

// GetAllDescriptionDDSecured returns the AllDescriptionDDSecured field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetAllDescriptionDDSecured() bool {
	if o == nil || IsNil(o.AllDescriptionDDSecured) {
		var ret bool
		return ret
	}
	return *o.AllDescriptionDDSecured
}

// GetAllDescriptionDDSecuredOk returns a tuple with the AllDescriptionDDSecured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetAllDescriptionDDSecuredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllDescriptionDDSecured) {
		return nil, false
	}
	return o.AllDescriptionDDSecured, true
}

// HasAllDescriptionDDSecured returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasAllDescriptionDDSecured() bool {
	if o != nil && !IsNil(o.AllDescriptionDDSecured) {
		return true
	}

	return false
}

// SetAllDescriptionDDSecured gets a reference to the given bool and assigns it to the AllDescriptionDDSecured field.
func (o *BlockInstructionTypeBlockSecurity) SetAllDescriptionDDSecured(v bool) {
	o.AllDescriptionDDSecured = &v
}

// GetCommissionableYn returns the CommissionableYn field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetCommissionableYn() bool {
	if o == nil || IsNil(o.CommissionableYn) {
		var ret bool
		return ret
	}
	return *o.CommissionableYn
}

// GetCommissionableYnOk returns a tuple with the CommissionableYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetCommissionableYnOk() (*bool, bool) {
	if o == nil || IsNil(o.CommissionableYn) {
		return nil, false
	}
	return o.CommissionableYn, true
}

// HasCommissionableYn returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasCommissionableYn() bool {
	if o != nil && !IsNil(o.CommissionableYn) {
		return true
	}

	return false
}

// SetCommissionableYn gets a reference to the given bool and assigns it to the CommissionableYn field.
func (o *BlockInstructionTypeBlockSecurity) SetCommissionableYn(v bool) {
	o.CommissionableYn = &v
}

// GetDaysDepositRequired returns the DaysDepositRequired field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetDaysDepositRequired() float32 {
	if o == nil || IsNil(o.DaysDepositRequired) {
		var ret float32
		return ret
	}
	return *o.DaysDepositRequired
}

// GetDaysDepositRequiredOk returns a tuple with the DaysDepositRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetDaysDepositRequiredOk() (*float32, bool) {
	if o == nil || IsNil(o.DaysDepositRequired) {
		return nil, false
	}
	return o.DaysDepositRequired, true
}

// HasDaysDepositRequired returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasDaysDepositRequired() bool {
	if o != nil && !IsNil(o.DaysDepositRequired) {
		return true
	}

	return false
}

// SetDaysDepositRequired gets a reference to the given float32 and assigns it to the DaysDepositRequired field.
func (o *BlockInstructionTypeBlockSecurity) SetDaysDepositRequired(v float32) {
	o.DaysDepositRequired = &v
}

// GetHousingInformationSecured returns the HousingInformationSecured field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetHousingInformationSecured() bool {
	if o == nil || IsNil(o.HousingInformationSecured) {
		var ret bool
		return ret
	}
	return *o.HousingInformationSecured
}

// GetHousingInformationSecuredOk returns a tuple with the HousingInformationSecured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetHousingInformationSecuredOk() (*bool, bool) {
	if o == nil || IsNil(o.HousingInformationSecured) {
		return nil, false
	}
	return o.HousingInformationSecured, true
}

// HasHousingInformationSecured returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasHousingInformationSecured() bool {
	if o != nil && !IsNil(o.HousingInformationSecured) {
		return true
	}

	return false
}

// SetHousingInformationSecured gets a reference to the given bool and assigns it to the HousingInformationSecured field.
func (o *BlockInstructionTypeBlockSecurity) SetHousingInformationSecured(v bool) {
	o.HousingInformationSecured = &v
}

// GetRatesSecuredfromAllDisplays returns the RatesSecuredfromAllDisplays field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetRatesSecuredfromAllDisplays() bool {
	if o == nil || IsNil(o.RatesSecuredfromAllDisplays) {
		var ret bool
		return ret
	}
	return *o.RatesSecuredfromAllDisplays
}

// GetRatesSecuredfromAllDisplaysOk returns a tuple with the RatesSecuredfromAllDisplays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetRatesSecuredfromAllDisplaysOk() (*bool, bool) {
	if o == nil || IsNil(o.RatesSecuredfromAllDisplays) {
		return nil, false
	}
	return o.RatesSecuredfromAllDisplays, true
}

// HasRatesSecuredfromAllDisplays returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasRatesSecuredfromAllDisplays() bool {
	if o != nil && !IsNil(o.RatesSecuredfromAllDisplays) {
		return true
	}

	return false
}

// SetRatesSecuredfromAllDisplays gets a reference to the given bool and assigns it to the RatesSecuredfromAllDisplays field.
func (o *BlockInstructionTypeBlockSecurity) SetRatesSecuredfromAllDisplays(v bool) {
	o.RatesSecuredfromAllDisplays = &v
}

// GetRatesSecuredfromGNR returns the RatesSecuredfromGNR field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetRatesSecuredfromGNR() bool {
	if o == nil || IsNil(o.RatesSecuredfromGNR) {
		var ret bool
		return ret
	}
	return *o.RatesSecuredfromGNR
}

// GetRatesSecuredfromGNROk returns a tuple with the RatesSecuredfromGNR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetRatesSecuredfromGNROk() (*bool, bool) {
	if o == nil || IsNil(o.RatesSecuredfromGNR) {
		return nil, false
	}
	return o.RatesSecuredfromGNR, true
}

// HasRatesSecuredfromGNR returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasRatesSecuredfromGNR() bool {
	if o != nil && !IsNil(o.RatesSecuredfromGNR) {
		return true
	}

	return false
}

// SetRatesSecuredfromGNR gets a reference to the given bool and assigns it to the RatesSecuredfromGNR field.
func (o *BlockInstructionTypeBlockSecurity) SetRatesSecuredfromGNR(v bool) {
	o.RatesSecuredfromGNR = &v
}

// GetReturnOneDayAtTimeYn returns the ReturnOneDayAtTimeYn field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetReturnOneDayAtTimeYn() bool {
	if o == nil || IsNil(o.ReturnOneDayAtTimeYn) {
		var ret bool
		return ret
	}
	return *o.ReturnOneDayAtTimeYn
}

// GetReturnOneDayAtTimeYnOk returns a tuple with the ReturnOneDayAtTimeYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetReturnOneDayAtTimeYnOk() (*bool, bool) {
	if o == nil || IsNil(o.ReturnOneDayAtTimeYn) {
		return nil, false
	}
	return o.ReturnOneDayAtTimeYn, true
}

// HasReturnOneDayAtTimeYn returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasReturnOneDayAtTimeYn() bool {
	if o != nil && !IsNil(o.ReturnOneDayAtTimeYn) {
		return true
	}

	return false
}

// SetReturnOneDayAtTimeYn gets a reference to the given bool and assigns it to the ReturnOneDayAtTimeYn field.
func (o *BlockInstructionTypeBlockSecurity) SetReturnOneDayAtTimeYn(v bool) {
	o.ReturnOneDayAtTimeYn = &v
}

// GetSecuredFromDIdisplayYn returns the SecuredFromDIdisplayYn field value if set, zero value otherwise.
func (o *BlockInstructionTypeBlockSecurity) GetSecuredFromDIdisplayYn() bool {
	if o == nil || IsNil(o.SecuredFromDIdisplayYn) {
		var ret bool
		return ret
	}
	return *o.SecuredFromDIdisplayYn
}

// GetSecuredFromDIdisplayYnOk returns a tuple with the SecuredFromDIdisplayYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInstructionTypeBlockSecurity) GetSecuredFromDIdisplayYnOk() (*bool, bool) {
	if o == nil || IsNil(o.SecuredFromDIdisplayYn) {
		return nil, false
	}
	return o.SecuredFromDIdisplayYn, true
}

// HasSecuredFromDIdisplayYn returns a boolean if a field has been set.
func (o *BlockInstructionTypeBlockSecurity) HasSecuredFromDIdisplayYn() bool {
	if o != nil && !IsNil(o.SecuredFromDIdisplayYn) {
		return true
	}

	return false
}

// SetSecuredFromDIdisplayYn gets a reference to the given bool and assigns it to the SecuredFromDIdisplayYn field.
func (o *BlockInstructionTypeBlockSecurity) SetSecuredFromDIdisplayYn(v bool) {
	o.SecuredFromDIdisplayYn = &v
}

func (o BlockInstructionTypeBlockSecurity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockInstructionTypeBlockSecurity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvanceCancelDays) {
		toSerialize["advanceCancelDays"] = o.AdvanceCancelDays
	}
	if !IsNil(o.AllDescriptionDDSecured) {
		toSerialize["allDescriptionDDSecured"] = o.AllDescriptionDDSecured
	}
	if !IsNil(o.CommissionableYn) {
		toSerialize["commissionableYn"] = o.CommissionableYn
	}
	if !IsNil(o.DaysDepositRequired) {
		toSerialize["daysDepositRequired"] = o.DaysDepositRequired
	}
	if !IsNil(o.HousingInformationSecured) {
		toSerialize["housingInformationSecured"] = o.HousingInformationSecured
	}
	if !IsNil(o.RatesSecuredfromAllDisplays) {
		toSerialize["ratesSecuredfromAllDisplays"] = o.RatesSecuredfromAllDisplays
	}
	if !IsNil(o.RatesSecuredfromGNR) {
		toSerialize["ratesSecuredfromGNR"] = o.RatesSecuredfromGNR
	}
	if !IsNil(o.ReturnOneDayAtTimeYn) {
		toSerialize["returnOneDayAtTimeYn"] = o.ReturnOneDayAtTimeYn
	}
	if !IsNil(o.SecuredFromDIdisplayYn) {
		toSerialize["securedFromDIdisplayYn"] = o.SecuredFromDIdisplayYn
	}
	return toSerialize, nil
}

type NullableBlockInstructionTypeBlockSecurity struct {
	value *BlockInstructionTypeBlockSecurity
	isSet bool
}

func (v NullableBlockInstructionTypeBlockSecurity) Get() *BlockInstructionTypeBlockSecurity {
	return v.value
}

func (v *NullableBlockInstructionTypeBlockSecurity) Set(val *BlockInstructionTypeBlockSecurity) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockInstructionTypeBlockSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockInstructionTypeBlockSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockInstructionTypeBlockSecurity(val *BlockInstructionTypeBlockSecurity) *NullableBlockInstructionTypeBlockSecurity {
	return &NullableBlockInstructionTypeBlockSecurity{value: val, isSet: true}
}

func (v NullableBlockInstructionTypeBlockSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockInstructionTypeBlockSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


