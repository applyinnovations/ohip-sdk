/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockAllocationWashType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockAllocationWashType{}

// BlockAllocationWashType Holds criteria for performing a wash operation on a block.
type BlockAllocationWashType struct {
	BlockId *BlockId `json:"blockId,omitempty"`
	BlockInventory *BlockGridInvType `json:"blockInventory,omitempty"`
	// A true value indicates that absolute value is being passed for occupancy, else it indicates that a percentage value is passed.
	ByValue *bool `json:"byValue,omitempty"`
	// End date for the wash operation.
	EndDate *string `json:"endDate,omitempty"`
	// Indicates if the Allocation objects refer to Generic Room Types (Room Pools).
	GenericRoomType *bool `json:"genericRoomType,omitempty"`
	// Hotel Code to which the block belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// String of length seven, each position representing various days of week from Sunday to Saturday, each character is either 0 or 1 indicating whether to apply wash for that day.
	IncludedDays *string `json:"includedDays,omitempty"`
	OccPercentByDay *BlockAllocationWashTypeOccPercentByDay `json:"occPercentByDay,omitempty"`
	// A true value indicates that percentage values are being passed day-wise.
	PercentByDay *bool `json:"percentByDay,omitempty"`
	// List of room types on which wash operation should be performed.
	RoomTypes []string `json:"roomTypes,omitempty"`
	// Start date for the wash operation.
	StartDate *string `json:"startDate,omitempty"`
}

// NewBlockAllocationWashType instantiates a new BlockAllocationWashType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockAllocationWashType() *BlockAllocationWashType {
	this := BlockAllocationWashType{}
	return &this
}

// NewBlockAllocationWashTypeWithDefaults instantiates a new BlockAllocationWashType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockAllocationWashTypeWithDefaults() *BlockAllocationWashType {
	this := BlockAllocationWashType{}
	return &this
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetBlockId() BlockId {
	if o == nil || IsNil(o.BlockId) {
		var ret BlockId
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetBlockIdOk() (*BlockId, bool) {
	if o == nil || IsNil(o.BlockId) {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasBlockId() bool {
	if o != nil && !IsNil(o.BlockId) {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given BlockId and assigns it to the BlockId field.
func (o *BlockAllocationWashType) SetBlockId(v BlockId) {
	o.BlockId = &v
}

// GetBlockInventory returns the BlockInventory field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetBlockInventory() BlockGridInvType {
	if o == nil || IsNil(o.BlockInventory) {
		var ret BlockGridInvType
		return ret
	}
	return *o.BlockInventory
}

// GetBlockInventoryOk returns a tuple with the BlockInventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetBlockInventoryOk() (*BlockGridInvType, bool) {
	if o == nil || IsNil(o.BlockInventory) {
		return nil, false
	}
	return o.BlockInventory, true
}

// HasBlockInventory returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasBlockInventory() bool {
	if o != nil && !IsNil(o.BlockInventory) {
		return true
	}

	return false
}

// SetBlockInventory gets a reference to the given BlockGridInvType and assigns it to the BlockInventory field.
func (o *BlockAllocationWashType) SetBlockInventory(v BlockGridInvType) {
	o.BlockInventory = &v
}

// GetByValue returns the ByValue field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetByValue() bool {
	if o == nil || IsNil(o.ByValue) {
		var ret bool
		return ret
	}
	return *o.ByValue
}

// GetByValueOk returns a tuple with the ByValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetByValueOk() (*bool, bool) {
	if o == nil || IsNil(o.ByValue) {
		return nil, false
	}
	return o.ByValue, true
}

// HasByValue returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasByValue() bool {
	if o != nil && !IsNil(o.ByValue) {
		return true
	}

	return false
}

// SetByValue gets a reference to the given bool and assigns it to the ByValue field.
func (o *BlockAllocationWashType) SetByValue(v bool) {
	o.ByValue = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *BlockAllocationWashType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetGenericRoomType returns the GenericRoomType field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetGenericRoomType() bool {
	if o == nil || IsNil(o.GenericRoomType) {
		var ret bool
		return ret
	}
	return *o.GenericRoomType
}

// GetGenericRoomTypeOk returns a tuple with the GenericRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetGenericRoomTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.GenericRoomType) {
		return nil, false
	}
	return o.GenericRoomType, true
}

// HasGenericRoomType returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasGenericRoomType() bool {
	if o != nil && !IsNil(o.GenericRoomType) {
		return true
	}

	return false
}

// SetGenericRoomType gets a reference to the given bool and assigns it to the GenericRoomType field.
func (o *BlockAllocationWashType) SetGenericRoomType(v bool) {
	o.GenericRoomType = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BlockAllocationWashType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIncludedDays returns the IncludedDays field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetIncludedDays() string {
	if o == nil || IsNil(o.IncludedDays) {
		var ret string
		return ret
	}
	return *o.IncludedDays
}

// GetIncludedDaysOk returns a tuple with the IncludedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetIncludedDaysOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedDays) {
		return nil, false
	}
	return o.IncludedDays, true
}

// HasIncludedDays returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasIncludedDays() bool {
	if o != nil && !IsNil(o.IncludedDays) {
		return true
	}

	return false
}

// SetIncludedDays gets a reference to the given string and assigns it to the IncludedDays field.
func (o *BlockAllocationWashType) SetIncludedDays(v string) {
	o.IncludedDays = &v
}

// GetOccPercentByDay returns the OccPercentByDay field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetOccPercentByDay() BlockAllocationWashTypeOccPercentByDay {
	if o == nil || IsNil(o.OccPercentByDay) {
		var ret BlockAllocationWashTypeOccPercentByDay
		return ret
	}
	return *o.OccPercentByDay
}

// GetOccPercentByDayOk returns a tuple with the OccPercentByDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetOccPercentByDayOk() (*BlockAllocationWashTypeOccPercentByDay, bool) {
	if o == nil || IsNil(o.OccPercentByDay) {
		return nil, false
	}
	return o.OccPercentByDay, true
}

// HasOccPercentByDay returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasOccPercentByDay() bool {
	if o != nil && !IsNil(o.OccPercentByDay) {
		return true
	}

	return false
}

// SetOccPercentByDay gets a reference to the given BlockAllocationWashTypeOccPercentByDay and assigns it to the OccPercentByDay field.
func (o *BlockAllocationWashType) SetOccPercentByDay(v BlockAllocationWashTypeOccPercentByDay) {
	o.OccPercentByDay = &v
}

// GetPercentByDay returns the PercentByDay field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetPercentByDay() bool {
	if o == nil || IsNil(o.PercentByDay) {
		var ret bool
		return ret
	}
	return *o.PercentByDay
}

// GetPercentByDayOk returns a tuple with the PercentByDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetPercentByDayOk() (*bool, bool) {
	if o == nil || IsNil(o.PercentByDay) {
		return nil, false
	}
	return o.PercentByDay, true
}

// HasPercentByDay returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasPercentByDay() bool {
	if o != nil && !IsNil(o.PercentByDay) {
		return true
	}

	return false
}

// SetPercentByDay gets a reference to the given bool and assigns it to the PercentByDay field.
func (o *BlockAllocationWashType) SetPercentByDay(v bool) {
	o.PercentByDay = &v
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetRoomTypes() []string {
	if o == nil || IsNil(o.RoomTypes) {
		var ret []string
		return ret
	}
	return o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetRoomTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given []string and assigns it to the RoomTypes field.
func (o *BlockAllocationWashType) SetRoomTypes(v []string) {
	o.RoomTypes = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *BlockAllocationWashType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationWashType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *BlockAllocationWashType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *BlockAllocationWashType) SetStartDate(v string) {
	o.StartDate = &v
}

func (o BlockAllocationWashType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockAllocationWashType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockId) {
		toSerialize["blockId"] = o.BlockId
	}
	if !IsNil(o.BlockInventory) {
		toSerialize["blockInventory"] = o.BlockInventory
	}
	if !IsNil(o.ByValue) {
		toSerialize["byValue"] = o.ByValue
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.GenericRoomType) {
		toSerialize["genericRoomType"] = o.GenericRoomType
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.IncludedDays) {
		toSerialize["includedDays"] = o.IncludedDays
	}
	if !IsNil(o.OccPercentByDay) {
		toSerialize["occPercentByDay"] = o.OccPercentByDay
	}
	if !IsNil(o.PercentByDay) {
		toSerialize["percentByDay"] = o.PercentByDay
	}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableBlockAllocationWashType struct {
	value *BlockAllocationWashType
	isSet bool
}

func (v NullableBlockAllocationWashType) Get() *BlockAllocationWashType {
	return v.value
}

func (v *NullableBlockAllocationWashType) Set(val *BlockAllocationWashType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockAllocationWashType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockAllocationWashType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockAllocationWashType(val *BlockAllocationWashType) *NullableBlockAllocationWashType {
	return &NullableBlockAllocationWashType{value: val, isSet: true}
}

func (v NullableBlockAllocationWashType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockAllocationWashType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


