/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the StatisticsRoomTypeInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatisticsRoomTypeInfoType{}

// StatisticsRoomTypeInfoType Extended room type to store room category.
type StatisticsRoomTypeInfoType struct {
	// Detail description of the Room Type.
	LongDescription *string `json:"longDescription,omitempty"`
	// Name corresponding to a RoomType.
	WebName *string `json:"webName,omitempty"`
	// URL providing more information about the Room Type.
	WebPage *string `json:"webPage,omitempty"`
	// A recurring element that identifies the room features.
	RoomFeatures []RoomFeatureType `json:"roomFeatures,omitempty"`
	RoomTypeAttributes *RoomTypeAttributesType `json:"roomTypeAttributes,omitempty"`
	// Booking Channels mapping for the Room Type.
	BookingChannelMappings []BookingChannelMappingType `json:"bookingChannelMappings,omitempty"`
	// Bed type code associated with room.
	BedTypeCodes []string `json:"bedTypeCodes,omitempty"`
	RoomType *string `json:"roomType,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	RoomClass *string `json:"roomClass,omitempty"`
	Description *string `json:"description,omitempty"`
	// Indicates room type is a suite.
	Suite *bool `json:"suite,omitempty"`
	// Indicates room type is a Component Room.
	Component *bool `json:"component,omitempty"`
	// Block code.
	InvBlockCode *string `json:"invBlockCode,omitempty"`
	// Represents the room view code like City view, River view, Ocean view etc.
	RoomViewCode *string `json:"roomViewCode,omitempty"`
	// Represents the promotional code.
	PromotionCode *string `json:"promotionCode,omitempty"`
	// Represents the room qualifier code like Deluxe,Economy,Suite etc.
	RoomQualifierCode *string `json:"roomQualifierCode,omitempty"`
	// Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.
	RoomQualifierMatchIndicator *string `json:"roomQualifierMatchIndicator,omitempty"`
	RoomCategory *string `json:"roomCategory,omitempty"`
}

// NewStatisticsRoomTypeInfoType instantiates a new StatisticsRoomTypeInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatisticsRoomTypeInfoType() *StatisticsRoomTypeInfoType {
	this := StatisticsRoomTypeInfoType{}
	return &this
}

// NewStatisticsRoomTypeInfoTypeWithDefaults instantiates a new StatisticsRoomTypeInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatisticsRoomTypeInfoTypeWithDefaults() *StatisticsRoomTypeInfoType {
	this := StatisticsRoomTypeInfoType{}
	return &this
}

// GetLongDescription returns the LongDescription field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetLongDescription() string {
	if o == nil || IsNil(o.LongDescription) {
		var ret string
		return ret
	}
	return *o.LongDescription
}

// GetLongDescriptionOk returns a tuple with the LongDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetLongDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.LongDescription) {
		return nil, false
	}
	return o.LongDescription, true
}

// HasLongDescription returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasLongDescription() bool {
	if o != nil && !IsNil(o.LongDescription) {
		return true
	}

	return false
}

// SetLongDescription gets a reference to the given string and assigns it to the LongDescription field.
func (o *StatisticsRoomTypeInfoType) SetLongDescription(v string) {
	o.LongDescription = &v
}

// GetWebName returns the WebName field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetWebName() string {
	if o == nil || IsNil(o.WebName) {
		var ret string
		return ret
	}
	return *o.WebName
}

// GetWebNameOk returns a tuple with the WebName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetWebNameOk() (*string, bool) {
	if o == nil || IsNil(o.WebName) {
		return nil, false
	}
	return o.WebName, true
}

// HasWebName returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasWebName() bool {
	if o != nil && !IsNil(o.WebName) {
		return true
	}

	return false
}

// SetWebName gets a reference to the given string and assigns it to the WebName field.
func (o *StatisticsRoomTypeInfoType) SetWebName(v string) {
	o.WebName = &v
}

// GetWebPage returns the WebPage field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetWebPage() string {
	if o == nil || IsNil(o.WebPage) {
		var ret string
		return ret
	}
	return *o.WebPage
}

// GetWebPageOk returns a tuple with the WebPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetWebPageOk() (*string, bool) {
	if o == nil || IsNil(o.WebPage) {
		return nil, false
	}
	return o.WebPage, true
}

// HasWebPage returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasWebPage() bool {
	if o != nil && !IsNil(o.WebPage) {
		return true
	}

	return false
}

// SetWebPage gets a reference to the given string and assigns it to the WebPage field.
func (o *StatisticsRoomTypeInfoType) SetWebPage(v string) {
	o.WebPage = &v
}

// GetRoomFeatures returns the RoomFeatures field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomFeatures() []RoomFeatureType {
	if o == nil || IsNil(o.RoomFeatures) {
		var ret []RoomFeatureType
		return ret
	}
	return o.RoomFeatures
}

// GetRoomFeaturesOk returns a tuple with the RoomFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomFeaturesOk() ([]RoomFeatureType, bool) {
	if o == nil || IsNil(o.RoomFeatures) {
		return nil, false
	}
	return o.RoomFeatures, true
}

// HasRoomFeatures returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomFeatures() bool {
	if o != nil && !IsNil(o.RoomFeatures) {
		return true
	}

	return false
}

// SetRoomFeatures gets a reference to the given []RoomFeatureType and assigns it to the RoomFeatures field.
func (o *StatisticsRoomTypeInfoType) SetRoomFeatures(v []RoomFeatureType) {
	o.RoomFeatures = v
}

// GetRoomTypeAttributes returns the RoomTypeAttributes field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomTypeAttributes() RoomTypeAttributesType {
	if o == nil || IsNil(o.RoomTypeAttributes) {
		var ret RoomTypeAttributesType
		return ret
	}
	return *o.RoomTypeAttributes
}

// GetRoomTypeAttributesOk returns a tuple with the RoomTypeAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomTypeAttributesOk() (*RoomTypeAttributesType, bool) {
	if o == nil || IsNil(o.RoomTypeAttributes) {
		return nil, false
	}
	return o.RoomTypeAttributes, true
}

// HasRoomTypeAttributes returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomTypeAttributes() bool {
	if o != nil && !IsNil(o.RoomTypeAttributes) {
		return true
	}

	return false
}

// SetRoomTypeAttributes gets a reference to the given RoomTypeAttributesType and assigns it to the RoomTypeAttributes field.
func (o *StatisticsRoomTypeInfoType) SetRoomTypeAttributes(v RoomTypeAttributesType) {
	o.RoomTypeAttributes = &v
}

// GetBookingChannelMappings returns the BookingChannelMappings field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetBookingChannelMappings() []BookingChannelMappingType {
	if o == nil || IsNil(o.BookingChannelMappings) {
		var ret []BookingChannelMappingType
		return ret
	}
	return o.BookingChannelMappings
}

// GetBookingChannelMappingsOk returns a tuple with the BookingChannelMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetBookingChannelMappingsOk() ([]BookingChannelMappingType, bool) {
	if o == nil || IsNil(o.BookingChannelMappings) {
		return nil, false
	}
	return o.BookingChannelMappings, true
}

// HasBookingChannelMappings returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasBookingChannelMappings() bool {
	if o != nil && !IsNil(o.BookingChannelMappings) {
		return true
	}

	return false
}

// SetBookingChannelMappings gets a reference to the given []BookingChannelMappingType and assigns it to the BookingChannelMappings field.
func (o *StatisticsRoomTypeInfoType) SetBookingChannelMappings(v []BookingChannelMappingType) {
	o.BookingChannelMappings = v
}

// GetBedTypeCodes returns the BedTypeCodes field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetBedTypeCodes() []string {
	if o == nil || IsNil(o.BedTypeCodes) {
		var ret []string
		return ret
	}
	return o.BedTypeCodes
}

// GetBedTypeCodesOk returns a tuple with the BedTypeCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetBedTypeCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.BedTypeCodes) {
		return nil, false
	}
	return o.BedTypeCodes, true
}

// HasBedTypeCodes returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasBedTypeCodes() bool {
	if o != nil && !IsNil(o.BedTypeCodes) {
		return true
	}

	return false
}

// SetBedTypeCodes gets a reference to the given []string and assigns it to the BedTypeCodes field.
func (o *StatisticsRoomTypeInfoType) SetBedTypeCodes(v []string) {
	o.BedTypeCodes = v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *StatisticsRoomTypeInfoType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StatisticsRoomTypeInfoType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRoomClass returns the RoomClass field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomClass() string {
	if o == nil || IsNil(o.RoomClass) {
		var ret string
		return ret
	}
	return *o.RoomClass
}

// GetRoomClassOk returns a tuple with the RoomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomClassOk() (*string, bool) {
	if o == nil || IsNil(o.RoomClass) {
		return nil, false
	}
	return o.RoomClass, true
}

// HasRoomClass returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomClass() bool {
	if o != nil && !IsNil(o.RoomClass) {
		return true
	}

	return false
}

// SetRoomClass gets a reference to the given string and assigns it to the RoomClass field.
func (o *StatisticsRoomTypeInfoType) SetRoomClass(v string) {
	o.RoomClass = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StatisticsRoomTypeInfoType) SetDescription(v string) {
	o.Description = &v
}

// GetSuite returns the Suite field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetSuite() bool {
	if o == nil || IsNil(o.Suite) {
		var ret bool
		return ret
	}
	return *o.Suite
}

// GetSuiteOk returns a tuple with the Suite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetSuiteOk() (*bool, bool) {
	if o == nil || IsNil(o.Suite) {
		return nil, false
	}
	return o.Suite, true
}

// HasSuite returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasSuite() bool {
	if o != nil && !IsNil(o.Suite) {
		return true
	}

	return false
}

// SetSuite gets a reference to the given bool and assigns it to the Suite field.
func (o *StatisticsRoomTypeInfoType) SetSuite(v bool) {
	o.Suite = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetComponent() bool {
	if o == nil || IsNil(o.Component) {
		var ret bool
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetComponentOk() (*bool, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given bool and assigns it to the Component field.
func (o *StatisticsRoomTypeInfoType) SetComponent(v bool) {
	o.Component = &v
}

// GetInvBlockCode returns the InvBlockCode field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetInvBlockCode() string {
	if o == nil || IsNil(o.InvBlockCode) {
		var ret string
		return ret
	}
	return *o.InvBlockCode
}

// GetInvBlockCodeOk returns a tuple with the InvBlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetInvBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.InvBlockCode) {
		return nil, false
	}
	return o.InvBlockCode, true
}

// HasInvBlockCode returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasInvBlockCode() bool {
	if o != nil && !IsNil(o.InvBlockCode) {
		return true
	}

	return false
}

// SetInvBlockCode gets a reference to the given string and assigns it to the InvBlockCode field.
func (o *StatisticsRoomTypeInfoType) SetInvBlockCode(v string) {
	o.InvBlockCode = &v
}

// GetRoomViewCode returns the RoomViewCode field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomViewCode() string {
	if o == nil || IsNil(o.RoomViewCode) {
		var ret string
		return ret
	}
	return *o.RoomViewCode
}

// GetRoomViewCodeOk returns a tuple with the RoomViewCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomViewCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomViewCode) {
		return nil, false
	}
	return o.RoomViewCode, true
}

// HasRoomViewCode returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomViewCode() bool {
	if o != nil && !IsNil(o.RoomViewCode) {
		return true
	}

	return false
}

// SetRoomViewCode gets a reference to the given string and assigns it to the RoomViewCode field.
func (o *StatisticsRoomTypeInfoType) SetRoomViewCode(v string) {
	o.RoomViewCode = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *StatisticsRoomTypeInfoType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetRoomQualifierCode returns the RoomQualifierCode field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomQualifierCode() string {
	if o == nil || IsNil(o.RoomQualifierCode) {
		var ret string
		return ret
	}
	return *o.RoomQualifierCode
}

// GetRoomQualifierCodeOk returns a tuple with the RoomQualifierCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomQualifierCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomQualifierCode) {
		return nil, false
	}
	return o.RoomQualifierCode, true
}

// HasRoomQualifierCode returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomQualifierCode() bool {
	if o != nil && !IsNil(o.RoomQualifierCode) {
		return true
	}

	return false
}

// SetRoomQualifierCode gets a reference to the given string and assigns it to the RoomQualifierCode field.
func (o *StatisticsRoomTypeInfoType) SetRoomQualifierCode(v string) {
	o.RoomQualifierCode = &v
}

// GetRoomQualifierMatchIndicator returns the RoomQualifierMatchIndicator field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomQualifierMatchIndicator() string {
	if o == nil || IsNil(o.RoomQualifierMatchIndicator) {
		var ret string
		return ret
	}
	return *o.RoomQualifierMatchIndicator
}

// GetRoomQualifierMatchIndicatorOk returns a tuple with the RoomQualifierMatchIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomQualifierMatchIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RoomQualifierMatchIndicator) {
		return nil, false
	}
	return o.RoomQualifierMatchIndicator, true
}

// HasRoomQualifierMatchIndicator returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomQualifierMatchIndicator() bool {
	if o != nil && !IsNil(o.RoomQualifierMatchIndicator) {
		return true
	}

	return false
}

// SetRoomQualifierMatchIndicator gets a reference to the given string and assigns it to the RoomQualifierMatchIndicator field.
func (o *StatisticsRoomTypeInfoType) SetRoomQualifierMatchIndicator(v string) {
	o.RoomQualifierMatchIndicator = &v
}

// GetRoomCategory returns the RoomCategory field value if set, zero value otherwise.
func (o *StatisticsRoomTypeInfoType) GetRoomCategory() string {
	if o == nil || IsNil(o.RoomCategory) {
		var ret string
		return ret
	}
	return *o.RoomCategory
}

// GetRoomCategoryOk returns a tuple with the RoomCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsRoomTypeInfoType) GetRoomCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.RoomCategory) {
		return nil, false
	}
	return o.RoomCategory, true
}

// HasRoomCategory returns a boolean if a field has been set.
func (o *StatisticsRoomTypeInfoType) HasRoomCategory() bool {
	if o != nil && !IsNil(o.RoomCategory) {
		return true
	}

	return false
}

// SetRoomCategory gets a reference to the given string and assigns it to the RoomCategory field.
func (o *StatisticsRoomTypeInfoType) SetRoomCategory(v string) {
	o.RoomCategory = &v
}

func (o StatisticsRoomTypeInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatisticsRoomTypeInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LongDescription) {
		toSerialize["longDescription"] = o.LongDescription
	}
	if !IsNil(o.WebName) {
		toSerialize["webName"] = o.WebName
	}
	if !IsNil(o.WebPage) {
		toSerialize["webPage"] = o.WebPage
	}
	if !IsNil(o.RoomFeatures) {
		toSerialize["roomFeatures"] = o.RoomFeatures
	}
	if !IsNil(o.RoomTypeAttributes) {
		toSerialize["roomTypeAttributes"] = o.RoomTypeAttributes
	}
	if !IsNil(o.BookingChannelMappings) {
		toSerialize["bookingChannelMappings"] = o.BookingChannelMappings
	}
	if !IsNil(o.BedTypeCodes) {
		toSerialize["bedTypeCodes"] = o.BedTypeCodes
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RoomClass) {
		toSerialize["roomClass"] = o.RoomClass
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Suite) {
		toSerialize["suite"] = o.Suite
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.InvBlockCode) {
		toSerialize["invBlockCode"] = o.InvBlockCode
	}
	if !IsNil(o.RoomViewCode) {
		toSerialize["roomViewCode"] = o.RoomViewCode
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.RoomQualifierCode) {
		toSerialize["roomQualifierCode"] = o.RoomQualifierCode
	}
	if !IsNil(o.RoomQualifierMatchIndicator) {
		toSerialize["roomQualifierMatchIndicator"] = o.RoomQualifierMatchIndicator
	}
	if !IsNil(o.RoomCategory) {
		toSerialize["roomCategory"] = o.RoomCategory
	}
	return toSerialize, nil
}

type NullableStatisticsRoomTypeInfoType struct {
	value *StatisticsRoomTypeInfoType
	isSet bool
}

func (v NullableStatisticsRoomTypeInfoType) Get() *StatisticsRoomTypeInfoType {
	return v.value
}

func (v *NullableStatisticsRoomTypeInfoType) Set(val *StatisticsRoomTypeInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableStatisticsRoomTypeInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableStatisticsRoomTypeInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatisticsRoomTypeInfoType(val *StatisticsRoomTypeInfoType) *NullableStatisticsRoomTypeInfoType {
	return &NullableStatisticsRoomTypeInfoType{value: val, isSet: true}
}

func (v NullableStatisticsRoomTypeInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatisticsRoomTypeInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


