/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the PropertyLeadsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertyLeadsType{}

// PropertyLeadsType Request object to create Property Leads.
type PropertyLeadsType struct {
	// Hotel code.
	HotelCodeList []string `json:"hotelCodeList,omitempty"`
}

// NewPropertyLeadsType instantiates a new PropertyLeadsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyLeadsType() *PropertyLeadsType {
	this := PropertyLeadsType{}
	return &this
}

// NewPropertyLeadsTypeWithDefaults instantiates a new PropertyLeadsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyLeadsTypeWithDefaults() *PropertyLeadsType {
	this := PropertyLeadsType{}
	return &this
}

// GetHotelCodeList returns the HotelCodeList field value if set, zero value otherwise.
func (o *PropertyLeadsType) GetHotelCodeList() []string {
	if o == nil || IsNil(o.HotelCodeList) {
		var ret []string
		return ret
	}
	return o.HotelCodeList
}

// GetHotelCodeListOk returns a tuple with the HotelCodeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyLeadsType) GetHotelCodeListOk() ([]string, bool) {
	if o == nil || IsNil(o.HotelCodeList) {
		return nil, false
	}
	return o.HotelCodeList, true
}

// HasHotelCodeList returns a boolean if a field has been set.
func (o *PropertyLeadsType) HasHotelCodeList() bool {
	if o != nil && !IsNil(o.HotelCodeList) {
		return true
	}

	return false
}

// SetHotelCodeList gets a reference to the given []string and assigns it to the HotelCodeList field.
func (o *PropertyLeadsType) SetHotelCodeList(v []string) {
	o.HotelCodeList = v
}

func (o PropertyLeadsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertyLeadsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelCodeList) {
		toSerialize["hotelCodeList"] = o.HotelCodeList
	}
	return toSerialize, nil
}

type NullablePropertyLeadsType struct {
	value *PropertyLeadsType
	isSet bool
}

func (v NullablePropertyLeadsType) Get() *PropertyLeadsType {
	return v.value
}

func (v *NullablePropertyLeadsType) Set(val *PropertyLeadsType) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyLeadsType) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyLeadsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyLeadsType(val *PropertyLeadsType) *NullablePropertyLeadsType {
	return &NullablePropertyLeadsType{value: val, isSet: true}
}

func (v NullablePropertyLeadsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyLeadsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


