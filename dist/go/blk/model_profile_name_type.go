/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the ProfileNameType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileNameType{}

// ProfileNameType This provides name information for a person.
type ProfileNameType struct {
	// Family name, last name or Company Name.
	Name *string `json:"name,omitempty"`
	// Full display Name.
	FullName *string `json:"fullName,omitempty"`
	// Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)
	NamePrefix *string `json:"namePrefix,omitempty"`
	// Given name, first name or names.
	GivenName *string `json:"givenName,omitempty"`
	// The middle name of the person name.
	MiddleName *string `json:"middleName,omitempty"`
	// Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)
	NameSuffix *string `json:"nameSuffix,omitempty"`
	// Degree or honors (e.g., Ph.D., M.D.)
	NameTitle *string `json:"nameTitle,omitempty"`
	NameType *PersonNameTypeType `json:"nameType,omitempty"`
}

// NewProfileNameType instantiates a new ProfileNameType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileNameType() *ProfileNameType {
	this := ProfileNameType{}
	return &this
}

// NewProfileNameTypeWithDefaults instantiates a new ProfileNameType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileNameTypeWithDefaults() *ProfileNameType {
	this := ProfileNameType{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProfileNameType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProfileNameType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProfileNameType) SetName(v string) {
	o.Name = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ProfileNameType) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ProfileNameType) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ProfileNameType) SetFullName(v string) {
	o.FullName = &v
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise.
func (o *ProfileNameType) GetNamePrefix() string {
	if o == nil || IsNil(o.NamePrefix) {
		var ret string
		return ret
	}
	return *o.NamePrefix
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetNamePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.NamePrefix) {
		return nil, false
	}
	return o.NamePrefix, true
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *ProfileNameType) HasNamePrefix() bool {
	if o != nil && !IsNil(o.NamePrefix) {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given string and assigns it to the NamePrefix field.
func (o *ProfileNameType) SetNamePrefix(v string) {
	o.NamePrefix = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *ProfileNameType) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *ProfileNameType) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *ProfileNameType) SetGivenName(v string) {
	o.GivenName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *ProfileNameType) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *ProfileNameType) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *ProfileNameType) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetNameSuffix returns the NameSuffix field value if set, zero value otherwise.
func (o *ProfileNameType) GetNameSuffix() string {
	if o == nil || IsNil(o.NameSuffix) {
		var ret string
		return ret
	}
	return *o.NameSuffix
}

// GetNameSuffixOk returns a tuple with the NameSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetNameSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.NameSuffix) {
		return nil, false
	}
	return o.NameSuffix, true
}

// HasNameSuffix returns a boolean if a field has been set.
func (o *ProfileNameType) HasNameSuffix() bool {
	if o != nil && !IsNil(o.NameSuffix) {
		return true
	}

	return false
}

// SetNameSuffix gets a reference to the given string and assigns it to the NameSuffix field.
func (o *ProfileNameType) SetNameSuffix(v string) {
	o.NameSuffix = &v
}

// GetNameTitle returns the NameTitle field value if set, zero value otherwise.
func (o *ProfileNameType) GetNameTitle() string {
	if o == nil || IsNil(o.NameTitle) {
		var ret string
		return ret
	}
	return *o.NameTitle
}

// GetNameTitleOk returns a tuple with the NameTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetNameTitleOk() (*string, bool) {
	if o == nil || IsNil(o.NameTitle) {
		return nil, false
	}
	return o.NameTitle, true
}

// HasNameTitle returns a boolean if a field has been set.
func (o *ProfileNameType) HasNameTitle() bool {
	if o != nil && !IsNil(o.NameTitle) {
		return true
	}

	return false
}

// SetNameTitle gets a reference to the given string and assigns it to the NameTitle field.
func (o *ProfileNameType) SetNameTitle(v string) {
	o.NameTitle = &v
}

// GetNameType returns the NameType field value if set, zero value otherwise.
func (o *ProfileNameType) GetNameType() PersonNameTypeType {
	if o == nil || IsNil(o.NameType) {
		var ret PersonNameTypeType
		return ret
	}
	return *o.NameType
}

// GetNameTypeOk returns a tuple with the NameType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileNameType) GetNameTypeOk() (*PersonNameTypeType, bool) {
	if o == nil || IsNil(o.NameType) {
		return nil, false
	}
	return o.NameType, true
}

// HasNameType returns a boolean if a field has been set.
func (o *ProfileNameType) HasNameType() bool {
	if o != nil && !IsNil(o.NameType) {
		return true
	}

	return false
}

// SetNameType gets a reference to the given PersonNameTypeType and assigns it to the NameType field.
func (o *ProfileNameType) SetNameType(v PersonNameTypeType) {
	o.NameType = &v
}

func (o ProfileNameType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileNameType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.NamePrefix) {
		toSerialize["namePrefix"] = o.NamePrefix
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.NameSuffix) {
		toSerialize["nameSuffix"] = o.NameSuffix
	}
	if !IsNil(o.NameTitle) {
		toSerialize["nameTitle"] = o.NameTitle
	}
	if !IsNil(o.NameType) {
		toSerialize["nameType"] = o.NameType
	}
	return toSerialize, nil
}

type NullableProfileNameType struct {
	value *ProfileNameType
	isSet bool
}

func (v NullableProfileNameType) Get() *ProfileNameType {
	return v.value
}

func (v *NullableProfileNameType) Set(val *ProfileNameType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileNameType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileNameType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileNameType(val *ProfileNameType) *NullableProfileNameType {
	return &NullableProfileNameType{value: val, isSet: true}
}

func (v NullableProfileNameType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileNameType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


