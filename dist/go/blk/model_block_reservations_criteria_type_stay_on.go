/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockReservationsCriteriaTypeStayOn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockReservationsCriteriaTypeStayOn{}

// BlockReservationsCriteriaTypeStayOn Apply changes to block reservations that are staying in the hotel within the date range specified.
type BlockReservationsCriteriaTypeStayOn struct {
	// The starting value of the date range.
	Start *string `json:"start,omitempty"`
	// The ending value of the date range.
	End *string `json:"end,omitempty"`
}

// NewBlockReservationsCriteriaTypeStayOn instantiates a new BlockReservationsCriteriaTypeStayOn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockReservationsCriteriaTypeStayOn() *BlockReservationsCriteriaTypeStayOn {
	this := BlockReservationsCriteriaTypeStayOn{}
	return &this
}

// NewBlockReservationsCriteriaTypeStayOnWithDefaults instantiates a new BlockReservationsCriteriaTypeStayOn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockReservationsCriteriaTypeStayOnWithDefaults() *BlockReservationsCriteriaTypeStayOn {
	this := BlockReservationsCriteriaTypeStayOn{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *BlockReservationsCriteriaTypeStayOn) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationsCriteriaTypeStayOn) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *BlockReservationsCriteriaTypeStayOn) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *BlockReservationsCriteriaTypeStayOn) SetStart(v string) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *BlockReservationsCriteriaTypeStayOn) GetEnd() string {
	if o == nil || IsNil(o.End) {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationsCriteriaTypeStayOn) GetEndOk() (*string, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *BlockReservationsCriteriaTypeStayOn) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *BlockReservationsCriteriaTypeStayOn) SetEnd(v string) {
	o.End = &v
}

func (o BlockReservationsCriteriaTypeStayOn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockReservationsCriteriaTypeStayOn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	return toSerialize, nil
}

type NullableBlockReservationsCriteriaTypeStayOn struct {
	value *BlockReservationsCriteriaTypeStayOn
	isSet bool
}

func (v NullableBlockReservationsCriteriaTypeStayOn) Get() *BlockReservationsCriteriaTypeStayOn {
	return v.value
}

func (v *NullableBlockReservationsCriteriaTypeStayOn) Set(val *BlockReservationsCriteriaTypeStayOn) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockReservationsCriteriaTypeStayOn) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockReservationsCriteriaTypeStayOn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockReservationsCriteriaTypeStayOn(val *BlockReservationsCriteriaTypeStayOn) *NullableBlockReservationsCriteriaTypeStayOn {
	return &NullableBlockReservationsCriteriaTypeStayOn{value: val, isSet: true}
}

func (v NullableBlockReservationsCriteriaTypeStayOn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockReservationsCriteriaTypeStayOn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


