/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the MessageDeliveryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageDeliveryType{}

// MessageDeliveryType Holds the Delivery Information of the Message
type MessageDeliveryType struct {
	DeliveryStatus *MessageStatusType `json:"deliveryStatus,omitempty"`
	// Date the message has been delivered (marked as received)
	DeliveryDate *string `json:"deliveryDate,omitempty"`
	// User who delivered the message (who marked message as received)
	DeliveredBy *string `json:"deliveredBy,omitempty"`
	// Date when message has been printed
	PrintDate *string `json:"printDate,omitempty"`
	// Date when message has been sent via SMS
	TextMessageSentDate *string `json:"textMessageSentDate,omitempty"`
	// User who sent the message
	TextMessageSentBy *string `json:"textMessageSentBy,omitempty"`
	// User Id of who sent the message
	TextMessageSentById *int32 `json:"textMessageSentById,omitempty"`
	// Number in which the message is to be sent.
	TextMessageRecipientNo *string `json:"textMessageRecipientNo,omitempty"`
}

// NewMessageDeliveryType instantiates a new MessageDeliveryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageDeliveryType() *MessageDeliveryType {
	this := MessageDeliveryType{}
	return &this
}

// NewMessageDeliveryTypeWithDefaults instantiates a new MessageDeliveryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageDeliveryTypeWithDefaults() *MessageDeliveryType {
	this := MessageDeliveryType{}
	return &this
}

// GetDeliveryStatus returns the DeliveryStatus field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetDeliveryStatus() MessageStatusType {
	if o == nil || IsNil(o.DeliveryStatus) {
		var ret MessageStatusType
		return ret
	}
	return *o.DeliveryStatus
}

// GetDeliveryStatusOk returns a tuple with the DeliveryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetDeliveryStatusOk() (*MessageStatusType, bool) {
	if o == nil || IsNil(o.DeliveryStatus) {
		return nil, false
	}
	return o.DeliveryStatus, true
}

// HasDeliveryStatus returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasDeliveryStatus() bool {
	if o != nil && !IsNil(o.DeliveryStatus) {
		return true
	}

	return false
}

// SetDeliveryStatus gets a reference to the given MessageStatusType and assigns it to the DeliveryStatus field.
func (o *MessageDeliveryType) SetDeliveryStatus(v MessageStatusType) {
	o.DeliveryStatus = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetDeliveryDate() string {
	if o == nil || IsNil(o.DeliveryDate) {
		var ret string
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetDeliveryDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasDeliveryDate() bool {
	if o != nil && !IsNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given string and assigns it to the DeliveryDate field.
func (o *MessageDeliveryType) SetDeliveryDate(v string) {
	o.DeliveryDate = &v
}

// GetDeliveredBy returns the DeliveredBy field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetDeliveredBy() string {
	if o == nil || IsNil(o.DeliveredBy) {
		var ret string
		return ret
	}
	return *o.DeliveredBy
}

// GetDeliveredByOk returns a tuple with the DeliveredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetDeliveredByOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveredBy) {
		return nil, false
	}
	return o.DeliveredBy, true
}

// HasDeliveredBy returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasDeliveredBy() bool {
	if o != nil && !IsNil(o.DeliveredBy) {
		return true
	}

	return false
}

// SetDeliveredBy gets a reference to the given string and assigns it to the DeliveredBy field.
func (o *MessageDeliveryType) SetDeliveredBy(v string) {
	o.DeliveredBy = &v
}

// GetPrintDate returns the PrintDate field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetPrintDate() string {
	if o == nil || IsNil(o.PrintDate) {
		var ret string
		return ret
	}
	return *o.PrintDate
}

// GetPrintDateOk returns a tuple with the PrintDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetPrintDateOk() (*string, bool) {
	if o == nil || IsNil(o.PrintDate) {
		return nil, false
	}
	return o.PrintDate, true
}

// HasPrintDate returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasPrintDate() bool {
	if o != nil && !IsNil(o.PrintDate) {
		return true
	}

	return false
}

// SetPrintDate gets a reference to the given string and assigns it to the PrintDate field.
func (o *MessageDeliveryType) SetPrintDate(v string) {
	o.PrintDate = &v
}

// GetTextMessageSentDate returns the TextMessageSentDate field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetTextMessageSentDate() string {
	if o == nil || IsNil(o.TextMessageSentDate) {
		var ret string
		return ret
	}
	return *o.TextMessageSentDate
}

// GetTextMessageSentDateOk returns a tuple with the TextMessageSentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetTextMessageSentDateOk() (*string, bool) {
	if o == nil || IsNil(o.TextMessageSentDate) {
		return nil, false
	}
	return o.TextMessageSentDate, true
}

// HasTextMessageSentDate returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasTextMessageSentDate() bool {
	if o != nil && !IsNil(o.TextMessageSentDate) {
		return true
	}

	return false
}

// SetTextMessageSentDate gets a reference to the given string and assigns it to the TextMessageSentDate field.
func (o *MessageDeliveryType) SetTextMessageSentDate(v string) {
	o.TextMessageSentDate = &v
}

// GetTextMessageSentBy returns the TextMessageSentBy field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetTextMessageSentBy() string {
	if o == nil || IsNil(o.TextMessageSentBy) {
		var ret string
		return ret
	}
	return *o.TextMessageSentBy
}

// GetTextMessageSentByOk returns a tuple with the TextMessageSentBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetTextMessageSentByOk() (*string, bool) {
	if o == nil || IsNil(o.TextMessageSentBy) {
		return nil, false
	}
	return o.TextMessageSentBy, true
}

// HasTextMessageSentBy returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasTextMessageSentBy() bool {
	if o != nil && !IsNil(o.TextMessageSentBy) {
		return true
	}

	return false
}

// SetTextMessageSentBy gets a reference to the given string and assigns it to the TextMessageSentBy field.
func (o *MessageDeliveryType) SetTextMessageSentBy(v string) {
	o.TextMessageSentBy = &v
}

// GetTextMessageSentById returns the TextMessageSentById field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetTextMessageSentById() int32 {
	if o == nil || IsNil(o.TextMessageSentById) {
		var ret int32
		return ret
	}
	return *o.TextMessageSentById
}

// GetTextMessageSentByIdOk returns a tuple with the TextMessageSentById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetTextMessageSentByIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TextMessageSentById) {
		return nil, false
	}
	return o.TextMessageSentById, true
}

// HasTextMessageSentById returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasTextMessageSentById() bool {
	if o != nil && !IsNil(o.TextMessageSentById) {
		return true
	}

	return false
}

// SetTextMessageSentById gets a reference to the given int32 and assigns it to the TextMessageSentById field.
func (o *MessageDeliveryType) SetTextMessageSentById(v int32) {
	o.TextMessageSentById = &v
}

// GetTextMessageRecipientNo returns the TextMessageRecipientNo field value if set, zero value otherwise.
func (o *MessageDeliveryType) GetTextMessageRecipientNo() string {
	if o == nil || IsNil(o.TextMessageRecipientNo) {
		var ret string
		return ret
	}
	return *o.TextMessageRecipientNo
}

// GetTextMessageRecipientNoOk returns a tuple with the TextMessageRecipientNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageDeliveryType) GetTextMessageRecipientNoOk() (*string, bool) {
	if o == nil || IsNil(o.TextMessageRecipientNo) {
		return nil, false
	}
	return o.TextMessageRecipientNo, true
}

// HasTextMessageRecipientNo returns a boolean if a field has been set.
func (o *MessageDeliveryType) HasTextMessageRecipientNo() bool {
	if o != nil && !IsNil(o.TextMessageRecipientNo) {
		return true
	}

	return false
}

// SetTextMessageRecipientNo gets a reference to the given string and assigns it to the TextMessageRecipientNo field.
func (o *MessageDeliveryType) SetTextMessageRecipientNo(v string) {
	o.TextMessageRecipientNo = &v
}

func (o MessageDeliveryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageDeliveryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveryStatus) {
		toSerialize["deliveryStatus"] = o.DeliveryStatus
	}
	if !IsNil(o.DeliveryDate) {
		toSerialize["deliveryDate"] = o.DeliveryDate
	}
	if !IsNil(o.DeliveredBy) {
		toSerialize["deliveredBy"] = o.DeliveredBy
	}
	if !IsNil(o.PrintDate) {
		toSerialize["printDate"] = o.PrintDate
	}
	if !IsNil(o.TextMessageSentDate) {
		toSerialize["textMessageSentDate"] = o.TextMessageSentDate
	}
	if !IsNil(o.TextMessageSentBy) {
		toSerialize["textMessageSentBy"] = o.TextMessageSentBy
	}
	if !IsNil(o.TextMessageSentById) {
		toSerialize["textMessageSentById"] = o.TextMessageSentById
	}
	if !IsNil(o.TextMessageRecipientNo) {
		toSerialize["textMessageRecipientNo"] = o.TextMessageRecipientNo
	}
	return toSerialize, nil
}

type NullableMessageDeliveryType struct {
	value *MessageDeliveryType
	isSet bool
}

func (v NullableMessageDeliveryType) Get() *MessageDeliveryType {
	return v.value
}

func (v *NullableMessageDeliveryType) Set(val *MessageDeliveryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageDeliveryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageDeliveryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageDeliveryType(val *MessageDeliveryType) *NullableMessageDeliveryType {
	return &NullableMessageDeliveryType{value: val, isSet: true}
}

func (v NullableMessageDeliveryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageDeliveryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


