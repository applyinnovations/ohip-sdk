/*
OPERA Cloud Block Reservation Asynchronous API

APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkasync

import (
	"encoding/json"
)

// checks if the BlockAllocationSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockAllocationSummaryType{}

// BlockAllocationSummaryType struct for BlockAllocationSummaryType
type BlockAllocationSummaryType struct {
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	BlockId *float32 `json:"blockId,omitempty"`
	// Defined block code for the block.
	BlockCode *string `json:"blockCode,omitempty"`
	// Name of the block.
	BlockName *string `json:"blockName,omitempty"`
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	MasterBlockId *float32 `json:"masterBlockId,omitempty"`
	// Booking Status of the block.
	Status *string `json:"status,omitempty"`
	// Market Code of the block.
	MarketCode *string `json:"marketCode,omitempty"`
	StartDate *string `json:"startDate,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	CutOffDate *string `json:"cutOffDate,omitempty"`
	CutOffDays *int32 `json:"cutOffDays,omitempty"`
	// Cancellation Date.
	CancellationDate *string `json:"cancellationDate,omitempty"`
	// Code that idenfies the reason for cancellation.
	CancellationCode *string `json:"cancellationCode,omitempty"`
	// Description that explains the reason for cancellation.
	CancellationDescription *string `json:"cancellationDescription,omitempty"`
	// Catering Owner
	CateringOwner *int32 `json:"cateringOwner,omitempty"`
	// Primary Catering Owner Code
	CateringOwnerCode *string `json:"cateringOwnerCode,omitempty"`
	// Property of Catering Owner
	CateringOwnerResort *string `json:"cateringOwnerResort,omitempty"`
	// Owner ID
	Owner *int32 `json:"owner,omitempty"`
	// Block Owner Code
	OwnerCode *string `json:"ownerCode,omitempty"`
	// Property of Business Block Owner
	OwnerResort *string `json:"ownerResort,omitempty"`
	// Rooms Owner
	RoomsOwner *int32 `json:"roomsOwner,omitempty"`
	// Primary Rooms Owner Code
	RoomsOwnerCode *string `json:"roomsOwnerCode,omitempty"`
	// Property of Rooms Owner
	RoomsOwnerResort *string `json:"roomsOwnerResort,omitempty"`
	// The business date the block was created.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// Indicates the internal type of the block like G, etc.
	BlockType *string `json:"blockType,omitempty"`
	// Booking Method.
	ReservationMethod *string `json:"reservationMethod,omitempty"`
	// Rate code associated with Block.
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	// Date Time when the block was modified last.
	LastModifiedDate *string `json:"lastModifiedDate,omitempty"`
	// Source of the Block.
	SourceCode *string `json:"sourceCode,omitempty"`
	AllocationDates []RoomAllocationDateType `json:"allocationDates,omitempty"`
	// Booking Medium/Origin Code of the Block.
	BookingMedium *string `json:"bookingMedium,omitempty"`
	BlockProfiles *BlockAllocationSummaryTypeBlockProfiles `json:"blockProfiles,omitempty"`
}

// NewBlockAllocationSummaryType instantiates a new BlockAllocationSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockAllocationSummaryType() *BlockAllocationSummaryType {
	this := BlockAllocationSummaryType{}
	return &this
}

// NewBlockAllocationSummaryTypeWithDefaults instantiates a new BlockAllocationSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockAllocationSummaryTypeWithDefaults() *BlockAllocationSummaryType {
	this := BlockAllocationSummaryType{}
	return &this
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBlockId() float32 {
	if o == nil || IsNil(o.BlockId) {
		var ret float32
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBlockIdOk() (*float32, bool) {
	if o == nil || IsNil(o.BlockId) {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBlockId() bool {
	if o != nil && !IsNil(o.BlockId) {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given float32 and assigns it to the BlockId field.
func (o *BlockAllocationSummaryType) SetBlockId(v float32) {
	o.BlockId = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *BlockAllocationSummaryType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetBlockName returns the BlockName field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBlockName() string {
	if o == nil || IsNil(o.BlockName) {
		var ret string
		return ret
	}
	return *o.BlockName
}

// GetBlockNameOk returns a tuple with the BlockName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBlockNameOk() (*string, bool) {
	if o == nil || IsNil(o.BlockName) {
		return nil, false
	}
	return o.BlockName, true
}

// HasBlockName returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBlockName() bool {
	if o != nil && !IsNil(o.BlockName) {
		return true
	}

	return false
}

// SetBlockName gets a reference to the given string and assigns it to the BlockName field.
func (o *BlockAllocationSummaryType) SetBlockName(v string) {
	o.BlockName = &v
}

// GetMasterBlockId returns the MasterBlockId field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetMasterBlockId() float32 {
	if o == nil || IsNil(o.MasterBlockId) {
		var ret float32
		return ret
	}
	return *o.MasterBlockId
}

// GetMasterBlockIdOk returns a tuple with the MasterBlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetMasterBlockIdOk() (*float32, bool) {
	if o == nil || IsNil(o.MasterBlockId) {
		return nil, false
	}
	return o.MasterBlockId, true
}

// HasMasterBlockId returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasMasterBlockId() bool {
	if o != nil && !IsNil(o.MasterBlockId) {
		return true
	}

	return false
}

// SetMasterBlockId gets a reference to the given float32 and assigns it to the MasterBlockId field.
func (o *BlockAllocationSummaryType) SetMasterBlockId(v float32) {
	o.MasterBlockId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BlockAllocationSummaryType) SetStatus(v string) {
	o.Status = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *BlockAllocationSummaryType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *BlockAllocationSummaryType) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *BlockAllocationSummaryType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetCutOffDate returns the CutOffDate field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCutOffDate() string {
	if o == nil || IsNil(o.CutOffDate) {
		var ret string
		return ret
	}
	return *o.CutOffDate
}

// GetCutOffDateOk returns a tuple with the CutOffDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCutOffDateOk() (*string, bool) {
	if o == nil || IsNil(o.CutOffDate) {
		return nil, false
	}
	return o.CutOffDate, true
}

// HasCutOffDate returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCutOffDate() bool {
	if o != nil && !IsNil(o.CutOffDate) {
		return true
	}

	return false
}

// SetCutOffDate gets a reference to the given string and assigns it to the CutOffDate field.
func (o *BlockAllocationSummaryType) SetCutOffDate(v string) {
	o.CutOffDate = &v
}

// GetCutOffDays returns the CutOffDays field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCutOffDays() int32 {
	if o == nil || IsNil(o.CutOffDays) {
		var ret int32
		return ret
	}
	return *o.CutOffDays
}

// GetCutOffDaysOk returns a tuple with the CutOffDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCutOffDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.CutOffDays) {
		return nil, false
	}
	return o.CutOffDays, true
}

// HasCutOffDays returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCutOffDays() bool {
	if o != nil && !IsNil(o.CutOffDays) {
		return true
	}

	return false
}

// SetCutOffDays gets a reference to the given int32 and assigns it to the CutOffDays field.
func (o *BlockAllocationSummaryType) SetCutOffDays(v int32) {
	o.CutOffDays = &v
}

// GetCancellationDate returns the CancellationDate field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCancellationDate() string {
	if o == nil || IsNil(o.CancellationDate) {
		var ret string
		return ret
	}
	return *o.CancellationDate
}

// GetCancellationDateOk returns a tuple with the CancellationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCancellationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationDate) {
		return nil, false
	}
	return o.CancellationDate, true
}

// HasCancellationDate returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCancellationDate() bool {
	if o != nil && !IsNil(o.CancellationDate) {
		return true
	}

	return false
}

// SetCancellationDate gets a reference to the given string and assigns it to the CancellationDate field.
func (o *BlockAllocationSummaryType) SetCancellationDate(v string) {
	o.CancellationDate = &v
}

// GetCancellationCode returns the CancellationCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCancellationCode() string {
	if o == nil || IsNil(o.CancellationCode) {
		var ret string
		return ret
	}
	return *o.CancellationCode
}

// GetCancellationCodeOk returns a tuple with the CancellationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCancellationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationCode) {
		return nil, false
	}
	return o.CancellationCode, true
}

// HasCancellationCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCancellationCode() bool {
	if o != nil && !IsNil(o.CancellationCode) {
		return true
	}

	return false
}

// SetCancellationCode gets a reference to the given string and assigns it to the CancellationCode field.
func (o *BlockAllocationSummaryType) SetCancellationCode(v string) {
	o.CancellationCode = &v
}

// GetCancellationDescription returns the CancellationDescription field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCancellationDescription() string {
	if o == nil || IsNil(o.CancellationDescription) {
		var ret string
		return ret
	}
	return *o.CancellationDescription
}

// GetCancellationDescriptionOk returns a tuple with the CancellationDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCancellationDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationDescription) {
		return nil, false
	}
	return o.CancellationDescription, true
}

// HasCancellationDescription returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCancellationDescription() bool {
	if o != nil && !IsNil(o.CancellationDescription) {
		return true
	}

	return false
}

// SetCancellationDescription gets a reference to the given string and assigns it to the CancellationDescription field.
func (o *BlockAllocationSummaryType) SetCancellationDescription(v string) {
	o.CancellationDescription = &v
}

// GetCateringOwner returns the CateringOwner field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCateringOwner() int32 {
	if o == nil || IsNil(o.CateringOwner) {
		var ret int32
		return ret
	}
	return *o.CateringOwner
}

// GetCateringOwnerOk returns a tuple with the CateringOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCateringOwnerOk() (*int32, bool) {
	if o == nil || IsNil(o.CateringOwner) {
		return nil, false
	}
	return o.CateringOwner, true
}

// HasCateringOwner returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCateringOwner() bool {
	if o != nil && !IsNil(o.CateringOwner) {
		return true
	}

	return false
}

// SetCateringOwner gets a reference to the given int32 and assigns it to the CateringOwner field.
func (o *BlockAllocationSummaryType) SetCateringOwner(v int32) {
	o.CateringOwner = &v
}

// GetCateringOwnerCode returns the CateringOwnerCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCateringOwnerCode() string {
	if o == nil || IsNil(o.CateringOwnerCode) {
		var ret string
		return ret
	}
	return *o.CateringOwnerCode
}

// GetCateringOwnerCodeOk returns a tuple with the CateringOwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCateringOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CateringOwnerCode) {
		return nil, false
	}
	return o.CateringOwnerCode, true
}

// HasCateringOwnerCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCateringOwnerCode() bool {
	if o != nil && !IsNil(o.CateringOwnerCode) {
		return true
	}

	return false
}

// SetCateringOwnerCode gets a reference to the given string and assigns it to the CateringOwnerCode field.
func (o *BlockAllocationSummaryType) SetCateringOwnerCode(v string) {
	o.CateringOwnerCode = &v
}

// GetCateringOwnerResort returns the CateringOwnerResort field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCateringOwnerResort() string {
	if o == nil || IsNil(o.CateringOwnerResort) {
		var ret string
		return ret
	}
	return *o.CateringOwnerResort
}

// GetCateringOwnerResortOk returns a tuple with the CateringOwnerResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCateringOwnerResortOk() (*string, bool) {
	if o == nil || IsNil(o.CateringOwnerResort) {
		return nil, false
	}
	return o.CateringOwnerResort, true
}

// HasCateringOwnerResort returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCateringOwnerResort() bool {
	if o != nil && !IsNil(o.CateringOwnerResort) {
		return true
	}

	return false
}

// SetCateringOwnerResort gets a reference to the given string and assigns it to the CateringOwnerResort field.
func (o *BlockAllocationSummaryType) SetCateringOwnerResort(v string) {
	o.CateringOwnerResort = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetOwner() int32 {
	if o == nil || IsNil(o.Owner) {
		var ret int32
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetOwnerOk() (*int32, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given int32 and assigns it to the Owner field.
func (o *BlockAllocationSummaryType) SetOwner(v int32) {
	o.Owner = &v
}

// GetOwnerCode returns the OwnerCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetOwnerCode() string {
	if o == nil || IsNil(o.OwnerCode) {
		var ret string
		return ret
	}
	return *o.OwnerCode
}

// GetOwnerCodeOk returns a tuple with the OwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerCode) {
		return nil, false
	}
	return o.OwnerCode, true
}

// HasOwnerCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasOwnerCode() bool {
	if o != nil && !IsNil(o.OwnerCode) {
		return true
	}

	return false
}

// SetOwnerCode gets a reference to the given string and assigns it to the OwnerCode field.
func (o *BlockAllocationSummaryType) SetOwnerCode(v string) {
	o.OwnerCode = &v
}

// GetOwnerResort returns the OwnerResort field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetOwnerResort() string {
	if o == nil || IsNil(o.OwnerResort) {
		var ret string
		return ret
	}
	return *o.OwnerResort
}

// GetOwnerResortOk returns a tuple with the OwnerResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetOwnerResortOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerResort) {
		return nil, false
	}
	return o.OwnerResort, true
}

// HasOwnerResort returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasOwnerResort() bool {
	if o != nil && !IsNil(o.OwnerResort) {
		return true
	}

	return false
}

// SetOwnerResort gets a reference to the given string and assigns it to the OwnerResort field.
func (o *BlockAllocationSummaryType) SetOwnerResort(v string) {
	o.OwnerResort = &v
}

// GetRoomsOwner returns the RoomsOwner field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetRoomsOwner() int32 {
	if o == nil || IsNil(o.RoomsOwner) {
		var ret int32
		return ret
	}
	return *o.RoomsOwner
}

// GetRoomsOwnerOk returns a tuple with the RoomsOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetRoomsOwnerOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomsOwner) {
		return nil, false
	}
	return o.RoomsOwner, true
}

// HasRoomsOwner returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasRoomsOwner() bool {
	if o != nil && !IsNil(o.RoomsOwner) {
		return true
	}

	return false
}

// SetRoomsOwner gets a reference to the given int32 and assigns it to the RoomsOwner field.
func (o *BlockAllocationSummaryType) SetRoomsOwner(v int32) {
	o.RoomsOwner = &v
}

// GetRoomsOwnerCode returns the RoomsOwnerCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetRoomsOwnerCode() string {
	if o == nil || IsNil(o.RoomsOwnerCode) {
		var ret string
		return ret
	}
	return *o.RoomsOwnerCode
}

// GetRoomsOwnerCodeOk returns a tuple with the RoomsOwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetRoomsOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomsOwnerCode) {
		return nil, false
	}
	return o.RoomsOwnerCode, true
}

// HasRoomsOwnerCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasRoomsOwnerCode() bool {
	if o != nil && !IsNil(o.RoomsOwnerCode) {
		return true
	}

	return false
}

// SetRoomsOwnerCode gets a reference to the given string and assigns it to the RoomsOwnerCode field.
func (o *BlockAllocationSummaryType) SetRoomsOwnerCode(v string) {
	o.RoomsOwnerCode = &v
}

// GetRoomsOwnerResort returns the RoomsOwnerResort field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetRoomsOwnerResort() string {
	if o == nil || IsNil(o.RoomsOwnerResort) {
		var ret string
		return ret
	}
	return *o.RoomsOwnerResort
}

// GetRoomsOwnerResortOk returns a tuple with the RoomsOwnerResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetRoomsOwnerResortOk() (*string, bool) {
	if o == nil || IsNil(o.RoomsOwnerResort) {
		return nil, false
	}
	return o.RoomsOwnerResort, true
}

// HasRoomsOwnerResort returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasRoomsOwnerResort() bool {
	if o != nil && !IsNil(o.RoomsOwnerResort) {
		return true
	}

	return false
}

// SetRoomsOwnerResort gets a reference to the given string and assigns it to the RoomsOwnerResort field.
func (o *BlockAllocationSummaryType) SetRoomsOwnerResort(v string) {
	o.RoomsOwnerResort = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *BlockAllocationSummaryType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetBlockType returns the BlockType field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBlockType() string {
	if o == nil || IsNil(o.BlockType) {
		var ret string
		return ret
	}
	return *o.BlockType
}

// GetBlockTypeOk returns a tuple with the BlockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBlockTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockType) {
		return nil, false
	}
	return o.BlockType, true
}

// HasBlockType returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBlockType() bool {
	if o != nil && !IsNil(o.BlockType) {
		return true
	}

	return false
}

// SetBlockType gets a reference to the given string and assigns it to the BlockType field.
func (o *BlockAllocationSummaryType) SetBlockType(v string) {
	o.BlockType = &v
}

// GetReservationMethod returns the ReservationMethod field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetReservationMethod() string {
	if o == nil || IsNil(o.ReservationMethod) {
		var ret string
		return ret
	}
	return *o.ReservationMethod
}

// GetReservationMethodOk returns a tuple with the ReservationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetReservationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationMethod) {
		return nil, false
	}
	return o.ReservationMethod, true
}

// HasReservationMethod returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasReservationMethod() bool {
	if o != nil && !IsNil(o.ReservationMethod) {
		return true
	}

	return false
}

// SetReservationMethod gets a reference to the given string and assigns it to the ReservationMethod field.
func (o *BlockAllocationSummaryType) SetReservationMethod(v string) {
	o.ReservationMethod = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *BlockAllocationSummaryType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetLastModifiedDate() string {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret string
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetLastModifiedDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given string and assigns it to the LastModifiedDate field.
func (o *BlockAllocationSummaryType) SetLastModifiedDate(v string) {
	o.LastModifiedDate = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *BlockAllocationSummaryType) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetAllocationDates returns the AllocationDates field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetAllocationDates() []RoomAllocationDateType {
	if o == nil || IsNil(o.AllocationDates) {
		var ret []RoomAllocationDateType
		return ret
	}
	return o.AllocationDates
}

// GetAllocationDatesOk returns a tuple with the AllocationDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetAllocationDatesOk() ([]RoomAllocationDateType, bool) {
	if o == nil || IsNil(o.AllocationDates) {
		return nil, false
	}
	return o.AllocationDates, true
}

// HasAllocationDates returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasAllocationDates() bool {
	if o != nil && !IsNil(o.AllocationDates) {
		return true
	}

	return false
}

// SetAllocationDates gets a reference to the given []RoomAllocationDateType and assigns it to the AllocationDates field.
func (o *BlockAllocationSummaryType) SetAllocationDates(v []RoomAllocationDateType) {
	o.AllocationDates = v
}

// GetBookingMedium returns the BookingMedium field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBookingMedium() string {
	if o == nil || IsNil(o.BookingMedium) {
		var ret string
		return ret
	}
	return *o.BookingMedium
}

// GetBookingMediumOk returns a tuple with the BookingMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBookingMediumOk() (*string, bool) {
	if o == nil || IsNil(o.BookingMedium) {
		return nil, false
	}
	return o.BookingMedium, true
}

// HasBookingMedium returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBookingMedium() bool {
	if o != nil && !IsNil(o.BookingMedium) {
		return true
	}

	return false
}

// SetBookingMedium gets a reference to the given string and assigns it to the BookingMedium field.
func (o *BlockAllocationSummaryType) SetBookingMedium(v string) {
	o.BookingMedium = &v
}

// GetBlockProfiles returns the BlockProfiles field value if set, zero value otherwise.
func (o *BlockAllocationSummaryType) GetBlockProfiles() BlockAllocationSummaryTypeBlockProfiles {
	if o == nil || IsNil(o.BlockProfiles) {
		var ret BlockAllocationSummaryTypeBlockProfiles
		return ret
	}
	return *o.BlockProfiles
}

// GetBlockProfilesOk returns a tuple with the BlockProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockAllocationSummaryType) GetBlockProfilesOk() (*BlockAllocationSummaryTypeBlockProfiles, bool) {
	if o == nil || IsNil(o.BlockProfiles) {
		return nil, false
	}
	return o.BlockProfiles, true
}

// HasBlockProfiles returns a boolean if a field has been set.
func (o *BlockAllocationSummaryType) HasBlockProfiles() bool {
	if o != nil && !IsNil(o.BlockProfiles) {
		return true
	}

	return false
}

// SetBlockProfiles gets a reference to the given BlockAllocationSummaryTypeBlockProfiles and assigns it to the BlockProfiles field.
func (o *BlockAllocationSummaryType) SetBlockProfiles(v BlockAllocationSummaryTypeBlockProfiles) {
	o.BlockProfiles = &v
}

func (o BlockAllocationSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockAllocationSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockId) {
		toSerialize["blockId"] = o.BlockId
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BlockName) {
		toSerialize["blockName"] = o.BlockName
	}
	if !IsNil(o.MasterBlockId) {
		toSerialize["masterBlockId"] = o.MasterBlockId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.CutOffDate) {
		toSerialize["cutOffDate"] = o.CutOffDate
	}
	if !IsNil(o.CutOffDays) {
		toSerialize["cutOffDays"] = o.CutOffDays
	}
	if !IsNil(o.CancellationDate) {
		toSerialize["cancellationDate"] = o.CancellationDate
	}
	if !IsNil(o.CancellationCode) {
		toSerialize["cancellationCode"] = o.CancellationCode
	}
	if !IsNil(o.CancellationDescription) {
		toSerialize["cancellationDescription"] = o.CancellationDescription
	}
	if !IsNil(o.CateringOwner) {
		toSerialize["cateringOwner"] = o.CateringOwner
	}
	if !IsNil(o.CateringOwnerCode) {
		toSerialize["cateringOwnerCode"] = o.CateringOwnerCode
	}
	if !IsNil(o.CateringOwnerResort) {
		toSerialize["cateringOwnerResort"] = o.CateringOwnerResort
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.OwnerCode) {
		toSerialize["ownerCode"] = o.OwnerCode
	}
	if !IsNil(o.OwnerResort) {
		toSerialize["ownerResort"] = o.OwnerResort
	}
	if !IsNil(o.RoomsOwner) {
		toSerialize["roomsOwner"] = o.RoomsOwner
	}
	if !IsNil(o.RoomsOwnerCode) {
		toSerialize["roomsOwnerCode"] = o.RoomsOwnerCode
	}
	if !IsNil(o.RoomsOwnerResort) {
		toSerialize["roomsOwnerResort"] = o.RoomsOwnerResort
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.BlockType) {
		toSerialize["blockType"] = o.BlockType
	}
	if !IsNil(o.ReservationMethod) {
		toSerialize["reservationMethod"] = o.ReservationMethod
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.AllocationDates) {
		toSerialize["allocationDates"] = o.AllocationDates
	}
	if !IsNil(o.BookingMedium) {
		toSerialize["bookingMedium"] = o.BookingMedium
	}
	if !IsNil(o.BlockProfiles) {
		toSerialize["blockProfiles"] = o.BlockProfiles
	}
	return toSerialize, nil
}

type NullableBlockAllocationSummaryType struct {
	value *BlockAllocationSummaryType
	isSet bool
}

func (v NullableBlockAllocationSummaryType) Get() *BlockAllocationSummaryType {
	return v.value
}

func (v *NullableBlockAllocationSummaryType) Set(val *BlockAllocationSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockAllocationSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockAllocationSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockAllocationSummaryType(val *BlockAllocationSummaryType) *NullableBlockAllocationSummaryType {
	return &NullableBlockAllocationSummaryType{value: val, isSet: true}
}

func (v NullableBlockAllocationSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockAllocationSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


