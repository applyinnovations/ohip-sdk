/*
OPERA Cloud Block Reservation Asynchronous API

APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blkasync

import (
	"encoding/json"
)

// checks if the ShiftBlockCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShiftBlockCriteriaType{}

// ShiftBlockCriteriaType struct for ShiftBlockCriteriaType
type ShiftBlockCriteriaType struct {
	// New start date of the business block.
	NewStartDate *string `json:"newStartDate,omitempty"`
	// When true, this will remove alternate dates for this block before shifting dates.
	RemoveAlternateDates *bool `json:"removeAlternateDates,omitempty"`
	// When true, this will validate alternate dates for this block before shifting dates.
	ValidateAlternateDates *bool `json:"validateAlternateDates,omitempty"`
	// When true, this will overbook allocated rooms if needed.
	OverbookAll *bool `json:"overbookAll,omitempty"`
	// When true, this will validate if there are rooms pre-allocated before shifting the block dates.
	ValidatePreAllocatedRooms *bool `json:"validatePreAllocatedRooms,omitempty"`
	// When true, this will validate if there are active traces before shifting the block dates.
	ValidateTraces *bool `json:"validateTraces,omitempty"`
	// Indicates whether to ignore any warning during applying the changes to the events associated with the current block.
	OverrideEventsProcessingWarnings *bool `json:"overrideEventsProcessingWarnings,omitempty"`
}

// NewShiftBlockCriteriaType instantiates a new ShiftBlockCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShiftBlockCriteriaType() *ShiftBlockCriteriaType {
	this := ShiftBlockCriteriaType{}
	return &this
}

// NewShiftBlockCriteriaTypeWithDefaults instantiates a new ShiftBlockCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShiftBlockCriteriaTypeWithDefaults() *ShiftBlockCriteriaType {
	this := ShiftBlockCriteriaType{}
	return &this
}

// GetNewStartDate returns the NewStartDate field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetNewStartDate() string {
	if o == nil || IsNil(o.NewStartDate) {
		var ret string
		return ret
	}
	return *o.NewStartDate
}

// GetNewStartDateOk returns a tuple with the NewStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetNewStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.NewStartDate) {
		return nil, false
	}
	return o.NewStartDate, true
}

// HasNewStartDate returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasNewStartDate() bool {
	if o != nil && !IsNil(o.NewStartDate) {
		return true
	}

	return false
}

// SetNewStartDate gets a reference to the given string and assigns it to the NewStartDate field.
func (o *ShiftBlockCriteriaType) SetNewStartDate(v string) {
	o.NewStartDate = &v
}

// GetRemoveAlternateDates returns the RemoveAlternateDates field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetRemoveAlternateDates() bool {
	if o == nil || IsNil(o.RemoveAlternateDates) {
		var ret bool
		return ret
	}
	return *o.RemoveAlternateDates
}

// GetRemoveAlternateDatesOk returns a tuple with the RemoveAlternateDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetRemoveAlternateDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveAlternateDates) {
		return nil, false
	}
	return o.RemoveAlternateDates, true
}

// HasRemoveAlternateDates returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasRemoveAlternateDates() bool {
	if o != nil && !IsNil(o.RemoveAlternateDates) {
		return true
	}

	return false
}

// SetRemoveAlternateDates gets a reference to the given bool and assigns it to the RemoveAlternateDates field.
func (o *ShiftBlockCriteriaType) SetRemoveAlternateDates(v bool) {
	o.RemoveAlternateDates = &v
}

// GetValidateAlternateDates returns the ValidateAlternateDates field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetValidateAlternateDates() bool {
	if o == nil || IsNil(o.ValidateAlternateDates) {
		var ret bool
		return ret
	}
	return *o.ValidateAlternateDates
}

// GetValidateAlternateDatesOk returns a tuple with the ValidateAlternateDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetValidateAlternateDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateAlternateDates) {
		return nil, false
	}
	return o.ValidateAlternateDates, true
}

// HasValidateAlternateDates returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasValidateAlternateDates() bool {
	if o != nil && !IsNil(o.ValidateAlternateDates) {
		return true
	}

	return false
}

// SetValidateAlternateDates gets a reference to the given bool and assigns it to the ValidateAlternateDates field.
func (o *ShiftBlockCriteriaType) SetValidateAlternateDates(v bool) {
	o.ValidateAlternateDates = &v
}

// GetOverbookAll returns the OverbookAll field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetOverbookAll() bool {
	if o == nil || IsNil(o.OverbookAll) {
		var ret bool
		return ret
	}
	return *o.OverbookAll
}

// GetOverbookAllOk returns a tuple with the OverbookAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetOverbookAllOk() (*bool, bool) {
	if o == nil || IsNil(o.OverbookAll) {
		return nil, false
	}
	return o.OverbookAll, true
}

// HasOverbookAll returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasOverbookAll() bool {
	if o != nil && !IsNil(o.OverbookAll) {
		return true
	}

	return false
}

// SetOverbookAll gets a reference to the given bool and assigns it to the OverbookAll field.
func (o *ShiftBlockCriteriaType) SetOverbookAll(v bool) {
	o.OverbookAll = &v
}

// GetValidatePreAllocatedRooms returns the ValidatePreAllocatedRooms field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetValidatePreAllocatedRooms() bool {
	if o == nil || IsNil(o.ValidatePreAllocatedRooms) {
		var ret bool
		return ret
	}
	return *o.ValidatePreAllocatedRooms
}

// GetValidatePreAllocatedRoomsOk returns a tuple with the ValidatePreAllocatedRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetValidatePreAllocatedRoomsOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidatePreAllocatedRooms) {
		return nil, false
	}
	return o.ValidatePreAllocatedRooms, true
}

// HasValidatePreAllocatedRooms returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasValidatePreAllocatedRooms() bool {
	if o != nil && !IsNil(o.ValidatePreAllocatedRooms) {
		return true
	}

	return false
}

// SetValidatePreAllocatedRooms gets a reference to the given bool and assigns it to the ValidatePreAllocatedRooms field.
func (o *ShiftBlockCriteriaType) SetValidatePreAllocatedRooms(v bool) {
	o.ValidatePreAllocatedRooms = &v
}

// GetValidateTraces returns the ValidateTraces field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetValidateTraces() bool {
	if o == nil || IsNil(o.ValidateTraces) {
		var ret bool
		return ret
	}
	return *o.ValidateTraces
}

// GetValidateTracesOk returns a tuple with the ValidateTraces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetValidateTracesOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidateTraces) {
		return nil, false
	}
	return o.ValidateTraces, true
}

// HasValidateTraces returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasValidateTraces() bool {
	if o != nil && !IsNil(o.ValidateTraces) {
		return true
	}

	return false
}

// SetValidateTraces gets a reference to the given bool and assigns it to the ValidateTraces field.
func (o *ShiftBlockCriteriaType) SetValidateTraces(v bool) {
	o.ValidateTraces = &v
}

// GetOverrideEventsProcessingWarnings returns the OverrideEventsProcessingWarnings field value if set, zero value otherwise.
func (o *ShiftBlockCriteriaType) GetOverrideEventsProcessingWarnings() bool {
	if o == nil || IsNil(o.OverrideEventsProcessingWarnings) {
		var ret bool
		return ret
	}
	return *o.OverrideEventsProcessingWarnings
}

// GetOverrideEventsProcessingWarningsOk returns a tuple with the OverrideEventsProcessingWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShiftBlockCriteriaType) GetOverrideEventsProcessingWarningsOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideEventsProcessingWarnings) {
		return nil, false
	}
	return o.OverrideEventsProcessingWarnings, true
}

// HasOverrideEventsProcessingWarnings returns a boolean if a field has been set.
func (o *ShiftBlockCriteriaType) HasOverrideEventsProcessingWarnings() bool {
	if o != nil && !IsNil(o.OverrideEventsProcessingWarnings) {
		return true
	}

	return false
}

// SetOverrideEventsProcessingWarnings gets a reference to the given bool and assigns it to the OverrideEventsProcessingWarnings field.
func (o *ShiftBlockCriteriaType) SetOverrideEventsProcessingWarnings(v bool) {
	o.OverrideEventsProcessingWarnings = &v
}

func (o ShiftBlockCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShiftBlockCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewStartDate) {
		toSerialize["newStartDate"] = o.NewStartDate
	}
	if !IsNil(o.RemoveAlternateDates) {
		toSerialize["removeAlternateDates"] = o.RemoveAlternateDates
	}
	if !IsNil(o.ValidateAlternateDates) {
		toSerialize["validateAlternateDates"] = o.ValidateAlternateDates
	}
	if !IsNil(o.OverbookAll) {
		toSerialize["overbookAll"] = o.OverbookAll
	}
	if !IsNil(o.ValidatePreAllocatedRooms) {
		toSerialize["validatePreAllocatedRooms"] = o.ValidatePreAllocatedRooms
	}
	if !IsNil(o.ValidateTraces) {
		toSerialize["validateTraces"] = o.ValidateTraces
	}
	if !IsNil(o.OverrideEventsProcessingWarnings) {
		toSerialize["overrideEventsProcessingWarnings"] = o.OverrideEventsProcessingWarnings
	}
	return toSerialize, nil
}

type NullableShiftBlockCriteriaType struct {
	value *ShiftBlockCriteriaType
	isSet bool
}

func (v NullableShiftBlockCriteriaType) Get() *ShiftBlockCriteriaType {
	return v.value
}

func (v *NullableShiftBlockCriteriaType) Set(val *ShiftBlockCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableShiftBlockCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableShiftBlockCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShiftBlockCriteriaType(val *ShiftBlockCriteriaType) *NullableShiftBlockCriteriaType {
	return &NullableShiftBlockCriteriaType{value: val, isSet: true}
}

func (v NullableShiftBlockCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShiftBlockCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


