/*
OPERA Cloud Activity API

APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package act

import (
	"encoding/json"
)

// checks if the EmailInfoResponseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailInfoResponseType{}

// EmailInfoResponseType Defines elements related to fetched external emails stored.
type EmailInfoResponseType struct {
	HotelCodes []string `json:"hotelCodes,omitempty"`
	EmailID *EmailID `json:"emailID,omitempty"`
	AccountId *AccountId `json:"accountId,omitempty"`
	ContactId *ContactId `json:"contactId,omitempty"`
	BlockId *BlockId `json:"blockId,omitempty"`
	// Subject of the email.
	EmailSubject *string `json:"emailSubject,omitempty"`
	// Family name or last name of the Sender.
	SenderLastName *string `json:"senderLastName,omitempty"`
	// Given name or first name of the Sender.
	SenderFirstName *string `json:"senderFirstName,omitempty"`
	// Email address of the Sender.
	SenderEmailAddress *string `json:"senderEmailAddress,omitempty"`
	// Email Attachment Id for stored external emails.
	EmailAttachmentId *int32 `json:"emailAttachmentId,omitempty"`
	// Email Recieved Date Time of the Sender.
	EmailReceivedDateTime *string `json:"emailReceivedDateTime,omitempty"`
	// List of Email TO Recipients separated by \";\"
	EmailRecipients *string `json:"emailRecipients,omitempty"`
	// Indicates if the Email body has attachments included.
	HasEmailAttachments *bool `json:"hasEmailAttachments,omitempty"`
}

// NewEmailInfoResponseType instantiates a new EmailInfoResponseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailInfoResponseType() *EmailInfoResponseType {
	this := EmailInfoResponseType{}
	return &this
}

// NewEmailInfoResponseTypeWithDefaults instantiates a new EmailInfoResponseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailInfoResponseTypeWithDefaults() *EmailInfoResponseType {
	this := EmailInfoResponseType{}
	return &this
}

// GetHotelCodes returns the HotelCodes field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetHotelCodes() []string {
	if o == nil || IsNil(o.HotelCodes) {
		var ret []string
		return ret
	}
	return o.HotelCodes
}

// GetHotelCodesOk returns a tuple with the HotelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetHotelCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.HotelCodes) {
		return nil, false
	}
	return o.HotelCodes, true
}

// HasHotelCodes returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasHotelCodes() bool {
	if o != nil && !IsNil(o.HotelCodes) {
		return true
	}

	return false
}

// SetHotelCodes gets a reference to the given []string and assigns it to the HotelCodes field.
func (o *EmailInfoResponseType) SetHotelCodes(v []string) {
	o.HotelCodes = v
}

// GetEmailID returns the EmailID field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetEmailID() EmailID {
	if o == nil || IsNil(o.EmailID) {
		var ret EmailID
		return ret
	}
	return *o.EmailID
}

// GetEmailIDOk returns a tuple with the EmailID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetEmailIDOk() (*EmailID, bool) {
	if o == nil || IsNil(o.EmailID) {
		return nil, false
	}
	return o.EmailID, true
}

// HasEmailID returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasEmailID() bool {
	if o != nil && !IsNil(o.EmailID) {
		return true
	}

	return false
}

// SetEmailID gets a reference to the given EmailID and assigns it to the EmailID field.
func (o *EmailInfoResponseType) SetEmailID(v EmailID) {
	o.EmailID = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetAccountId() AccountId {
	if o == nil || IsNil(o.AccountId) {
		var ret AccountId
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetAccountIdOk() (*AccountId, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given AccountId and assigns it to the AccountId field.
func (o *EmailInfoResponseType) SetAccountId(v AccountId) {
	o.AccountId = &v
}

// GetContactId returns the ContactId field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetContactId() ContactId {
	if o == nil || IsNil(o.ContactId) {
		var ret ContactId
		return ret
	}
	return *o.ContactId
}

// GetContactIdOk returns a tuple with the ContactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetContactIdOk() (*ContactId, bool) {
	if o == nil || IsNil(o.ContactId) {
		return nil, false
	}
	return o.ContactId, true
}

// HasContactId returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasContactId() bool {
	if o != nil && !IsNil(o.ContactId) {
		return true
	}

	return false
}

// SetContactId gets a reference to the given ContactId and assigns it to the ContactId field.
func (o *EmailInfoResponseType) SetContactId(v ContactId) {
	o.ContactId = &v
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetBlockId() BlockId {
	if o == nil || IsNil(o.BlockId) {
		var ret BlockId
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetBlockIdOk() (*BlockId, bool) {
	if o == nil || IsNil(o.BlockId) {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasBlockId() bool {
	if o != nil && !IsNil(o.BlockId) {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given BlockId and assigns it to the BlockId field.
func (o *EmailInfoResponseType) SetBlockId(v BlockId) {
	o.BlockId = &v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetEmailSubject() string {
	if o == nil || IsNil(o.EmailSubject) {
		var ret string
		return ret
	}
	return *o.EmailSubject
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.EmailSubject) {
		return nil, false
	}
	return o.EmailSubject, true
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasEmailSubject() bool {
	if o != nil && !IsNil(o.EmailSubject) {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given string and assigns it to the EmailSubject field.
func (o *EmailInfoResponseType) SetEmailSubject(v string) {
	o.EmailSubject = &v
}

// GetSenderLastName returns the SenderLastName field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetSenderLastName() string {
	if o == nil || IsNil(o.SenderLastName) {
		var ret string
		return ret
	}
	return *o.SenderLastName
}

// GetSenderLastNameOk returns a tuple with the SenderLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetSenderLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.SenderLastName) {
		return nil, false
	}
	return o.SenderLastName, true
}

// HasSenderLastName returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasSenderLastName() bool {
	if o != nil && !IsNil(o.SenderLastName) {
		return true
	}

	return false
}

// SetSenderLastName gets a reference to the given string and assigns it to the SenderLastName field.
func (o *EmailInfoResponseType) SetSenderLastName(v string) {
	o.SenderLastName = &v
}

// GetSenderFirstName returns the SenderFirstName field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetSenderFirstName() string {
	if o == nil || IsNil(o.SenderFirstName) {
		var ret string
		return ret
	}
	return *o.SenderFirstName
}

// GetSenderFirstNameOk returns a tuple with the SenderFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetSenderFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.SenderFirstName) {
		return nil, false
	}
	return o.SenderFirstName, true
}

// HasSenderFirstName returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasSenderFirstName() bool {
	if o != nil && !IsNil(o.SenderFirstName) {
		return true
	}

	return false
}

// SetSenderFirstName gets a reference to the given string and assigns it to the SenderFirstName field.
func (o *EmailInfoResponseType) SetSenderFirstName(v string) {
	o.SenderFirstName = &v
}

// GetSenderEmailAddress returns the SenderEmailAddress field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetSenderEmailAddress() string {
	if o == nil || IsNil(o.SenderEmailAddress) {
		var ret string
		return ret
	}
	return *o.SenderEmailAddress
}

// GetSenderEmailAddressOk returns a tuple with the SenderEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetSenderEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SenderEmailAddress) {
		return nil, false
	}
	return o.SenderEmailAddress, true
}

// HasSenderEmailAddress returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasSenderEmailAddress() bool {
	if o != nil && !IsNil(o.SenderEmailAddress) {
		return true
	}

	return false
}

// SetSenderEmailAddress gets a reference to the given string and assigns it to the SenderEmailAddress field.
func (o *EmailInfoResponseType) SetSenderEmailAddress(v string) {
	o.SenderEmailAddress = &v
}

// GetEmailAttachmentId returns the EmailAttachmentId field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetEmailAttachmentId() int32 {
	if o == nil || IsNil(o.EmailAttachmentId) {
		var ret int32
		return ret
	}
	return *o.EmailAttachmentId
}

// GetEmailAttachmentIdOk returns a tuple with the EmailAttachmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetEmailAttachmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailAttachmentId) {
		return nil, false
	}
	return o.EmailAttachmentId, true
}

// HasEmailAttachmentId returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasEmailAttachmentId() bool {
	if o != nil && !IsNil(o.EmailAttachmentId) {
		return true
	}

	return false
}

// SetEmailAttachmentId gets a reference to the given int32 and assigns it to the EmailAttachmentId field.
func (o *EmailInfoResponseType) SetEmailAttachmentId(v int32) {
	o.EmailAttachmentId = &v
}

// GetEmailReceivedDateTime returns the EmailReceivedDateTime field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetEmailReceivedDateTime() string {
	if o == nil || IsNil(o.EmailReceivedDateTime) {
		var ret string
		return ret
	}
	return *o.EmailReceivedDateTime
}

// GetEmailReceivedDateTimeOk returns a tuple with the EmailReceivedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetEmailReceivedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailReceivedDateTime) {
		return nil, false
	}
	return o.EmailReceivedDateTime, true
}

// HasEmailReceivedDateTime returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasEmailReceivedDateTime() bool {
	if o != nil && !IsNil(o.EmailReceivedDateTime) {
		return true
	}

	return false
}

// SetEmailReceivedDateTime gets a reference to the given string and assigns it to the EmailReceivedDateTime field.
func (o *EmailInfoResponseType) SetEmailReceivedDateTime(v string) {
	o.EmailReceivedDateTime = &v
}

// GetEmailRecipients returns the EmailRecipients field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetEmailRecipients() string {
	if o == nil || IsNil(o.EmailRecipients) {
		var ret string
		return ret
	}
	return *o.EmailRecipients
}

// GetEmailRecipientsOk returns a tuple with the EmailRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetEmailRecipientsOk() (*string, bool) {
	if o == nil || IsNil(o.EmailRecipients) {
		return nil, false
	}
	return o.EmailRecipients, true
}

// HasEmailRecipients returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasEmailRecipients() bool {
	if o != nil && !IsNil(o.EmailRecipients) {
		return true
	}

	return false
}

// SetEmailRecipients gets a reference to the given string and assigns it to the EmailRecipients field.
func (o *EmailInfoResponseType) SetEmailRecipients(v string) {
	o.EmailRecipients = &v
}

// GetHasEmailAttachments returns the HasEmailAttachments field value if set, zero value otherwise.
func (o *EmailInfoResponseType) GetHasEmailAttachments() bool {
	if o == nil || IsNil(o.HasEmailAttachments) {
		var ret bool
		return ret
	}
	return *o.HasEmailAttachments
}

// GetHasEmailAttachmentsOk returns a tuple with the HasEmailAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailInfoResponseType) GetHasEmailAttachmentsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasEmailAttachments) {
		return nil, false
	}
	return o.HasEmailAttachments, true
}

// HasHasEmailAttachments returns a boolean if a field has been set.
func (o *EmailInfoResponseType) HasHasEmailAttachments() bool {
	if o != nil && !IsNil(o.HasEmailAttachments) {
		return true
	}

	return false
}

// SetHasEmailAttachments gets a reference to the given bool and assigns it to the HasEmailAttachments field.
func (o *EmailInfoResponseType) SetHasEmailAttachments(v bool) {
	o.HasEmailAttachments = &v
}

func (o EmailInfoResponseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailInfoResponseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelCodes) {
		toSerialize["hotelCodes"] = o.HotelCodes
	}
	if !IsNil(o.EmailID) {
		toSerialize["emailID"] = o.EmailID
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.ContactId) {
		toSerialize["contactId"] = o.ContactId
	}
	if !IsNil(o.BlockId) {
		toSerialize["blockId"] = o.BlockId
	}
	if !IsNil(o.EmailSubject) {
		toSerialize["emailSubject"] = o.EmailSubject
	}
	if !IsNil(o.SenderLastName) {
		toSerialize["senderLastName"] = o.SenderLastName
	}
	if !IsNil(o.SenderFirstName) {
		toSerialize["senderFirstName"] = o.SenderFirstName
	}
	if !IsNil(o.SenderEmailAddress) {
		toSerialize["senderEmailAddress"] = o.SenderEmailAddress
	}
	if !IsNil(o.EmailAttachmentId) {
		toSerialize["emailAttachmentId"] = o.EmailAttachmentId
	}
	if !IsNil(o.EmailReceivedDateTime) {
		toSerialize["emailReceivedDateTime"] = o.EmailReceivedDateTime
	}
	if !IsNil(o.EmailRecipients) {
		toSerialize["emailRecipients"] = o.EmailRecipients
	}
	if !IsNil(o.HasEmailAttachments) {
		toSerialize["hasEmailAttachments"] = o.HasEmailAttachments
	}
	return toSerialize, nil
}

type NullableEmailInfoResponseType struct {
	value *EmailInfoResponseType
	isSet bool
}

func (v NullableEmailInfoResponseType) Get() *EmailInfoResponseType {
	return v.value
}

func (v *NullableEmailInfoResponseType) Set(val *EmailInfoResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailInfoResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailInfoResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailInfoResponseType(val *EmailInfoResponseType) *NullableEmailInfoResponseType {
	return &NullableEmailInfoResponseType{value: val, isSet: true}
}

func (v NullableEmailInfoResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailInfoResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


