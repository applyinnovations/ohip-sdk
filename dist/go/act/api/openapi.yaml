openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Sales Activity functionality in OPERA Cloud. <br\
    \ /><br /> Activities provide you with an account management tool for managing\
    \ daily tasks such as appointments, sales calls, contact follow-up, and so on.<br\
    \ /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document\
    \ and all content within is available under the Universal Permissive License v\
    \ 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or\
    \ its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Activity API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /act/v1
tags:
- description: "The Activity REST APIs allow you to view, create, update, and complete\
    \ an Activity in OPERA Cloud. You are also able to perform more actions such as\
    \ add attachments."
  name: Activity
paths:
  /activities:
    delete:
      description: "If you want to delete an activity, use this API.  You must know\
        \ the activity ID for the request. <p><strong>OperationId:</strong>deleteMultipleActivities</p>"
      operationId: deleteMultipleActivities
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete activities
      tags:
      - Activity
    get:
      description: Use this API to retrieve activities for multiple hotels.  Results
        can be narrowed down by your search criteria in the request message. <p><strong>OperationId:</strong>getActivitiesByMultipleHotelIds</p>
      operationId: getActivitiesByMultipleHotelIds
      parameters:
      - description: Indicates whether the Activity is completed or not.
        in: query
        name: completed
        schema:
          type: boolean
      - description: Indicates whether the Activity has high priority.
        in: query
        name: highPriority
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Search string to be used for super search.
        in: query
        name: text
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A collection of supported list of activity classes.
        in: query
        name: activityClass
        schema:
          enum:
          - Appointment
          - Todo
          type: string
      - explode: true
        in: query
        name: activityType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Purpose of the Activity.
        in: query
        name: activityPurpose
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: contactId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activitiesInfo'
            application/json:
              example:
                activitiesInformation:
                - activityId:
                    id: "149571"
                  activityDetail:
                    hotelId: HOTEL2
                    activityClass: Todo
                    activityType: OUT
                    activityPurpose: Outlook Activity
                    activityOwner: ABAS
                    startDateTime: 2019-12-09
                    endDateTime: 2019-12-10
                    status:
                      completed: false
                    highPriority: false
                - activityId:
                    id: "198848"
                  activityDetail:
                    hotelId: HOTEL1
                    activityClass: Appointment
                    activityType: BROCHURE
                    activityPurpose: TEST1
                    activityOwner: JBS
                    startDateTime: 2020-01-22
                    endDateTime: 2020-01-23
                    status:
                      completed: false
                    highPriority: false
                  linkedAccounts:
                    activityAccount:
                    - profileIdList:
                      - id: "679003"
                      profile:
                        customer:
                          personName:
                          - givenName: Thomas
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                        emails:
                          emailInfo:
                          - email: eg@example.com
                      primary: true
                    fullOverlay: false
                  indicators:
                  - indicatorName: Profiles
                    count: "1"
                - activityId:
                    id: "221111"
                  activityDetail:
                    hotelId: HOTEL2
                    activityClass: Appointment
                    activityType: BROCHURE
                    activityPurpose: 127 1
                    activityOwner: GSS
                    startDateTime: 2020-02-14 08:45:00.0
                    endDateTime: 2020-02-14 09:00:00.0
                    status:
                      completed: false
                    highPriority: false
                  linkedAccounts:
                    activityAccount:
                    - profileIdList:
                      - id: "783412"
                      profile:
                        customer:
                          personName:
                          - givenName: Jenny
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                        emails:
                          emailInfo:
                          - email: Jenny@example.com
                      primary: true
                    fullOverlay: false
                  linkedBlocks:
                  - blockIdList:
                    - id: "26957"
                    blockName: Christmas Party
                  indicators:
                  - indicatorName: Profiles
                    count: "2"
                  - indicatorName: Blocks
                    count: "1"
                - activityId:
                    id: "221112"
                  activityDetail:
                    hotelId: HOTEL2
                    activityClass: Appointment
                    activityType: BROCHURE
                    activityPurpose: Brochure Requests
                    activityOwner: GSS
                    startDateTime: 2020-02-14 08:45:00.0
                    endDateTime: 2020-02-14 09:00:00.0
                    status:
                      completed: false
                    highPriority: true
                  linkedContacts:
                    activityContact:
                    - profileIdList:
                      - id: "783419"
                      profile:
                        customer:
                          personName:
                          - givenName: 'Sussan '
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                        emails:
                          emailInfo:
                          - email: email@example.com
                      primary: true
                    fullOverlay: false
                  indicators:
                  - indicatorName: Profiles
                    count: "1"
                totalPages: "1"
                pageNumber: "1"
                maxFetchCount: "100"
                allRowsFetched: true
                totalRows: "3"
          description: Response object after fetching Activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivitiesByMultipleHotelIds not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activities
      tags:
      - Activity
  /activities/activitiesCompletion:
    post:
      description: Use this API to mark multiple Activities as completed in 1 request.  You
        must know the OPERA Activity ID's for this API. <p><strong>OperationId:</strong>postMultipleActivitiesCompletion</p>
      operationId: postMultipleActivitiesCompletion
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postMultipleActivitiesCompletion_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Complete activities
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
  /hotels/{hotelId}/activities:
    get:
      description: "You can use this API to retrieve multiple Activities for a hotel,\
        \ you can narrow the results using different search criteria  <p><strong>OperationId:</strong>getActivities</p>"
      operationId: getActivities
      parameters:
      - description: This is the Hotel Code of the Activity
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates whether the Activity is completed or not.
        in: query
        name: completed
        schema:
          type: boolean
      - description: Indicates whether the Activity has high priority.
        in: query
        name: highPriority
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Search string to be used for super search.
        in: query
        name: text
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A collection of supported list of activity classes.
        in: query
        name: activityClass
        schema:
          enum:
          - Appointment
          - Todo
          type: string
      - explode: true
        in: query
        name: activityType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Purpose of the Activity.
        in: query
        name: activityPurpose
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: contactId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activitiesInfo'
            application/json:
              example:
                activitiesInformation:
                - activityId:
                    id: "128612"
                  activityDetail:
                    hotelId: HOTEL1
                    activityClass: Appointment
                    activityType: TODO
                    activityPurpose: Call client and follow up on notes
                    activityOwner: NC
                    startDateTime: 2020-02-06
                    endDateTime: 2020-02-07
                    status:
                      completed: false
                    highPriority: false
                - activityId:
                    id: "128613"
                  activityDetail:
                    hotelId: HOTEL1
                    activityClass: Appointment
                    activityType: TODO
                    activityPurpose: Call client and follow up on meeting
                    activityOwner: NC
                    startDateTime: 2020-02-06
                    endDateTime: 2020-02-07
                    status:
                      completed: false
                    highPriority: false
                - activityId:
                    id: "128614"
                  activityDetail:
                    hotelId: HOTEL1
                    activityClass: Appointment
                    activityType: ACTIVITYTYPE3
                    activityPurpose: For discussion on project 2
                    activityOwner: NC
                    startDateTime: 2020-02-06 09:45:00.0
                    endDateTime: 2020-02-06 10:05:00.0
                    status:
                      completed: false
                    highPriority: false
                - activityId:
                    id: "129843"
                  activityDetail:
                    hotelId: HOTEL3
                    activityClass: Appointment
                    activityType: "1234"
                    activityPurpose: Update meeting Notes
                    activityOwner: TJ
                    startDateTime: 2020-02-11 09:00:00.0
                    endDateTime: 2020-02-11 09:20:00.0
                    status:
                      completed: false
                    highPriority: false
                pageNumber: "1"
                maxFetchCount: "200"
                totalRows: "1000"
                links:
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/
                  rel: self
                  templated: false
                  method: POST
                  operationId: postActivity
          description: Response object after fetching Activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Activities not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activities by hotel
      tags:
      - Activity
    post:
      description: "Use postActivities to create a new activity for a hotel.  You\
        \ would need to know the types of Activities a hotel accepts, such as Appointments,\
        \ TODO.  Use ListOfValues API's to find the available types at a hotel. <p><strong>OperationId:</strong>postActivities</p>"
      operationId: postActivities
      parameters:
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivities_request'
        description: Request object for creating Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create activities in a hotel
      tags:
      - Activity
      x-codegen-request-body-name: activitiesInformation
  /hotels/{hotelId}/activities/{activityId}:
    delete:
      description: Use this API to mark an Activity as deleted.  You must know the
        OPERA Activity ID for this API. <p><strong>OperationId:</strong>deleteActivities</p>
      operationId: deleteActivities
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete activity in a hotel by ID
      tags:
      - Activity
    get:
      description: "You can use this API to retrieve an Activity for a hotel, using\
        \ the OPERA Activity ID in the request. <p><strong>OperationId:</strong>getActivity</p>"
      operationId: getActivity
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Instruction to fetch Activity's information, linked Block and\
          \ Profile, Attachments and linked Activities."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ActivityInfo
            - Profiles
            - Blocks
            - Attachments
            - LinkedActivities
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activity'
            application/json:
              example:
                activityDetails:
                  activityId:
                    type: Activity
                    id: "114026"
                  activityDetail:
                    hotelId: HOTEL1
                    activityClass: Appointment
                    activityType: ASDF
                    activityTypeDescription: asd
                    activityPurpose: Create new Appt with Main Stakeholder
                    activityOwner: TOM
                    startDateTime: 2019-12-04 09:20:00.0
                    endDateTime: 2019-12-04 09:20:00.0
                    status:
                      completedOn: 2019-12-04 16:01:00.0
                      completed: true
                    createDateTime: 2019-12-04 02:33:10.0
                    creatorId: BEN@HOTEL1
                    lastModifyDateTime: 2019-12-20 01:49:58.0
                    lastModifierId: BEN@HOTEL1
                  linkedAccounts:
                    activityAccount:
                    - profileIdList:
                      - id: "3108537"
                      profile:
                        customer:
                          personName:
                          - givenName: Tom
                        addresses:
                          addressInfo:
                          - address:
                              addressLine:
                              - 500 Oracle Parkway
                              - null
                              - null
                              - null
                              cityName: Redwood Shores
                              postalCode: "94065"
                              county: USA
                        telephones:
                          telephoneInfo:
                          - telephone:
                              phoneNumber: +1 415 555 0100
                        profileType: Company
                      primary: true
                    - profileIdList:
                      - id: "3103255"
                      profile:
                        customer:
                          personName:
                          - givenName: Ben
                        addresses:
                          addressInfo:
                          - address:
                              county: USA
                        profileType: Source
                      primary: false
                    fullOverlay: false
                  linkedContacts:
                    activityContact:
                    - profileIdList:
                      - id: "3108539"
                      profile:
                        customer:
                          personName:
                          - givenName: Chris
                        addresses:
                          addressInfo:
                          - address:
                              addressLine:
                              - 10 Main Street
                              - null
                              - null
                              - null
                              county: USA
                        telephones:
                          telephoneInfo:
                          - telephone:
                              phoneNumber: +1 415 555 0100
                        relationships:
                          relationship:
                          - relationshipProfile:
                              profileIdList:
                              - id: "3108537"
                                type: ContactId
                              profileType: Company
                        profileType: Contact
                      primary: true
                      activityLinkedProfileType: CompanyContact
                    - profileIdList:
                      - id: "3106529"
                      profile:
                        customer:
                          personName:
                          - givenName: Sarah
                        relationships:
                          relationship:
                          - relationshipProfile:
                              profileIdList:
                              - id: "3089751"
                                type: ContactId
                              profileType: Company
                        profileType: Contact
                      primary: false
                      activityLinkedProfileType: CompanyContact
                    fullOverlay: false
                  linkedBlocks:
                  - blockIdList:
                    - id: "30725"
                    blockCode: 0511ENDOF_001
                    blockName: End of Season Event
                    timeSpan:
                      startDate: 2020-11-05
                      endDate: 2020-11-06
                  indicators:
                  - indicatorName: Blocks
                    count: "1"
                  - indicatorName: Profiles
                    count: "4"
                links:
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=ActivityInfo
                  rel: self
                  templated: false
                  method: GET
                  operationId: getActivity
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Profiles
                  rel: self
                  templated: false
                  method: GET
                  operationId: getActivity
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Blocks
                  rel: self
                  templated: false
                  method: GET
                  operationId: getActivity
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Attachments
                  rel: self
                  templated: false
                  method: GET
                  operationId: getActivity
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=LinkedActivities
                  rel: self
                  templated: false
                  method: GET
                  operationId: getActivity
          description: Response object for fetching activity.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Activity not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activity in a hotel by ID
      tags:
      - Activity
    put:
      description: Use this to update an existing Activity for a hotel.  You must
        know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>putActivities</p>
      operationId: putActivities
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivities_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update activity in a hotel by ID
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
  /hotels/{hotelId}/activities/{activityId}/activityCompletion:
    post:
      description: Use this API to mark one Activity as completed in 1 request.  You
        must know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>postSingleActivityCompletion</p>
      operationId: postSingleActivityCompletion
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postSingleActivityCompletion_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Complete activity in a hotel by ID
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    activitiesInfo:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityListType:
      description: Activity information in detail.
      items:
        $ref: '#/components/schemas/activityDetailsType'
      maxItems: 4000
      type: array
    activityDetailsType:
      description: Complete Activity Related Information.
      properties:
        activityId:
          $ref: '#/components/schemas/activityId'
        activityDetail:
          $ref: '#/components/schemas/activityInfoType'
        linkedAccounts:
          $ref: '#/components/schemas/activityDetailsType_linkedAccounts'
        linkedContacts:
          $ref: '#/components/schemas/activityDetailsType_linkedContacts'
        linkedBlocks:
          description: List of Blocks that are linked to the Activity.
          items:
            $ref: '#/components/schemas/activityBlockInfoType'
          maxItems: 4000
          type: array
        linkedAttachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        linkedActivities:
          description: The list of activities associated with an activity.
          items:
            $ref: '#/components/schemas/linkedActivityDetailsType'
          maxItems: 4000
          type: array
        indicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
      type: object
    activityId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    activityInfoType:
      description: Activity related information.
      properties:
        hotelId:
          description: This is the Hotel Code of the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityClass:
          $ref: '#/components/schemas/activityConfigClassType'
        activityType:
          description: Indicates the Activity Type used for the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityTypeDescription:
          description: Indicates the description used for the Activity Type.
          maxLength: 100
          minLength: 0
          type: string
        activityPurpose:
          description: Indicates Purpose of the Activity.
          maxLength: 100
          minLength: 0
          type: string
        activityTraceCode:
          description: Activity Trace code used for the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityOwner:
          description: Owner of Activity.
          maxLength: 20
          minLength: 0
          type: string
        startDateTime:
          description: Start Date time of Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        endDateTime:
          description: End Date time of Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        status:
          $ref: '#/components/schemas/activityInfoType_status'
        activityResult:
          description: Indicates the outcome of a completed Activity.
          maxLength: 20
          minLength: 0
          type: string
        notes:
          description: Notes associated with an Activity.
          maxLength: 4000
          minLength: 0
          type: string
        followup:
          description: Indicates whether Followup Activity is needed or not.
          type: boolean
        followupStartDateTime:
          description: Start Date time of the Followup Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        highPriority:
          description: Indicates whether Activity has a high priority.
          type: boolean
        overlapActivity:
          description: Determines whether the Activity overlaps with another activity
            with same date and time for the same owner.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    activityConfigClassType:
      description: A collection of supported list of activity classes.
      enum:
      - Appointment
      - Todo
      type: string
    activityLinkedProfilesType:
      description: A collection of Unique IDs of Profiles.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileType'
        primary:
          description: Is this attached profile primary?
          type: boolean
        activityLinkedProfileType:
          $ref: '#/components/schemas/linkedProfileTypeType'
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
        emails:
          $ref: '#/components/schemas/profileType_emails'
        uRLs:
          $ref: '#/components/schemas/profileType_uRLs'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileType_profileDeliveryMethods'
        relationships:
          $ref: '#/components/schemas/profileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        value:
          description: Property Value
          type: string
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        primary:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
      type: object
    relationshipProfileType:
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    linkedProfileTypeType:
      description: Simple type for profile types linked to activity.
      enum:
      - Company
      - Agent
      - Source
      - CompanyContact
      - AgentContact
      - SourceContact
      type: string
    blockListType:
      description: List of Blocks that are linked to the Activity.
      items:
        $ref: '#/components/schemas/activityBlockInfoType'
      maxItems: 4000
      type: array
    activityBlockInfoType:
      description: ""
      properties:
        blockIdList:
          description: Defines descriptive name and unique identification combination.
          items:
            $ref: '#/components/schemas/uniqueNameIDType'
          maxItems: 4000
          type: array
        blockCode:
          description: Block code for the block.
          maxLength: 20
          minLength: 0
          type: string
        blockName:
          description: Name of the block.
          maxLength: 2000
          minLength: 0
          type: string
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        primary:
          description: "When true, indicates a primary information."
          type: boolean
      type: object
    uniqueNameIDListType:
      description: Defines descriptive name and unique identification combination.
      items:
        $ref: '#/components/schemas/uniqueNameIDType'
      maxItems: 4000
      type: array
    uniqueNameIDType:
      description: "Defines descriptive name, unique identification, and basic information\
        \ combination."
      properties:
        primary:
          description: "When true, indicates a primary information."
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    attachmentType:
      description: Attached files.
      properties:
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    linkedActivityDetailsType:
      description: Linked Activity Related Information.
      properties:
        activityId:
          $ref: '#/components/schemas/activityId'
        linkedActivityDetail:
          $ref: '#/components/schemas/activityInfoType'
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    activitiesToChange:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        activityDetailsEditFlag:
          description: Signifies whether only activity details are being modified.
          type: boolean
        updateLinkedActivities:
          description: Signifies whether the linked activity details should be modified
            or not.
          type: boolean
        completeMode:
          description: Signifies whether complete details of activity should alone
            be modified.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activity:
      properties:
        activityDetails:
          $ref: '#/components/schemas/activityDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activitiesInformation:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postMultipleActivitiesCompletion_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
          - activityId:
              id: "88029"
            activityDetail:
              hotelId: HOTEL1
              status:
                completed: true
                completedOn: 2020-02-11 12:01:00.0
                completedBy: BEN@HOTEL1
              notes: completing from external system
              activityResult: "24"
          - activityId:
              id: "88030"
            activityDetail:
              hotelId: PROP1
              status:
                completed: true
                completedOn: 2020-02-11 12:01:00.0
                completedBy: BEN@HOTEL1
              notes: completing from external system
              activityResult: "25"
        type: object
    postActivities_request:
      allOf:
      - $ref: '#/components/schemas/activitiesInformation'
      - example:
          activitiesInformation:
            activityDetail:
              hotelId: HOTEL1
              activityClass: Appointment
              activityType: FOLLOWUP
              activityPurpose: tomorrow
              activityOwner: "3089500"
              startDateTime: 2020-10-28 09:45:32.0
              endDateTime: 2020-10-28 10:45:32.0
              status:
                completed: false
              notes: Notes about the activity can go here
              highPriority: false
        type: object
    putActivities_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
            activityId:
              id: "219113"
            activityDetail:
              hotelId: HOTEL1
              activityClass: Todo
              activityType: EXTMTG
              activityTypeDescription: External Meeting
              activityPurpose: Change activity to TODO
              activityOwner: "287117"
              startDateTime: 2020-11-02
              endDateTime: 2020-11-03
              status:
                completed: false
              notes: Notes about the Activity can go here
              createDateTime: 2020-02-14 02:13:33.0
              creatorId: BEN@HOTEL1
              lastModifyDateTime: 2020-02-14 02:13:33.0
              lastModifierId: BEN@HOTEL1
        type: object
    postSingleActivityCompletion_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
          - activityDetail:
              status:
                completed: true
                completedOn: 2020-01-01 12:01:00.0
                completedBy: BEN@HOTEL1
              notes: completing the Activity from external system
              activityResult: "24"
        type: object
    activityDetailsType_linkedAccounts:
      description: "Provides information about the accounts linked to an activity.\
        \ Please note that during a change operation this performs a full overlay\
        \ if the attribute FullOverlay is set to true. In a full overlay, all the\
        \ accounts that should be associated to the activity should be provided during\
        \ a change operation. Any accounts not provided will be detached from this\
        \ activity. By default the full overlay is considered false if this property\
        \ is left blank. If values are provided for accounts, only the full overlay\
        \ functionality is provided at this time."
      properties:
        activityAccount:
          description: The list of accounts associated with an activity.
          items:
            $ref: '#/components/schemas/activityLinkedProfilesType'
          maxItems: 4000
          type: array
        fullOverlay:
          description: Indicates whether to perform a full overlay for the accounts.
          type: boolean
      type: object
    activityDetailsType_linkedContacts:
      description: "Provides information about the contacts linked to an activity.\
        \ Please note that during a change operation this performs a full overlay\
        \ if the attribute FullOverlay is set to true. In a full overlay, all the\
        \ contacts that should be associated to the activity should be provided during\
        \ a change operation. Any contacts not provided will be detached from this\
        \ activity. By default the full overlay is considered false if this property\
        \ is left blank. If values are provided for contacts, only the full overlay\
        \ functionality is provided at this time."
      properties:
        activityContact:
          description: The list of contacts associated with an activity.
          items:
            $ref: '#/components/schemas/activityLinkedProfilesType'
          maxItems: 4000
          type: array
        fullOverlay:
          description: Indicates whether to perform a full overlay for the contacts.
          type: boolean
      type: object
    activityInfoType_status:
      description: Completion status of Activity.
      properties:
        completedBy:
          description: Name of person who completed the Activity.
          type: string
        completedOn:
          description: Date on which the Activity was completed.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        completed:
          description: Indicates whether Activity is Completed or not.
          type: boolean
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
x-original-swagger-version: "2.0"
