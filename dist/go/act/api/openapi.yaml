openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Sales Activity functionality in OPERA Cloud. <br\
    \ /><br /> Activities provide you with an account management tool for managing\
    \ daily tasks such as appointments, sales calls, contact follow-up, and so on.<br\
    \ /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document\
    \ and all content within is available under the Universal Permissive License v\
    \ 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or\
    \ its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Activity API
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /act/v1
tags:
- description: "The Activity REST APIs allow you to view, create, update, and complete\
    \ an Activity in OPERA Cloud. You are also able to perform more actions such as\
    \ add attachments."
  name: Activity
paths:
  /activities:
    delete:
      description: "If you want to delete an activity, use this API.  You must know\
        \ the activity ID for the request. <p><strong>OperationId:</strong>deleteMultipleActivities</p>"
      operationId: deleteMultipleActivities
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete activities
      tags:
      - Activity
    get:
      description: Use this API to retrieve activities for multiple hotels.  Results
        can be narrowed down by your search criteria in the request message. <p><strong>OperationId:</strong>getActivitiesByMultipleHotelIds</p>
      operationId: getActivitiesByMultipleHotelIds
      parameters:
      - description: Indicates whether the Activity is completed or not.
        in: query
        name: completed
        schema:
          type: boolean
      - description: Indicates whether the Activity has high priority.
        in: query
        name: highPriority
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Search string to be used for super search.
        in: query
        name: text
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A collection of supported list of activity classes.
        in: query
        name: activityClass
        schema:
          enum:
          - Appointment
          - Todo
          type: string
      - explode: true
        in: query
        name: activityType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Purpose of the Activity.
        in: query
        name: activityPurpose
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: contactId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activitiesInfo'
            application/json:
              example:
                activitiesInformation:
                - activityDetail:
                    activityClass: Todo
                    activityOwner: ABAS
                    activityPurpose: Outlook Activity
                    activityType: OUT
                    endDateTime: 2019-12-10
                    highPriority: false
                    hotelId: HOTEL2
                    startDateTime: 2019-12-09
                    status:
                      completed: false
                  activityId:
                    id: "149571"
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: JBS
                    activityPurpose: TEST1
                    activityType: BROCHURE
                    endDateTime: 2020-01-23
                    highPriority: false
                    hotelId: HOTEL1
                    startDateTime: 2020-01-22
                    status:
                      completed: false
                  activityId:
                    id: "198848"
                  indicators:
                  - count: "1"
                    indicatorName: Profiles
                  linkedAccounts:
                    activityAccount:
                    - primary: true
                      profile:
                        customer:
                          personName:
                          - givenName: Thomas
                        emails:
                          emailInfo:
                          - email: eg@example.com
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                      profileIdList:
                      - id: "679003"
                    fullOverlay: false
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: GSS
                    activityPurpose: 127 1
                    activityType: BROCHURE
                    endDateTime: 2020-02-14 09:00:00.0
                    highPriority: false
                    hotelId: HOTEL2
                    startDateTime: 2020-02-14 08:45:00.0
                    status:
                      completed: false
                  activityId:
                    id: "221111"
                  indicators:
                  - count: "2"
                    indicatorName: Profiles
                  - count: "1"
                    indicatorName: Blocks
                  linkedAccounts:
                    activityAccount:
                    - primary: true
                      profile:
                        customer:
                          personName:
                          - givenName: Jenny
                        emails:
                          emailInfo:
                          - email: Jenny@example.com
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                      profileIdList:
                      - id: "783412"
                    fullOverlay: false
                  linkedBlocks:
                  - blockIdList:
                    - id: "26957"
                    blockName: Christmas Party
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: GSS
                    activityPurpose: Brochure Requests
                    activityType: BROCHURE
                    endDateTime: 2020-02-14 09:00:00.0
                    highPriority: true
                    hotelId: HOTEL2
                    startDateTime: 2020-02-14 08:45:00.0
                    status:
                      completed: false
                  activityId:
                    id: "221112"
                  indicators:
                  - count: "1"
                    indicatorName: Profiles
                  linkedContacts:
                    activityContact:
                    - primary: true
                      profile:
                        customer:
                          personName:
                          - givenName: 'Sussan '
                        emails:
                          emailInfo:
                          - email: email@example.com
                        telephones:
                          telephoneInfo:
                          - telephone: +1 415 555 0100
                      profileIdList:
                      - id: "783419"
                    fullOverlay: false
                allRowsFetched: true
                maxFetchCount: "100"
                pageNumber: "1"
                totalPages: "1"
                totalRows: "3"
          description: Response object after fetching Activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivitiesByMultipleHotelIds not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activities
      tags:
      - Activity
  /activities/activitiesCompletion:
    post:
      description: Use this API to mark multiple Activities as completed in 1 request.  You
        must know the OPERA Activity ID's for this API. <p><strong>OperationId:</strong>postMultipleActivitiesCompletion</p>
      operationId: postMultipleActivitiesCompletion
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postMultipleActivitiesCompletion_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Complete activities
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
  /activities/emails:
    get:
      description: "Use this API to retrieve emails which have been received from\
        \ an external system and stored in OPERA. They are stored against accounts,\
        \ contacts and blocks in OPERA. <p><strong>OperationId:</strong>getEmails</p>"
      operationId: getEmails
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountIdId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: accountIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: contactIdId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: contactIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: contactIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: contactIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockIdId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: blockIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: blockIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: blockIdType
        schema:
          type: string
      - description: Subject of the email.
        in: query
        name: emailSubject
        schema:
          type: string
      - description: Family name or last name of the Sender.
        in: query
        name: senderLastName
        schema:
          type: string
      - description: Given name or first name of the Sender.
        in: query
        name: senderFirstName
        schema:
          type: string
      - description: Email address of the Sender.
        in: query
        name: senderEmailAddress
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/emailsDetails'
          description: Response object for FetchEmails Operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Emails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Emails
      tags:
      - Activity
  /activities/{activityId}:
    delete:
      description: Use this API to mark an Activity as deleted.  You must know the
        OPERA Activity ID for this API. <p><strong>OperationId:</strong>deleteActivitiesWithOutHotelId</p>
      operationId: deleteActivitiesWithOutHotelId
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete activity  by ID
      tags:
      - Activity
    get:
      description: "You can use this API to retrieve an Activity, using the OPERA\
        \ Activity ID in the request. <p><strong>OperationId:</strong>getActivityWithOutHotelId</p>"
      operationId: getActivityWithOutHotelId
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Instruction to fetch Activity's information, linked Block and\
          \ Profile, Attachments and linked Activities."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ActivityInfo
            - Profiles
            - Blocks
            - Attachments
            - LinkedActivities
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activity'
          description: Response object for fetching activity.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityWithOutHotelId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activity by ID
      tags:
      - Activity
  /activities/{activityId}/attachments/{attachmentId}:
    delete:
      description: You can use this API to delete an attachment which exists on an
        activity in OPERA Cloud. <p><strong>OperationId:</strong>deleteActivityAttachmentWithoutHotelId</p>
      operationId: deleteActivityAttachmentWithoutHotelId
      parameters:
      - description: Attachment ID
        in: path
        name: attachmentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Activity ID
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete an attachment from an Activity
      tags:
      - Activity
  /hotels/{hotelId}/activities:
    get:
      description: "You can use this API to retrieve multiple Activities for a hotel,\
        \ you can narrow the results using different search criteria  <p><strong>OperationId:</strong>getActivities</p>"
      operationId: getActivities
      parameters:
      - description: This is the Hotel Code of the Activity
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates whether the Activity is completed or not.
        in: query
        name: completed
        schema:
          type: boolean
      - description: Indicates whether the Activity has high priority.
        in: query
        name: highPriority
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Search string to be used for super search.
        in: query
        name: text
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ownerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A collection of supported list of activity classes.
        in: query
        name: activityClass
        schema:
          enum:
          - Appointment
          - Todo
          type: string
      - explode: true
        in: query
        name: activityType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Purpose of the Activity.
        in: query
        name: activityPurpose
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: contactId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activitiesInfo'
            application/json:
              example:
                activitiesInformation:
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: NC
                    activityPurpose: Call client and follow up on notes
                    activityType: TODO
                    endDateTime: 2020-02-07
                    highPriority: false
                    hotelId: HOTEL1
                    startDateTime: 2020-02-06
                    status:
                      completed: false
                  activityId:
                    id: "128612"
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: NC
                    activityPurpose: Call client and follow up on meeting
                    activityType: TODO
                    endDateTime: 2020-02-07
                    highPriority: false
                    hotelId: HOTEL1
                    startDateTime: 2020-02-06
                    status:
                      completed: false
                  activityId:
                    id: "128613"
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: NC
                    activityPurpose: For discussion on project 2
                    activityType: ACTIVITYTYPE3
                    endDateTime: 2020-02-06 10:05:00.0
                    highPriority: false
                    hotelId: HOTEL1
                    startDateTime: 2020-02-06 09:45:00.0
                    status:
                      completed: false
                  activityId:
                    id: "128614"
                - activityDetail:
                    activityClass: Appointment
                    activityOwner: TJ
                    activityPurpose: Update meeting Notes
                    activityType: "1234"
                    endDateTime: 2020-02-11 09:20:00.0
                    highPriority: false
                    hotelId: HOTEL3
                    startDateTime: 2020-02-11 09:00:00.0
                    status:
                      completed: false
                  activityId:
                    id: "129843"
                links:
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/
                  method: POST
                  operationId: postActivity
                  rel: self
                  templated: false
                maxFetchCount: "200"
                pageNumber: "1"
                totalRows: "1000"
          description: Response object after fetching Activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Activities not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activities by hotel
      tags:
      - Activity
    post:
      description: "Use postActivities to create a new activity for a hotel.  You\
        \ would need to know the types of Activities a hotel accepts, such as Appointments,\
        \ TODO.  Use ListOfValues API's to find the available types at a hotel. <p><strong>OperationId:</strong>postActivities</p>"
      operationId: postActivities
      parameters:
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postActivities_request'
        description: Request object for creating Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create activities in a hotel
      tags:
      - Activity
      x-codegen-request-body-name: activitiesInformation
  /hotels/{hotelId}/activities/statistics:
    get:
      description: You can use this API to retrieve all statistics of activities.
        <p><strong>OperationId:</strong>getActivityStatistics</p>
      operationId: getActivityStatistics
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Start date of the report.
        in: query
        name: reportStartDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: activityTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: ownerCodeList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityStatistics'
          description: Response object after fetching activity statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Activity statistics
      tags:
      - Activity
  /hotels/{hotelId}/activities/{activityId}:
    delete:
      description: Use this API to mark an Activity as deleted.  You must know the
        OPERA Activity ID for this API. <p><strong>OperationId:</strong>deleteActivities</p>
      operationId: deleteActivities
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: activityIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete activity in a hotel by ID
      tags:
      - Activity
    get:
      description: "You can use this API to retrieve an Activity for a hotel, using\
        \ the OPERA Activity ID in the request. <p><strong>OperationId:</strong>getActivity</p>"
      operationId: getActivity
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Instruction to fetch Activity's information, linked Block and\
          \ Profile, Attachments and linked Activities."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ActivityInfo
            - Profiles
            - Blocks
            - Attachments
            - LinkedActivities
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activity'
            application/json:
              example:
                activityDetails:
                  activityDetail:
                    activityClass: Appointment
                    activityOwner: TOM
                    activityPurpose: Create new Appt with Main Stakeholder
                    activityType: ASDF
                    activityTypeDescription: asd
                    createDateTime: 2019-12-04 02:33:10.0
                    creatorId: BEN@HOTEL1
                    endDateTime: 2019-12-04 09:20:00.0
                    hotelId: HOTEL1
                    lastModifierId: BEN@HOTEL1
                    lastModifyDateTime: 2019-12-20 01:49:58.0
                    startDateTime: 2019-12-04 09:20:00.0
                    status:
                      completed: true
                      completedOn: 2019-12-04 16:01:00.0
                  activityId:
                    id: "114026"
                    type: Activity
                  indicators:
                  - count: "1"
                    indicatorName: Blocks
                  - count: "4"
                    indicatorName: Profiles
                  linkedAccounts:
                    activityAccount:
                    - primary: true
                      profile:
                        addresses:
                          addressInfo:
                          - address:
                              addressLine:
                              - 500 Oracle Parkway
                              - null
                              - null
                              - null
                              cityName: Redwood Shores
                              county: USA
                              postalCode: "94065"
                        customer:
                          personName:
                          - givenName: Tom
                        profileType: Company
                        telephones:
                          telephoneInfo:
                          - telephone:
                              phoneNumber: +1 415 555 0100
                      profileIdList:
                      - id: "3108537"
                    - primary: false
                      profile:
                        addresses:
                          addressInfo:
                          - address:
                              county: USA
                        customer:
                          personName:
                          - givenName: Ben
                        profileType: Source
                      profileIdList:
                      - id: "3103255"
                    fullOverlay: false
                  linkedBlocks:
                  - blockCode: 0511ENDOF_001
                    blockIdList:
                    - id: "30725"
                    blockName: End of Season Event
                    timeSpan:
                      endDate: 2020-11-06
                      startDate: 2020-11-05
                  linkedContacts:
                    activityContact:
                    - activityLinkedProfileType: CompanyContact
                      primary: true
                      profile:
                        addresses:
                          addressInfo:
                          - address:
                              addressLine:
                              - 10 Main Street
                              - null
                              - null
                              - null
                              county: USA
                        customer:
                          personName:
                          - givenName: Chris
                        profileType: Contact
                        relationships:
                          relationship:
                          - relationshipProfile:
                              profileIdList:
                              - id: "3108537"
                                type: ContactId
                              profileType: Company
                        telephones:
                          telephoneInfo:
                          - telephone:
                              phoneNumber: +1 415 555 0100
                      profileIdList:
                      - id: "3108539"
                    - activityLinkedProfileType: CompanyContact
                      primary: false
                      profile:
                        customer:
                          personName:
                          - givenName: Sarah
                        profileType: Contact
                        relationships:
                          relationship:
                          - relationshipProfile:
                              profileIdList:
                              - id: "3089751"
                                type: ContactId
                              profileType: Company
                      profileIdList:
                      - id: "3106529"
                    fullOverlay: false
                links:
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=ActivityInfo
                  method: GET
                  operationId: getActivity
                  rel: self
                  templated: false
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Profiles
                  method: GET
                  operationId: getActivity
                  rel: self
                  templated: false
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Blocks
                  method: GET
                  operationId: getActivity
                  rel: self
                  templated: false
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=Attachments
                  method: GET
                  operationId: getActivity
                  rel: self
                  templated: false
                - href: https://hotelCompany.example.com/act/v1/hotels/HOTEL1/activities/114026?fetchInstructions=LinkedActivities
                  method: GET
                  operationId: getActivity
                  rel: self
                  templated: false
          description: Response object for fetching activity.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Activity not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get activity in a hotel by ID
      tags:
      - Activity
    put:
      description: Use this to update an existing Activity for a hotel.  You must
        know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>putActivities</p>
      operationId: putActivities
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putActivities_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update activity in a hotel by ID
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
  /hotels/{hotelId}/activities/{activityId}/activityCompletion:
    post:
      description: Use this API to mark one Activity as completed in 1 request.  You
        must know the OPERA Activity ID for this API. <p><strong>OperationId:</strong>postSingleActivityCompletion</p>
      operationId: postSingleActivityCompletion
      parameters:
      - description: Unique OPERA Activity ID which is used to find an Activity from
          OPERA. This ID is a primary identification of an Activity in OPERA.
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where activity is searched based on Activity
          ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postSingleActivityCompletion_request'
        description: Request object for changing Activities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Complete activity in a hotel by ID
      tags:
      - Activity
      x-codegen-request-body-name: activitiesToChange
  /hotels/{hotelId}/activities/{activityId}/attachments:
    get:
      description: You can use this API when you want to view the attachments on an
        existing activity. <p><strong>OperationId:</strong>getActivityAttachments</p>
      operationId: getActivityAttachments
      parameters:
      - description: Activity ID
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityAttachments'
          description: Return object to the request for information regarding activity
            attachments.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityAttachments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Activity Attachments
      tags:
      - Activity
  /hotels/{hotelId}/activities/{activityId}/attachments/{attachmentId}:
    delete:
      description: You can use this API to delete an attachment which exists on an
        activity in OPERA Cloud. <p><strong>OperationId:</strong>deleteActivityAttachment</p>
      operationId: deleteActivityAttachment
      parameters:
      - description: Attachment ID
        in: path
        name: attachmentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Activity ID
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete an attachment from an Activity
      tags:
      - Activity
  /hotels/{hotelId}/activities/{activityId}/linkedActivities:
    post:
      description: You can use this API to invite one or multiple owners to an activity.
        <p><strong>OperationId:</strong>postLinkedActivities</p>
      operationId: postLinkedActivities
      parameters:
      - description: Activity ID
        in: path
        name: activityId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postLinkedActivities_request'
        description: Request to create linked activities for an activity.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create linked activities in a hotel by ID
      tags:
      - Activity
      x-codegen-request-body-name: linkedActivities
  /hotels/{hotelId}/activityLog:
    get:
      description: You can use this API to view the changes log for a specified Activity.
        <p><strong>OperationId:</strong>getActivityLog</p>
      operationId: getActivityLog
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Activity module.
        in: query
        name: module
        schema:
          enum:
          - Reservation
          - Contract
          - Allotment
          - Outlookview
          - Profile
          - Accountreceivables
          - GdsConvRateCodes
          - RateCode
          - Billing
          - Activity
          type: string
      - description: Name of the parameter.
        explode: true
        in: query
        name: moduleParamsParameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: moduleParamsParameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - in: query
        name: activityType
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIdUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIdUserIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityLog'
          description: Response object for request for the user activity log for activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Activity Log
      tags:
      - Activity
  /hotels/{hotelId}/recentlyAccessedActivities:
    get:
      description: This API allows you to retrieve a list of activities that have
        recently been accessed.   <p><strong>OperationId:</strong>getRecentlyAccessedActivities</p>
      operationId: getRecentlyAccessedActivities
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recentlyAccessedActivities'
          description: Response with the fetched recently accessed activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RecentlyAccessedActivities not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get recently accessed activities
      tags:
      - Activity
  /recentlyAccessedActivities:
    get:
      description: This API allows you to retrieve a list of activities that have
        recently been accessed.   <p><strong>OperationId:</strong>getRecentlyAccessedActivitiesWithOutHotelId</p>
      operationId: getRecentlyAccessedActivitiesWithOutHotelId
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recentlyAccessedActivities'
          description: Response with the fetched recently accessed activities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RecentlyAccessedActivitiesWithOutHotelId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get recently accessed activities
      tags:
      - Activity
components:
  schemas:
    accountId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    activitiesInfo:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activitiesInformation:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activitiesToChange:
      properties:
        activitiesInformation:
          description: Activity information in detail.
          items:
            $ref: '#/components/schemas/activityDetailsType'
          maxItems: 4000
          type: array
        activityDetailsEditFlag:
          description: Signifies whether only activity details are being modified.
          type: boolean
        completeMode:
          description: Signifies whether complete details of activity should alone
            be modified.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        updateLinkedActivities:
          description: Signifies whether the linked activity details should be modified
            or not.
          type: boolean
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activity:
      properties:
        activityDetails:
          $ref: '#/components/schemas/activityDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityAttachments:
      properties:
        activityAttachmentList:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityBlockInfoType:
      properties:
        blockCode:
          description: Block code for the block.
          maxLength: 20
          minLength: 0
          type: string
        blockIdList:
          description: Defines descriptive name and unique identification combination.
          items:
            $ref: '#/components/schemas/uniqueNameIDType'
          maxItems: 4000
          type: array
        blockName:
          description: Name of the block.
          maxLength: 2000
          minLength: 0
          type: string
        primary:
          description: "When true, indicates a primary information."
          type: boolean
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    activityConfigClassType:
      description: A collection of supported list of activity classes.
      enum:
      - Appointment
      - Todo
      type: string
    activityDetailsType:
      description: Complete Activity Related Information.
      properties:
        activityDetail:
          $ref: '#/components/schemas/activityInfoType'
        activityId:
          $ref: '#/components/schemas/activityId'
        indicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        linkedAccounts:
          $ref: '#/components/schemas/activityDetailsType_linkedAccounts'
        linkedActivities:
          description: The list of activities associated with an activity.
          items:
            $ref: '#/components/schemas/linkedActivityDetailsType'
          maxItems: 4000
          type: array
        linkedAttachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        linkedBlocks:
          description: List of Blocks that are linked to the Activity.
          items:
            $ref: '#/components/schemas/activityBlockInfoType'
          maxItems: 4000
          type: array
        linkedContacts:
          $ref: '#/components/schemas/activityDetailsType_linkedContacts'
      type: object
    activityId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    activityIdListType:
      description: Unique identifier for the Activity.
      items:
        $ref: '#/components/schemas/activityId'
      maxItems: 4000
      type: array
    activityInfoType:
      description: Activity related information.
      properties:
        activityClass:
          $ref: '#/components/schemas/activityConfigClassType'
        activityOwner:
          description: Owner of Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityPurpose:
          description: Indicates Purpose of the Activity.
          maxLength: 100
          minLength: 0
          type: string
        activityResult:
          description: Indicates the outcome of a completed Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityTraceCode:
          description: Activity Trace code used for the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityType:
          description: Indicates the Activity Type used for the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityTypeDescription:
          description: Indicates the description used for the Activity Type.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        endDateTime:
          description: End Date time of Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        followup:
          description: Indicates whether Followup Activity is needed or not.
          type: boolean
        followupStartDateTime:
          description: Start Date time of the Followup Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        highPriority:
          description: Indicates whether Activity has a high priority.
          type: boolean
        hotelId:
          description: This is the Hotel Code of the Activity.
          maxLength: 20
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        notes:
          description: Notes associated with an Activity.
          maxLength: 4000
          minLength: 0
          type: string
        overlapActivity:
          description: Determines whether the Activity overlaps with another activity
            with same date and time for the same owner.
          type: boolean
        startDateTime:
          description: Start Date time of Activity.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        status:
          $ref: '#/components/schemas/activityInfoType_status'
      type: object
    activityLinkedProfilesType:
      description: A collection of Unique IDs of Profiles.
      properties:
        activityLinkedProfileType:
          $ref: '#/components/schemas/linkedProfileTypeType'
        primary:
          description: Is this attached profile primary?
          type: boolean
        profile:
          $ref: '#/components/schemas/profileType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    activityListType:
      description: Activity information in detail.
      items:
        $ref: '#/components/schemas/activityDetailsType'
      maxItems: 4000
      type: array
    activityLog:
      properties:
        activityLogDetails:
          $ref: '#/components/schemas/activityLogListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    activityLogType:
      properties:
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        logDate:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        module:
          type: string
        refActionId:
          type: number
      type: object
    activityStatCategoryCodeType:
      description: Supported activity statistical category codes.
      enum:
      - HotelCode
      type: string
    activityStatCategoryType:
      description: Defines the codes and corresponding categories for which the data
        in the other elements has been gathered.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        statCategoryCode:
          $ref: '#/components/schemas/activityStatCategoryCodeType'
        statCode:
          description: Defines where this statistical data is applied.
          maxLength: 20
          minLength: 0
          type: string
        statCodeClass:
          description: Classification of the statistical data.
          maxLength: 40
          minLength: 0
          type: string
        statSet:
          items:
            $ref: '#/components/schemas/activityStatSetType'
          maxItems: 4000
          type: array
      type: object
    activityStatCodeType:
      description: Supported activity statistical codes.
      enum:
      - CompletedToDo
      - IncompleteToDo
      - CompletedAppointments
      - IncompleteAppointments
      type: string
    activityStatReportCodeType:
      description: Supported Activity report codes.
      enum:
      - Activities
      type: string
    activityStatReportType:
      description: Base abstraction defining all details needed to create a statistical
        report.
      properties:
        calendarDate:
          description: Statistical date of the requested report.
          format: date
          type: string
        chainCode:
          description: The code that identifies a hotel chain or management group.
            The hotel chain code is decided between vendors. This attribute is optional
            if the hotel is an independent property that can be identified by the
            HotelCode attribute.
          maxLength: 20
          minLength: 0
          type: string
        chainName:
          description: "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt)."
          maxLength: 80
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        hotelCityCode:
          description: "The IATA city code; for example DCA, ORD."
          maxLength: 40
          minLength: 0
          type: string
        hotelCodeContext:
          description: "A text field used to communicate the context (or source of\
            \ - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes."
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: The code that uniquely identifies a single hotel property.
            The hotel code is decided between vendors.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: A text field used to communicate the proper name of the hotel.
          maxLength: 80
          minLength: 0
          type: string
        reportCode:
          $ref: '#/components/schemas/activityStatReportCodeType'
        statCategory:
          items:
            $ref: '#/components/schemas/activityStatCategoryType'
          maxItems: 4000
          type: array
      type: object
    activityStatSetType:
      description: Base statistic set holder which defines the span of the statistical
        data.
      properties:
        end:
          format: date
          type: string
        owner:
          maxLength: 20
          minLength: 0
          type: string
        start:
          format: date
          type: string
        stat:
          items:
            $ref: '#/components/schemas/activityStatType'
          maxItems: 4000
          type: array
      type: object
    activityStatType:
      description: "Since the statistical value can be represented in different measure\
        \ of units, this element will provide a flexible definition for the supported\
        \ Opera9 statistical units."
      properties:
        code:
          $ref: '#/components/schemas/activityStatCodeType'
        unitCategory:
          $ref: '#/components/schemas/statUnitCategoryType'
        unitType:
          description: Unit of measurement or the actual code that defines the value.
            Eg. CurrencyCode for the Amount Category.
          maxLength: 3
          minLength: 3
          type: string
        unitValue:
          description: Statistical value.
          type: number
      type: object
    activityStatistics:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        reports:
          description: Statistical report - each report is determined by the requested
            report in the service request criteria.
          items:
            $ref: '#/components/schemas/activityStatReportType'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
      type: object
    attachmentType:
      description: Attached files.
      properties:
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    blockId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    blockListType:
      description: List of Blocks that are linked to the Activity.
      items:
        $ref: '#/components/schemas/activityBlockInfoType'
      maxItems: 4000
      type: array
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    contactId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    emailID:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    emailInfoResponseType:
      description: Defines elements related to fetched external emails stored.
      properties:
        accountId:
          $ref: '#/components/schemas/accountId'
        blockId:
          $ref: '#/components/schemas/blockId'
        contactId:
          $ref: '#/components/schemas/contactId'
        emailAttachmentId:
          description: Email Attachment Id for stored external emails.
          type: integer
        emailID:
          $ref: '#/components/schemas/emailID'
        emailReceivedDateTime:
          description: Email Recieved Date Time of the Sender.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        emailRecipients:
          description: List of Email TO Recipients separated by ";"
          maxLength: 4000
          minLength: 0
          type: string
        emailSubject:
          description: Subject of the email.
          maxLength: 100
          minLength: 0
          type: string
        hasEmailAttachments:
          description: Indicates if the Email body has attachments included.
          type: boolean
        hotelCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        senderEmailAddress:
          description: Email address of the Sender.
          maxLength: 200
          minLength: 0
          type: string
        senderFirstName:
          description: Given name or first name of the Sender.
          maxLength: 40
          minLength: 0
          type: string
        senderLastName:
          description: Family name or last name of the Sender.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    emailsDetails:
      description: Response object for FetchEmails Operation.
      properties:
        emailsFetched:
          $ref: '#/components/schemas/emailsFetchedType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    emailsFetchedType:
      description: Type contains the detailed information of a sender external email
        stored .
      properties:
        count:
          description: Total number of rows returned
          type: integer
        fetchedSenderEmailInfo:
          description: Detailed information of a sender external email stored.
          items:
            $ref: '#/components/schemas/emailInfoResponseType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Detail
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    indicatorType:
      description: Lamp indicator Type.
      properties:
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    linkedActivities:
      properties:
        linkedActivityDetails:
          $ref: '#/components/schemas/linkedActivitiesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    linkedActivitiesType:
      description: Provides the data to create linked activities to an activity .
      properties:
        activityId:
          $ref: '#/components/schemas/activityId'
        hotelId:
          description: Hotel Code of the Activity.
          maxLength: 20
          minLength: 0
          type: string
        ownerCodeList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    linkedActivityDetailsType:
      description: Linked Activity Related Information.
      properties:
        activityId:
          $ref: '#/components/schemas/activityId'
        linkedActivityDetail:
          $ref: '#/components/schemas/activityInfoType'
      type: object
    linkedProfileTypeType:
      description: Simple type for profile types linked to activity.
      enum:
      - Company
      - Agent
      - Source
      - CompanyContact
      - AgentContact
      - SourceContact
      type: string
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    personNameType:
      description: This provides name information for a person.
      properties:
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primary:
          description: "When true, indicates a primary information."
          type: boolean
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        company:
          $ref: '#/components/schemas/companyType'
        customer:
          $ref: '#/components/schemas/customerType'
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/profileType_emails'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileType_profileDeliveryMethods'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        relationships:
          $ref: '#/components/schemas/profileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
        uRLs:
          $ref: '#/components/schemas/profileType_uRLs'
      type: object
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    recentlyAccessedActivities:
      properties:
        activities:
          description: A single recently accessed activity.
          items:
            $ref: '#/components/schemas/recentlyAccessedActivityType'
          maxItems: 10
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    recentlyAccessedActivitiesType:
      description: A single recently accessed activity.
      items:
        $ref: '#/components/schemas/recentlyAccessedActivityType'
      maxItems: 10
      type: array
    recentlyAccessedActivityType:
      description: A recently used activity details.
      properties:
        accessDate:
          description: The date the record was accessed.
          format: date
          type: string
        activityIdList:
          description: Unique identifier for the Activity.
          items:
            $ref: '#/components/schemas/activityId'
          maxItems: 4000
          type: array
        activityOwnerCode:
          description: Owner Code of the Activity.
          maxLength: 20
          minLength: 0
          type: string
        activityTypeDescription:
          description: Description of the ActivityType.
          maxLength: 100
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code of the Activity.
          maxLength: 20
          minLength: 0
          type: string
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
      type: object
    relationshipProfileSummaryType:
      properties:
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
      type: object
    statUnitCategoryType:
      description: Supported statistical units.
      enum:
      - Numeric
      - Amount
      type: string
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        arrivalDate:
          format: date
          type: string
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        departureDate:
          format: date
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        numberOfRooms:
          description: Room Id
          type: integer
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        points:
          $ref: '#/components/schemas/pointsType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    uniqueNameIDListType:
      description: Defines descriptive name and unique identification combination.
      items:
        $ref: '#/components/schemas/uniqueNameIDType'
      maxItems: 4000
      type: array
    uniqueNameIDType:
      description: "Defines descriptive name, unique identification, and basic information\
        \ combination."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        primary:
          description: "When true, indicates a primary information."
          type: boolean
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    postMultipleActivitiesCompletion_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
          - activityDetail:
              activityResult: "24"
              hotelId: HOTEL1
              notes: completing from external system
              status:
                completed: true
                completedBy: BEN@HOTEL1
                completedOn: 2020-02-11 12:01:00.0
            activityId:
              id: "88029"
          - activityDetail:
              activityResult: "25"
              hotelId: PROP1
              notes: completing from external system
              status:
                completed: true
                completedBy: BEN@HOTEL1
                completedOn: 2020-02-11 12:01:00.0
            activityId:
              id: "88030"
        type: object
    postActivities_request:
      allOf:
      - $ref: '#/components/schemas/activitiesInformation'
      - example:
          activitiesInformation:
            activityDetail:
              activityClass: Appointment
              activityOwner: "3089500"
              activityPurpose: tomorrow
              activityType: FOLLOWUP
              endDateTime: 2020-10-28 10:45:32.0
              highPriority: false
              hotelId: HOTEL1
              notes: Notes about the activity can go here
              startDateTime: 2020-10-28 09:45:32.0
              status:
                completed: false
        type: object
    putActivities_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
            activityDetail:
              activityClass: Todo
              activityOwner: "287117"
              activityPurpose: Change activity to TODO
              activityType: EXTMTG
              activityTypeDescription: External Meeting
              createDateTime: 2020-02-14 02:13:33.0
              creatorId: BEN@HOTEL1
              endDateTime: 2020-11-03
              hotelId: HOTEL1
              lastModifierId: BEN@HOTEL1
              lastModifyDateTime: 2020-02-14 02:13:33.0
              notes: Notes about the Activity can go here
              startDateTime: 2020-11-02
              status:
                completed: false
            activityId:
              id: "219113"
        type: object
    postSingleActivityCompletion_request:
      allOf:
      - $ref: '#/components/schemas/activitiesToChange'
      - example:
          activitiesInformation:
          - activityDetail:
              activityResult: "24"
              notes: completing the Activity from external system
              status:
                completed: true
                completedBy: BEN@HOTEL1
                completedOn: 2020-01-01 12:01:00.0
        type: object
    postLinkedActivities_request:
      allOf:
      - $ref: '#/components/schemas/linkedActivities'
    activityDetailsType_linkedAccounts:
      description: "Provides information about the accounts linked to an activity.\
        \ Please note that during a change operation this performs a full overlay\
        \ if the attribute FullOverlay is set to true. In a full overlay, all the\
        \ accounts that should be associated to the activity should be provided during\
        \ a change operation. Any accounts not provided will be detached from this\
        \ activity. By default the full overlay is considered false if this property\
        \ is left blank. If values are provided for accounts, only the full overlay\
        \ functionality is provided at this time."
      properties:
        activityAccount:
          description: The list of accounts associated with an activity.
          items:
            $ref: '#/components/schemas/activityLinkedProfilesType'
          maxItems: 4000
          type: array
        fullOverlay:
          description: Indicates whether to perform a full overlay for the accounts.
          type: boolean
      type: object
    activityDetailsType_linkedContacts:
      description: "Provides information about the contacts linked to an activity.\
        \ Please note that during a change operation this performs a full overlay\
        \ if the attribute FullOverlay is set to true. In a full overlay, all the\
        \ contacts that should be associated to the activity should be provided during\
        \ a change operation. Any contacts not provided will be detached from this\
        \ activity. By default the full overlay is considered false if this property\
        \ is left blank. If values are provided for contacts, only the full overlay\
        \ functionality is provided at this time."
      properties:
        activityContact:
          description: The list of contacts associated with an activity.
          items:
            $ref: '#/components/schemas/activityLinkedProfilesType'
          maxItems: 4000
          type: array
        fullOverlay:
          description: Indicates whether to perform a full overlay for the contacts.
          type: boolean
      type: object
    activityInfoType_status:
      description: Completion status of Activity.
      properties:
        completed:
          description: Indicates whether Activity is Completed or not.
          type: boolean
        completedBy:
          description: Name of person who completed the Activity.
          type: string
        completedOn:
          description: Date on which the Activity was completed.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
      type: object
    profileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
      type: object
x-original-swagger-version: "2.0"
