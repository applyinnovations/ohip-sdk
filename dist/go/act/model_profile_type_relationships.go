/*
OPERA Cloud Activity API

APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package act

import (
	"encoding/json"
)

// checks if the ProfileTypeRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileTypeRelationships{}

// ProfileTypeRelationships Contains a collection of profiles that have a relationship with this profile.
type ProfileTypeRelationships struct {
	// A collection of the profiles that have a relationship with this profile.
	Relationship []RelationshipInfoType `json:"relationship,omitempty"`
}

// NewProfileTypeRelationships instantiates a new ProfileTypeRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileTypeRelationships() *ProfileTypeRelationships {
	this := ProfileTypeRelationships{}
	return &this
}

// NewProfileTypeRelationshipsWithDefaults instantiates a new ProfileTypeRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileTypeRelationshipsWithDefaults() *ProfileTypeRelationships {
	this := ProfileTypeRelationships{}
	return &this
}

// GetRelationship returns the Relationship field value if set, zero value otherwise.
func (o *ProfileTypeRelationships) GetRelationship() []RelationshipInfoType {
	if o == nil || IsNil(o.Relationship) {
		var ret []RelationshipInfoType
		return ret
	}
	return o.Relationship
}

// GetRelationshipOk returns a tuple with the Relationship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTypeRelationships) GetRelationshipOk() ([]RelationshipInfoType, bool) {
	if o == nil || IsNil(o.Relationship) {
		return nil, false
	}
	return o.Relationship, true
}

// HasRelationship returns a boolean if a field has been set.
func (o *ProfileTypeRelationships) HasRelationship() bool {
	if o != nil && !IsNil(o.Relationship) {
		return true
	}

	return false
}

// SetRelationship gets a reference to the given []RelationshipInfoType and assigns it to the Relationship field.
func (o *ProfileTypeRelationships) SetRelationship(v []RelationshipInfoType) {
	o.Relationship = v
}

func (o ProfileTypeRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileTypeRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Relationship) {
		toSerialize["relationship"] = o.Relationship
	}
	return toSerialize, nil
}

type NullableProfileTypeRelationships struct {
	value *ProfileTypeRelationships
	isSet bool
}

func (v NullableProfileTypeRelationships) Get() *ProfileTypeRelationships {
	return v.value
}

func (v *NullableProfileTypeRelationships) Set(val *ProfileTypeRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileTypeRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileTypeRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileTypeRelationships(val *ProfileTypeRelationships) *NullableProfileTypeRelationships {
	return &NullableProfileTypeRelationships{value: val, isSet: true}
}

func (v NullableProfileTypeRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileTypeRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


