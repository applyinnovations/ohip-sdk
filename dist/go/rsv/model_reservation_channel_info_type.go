/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationChannelInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationChannelInfoType{}

// ReservationChannelInfoType Holds all the channel reservation specific information.
type ReservationChannelInfoType struct {
	ChannelSummaryInfo *ChannelSummaryInfoType `json:"channelSummaryInfo,omitempty"`
	ChannelResvStatus *ChannelResvStatusType `json:"channelResvStatus,omitempty"`
}

// NewReservationChannelInfoType instantiates a new ReservationChannelInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationChannelInfoType() *ReservationChannelInfoType {
	this := ReservationChannelInfoType{}
	return &this
}

// NewReservationChannelInfoTypeWithDefaults instantiates a new ReservationChannelInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationChannelInfoTypeWithDefaults() *ReservationChannelInfoType {
	this := ReservationChannelInfoType{}
	return &this
}

// GetChannelSummaryInfo returns the ChannelSummaryInfo field value if set, zero value otherwise.
func (o *ReservationChannelInfoType) GetChannelSummaryInfo() ChannelSummaryInfoType {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		var ret ChannelSummaryInfoType
		return ret
	}
	return *o.ChannelSummaryInfo
}

// GetChannelSummaryInfoOk returns a tuple with the ChannelSummaryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationChannelInfoType) GetChannelSummaryInfoOk() (*ChannelSummaryInfoType, bool) {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		return nil, false
	}
	return o.ChannelSummaryInfo, true
}

// HasChannelSummaryInfo returns a boolean if a field has been set.
func (o *ReservationChannelInfoType) HasChannelSummaryInfo() bool {
	if o != nil && !IsNil(o.ChannelSummaryInfo) {
		return true
	}

	return false
}

// SetChannelSummaryInfo gets a reference to the given ChannelSummaryInfoType and assigns it to the ChannelSummaryInfo field.
func (o *ReservationChannelInfoType) SetChannelSummaryInfo(v ChannelSummaryInfoType) {
	o.ChannelSummaryInfo = &v
}

// GetChannelResvStatus returns the ChannelResvStatus field value if set, zero value otherwise.
func (o *ReservationChannelInfoType) GetChannelResvStatus() ChannelResvStatusType {
	if o == nil || IsNil(o.ChannelResvStatus) {
		var ret ChannelResvStatusType
		return ret
	}
	return *o.ChannelResvStatus
}

// GetChannelResvStatusOk returns a tuple with the ChannelResvStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationChannelInfoType) GetChannelResvStatusOk() (*ChannelResvStatusType, bool) {
	if o == nil || IsNil(o.ChannelResvStatus) {
		return nil, false
	}
	return o.ChannelResvStatus, true
}

// HasChannelResvStatus returns a boolean if a field has been set.
func (o *ReservationChannelInfoType) HasChannelResvStatus() bool {
	if o != nil && !IsNil(o.ChannelResvStatus) {
		return true
	}

	return false
}

// SetChannelResvStatus gets a reference to the given ChannelResvStatusType and assigns it to the ChannelResvStatus field.
func (o *ReservationChannelInfoType) SetChannelResvStatus(v ChannelResvStatusType) {
	o.ChannelResvStatus = &v
}

func (o ReservationChannelInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationChannelInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelSummaryInfo) {
		toSerialize["channelSummaryInfo"] = o.ChannelSummaryInfo
	}
	if !IsNil(o.ChannelResvStatus) {
		toSerialize["channelResvStatus"] = o.ChannelResvStatus
	}
	return toSerialize, nil
}

type NullableReservationChannelInfoType struct {
	value *ReservationChannelInfoType
	isSet bool
}

func (v NullableReservationChannelInfoType) Get() *ReservationChannelInfoType {
	return v.value
}

func (v *NullableReservationChannelInfoType) Set(val *ReservationChannelInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationChannelInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationChannelInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationChannelInfoType(val *ReservationChannelInfoType) *NullableReservationChannelInfoType {
	return &NullableReservationChannelInfoType{value: val, isSet: true}
}

func (v NullableReservationChannelInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationChannelInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


