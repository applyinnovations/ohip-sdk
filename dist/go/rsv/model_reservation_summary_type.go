/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationSummaryType{}

// ReservationSummaryType struct for ReservationSummaryType
type ReservationSummaryType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	Guarantee *ResGuaranteeType `json:"guarantee,omitempty"`
	// Given name, first name or names
	GuestFirstName *string `json:"guestFirstName,omitempty"`
	// Family name, last name.
	GuestLastName *string `json:"guestLastName,omitempty"`
	StayPeriod *DateRangeType `json:"stayPeriod,omitempty"`
}

// NewReservationSummaryType instantiates a new ReservationSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationSummaryType() *ReservationSummaryType {
	this := ReservationSummaryType{}
	return &this
}

// NewReservationSummaryTypeWithDefaults instantiates a new ReservationSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationSummaryTypeWithDefaults() *ReservationSummaryType {
	this := ReservationSummaryType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *ReservationSummaryType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationSummaryType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *ReservationSummaryType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *ReservationSummaryType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetGuarantee returns the Guarantee field value if set, zero value otherwise.
func (o *ReservationSummaryType) GetGuarantee() ResGuaranteeType {
	if o == nil || IsNil(o.Guarantee) {
		var ret ResGuaranteeType
		return ret
	}
	return *o.Guarantee
}

// GetGuaranteeOk returns a tuple with the Guarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationSummaryType) GetGuaranteeOk() (*ResGuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantee) {
		return nil, false
	}
	return o.Guarantee, true
}

// HasGuarantee returns a boolean if a field has been set.
func (o *ReservationSummaryType) HasGuarantee() bool {
	if o != nil && !IsNil(o.Guarantee) {
		return true
	}

	return false
}

// SetGuarantee gets a reference to the given ResGuaranteeType and assigns it to the Guarantee field.
func (o *ReservationSummaryType) SetGuarantee(v ResGuaranteeType) {
	o.Guarantee = &v
}

// GetGuestFirstName returns the GuestFirstName field value if set, zero value otherwise.
func (o *ReservationSummaryType) GetGuestFirstName() string {
	if o == nil || IsNil(o.GuestFirstName) {
		var ret string
		return ret
	}
	return *o.GuestFirstName
}

// GetGuestFirstNameOk returns a tuple with the GuestFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationSummaryType) GetGuestFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFirstName) {
		return nil, false
	}
	return o.GuestFirstName, true
}

// HasGuestFirstName returns a boolean if a field has been set.
func (o *ReservationSummaryType) HasGuestFirstName() bool {
	if o != nil && !IsNil(o.GuestFirstName) {
		return true
	}

	return false
}

// SetGuestFirstName gets a reference to the given string and assigns it to the GuestFirstName field.
func (o *ReservationSummaryType) SetGuestFirstName(v string) {
	o.GuestFirstName = &v
}

// GetGuestLastName returns the GuestLastName field value if set, zero value otherwise.
func (o *ReservationSummaryType) GetGuestLastName() string {
	if o == nil || IsNil(o.GuestLastName) {
		var ret string
		return ret
	}
	return *o.GuestLastName
}

// GetGuestLastNameOk returns a tuple with the GuestLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationSummaryType) GetGuestLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestLastName) {
		return nil, false
	}
	return o.GuestLastName, true
}

// HasGuestLastName returns a boolean if a field has been set.
func (o *ReservationSummaryType) HasGuestLastName() bool {
	if o != nil && !IsNil(o.GuestLastName) {
		return true
	}

	return false
}

// SetGuestLastName gets a reference to the given string and assigns it to the GuestLastName field.
func (o *ReservationSummaryType) SetGuestLastName(v string) {
	o.GuestLastName = &v
}

// GetStayPeriod returns the StayPeriod field value if set, zero value otherwise.
func (o *ReservationSummaryType) GetStayPeriod() DateRangeType {
	if o == nil || IsNil(o.StayPeriod) {
		var ret DateRangeType
		return ret
	}
	return *o.StayPeriod
}

// GetStayPeriodOk returns a tuple with the StayPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationSummaryType) GetStayPeriodOk() (*DateRangeType, bool) {
	if o == nil || IsNil(o.StayPeriod) {
		return nil, false
	}
	return o.StayPeriod, true
}

// HasStayPeriod returns a boolean if a field has been set.
func (o *ReservationSummaryType) HasStayPeriod() bool {
	if o != nil && !IsNil(o.StayPeriod) {
		return true
	}

	return false
}

// SetStayPeriod gets a reference to the given DateRangeType and assigns it to the StayPeriod field.
func (o *ReservationSummaryType) SetStayPeriod(v DateRangeType) {
	o.StayPeriod = &v
}

func (o ReservationSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.Guarantee) {
		toSerialize["guarantee"] = o.Guarantee
	}
	if !IsNil(o.GuestFirstName) {
		toSerialize["guestFirstName"] = o.GuestFirstName
	}
	if !IsNil(o.GuestLastName) {
		toSerialize["guestLastName"] = o.GuestLastName
	}
	if !IsNil(o.StayPeriod) {
		toSerialize["stayPeriod"] = o.StayPeriod
	}
	return toSerialize, nil
}

type NullableReservationSummaryType struct {
	value *ReservationSummaryType
	isSet bool
}

func (v NullableReservationSummaryType) Get() *ReservationSummaryType {
	return v.value
}

func (v *NullableReservationSummaryType) Set(val *ReservationSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationSummaryType(val *ReservationSummaryType) *NullableReservationSummaryType {
	return &NullableReservationSummaryType{value: val, isSet: true}
}

func (v NullableReservationSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


