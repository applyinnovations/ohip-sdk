/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the PromoCodeCompRoutingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromoCodeCompRoutingType{}

// PromoCodeCompRoutingType Promotion Code Complimentary Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit
type PromoCodeCompRoutingType struct {
	// Membership number for promotion code complimentary routing
	MembershipId *string `json:"membershipId,omitempty"`
	// User Defined Comments. Used for promotion code Complimentary Routing.
	Comments *string `json:"comments,omitempty"`
	AuthorizerInfo *AuthorizerInfoType `json:"authorizerInfo,omitempty"`
	Duration *PromoCodeCompRoutingTypeDuration `json:"duration,omitempty"`
	// Allowable credit amount for this promotion code complimentary routing instruction. Null value means no limit, 0 equals zero.
	CreditLimit *float32 `json:"creditLimit,omitempty"`
	// The promotion code complimentary routing limit percentage allowed for this routing instruction.
	PercentageLimit *float32 `json:"percentageLimit,omitempty"`
	// Number of covers for this promotion code complimentary routing instruction.
	Covers *float32 `json:"covers,omitempty"`
	// Promotion code for Complimentary Routing
	PromotionCode *string `json:"promotionCode,omitempty"`
	// The folio number where it is applied for promotion code complimentary routing.
	FolioNo *int32 `json:"folioNo,omitempty"`
	// Flag to indicate to prompt the Authorizer for promotion code complimentary routing.
	PromptForAuthorizer *bool `json:"promptForAuthorizer,omitempty"`
	// Flag to indicate that pre approval is required for promotion code complimentary routing .
	CompPreApprovalRequired *bool `json:"compPreApprovalRequired,omitempty"`
}

// NewPromoCodeCompRoutingType instantiates a new PromoCodeCompRoutingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoCodeCompRoutingType() *PromoCodeCompRoutingType {
	this := PromoCodeCompRoutingType{}
	return &this
}

// NewPromoCodeCompRoutingTypeWithDefaults instantiates a new PromoCodeCompRoutingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoCodeCompRoutingTypeWithDefaults() *PromoCodeCompRoutingType {
	this := PromoCodeCompRoutingType{}
	return &this
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *PromoCodeCompRoutingType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PromoCodeCompRoutingType) SetComments(v string) {
	o.Comments = &v
}

// GetAuthorizerInfo returns the AuthorizerInfo field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetAuthorizerInfo() AuthorizerInfoType {
	if o == nil || IsNil(o.AuthorizerInfo) {
		var ret AuthorizerInfoType
		return ret
	}
	return *o.AuthorizerInfo
}

// GetAuthorizerInfoOk returns a tuple with the AuthorizerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetAuthorizerInfoOk() (*AuthorizerInfoType, bool) {
	if o == nil || IsNil(o.AuthorizerInfo) {
		return nil, false
	}
	return o.AuthorizerInfo, true
}

// HasAuthorizerInfo returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasAuthorizerInfo() bool {
	if o != nil && !IsNil(o.AuthorizerInfo) {
		return true
	}

	return false
}

// SetAuthorizerInfo gets a reference to the given AuthorizerInfoType and assigns it to the AuthorizerInfo field.
func (o *PromoCodeCompRoutingType) SetAuthorizerInfo(v AuthorizerInfoType) {
	o.AuthorizerInfo = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetDuration() PromoCodeCompRoutingTypeDuration {
	if o == nil || IsNil(o.Duration) {
		var ret PromoCodeCompRoutingTypeDuration
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetDurationOk() (*PromoCodeCompRoutingTypeDuration, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given PromoCodeCompRoutingTypeDuration and assigns it to the Duration field.
func (o *PromoCodeCompRoutingType) SetDuration(v PromoCodeCompRoutingTypeDuration) {
	o.Duration = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetCreditLimit() float32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret float32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetCreditLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given float32 and assigns it to the CreditLimit field.
func (o *PromoCodeCompRoutingType) SetCreditLimit(v float32) {
	o.CreditLimit = &v
}

// GetPercentageLimit returns the PercentageLimit field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetPercentageLimit() float32 {
	if o == nil || IsNil(o.PercentageLimit) {
		var ret float32
		return ret
	}
	return *o.PercentageLimit
}

// GetPercentageLimitOk returns a tuple with the PercentageLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetPercentageLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentageLimit) {
		return nil, false
	}
	return o.PercentageLimit, true
}

// HasPercentageLimit returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasPercentageLimit() bool {
	if o != nil && !IsNil(o.PercentageLimit) {
		return true
	}

	return false
}

// SetPercentageLimit gets a reference to the given float32 and assigns it to the PercentageLimit field.
func (o *PromoCodeCompRoutingType) SetPercentageLimit(v float32) {
	o.PercentageLimit = &v
}

// GetCovers returns the Covers field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetCovers() float32 {
	if o == nil || IsNil(o.Covers) {
		var ret float32
		return ret
	}
	return *o.Covers
}

// GetCoversOk returns a tuple with the Covers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetCoversOk() (*float32, bool) {
	if o == nil || IsNil(o.Covers) {
		return nil, false
	}
	return o.Covers, true
}

// HasCovers returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasCovers() bool {
	if o != nil && !IsNil(o.Covers) {
		return true
	}

	return false
}

// SetCovers gets a reference to the given float32 and assigns it to the Covers field.
func (o *PromoCodeCompRoutingType) SetCovers(v float32) {
	o.Covers = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *PromoCodeCompRoutingType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetFolioNo returns the FolioNo field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetFolioNo() int32 {
	if o == nil || IsNil(o.FolioNo) {
		var ret int32
		return ret
	}
	return *o.FolioNo
}

// GetFolioNoOk returns a tuple with the FolioNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetFolioNoOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioNo) {
		return nil, false
	}
	return o.FolioNo, true
}

// HasFolioNo returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasFolioNo() bool {
	if o != nil && !IsNil(o.FolioNo) {
		return true
	}

	return false
}

// SetFolioNo gets a reference to the given int32 and assigns it to the FolioNo field.
func (o *PromoCodeCompRoutingType) SetFolioNo(v int32) {
	o.FolioNo = &v
}

// GetPromptForAuthorizer returns the PromptForAuthorizer field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetPromptForAuthorizer() bool {
	if o == nil || IsNil(o.PromptForAuthorizer) {
		var ret bool
		return ret
	}
	return *o.PromptForAuthorizer
}

// GetPromptForAuthorizerOk returns a tuple with the PromptForAuthorizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetPromptForAuthorizerOk() (*bool, bool) {
	if o == nil || IsNil(o.PromptForAuthorizer) {
		return nil, false
	}
	return o.PromptForAuthorizer, true
}

// HasPromptForAuthorizer returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasPromptForAuthorizer() bool {
	if o != nil && !IsNil(o.PromptForAuthorizer) {
		return true
	}

	return false
}

// SetPromptForAuthorizer gets a reference to the given bool and assigns it to the PromptForAuthorizer field.
func (o *PromoCodeCompRoutingType) SetPromptForAuthorizer(v bool) {
	o.PromptForAuthorizer = &v
}

// GetCompPreApprovalRequired returns the CompPreApprovalRequired field value if set, zero value otherwise.
func (o *PromoCodeCompRoutingType) GetCompPreApprovalRequired() bool {
	if o == nil || IsNil(o.CompPreApprovalRequired) {
		var ret bool
		return ret
	}
	return *o.CompPreApprovalRequired
}

// GetCompPreApprovalRequiredOk returns a tuple with the CompPreApprovalRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoCodeCompRoutingType) GetCompPreApprovalRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.CompPreApprovalRequired) {
		return nil, false
	}
	return o.CompPreApprovalRequired, true
}

// HasCompPreApprovalRequired returns a boolean if a field has been set.
func (o *PromoCodeCompRoutingType) HasCompPreApprovalRequired() bool {
	if o != nil && !IsNil(o.CompPreApprovalRequired) {
		return true
	}

	return false
}

// SetCompPreApprovalRequired gets a reference to the given bool and assigns it to the CompPreApprovalRequired field.
func (o *PromoCodeCompRoutingType) SetCompPreApprovalRequired(v bool) {
	o.CompPreApprovalRequired = &v
}

func (o PromoCodeCompRoutingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoCodeCompRoutingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.AuthorizerInfo) {
		toSerialize["authorizerInfo"] = o.AuthorizerInfo
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.PercentageLimit) {
		toSerialize["percentageLimit"] = o.PercentageLimit
	}
	if !IsNil(o.Covers) {
		toSerialize["covers"] = o.Covers
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.FolioNo) {
		toSerialize["folioNo"] = o.FolioNo
	}
	if !IsNil(o.PromptForAuthorizer) {
		toSerialize["promptForAuthorizer"] = o.PromptForAuthorizer
	}
	if !IsNil(o.CompPreApprovalRequired) {
		toSerialize["compPreApprovalRequired"] = o.CompPreApprovalRequired
	}
	return toSerialize, nil
}

type NullablePromoCodeCompRoutingType struct {
	value *PromoCodeCompRoutingType
	isSet bool
}

func (v NullablePromoCodeCompRoutingType) Get() *PromoCodeCompRoutingType {
	return v.value
}

func (v *NullablePromoCodeCompRoutingType) Set(val *PromoCodeCompRoutingType) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoCodeCompRoutingType) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoCodeCompRoutingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoCodeCompRoutingType(val *PromoCodeCompRoutingType) *NullablePromoCodeCompRoutingType {
	return &NullablePromoCodeCompRoutingType{value: val, isSet: true}
}

func (v NullablePromoCodeCompRoutingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoCodeCompRoutingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


