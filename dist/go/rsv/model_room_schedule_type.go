/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the RoomScheduleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomScheduleType{}

// RoomScheduleType Holds TimeSpan and Reservation Information.
type RoomScheduleType struct {
	// Description for the the Room Schedule.
	Description *string `json:"description,omitempty"`
	// The ending value of the time span.
	End *string `json:"end,omitempty"`
	// List of Reservations under this schedule.
	RoomCalendarResList []RoomCalendarResType `json:"roomCalendarResList,omitempty"`
	RoomScheduleCategory *RoomScheduleCategoryType `json:"roomScheduleCategory,omitempty"`
	RoomScheduleDisplay *RoomCalendarDisplayType `json:"roomScheduleDisplay,omitempty"`
	// The starting value of the time span.
	Start *string `json:"start,omitempty"`
}

// NewRoomScheduleType instantiates a new RoomScheduleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomScheduleType() *RoomScheduleType {
	this := RoomScheduleType{}
	return &this
}

// NewRoomScheduleTypeWithDefaults instantiates a new RoomScheduleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomScheduleTypeWithDefaults() *RoomScheduleType {
	this := RoomScheduleType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoomScheduleType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoomScheduleType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoomScheduleType) SetDescription(v string) {
	o.Description = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *RoomScheduleType) GetEnd() string {
	if o == nil || IsNil(o.End) {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetEndOk() (*string, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *RoomScheduleType) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *RoomScheduleType) SetEnd(v string) {
	o.End = &v
}

// GetRoomCalendarResList returns the RoomCalendarResList field value if set, zero value otherwise.
func (o *RoomScheduleType) GetRoomCalendarResList() []RoomCalendarResType {
	if o == nil || IsNil(o.RoomCalendarResList) {
		var ret []RoomCalendarResType
		return ret
	}
	return o.RoomCalendarResList
}

// GetRoomCalendarResListOk returns a tuple with the RoomCalendarResList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetRoomCalendarResListOk() ([]RoomCalendarResType, bool) {
	if o == nil || IsNil(o.RoomCalendarResList) {
		return nil, false
	}
	return o.RoomCalendarResList, true
}

// HasRoomCalendarResList returns a boolean if a field has been set.
func (o *RoomScheduleType) HasRoomCalendarResList() bool {
	if o != nil && !IsNil(o.RoomCalendarResList) {
		return true
	}

	return false
}

// SetRoomCalendarResList gets a reference to the given []RoomCalendarResType and assigns it to the RoomCalendarResList field.
func (o *RoomScheduleType) SetRoomCalendarResList(v []RoomCalendarResType) {
	o.RoomCalendarResList = v
}

// GetRoomScheduleCategory returns the RoomScheduleCategory field value if set, zero value otherwise.
func (o *RoomScheduleType) GetRoomScheduleCategory() RoomScheduleCategoryType {
	if o == nil || IsNil(o.RoomScheduleCategory) {
		var ret RoomScheduleCategoryType
		return ret
	}
	return *o.RoomScheduleCategory
}

// GetRoomScheduleCategoryOk returns a tuple with the RoomScheduleCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetRoomScheduleCategoryOk() (*RoomScheduleCategoryType, bool) {
	if o == nil || IsNil(o.RoomScheduleCategory) {
		return nil, false
	}
	return o.RoomScheduleCategory, true
}

// HasRoomScheduleCategory returns a boolean if a field has been set.
func (o *RoomScheduleType) HasRoomScheduleCategory() bool {
	if o != nil && !IsNil(o.RoomScheduleCategory) {
		return true
	}

	return false
}

// SetRoomScheduleCategory gets a reference to the given RoomScheduleCategoryType and assigns it to the RoomScheduleCategory field.
func (o *RoomScheduleType) SetRoomScheduleCategory(v RoomScheduleCategoryType) {
	o.RoomScheduleCategory = &v
}

// GetRoomScheduleDisplay returns the RoomScheduleDisplay field value if set, zero value otherwise.
func (o *RoomScheduleType) GetRoomScheduleDisplay() RoomCalendarDisplayType {
	if o == nil || IsNil(o.RoomScheduleDisplay) {
		var ret RoomCalendarDisplayType
		return ret
	}
	return *o.RoomScheduleDisplay
}

// GetRoomScheduleDisplayOk returns a tuple with the RoomScheduleDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetRoomScheduleDisplayOk() (*RoomCalendarDisplayType, bool) {
	if o == nil || IsNil(o.RoomScheduleDisplay) {
		return nil, false
	}
	return o.RoomScheduleDisplay, true
}

// HasRoomScheduleDisplay returns a boolean if a field has been set.
func (o *RoomScheduleType) HasRoomScheduleDisplay() bool {
	if o != nil && !IsNil(o.RoomScheduleDisplay) {
		return true
	}

	return false
}

// SetRoomScheduleDisplay gets a reference to the given RoomCalendarDisplayType and assigns it to the RoomScheduleDisplay field.
func (o *RoomScheduleType) SetRoomScheduleDisplay(v RoomCalendarDisplayType) {
	o.RoomScheduleDisplay = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *RoomScheduleType) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomScheduleType) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *RoomScheduleType) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *RoomScheduleType) SetStart(v string) {
	o.Start = &v
}

func (o RoomScheduleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomScheduleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.RoomCalendarResList) {
		toSerialize["roomCalendarResList"] = o.RoomCalendarResList
	}
	if !IsNil(o.RoomScheduleCategory) {
		toSerialize["roomScheduleCategory"] = o.RoomScheduleCategory
	}
	if !IsNil(o.RoomScheduleDisplay) {
		toSerialize["roomScheduleDisplay"] = o.RoomScheduleDisplay
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	return toSerialize, nil
}

type NullableRoomScheduleType struct {
	value *RoomScheduleType
	isSet bool
}

func (v NullableRoomScheduleType) Get() *RoomScheduleType {
	return v.value
}

func (v *NullableRoomScheduleType) Set(val *RoomScheduleType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomScheduleType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomScheduleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomScheduleType(val *RoomScheduleType) *NullableRoomScheduleType {
	return &NullableRoomScheduleType{value: val, isSet: true}
}

func (v NullableRoomScheduleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomScheduleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


