/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ScheduledRoomMoveDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledRoomMoveDetailType{}

// ScheduledRoomMoveDetailType Scheduled room move information.
type ScheduledRoomMoveDetailType struct {
	ScheduledRoomMoveFrom *ScheduleRoomMoveType `json:"scheduledRoomMoveFrom,omitempty"`
	ScheduledRoomMoveTo *ScheduleRoomMoveType `json:"scheduledRoomMoveTo,omitempty"`
}

// NewScheduledRoomMoveDetailType instantiates a new ScheduledRoomMoveDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledRoomMoveDetailType() *ScheduledRoomMoveDetailType {
	this := ScheduledRoomMoveDetailType{}
	return &this
}

// NewScheduledRoomMoveDetailTypeWithDefaults instantiates a new ScheduledRoomMoveDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledRoomMoveDetailTypeWithDefaults() *ScheduledRoomMoveDetailType {
	this := ScheduledRoomMoveDetailType{}
	return &this
}

// GetScheduledRoomMoveFrom returns the ScheduledRoomMoveFrom field value if set, zero value otherwise.
func (o *ScheduledRoomMoveDetailType) GetScheduledRoomMoveFrom() ScheduleRoomMoveType {
	if o == nil || IsNil(o.ScheduledRoomMoveFrom) {
		var ret ScheduleRoomMoveType
		return ret
	}
	return *o.ScheduledRoomMoveFrom
}

// GetScheduledRoomMoveFromOk returns a tuple with the ScheduledRoomMoveFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveDetailType) GetScheduledRoomMoveFromOk() (*ScheduleRoomMoveType, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveFrom) {
		return nil, false
	}
	return o.ScheduledRoomMoveFrom, true
}

// HasScheduledRoomMoveFrom returns a boolean if a field has been set.
func (o *ScheduledRoomMoveDetailType) HasScheduledRoomMoveFrom() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveFrom) {
		return true
	}

	return false
}

// SetScheduledRoomMoveFrom gets a reference to the given ScheduleRoomMoveType and assigns it to the ScheduledRoomMoveFrom field.
func (o *ScheduledRoomMoveDetailType) SetScheduledRoomMoveFrom(v ScheduleRoomMoveType) {
	o.ScheduledRoomMoveFrom = &v
}

// GetScheduledRoomMoveTo returns the ScheduledRoomMoveTo field value if set, zero value otherwise.
func (o *ScheduledRoomMoveDetailType) GetScheduledRoomMoveTo() ScheduleRoomMoveType {
	if o == nil || IsNil(o.ScheduledRoomMoveTo) {
		var ret ScheduleRoomMoveType
		return ret
	}
	return *o.ScheduledRoomMoveTo
}

// GetScheduledRoomMoveToOk returns a tuple with the ScheduledRoomMoveTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveDetailType) GetScheduledRoomMoveToOk() (*ScheduleRoomMoveType, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveTo) {
		return nil, false
	}
	return o.ScheduledRoomMoveTo, true
}

// HasScheduledRoomMoveTo returns a boolean if a field has been set.
func (o *ScheduledRoomMoveDetailType) HasScheduledRoomMoveTo() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveTo) {
		return true
	}

	return false
}

// SetScheduledRoomMoveTo gets a reference to the given ScheduleRoomMoveType and assigns it to the ScheduledRoomMoveTo field.
func (o *ScheduledRoomMoveDetailType) SetScheduledRoomMoveTo(v ScheduleRoomMoveType) {
	o.ScheduledRoomMoveTo = &v
}

func (o ScheduledRoomMoveDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledRoomMoveDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScheduledRoomMoveFrom) {
		toSerialize["scheduledRoomMoveFrom"] = o.ScheduledRoomMoveFrom
	}
	if !IsNil(o.ScheduledRoomMoveTo) {
		toSerialize["scheduledRoomMoveTo"] = o.ScheduledRoomMoveTo
	}
	return toSerialize, nil
}

type NullableScheduledRoomMoveDetailType struct {
	value *ScheduledRoomMoveDetailType
	isSet bool
}

func (v NullableScheduledRoomMoveDetailType) Get() *ScheduledRoomMoveDetailType {
	return v.value
}

func (v *NullableScheduledRoomMoveDetailType) Set(val *ScheduledRoomMoveDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledRoomMoveDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledRoomMoveDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledRoomMoveDetailType(val *ScheduledRoomMoveDetailType) *NullableScheduledRoomMoveDetailType {
	return &NullableScheduledRoomMoveDetailType{value: val, isSet: true}
}

func (v NullableScheduledRoomMoveDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledRoomMoveDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


