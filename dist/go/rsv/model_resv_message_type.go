/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ResvMessageType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResvMessageType{}

// ResvMessageType Holds the Message Information
type ResvMessageType struct {
	// Display the arrival date of the guest.
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	// Display the block code associated with the reservation.
	BlockCode *string `json:"blockCode,omitempty"`
	BlockId *BlockId `json:"blockId,omitempty"`
	// Confirmation number of the reservation.
	ConfirmationNo *string `json:"confirmationNo,omitempty"`
	// Display the departure date of the guest.
	DepartureDate *string `json:"departureDate,omitempty"`
	// Guarantee Code.
	GuaranteeCode *string `json:"guaranteeCode,omitempty"`
	// shows the Id of the Guest.
	GuestNameId *int32 `json:"guestNameId,omitempty"`
	// Date the message was created
	MessageDate *string `json:"messageDate,omitempty"`
	// Message Content
	MessageText *string `json:"messageText,omitempty"`
	// shows the number of nights for the reservation.
	NoOfNights *int32 `json:"noOfNights,omitempty"`
	// User who created the Message
	Operator *string `json:"operator,omitempty"`
	// Recipient of the Message
	Recipient *string `json:"recipient,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Status of the reservation.
	ReservationStatus *string `json:"reservationStatus,omitempty"`
	// Display room number if it has been assigned.
	RoomId *string `json:"roomId,omitempty"`
	// Display the status of the Room.
	RoomStatus *string `json:"roomStatus,omitempty"`
	TypeOfMessage *TypeOfMessageType `json:"typeOfMessage,omitempty"`
}

// NewResvMessageType instantiates a new ResvMessageType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResvMessageType() *ResvMessageType {
	this := ResvMessageType{}
	return &this
}

// NewResvMessageTypeWithDefaults instantiates a new ResvMessageType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResvMessageTypeWithDefaults() *ResvMessageType {
	this := ResvMessageType{}
	return &this
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *ResvMessageType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *ResvMessageType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *ResvMessageType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *ResvMessageType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *ResvMessageType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *ResvMessageType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *ResvMessageType) GetBlockId() BlockId {
	if o == nil || IsNil(o.BlockId) {
		var ret BlockId
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetBlockIdOk() (*BlockId, bool) {
	if o == nil || IsNil(o.BlockId) {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *ResvMessageType) HasBlockId() bool {
	if o != nil && !IsNil(o.BlockId) {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given BlockId and assigns it to the BlockId field.
func (o *ResvMessageType) SetBlockId(v BlockId) {
	o.BlockId = &v
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *ResvMessageType) GetConfirmationNo() string {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret string
		return ret
	}
	return *o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetConfirmationNoOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *ResvMessageType) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given string and assigns it to the ConfirmationNo field.
func (o *ResvMessageType) SetConfirmationNo(v string) {
	o.ConfirmationNo = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *ResvMessageType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *ResvMessageType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *ResvMessageType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetGuaranteeCode returns the GuaranteeCode field value if set, zero value otherwise.
func (o *ResvMessageType) GetGuaranteeCode() string {
	if o == nil || IsNil(o.GuaranteeCode) {
		var ret string
		return ret
	}
	return *o.GuaranteeCode
}

// GetGuaranteeCodeOk returns a tuple with the GuaranteeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetGuaranteeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GuaranteeCode) {
		return nil, false
	}
	return o.GuaranteeCode, true
}

// HasGuaranteeCode returns a boolean if a field has been set.
func (o *ResvMessageType) HasGuaranteeCode() bool {
	if o != nil && !IsNil(o.GuaranteeCode) {
		return true
	}

	return false
}

// SetGuaranteeCode gets a reference to the given string and assigns it to the GuaranteeCode field.
func (o *ResvMessageType) SetGuaranteeCode(v string) {
	o.GuaranteeCode = &v
}

// GetGuestNameId returns the GuestNameId field value if set, zero value otherwise.
func (o *ResvMessageType) GetGuestNameId() int32 {
	if o == nil || IsNil(o.GuestNameId) {
		var ret int32
		return ret
	}
	return *o.GuestNameId
}

// GetGuestNameIdOk returns a tuple with the GuestNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetGuestNameIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GuestNameId) {
		return nil, false
	}
	return o.GuestNameId, true
}

// HasGuestNameId returns a boolean if a field has been set.
func (o *ResvMessageType) HasGuestNameId() bool {
	if o != nil && !IsNil(o.GuestNameId) {
		return true
	}

	return false
}

// SetGuestNameId gets a reference to the given int32 and assigns it to the GuestNameId field.
func (o *ResvMessageType) SetGuestNameId(v int32) {
	o.GuestNameId = &v
}

// GetMessageDate returns the MessageDate field value if set, zero value otherwise.
func (o *ResvMessageType) GetMessageDate() string {
	if o == nil || IsNil(o.MessageDate) {
		var ret string
		return ret
	}
	return *o.MessageDate
}

// GetMessageDateOk returns a tuple with the MessageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetMessageDateOk() (*string, bool) {
	if o == nil || IsNil(o.MessageDate) {
		return nil, false
	}
	return o.MessageDate, true
}

// HasMessageDate returns a boolean if a field has been set.
func (o *ResvMessageType) HasMessageDate() bool {
	if o != nil && !IsNil(o.MessageDate) {
		return true
	}

	return false
}

// SetMessageDate gets a reference to the given string and assigns it to the MessageDate field.
func (o *ResvMessageType) SetMessageDate(v string) {
	o.MessageDate = &v
}

// GetMessageText returns the MessageText field value if set, zero value otherwise.
func (o *ResvMessageType) GetMessageText() string {
	if o == nil || IsNil(o.MessageText) {
		var ret string
		return ret
	}
	return *o.MessageText
}

// GetMessageTextOk returns a tuple with the MessageText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetMessageTextOk() (*string, bool) {
	if o == nil || IsNil(o.MessageText) {
		return nil, false
	}
	return o.MessageText, true
}

// HasMessageText returns a boolean if a field has been set.
func (o *ResvMessageType) HasMessageText() bool {
	if o != nil && !IsNil(o.MessageText) {
		return true
	}

	return false
}

// SetMessageText gets a reference to the given string and assigns it to the MessageText field.
func (o *ResvMessageType) SetMessageText(v string) {
	o.MessageText = &v
}

// GetNoOfNights returns the NoOfNights field value if set, zero value otherwise.
func (o *ResvMessageType) GetNoOfNights() int32 {
	if o == nil || IsNil(o.NoOfNights) {
		var ret int32
		return ret
	}
	return *o.NoOfNights
}

// GetNoOfNightsOk returns a tuple with the NoOfNights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetNoOfNightsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfNights) {
		return nil, false
	}
	return o.NoOfNights, true
}

// HasNoOfNights returns a boolean if a field has been set.
func (o *ResvMessageType) HasNoOfNights() bool {
	if o != nil && !IsNil(o.NoOfNights) {
		return true
	}

	return false
}

// SetNoOfNights gets a reference to the given int32 and assigns it to the NoOfNights field.
func (o *ResvMessageType) SetNoOfNights(v int32) {
	o.NoOfNights = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *ResvMessageType) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *ResvMessageType) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *ResvMessageType) SetOperator(v string) {
	o.Operator = &v
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *ResvMessageType) GetRecipient() string {
	if o == nil || IsNil(o.Recipient) {
		var ret string
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetRecipientOk() (*string, bool) {
	if o == nil || IsNil(o.Recipient) {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *ResvMessageType) HasRecipient() bool {
	if o != nil && !IsNil(o.Recipient) {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given string and assigns it to the Recipient field.
func (o *ResvMessageType) SetRecipient(v string) {
	o.Recipient = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ResvMessageType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ResvMessageType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ResvMessageType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *ResvMessageType) GetReservationStatus() string {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret string
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *ResvMessageType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given string and assigns it to the ReservationStatus field.
func (o *ResvMessageType) SetReservationStatus(v string) {
	o.ReservationStatus = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ResvMessageType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ResvMessageType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ResvMessageType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomStatus returns the RoomStatus field value if set, zero value otherwise.
func (o *ResvMessageType) GetRoomStatus() string {
	if o == nil || IsNil(o.RoomStatus) {
		var ret string
		return ret
	}
	return *o.RoomStatus
}

// GetRoomStatusOk returns a tuple with the RoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetRoomStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RoomStatus) {
		return nil, false
	}
	return o.RoomStatus, true
}

// HasRoomStatus returns a boolean if a field has been set.
func (o *ResvMessageType) HasRoomStatus() bool {
	if o != nil && !IsNil(o.RoomStatus) {
		return true
	}

	return false
}

// SetRoomStatus gets a reference to the given string and assigns it to the RoomStatus field.
func (o *ResvMessageType) SetRoomStatus(v string) {
	o.RoomStatus = &v
}

// GetTypeOfMessage returns the TypeOfMessage field value if set, zero value otherwise.
func (o *ResvMessageType) GetTypeOfMessage() TypeOfMessageType {
	if o == nil || IsNil(o.TypeOfMessage) {
		var ret TypeOfMessageType
		return ret
	}
	return *o.TypeOfMessage
}

// GetTypeOfMessageOk returns a tuple with the TypeOfMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvMessageType) GetTypeOfMessageOk() (*TypeOfMessageType, bool) {
	if o == nil || IsNil(o.TypeOfMessage) {
		return nil, false
	}
	return o.TypeOfMessage, true
}

// HasTypeOfMessage returns a boolean if a field has been set.
func (o *ResvMessageType) HasTypeOfMessage() bool {
	if o != nil && !IsNil(o.TypeOfMessage) {
		return true
	}

	return false
}

// SetTypeOfMessage gets a reference to the given TypeOfMessageType and assigns it to the TypeOfMessage field.
func (o *ResvMessageType) SetTypeOfMessage(v TypeOfMessageType) {
	o.TypeOfMessage = &v
}

func (o ResvMessageType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResvMessageType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BlockId) {
		toSerialize["blockId"] = o.BlockId
	}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.GuaranteeCode) {
		toSerialize["guaranteeCode"] = o.GuaranteeCode
	}
	if !IsNil(o.GuestNameId) {
		toSerialize["guestNameId"] = o.GuestNameId
	}
	if !IsNil(o.MessageDate) {
		toSerialize["messageDate"] = o.MessageDate
	}
	if !IsNil(o.MessageText) {
		toSerialize["messageText"] = o.MessageText
	}
	if !IsNil(o.NoOfNights) {
		toSerialize["noOfNights"] = o.NoOfNights
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !IsNil(o.Recipient) {
		toSerialize["recipient"] = o.Recipient
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomStatus) {
		toSerialize["roomStatus"] = o.RoomStatus
	}
	if !IsNil(o.TypeOfMessage) {
		toSerialize["typeOfMessage"] = o.TypeOfMessage
	}
	return toSerialize, nil
}

type NullableResvMessageType struct {
	value *ResvMessageType
	isSet bool
}

func (v NullableResvMessageType) Get() *ResvMessageType {
	return v.value
}

func (v *NullableResvMessageType) Set(val *ResvMessageType) {
	v.value = val
	v.isSet = true
}

func (v NullableResvMessageType) IsSet() bool {
	return v.isSet
}

func (v *NullableResvMessageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResvMessageType(val *ResvMessageType) *NullableResvMessageType {
	return &NullableResvMessageType{value: val, isSet: true}
}

func (v NullableResvMessageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResvMessageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


