/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the CancelReservationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelReservationType{}

// CancelReservationType The Reservation class contains the current reservation being created or altered.
type CancelReservationType struct {
	AccessRestriction *ResAccessRestrictionType `json:"accessRestriction,omitempty"`
	AdvanceCheckIn *AdvanceCheckInType `json:"advanceCheckIn,omitempty"`
	// Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.
	AllowMobileCheckout *bool `json:"allowMobileCheckout,omitempty"`
	// Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
	AllowMobileViewFolio *bool `json:"allowMobileViewFolio,omitempty"`
	// Allowed action.
	AllowedActions []ReservationAllowedActionType `json:"allowedActions,omitempty"`
	AttachedProfiles []ResAttachedProfileType `json:"attachedProfiles,omitempty"`
	CancellationInfo *CancelReservationTypeCancellationInfo `json:"cancellationInfo,omitempty"`
	Cashiering *ResCashieringType `json:"cashiering,omitempty"`
	CommissionPayoutTo *CommissionPayoutToType `json:"commissionPayoutTo,omitempty"`
	ComputedReservationStatus *PMSResStatusType `json:"computedReservationStatus,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	CxlInstr *CancellationInstructionsType `json:"cxlInstr,omitempty"`
	Deposit *ReservationDepositType `json:"deposit,omitempty"`
	// Color setting of the reservation.
	DisplayColor *string `json:"displayColor,omitempty"`
	ExpectedServiceTime *string `json:"expectedServiceTime,omitempty"`
	// External cancellation number to be stored as cancellation number of the reservation. This is supported by postCancelShareReservation and postCancelReservation only.
	ExternalCancellationId *string `json:"externalCancellationId,omitempty"`
	// This type contains unique information of external reference.
	ExternalReferences []ExternalReferenceType `json:"externalReferences,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	// Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.
	HotelInterfaceStatusList []ReservationInterfaceStatusType `json:"hotelInterfaceStatusList,omitempty"`
	HotelName *string `json:"hotelName,omitempty"`
	Housekeeping *ResHousekeepingType `json:"housekeeping,omitempty"`
	// Number of keys created for the reservation.
	KeyCount *int32 `json:"keyCount,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Last Privacy Prompt Date
	LastPrivacyPromptDate *string `json:"lastPrivacyPromptDate,omitempty"`
	MobileNotifications *ResMobileNotificationsType `json:"mobileNotifications,omitempty"`
	// Returns true when reservation has an open folio.
	OpenFolio *bool `json:"openFolio,omitempty"`
	// Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.
	OptedForCommunication *bool `json:"optedForCommunication,omitempty"`
	// This forcefully overrides the cancel operation on Reservation. For real-time CRS interface, it is used as cancellation override flag.
	OverrideExternalChecks *bool `json:"overrideExternalChecks,omitempty"`
	// Payment Method.
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Defines if the reservation is pre-registered or not.
	PreRegistered *bool `json:"preRegistered,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
	Queue *ReservationQueueInformationType `json:"queue,omitempty"`
	RefResId *UniqueIDType `json:"refResId,omitempty"`
	ReservationCommunication *ResCommunicationType `json:"reservationCommunication,omitempty"`
	// Collection of reservation folio windows.
	ReservationFolioWindows []ReservationFolioWindowType `json:"reservationFolioWindows,omitempty"`
	ReservationGuest *ResGuestInfoType `json:"reservationGuest,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// Collection of lamp indicators.
	ReservationIndicators []IndicatorType `json:"reservationIndicators,omitempty"`
	ReservationLockHandle *float32 `json:"reservationLockHandle,omitempty"`
	ReservationPaymentMethod *ReservationPaymentMethodType `json:"reservationPaymentMethod,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	RevenuesAndBalances *ResRevenueBalanceType `json:"revenuesAndBalances,omitempty"`
	RoomStatus *HousekeepingRoomStatusType `json:"roomStatus,omitempty"`
	RoomStay *StayInfoType `json:"roomStay,omitempty"`
	// Boolean True if this reservation is reserving rooms. False if it is only reserving services.
	RoomStayReservation *bool `json:"roomStayReservation,omitempty"`
	// List of Generic Name-Value-Pair Parameters used for super search matches.
	SearchMatches []SearchMatchType `json:"searchMatches,omitempty"`
	// Collection of shared guest reservations.
	SharedGuests []ResSharedGuestInfoType `json:"sharedGuests,omitempty"`
	SourceOfSale *SourceOfSaleType `json:"sourceOfSale,omitempty"`
	// Set of reservation preferences which belongs to the Specials group.
	Specials *string `json:"specials,omitempty"`
	TaxType *TaxTypeType `json:"taxType,omitempty"`
	TurndownInfo *ReservationTurndownInfoType `json:"turndownInfo,omitempty"`
	Waitlist *WaitlistResType `json:"waitlist,omitempty"`
	// When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.
	WalkInIndicator *bool `json:"walkInIndicator,omitempty"`
	// This flag will determine wheather the reservation is eligible for Welcome Offer or not.
	WelcomeOffer *bool `json:"welcomeOffer,omitempty"`
}

// NewCancelReservationType instantiates a new CancelReservationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelReservationType() *CancelReservationType {
	this := CancelReservationType{}
	return &this
}

// NewCancelReservationTypeWithDefaults instantiates a new CancelReservationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelReservationTypeWithDefaults() *CancelReservationType {
	this := CancelReservationType{}
	return &this
}

// GetAccessRestriction returns the AccessRestriction field value if set, zero value otherwise.
func (o *CancelReservationType) GetAccessRestriction() ResAccessRestrictionType {
	if o == nil || IsNil(o.AccessRestriction) {
		var ret ResAccessRestrictionType
		return ret
	}
	return *o.AccessRestriction
}

// GetAccessRestrictionOk returns a tuple with the AccessRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAccessRestrictionOk() (*ResAccessRestrictionType, bool) {
	if o == nil || IsNil(o.AccessRestriction) {
		return nil, false
	}
	return o.AccessRestriction, true
}

// HasAccessRestriction returns a boolean if a field has been set.
func (o *CancelReservationType) HasAccessRestriction() bool {
	if o != nil && !IsNil(o.AccessRestriction) {
		return true
	}

	return false
}

// SetAccessRestriction gets a reference to the given ResAccessRestrictionType and assigns it to the AccessRestriction field.
func (o *CancelReservationType) SetAccessRestriction(v ResAccessRestrictionType) {
	o.AccessRestriction = &v
}

// GetAdvanceCheckIn returns the AdvanceCheckIn field value if set, zero value otherwise.
func (o *CancelReservationType) GetAdvanceCheckIn() AdvanceCheckInType {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		var ret AdvanceCheckInType
		return ret
	}
	return *o.AdvanceCheckIn
}

// GetAdvanceCheckInOk returns a tuple with the AdvanceCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAdvanceCheckInOk() (*AdvanceCheckInType, bool) {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		return nil, false
	}
	return o.AdvanceCheckIn, true
}

// HasAdvanceCheckIn returns a boolean if a field has been set.
func (o *CancelReservationType) HasAdvanceCheckIn() bool {
	if o != nil && !IsNil(o.AdvanceCheckIn) {
		return true
	}

	return false
}

// SetAdvanceCheckIn gets a reference to the given AdvanceCheckInType and assigns it to the AdvanceCheckIn field.
func (o *CancelReservationType) SetAdvanceCheckIn(v AdvanceCheckInType) {
	o.AdvanceCheckIn = &v
}

// GetAllowMobileCheckout returns the AllowMobileCheckout field value if set, zero value otherwise.
func (o *CancelReservationType) GetAllowMobileCheckout() bool {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		var ret bool
		return ret
	}
	return *o.AllowMobileCheckout
}

// GetAllowMobileCheckoutOk returns a tuple with the AllowMobileCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAllowMobileCheckoutOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		return nil, false
	}
	return o.AllowMobileCheckout, true
}

// HasAllowMobileCheckout returns a boolean if a field has been set.
func (o *CancelReservationType) HasAllowMobileCheckout() bool {
	if o != nil && !IsNil(o.AllowMobileCheckout) {
		return true
	}

	return false
}

// SetAllowMobileCheckout gets a reference to the given bool and assigns it to the AllowMobileCheckout field.
func (o *CancelReservationType) SetAllowMobileCheckout(v bool) {
	o.AllowMobileCheckout = &v
}

// GetAllowMobileViewFolio returns the AllowMobileViewFolio field value if set, zero value otherwise.
func (o *CancelReservationType) GetAllowMobileViewFolio() bool {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		var ret bool
		return ret
	}
	return *o.AllowMobileViewFolio
}

// GetAllowMobileViewFolioOk returns a tuple with the AllowMobileViewFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAllowMobileViewFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		return nil, false
	}
	return o.AllowMobileViewFolio, true
}

// HasAllowMobileViewFolio returns a boolean if a field has been set.
func (o *CancelReservationType) HasAllowMobileViewFolio() bool {
	if o != nil && !IsNil(o.AllowMobileViewFolio) {
		return true
	}

	return false
}

// SetAllowMobileViewFolio gets a reference to the given bool and assigns it to the AllowMobileViewFolio field.
func (o *CancelReservationType) SetAllowMobileViewFolio(v bool) {
	o.AllowMobileViewFolio = &v
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *CancelReservationType) GetAllowedActions() []ReservationAllowedActionType {
	if o == nil || IsNil(o.AllowedActions) {
		var ret []ReservationAllowedActionType
		return ret
	}
	return o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAllowedActionsOk() ([]ReservationAllowedActionType, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *CancelReservationType) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given []ReservationAllowedActionType and assigns it to the AllowedActions field.
func (o *CancelReservationType) SetAllowedActions(v []ReservationAllowedActionType) {
	o.AllowedActions = v
}

// GetAttachedProfiles returns the AttachedProfiles field value if set, zero value otherwise.
func (o *CancelReservationType) GetAttachedProfiles() []ResAttachedProfileType {
	if o == nil || IsNil(o.AttachedProfiles) {
		var ret []ResAttachedProfileType
		return ret
	}
	return o.AttachedProfiles
}

// GetAttachedProfilesOk returns a tuple with the AttachedProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetAttachedProfilesOk() ([]ResAttachedProfileType, bool) {
	if o == nil || IsNil(o.AttachedProfiles) {
		return nil, false
	}
	return o.AttachedProfiles, true
}

// HasAttachedProfiles returns a boolean if a field has been set.
func (o *CancelReservationType) HasAttachedProfiles() bool {
	if o != nil && !IsNil(o.AttachedProfiles) {
		return true
	}

	return false
}

// SetAttachedProfiles gets a reference to the given []ResAttachedProfileType and assigns it to the AttachedProfiles field.
func (o *CancelReservationType) SetAttachedProfiles(v []ResAttachedProfileType) {
	o.AttachedProfiles = v
}

// GetCancellationInfo returns the CancellationInfo field value if set, zero value otherwise.
func (o *CancelReservationType) GetCancellationInfo() CancelReservationTypeCancellationInfo {
	if o == nil || IsNil(o.CancellationInfo) {
		var ret CancelReservationTypeCancellationInfo
		return ret
	}
	return *o.CancellationInfo
}

// GetCancellationInfoOk returns a tuple with the CancellationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCancellationInfoOk() (*CancelReservationTypeCancellationInfo, bool) {
	if o == nil || IsNil(o.CancellationInfo) {
		return nil, false
	}
	return o.CancellationInfo, true
}

// HasCancellationInfo returns a boolean if a field has been set.
func (o *CancelReservationType) HasCancellationInfo() bool {
	if o != nil && !IsNil(o.CancellationInfo) {
		return true
	}

	return false
}

// SetCancellationInfo gets a reference to the given CancelReservationTypeCancellationInfo and assigns it to the CancellationInfo field.
func (o *CancelReservationType) SetCancellationInfo(v CancelReservationTypeCancellationInfo) {
	o.CancellationInfo = &v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *CancelReservationType) GetCashiering() ResCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ResCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCashieringOk() (*ResCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *CancelReservationType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ResCashieringType and assigns it to the Cashiering field.
func (o *CancelReservationType) SetCashiering(v ResCashieringType) {
	o.Cashiering = &v
}

// GetCommissionPayoutTo returns the CommissionPayoutTo field value if set, zero value otherwise.
func (o *CancelReservationType) GetCommissionPayoutTo() CommissionPayoutToType {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		var ret CommissionPayoutToType
		return ret
	}
	return *o.CommissionPayoutTo
}

// GetCommissionPayoutToOk returns a tuple with the CommissionPayoutTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCommissionPayoutToOk() (*CommissionPayoutToType, bool) {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		return nil, false
	}
	return o.CommissionPayoutTo, true
}

// HasCommissionPayoutTo returns a boolean if a field has been set.
func (o *CancelReservationType) HasCommissionPayoutTo() bool {
	if o != nil && !IsNil(o.CommissionPayoutTo) {
		return true
	}

	return false
}

// SetCommissionPayoutTo gets a reference to the given CommissionPayoutToType and assigns it to the CommissionPayoutTo field.
func (o *CancelReservationType) SetCommissionPayoutTo(v CommissionPayoutToType) {
	o.CommissionPayoutTo = &v
}

// GetComputedReservationStatus returns the ComputedReservationStatus field value if set, zero value otherwise.
func (o *CancelReservationType) GetComputedReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ComputedReservationStatus
}

// GetComputedReservationStatusOk returns a tuple with the ComputedReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetComputedReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		return nil, false
	}
	return o.ComputedReservationStatus, true
}

// HasComputedReservationStatus returns a boolean if a field has been set.
func (o *CancelReservationType) HasComputedReservationStatus() bool {
	if o != nil && !IsNil(o.ComputedReservationStatus) {
		return true
	}

	return false
}

// SetComputedReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ComputedReservationStatus field.
func (o *CancelReservationType) SetComputedReservationStatus(v PMSResStatusType) {
	o.ComputedReservationStatus = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *CancelReservationType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *CancelReservationType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *CancelReservationType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CancelReservationType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CancelReservationType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CancelReservationType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCxlInstr returns the CxlInstr field value if set, zero value otherwise.
func (o *CancelReservationType) GetCxlInstr() CancellationInstructionsType {
	if o == nil || IsNil(o.CxlInstr) {
		var ret CancellationInstructionsType
		return ret
	}
	return *o.CxlInstr
}

// GetCxlInstrOk returns a tuple with the CxlInstr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetCxlInstrOk() (*CancellationInstructionsType, bool) {
	if o == nil || IsNil(o.CxlInstr) {
		return nil, false
	}
	return o.CxlInstr, true
}

// HasCxlInstr returns a boolean if a field has been set.
func (o *CancelReservationType) HasCxlInstr() bool {
	if o != nil && !IsNil(o.CxlInstr) {
		return true
	}

	return false
}

// SetCxlInstr gets a reference to the given CancellationInstructionsType and assigns it to the CxlInstr field.
func (o *CancelReservationType) SetCxlInstr(v CancellationInstructionsType) {
	o.CxlInstr = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *CancelReservationType) GetDeposit() ReservationDepositType {
	if o == nil || IsNil(o.Deposit) {
		var ret ReservationDepositType
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetDepositOk() (*ReservationDepositType, bool) {
	if o == nil || IsNil(o.Deposit) {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *CancelReservationType) HasDeposit() bool {
	if o != nil && !IsNil(o.Deposit) {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given ReservationDepositType and assigns it to the Deposit field.
func (o *CancelReservationType) SetDeposit(v ReservationDepositType) {
	o.Deposit = &v
}

// GetDisplayColor returns the DisplayColor field value if set, zero value otherwise.
func (o *CancelReservationType) GetDisplayColor() string {
	if o == nil || IsNil(o.DisplayColor) {
		var ret string
		return ret
	}
	return *o.DisplayColor
}

// GetDisplayColorOk returns a tuple with the DisplayColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetDisplayColorOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayColor) {
		return nil, false
	}
	return o.DisplayColor, true
}

// HasDisplayColor returns a boolean if a field has been set.
func (o *CancelReservationType) HasDisplayColor() bool {
	if o != nil && !IsNil(o.DisplayColor) {
		return true
	}

	return false
}

// SetDisplayColor gets a reference to the given string and assigns it to the DisplayColor field.
func (o *CancelReservationType) SetDisplayColor(v string) {
	o.DisplayColor = &v
}

// GetExpectedServiceTime returns the ExpectedServiceTime field value if set, zero value otherwise.
func (o *CancelReservationType) GetExpectedServiceTime() string {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		var ret string
		return ret
	}
	return *o.ExpectedServiceTime
}

// GetExpectedServiceTimeOk returns a tuple with the ExpectedServiceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetExpectedServiceTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedServiceTime) {
		return nil, false
	}
	return o.ExpectedServiceTime, true
}

// HasExpectedServiceTime returns a boolean if a field has been set.
func (o *CancelReservationType) HasExpectedServiceTime() bool {
	if o != nil && !IsNil(o.ExpectedServiceTime) {
		return true
	}

	return false
}

// SetExpectedServiceTime gets a reference to the given string and assigns it to the ExpectedServiceTime field.
func (o *CancelReservationType) SetExpectedServiceTime(v string) {
	o.ExpectedServiceTime = &v
}

// GetExternalCancellationId returns the ExternalCancellationId field value if set, zero value otherwise.
func (o *CancelReservationType) GetExternalCancellationId() string {
	if o == nil || IsNil(o.ExternalCancellationId) {
		var ret string
		return ret
	}
	return *o.ExternalCancellationId
}

// GetExternalCancellationIdOk returns a tuple with the ExternalCancellationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetExternalCancellationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalCancellationId) {
		return nil, false
	}
	return o.ExternalCancellationId, true
}

// HasExternalCancellationId returns a boolean if a field has been set.
func (o *CancelReservationType) HasExternalCancellationId() bool {
	if o != nil && !IsNil(o.ExternalCancellationId) {
		return true
	}

	return false
}

// SetExternalCancellationId gets a reference to the given string and assigns it to the ExternalCancellationId field.
func (o *CancelReservationType) SetExternalCancellationId(v string) {
	o.ExternalCancellationId = &v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *CancelReservationType) GetExternalReferences() []ExternalReferenceType {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []ExternalReferenceType
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetExternalReferencesOk() ([]ExternalReferenceType, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *CancelReservationType) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []ExternalReferenceType and assigns it to the ExternalReferences field.
func (o *CancelReservationType) SetExternalReferences(v []ExternalReferenceType) {
	o.ExternalReferences = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CancelReservationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CancelReservationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CancelReservationType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetHotelInterfaceStatusList returns the HotelInterfaceStatusList field value if set, zero value otherwise.
func (o *CancelReservationType) GetHotelInterfaceStatusList() []ReservationInterfaceStatusType {
	if o == nil || IsNil(o.HotelInterfaceStatusList) {
		var ret []ReservationInterfaceStatusType
		return ret
	}
	return o.HotelInterfaceStatusList
}

// GetHotelInterfaceStatusListOk returns a tuple with the HotelInterfaceStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetHotelInterfaceStatusListOk() ([]ReservationInterfaceStatusType, bool) {
	if o == nil || IsNil(o.HotelInterfaceStatusList) {
		return nil, false
	}
	return o.HotelInterfaceStatusList, true
}

// HasHotelInterfaceStatusList returns a boolean if a field has been set.
func (o *CancelReservationType) HasHotelInterfaceStatusList() bool {
	if o != nil && !IsNil(o.HotelInterfaceStatusList) {
		return true
	}

	return false
}

// SetHotelInterfaceStatusList gets a reference to the given []ReservationInterfaceStatusType and assigns it to the HotelInterfaceStatusList field.
func (o *CancelReservationType) SetHotelInterfaceStatusList(v []ReservationInterfaceStatusType) {
	o.HotelInterfaceStatusList = v
}

// GetHotelName returns the HotelName field value if set, zero value otherwise.
func (o *CancelReservationType) GetHotelName() string {
	if o == nil || IsNil(o.HotelName) {
		var ret string
		return ret
	}
	return *o.HotelName
}

// GetHotelNameOk returns a tuple with the HotelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetHotelNameOk() (*string, bool) {
	if o == nil || IsNil(o.HotelName) {
		return nil, false
	}
	return o.HotelName, true
}

// HasHotelName returns a boolean if a field has been set.
func (o *CancelReservationType) HasHotelName() bool {
	if o != nil && !IsNil(o.HotelName) {
		return true
	}

	return false
}

// SetHotelName gets a reference to the given string and assigns it to the HotelName field.
func (o *CancelReservationType) SetHotelName(v string) {
	o.HotelName = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *CancelReservationType) GetHousekeeping() ResHousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret ResHousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetHousekeepingOk() (*ResHousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *CancelReservationType) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given ResHousekeepingType and assigns it to the Housekeeping field.
func (o *CancelReservationType) SetHousekeeping(v ResHousekeepingType) {
	o.Housekeeping = &v
}

// GetKeyCount returns the KeyCount field value if set, zero value otherwise.
func (o *CancelReservationType) GetKeyCount() int32 {
	if o == nil || IsNil(o.KeyCount) {
		var ret int32
		return ret
	}
	return *o.KeyCount
}

// GetKeyCountOk returns a tuple with the KeyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetKeyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.KeyCount) {
		return nil, false
	}
	return o.KeyCount, true
}

// HasKeyCount returns a boolean if a field has been set.
func (o *CancelReservationType) HasKeyCount() bool {
	if o != nil && !IsNil(o.KeyCount) {
		return true
	}

	return false
}

// SetKeyCount gets a reference to the given int32 and assigns it to the KeyCount field.
func (o *CancelReservationType) SetKeyCount(v int32) {
	o.KeyCount = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *CancelReservationType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *CancelReservationType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *CancelReservationType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *CancelReservationType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *CancelReservationType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *CancelReservationType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastPrivacyPromptDate returns the LastPrivacyPromptDate field value if set, zero value otherwise.
func (o *CancelReservationType) GetLastPrivacyPromptDate() string {
	if o == nil || IsNil(o.LastPrivacyPromptDate) {
		var ret string
		return ret
	}
	return *o.LastPrivacyPromptDate
}

// GetLastPrivacyPromptDateOk returns a tuple with the LastPrivacyPromptDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetLastPrivacyPromptDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastPrivacyPromptDate) {
		return nil, false
	}
	return o.LastPrivacyPromptDate, true
}

// HasLastPrivacyPromptDate returns a boolean if a field has been set.
func (o *CancelReservationType) HasLastPrivacyPromptDate() bool {
	if o != nil && !IsNil(o.LastPrivacyPromptDate) {
		return true
	}

	return false
}

// SetLastPrivacyPromptDate gets a reference to the given string and assigns it to the LastPrivacyPromptDate field.
func (o *CancelReservationType) SetLastPrivacyPromptDate(v string) {
	o.LastPrivacyPromptDate = &v
}

// GetMobileNotifications returns the MobileNotifications field value if set, zero value otherwise.
func (o *CancelReservationType) GetMobileNotifications() ResMobileNotificationsType {
	if o == nil || IsNil(o.MobileNotifications) {
		var ret ResMobileNotificationsType
		return ret
	}
	return *o.MobileNotifications
}

// GetMobileNotificationsOk returns a tuple with the MobileNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetMobileNotificationsOk() (*ResMobileNotificationsType, bool) {
	if o == nil || IsNil(o.MobileNotifications) {
		return nil, false
	}
	return o.MobileNotifications, true
}

// HasMobileNotifications returns a boolean if a field has been set.
func (o *CancelReservationType) HasMobileNotifications() bool {
	if o != nil && !IsNil(o.MobileNotifications) {
		return true
	}

	return false
}

// SetMobileNotifications gets a reference to the given ResMobileNotificationsType and assigns it to the MobileNotifications field.
func (o *CancelReservationType) SetMobileNotifications(v ResMobileNotificationsType) {
	o.MobileNotifications = &v
}

// GetOpenFolio returns the OpenFolio field value if set, zero value otherwise.
func (o *CancelReservationType) GetOpenFolio() bool {
	if o == nil || IsNil(o.OpenFolio) {
		var ret bool
		return ret
	}
	return *o.OpenFolio
}

// GetOpenFolioOk returns a tuple with the OpenFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetOpenFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenFolio) {
		return nil, false
	}
	return o.OpenFolio, true
}

// HasOpenFolio returns a boolean if a field has been set.
func (o *CancelReservationType) HasOpenFolio() bool {
	if o != nil && !IsNil(o.OpenFolio) {
		return true
	}

	return false
}

// SetOpenFolio gets a reference to the given bool and assigns it to the OpenFolio field.
func (o *CancelReservationType) SetOpenFolio(v bool) {
	o.OpenFolio = &v
}

// GetOptedForCommunication returns the OptedForCommunication field value if set, zero value otherwise.
func (o *CancelReservationType) GetOptedForCommunication() bool {
	if o == nil || IsNil(o.OptedForCommunication) {
		var ret bool
		return ret
	}
	return *o.OptedForCommunication
}

// GetOptedForCommunicationOk returns a tuple with the OptedForCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetOptedForCommunicationOk() (*bool, bool) {
	if o == nil || IsNil(o.OptedForCommunication) {
		return nil, false
	}
	return o.OptedForCommunication, true
}

// HasOptedForCommunication returns a boolean if a field has been set.
func (o *CancelReservationType) HasOptedForCommunication() bool {
	if o != nil && !IsNil(o.OptedForCommunication) {
		return true
	}

	return false
}

// SetOptedForCommunication gets a reference to the given bool and assigns it to the OptedForCommunication field.
func (o *CancelReservationType) SetOptedForCommunication(v bool) {
	o.OptedForCommunication = &v
}

// GetOverrideExternalChecks returns the OverrideExternalChecks field value if set, zero value otherwise.
func (o *CancelReservationType) GetOverrideExternalChecks() bool {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		var ret bool
		return ret
	}
	return *o.OverrideExternalChecks
}

// GetOverrideExternalChecksOk returns a tuple with the OverrideExternalChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetOverrideExternalChecksOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		return nil, false
	}
	return o.OverrideExternalChecks, true
}

// HasOverrideExternalChecks returns a boolean if a field has been set.
func (o *CancelReservationType) HasOverrideExternalChecks() bool {
	if o != nil && !IsNil(o.OverrideExternalChecks) {
		return true
	}

	return false
}

// SetOverrideExternalChecks gets a reference to the given bool and assigns it to the OverrideExternalChecks field.
func (o *CancelReservationType) SetOverrideExternalChecks(v bool) {
	o.OverrideExternalChecks = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CancelReservationType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CancelReservationType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *CancelReservationType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPreRegistered returns the PreRegistered field value if set, zero value otherwise.
func (o *CancelReservationType) GetPreRegistered() bool {
	if o == nil || IsNil(o.PreRegistered) {
		var ret bool
		return ret
	}
	return *o.PreRegistered
}

// GetPreRegisteredOk returns a tuple with the PreRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetPreRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.PreRegistered) {
		return nil, false
	}
	return o.PreRegistered, true
}

// HasPreRegistered returns a boolean if a field has been set.
func (o *CancelReservationType) HasPreRegistered() bool {
	if o != nil && !IsNil(o.PreRegistered) {
		return true
	}

	return false
}

// SetPreRegistered gets a reference to the given bool and assigns it to the PreRegistered field.
func (o *CancelReservationType) SetPreRegistered(v bool) {
	o.PreRegistered = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *CancelReservationType) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *CancelReservationType) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *CancelReservationType) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *CancelReservationType) GetQueue() ReservationQueueInformationType {
	if o == nil || IsNil(o.Queue) {
		var ret ReservationQueueInformationType
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetQueueOk() (*ReservationQueueInformationType, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *CancelReservationType) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given ReservationQueueInformationType and assigns it to the Queue field.
func (o *CancelReservationType) SetQueue(v ReservationQueueInformationType) {
	o.Queue = &v
}

// GetRefResId returns the RefResId field value if set, zero value otherwise.
func (o *CancelReservationType) GetRefResId() UniqueIDType {
	if o == nil || IsNil(o.RefResId) {
		var ret UniqueIDType
		return ret
	}
	return *o.RefResId
}

// GetRefResIdOk returns a tuple with the RefResId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetRefResIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.RefResId) {
		return nil, false
	}
	return o.RefResId, true
}

// HasRefResId returns a boolean if a field has been set.
func (o *CancelReservationType) HasRefResId() bool {
	if o != nil && !IsNil(o.RefResId) {
		return true
	}

	return false
}

// SetRefResId gets a reference to the given UniqueIDType and assigns it to the RefResId field.
func (o *CancelReservationType) SetRefResId(v UniqueIDType) {
	o.RefResId = &v
}

// GetReservationCommunication returns the ReservationCommunication field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationCommunication() ResCommunicationType {
	if o == nil || IsNil(o.ReservationCommunication) {
		var ret ResCommunicationType
		return ret
	}
	return *o.ReservationCommunication
}

// GetReservationCommunicationOk returns a tuple with the ReservationCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationCommunicationOk() (*ResCommunicationType, bool) {
	if o == nil || IsNil(o.ReservationCommunication) {
		return nil, false
	}
	return o.ReservationCommunication, true
}

// HasReservationCommunication returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationCommunication() bool {
	if o != nil && !IsNil(o.ReservationCommunication) {
		return true
	}

	return false
}

// SetReservationCommunication gets a reference to the given ResCommunicationType and assigns it to the ReservationCommunication field.
func (o *CancelReservationType) SetReservationCommunication(v ResCommunicationType) {
	o.ReservationCommunication = &v
}

// GetReservationFolioWindows returns the ReservationFolioWindows field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationFolioWindows() []ReservationFolioWindowType {
	if o == nil || IsNil(o.ReservationFolioWindows) {
		var ret []ReservationFolioWindowType
		return ret
	}
	return o.ReservationFolioWindows
}

// GetReservationFolioWindowsOk returns a tuple with the ReservationFolioWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationFolioWindowsOk() ([]ReservationFolioWindowType, bool) {
	if o == nil || IsNil(o.ReservationFolioWindows) {
		return nil, false
	}
	return o.ReservationFolioWindows, true
}

// HasReservationFolioWindows returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationFolioWindows() bool {
	if o != nil && !IsNil(o.ReservationFolioWindows) {
		return true
	}

	return false
}

// SetReservationFolioWindows gets a reference to the given []ReservationFolioWindowType and assigns it to the ReservationFolioWindows field.
func (o *CancelReservationType) SetReservationFolioWindows(v []ReservationFolioWindowType) {
	o.ReservationFolioWindows = v
}

// GetReservationGuest returns the ReservationGuest field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationGuest() ResGuestInfoType {
	if o == nil || IsNil(o.ReservationGuest) {
		var ret ResGuestInfoType
		return ret
	}
	return *o.ReservationGuest
}

// GetReservationGuestOk returns a tuple with the ReservationGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationGuestOk() (*ResGuestInfoType, bool) {
	if o == nil || IsNil(o.ReservationGuest) {
		return nil, false
	}
	return o.ReservationGuest, true
}

// HasReservationGuest returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationGuest() bool {
	if o != nil && !IsNil(o.ReservationGuest) {
		return true
	}

	return false
}

// SetReservationGuest gets a reference to the given ResGuestInfoType and assigns it to the ReservationGuest field.
func (o *CancelReservationType) SetReservationGuest(v ResGuestInfoType) {
	o.ReservationGuest = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *CancelReservationType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetReservationIndicators returns the ReservationIndicators field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationIndicators() []IndicatorType {
	if o == nil || IsNil(o.ReservationIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ReservationIndicators
}

// GetReservationIndicatorsOk returns a tuple with the ReservationIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ReservationIndicators) {
		return nil, false
	}
	return o.ReservationIndicators, true
}

// HasReservationIndicators returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationIndicators() bool {
	if o != nil && !IsNil(o.ReservationIndicators) {
		return true
	}

	return false
}

// SetReservationIndicators gets a reference to the given []IndicatorType and assigns it to the ReservationIndicators field.
func (o *CancelReservationType) SetReservationIndicators(v []IndicatorType) {
	o.ReservationIndicators = v
}

// GetReservationLockHandle returns the ReservationLockHandle field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationLockHandle() float32 {
	if o == nil || IsNil(o.ReservationLockHandle) {
		var ret float32
		return ret
	}
	return *o.ReservationLockHandle
}

// GetReservationLockHandleOk returns a tuple with the ReservationLockHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationLockHandleOk() (*float32, bool) {
	if o == nil || IsNil(o.ReservationLockHandle) {
		return nil, false
	}
	return o.ReservationLockHandle, true
}

// HasReservationLockHandle returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationLockHandle() bool {
	if o != nil && !IsNil(o.ReservationLockHandle) {
		return true
	}

	return false
}

// SetReservationLockHandle gets a reference to the given float32 and assigns it to the ReservationLockHandle field.
func (o *CancelReservationType) SetReservationLockHandle(v float32) {
	o.ReservationLockHandle = &v
}

// GetReservationPaymentMethod returns the ReservationPaymentMethod field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationPaymentMethod() ReservationPaymentMethodType {
	if o == nil || IsNil(o.ReservationPaymentMethod) {
		var ret ReservationPaymentMethodType
		return ret
	}
	return *o.ReservationPaymentMethod
}

// GetReservationPaymentMethodOk returns a tuple with the ReservationPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationPaymentMethodOk() (*ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethod) {
		return nil, false
	}
	return o.ReservationPaymentMethod, true
}

// HasReservationPaymentMethod returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationPaymentMethod() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethod) {
		return true
	}

	return false
}

// SetReservationPaymentMethod gets a reference to the given ReservationPaymentMethodType and assigns it to the ReservationPaymentMethod field.
func (o *CancelReservationType) SetReservationPaymentMethod(v ReservationPaymentMethodType) {
	o.ReservationPaymentMethod = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *CancelReservationType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *CancelReservationType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *CancelReservationType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetRevenuesAndBalances returns the RevenuesAndBalances field value if set, zero value otherwise.
func (o *CancelReservationType) GetRevenuesAndBalances() ResRevenueBalanceType {
	if o == nil || IsNil(o.RevenuesAndBalances) {
		var ret ResRevenueBalanceType
		return ret
	}
	return *o.RevenuesAndBalances
}

// GetRevenuesAndBalancesOk returns a tuple with the RevenuesAndBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetRevenuesAndBalancesOk() (*ResRevenueBalanceType, bool) {
	if o == nil || IsNil(o.RevenuesAndBalances) {
		return nil, false
	}
	return o.RevenuesAndBalances, true
}

// HasRevenuesAndBalances returns a boolean if a field has been set.
func (o *CancelReservationType) HasRevenuesAndBalances() bool {
	if o != nil && !IsNil(o.RevenuesAndBalances) {
		return true
	}

	return false
}

// SetRevenuesAndBalances gets a reference to the given ResRevenueBalanceType and assigns it to the RevenuesAndBalances field.
func (o *CancelReservationType) SetRevenuesAndBalances(v ResRevenueBalanceType) {
	o.RevenuesAndBalances = &v
}

// GetRoomStatus returns the RoomStatus field value if set, zero value otherwise.
func (o *CancelReservationType) GetRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.RoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.RoomStatus
}

// GetRoomStatusOk returns a tuple with the RoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.RoomStatus) {
		return nil, false
	}
	return o.RoomStatus, true
}

// HasRoomStatus returns a boolean if a field has been set.
func (o *CancelReservationType) HasRoomStatus() bool {
	if o != nil && !IsNil(o.RoomStatus) {
		return true
	}

	return false
}

// SetRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the RoomStatus field.
func (o *CancelReservationType) SetRoomStatus(v HousekeepingRoomStatusType) {
	o.RoomStatus = &v
}

// GetRoomStay returns the RoomStay field value if set, zero value otherwise.
func (o *CancelReservationType) GetRoomStay() StayInfoType {
	if o == nil || IsNil(o.RoomStay) {
		var ret StayInfoType
		return ret
	}
	return *o.RoomStay
}

// GetRoomStayOk returns a tuple with the RoomStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetRoomStayOk() (*StayInfoType, bool) {
	if o == nil || IsNil(o.RoomStay) {
		return nil, false
	}
	return o.RoomStay, true
}

// HasRoomStay returns a boolean if a field has been set.
func (o *CancelReservationType) HasRoomStay() bool {
	if o != nil && !IsNil(o.RoomStay) {
		return true
	}

	return false
}

// SetRoomStay gets a reference to the given StayInfoType and assigns it to the RoomStay field.
func (o *CancelReservationType) SetRoomStay(v StayInfoType) {
	o.RoomStay = &v
}

// GetRoomStayReservation returns the RoomStayReservation field value if set, zero value otherwise.
func (o *CancelReservationType) GetRoomStayReservation() bool {
	if o == nil || IsNil(o.RoomStayReservation) {
		var ret bool
		return ret
	}
	return *o.RoomStayReservation
}

// GetRoomStayReservationOk returns a tuple with the RoomStayReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetRoomStayReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomStayReservation) {
		return nil, false
	}
	return o.RoomStayReservation, true
}

// HasRoomStayReservation returns a boolean if a field has been set.
func (o *CancelReservationType) HasRoomStayReservation() bool {
	if o != nil && !IsNil(o.RoomStayReservation) {
		return true
	}

	return false
}

// SetRoomStayReservation gets a reference to the given bool and assigns it to the RoomStayReservation field.
func (o *CancelReservationType) SetRoomStayReservation(v bool) {
	o.RoomStayReservation = &v
}

// GetSearchMatches returns the SearchMatches field value if set, zero value otherwise.
func (o *CancelReservationType) GetSearchMatches() []SearchMatchType {
	if o == nil || IsNil(o.SearchMatches) {
		var ret []SearchMatchType
		return ret
	}
	return o.SearchMatches
}

// GetSearchMatchesOk returns a tuple with the SearchMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetSearchMatchesOk() ([]SearchMatchType, bool) {
	if o == nil || IsNil(o.SearchMatches) {
		return nil, false
	}
	return o.SearchMatches, true
}

// HasSearchMatches returns a boolean if a field has been set.
func (o *CancelReservationType) HasSearchMatches() bool {
	if o != nil && !IsNil(o.SearchMatches) {
		return true
	}

	return false
}

// SetSearchMatches gets a reference to the given []SearchMatchType and assigns it to the SearchMatches field.
func (o *CancelReservationType) SetSearchMatches(v []SearchMatchType) {
	o.SearchMatches = v
}

// GetSharedGuests returns the SharedGuests field value if set, zero value otherwise.
func (o *CancelReservationType) GetSharedGuests() []ResSharedGuestInfoType {
	if o == nil || IsNil(o.SharedGuests) {
		var ret []ResSharedGuestInfoType
		return ret
	}
	return o.SharedGuests
}

// GetSharedGuestsOk returns a tuple with the SharedGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetSharedGuestsOk() ([]ResSharedGuestInfoType, bool) {
	if o == nil || IsNil(o.SharedGuests) {
		return nil, false
	}
	return o.SharedGuests, true
}

// HasSharedGuests returns a boolean if a field has been set.
func (o *CancelReservationType) HasSharedGuests() bool {
	if o != nil && !IsNil(o.SharedGuests) {
		return true
	}

	return false
}

// SetSharedGuests gets a reference to the given []ResSharedGuestInfoType and assigns it to the SharedGuests field.
func (o *CancelReservationType) SetSharedGuests(v []ResSharedGuestInfoType) {
	o.SharedGuests = v
}

// GetSourceOfSale returns the SourceOfSale field value if set, zero value otherwise.
func (o *CancelReservationType) GetSourceOfSale() SourceOfSaleType {
	if o == nil || IsNil(o.SourceOfSale) {
		var ret SourceOfSaleType
		return ret
	}
	return *o.SourceOfSale
}

// GetSourceOfSaleOk returns a tuple with the SourceOfSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetSourceOfSaleOk() (*SourceOfSaleType, bool) {
	if o == nil || IsNil(o.SourceOfSale) {
		return nil, false
	}
	return o.SourceOfSale, true
}

// HasSourceOfSale returns a boolean if a field has been set.
func (o *CancelReservationType) HasSourceOfSale() bool {
	if o != nil && !IsNil(o.SourceOfSale) {
		return true
	}

	return false
}

// SetSourceOfSale gets a reference to the given SourceOfSaleType and assigns it to the SourceOfSale field.
func (o *CancelReservationType) SetSourceOfSale(v SourceOfSaleType) {
	o.SourceOfSale = &v
}

// GetSpecials returns the Specials field value if set, zero value otherwise.
func (o *CancelReservationType) GetSpecials() string {
	if o == nil || IsNil(o.Specials) {
		var ret string
		return ret
	}
	return *o.Specials
}

// GetSpecialsOk returns a tuple with the Specials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetSpecialsOk() (*string, bool) {
	if o == nil || IsNil(o.Specials) {
		return nil, false
	}
	return o.Specials, true
}

// HasSpecials returns a boolean if a field has been set.
func (o *CancelReservationType) HasSpecials() bool {
	if o != nil && !IsNil(o.Specials) {
		return true
	}

	return false
}

// SetSpecials gets a reference to the given string and assigns it to the Specials field.
func (o *CancelReservationType) SetSpecials(v string) {
	o.Specials = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *CancelReservationType) GetTaxType() TaxTypeType {
	if o == nil || IsNil(o.TaxType) {
		var ret TaxTypeType
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetTaxTypeOk() (*TaxTypeType, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *CancelReservationType) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given TaxTypeType and assigns it to the TaxType field.
func (o *CancelReservationType) SetTaxType(v TaxTypeType) {
	o.TaxType = &v
}

// GetTurndownInfo returns the TurndownInfo field value if set, zero value otherwise.
func (o *CancelReservationType) GetTurndownInfo() ReservationTurndownInfoType {
	if o == nil || IsNil(o.TurndownInfo) {
		var ret ReservationTurndownInfoType
		return ret
	}
	return *o.TurndownInfo
}

// GetTurndownInfoOk returns a tuple with the TurndownInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetTurndownInfoOk() (*ReservationTurndownInfoType, bool) {
	if o == nil || IsNil(o.TurndownInfo) {
		return nil, false
	}
	return o.TurndownInfo, true
}

// HasTurndownInfo returns a boolean if a field has been set.
func (o *CancelReservationType) HasTurndownInfo() bool {
	if o != nil && !IsNil(o.TurndownInfo) {
		return true
	}

	return false
}

// SetTurndownInfo gets a reference to the given ReservationTurndownInfoType and assigns it to the TurndownInfo field.
func (o *CancelReservationType) SetTurndownInfo(v ReservationTurndownInfoType) {
	o.TurndownInfo = &v
}

// GetWaitlist returns the Waitlist field value if set, zero value otherwise.
func (o *CancelReservationType) GetWaitlist() WaitlistResType {
	if o == nil || IsNil(o.Waitlist) {
		var ret WaitlistResType
		return ret
	}
	return *o.Waitlist
}

// GetWaitlistOk returns a tuple with the Waitlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetWaitlistOk() (*WaitlistResType, bool) {
	if o == nil || IsNil(o.Waitlist) {
		return nil, false
	}
	return o.Waitlist, true
}

// HasWaitlist returns a boolean if a field has been set.
func (o *CancelReservationType) HasWaitlist() bool {
	if o != nil && !IsNil(o.Waitlist) {
		return true
	}

	return false
}

// SetWaitlist gets a reference to the given WaitlistResType and assigns it to the Waitlist field.
func (o *CancelReservationType) SetWaitlist(v WaitlistResType) {
	o.Waitlist = &v
}

// GetWalkInIndicator returns the WalkInIndicator field value if set, zero value otherwise.
func (o *CancelReservationType) GetWalkInIndicator() bool {
	if o == nil || IsNil(o.WalkInIndicator) {
		var ret bool
		return ret
	}
	return *o.WalkInIndicator
}

// GetWalkInIndicatorOk returns a tuple with the WalkInIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetWalkInIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.WalkInIndicator) {
		return nil, false
	}
	return o.WalkInIndicator, true
}

// HasWalkInIndicator returns a boolean if a field has been set.
func (o *CancelReservationType) HasWalkInIndicator() bool {
	if o != nil && !IsNil(o.WalkInIndicator) {
		return true
	}

	return false
}

// SetWalkInIndicator gets a reference to the given bool and assigns it to the WalkInIndicator field.
func (o *CancelReservationType) SetWalkInIndicator(v bool) {
	o.WalkInIndicator = &v
}

// GetWelcomeOffer returns the WelcomeOffer field value if set, zero value otherwise.
func (o *CancelReservationType) GetWelcomeOffer() bool {
	if o == nil || IsNil(o.WelcomeOffer) {
		var ret bool
		return ret
	}
	return *o.WelcomeOffer
}

// GetWelcomeOfferOk returns a tuple with the WelcomeOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationType) GetWelcomeOfferOk() (*bool, bool) {
	if o == nil || IsNil(o.WelcomeOffer) {
		return nil, false
	}
	return o.WelcomeOffer, true
}

// HasWelcomeOffer returns a boolean if a field has been set.
func (o *CancelReservationType) HasWelcomeOffer() bool {
	if o != nil && !IsNil(o.WelcomeOffer) {
		return true
	}

	return false
}

// SetWelcomeOffer gets a reference to the given bool and assigns it to the WelcomeOffer field.
func (o *CancelReservationType) SetWelcomeOffer(v bool) {
	o.WelcomeOffer = &v
}

func (o CancelReservationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelReservationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessRestriction) {
		toSerialize["accessRestriction"] = o.AccessRestriction
	}
	if !IsNil(o.AdvanceCheckIn) {
		toSerialize["advanceCheckIn"] = o.AdvanceCheckIn
	}
	if !IsNil(o.AllowMobileCheckout) {
		toSerialize["allowMobileCheckout"] = o.AllowMobileCheckout
	}
	if !IsNil(o.AllowMobileViewFolio) {
		toSerialize["allowMobileViewFolio"] = o.AllowMobileViewFolio
	}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowedActions"] = o.AllowedActions
	}
	if !IsNil(o.AttachedProfiles) {
		toSerialize["attachedProfiles"] = o.AttachedProfiles
	}
	if !IsNil(o.CancellationInfo) {
		toSerialize["cancellationInfo"] = o.CancellationInfo
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.CommissionPayoutTo) {
		toSerialize["commissionPayoutTo"] = o.CommissionPayoutTo
	}
	if !IsNil(o.ComputedReservationStatus) {
		toSerialize["computedReservationStatus"] = o.ComputedReservationStatus
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.CxlInstr) {
		toSerialize["cxlInstr"] = o.CxlInstr
	}
	if !IsNil(o.Deposit) {
		toSerialize["deposit"] = o.Deposit
	}
	if !IsNil(o.DisplayColor) {
		toSerialize["displayColor"] = o.DisplayColor
	}
	if !IsNil(o.ExpectedServiceTime) {
		toSerialize["expectedServiceTime"] = o.ExpectedServiceTime
	}
	if !IsNil(o.ExternalCancellationId) {
		toSerialize["externalCancellationId"] = o.ExternalCancellationId
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.HotelInterfaceStatusList) {
		toSerialize["hotelInterfaceStatusList"] = o.HotelInterfaceStatusList
	}
	if !IsNil(o.HotelName) {
		toSerialize["hotelName"] = o.HotelName
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.KeyCount) {
		toSerialize["keyCount"] = o.KeyCount
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastPrivacyPromptDate) {
		toSerialize["lastPrivacyPromptDate"] = o.LastPrivacyPromptDate
	}
	if !IsNil(o.MobileNotifications) {
		toSerialize["mobileNotifications"] = o.MobileNotifications
	}
	if !IsNil(o.OpenFolio) {
		toSerialize["openFolio"] = o.OpenFolio
	}
	if !IsNil(o.OptedForCommunication) {
		toSerialize["optedForCommunication"] = o.OptedForCommunication
	}
	if !IsNil(o.OverrideExternalChecks) {
		toSerialize["overrideExternalChecks"] = o.OverrideExternalChecks
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PreRegistered) {
		toSerialize["preRegistered"] = o.PreRegistered
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	if !IsNil(o.RefResId) {
		toSerialize["refResId"] = o.RefResId
	}
	if !IsNil(o.ReservationCommunication) {
		toSerialize["reservationCommunication"] = o.ReservationCommunication
	}
	if !IsNil(o.ReservationFolioWindows) {
		toSerialize["reservationFolioWindows"] = o.ReservationFolioWindows
	}
	if !IsNil(o.ReservationGuest) {
		toSerialize["reservationGuest"] = o.ReservationGuest
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ReservationIndicators) {
		toSerialize["reservationIndicators"] = o.ReservationIndicators
	}
	if !IsNil(o.ReservationLockHandle) {
		toSerialize["reservationLockHandle"] = o.ReservationLockHandle
	}
	if !IsNil(o.ReservationPaymentMethod) {
		toSerialize["reservationPaymentMethod"] = o.ReservationPaymentMethod
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RevenuesAndBalances) {
		toSerialize["revenuesAndBalances"] = o.RevenuesAndBalances
	}
	if !IsNil(o.RoomStatus) {
		toSerialize["roomStatus"] = o.RoomStatus
	}
	if !IsNil(o.RoomStay) {
		toSerialize["roomStay"] = o.RoomStay
	}
	if !IsNil(o.RoomStayReservation) {
		toSerialize["roomStayReservation"] = o.RoomStayReservation
	}
	if !IsNil(o.SearchMatches) {
		toSerialize["searchMatches"] = o.SearchMatches
	}
	if !IsNil(o.SharedGuests) {
		toSerialize["sharedGuests"] = o.SharedGuests
	}
	if !IsNil(o.SourceOfSale) {
		toSerialize["sourceOfSale"] = o.SourceOfSale
	}
	if !IsNil(o.Specials) {
		toSerialize["specials"] = o.Specials
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TurndownInfo) {
		toSerialize["turndownInfo"] = o.TurndownInfo
	}
	if !IsNil(o.Waitlist) {
		toSerialize["waitlist"] = o.Waitlist
	}
	if !IsNil(o.WalkInIndicator) {
		toSerialize["walkInIndicator"] = o.WalkInIndicator
	}
	if !IsNil(o.WelcomeOffer) {
		toSerialize["welcomeOffer"] = o.WelcomeOffer
	}
	return toSerialize, nil
}

type NullableCancelReservationType struct {
	value *CancelReservationType
	isSet bool
}

func (v NullableCancelReservationType) Get() *CancelReservationType {
	return v.value
}

func (v *NullableCancelReservationType) Set(val *CancelReservationType) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelReservationType) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelReservationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelReservationType(val *CancelReservationType) *NullableCancelReservationType {
	return &NullableCancelReservationType{value: val, isSet: true}
}

func (v NullableCancelReservationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelReservationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


