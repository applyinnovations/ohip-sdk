/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the CheckDistributionReservationsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckDistributionReservationsSummary{}

// CheckDistributionReservationsSummary Response for checking allowed actions, existence of attached records, or count of reservations.
type CheckDistributionReservationsSummary struct {
	// Collection of reservations Count and the status of its allowed actions, attached records.
	CheckReservations []CheckDistributionReservationsSummaryType `json:"checkReservations,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCheckDistributionReservationsSummary instantiates a new CheckDistributionReservationsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckDistributionReservationsSummary() *CheckDistributionReservationsSummary {
	this := CheckDistributionReservationsSummary{}
	return &this
}

// NewCheckDistributionReservationsSummaryWithDefaults instantiates a new CheckDistributionReservationsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckDistributionReservationsSummaryWithDefaults() *CheckDistributionReservationsSummary {
	this := CheckDistributionReservationsSummary{}
	return &this
}

// GetCheckReservations returns the CheckReservations field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetCheckReservations() []CheckDistributionReservationsSummaryType {
	if o == nil || IsNil(o.CheckReservations) {
		var ret []CheckDistributionReservationsSummaryType
		return ret
	}
	return o.CheckReservations
}

// GetCheckReservationsOk returns a tuple with the CheckReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetCheckReservationsOk() ([]CheckDistributionReservationsSummaryType, bool) {
	if o == nil || IsNil(o.CheckReservations) {
		return nil, false
	}
	return o.CheckReservations, true
}

// HasCheckReservations returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasCheckReservations() bool {
	if o != nil && !IsNil(o.CheckReservations) {
		return true
	}

	return false
}

// SetCheckReservations gets a reference to the given []CheckDistributionReservationsSummaryType and assigns it to the CheckReservations field.
func (o *CheckDistributionReservationsSummary) SetCheckReservations(v []CheckDistributionReservationsSummaryType) {
	o.CheckReservations = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *CheckDistributionReservationsSummary) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *CheckDistributionReservationsSummary) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CheckDistributionReservationsSummary) SetCount(v int32) {
	o.Count = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CheckDistributionReservationsSummary) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CheckDistributionReservationsSummary) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckDistributionReservationsSummary) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CheckDistributionReservationsSummary) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CheckDistributionReservationsSummary) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CheckDistributionReservationsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckDistributionReservationsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckReservations) {
		toSerialize["checkReservations"] = o.CheckReservations
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCheckDistributionReservationsSummary struct {
	value *CheckDistributionReservationsSummary
	isSet bool
}

func (v NullableCheckDistributionReservationsSummary) Get() *CheckDistributionReservationsSummary {
	return v.value
}

func (v *NullableCheckDistributionReservationsSummary) Set(val *CheckDistributionReservationsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckDistributionReservationsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckDistributionReservationsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckDistributionReservationsSummary(val *CheckDistributionReservationsSummary) *NullableCheckDistributionReservationsSummary {
	return &NullableCheckDistributionReservationsSummary{value: val, isSet: true}
}

func (v NullableCheckDistributionReservationsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckDistributionReservationsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


