/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the MasterAccountType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MasterAccountType{}

// MasterAccountType Details of the posting master reservation.
type MasterAccountType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
	ReservationBlock *MasterAccountTypeReservationBlock `json:"reservationBlock,omitempty"`
	RoomRate *MasterAccountTypeRoomRate `json:"roomRate,omitempty"`
	ReservationGuest *ResGuestType `json:"reservationGuest,omitempty"`
	// Collection of non-guest profiles associated with the reservation.
	ReservationProfiles []ReservationProfileType `json:"reservationProfiles,omitempty"`
	// List of Notes for the Guest related to the reservation.
	Comments []CommentInfoType `json:"comments,omitempty"`
	// Defines reservation payment methods.
	ReservationPaymentMethods []ReservationPaymentMethodType `json:"reservationPaymentMethods,omitempty"`
	Cashiering *ResCashieringType `json:"cashiering,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	// Custom Reference to identify reservation.
	CustomReference *string `json:"customReference,omitempty"`
}

// NewMasterAccountType instantiates a new MasterAccountType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMasterAccountType() *MasterAccountType {
	this := MasterAccountType{}
	return &this
}

// NewMasterAccountTypeWithDefaults instantiates a new MasterAccountType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMasterAccountTypeWithDefaults() *MasterAccountType {
	this := MasterAccountType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *MasterAccountType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *MasterAccountType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *MasterAccountType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *MasterAccountType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

// GetReservationBlock returns the ReservationBlock field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationBlock() MasterAccountTypeReservationBlock {
	if o == nil || IsNil(o.ReservationBlock) {
		var ret MasterAccountTypeReservationBlock
		return ret
	}
	return *o.ReservationBlock
}

// GetReservationBlockOk returns a tuple with the ReservationBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationBlockOk() (*MasterAccountTypeReservationBlock, bool) {
	if o == nil || IsNil(o.ReservationBlock) {
		return nil, false
	}
	return o.ReservationBlock, true
}

// HasReservationBlock returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationBlock() bool {
	if o != nil && !IsNil(o.ReservationBlock) {
		return true
	}

	return false
}

// SetReservationBlock gets a reference to the given MasterAccountTypeReservationBlock and assigns it to the ReservationBlock field.
func (o *MasterAccountType) SetReservationBlock(v MasterAccountTypeReservationBlock) {
	o.ReservationBlock = &v
}

// GetRoomRate returns the RoomRate field value if set, zero value otherwise.
func (o *MasterAccountType) GetRoomRate() MasterAccountTypeRoomRate {
	if o == nil || IsNil(o.RoomRate) {
		var ret MasterAccountTypeRoomRate
		return ret
	}
	return *o.RoomRate
}

// GetRoomRateOk returns a tuple with the RoomRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetRoomRateOk() (*MasterAccountTypeRoomRate, bool) {
	if o == nil || IsNil(o.RoomRate) {
		return nil, false
	}
	return o.RoomRate, true
}

// HasRoomRate returns a boolean if a field has been set.
func (o *MasterAccountType) HasRoomRate() bool {
	if o != nil && !IsNil(o.RoomRate) {
		return true
	}

	return false
}

// SetRoomRate gets a reference to the given MasterAccountTypeRoomRate and assigns it to the RoomRate field.
func (o *MasterAccountType) SetRoomRate(v MasterAccountTypeRoomRate) {
	o.RoomRate = &v
}

// GetReservationGuest returns the ReservationGuest field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationGuest() ResGuestType {
	if o == nil || IsNil(o.ReservationGuest) {
		var ret ResGuestType
		return ret
	}
	return *o.ReservationGuest
}

// GetReservationGuestOk returns a tuple with the ReservationGuest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationGuestOk() (*ResGuestType, bool) {
	if o == nil || IsNil(o.ReservationGuest) {
		return nil, false
	}
	return o.ReservationGuest, true
}

// HasReservationGuest returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationGuest() bool {
	if o != nil && !IsNil(o.ReservationGuest) {
		return true
	}

	return false
}

// SetReservationGuest gets a reference to the given ResGuestType and assigns it to the ReservationGuest field.
func (o *MasterAccountType) SetReservationGuest(v ResGuestType) {
	o.ReservationGuest = &v
}

// GetReservationProfiles returns the ReservationProfiles field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationProfiles() []ReservationProfileType {
	if o == nil || IsNil(o.ReservationProfiles) {
		var ret []ReservationProfileType
		return ret
	}
	return o.ReservationProfiles
}

// GetReservationProfilesOk returns a tuple with the ReservationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationProfilesOk() ([]ReservationProfileType, bool) {
	if o == nil || IsNil(o.ReservationProfiles) {
		return nil, false
	}
	return o.ReservationProfiles, true
}

// HasReservationProfiles returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationProfiles() bool {
	if o != nil && !IsNil(o.ReservationProfiles) {
		return true
	}

	return false
}

// SetReservationProfiles gets a reference to the given []ReservationProfileType and assigns it to the ReservationProfiles field.
func (o *MasterAccountType) SetReservationProfiles(v []ReservationProfileType) {
	o.ReservationProfiles = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *MasterAccountType) GetComments() []CommentInfoType {
	if o == nil || IsNil(o.Comments) {
		var ret []CommentInfoType
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetCommentsOk() ([]CommentInfoType, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *MasterAccountType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []CommentInfoType and assigns it to the Comments field.
func (o *MasterAccountType) SetComments(v []CommentInfoType) {
	o.Comments = v
}

// GetReservationPaymentMethods returns the ReservationPaymentMethods field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationPaymentMethods() []ReservationPaymentMethodType {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		var ret []ReservationPaymentMethodType
		return ret
	}
	return o.ReservationPaymentMethods
}

// GetReservationPaymentMethodsOk returns a tuple with the ReservationPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationPaymentMethodsOk() ([]ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		return nil, false
	}
	return o.ReservationPaymentMethods, true
}

// HasReservationPaymentMethods returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationPaymentMethods() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethods) {
		return true
	}

	return false
}

// SetReservationPaymentMethods gets a reference to the given []ReservationPaymentMethodType and assigns it to the ReservationPaymentMethods field.
func (o *MasterAccountType) SetReservationPaymentMethods(v []ReservationPaymentMethodType) {
	o.ReservationPaymentMethods = v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *MasterAccountType) GetCashiering() ResCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ResCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetCashieringOk() (*ResCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *MasterAccountType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ResCashieringType and assigns it to the Cashiering field.
func (o *MasterAccountType) SetCashiering(v ResCashieringType) {
	o.Cashiering = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *MasterAccountType) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *MasterAccountType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *MasterAccountType) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MasterAccountType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MasterAccountType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MasterAccountType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *MasterAccountType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *MasterAccountType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *MasterAccountType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetCustomReference returns the CustomReference field value if set, zero value otherwise.
func (o *MasterAccountType) GetCustomReference() string {
	if o == nil || IsNil(o.CustomReference) {
		var ret string
		return ret
	}
	return *o.CustomReference
}

// GetCustomReferenceOk returns a tuple with the CustomReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountType) GetCustomReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomReference) {
		return nil, false
	}
	return o.CustomReference, true
}

// HasCustomReference returns a boolean if a field has been set.
func (o *MasterAccountType) HasCustomReference() bool {
	if o != nil && !IsNil(o.CustomReference) {
		return true
	}

	return false
}

// SetCustomReference gets a reference to the given string and assigns it to the CustomReference field.
func (o *MasterAccountType) SetCustomReference(v string) {
	o.CustomReference = &v
}

func (o MasterAccountType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MasterAccountType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if !IsNil(o.ReservationBlock) {
		toSerialize["reservationBlock"] = o.ReservationBlock
	}
	if !IsNil(o.RoomRate) {
		toSerialize["roomRate"] = o.RoomRate
	}
	if !IsNil(o.ReservationGuest) {
		toSerialize["reservationGuest"] = o.ReservationGuest
	}
	if !IsNil(o.ReservationProfiles) {
		toSerialize["reservationProfiles"] = o.ReservationProfiles
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.ReservationPaymentMethods) {
		toSerialize["reservationPaymentMethods"] = o.ReservationPaymentMethods
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.CustomReference) {
		toSerialize["customReference"] = o.CustomReference
	}
	return toSerialize, nil
}

type NullableMasterAccountType struct {
	value *MasterAccountType
	isSet bool
}

func (v NullableMasterAccountType) Get() *MasterAccountType {
	return v.value
}

func (v *NullableMasterAccountType) Set(val *MasterAccountType) {
	v.value = val
	v.isSet = true
}

func (v NullableMasterAccountType) IsSet() bool {
	return v.isSet
}

func (v *NullableMasterAccountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMasterAccountType(val *MasterAccountType) *NullableMasterAccountType {
	return &NullableMasterAccountType{value: val, isSet: true}
}

func (v NullableMasterAccountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMasterAccountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


