/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationsInstructionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationsInstructionsType{}

// ReservationsInstructionsType Instructions for a reservation.
type ReservationsInstructionsType struct {
	LinkReservations *LinkReservationInstructionType `json:"linkReservations,omitempty"`
	ShareReservations *ShareReservationInstructionType `json:"shareReservations,omitempty"`
}

// NewReservationsInstructionsType instantiates a new ReservationsInstructionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationsInstructionsType() *ReservationsInstructionsType {
	this := ReservationsInstructionsType{}
	return &this
}

// NewReservationsInstructionsTypeWithDefaults instantiates a new ReservationsInstructionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationsInstructionsTypeWithDefaults() *ReservationsInstructionsType {
	this := ReservationsInstructionsType{}
	return &this
}

// GetLinkReservations returns the LinkReservations field value if set, zero value otherwise.
func (o *ReservationsInstructionsType) GetLinkReservations() LinkReservationInstructionType {
	if o == nil || IsNil(o.LinkReservations) {
		var ret LinkReservationInstructionType
		return ret
	}
	return *o.LinkReservations
}

// GetLinkReservationsOk returns a tuple with the LinkReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInstructionsType) GetLinkReservationsOk() (*LinkReservationInstructionType, bool) {
	if o == nil || IsNil(o.LinkReservations) {
		return nil, false
	}
	return o.LinkReservations, true
}

// HasLinkReservations returns a boolean if a field has been set.
func (o *ReservationsInstructionsType) HasLinkReservations() bool {
	if o != nil && !IsNil(o.LinkReservations) {
		return true
	}

	return false
}

// SetLinkReservations gets a reference to the given LinkReservationInstructionType and assigns it to the LinkReservations field.
func (o *ReservationsInstructionsType) SetLinkReservations(v LinkReservationInstructionType) {
	o.LinkReservations = &v
}

// GetShareReservations returns the ShareReservations field value if set, zero value otherwise.
func (o *ReservationsInstructionsType) GetShareReservations() ShareReservationInstructionType {
	if o == nil || IsNil(o.ShareReservations) {
		var ret ShareReservationInstructionType
		return ret
	}
	return *o.ShareReservations
}

// GetShareReservationsOk returns a tuple with the ShareReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationsInstructionsType) GetShareReservationsOk() (*ShareReservationInstructionType, bool) {
	if o == nil || IsNil(o.ShareReservations) {
		return nil, false
	}
	return o.ShareReservations, true
}

// HasShareReservations returns a boolean if a field has been set.
func (o *ReservationsInstructionsType) HasShareReservations() bool {
	if o != nil && !IsNil(o.ShareReservations) {
		return true
	}

	return false
}

// SetShareReservations gets a reference to the given ShareReservationInstructionType and assigns it to the ShareReservations field.
func (o *ReservationsInstructionsType) SetShareReservations(v ShareReservationInstructionType) {
	o.ShareReservations = &v
}

func (o ReservationsInstructionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationsInstructionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkReservations) {
		toSerialize["linkReservations"] = o.LinkReservations
	}
	if !IsNil(o.ShareReservations) {
		toSerialize["shareReservations"] = o.ShareReservations
	}
	return toSerialize, nil
}

type NullableReservationsInstructionsType struct {
	value *ReservationsInstructionsType
	isSet bool
}

func (v NullableReservationsInstructionsType) Get() *ReservationsInstructionsType {
	return v.value
}

func (v *NullableReservationsInstructionsType) Set(val *ReservationsInstructionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationsInstructionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationsInstructionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationsInstructionsType(val *ReservationsInstructionsType) *NullableReservationsInstructionsType {
	return &NullableReservationsInstructionsType{value: val, isSet: true}
}

func (v NullableReservationsInstructionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationsInstructionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


