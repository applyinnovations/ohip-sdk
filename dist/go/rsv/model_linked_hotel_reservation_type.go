/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the LinkedHotelReservationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkedHotelReservationType{}

// LinkedHotelReservationType The Reservation class contains the current reservation being created or altered.
type LinkedHotelReservationType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// This type contains unique information of external reference.
	ExternalReferences []ExternalReferenceType `json:"externalReferences,omitempty"`
	// Information regarding associated reservations to the reservation.
	AssociatedReservations map[string]interface{} `json:"associatedReservations,omitempty"`
	SourceOfSale *SourceOfSaleType `json:"sourceOfSale,omitempty"`
	RoomStay *RoomStayType `json:"roomStay,omitempty"`
	CompAuthorizer *CompAuthorizerInfoType `json:"compAuthorizer,omitempty"`
	// Collection of guests associated with the reservation.
	ReservationGuests []ResGuestType `json:"reservationGuests,omitempty"`
	// Collection of shared guest reservations.
	SharedGuests []ResSharedGuestInfoType `json:"sharedGuests,omitempty"`
	AdditionalGuestInfo *ResGuestAdditionalInfoType `json:"additionalGuestInfo,omitempty"`
	ReservationProfiles *HotelReservationTypeReservationProfiles `json:"reservationProfiles,omitempty"`
	ReservationCommunication *ResCommunicationType `json:"reservationCommunication,omitempty"`
	// List of awards.
	ReservationAwards []AwardType `json:"reservationAwards,omitempty"`
	// 
	TrackItItems []TrackItItemType `json:"trackItItems,omitempty"`
	Shares *HotelReservationsType `json:"shares,omitempty"`
	// Holds the Locator Information.
	Locators []ReservationLocatorType `json:"locators,omitempty"`
	// Attachment List.
	Attachments []AttachmentType `json:"attachments,omitempty"`
	// Attachment List.
	WebRegistrationCards []AttachmentType `json:"webRegistrationCards,omitempty"`
	// Service request.
	ServiceRequests []ServiceRequest `json:"serviceRequests,omitempty"`
	// Criteria for fetching Activity Bookings.
	ReservationActivities []FetchActivityBookingsType `json:"reservationActivities,omitempty"`
	// Criteria for fetching Activity Bookings.
	ScheduledActivities []FetchActivityBookingsType `json:"scheduledActivities,omitempty"`
	// Holds fixed charge detail.
	PrepaidCards []PrepaidCardType `json:"prepaidCards,omitempty"`
	// List of awards.
	ProfileAwards []AwardType `json:"profileAwards,omitempty"`
	// A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.
	ReservationPackages []ReservationPackageType `json:"reservationPackages,omitempty"`
	InventoryItems *ResInventoryItemsType `json:"inventoryItems,omitempty"`
	// List of Notes for the Guest related to the reservation.
	Comments []CommentInfoType `json:"comments,omitempty"`
	// List of Notes for the Guest related to the profile.
	GuestComments []CommentInfoType `json:"guestComments,omitempty"`
	// List of Memberships for the Guest related to the reservation.
	GuestMemberships []MembershipType `json:"guestMemberships,omitempty"`
	// Collection of reservation preferences.
	PreferenceCollection []PreferenceTypeType `json:"preferenceCollection,omitempty"`
	// List of reservation memberships.
	ReservationMemberships []ReservationMembershipType `json:"reservationMemberships,omitempty"`
	// Defines reservation payment methods.
	ReservationPaymentMethods []ReservationPaymentMethodType `json:"reservationPaymentMethods,omitempty"`
	// A routing info object can either be of type Folio OR of type Room with its corresponding instructions.
	RoutingInstructions []RoutingInfoType `json:"routingInstructions,omitempty"`
	ReservationPolicies *ReservationPoliciesType `json:"reservationPolicies,omitempty"`
	Cashiering *ResCashieringType `json:"cashiering,omitempty"`
	Housekeeping *ResHousekeepingType `json:"housekeeping,omitempty"`
	LinkedReservation *LinkedReservationsInfoType `json:"linkedReservation,omitempty"`
	ExtSystemSync *bool `json:"extSystemSync,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
	// Collection of lamp indicators.
	ReservationIndicators []IndicatorType `json:"reservationIndicators,omitempty"`
	Waitlist *WaitlistResType `json:"waitlist,omitempty"`
	Cancellation *HotelReservationTypeCancellation `json:"cancellation,omitempty"`
	Catering *CateringResInfoType `json:"catering,omitempty"`
	StatisticalClassification *ResStatClassificationType `json:"statisticalClassification,omitempty"`
	// List of alerts.
	Alerts []AlertType `json:"alerts,omitempty"`
	// List of Reservation Traces.
	Traces []HotelReservationTraceType `json:"traces,omitempty"`
	// List of confirmation letters.
	ConfirmationLetters []ConfirmationType `json:"confirmationLetters,omitempty"`
	// Holds call information.
	CallHistory []CallType `json:"callHistory,omitempty"`
	// Holds fixed charge detail.
	FixedCharges []FixedChargeType `json:"fixedCharges,omitempty"`
	// Holds the Message Information
	GuestMessages []GuestMessageType `json:"guestMessages,omitempty"`
	// An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.
	LockHandle *float32 `json:"lockHandle,omitempty"`
	// List of override actions done.
	OverrideInstructions []OverrideInstructionType `json:"overrideInstructions,omitempty"`
	Queue *ReservationQueueInformationType `json:"queue,omitempty"`
	// Allowed action.
	AllowedActions []ReservationAllowedActionType `json:"allowedActions,omitempty"`
	// Collection of ECouponType object.
	ECoupons []ECouponType `json:"eCoupons,omitempty"`
	TransactionDiversions *HotelReservationTypeTransactionDiversions `json:"transactionDiversions,omitempty"`
	AdvanceCheckIn *AdvanceCheckInType `json:"advanceCheckIn,omitempty"`
	// Collection of TicketType objects.
	Tickets []TicketType `json:"tickets,omitempty"`
	// Configurable Access Restriction Message for Excluded Block or Rate Code.
	AccessRestrictionMessage *string `json:"accessRestrictionMessage,omitempty"`
	// Collection of ECertificateType object.
	ECertificates []ReservationECertificateType `json:"eCertificates,omitempty"`
	CustomNameValueDetail *NameValueDetailType `json:"customNameValueDetail,omitempty"`
	// List of Custom Charge Exemptions.
	CustomChargeExemptionDetails []CustomChargeExemptionType `json:"customChargeExemptionDetails,omitempty"`
	// This type contains a list of generated bills for a reservation.
	Folios []FolioShortInfoType `json:"folios,omitempty"`
	// This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.
	AutoBorrowFromHouse *bool `json:"autoBorrowFromHouse,omitempty"`
	// Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation
	OverrideExternalChecks *bool `json:"overrideExternalChecks,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	// Boolean True if this reservation is reserving rooms. False if it is only reserving services.
	RoomStayReservation *bool `json:"roomStayReservation,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	ComputedReservationStatus *PMSResStatusType `json:"computedReservationStatus,omitempty"`
	// When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.
	WalkIn *bool `json:"walkIn,omitempty"`
	// Indicates whether to show the rate or not on a printed document which includes the rate.
	PrintRate *bool `json:"printRate,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
	// Business Date when the reservation was created.
	CreateBusinessDate *string `json:"createBusinessDate,omitempty"`
	// Business Date when the reservation was last reinstated.
	ReinstateDate *string `json:"reinstateDate,omitempty"`
	// Party/PartyCode when reservation is part of a party(a small group).
	Party *string `json:"party,omitempty"`
	// Name Of the Resort/Hotel for the primary enrollment
	PrimaryEnrollmentResort *string `json:"primaryEnrollmentResort,omitempty"`
	// Name of the Chain for the primary enrollment
	PrimaryEnrollmentChain *string `json:"primaryEnrollmentChain,omitempty"`
	// Custom Reference to identify reservation.
	CustomReference *string `json:"customReference,omitempty"`
	// The color to display this reservation on room grid displays.
	DisplayColor *string `json:"displayColor,omitempty"`
	// Mark this reservation as recently accessed.
	MarkAsRecentlyAccessed *bool `json:"markAsRecentlyAccessed,omitempty"`
	// Indicates to Override the Room Inventory Check if applicable.
	OverrideInventoryCheck *bool `json:"overrideInventoryCheck,omitempty"`
	AccessRestriction *ResAccessRestrictionType `json:"accessRestriction,omitempty"`
	// Is the reservation pre-registered.
	PreRegistered *bool `json:"preRegistered,omitempty"`
	// Indicates whether the reservation is eligible for upgrade.
	UpgradeEligible *bool `json:"upgradeEligible,omitempty"`
	OverrideBlockRestriction *bool `json:"overrideBlockRestriction,omitempty"`
	// Flag to allow auto checkin
	AllowAutoCheckin *bool `json:"allowAutoCheckin,omitempty"`
	HasOpenFolio *bool `json:"hasOpenFolio,omitempty"`
	// Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.
	AllowMobileCheckout *bool `json:"allowMobileCheckout,omitempty"`
	// Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
	AllowMobileViewFolio *bool `json:"allowMobileViewFolio,omitempty"`
	// Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.
	AllowPreRegistration *bool `json:"allowPreRegistration,omitempty"`
	// Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.
	OptedForCommunication *bool `json:"optedForCommunication,omitempty"`
	// This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.
	ChargeCardNumber *string `json:"chargeCardNumber,omitempty"`
	// Indicates to Override the Room Out Of Service Check if applicable.
	OverrideOutOfServiceCheck *bool `json:"overrideOutOfServiceCheck,omitempty"`
	LinkReservationType *LinkedReservationType `json:"linkReservationType,omitempty"`
}

// NewLinkedHotelReservationType instantiates a new LinkedHotelReservationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedHotelReservationType() *LinkedHotelReservationType {
	this := LinkedHotelReservationType{}
	return &this
}

// NewLinkedHotelReservationTypeWithDefaults instantiates a new LinkedHotelReservationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedHotelReservationTypeWithDefaults() *LinkedHotelReservationType {
	this := LinkedHotelReservationType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *LinkedHotelReservationType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetExternalReferences returns the ExternalReferences field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetExternalReferences() []ExternalReferenceType {
	if o == nil || IsNil(o.ExternalReferences) {
		var ret []ExternalReferenceType
		return ret
	}
	return o.ExternalReferences
}

// GetExternalReferencesOk returns a tuple with the ExternalReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetExternalReferencesOk() ([]ExternalReferenceType, bool) {
	if o == nil || IsNil(o.ExternalReferences) {
		return nil, false
	}
	return o.ExternalReferences, true
}

// HasExternalReferences returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasExternalReferences() bool {
	if o != nil && !IsNil(o.ExternalReferences) {
		return true
	}

	return false
}

// SetExternalReferences gets a reference to the given []ExternalReferenceType and assigns it to the ExternalReferences field.
func (o *LinkedHotelReservationType) SetExternalReferences(v []ExternalReferenceType) {
	o.ExternalReferences = v
}

// GetAssociatedReservations returns the AssociatedReservations field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAssociatedReservations() map[string]interface{} {
	if o == nil || IsNil(o.AssociatedReservations) {
		var ret map[string]interface{}
		return ret
	}
	return o.AssociatedReservations
}

// GetAssociatedReservationsOk returns a tuple with the AssociatedReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAssociatedReservationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AssociatedReservations) {
		return map[string]interface{}{}, false
	}
	return o.AssociatedReservations, true
}

// HasAssociatedReservations returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAssociatedReservations() bool {
	if o != nil && !IsNil(o.AssociatedReservations) {
		return true
	}

	return false
}

// SetAssociatedReservations gets a reference to the given map[string]interface{} and assigns it to the AssociatedReservations field.
func (o *LinkedHotelReservationType) SetAssociatedReservations(v map[string]interface{}) {
	o.AssociatedReservations = v
}

// GetSourceOfSale returns the SourceOfSale field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetSourceOfSale() SourceOfSaleType {
	if o == nil || IsNil(o.SourceOfSale) {
		var ret SourceOfSaleType
		return ret
	}
	return *o.SourceOfSale
}

// GetSourceOfSaleOk returns a tuple with the SourceOfSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetSourceOfSaleOk() (*SourceOfSaleType, bool) {
	if o == nil || IsNil(o.SourceOfSale) {
		return nil, false
	}
	return o.SourceOfSale, true
}

// HasSourceOfSale returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasSourceOfSale() bool {
	if o != nil && !IsNil(o.SourceOfSale) {
		return true
	}

	return false
}

// SetSourceOfSale gets a reference to the given SourceOfSaleType and assigns it to the SourceOfSale field.
func (o *LinkedHotelReservationType) SetSourceOfSale(v SourceOfSaleType) {
	o.SourceOfSale = &v
}

// GetRoomStay returns the RoomStay field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetRoomStay() RoomStayType {
	if o == nil || IsNil(o.RoomStay) {
		var ret RoomStayType
		return ret
	}
	return *o.RoomStay
}

// GetRoomStayOk returns a tuple with the RoomStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetRoomStayOk() (*RoomStayType, bool) {
	if o == nil || IsNil(o.RoomStay) {
		return nil, false
	}
	return o.RoomStay, true
}

// HasRoomStay returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasRoomStay() bool {
	if o != nil && !IsNil(o.RoomStay) {
		return true
	}

	return false
}

// SetRoomStay gets a reference to the given RoomStayType and assigns it to the RoomStay field.
func (o *LinkedHotelReservationType) SetRoomStay(v RoomStayType) {
	o.RoomStay = &v
}

// GetCompAuthorizer returns the CompAuthorizer field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCompAuthorizer() CompAuthorizerInfoType {
	if o == nil || IsNil(o.CompAuthorizer) {
		var ret CompAuthorizerInfoType
		return ret
	}
	return *o.CompAuthorizer
}

// GetCompAuthorizerOk returns a tuple with the CompAuthorizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCompAuthorizerOk() (*CompAuthorizerInfoType, bool) {
	if o == nil || IsNil(o.CompAuthorizer) {
		return nil, false
	}
	return o.CompAuthorizer, true
}

// HasCompAuthorizer returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCompAuthorizer() bool {
	if o != nil && !IsNil(o.CompAuthorizer) {
		return true
	}

	return false
}

// SetCompAuthorizer gets a reference to the given CompAuthorizerInfoType and assigns it to the CompAuthorizer field.
func (o *LinkedHotelReservationType) SetCompAuthorizer(v CompAuthorizerInfoType) {
	o.CompAuthorizer = &v
}

// GetReservationGuests returns the ReservationGuests field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationGuests() []ResGuestType {
	if o == nil || IsNil(o.ReservationGuests) {
		var ret []ResGuestType
		return ret
	}
	return o.ReservationGuests
}

// GetReservationGuestsOk returns a tuple with the ReservationGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationGuestsOk() ([]ResGuestType, bool) {
	if o == nil || IsNil(o.ReservationGuests) {
		return nil, false
	}
	return o.ReservationGuests, true
}

// HasReservationGuests returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationGuests() bool {
	if o != nil && !IsNil(o.ReservationGuests) {
		return true
	}

	return false
}

// SetReservationGuests gets a reference to the given []ResGuestType and assigns it to the ReservationGuests field.
func (o *LinkedHotelReservationType) SetReservationGuests(v []ResGuestType) {
	o.ReservationGuests = v
}

// GetSharedGuests returns the SharedGuests field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetSharedGuests() []ResSharedGuestInfoType {
	if o == nil || IsNil(o.SharedGuests) {
		var ret []ResSharedGuestInfoType
		return ret
	}
	return o.SharedGuests
}

// GetSharedGuestsOk returns a tuple with the SharedGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetSharedGuestsOk() ([]ResSharedGuestInfoType, bool) {
	if o == nil || IsNil(o.SharedGuests) {
		return nil, false
	}
	return o.SharedGuests, true
}

// HasSharedGuests returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasSharedGuests() bool {
	if o != nil && !IsNil(o.SharedGuests) {
		return true
	}

	return false
}

// SetSharedGuests gets a reference to the given []ResSharedGuestInfoType and assigns it to the SharedGuests field.
func (o *LinkedHotelReservationType) SetSharedGuests(v []ResSharedGuestInfoType) {
	o.SharedGuests = v
}

// GetAdditionalGuestInfo returns the AdditionalGuestInfo field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAdditionalGuestInfo() ResGuestAdditionalInfoType {
	if o == nil || IsNil(o.AdditionalGuestInfo) {
		var ret ResGuestAdditionalInfoType
		return ret
	}
	return *o.AdditionalGuestInfo
}

// GetAdditionalGuestInfoOk returns a tuple with the AdditionalGuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAdditionalGuestInfoOk() (*ResGuestAdditionalInfoType, bool) {
	if o == nil || IsNil(o.AdditionalGuestInfo) {
		return nil, false
	}
	return o.AdditionalGuestInfo, true
}

// HasAdditionalGuestInfo returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAdditionalGuestInfo() bool {
	if o != nil && !IsNil(o.AdditionalGuestInfo) {
		return true
	}

	return false
}

// SetAdditionalGuestInfo gets a reference to the given ResGuestAdditionalInfoType and assigns it to the AdditionalGuestInfo field.
func (o *LinkedHotelReservationType) SetAdditionalGuestInfo(v ResGuestAdditionalInfoType) {
	o.AdditionalGuestInfo = &v
}

// GetReservationProfiles returns the ReservationProfiles field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationProfiles() HotelReservationTypeReservationProfiles {
	if o == nil || IsNil(o.ReservationProfiles) {
		var ret HotelReservationTypeReservationProfiles
		return ret
	}
	return *o.ReservationProfiles
}

// GetReservationProfilesOk returns a tuple with the ReservationProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationProfilesOk() (*HotelReservationTypeReservationProfiles, bool) {
	if o == nil || IsNil(o.ReservationProfiles) {
		return nil, false
	}
	return o.ReservationProfiles, true
}

// HasReservationProfiles returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationProfiles() bool {
	if o != nil && !IsNil(o.ReservationProfiles) {
		return true
	}

	return false
}

// SetReservationProfiles gets a reference to the given HotelReservationTypeReservationProfiles and assigns it to the ReservationProfiles field.
func (o *LinkedHotelReservationType) SetReservationProfiles(v HotelReservationTypeReservationProfiles) {
	o.ReservationProfiles = &v
}

// GetReservationCommunication returns the ReservationCommunication field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationCommunication() ResCommunicationType {
	if o == nil || IsNil(o.ReservationCommunication) {
		var ret ResCommunicationType
		return ret
	}
	return *o.ReservationCommunication
}

// GetReservationCommunicationOk returns a tuple with the ReservationCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationCommunicationOk() (*ResCommunicationType, bool) {
	if o == nil || IsNil(o.ReservationCommunication) {
		return nil, false
	}
	return o.ReservationCommunication, true
}

// HasReservationCommunication returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationCommunication() bool {
	if o != nil && !IsNil(o.ReservationCommunication) {
		return true
	}

	return false
}

// SetReservationCommunication gets a reference to the given ResCommunicationType and assigns it to the ReservationCommunication field.
func (o *LinkedHotelReservationType) SetReservationCommunication(v ResCommunicationType) {
	o.ReservationCommunication = &v
}

// GetReservationAwards returns the ReservationAwards field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationAwards() []AwardType {
	if o == nil || IsNil(o.ReservationAwards) {
		var ret []AwardType
		return ret
	}
	return o.ReservationAwards
}

// GetReservationAwardsOk returns a tuple with the ReservationAwards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationAwardsOk() ([]AwardType, bool) {
	if o == nil || IsNil(o.ReservationAwards) {
		return nil, false
	}
	return o.ReservationAwards, true
}

// HasReservationAwards returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationAwards() bool {
	if o != nil && !IsNil(o.ReservationAwards) {
		return true
	}

	return false
}

// SetReservationAwards gets a reference to the given []AwardType and assigns it to the ReservationAwards field.
func (o *LinkedHotelReservationType) SetReservationAwards(v []AwardType) {
	o.ReservationAwards = v
}

// GetTrackItItems returns the TrackItItems field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetTrackItItems() []TrackItItemType {
	if o == nil || IsNil(o.TrackItItems) {
		var ret []TrackItItemType
		return ret
	}
	return o.TrackItItems
}

// GetTrackItItemsOk returns a tuple with the TrackItItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetTrackItItemsOk() ([]TrackItItemType, bool) {
	if o == nil || IsNil(o.TrackItItems) {
		return nil, false
	}
	return o.TrackItItems, true
}

// HasTrackItItems returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasTrackItItems() bool {
	if o != nil && !IsNil(o.TrackItItems) {
		return true
	}

	return false
}

// SetTrackItItems gets a reference to the given []TrackItItemType and assigns it to the TrackItItems field.
func (o *LinkedHotelReservationType) SetTrackItItems(v []TrackItItemType) {
	o.TrackItItems = v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetShares() HotelReservationsType {
	if o == nil || IsNil(o.Shares) {
		var ret HotelReservationsType
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetSharesOk() (*HotelReservationsType, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given HotelReservationsType and assigns it to the Shares field.
func (o *LinkedHotelReservationType) SetShares(v HotelReservationsType) {
	o.Shares = &v
}

// GetLocators returns the Locators field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLocators() []ReservationLocatorType {
	if o == nil || IsNil(o.Locators) {
		var ret []ReservationLocatorType
		return ret
	}
	return o.Locators
}

// GetLocatorsOk returns a tuple with the Locators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLocatorsOk() ([]ReservationLocatorType, bool) {
	if o == nil || IsNil(o.Locators) {
		return nil, false
	}
	return o.Locators, true
}

// HasLocators returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLocators() bool {
	if o != nil && !IsNil(o.Locators) {
		return true
	}

	return false
}

// SetLocators gets a reference to the given []ReservationLocatorType and assigns it to the Locators field.
func (o *LinkedHotelReservationType) SetLocators(v []ReservationLocatorType) {
	o.Locators = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAttachments() []AttachmentType {
	if o == nil || IsNil(o.Attachments) {
		var ret []AttachmentType
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAttachmentsOk() ([]AttachmentType, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []AttachmentType and assigns it to the Attachments field.
func (o *LinkedHotelReservationType) SetAttachments(v []AttachmentType) {
	o.Attachments = v
}

// GetWebRegistrationCards returns the WebRegistrationCards field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetWebRegistrationCards() []AttachmentType {
	if o == nil || IsNil(o.WebRegistrationCards) {
		var ret []AttachmentType
		return ret
	}
	return o.WebRegistrationCards
}

// GetWebRegistrationCardsOk returns a tuple with the WebRegistrationCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetWebRegistrationCardsOk() ([]AttachmentType, bool) {
	if o == nil || IsNil(o.WebRegistrationCards) {
		return nil, false
	}
	return o.WebRegistrationCards, true
}

// HasWebRegistrationCards returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasWebRegistrationCards() bool {
	if o != nil && !IsNil(o.WebRegistrationCards) {
		return true
	}

	return false
}

// SetWebRegistrationCards gets a reference to the given []AttachmentType and assigns it to the WebRegistrationCards field.
func (o *LinkedHotelReservationType) SetWebRegistrationCards(v []AttachmentType) {
	o.WebRegistrationCards = v
}

// GetServiceRequests returns the ServiceRequests field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetServiceRequests() []ServiceRequest {
	if o == nil || IsNil(o.ServiceRequests) {
		var ret []ServiceRequest
		return ret
	}
	return o.ServiceRequests
}

// GetServiceRequestsOk returns a tuple with the ServiceRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetServiceRequestsOk() ([]ServiceRequest, bool) {
	if o == nil || IsNil(o.ServiceRequests) {
		return nil, false
	}
	return o.ServiceRequests, true
}

// HasServiceRequests returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasServiceRequests() bool {
	if o != nil && !IsNil(o.ServiceRequests) {
		return true
	}

	return false
}

// SetServiceRequests gets a reference to the given []ServiceRequest and assigns it to the ServiceRequests field.
func (o *LinkedHotelReservationType) SetServiceRequests(v []ServiceRequest) {
	o.ServiceRequests = v
}

// GetReservationActivities returns the ReservationActivities field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationActivities() []FetchActivityBookingsType {
	if o == nil || IsNil(o.ReservationActivities) {
		var ret []FetchActivityBookingsType
		return ret
	}
	return o.ReservationActivities
}

// GetReservationActivitiesOk returns a tuple with the ReservationActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationActivitiesOk() ([]FetchActivityBookingsType, bool) {
	if o == nil || IsNil(o.ReservationActivities) {
		return nil, false
	}
	return o.ReservationActivities, true
}

// HasReservationActivities returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationActivities() bool {
	if o != nil && !IsNil(o.ReservationActivities) {
		return true
	}

	return false
}

// SetReservationActivities gets a reference to the given []FetchActivityBookingsType and assigns it to the ReservationActivities field.
func (o *LinkedHotelReservationType) SetReservationActivities(v []FetchActivityBookingsType) {
	o.ReservationActivities = v
}

// GetScheduledActivities returns the ScheduledActivities field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetScheduledActivities() []FetchActivityBookingsType {
	if o == nil || IsNil(o.ScheduledActivities) {
		var ret []FetchActivityBookingsType
		return ret
	}
	return o.ScheduledActivities
}

// GetScheduledActivitiesOk returns a tuple with the ScheduledActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetScheduledActivitiesOk() ([]FetchActivityBookingsType, bool) {
	if o == nil || IsNil(o.ScheduledActivities) {
		return nil, false
	}
	return o.ScheduledActivities, true
}

// HasScheduledActivities returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasScheduledActivities() bool {
	if o != nil && !IsNil(o.ScheduledActivities) {
		return true
	}

	return false
}

// SetScheduledActivities gets a reference to the given []FetchActivityBookingsType and assigns it to the ScheduledActivities field.
func (o *LinkedHotelReservationType) SetScheduledActivities(v []FetchActivityBookingsType) {
	o.ScheduledActivities = v
}

// GetPrepaidCards returns the PrepaidCards field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPrepaidCards() []PrepaidCardType {
	if o == nil || IsNil(o.PrepaidCards) {
		var ret []PrepaidCardType
		return ret
	}
	return o.PrepaidCards
}

// GetPrepaidCardsOk returns a tuple with the PrepaidCards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPrepaidCardsOk() ([]PrepaidCardType, bool) {
	if o == nil || IsNil(o.PrepaidCards) {
		return nil, false
	}
	return o.PrepaidCards, true
}

// HasPrepaidCards returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPrepaidCards() bool {
	if o != nil && !IsNil(o.PrepaidCards) {
		return true
	}

	return false
}

// SetPrepaidCards gets a reference to the given []PrepaidCardType and assigns it to the PrepaidCards field.
func (o *LinkedHotelReservationType) SetPrepaidCards(v []PrepaidCardType) {
	o.PrepaidCards = v
}

// GetProfileAwards returns the ProfileAwards field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetProfileAwards() []AwardType {
	if o == nil || IsNil(o.ProfileAwards) {
		var ret []AwardType
		return ret
	}
	return o.ProfileAwards
}

// GetProfileAwardsOk returns a tuple with the ProfileAwards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetProfileAwardsOk() ([]AwardType, bool) {
	if o == nil || IsNil(o.ProfileAwards) {
		return nil, false
	}
	return o.ProfileAwards, true
}

// HasProfileAwards returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasProfileAwards() bool {
	if o != nil && !IsNil(o.ProfileAwards) {
		return true
	}

	return false
}

// SetProfileAwards gets a reference to the given []AwardType and assigns it to the ProfileAwards field.
func (o *LinkedHotelReservationType) SetProfileAwards(v []AwardType) {
	o.ProfileAwards = v
}

// GetReservationPackages returns the ReservationPackages field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationPackages() []ReservationPackageType {
	if o == nil || IsNil(o.ReservationPackages) {
		var ret []ReservationPackageType
		return ret
	}
	return o.ReservationPackages
}

// GetReservationPackagesOk returns a tuple with the ReservationPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationPackagesOk() ([]ReservationPackageType, bool) {
	if o == nil || IsNil(o.ReservationPackages) {
		return nil, false
	}
	return o.ReservationPackages, true
}

// HasReservationPackages returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationPackages() bool {
	if o != nil && !IsNil(o.ReservationPackages) {
		return true
	}

	return false
}

// SetReservationPackages gets a reference to the given []ReservationPackageType and assigns it to the ReservationPackages field.
func (o *LinkedHotelReservationType) SetReservationPackages(v []ReservationPackageType) {
	o.ReservationPackages = v
}

// GetInventoryItems returns the InventoryItems field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetInventoryItems() ResInventoryItemsType {
	if o == nil || IsNil(o.InventoryItems) {
		var ret ResInventoryItemsType
		return ret
	}
	return *o.InventoryItems
}

// GetInventoryItemsOk returns a tuple with the InventoryItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetInventoryItemsOk() (*ResInventoryItemsType, bool) {
	if o == nil || IsNil(o.InventoryItems) {
		return nil, false
	}
	return o.InventoryItems, true
}

// HasInventoryItems returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasInventoryItems() bool {
	if o != nil && !IsNil(o.InventoryItems) {
		return true
	}

	return false
}

// SetInventoryItems gets a reference to the given ResInventoryItemsType and assigns it to the InventoryItems field.
func (o *LinkedHotelReservationType) SetInventoryItems(v ResInventoryItemsType) {
	o.InventoryItems = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetComments() []CommentInfoType {
	if o == nil || IsNil(o.Comments) {
		var ret []CommentInfoType
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCommentsOk() ([]CommentInfoType, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []CommentInfoType and assigns it to the Comments field.
func (o *LinkedHotelReservationType) SetComments(v []CommentInfoType) {
	o.Comments = v
}

// GetGuestComments returns the GuestComments field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetGuestComments() []CommentInfoType {
	if o == nil || IsNil(o.GuestComments) {
		var ret []CommentInfoType
		return ret
	}
	return o.GuestComments
}

// GetGuestCommentsOk returns a tuple with the GuestComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetGuestCommentsOk() ([]CommentInfoType, bool) {
	if o == nil || IsNil(o.GuestComments) {
		return nil, false
	}
	return o.GuestComments, true
}

// HasGuestComments returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasGuestComments() bool {
	if o != nil && !IsNil(o.GuestComments) {
		return true
	}

	return false
}

// SetGuestComments gets a reference to the given []CommentInfoType and assigns it to the GuestComments field.
func (o *LinkedHotelReservationType) SetGuestComments(v []CommentInfoType) {
	o.GuestComments = v
}

// GetGuestMemberships returns the GuestMemberships field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetGuestMemberships() []MembershipType {
	if o == nil || IsNil(o.GuestMemberships) {
		var ret []MembershipType
		return ret
	}
	return o.GuestMemberships
}

// GetGuestMembershipsOk returns a tuple with the GuestMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetGuestMembershipsOk() ([]MembershipType, bool) {
	if o == nil || IsNil(o.GuestMemberships) {
		return nil, false
	}
	return o.GuestMemberships, true
}

// HasGuestMemberships returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasGuestMemberships() bool {
	if o != nil && !IsNil(o.GuestMemberships) {
		return true
	}

	return false
}

// SetGuestMemberships gets a reference to the given []MembershipType and assigns it to the GuestMemberships field.
func (o *LinkedHotelReservationType) SetGuestMemberships(v []MembershipType) {
	o.GuestMemberships = v
}

// GetPreferenceCollection returns the PreferenceCollection field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPreferenceCollection() []PreferenceTypeType {
	if o == nil || IsNil(o.PreferenceCollection) {
		var ret []PreferenceTypeType
		return ret
	}
	return o.PreferenceCollection
}

// GetPreferenceCollectionOk returns a tuple with the PreferenceCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPreferenceCollectionOk() ([]PreferenceTypeType, bool) {
	if o == nil || IsNil(o.PreferenceCollection) {
		return nil, false
	}
	return o.PreferenceCollection, true
}

// HasPreferenceCollection returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPreferenceCollection() bool {
	if o != nil && !IsNil(o.PreferenceCollection) {
		return true
	}

	return false
}

// SetPreferenceCollection gets a reference to the given []PreferenceTypeType and assigns it to the PreferenceCollection field.
func (o *LinkedHotelReservationType) SetPreferenceCollection(v []PreferenceTypeType) {
	o.PreferenceCollection = v
}

// GetReservationMemberships returns the ReservationMemberships field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationMemberships() []ReservationMembershipType {
	if o == nil || IsNil(o.ReservationMemberships) {
		var ret []ReservationMembershipType
		return ret
	}
	return o.ReservationMemberships
}

// GetReservationMembershipsOk returns a tuple with the ReservationMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationMembershipsOk() ([]ReservationMembershipType, bool) {
	if o == nil || IsNil(o.ReservationMemberships) {
		return nil, false
	}
	return o.ReservationMemberships, true
}

// HasReservationMemberships returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationMemberships() bool {
	if o != nil && !IsNil(o.ReservationMemberships) {
		return true
	}

	return false
}

// SetReservationMemberships gets a reference to the given []ReservationMembershipType and assigns it to the ReservationMemberships field.
func (o *LinkedHotelReservationType) SetReservationMemberships(v []ReservationMembershipType) {
	o.ReservationMemberships = v
}

// GetReservationPaymentMethods returns the ReservationPaymentMethods field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationPaymentMethods() []ReservationPaymentMethodType {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		var ret []ReservationPaymentMethodType
		return ret
	}
	return o.ReservationPaymentMethods
}

// GetReservationPaymentMethodsOk returns a tuple with the ReservationPaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationPaymentMethodsOk() ([]ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.ReservationPaymentMethods) {
		return nil, false
	}
	return o.ReservationPaymentMethods, true
}

// HasReservationPaymentMethods returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationPaymentMethods() bool {
	if o != nil && !IsNil(o.ReservationPaymentMethods) {
		return true
	}

	return false
}

// SetReservationPaymentMethods gets a reference to the given []ReservationPaymentMethodType and assigns it to the ReservationPaymentMethods field.
func (o *LinkedHotelReservationType) SetReservationPaymentMethods(v []ReservationPaymentMethodType) {
	o.ReservationPaymentMethods = v
}

// GetRoutingInstructions returns the RoutingInstructions field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetRoutingInstructions() []RoutingInfoType {
	if o == nil || IsNil(o.RoutingInstructions) {
		var ret []RoutingInfoType
		return ret
	}
	return o.RoutingInstructions
}

// GetRoutingInstructionsOk returns a tuple with the RoutingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetRoutingInstructionsOk() ([]RoutingInfoType, bool) {
	if o == nil || IsNil(o.RoutingInstructions) {
		return nil, false
	}
	return o.RoutingInstructions, true
}

// HasRoutingInstructions returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasRoutingInstructions() bool {
	if o != nil && !IsNil(o.RoutingInstructions) {
		return true
	}

	return false
}

// SetRoutingInstructions gets a reference to the given []RoutingInfoType and assigns it to the RoutingInstructions field.
func (o *LinkedHotelReservationType) SetRoutingInstructions(v []RoutingInfoType) {
	o.RoutingInstructions = v
}

// GetReservationPolicies returns the ReservationPolicies field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationPolicies() ReservationPoliciesType {
	if o == nil || IsNil(o.ReservationPolicies) {
		var ret ReservationPoliciesType
		return ret
	}
	return *o.ReservationPolicies
}

// GetReservationPoliciesOk returns a tuple with the ReservationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationPoliciesOk() (*ReservationPoliciesType, bool) {
	if o == nil || IsNil(o.ReservationPolicies) {
		return nil, false
	}
	return o.ReservationPolicies, true
}

// HasReservationPolicies returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationPolicies() bool {
	if o != nil && !IsNil(o.ReservationPolicies) {
		return true
	}

	return false
}

// SetReservationPolicies gets a reference to the given ReservationPoliciesType and assigns it to the ReservationPolicies field.
func (o *LinkedHotelReservationType) SetReservationPolicies(v ReservationPoliciesType) {
	o.ReservationPolicies = &v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCashiering() ResCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ResCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCashieringOk() (*ResCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ResCashieringType and assigns it to the Cashiering field.
func (o *LinkedHotelReservationType) SetCashiering(v ResCashieringType) {
	o.Cashiering = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetHousekeeping() ResHousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret ResHousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetHousekeepingOk() (*ResHousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given ResHousekeepingType and assigns it to the Housekeeping field.
func (o *LinkedHotelReservationType) SetHousekeeping(v ResHousekeepingType) {
	o.Housekeeping = &v
}

// GetLinkedReservation returns the LinkedReservation field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLinkedReservation() LinkedReservationsInfoType {
	if o == nil || IsNil(o.LinkedReservation) {
		var ret LinkedReservationsInfoType
		return ret
	}
	return *o.LinkedReservation
}

// GetLinkedReservationOk returns a tuple with the LinkedReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLinkedReservationOk() (*LinkedReservationsInfoType, bool) {
	if o == nil || IsNil(o.LinkedReservation) {
		return nil, false
	}
	return o.LinkedReservation, true
}

// HasLinkedReservation returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLinkedReservation() bool {
	if o != nil && !IsNil(o.LinkedReservation) {
		return true
	}

	return false
}

// SetLinkedReservation gets a reference to the given LinkedReservationsInfoType and assigns it to the LinkedReservation field.
func (o *LinkedHotelReservationType) SetLinkedReservation(v LinkedReservationsInfoType) {
	o.LinkedReservation = &v
}

// GetExtSystemSync returns the ExtSystemSync field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetExtSystemSync() bool {
	if o == nil || IsNil(o.ExtSystemSync) {
		var ret bool
		return ret
	}
	return *o.ExtSystemSync
}

// GetExtSystemSyncOk returns a tuple with the ExtSystemSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetExtSystemSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtSystemSync) {
		return nil, false
	}
	return o.ExtSystemSync, true
}

// HasExtSystemSync returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasExtSystemSync() bool {
	if o != nil && !IsNil(o.ExtSystemSync) {
		return true
	}

	return false
}

// SetExtSystemSync gets a reference to the given bool and assigns it to the ExtSystemSync field.
func (o *LinkedHotelReservationType) SetExtSystemSync(v bool) {
	o.ExtSystemSync = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *LinkedHotelReservationType) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

// GetReservationIndicators returns the ReservationIndicators field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationIndicators() []IndicatorType {
	if o == nil || IsNil(o.ReservationIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ReservationIndicators
}

// GetReservationIndicatorsOk returns a tuple with the ReservationIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ReservationIndicators) {
		return nil, false
	}
	return o.ReservationIndicators, true
}

// HasReservationIndicators returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationIndicators() bool {
	if o != nil && !IsNil(o.ReservationIndicators) {
		return true
	}

	return false
}

// SetReservationIndicators gets a reference to the given []IndicatorType and assigns it to the ReservationIndicators field.
func (o *LinkedHotelReservationType) SetReservationIndicators(v []IndicatorType) {
	o.ReservationIndicators = v
}

// GetWaitlist returns the Waitlist field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetWaitlist() WaitlistResType {
	if o == nil || IsNil(o.Waitlist) {
		var ret WaitlistResType
		return ret
	}
	return *o.Waitlist
}

// GetWaitlistOk returns a tuple with the Waitlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetWaitlistOk() (*WaitlistResType, bool) {
	if o == nil || IsNil(o.Waitlist) {
		return nil, false
	}
	return o.Waitlist, true
}

// HasWaitlist returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasWaitlist() bool {
	if o != nil && !IsNil(o.Waitlist) {
		return true
	}

	return false
}

// SetWaitlist gets a reference to the given WaitlistResType and assigns it to the Waitlist field.
func (o *LinkedHotelReservationType) SetWaitlist(v WaitlistResType) {
	o.Waitlist = &v
}

// GetCancellation returns the Cancellation field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCancellation() HotelReservationTypeCancellation {
	if o == nil || IsNil(o.Cancellation) {
		var ret HotelReservationTypeCancellation
		return ret
	}
	return *o.Cancellation
}

// GetCancellationOk returns a tuple with the Cancellation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCancellationOk() (*HotelReservationTypeCancellation, bool) {
	if o == nil || IsNil(o.Cancellation) {
		return nil, false
	}
	return o.Cancellation, true
}

// HasCancellation returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCancellation() bool {
	if o != nil && !IsNil(o.Cancellation) {
		return true
	}

	return false
}

// SetCancellation gets a reference to the given HotelReservationTypeCancellation and assigns it to the Cancellation field.
func (o *LinkedHotelReservationType) SetCancellation(v HotelReservationTypeCancellation) {
	o.Cancellation = &v
}

// GetCatering returns the Catering field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCatering() CateringResInfoType {
	if o == nil || IsNil(o.Catering) {
		var ret CateringResInfoType
		return ret
	}
	return *o.Catering
}

// GetCateringOk returns a tuple with the Catering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCateringOk() (*CateringResInfoType, bool) {
	if o == nil || IsNil(o.Catering) {
		return nil, false
	}
	return o.Catering, true
}

// HasCatering returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCatering() bool {
	if o != nil && !IsNil(o.Catering) {
		return true
	}

	return false
}

// SetCatering gets a reference to the given CateringResInfoType and assigns it to the Catering field.
func (o *LinkedHotelReservationType) SetCatering(v CateringResInfoType) {
	o.Catering = &v
}

// GetStatisticalClassification returns the StatisticalClassification field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetStatisticalClassification() ResStatClassificationType {
	if o == nil || IsNil(o.StatisticalClassification) {
		var ret ResStatClassificationType
		return ret
	}
	return *o.StatisticalClassification
}

// GetStatisticalClassificationOk returns a tuple with the StatisticalClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetStatisticalClassificationOk() (*ResStatClassificationType, bool) {
	if o == nil || IsNil(o.StatisticalClassification) {
		return nil, false
	}
	return o.StatisticalClassification, true
}

// HasStatisticalClassification returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasStatisticalClassification() bool {
	if o != nil && !IsNil(o.StatisticalClassification) {
		return true
	}

	return false
}

// SetStatisticalClassification gets a reference to the given ResStatClassificationType and assigns it to the StatisticalClassification field.
func (o *LinkedHotelReservationType) SetStatisticalClassification(v ResStatClassificationType) {
	o.StatisticalClassification = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAlerts() []AlertType {
	if o == nil || IsNil(o.Alerts) {
		var ret []AlertType
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAlertsOk() ([]AlertType, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []AlertType and assigns it to the Alerts field.
func (o *LinkedHotelReservationType) SetAlerts(v []AlertType) {
	o.Alerts = v
}

// GetTraces returns the Traces field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetTraces() []HotelReservationTraceType {
	if o == nil || IsNil(o.Traces) {
		var ret []HotelReservationTraceType
		return ret
	}
	return o.Traces
}

// GetTracesOk returns a tuple with the Traces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetTracesOk() ([]HotelReservationTraceType, bool) {
	if o == nil || IsNil(o.Traces) {
		return nil, false
	}
	return o.Traces, true
}

// HasTraces returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasTraces() bool {
	if o != nil && !IsNil(o.Traces) {
		return true
	}

	return false
}

// SetTraces gets a reference to the given []HotelReservationTraceType and assigns it to the Traces field.
func (o *LinkedHotelReservationType) SetTraces(v []HotelReservationTraceType) {
	o.Traces = v
}

// GetConfirmationLetters returns the ConfirmationLetters field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetConfirmationLetters() []ConfirmationType {
	if o == nil || IsNil(o.ConfirmationLetters) {
		var ret []ConfirmationType
		return ret
	}
	return o.ConfirmationLetters
}

// GetConfirmationLettersOk returns a tuple with the ConfirmationLetters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetConfirmationLettersOk() ([]ConfirmationType, bool) {
	if o == nil || IsNil(o.ConfirmationLetters) {
		return nil, false
	}
	return o.ConfirmationLetters, true
}

// HasConfirmationLetters returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasConfirmationLetters() bool {
	if o != nil && !IsNil(o.ConfirmationLetters) {
		return true
	}

	return false
}

// SetConfirmationLetters gets a reference to the given []ConfirmationType and assigns it to the ConfirmationLetters field.
func (o *LinkedHotelReservationType) SetConfirmationLetters(v []ConfirmationType) {
	o.ConfirmationLetters = v
}

// GetCallHistory returns the CallHistory field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCallHistory() []CallType {
	if o == nil || IsNil(o.CallHistory) {
		var ret []CallType
		return ret
	}
	return o.CallHistory
}

// GetCallHistoryOk returns a tuple with the CallHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCallHistoryOk() ([]CallType, bool) {
	if o == nil || IsNil(o.CallHistory) {
		return nil, false
	}
	return o.CallHistory, true
}

// HasCallHistory returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCallHistory() bool {
	if o != nil && !IsNil(o.CallHistory) {
		return true
	}

	return false
}

// SetCallHistory gets a reference to the given []CallType and assigns it to the CallHistory field.
func (o *LinkedHotelReservationType) SetCallHistory(v []CallType) {
	o.CallHistory = v
}

// GetFixedCharges returns the FixedCharges field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetFixedCharges() []FixedChargeType {
	if o == nil || IsNil(o.FixedCharges) {
		var ret []FixedChargeType
		return ret
	}
	return o.FixedCharges
}

// GetFixedChargesOk returns a tuple with the FixedCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetFixedChargesOk() ([]FixedChargeType, bool) {
	if o == nil || IsNil(o.FixedCharges) {
		return nil, false
	}
	return o.FixedCharges, true
}

// HasFixedCharges returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasFixedCharges() bool {
	if o != nil && !IsNil(o.FixedCharges) {
		return true
	}

	return false
}

// SetFixedCharges gets a reference to the given []FixedChargeType and assigns it to the FixedCharges field.
func (o *LinkedHotelReservationType) SetFixedCharges(v []FixedChargeType) {
	o.FixedCharges = v
}

// GetGuestMessages returns the GuestMessages field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetGuestMessages() []GuestMessageType {
	if o == nil || IsNil(o.GuestMessages) {
		var ret []GuestMessageType
		return ret
	}
	return o.GuestMessages
}

// GetGuestMessagesOk returns a tuple with the GuestMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetGuestMessagesOk() ([]GuestMessageType, bool) {
	if o == nil || IsNil(o.GuestMessages) {
		return nil, false
	}
	return o.GuestMessages, true
}

// HasGuestMessages returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasGuestMessages() bool {
	if o != nil && !IsNil(o.GuestMessages) {
		return true
	}

	return false
}

// SetGuestMessages gets a reference to the given []GuestMessageType and assigns it to the GuestMessages field.
func (o *LinkedHotelReservationType) SetGuestMessages(v []GuestMessageType) {
	o.GuestMessages = v
}

// GetLockHandle returns the LockHandle field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLockHandle() float32 {
	if o == nil || IsNil(o.LockHandle) {
		var ret float32
		return ret
	}
	return *o.LockHandle
}

// GetLockHandleOk returns a tuple with the LockHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLockHandleOk() (*float32, bool) {
	if o == nil || IsNil(o.LockHandle) {
		return nil, false
	}
	return o.LockHandle, true
}

// HasLockHandle returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLockHandle() bool {
	if o != nil && !IsNil(o.LockHandle) {
		return true
	}

	return false
}

// SetLockHandle gets a reference to the given float32 and assigns it to the LockHandle field.
func (o *LinkedHotelReservationType) SetLockHandle(v float32) {
	o.LockHandle = &v
}

// GetOverrideInstructions returns the OverrideInstructions field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOverrideInstructions() []OverrideInstructionType {
	if o == nil || IsNil(o.OverrideInstructions) {
		var ret []OverrideInstructionType
		return ret
	}
	return o.OverrideInstructions
}

// GetOverrideInstructionsOk returns a tuple with the OverrideInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOverrideInstructionsOk() ([]OverrideInstructionType, bool) {
	if o == nil || IsNil(o.OverrideInstructions) {
		return nil, false
	}
	return o.OverrideInstructions, true
}

// HasOverrideInstructions returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOverrideInstructions() bool {
	if o != nil && !IsNil(o.OverrideInstructions) {
		return true
	}

	return false
}

// SetOverrideInstructions gets a reference to the given []OverrideInstructionType and assigns it to the OverrideInstructions field.
func (o *LinkedHotelReservationType) SetOverrideInstructions(v []OverrideInstructionType) {
	o.OverrideInstructions = v
}

// GetQueue returns the Queue field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetQueue() ReservationQueueInformationType {
	if o == nil || IsNil(o.Queue) {
		var ret ReservationQueueInformationType
		return ret
	}
	return *o.Queue
}

// GetQueueOk returns a tuple with the Queue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetQueueOk() (*ReservationQueueInformationType, bool) {
	if o == nil || IsNil(o.Queue) {
		return nil, false
	}
	return o.Queue, true
}

// HasQueue returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasQueue() bool {
	if o != nil && !IsNil(o.Queue) {
		return true
	}

	return false
}

// SetQueue gets a reference to the given ReservationQueueInformationType and assigns it to the Queue field.
func (o *LinkedHotelReservationType) SetQueue(v ReservationQueueInformationType) {
	o.Queue = &v
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAllowedActions() []ReservationAllowedActionType {
	if o == nil || IsNil(o.AllowedActions) {
		var ret []ReservationAllowedActionType
		return ret
	}
	return o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAllowedActionsOk() ([]ReservationAllowedActionType, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given []ReservationAllowedActionType and assigns it to the AllowedActions field.
func (o *LinkedHotelReservationType) SetAllowedActions(v []ReservationAllowedActionType) {
	o.AllowedActions = v
}

// GetECoupons returns the ECoupons field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetECoupons() []ECouponType {
	if o == nil || IsNil(o.ECoupons) {
		var ret []ECouponType
		return ret
	}
	return o.ECoupons
}

// GetECouponsOk returns a tuple with the ECoupons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetECouponsOk() ([]ECouponType, bool) {
	if o == nil || IsNil(o.ECoupons) {
		return nil, false
	}
	return o.ECoupons, true
}

// HasECoupons returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasECoupons() bool {
	if o != nil && !IsNil(o.ECoupons) {
		return true
	}

	return false
}

// SetECoupons gets a reference to the given []ECouponType and assigns it to the ECoupons field.
func (o *LinkedHotelReservationType) SetECoupons(v []ECouponType) {
	o.ECoupons = v
}

// GetTransactionDiversions returns the TransactionDiversions field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetTransactionDiversions() HotelReservationTypeTransactionDiversions {
	if o == nil || IsNil(o.TransactionDiversions) {
		var ret HotelReservationTypeTransactionDiversions
		return ret
	}
	return *o.TransactionDiversions
}

// GetTransactionDiversionsOk returns a tuple with the TransactionDiversions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetTransactionDiversionsOk() (*HotelReservationTypeTransactionDiversions, bool) {
	if o == nil || IsNil(o.TransactionDiversions) {
		return nil, false
	}
	return o.TransactionDiversions, true
}

// HasTransactionDiversions returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasTransactionDiversions() bool {
	if o != nil && !IsNil(o.TransactionDiversions) {
		return true
	}

	return false
}

// SetTransactionDiversions gets a reference to the given HotelReservationTypeTransactionDiversions and assigns it to the TransactionDiversions field.
func (o *LinkedHotelReservationType) SetTransactionDiversions(v HotelReservationTypeTransactionDiversions) {
	o.TransactionDiversions = &v
}

// GetAdvanceCheckIn returns the AdvanceCheckIn field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAdvanceCheckIn() AdvanceCheckInType {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		var ret AdvanceCheckInType
		return ret
	}
	return *o.AdvanceCheckIn
}

// GetAdvanceCheckInOk returns a tuple with the AdvanceCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAdvanceCheckInOk() (*AdvanceCheckInType, bool) {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		return nil, false
	}
	return o.AdvanceCheckIn, true
}

// HasAdvanceCheckIn returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAdvanceCheckIn() bool {
	if o != nil && !IsNil(o.AdvanceCheckIn) {
		return true
	}

	return false
}

// SetAdvanceCheckIn gets a reference to the given AdvanceCheckInType and assigns it to the AdvanceCheckIn field.
func (o *LinkedHotelReservationType) SetAdvanceCheckIn(v AdvanceCheckInType) {
	o.AdvanceCheckIn = &v
}

// GetTickets returns the Tickets field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetTickets() []TicketType {
	if o == nil || IsNil(o.Tickets) {
		var ret []TicketType
		return ret
	}
	return o.Tickets
}

// GetTicketsOk returns a tuple with the Tickets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetTicketsOk() ([]TicketType, bool) {
	if o == nil || IsNil(o.Tickets) {
		return nil, false
	}
	return o.Tickets, true
}

// HasTickets returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasTickets() bool {
	if o != nil && !IsNil(o.Tickets) {
		return true
	}

	return false
}

// SetTickets gets a reference to the given []TicketType and assigns it to the Tickets field.
func (o *LinkedHotelReservationType) SetTickets(v []TicketType) {
	o.Tickets = v
}

// GetAccessRestrictionMessage returns the AccessRestrictionMessage field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAccessRestrictionMessage() string {
	if o == nil || IsNil(o.AccessRestrictionMessage) {
		var ret string
		return ret
	}
	return *o.AccessRestrictionMessage
}

// GetAccessRestrictionMessageOk returns a tuple with the AccessRestrictionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAccessRestrictionMessageOk() (*string, bool) {
	if o == nil || IsNil(o.AccessRestrictionMessage) {
		return nil, false
	}
	return o.AccessRestrictionMessage, true
}

// HasAccessRestrictionMessage returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAccessRestrictionMessage() bool {
	if o != nil && !IsNil(o.AccessRestrictionMessage) {
		return true
	}

	return false
}

// SetAccessRestrictionMessage gets a reference to the given string and assigns it to the AccessRestrictionMessage field.
func (o *LinkedHotelReservationType) SetAccessRestrictionMessage(v string) {
	o.AccessRestrictionMessage = &v
}

// GetECertificates returns the ECertificates field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetECertificates() []ReservationECertificateType {
	if o == nil || IsNil(o.ECertificates) {
		var ret []ReservationECertificateType
		return ret
	}
	return o.ECertificates
}

// GetECertificatesOk returns a tuple with the ECertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetECertificatesOk() ([]ReservationECertificateType, bool) {
	if o == nil || IsNil(o.ECertificates) {
		return nil, false
	}
	return o.ECertificates, true
}

// HasECertificates returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasECertificates() bool {
	if o != nil && !IsNil(o.ECertificates) {
		return true
	}

	return false
}

// SetECertificates gets a reference to the given []ReservationECertificateType and assigns it to the ECertificates field.
func (o *LinkedHotelReservationType) SetECertificates(v []ReservationECertificateType) {
	o.ECertificates = v
}

// GetCustomNameValueDetail returns the CustomNameValueDetail field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCustomNameValueDetail() NameValueDetailType {
	if o == nil || IsNil(o.CustomNameValueDetail) {
		var ret NameValueDetailType
		return ret
	}
	return *o.CustomNameValueDetail
}

// GetCustomNameValueDetailOk returns a tuple with the CustomNameValueDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCustomNameValueDetailOk() (*NameValueDetailType, bool) {
	if o == nil || IsNil(o.CustomNameValueDetail) {
		return nil, false
	}
	return o.CustomNameValueDetail, true
}

// HasCustomNameValueDetail returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCustomNameValueDetail() bool {
	if o != nil && !IsNil(o.CustomNameValueDetail) {
		return true
	}

	return false
}

// SetCustomNameValueDetail gets a reference to the given NameValueDetailType and assigns it to the CustomNameValueDetail field.
func (o *LinkedHotelReservationType) SetCustomNameValueDetail(v NameValueDetailType) {
	o.CustomNameValueDetail = &v
}

// GetCustomChargeExemptionDetails returns the CustomChargeExemptionDetails field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCustomChargeExemptionDetails() []CustomChargeExemptionType {
	if o == nil || IsNil(o.CustomChargeExemptionDetails) {
		var ret []CustomChargeExemptionType
		return ret
	}
	return o.CustomChargeExemptionDetails
}

// GetCustomChargeExemptionDetailsOk returns a tuple with the CustomChargeExemptionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCustomChargeExemptionDetailsOk() ([]CustomChargeExemptionType, bool) {
	if o == nil || IsNil(o.CustomChargeExemptionDetails) {
		return nil, false
	}
	return o.CustomChargeExemptionDetails, true
}

// HasCustomChargeExemptionDetails returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCustomChargeExemptionDetails() bool {
	if o != nil && !IsNil(o.CustomChargeExemptionDetails) {
		return true
	}

	return false
}

// SetCustomChargeExemptionDetails gets a reference to the given []CustomChargeExemptionType and assigns it to the CustomChargeExemptionDetails field.
func (o *LinkedHotelReservationType) SetCustomChargeExemptionDetails(v []CustomChargeExemptionType) {
	o.CustomChargeExemptionDetails = v
}

// GetFolios returns the Folios field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetFolios() []FolioShortInfoType {
	if o == nil || IsNil(o.Folios) {
		var ret []FolioShortInfoType
		return ret
	}
	return o.Folios
}

// GetFoliosOk returns a tuple with the Folios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetFoliosOk() ([]FolioShortInfoType, bool) {
	if o == nil || IsNil(o.Folios) {
		return nil, false
	}
	return o.Folios, true
}

// HasFolios returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasFolios() bool {
	if o != nil && !IsNil(o.Folios) {
		return true
	}

	return false
}

// SetFolios gets a reference to the given []FolioShortInfoType and assigns it to the Folios field.
func (o *LinkedHotelReservationType) SetFolios(v []FolioShortInfoType) {
	o.Folios = v
}

// GetAutoBorrowFromHouse returns the AutoBorrowFromHouse field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAutoBorrowFromHouse() bool {
	if o == nil || IsNil(o.AutoBorrowFromHouse) {
		var ret bool
		return ret
	}
	return *o.AutoBorrowFromHouse
}

// GetAutoBorrowFromHouseOk returns a tuple with the AutoBorrowFromHouse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAutoBorrowFromHouseOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoBorrowFromHouse) {
		return nil, false
	}
	return o.AutoBorrowFromHouse, true
}

// HasAutoBorrowFromHouse returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAutoBorrowFromHouse() bool {
	if o != nil && !IsNil(o.AutoBorrowFromHouse) {
		return true
	}

	return false
}

// SetAutoBorrowFromHouse gets a reference to the given bool and assigns it to the AutoBorrowFromHouse field.
func (o *LinkedHotelReservationType) SetAutoBorrowFromHouse(v bool) {
	o.AutoBorrowFromHouse = &v
}

// GetOverrideExternalChecks returns the OverrideExternalChecks field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOverrideExternalChecks() bool {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		var ret bool
		return ret
	}
	return *o.OverrideExternalChecks
}

// GetOverrideExternalChecksOk returns a tuple with the OverrideExternalChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOverrideExternalChecksOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		return nil, false
	}
	return o.OverrideExternalChecks, true
}

// HasOverrideExternalChecks returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOverrideExternalChecks() bool {
	if o != nil && !IsNil(o.OverrideExternalChecks) {
		return true
	}

	return false
}

// SetOverrideExternalChecks gets a reference to the given bool and assigns it to the OverrideExternalChecks field.
func (o *LinkedHotelReservationType) SetOverrideExternalChecks(v bool) {
	o.OverrideExternalChecks = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *LinkedHotelReservationType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRoomStayReservation returns the RoomStayReservation field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetRoomStayReservation() bool {
	if o == nil || IsNil(o.RoomStayReservation) {
		var ret bool
		return ret
	}
	return *o.RoomStayReservation
}

// GetRoomStayReservationOk returns a tuple with the RoomStayReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetRoomStayReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomStayReservation) {
		return nil, false
	}
	return o.RoomStayReservation, true
}

// HasRoomStayReservation returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasRoomStayReservation() bool {
	if o != nil && !IsNil(o.RoomStayReservation) {
		return true
	}

	return false
}

// SetRoomStayReservation gets a reference to the given bool and assigns it to the RoomStayReservation field.
func (o *LinkedHotelReservationType) SetRoomStayReservation(v bool) {
	o.RoomStayReservation = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *LinkedHotelReservationType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetComputedReservationStatus returns the ComputedReservationStatus field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetComputedReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ComputedReservationStatus
}

// GetComputedReservationStatusOk returns a tuple with the ComputedReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetComputedReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		return nil, false
	}
	return o.ComputedReservationStatus, true
}

// HasComputedReservationStatus returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasComputedReservationStatus() bool {
	if o != nil && !IsNil(o.ComputedReservationStatus) {
		return true
	}

	return false
}

// SetComputedReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ComputedReservationStatus field.
func (o *LinkedHotelReservationType) SetComputedReservationStatus(v PMSResStatusType) {
	o.ComputedReservationStatus = &v
}

// GetWalkIn returns the WalkIn field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetWalkIn() bool {
	if o == nil || IsNil(o.WalkIn) {
		var ret bool
		return ret
	}
	return *o.WalkIn
}

// GetWalkInOk returns a tuple with the WalkIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetWalkInOk() (*bool, bool) {
	if o == nil || IsNil(o.WalkIn) {
		return nil, false
	}
	return o.WalkIn, true
}

// HasWalkIn returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasWalkIn() bool {
	if o != nil && !IsNil(o.WalkIn) {
		return true
	}

	return false
}

// SetWalkIn gets a reference to the given bool and assigns it to the WalkIn field.
func (o *LinkedHotelReservationType) SetWalkIn(v bool) {
	o.WalkIn = &v
}

// GetPrintRate returns the PrintRate field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPrintRate() bool {
	if o == nil || IsNil(o.PrintRate) {
		var ret bool
		return ret
	}
	return *o.PrintRate
}

// GetPrintRateOk returns a tuple with the PrintRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPrintRateOk() (*bool, bool) {
	if o == nil || IsNil(o.PrintRate) {
		return nil, false
	}
	return o.PrintRate, true
}

// HasPrintRate returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPrintRate() bool {
	if o != nil && !IsNil(o.PrintRate) {
		return true
	}

	return false
}

// SetPrintRate gets a reference to the given bool and assigns it to the PrintRate field.
func (o *LinkedHotelReservationType) SetPrintRate(v bool) {
	o.PrintRate = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *LinkedHotelReservationType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *LinkedHotelReservationType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *LinkedHotelReservationType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *LinkedHotelReservationType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *LinkedHotelReservationType) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

// GetCreateBusinessDate returns the CreateBusinessDate field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCreateBusinessDate() string {
	if o == nil || IsNil(o.CreateBusinessDate) {
		var ret string
		return ret
	}
	return *o.CreateBusinessDate
}

// GetCreateBusinessDateOk returns a tuple with the CreateBusinessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCreateBusinessDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreateBusinessDate) {
		return nil, false
	}
	return o.CreateBusinessDate, true
}

// HasCreateBusinessDate returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCreateBusinessDate() bool {
	if o != nil && !IsNil(o.CreateBusinessDate) {
		return true
	}

	return false
}

// SetCreateBusinessDate gets a reference to the given string and assigns it to the CreateBusinessDate field.
func (o *LinkedHotelReservationType) SetCreateBusinessDate(v string) {
	o.CreateBusinessDate = &v
}

// GetReinstateDate returns the ReinstateDate field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetReinstateDate() string {
	if o == nil || IsNil(o.ReinstateDate) {
		var ret string
		return ret
	}
	return *o.ReinstateDate
}

// GetReinstateDateOk returns a tuple with the ReinstateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetReinstateDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReinstateDate) {
		return nil, false
	}
	return o.ReinstateDate, true
}

// HasReinstateDate returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasReinstateDate() bool {
	if o != nil && !IsNil(o.ReinstateDate) {
		return true
	}

	return false
}

// SetReinstateDate gets a reference to the given string and assigns it to the ReinstateDate field.
func (o *LinkedHotelReservationType) SetReinstateDate(v string) {
	o.ReinstateDate = &v
}

// GetParty returns the Party field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetParty() string {
	if o == nil || IsNil(o.Party) {
		var ret string
		return ret
	}
	return *o.Party
}

// GetPartyOk returns a tuple with the Party field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPartyOk() (*string, bool) {
	if o == nil || IsNil(o.Party) {
		return nil, false
	}
	return o.Party, true
}

// HasParty returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasParty() bool {
	if o != nil && !IsNil(o.Party) {
		return true
	}

	return false
}

// SetParty gets a reference to the given string and assigns it to the Party field.
func (o *LinkedHotelReservationType) SetParty(v string) {
	o.Party = &v
}

// GetPrimaryEnrollmentResort returns the PrimaryEnrollmentResort field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPrimaryEnrollmentResort() string {
	if o == nil || IsNil(o.PrimaryEnrollmentResort) {
		var ret string
		return ret
	}
	return *o.PrimaryEnrollmentResort
}

// GetPrimaryEnrollmentResortOk returns a tuple with the PrimaryEnrollmentResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPrimaryEnrollmentResortOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEnrollmentResort) {
		return nil, false
	}
	return o.PrimaryEnrollmentResort, true
}

// HasPrimaryEnrollmentResort returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPrimaryEnrollmentResort() bool {
	if o != nil && !IsNil(o.PrimaryEnrollmentResort) {
		return true
	}

	return false
}

// SetPrimaryEnrollmentResort gets a reference to the given string and assigns it to the PrimaryEnrollmentResort field.
func (o *LinkedHotelReservationType) SetPrimaryEnrollmentResort(v string) {
	o.PrimaryEnrollmentResort = &v
}

// GetPrimaryEnrollmentChain returns the PrimaryEnrollmentChain field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPrimaryEnrollmentChain() string {
	if o == nil || IsNil(o.PrimaryEnrollmentChain) {
		var ret string
		return ret
	}
	return *o.PrimaryEnrollmentChain
}

// GetPrimaryEnrollmentChainOk returns a tuple with the PrimaryEnrollmentChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPrimaryEnrollmentChainOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEnrollmentChain) {
		return nil, false
	}
	return o.PrimaryEnrollmentChain, true
}

// HasPrimaryEnrollmentChain returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPrimaryEnrollmentChain() bool {
	if o != nil && !IsNil(o.PrimaryEnrollmentChain) {
		return true
	}

	return false
}

// SetPrimaryEnrollmentChain gets a reference to the given string and assigns it to the PrimaryEnrollmentChain field.
func (o *LinkedHotelReservationType) SetPrimaryEnrollmentChain(v string) {
	o.PrimaryEnrollmentChain = &v
}

// GetCustomReference returns the CustomReference field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetCustomReference() string {
	if o == nil || IsNil(o.CustomReference) {
		var ret string
		return ret
	}
	return *o.CustomReference
}

// GetCustomReferenceOk returns a tuple with the CustomReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetCustomReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomReference) {
		return nil, false
	}
	return o.CustomReference, true
}

// HasCustomReference returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasCustomReference() bool {
	if o != nil && !IsNil(o.CustomReference) {
		return true
	}

	return false
}

// SetCustomReference gets a reference to the given string and assigns it to the CustomReference field.
func (o *LinkedHotelReservationType) SetCustomReference(v string) {
	o.CustomReference = &v
}

// GetDisplayColor returns the DisplayColor field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetDisplayColor() string {
	if o == nil || IsNil(o.DisplayColor) {
		var ret string
		return ret
	}
	return *o.DisplayColor
}

// GetDisplayColorOk returns a tuple with the DisplayColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetDisplayColorOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayColor) {
		return nil, false
	}
	return o.DisplayColor, true
}

// HasDisplayColor returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasDisplayColor() bool {
	if o != nil && !IsNil(o.DisplayColor) {
		return true
	}

	return false
}

// SetDisplayColor gets a reference to the given string and assigns it to the DisplayColor field.
func (o *LinkedHotelReservationType) SetDisplayColor(v string) {
	o.DisplayColor = &v
}

// GetMarkAsRecentlyAccessed returns the MarkAsRecentlyAccessed field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetMarkAsRecentlyAccessed() bool {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		var ret bool
		return ret
	}
	return *o.MarkAsRecentlyAccessed
}

// GetMarkAsRecentlyAccessedOk returns a tuple with the MarkAsRecentlyAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetMarkAsRecentlyAccessedOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		return nil, false
	}
	return o.MarkAsRecentlyAccessed, true
}

// HasMarkAsRecentlyAccessed returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasMarkAsRecentlyAccessed() bool {
	if o != nil && !IsNil(o.MarkAsRecentlyAccessed) {
		return true
	}

	return false
}

// SetMarkAsRecentlyAccessed gets a reference to the given bool and assigns it to the MarkAsRecentlyAccessed field.
func (o *LinkedHotelReservationType) SetMarkAsRecentlyAccessed(v bool) {
	o.MarkAsRecentlyAccessed = &v
}

// GetOverrideInventoryCheck returns the OverrideInventoryCheck field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOverrideInventoryCheck() bool {
	if o == nil || IsNil(o.OverrideInventoryCheck) {
		var ret bool
		return ret
	}
	return *o.OverrideInventoryCheck
}

// GetOverrideInventoryCheckOk returns a tuple with the OverrideInventoryCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOverrideInventoryCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideInventoryCheck) {
		return nil, false
	}
	return o.OverrideInventoryCheck, true
}

// HasOverrideInventoryCheck returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOverrideInventoryCheck() bool {
	if o != nil && !IsNil(o.OverrideInventoryCheck) {
		return true
	}

	return false
}

// SetOverrideInventoryCheck gets a reference to the given bool and assigns it to the OverrideInventoryCheck field.
func (o *LinkedHotelReservationType) SetOverrideInventoryCheck(v bool) {
	o.OverrideInventoryCheck = &v
}

// GetAccessRestriction returns the AccessRestriction field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAccessRestriction() ResAccessRestrictionType {
	if o == nil || IsNil(o.AccessRestriction) {
		var ret ResAccessRestrictionType
		return ret
	}
	return *o.AccessRestriction
}

// GetAccessRestrictionOk returns a tuple with the AccessRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAccessRestrictionOk() (*ResAccessRestrictionType, bool) {
	if o == nil || IsNil(o.AccessRestriction) {
		return nil, false
	}
	return o.AccessRestriction, true
}

// HasAccessRestriction returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAccessRestriction() bool {
	if o != nil && !IsNil(o.AccessRestriction) {
		return true
	}

	return false
}

// SetAccessRestriction gets a reference to the given ResAccessRestrictionType and assigns it to the AccessRestriction field.
func (o *LinkedHotelReservationType) SetAccessRestriction(v ResAccessRestrictionType) {
	o.AccessRestriction = &v
}

// GetPreRegistered returns the PreRegistered field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetPreRegistered() bool {
	if o == nil || IsNil(o.PreRegistered) {
		var ret bool
		return ret
	}
	return *o.PreRegistered
}

// GetPreRegisteredOk returns a tuple with the PreRegistered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetPreRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.PreRegistered) {
		return nil, false
	}
	return o.PreRegistered, true
}

// HasPreRegistered returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasPreRegistered() bool {
	if o != nil && !IsNil(o.PreRegistered) {
		return true
	}

	return false
}

// SetPreRegistered gets a reference to the given bool and assigns it to the PreRegistered field.
func (o *LinkedHotelReservationType) SetPreRegistered(v bool) {
	o.PreRegistered = &v
}

// GetUpgradeEligible returns the UpgradeEligible field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetUpgradeEligible() bool {
	if o == nil || IsNil(o.UpgradeEligible) {
		var ret bool
		return ret
	}
	return *o.UpgradeEligible
}

// GetUpgradeEligibleOk returns a tuple with the UpgradeEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetUpgradeEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.UpgradeEligible) {
		return nil, false
	}
	return o.UpgradeEligible, true
}

// HasUpgradeEligible returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasUpgradeEligible() bool {
	if o != nil && !IsNil(o.UpgradeEligible) {
		return true
	}

	return false
}

// SetUpgradeEligible gets a reference to the given bool and assigns it to the UpgradeEligible field.
func (o *LinkedHotelReservationType) SetUpgradeEligible(v bool) {
	o.UpgradeEligible = &v
}

// GetOverrideBlockRestriction returns the OverrideBlockRestriction field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOverrideBlockRestriction() bool {
	if o == nil || IsNil(o.OverrideBlockRestriction) {
		var ret bool
		return ret
	}
	return *o.OverrideBlockRestriction
}

// GetOverrideBlockRestrictionOk returns a tuple with the OverrideBlockRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOverrideBlockRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideBlockRestriction) {
		return nil, false
	}
	return o.OverrideBlockRestriction, true
}

// HasOverrideBlockRestriction returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOverrideBlockRestriction() bool {
	if o != nil && !IsNil(o.OverrideBlockRestriction) {
		return true
	}

	return false
}

// SetOverrideBlockRestriction gets a reference to the given bool and assigns it to the OverrideBlockRestriction field.
func (o *LinkedHotelReservationType) SetOverrideBlockRestriction(v bool) {
	o.OverrideBlockRestriction = &v
}

// GetAllowAutoCheckin returns the AllowAutoCheckin field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAllowAutoCheckin() bool {
	if o == nil || IsNil(o.AllowAutoCheckin) {
		var ret bool
		return ret
	}
	return *o.AllowAutoCheckin
}

// GetAllowAutoCheckinOk returns a tuple with the AllowAutoCheckin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAllowAutoCheckinOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAutoCheckin) {
		return nil, false
	}
	return o.AllowAutoCheckin, true
}

// HasAllowAutoCheckin returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAllowAutoCheckin() bool {
	if o != nil && !IsNil(o.AllowAutoCheckin) {
		return true
	}

	return false
}

// SetAllowAutoCheckin gets a reference to the given bool and assigns it to the AllowAutoCheckin field.
func (o *LinkedHotelReservationType) SetAllowAutoCheckin(v bool) {
	o.AllowAutoCheckin = &v
}

// GetHasOpenFolio returns the HasOpenFolio field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetHasOpenFolio() bool {
	if o == nil || IsNil(o.HasOpenFolio) {
		var ret bool
		return ret
	}
	return *o.HasOpenFolio
}

// GetHasOpenFolioOk returns a tuple with the HasOpenFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetHasOpenFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOpenFolio) {
		return nil, false
	}
	return o.HasOpenFolio, true
}

// HasHasOpenFolio returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasHasOpenFolio() bool {
	if o != nil && !IsNil(o.HasOpenFolio) {
		return true
	}

	return false
}

// SetHasOpenFolio gets a reference to the given bool and assigns it to the HasOpenFolio field.
func (o *LinkedHotelReservationType) SetHasOpenFolio(v bool) {
	o.HasOpenFolio = &v
}

// GetAllowMobileCheckout returns the AllowMobileCheckout field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAllowMobileCheckout() bool {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		var ret bool
		return ret
	}
	return *o.AllowMobileCheckout
}

// GetAllowMobileCheckoutOk returns a tuple with the AllowMobileCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAllowMobileCheckoutOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileCheckout) {
		return nil, false
	}
	return o.AllowMobileCheckout, true
}

// HasAllowMobileCheckout returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAllowMobileCheckout() bool {
	if o != nil && !IsNil(o.AllowMobileCheckout) {
		return true
	}

	return false
}

// SetAllowMobileCheckout gets a reference to the given bool and assigns it to the AllowMobileCheckout field.
func (o *LinkedHotelReservationType) SetAllowMobileCheckout(v bool) {
	o.AllowMobileCheckout = &v
}

// GetAllowMobileViewFolio returns the AllowMobileViewFolio field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAllowMobileViewFolio() bool {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		var ret bool
		return ret
	}
	return *o.AllowMobileViewFolio
}

// GetAllowMobileViewFolioOk returns a tuple with the AllowMobileViewFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAllowMobileViewFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMobileViewFolio) {
		return nil, false
	}
	return o.AllowMobileViewFolio, true
}

// HasAllowMobileViewFolio returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAllowMobileViewFolio() bool {
	if o != nil && !IsNil(o.AllowMobileViewFolio) {
		return true
	}

	return false
}

// SetAllowMobileViewFolio gets a reference to the given bool and assigns it to the AllowMobileViewFolio field.
func (o *LinkedHotelReservationType) SetAllowMobileViewFolio(v bool) {
	o.AllowMobileViewFolio = &v
}

// GetAllowPreRegistration returns the AllowPreRegistration field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetAllowPreRegistration() bool {
	if o == nil || IsNil(o.AllowPreRegistration) {
		var ret bool
		return ret
	}
	return *o.AllowPreRegistration
}

// GetAllowPreRegistrationOk returns a tuple with the AllowPreRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetAllowPreRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPreRegistration) {
		return nil, false
	}
	return o.AllowPreRegistration, true
}

// HasAllowPreRegistration returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasAllowPreRegistration() bool {
	if o != nil && !IsNil(o.AllowPreRegistration) {
		return true
	}

	return false
}

// SetAllowPreRegistration gets a reference to the given bool and assigns it to the AllowPreRegistration field.
func (o *LinkedHotelReservationType) SetAllowPreRegistration(v bool) {
	o.AllowPreRegistration = &v
}

// GetOptedForCommunication returns the OptedForCommunication field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOptedForCommunication() bool {
	if o == nil || IsNil(o.OptedForCommunication) {
		var ret bool
		return ret
	}
	return *o.OptedForCommunication
}

// GetOptedForCommunicationOk returns a tuple with the OptedForCommunication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOptedForCommunicationOk() (*bool, bool) {
	if o == nil || IsNil(o.OptedForCommunication) {
		return nil, false
	}
	return o.OptedForCommunication, true
}

// HasOptedForCommunication returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOptedForCommunication() bool {
	if o != nil && !IsNil(o.OptedForCommunication) {
		return true
	}

	return false
}

// SetOptedForCommunication gets a reference to the given bool and assigns it to the OptedForCommunication field.
func (o *LinkedHotelReservationType) SetOptedForCommunication(v bool) {
	o.OptedForCommunication = &v
}

// GetChargeCardNumber returns the ChargeCardNumber field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetChargeCardNumber() string {
	if o == nil || IsNil(o.ChargeCardNumber) {
		var ret string
		return ret
	}
	return *o.ChargeCardNumber
}

// GetChargeCardNumberOk returns a tuple with the ChargeCardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetChargeCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeCardNumber) {
		return nil, false
	}
	return o.ChargeCardNumber, true
}

// HasChargeCardNumber returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasChargeCardNumber() bool {
	if o != nil && !IsNil(o.ChargeCardNumber) {
		return true
	}

	return false
}

// SetChargeCardNumber gets a reference to the given string and assigns it to the ChargeCardNumber field.
func (o *LinkedHotelReservationType) SetChargeCardNumber(v string) {
	o.ChargeCardNumber = &v
}

// GetOverrideOutOfServiceCheck returns the OverrideOutOfServiceCheck field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetOverrideOutOfServiceCheck() bool {
	if o == nil || IsNil(o.OverrideOutOfServiceCheck) {
		var ret bool
		return ret
	}
	return *o.OverrideOutOfServiceCheck
}

// GetOverrideOutOfServiceCheckOk returns a tuple with the OverrideOutOfServiceCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetOverrideOutOfServiceCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideOutOfServiceCheck) {
		return nil, false
	}
	return o.OverrideOutOfServiceCheck, true
}

// HasOverrideOutOfServiceCheck returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasOverrideOutOfServiceCheck() bool {
	if o != nil && !IsNil(o.OverrideOutOfServiceCheck) {
		return true
	}

	return false
}

// SetOverrideOutOfServiceCheck gets a reference to the given bool and assigns it to the OverrideOutOfServiceCheck field.
func (o *LinkedHotelReservationType) SetOverrideOutOfServiceCheck(v bool) {
	o.OverrideOutOfServiceCheck = &v
}

// GetLinkReservationType returns the LinkReservationType field value if set, zero value otherwise.
func (o *LinkedHotelReservationType) GetLinkReservationType() LinkedReservationType {
	if o == nil || IsNil(o.LinkReservationType) {
		var ret LinkedReservationType
		return ret
	}
	return *o.LinkReservationType
}

// GetLinkReservationTypeOk returns a tuple with the LinkReservationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedHotelReservationType) GetLinkReservationTypeOk() (*LinkedReservationType, bool) {
	if o == nil || IsNil(o.LinkReservationType) {
		return nil, false
	}
	return o.LinkReservationType, true
}

// HasLinkReservationType returns a boolean if a field has been set.
func (o *LinkedHotelReservationType) HasLinkReservationType() bool {
	if o != nil && !IsNil(o.LinkReservationType) {
		return true
	}

	return false
}

// SetLinkReservationType gets a reference to the given LinkedReservationType and assigns it to the LinkReservationType field.
func (o *LinkedHotelReservationType) SetLinkReservationType(v LinkedReservationType) {
	o.LinkReservationType = &v
}

func (o LinkedHotelReservationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkedHotelReservationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ExternalReferences) {
		toSerialize["externalReferences"] = o.ExternalReferences
	}
	if !IsNil(o.AssociatedReservations) {
		toSerialize["associatedReservations"] = o.AssociatedReservations
	}
	if !IsNil(o.SourceOfSale) {
		toSerialize["sourceOfSale"] = o.SourceOfSale
	}
	if !IsNil(o.RoomStay) {
		toSerialize["roomStay"] = o.RoomStay
	}
	if !IsNil(o.CompAuthorizer) {
		toSerialize["compAuthorizer"] = o.CompAuthorizer
	}
	if !IsNil(o.ReservationGuests) {
		toSerialize["reservationGuests"] = o.ReservationGuests
	}
	if !IsNil(o.SharedGuests) {
		toSerialize["sharedGuests"] = o.SharedGuests
	}
	if !IsNil(o.AdditionalGuestInfo) {
		toSerialize["additionalGuestInfo"] = o.AdditionalGuestInfo
	}
	if !IsNil(o.ReservationProfiles) {
		toSerialize["reservationProfiles"] = o.ReservationProfiles
	}
	if !IsNil(o.ReservationCommunication) {
		toSerialize["reservationCommunication"] = o.ReservationCommunication
	}
	if !IsNil(o.ReservationAwards) {
		toSerialize["reservationAwards"] = o.ReservationAwards
	}
	if !IsNil(o.TrackItItems) {
		toSerialize["trackItItems"] = o.TrackItItems
	}
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	if !IsNil(o.Locators) {
		toSerialize["locators"] = o.Locators
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.WebRegistrationCards) {
		toSerialize["webRegistrationCards"] = o.WebRegistrationCards
	}
	if !IsNil(o.ServiceRequests) {
		toSerialize["serviceRequests"] = o.ServiceRequests
	}
	if !IsNil(o.ReservationActivities) {
		toSerialize["reservationActivities"] = o.ReservationActivities
	}
	if !IsNil(o.ScheduledActivities) {
		toSerialize["scheduledActivities"] = o.ScheduledActivities
	}
	if !IsNil(o.PrepaidCards) {
		toSerialize["prepaidCards"] = o.PrepaidCards
	}
	if !IsNil(o.ProfileAwards) {
		toSerialize["profileAwards"] = o.ProfileAwards
	}
	if !IsNil(o.ReservationPackages) {
		toSerialize["reservationPackages"] = o.ReservationPackages
	}
	if !IsNil(o.InventoryItems) {
		toSerialize["inventoryItems"] = o.InventoryItems
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.GuestComments) {
		toSerialize["guestComments"] = o.GuestComments
	}
	if !IsNil(o.GuestMemberships) {
		toSerialize["guestMemberships"] = o.GuestMemberships
	}
	if !IsNil(o.PreferenceCollection) {
		toSerialize["preferenceCollection"] = o.PreferenceCollection
	}
	if !IsNil(o.ReservationMemberships) {
		toSerialize["reservationMemberships"] = o.ReservationMemberships
	}
	if !IsNil(o.ReservationPaymentMethods) {
		toSerialize["reservationPaymentMethods"] = o.ReservationPaymentMethods
	}
	if !IsNil(o.RoutingInstructions) {
		toSerialize["routingInstructions"] = o.RoutingInstructions
	}
	if !IsNil(o.ReservationPolicies) {
		toSerialize["reservationPolicies"] = o.ReservationPolicies
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.LinkedReservation) {
		toSerialize["linkedReservation"] = o.LinkedReservation
	}
	if !IsNil(o.ExtSystemSync) {
		toSerialize["extSystemSync"] = o.ExtSystemSync
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.ReservationIndicators) {
		toSerialize["reservationIndicators"] = o.ReservationIndicators
	}
	if !IsNil(o.Waitlist) {
		toSerialize["waitlist"] = o.Waitlist
	}
	if !IsNil(o.Cancellation) {
		toSerialize["cancellation"] = o.Cancellation
	}
	if !IsNil(o.Catering) {
		toSerialize["catering"] = o.Catering
	}
	if !IsNil(o.StatisticalClassification) {
		toSerialize["statisticalClassification"] = o.StatisticalClassification
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !IsNil(o.Traces) {
		toSerialize["traces"] = o.Traces
	}
	if !IsNil(o.ConfirmationLetters) {
		toSerialize["confirmationLetters"] = o.ConfirmationLetters
	}
	if !IsNil(o.CallHistory) {
		toSerialize["callHistory"] = o.CallHistory
	}
	if !IsNil(o.FixedCharges) {
		toSerialize["fixedCharges"] = o.FixedCharges
	}
	if !IsNil(o.GuestMessages) {
		toSerialize["guestMessages"] = o.GuestMessages
	}
	if !IsNil(o.LockHandle) {
		toSerialize["lockHandle"] = o.LockHandle
	}
	if !IsNil(o.OverrideInstructions) {
		toSerialize["overrideInstructions"] = o.OverrideInstructions
	}
	if !IsNil(o.Queue) {
		toSerialize["queue"] = o.Queue
	}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowedActions"] = o.AllowedActions
	}
	if !IsNil(o.ECoupons) {
		toSerialize["eCoupons"] = o.ECoupons
	}
	if !IsNil(o.TransactionDiversions) {
		toSerialize["transactionDiversions"] = o.TransactionDiversions
	}
	if !IsNil(o.AdvanceCheckIn) {
		toSerialize["advanceCheckIn"] = o.AdvanceCheckIn
	}
	if !IsNil(o.Tickets) {
		toSerialize["tickets"] = o.Tickets
	}
	if !IsNil(o.AccessRestrictionMessage) {
		toSerialize["accessRestrictionMessage"] = o.AccessRestrictionMessage
	}
	if !IsNil(o.ECertificates) {
		toSerialize["eCertificates"] = o.ECertificates
	}
	if !IsNil(o.CustomNameValueDetail) {
		toSerialize["customNameValueDetail"] = o.CustomNameValueDetail
	}
	if !IsNil(o.CustomChargeExemptionDetails) {
		toSerialize["customChargeExemptionDetails"] = o.CustomChargeExemptionDetails
	}
	if !IsNil(o.Folios) {
		toSerialize["folios"] = o.Folios
	}
	if !IsNil(o.AutoBorrowFromHouse) {
		toSerialize["autoBorrowFromHouse"] = o.AutoBorrowFromHouse
	}
	if !IsNil(o.OverrideExternalChecks) {
		toSerialize["overrideExternalChecks"] = o.OverrideExternalChecks
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RoomStayReservation) {
		toSerialize["roomStayReservation"] = o.RoomStayReservation
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.ComputedReservationStatus) {
		toSerialize["computedReservationStatus"] = o.ComputedReservationStatus
	}
	if !IsNil(o.WalkIn) {
		toSerialize["walkIn"] = o.WalkIn
	}
	if !IsNil(o.PrintRate) {
		toSerialize["printRate"] = o.PrintRate
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	if !IsNil(o.CreateBusinessDate) {
		toSerialize["createBusinessDate"] = o.CreateBusinessDate
	}
	if !IsNil(o.ReinstateDate) {
		toSerialize["reinstateDate"] = o.ReinstateDate
	}
	if !IsNil(o.Party) {
		toSerialize["party"] = o.Party
	}
	if !IsNil(o.PrimaryEnrollmentResort) {
		toSerialize["primaryEnrollmentResort"] = o.PrimaryEnrollmentResort
	}
	if !IsNil(o.PrimaryEnrollmentChain) {
		toSerialize["primaryEnrollmentChain"] = o.PrimaryEnrollmentChain
	}
	if !IsNil(o.CustomReference) {
		toSerialize["customReference"] = o.CustomReference
	}
	if !IsNil(o.DisplayColor) {
		toSerialize["displayColor"] = o.DisplayColor
	}
	if !IsNil(o.MarkAsRecentlyAccessed) {
		toSerialize["markAsRecentlyAccessed"] = o.MarkAsRecentlyAccessed
	}
	if !IsNil(o.OverrideInventoryCheck) {
		toSerialize["overrideInventoryCheck"] = o.OverrideInventoryCheck
	}
	if !IsNil(o.AccessRestriction) {
		toSerialize["accessRestriction"] = o.AccessRestriction
	}
	if !IsNil(o.PreRegistered) {
		toSerialize["preRegistered"] = o.PreRegistered
	}
	if !IsNil(o.UpgradeEligible) {
		toSerialize["upgradeEligible"] = o.UpgradeEligible
	}
	if !IsNil(o.OverrideBlockRestriction) {
		toSerialize["overrideBlockRestriction"] = o.OverrideBlockRestriction
	}
	if !IsNil(o.AllowAutoCheckin) {
		toSerialize["allowAutoCheckin"] = o.AllowAutoCheckin
	}
	if !IsNil(o.HasOpenFolio) {
		toSerialize["hasOpenFolio"] = o.HasOpenFolio
	}
	if !IsNil(o.AllowMobileCheckout) {
		toSerialize["allowMobileCheckout"] = o.AllowMobileCheckout
	}
	if !IsNil(o.AllowMobileViewFolio) {
		toSerialize["allowMobileViewFolio"] = o.AllowMobileViewFolio
	}
	if !IsNil(o.AllowPreRegistration) {
		toSerialize["allowPreRegistration"] = o.AllowPreRegistration
	}
	if !IsNil(o.OptedForCommunication) {
		toSerialize["optedForCommunication"] = o.OptedForCommunication
	}
	if !IsNil(o.ChargeCardNumber) {
		toSerialize["chargeCardNumber"] = o.ChargeCardNumber
	}
	if !IsNil(o.OverrideOutOfServiceCheck) {
		toSerialize["overrideOutOfServiceCheck"] = o.OverrideOutOfServiceCheck
	}
	if !IsNil(o.LinkReservationType) {
		toSerialize["linkReservationType"] = o.LinkReservationType
	}
	return toSerialize, nil
}

type NullableLinkedHotelReservationType struct {
	value *LinkedHotelReservationType
	isSet bool
}

func (v NullableLinkedHotelReservationType) Get() *LinkedHotelReservationType {
	return v.value
}

func (v *NullableLinkedHotelReservationType) Set(val *LinkedHotelReservationType) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedHotelReservationType) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedHotelReservationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedHotelReservationType(val *LinkedHotelReservationType) *NullableLinkedHotelReservationType {
	return &NullableLinkedHotelReservationType{value: val, isSet: true}
}

func (v NullableLinkedHotelReservationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedHotelReservationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


