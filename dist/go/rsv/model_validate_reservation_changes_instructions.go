/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ValidateReservationChangesInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateReservationChangesInstructions{}

// ValidateReservationChangesInstructions Collection of validation instructions.
type ValidateReservationChangesInstructions struct {
	// Whether the current operation is copy reservation or not.
	CopyOperation *bool `json:"copyOperation,omitempty"`
	// Reservation validation instruction.
	Instruction []ReservationValidationInstructionType `json:"instruction,omitempty"`
	UpsellRateInstruction *UpsellRateInstructionType `json:"upsellRateInstruction,omitempty"`
}

// NewValidateReservationChangesInstructions instantiates a new ValidateReservationChangesInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateReservationChangesInstructions() *ValidateReservationChangesInstructions {
	this := ValidateReservationChangesInstructions{}
	return &this
}

// NewValidateReservationChangesInstructionsWithDefaults instantiates a new ValidateReservationChangesInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateReservationChangesInstructionsWithDefaults() *ValidateReservationChangesInstructions {
	this := ValidateReservationChangesInstructions{}
	return &this
}

// GetCopyOperation returns the CopyOperation field value if set, zero value otherwise.
func (o *ValidateReservationChangesInstructions) GetCopyOperation() bool {
	if o == nil || IsNil(o.CopyOperation) {
		var ret bool
		return ret
	}
	return *o.CopyOperation
}

// GetCopyOperationOk returns a tuple with the CopyOperation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateReservationChangesInstructions) GetCopyOperationOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyOperation) {
		return nil, false
	}
	return o.CopyOperation, true
}

// HasCopyOperation returns a boolean if a field has been set.
func (o *ValidateReservationChangesInstructions) HasCopyOperation() bool {
	if o != nil && !IsNil(o.CopyOperation) {
		return true
	}

	return false
}

// SetCopyOperation gets a reference to the given bool and assigns it to the CopyOperation field.
func (o *ValidateReservationChangesInstructions) SetCopyOperation(v bool) {
	o.CopyOperation = &v
}

// GetInstruction returns the Instruction field value if set, zero value otherwise.
func (o *ValidateReservationChangesInstructions) GetInstruction() []ReservationValidationInstructionType {
	if o == nil || IsNil(o.Instruction) {
		var ret []ReservationValidationInstructionType
		return ret
	}
	return o.Instruction
}

// GetInstructionOk returns a tuple with the Instruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateReservationChangesInstructions) GetInstructionOk() ([]ReservationValidationInstructionType, bool) {
	if o == nil || IsNil(o.Instruction) {
		return nil, false
	}
	return o.Instruction, true
}

// HasInstruction returns a boolean if a field has been set.
func (o *ValidateReservationChangesInstructions) HasInstruction() bool {
	if o != nil && !IsNil(o.Instruction) {
		return true
	}

	return false
}

// SetInstruction gets a reference to the given []ReservationValidationInstructionType and assigns it to the Instruction field.
func (o *ValidateReservationChangesInstructions) SetInstruction(v []ReservationValidationInstructionType) {
	o.Instruction = v
}

// GetUpsellRateInstruction returns the UpsellRateInstruction field value if set, zero value otherwise.
func (o *ValidateReservationChangesInstructions) GetUpsellRateInstruction() UpsellRateInstructionType {
	if o == nil || IsNil(o.UpsellRateInstruction) {
		var ret UpsellRateInstructionType
		return ret
	}
	return *o.UpsellRateInstruction
}

// GetUpsellRateInstructionOk returns a tuple with the UpsellRateInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateReservationChangesInstructions) GetUpsellRateInstructionOk() (*UpsellRateInstructionType, bool) {
	if o == nil || IsNil(o.UpsellRateInstruction) {
		return nil, false
	}
	return o.UpsellRateInstruction, true
}

// HasUpsellRateInstruction returns a boolean if a field has been set.
func (o *ValidateReservationChangesInstructions) HasUpsellRateInstruction() bool {
	if o != nil && !IsNil(o.UpsellRateInstruction) {
		return true
	}

	return false
}

// SetUpsellRateInstruction gets a reference to the given UpsellRateInstructionType and assigns it to the UpsellRateInstruction field.
func (o *ValidateReservationChangesInstructions) SetUpsellRateInstruction(v UpsellRateInstructionType) {
	o.UpsellRateInstruction = &v
}

func (o ValidateReservationChangesInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateReservationChangesInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyOperation) {
		toSerialize["copyOperation"] = o.CopyOperation
	}
	if !IsNil(o.Instruction) {
		toSerialize["instruction"] = o.Instruction
	}
	if !IsNil(o.UpsellRateInstruction) {
		toSerialize["upsellRateInstruction"] = o.UpsellRateInstruction
	}
	return toSerialize, nil
}

type NullableValidateReservationChangesInstructions struct {
	value *ValidateReservationChangesInstructions
	isSet bool
}

func (v NullableValidateReservationChangesInstructions) Get() *ValidateReservationChangesInstructions {
	return v.value
}

func (v *NullableValidateReservationChangesInstructions) Set(val *ValidateReservationChangesInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateReservationChangesInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateReservationChangesInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateReservationChangesInstructions(val *ValidateReservationChangesInstructions) *NullableValidateReservationChangesInstructions {
	return &NullableValidateReservationChangesInstructions{value: val, isSet: true}
}

func (v NullableValidateReservationChangesInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateReservationChangesInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


