/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the PostUpsellReservationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostUpsellReservationRequest{}

// PostUpsellReservationRequest struct for PostUpsellReservationRequest
type PostUpsellReservationRequest struct {
	// Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
	HotelId *string `json:"hotelId,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Indicates whether to override validation or not.
	Override *bool `json:"override,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	Upsell *UpsellType `json:"upsell,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPostUpsellReservationRequest instantiates a new PostUpsellReservationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostUpsellReservationRequest() *PostUpsellReservationRequest {
	this := PostUpsellReservationRequest{}
	return &this
}

// NewPostUpsellReservationRequestWithDefaults instantiates a new PostUpsellReservationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostUpsellReservationRequestWithDefaults() *PostUpsellReservationRequest {
	this := PostUpsellReservationRequest{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PostUpsellReservationRequest) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *PostUpsellReservationRequest) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetOverride() bool {
	if o == nil || IsNil(o.Override) {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.Override) {
		return nil, false
	}
	return o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasOverride() bool {
	if o != nil && !IsNil(o.Override) {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *PostUpsellReservationRequest) SetOverride(v bool) {
	o.Override = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *PostUpsellReservationRequest) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetUpsell returns the Upsell field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetUpsell() UpsellType {
	if o == nil || IsNil(o.Upsell) {
		var ret UpsellType
		return ret
	}
	return *o.Upsell
}

// GetUpsellOk returns a tuple with the Upsell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetUpsellOk() (*UpsellType, bool) {
	if o == nil || IsNil(o.Upsell) {
		return nil, false
	}
	return o.Upsell, true
}

// HasUpsell returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasUpsell() bool {
	if o != nil && !IsNil(o.Upsell) {
		return true
	}

	return false
}

// SetUpsell gets a reference to the given UpsellType and assigns it to the Upsell field.
func (o *PostUpsellReservationRequest) SetUpsell(v UpsellType) {
	o.Upsell = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostUpsellReservationRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUpsellReservationRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostUpsellReservationRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PostUpsellReservationRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PostUpsellReservationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostUpsellReservationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Override) {
		toSerialize["override"] = o.Override
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.Upsell) {
		toSerialize["upsell"] = o.Upsell
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostUpsellReservationRequest struct {
	value *PostUpsellReservationRequest
	isSet bool
}

func (v NullablePostUpsellReservationRequest) Get() *PostUpsellReservationRequest {
	return v.value
}

func (v *NullablePostUpsellReservationRequest) Set(val *PostUpsellReservationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostUpsellReservationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostUpsellReservationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostUpsellReservationRequest(val *PostUpsellReservationRequest) *NullablePostUpsellReservationRequest {
	return &NullablePostUpsellReservationRequest{value: val, isSet: true}
}

func (v NullablePostUpsellReservationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostUpsellReservationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


