/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the TurnawayType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TurnawayType{}

// TurnawayType Holds information related to prospect reservation to be turned away.
type TurnawayType struct {
	Address *AddressType `json:"address,omitempty"`
	CallId *UniqueIDType `json:"callId,omitempty"`
	// Holds comments for a prospect reservation to be turned away.
	Comments *string `json:"comments,omitempty"`
	Details *TurnawayDetailsType `json:"details,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	// Holds turn away code pertaining to reason of turning away prospect reservation.
	ReasonCode *string `json:"reasonCode,omitempty"`
}

// NewTurnawayType instantiates a new TurnawayType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTurnawayType() *TurnawayType {
	this := TurnawayType{}
	return &this
}

// NewTurnawayTypeWithDefaults instantiates a new TurnawayType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTurnawayTypeWithDefaults() *TurnawayType {
	this := TurnawayType{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TurnawayType) GetAddress() AddressType {
	if o == nil || IsNil(o.Address) {
		var ret AddressType
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetAddressOk() (*AddressType, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TurnawayType) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressType and assigns it to the Address field.
func (o *TurnawayType) SetAddress(v AddressType) {
	o.Address = &v
}

// GetCallId returns the CallId field value if set, zero value otherwise.
func (o *TurnawayType) GetCallId() UniqueIDType {
	if o == nil || IsNil(o.CallId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CallId
}

// GetCallIdOk returns a tuple with the CallId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetCallIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CallId) {
		return nil, false
	}
	return o.CallId, true
}

// HasCallId returns a boolean if a field has been set.
func (o *TurnawayType) HasCallId() bool {
	if o != nil && !IsNil(o.CallId) {
		return true
	}

	return false
}

// SetCallId gets a reference to the given UniqueIDType and assigns it to the CallId field.
func (o *TurnawayType) SetCallId(v UniqueIDType) {
	o.CallId = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *TurnawayType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *TurnawayType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *TurnawayType) SetComments(v string) {
	o.Comments = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *TurnawayType) GetDetails() TurnawayDetailsType {
	if o == nil || IsNil(o.Details) {
		var ret TurnawayDetailsType
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetDetailsOk() (*TurnawayDetailsType, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *TurnawayType) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given TurnawayDetailsType and assigns it to the Details field.
func (o *TurnawayType) SetDetails(v TurnawayDetailsType) {
	o.Details = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *TurnawayType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *TurnawayType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *TurnawayType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *TurnawayType) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TurnawayType) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *TurnawayType) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *TurnawayType) SetReasonCode(v string) {
	o.ReasonCode = &v
}

func (o TurnawayType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TurnawayType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CallId) {
		toSerialize["callId"] = o.CallId
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["reasonCode"] = o.ReasonCode
	}
	return toSerialize, nil
}

type NullableTurnawayType struct {
	value *TurnawayType
	isSet bool
}

func (v NullableTurnawayType) Get() *TurnawayType {
	return v.value
}

func (v *NullableTurnawayType) Set(val *TurnawayType) {
	v.value = val
	v.isSet = true
}

func (v NullableTurnawayType) IsSet() bool {
	return v.isSet
}

func (v *NullableTurnawayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTurnawayType(val *TurnawayType) *NullableTurnawayType {
	return &NullableTurnawayType{value: val, isSet: true}
}

func (v NullableTurnawayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTurnawayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


