/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationReversePolicyCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationReversePolicyCriteriaType{}

// ReservationReversePolicyCriteriaType Reverse policy information of a reservation.
type ReservationReversePolicyCriteriaType struct {
	// Property where the reservation exists.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	PolicyId *UniqueIDType `json:"policyId,omitempty"`
}

// NewReservationReversePolicyCriteriaType instantiates a new ReservationReversePolicyCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationReversePolicyCriteriaType() *ReservationReversePolicyCriteriaType {
	this := ReservationReversePolicyCriteriaType{}
	return &this
}

// NewReservationReversePolicyCriteriaTypeWithDefaults instantiates a new ReservationReversePolicyCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationReversePolicyCriteriaTypeWithDefaults() *ReservationReversePolicyCriteriaType {
	this := ReservationReversePolicyCriteriaType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ReservationReversePolicyCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationReversePolicyCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ReservationReversePolicyCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ReservationReversePolicyCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationReversePolicyCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationReversePolicyCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationReversePolicyCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationReversePolicyCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ReservationReversePolicyCriteriaType) GetPolicyId() UniqueIDType {
	if o == nil || IsNil(o.PolicyId) {
		var ret UniqueIDType
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationReversePolicyCriteriaType) GetPolicyIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ReservationReversePolicyCriteriaType) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given UniqueIDType and assigns it to the PolicyId field.
func (o *ReservationReversePolicyCriteriaType) SetPolicyId(v UniqueIDType) {
	o.PolicyId = &v
}

func (o ReservationReversePolicyCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationReversePolicyCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	return toSerialize, nil
}

type NullableReservationReversePolicyCriteriaType struct {
	value *ReservationReversePolicyCriteriaType
	isSet bool
}

func (v NullableReservationReversePolicyCriteriaType) Get() *ReservationReversePolicyCriteriaType {
	return v.value
}

func (v *NullableReservationReversePolicyCriteriaType) Set(val *ReservationReversePolicyCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationReversePolicyCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationReversePolicyCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationReversePolicyCriteriaType(val *ReservationReversePolicyCriteriaType) *NullableReservationReversePolicyCriteriaType {
	return &NullableReservationReversePolicyCriteriaType{value: val, isSet: true}
}

func (v NullableReservationReversePolicyCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationReversePolicyCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


