/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the CancelReservationsInstructionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelReservationsInstructionsType{}

// CancelReservationsInstructionsType The instructions to be applied for the reservations that are being cancelled.
type CancelReservationsInstructionsType struct {
	// Indicate if the traces associated with the reservations have to be deleted after the cancellation process.
	DeleteTraces *bool `json:"deleteTraces,omitempty"`
	// Indicate whether to ignore any associated cancellation rules during the cancellation process.
	IgnorePenalties *bool `json:"ignorePenalties,omitempty"`
	// Indicate whether to allow cancel a reservation which has an applied deposit.
	IgnoreDeposits *bool `json:"ignoreDeposits,omitempty"`
	// Indicate whether any sharing reservations associated with the reservation which is being cancelled will also be cancelled.
	CancelShares *bool `json:"cancelShares,omitempty"`
}

// NewCancelReservationsInstructionsType instantiates a new CancelReservationsInstructionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelReservationsInstructionsType() *CancelReservationsInstructionsType {
	this := CancelReservationsInstructionsType{}
	return &this
}

// NewCancelReservationsInstructionsTypeWithDefaults instantiates a new CancelReservationsInstructionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelReservationsInstructionsTypeWithDefaults() *CancelReservationsInstructionsType {
	this := CancelReservationsInstructionsType{}
	return &this
}

// GetDeleteTraces returns the DeleteTraces field value if set, zero value otherwise.
func (o *CancelReservationsInstructionsType) GetDeleteTraces() bool {
	if o == nil || IsNil(o.DeleteTraces) {
		var ret bool
		return ret
	}
	return *o.DeleteTraces
}

// GetDeleteTracesOk returns a tuple with the DeleteTraces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationsInstructionsType) GetDeleteTracesOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteTraces) {
		return nil, false
	}
	return o.DeleteTraces, true
}

// HasDeleteTraces returns a boolean if a field has been set.
func (o *CancelReservationsInstructionsType) HasDeleteTraces() bool {
	if o != nil && !IsNil(o.DeleteTraces) {
		return true
	}

	return false
}

// SetDeleteTraces gets a reference to the given bool and assigns it to the DeleteTraces field.
func (o *CancelReservationsInstructionsType) SetDeleteTraces(v bool) {
	o.DeleteTraces = &v
}

// GetIgnorePenalties returns the IgnorePenalties field value if set, zero value otherwise.
func (o *CancelReservationsInstructionsType) GetIgnorePenalties() bool {
	if o == nil || IsNil(o.IgnorePenalties) {
		var ret bool
		return ret
	}
	return *o.IgnorePenalties
}

// GetIgnorePenaltiesOk returns a tuple with the IgnorePenalties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationsInstructionsType) GetIgnorePenaltiesOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnorePenalties) {
		return nil, false
	}
	return o.IgnorePenalties, true
}

// HasIgnorePenalties returns a boolean if a field has been set.
func (o *CancelReservationsInstructionsType) HasIgnorePenalties() bool {
	if o != nil && !IsNil(o.IgnorePenalties) {
		return true
	}

	return false
}

// SetIgnorePenalties gets a reference to the given bool and assigns it to the IgnorePenalties field.
func (o *CancelReservationsInstructionsType) SetIgnorePenalties(v bool) {
	o.IgnorePenalties = &v
}

// GetIgnoreDeposits returns the IgnoreDeposits field value if set, zero value otherwise.
func (o *CancelReservationsInstructionsType) GetIgnoreDeposits() bool {
	if o == nil || IsNil(o.IgnoreDeposits) {
		var ret bool
		return ret
	}
	return *o.IgnoreDeposits
}

// GetIgnoreDepositsOk returns a tuple with the IgnoreDeposits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationsInstructionsType) GetIgnoreDepositsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreDeposits) {
		return nil, false
	}
	return o.IgnoreDeposits, true
}

// HasIgnoreDeposits returns a boolean if a field has been set.
func (o *CancelReservationsInstructionsType) HasIgnoreDeposits() bool {
	if o != nil && !IsNil(o.IgnoreDeposits) {
		return true
	}

	return false
}

// SetIgnoreDeposits gets a reference to the given bool and assigns it to the IgnoreDeposits field.
func (o *CancelReservationsInstructionsType) SetIgnoreDeposits(v bool) {
	o.IgnoreDeposits = &v
}

// GetCancelShares returns the CancelShares field value if set, zero value otherwise.
func (o *CancelReservationsInstructionsType) GetCancelShares() bool {
	if o == nil || IsNil(o.CancelShares) {
		var ret bool
		return ret
	}
	return *o.CancelShares
}

// GetCancelSharesOk returns a tuple with the CancelShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelReservationsInstructionsType) GetCancelSharesOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelShares) {
		return nil, false
	}
	return o.CancelShares, true
}

// HasCancelShares returns a boolean if a field has been set.
func (o *CancelReservationsInstructionsType) HasCancelShares() bool {
	if o != nil && !IsNil(o.CancelShares) {
		return true
	}

	return false
}

// SetCancelShares gets a reference to the given bool and assigns it to the CancelShares field.
func (o *CancelReservationsInstructionsType) SetCancelShares(v bool) {
	o.CancelShares = &v
}

func (o CancelReservationsInstructionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelReservationsInstructionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteTraces) {
		toSerialize["deleteTraces"] = o.DeleteTraces
	}
	if !IsNil(o.IgnorePenalties) {
		toSerialize["ignorePenalties"] = o.IgnorePenalties
	}
	if !IsNil(o.IgnoreDeposits) {
		toSerialize["ignoreDeposits"] = o.IgnoreDeposits
	}
	if !IsNil(o.CancelShares) {
		toSerialize["cancelShares"] = o.CancelShares
	}
	return toSerialize, nil
}

type NullableCancelReservationsInstructionsType struct {
	value *CancelReservationsInstructionsType
	isSet bool
}

func (v NullableCancelReservationsInstructionsType) Get() *CancelReservationsInstructionsType {
	return v.value
}

func (v *NullableCancelReservationsInstructionsType) Set(val *CancelReservationsInstructionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelReservationsInstructionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelReservationsInstructionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelReservationsInstructionsType(val *CancelReservationsInstructionsType) *NullableCancelReservationsInstructionsType {
	return &NullableCancelReservationsInstructionsType{value: val, isSet: true}
}

func (v NullableCancelReservationsInstructionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelReservationsInstructionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


