/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ChannelResvRSInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelResvRSInfoType{}

// ChannelResvRSInfoType Holds all the channel reservation specific information.
type ChannelResvRSInfoType struct {
	ChannelSummaryInfo *ChannelSummaryInfoType `json:"channelSummaryInfo,omitempty"`
	ChannelResvStatus *ChannelResvStatusType `json:"channelResvStatus,omitempty"`
	// Marketing Text like cancel policy, deposit policy etc.
	ChannelMarketingInfo []ChannelMarketingInfoTypeInner `json:"channelMarketingInfo,omitempty"`
	LastCommittedResv *LastCommittedResvType `json:"lastCommittedResv,omitempty"`
	InSessionReservationId *UniqueIDType `json:"inSessionReservationId,omitempty"`
}

// NewChannelResvRSInfoType instantiates a new ChannelResvRSInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelResvRSInfoType() *ChannelResvRSInfoType {
	this := ChannelResvRSInfoType{}
	return &this
}

// NewChannelResvRSInfoTypeWithDefaults instantiates a new ChannelResvRSInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelResvRSInfoTypeWithDefaults() *ChannelResvRSInfoType {
	this := ChannelResvRSInfoType{}
	return &this
}

// GetChannelSummaryInfo returns the ChannelSummaryInfo field value if set, zero value otherwise.
func (o *ChannelResvRSInfoType) GetChannelSummaryInfo() ChannelSummaryInfoType {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		var ret ChannelSummaryInfoType
		return ret
	}
	return *o.ChannelSummaryInfo
}

// GetChannelSummaryInfoOk returns a tuple with the ChannelSummaryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelResvRSInfoType) GetChannelSummaryInfoOk() (*ChannelSummaryInfoType, bool) {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		return nil, false
	}
	return o.ChannelSummaryInfo, true
}

// HasChannelSummaryInfo returns a boolean if a field has been set.
func (o *ChannelResvRSInfoType) HasChannelSummaryInfo() bool {
	if o != nil && !IsNil(o.ChannelSummaryInfo) {
		return true
	}

	return false
}

// SetChannelSummaryInfo gets a reference to the given ChannelSummaryInfoType and assigns it to the ChannelSummaryInfo field.
func (o *ChannelResvRSInfoType) SetChannelSummaryInfo(v ChannelSummaryInfoType) {
	o.ChannelSummaryInfo = &v
}

// GetChannelResvStatus returns the ChannelResvStatus field value if set, zero value otherwise.
func (o *ChannelResvRSInfoType) GetChannelResvStatus() ChannelResvStatusType {
	if o == nil || IsNil(o.ChannelResvStatus) {
		var ret ChannelResvStatusType
		return ret
	}
	return *o.ChannelResvStatus
}

// GetChannelResvStatusOk returns a tuple with the ChannelResvStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelResvRSInfoType) GetChannelResvStatusOk() (*ChannelResvStatusType, bool) {
	if o == nil || IsNil(o.ChannelResvStatus) {
		return nil, false
	}
	return o.ChannelResvStatus, true
}

// HasChannelResvStatus returns a boolean if a field has been set.
func (o *ChannelResvRSInfoType) HasChannelResvStatus() bool {
	if o != nil && !IsNil(o.ChannelResvStatus) {
		return true
	}

	return false
}

// SetChannelResvStatus gets a reference to the given ChannelResvStatusType and assigns it to the ChannelResvStatus field.
func (o *ChannelResvRSInfoType) SetChannelResvStatus(v ChannelResvStatusType) {
	o.ChannelResvStatus = &v
}

// GetChannelMarketingInfo returns the ChannelMarketingInfo field value if set, zero value otherwise.
func (o *ChannelResvRSInfoType) GetChannelMarketingInfo() []ChannelMarketingInfoTypeInner {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		var ret []ChannelMarketingInfoTypeInner
		return ret
	}
	return o.ChannelMarketingInfo
}

// GetChannelMarketingInfoOk returns a tuple with the ChannelMarketingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelResvRSInfoType) GetChannelMarketingInfoOk() ([]ChannelMarketingInfoTypeInner, bool) {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		return nil, false
	}
	return o.ChannelMarketingInfo, true
}

// HasChannelMarketingInfo returns a boolean if a field has been set.
func (o *ChannelResvRSInfoType) HasChannelMarketingInfo() bool {
	if o != nil && !IsNil(o.ChannelMarketingInfo) {
		return true
	}

	return false
}

// SetChannelMarketingInfo gets a reference to the given []ChannelMarketingInfoTypeInner and assigns it to the ChannelMarketingInfo field.
func (o *ChannelResvRSInfoType) SetChannelMarketingInfo(v []ChannelMarketingInfoTypeInner) {
	o.ChannelMarketingInfo = v
}

// GetLastCommittedResv returns the LastCommittedResv field value if set, zero value otherwise.
func (o *ChannelResvRSInfoType) GetLastCommittedResv() LastCommittedResvType {
	if o == nil || IsNil(o.LastCommittedResv) {
		var ret LastCommittedResvType
		return ret
	}
	return *o.LastCommittedResv
}

// GetLastCommittedResvOk returns a tuple with the LastCommittedResv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelResvRSInfoType) GetLastCommittedResvOk() (*LastCommittedResvType, bool) {
	if o == nil || IsNil(o.LastCommittedResv) {
		return nil, false
	}
	return o.LastCommittedResv, true
}

// HasLastCommittedResv returns a boolean if a field has been set.
func (o *ChannelResvRSInfoType) HasLastCommittedResv() bool {
	if o != nil && !IsNil(o.LastCommittedResv) {
		return true
	}

	return false
}

// SetLastCommittedResv gets a reference to the given LastCommittedResvType and assigns it to the LastCommittedResv field.
func (o *ChannelResvRSInfoType) SetLastCommittedResv(v LastCommittedResvType) {
	o.LastCommittedResv = &v
}

// GetInSessionReservationId returns the InSessionReservationId field value if set, zero value otherwise.
func (o *ChannelResvRSInfoType) GetInSessionReservationId() UniqueIDType {
	if o == nil || IsNil(o.InSessionReservationId) {
		var ret UniqueIDType
		return ret
	}
	return *o.InSessionReservationId
}

// GetInSessionReservationIdOk returns a tuple with the InSessionReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelResvRSInfoType) GetInSessionReservationIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.InSessionReservationId) {
		return nil, false
	}
	return o.InSessionReservationId, true
}

// HasInSessionReservationId returns a boolean if a field has been set.
func (o *ChannelResvRSInfoType) HasInSessionReservationId() bool {
	if o != nil && !IsNil(o.InSessionReservationId) {
		return true
	}

	return false
}

// SetInSessionReservationId gets a reference to the given UniqueIDType and assigns it to the InSessionReservationId field.
func (o *ChannelResvRSInfoType) SetInSessionReservationId(v UniqueIDType) {
	o.InSessionReservationId = &v
}

func (o ChannelResvRSInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelResvRSInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelSummaryInfo) {
		toSerialize["channelSummaryInfo"] = o.ChannelSummaryInfo
	}
	if !IsNil(o.ChannelResvStatus) {
		toSerialize["channelResvStatus"] = o.ChannelResvStatus
	}
	if !IsNil(o.ChannelMarketingInfo) {
		toSerialize["channelMarketingInfo"] = o.ChannelMarketingInfo
	}
	if !IsNil(o.LastCommittedResv) {
		toSerialize["lastCommittedResv"] = o.LastCommittedResv
	}
	if !IsNil(o.InSessionReservationId) {
		toSerialize["inSessionReservationId"] = o.InSessionReservationId
	}
	return toSerialize, nil
}

type NullableChannelResvRSInfoType struct {
	value *ChannelResvRSInfoType
	isSet bool
}

func (v NullableChannelResvRSInfoType) Get() *ChannelResvRSInfoType {
	return v.value
}

func (v *NullableChannelResvRSInfoType) Set(val *ChannelResvRSInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelResvRSInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelResvRSInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelResvRSInfoType(val *ChannelResvRSInfoType) *NullableChannelResvRSInfoType {
	return &NullableChannelResvRSInfoType{value: val, isSet: true}
}

func (v NullableChannelResvRSInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelResvRSInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


