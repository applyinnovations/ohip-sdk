/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the DepositCancelConfigCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositCancelConfigCriteriaType{}

// DepositCancelConfigCriteriaType Criteria for calculating the deposit/cancellation amount based on a reservation, policy code, amount or percentage.
type DepositCancelConfigCriteriaType struct {
	// A monetary amount.
	Amount *float32 `json:"amount,omitempty"`
	// Provides a currency code to reflect the currency in which an amount may be expressed.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Property Code of the reservation.
	HotelId *string `json:"hotelId,omitempty"`
	// The percentage based on which the calculation of the amount and due date is to be done.
	Percentage *float32 `json:"percentage,omitempty"`
	// The policy code based on which the calculation of the amount and due date is to be done.
	PolicyCode *string `json:"policyCode,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	RevenueType *DepositCancelRevenueType `json:"revenueType,omitempty"`
}

// NewDepositCancelConfigCriteriaType instantiates a new DepositCancelConfigCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositCancelConfigCriteriaType() *DepositCancelConfigCriteriaType {
	this := DepositCancelConfigCriteriaType{}
	return &this
}

// NewDepositCancelConfigCriteriaTypeWithDefaults instantiates a new DepositCancelConfigCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositCancelConfigCriteriaTypeWithDefaults() *DepositCancelConfigCriteriaType {
	this := DepositCancelConfigCriteriaType{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DepositCancelConfigCriteriaType) SetAmount(v float32) {
	o.Amount = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *DepositCancelConfigCriteriaType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *DepositCancelConfigCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetPercentage() float32 {
	if o == nil || IsNil(o.Percentage) {
		var ret float32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given float32 and assigns it to the Percentage field.
func (o *DepositCancelConfigCriteriaType) SetPercentage(v float32) {
	o.Percentage = &v
}

// GetPolicyCode returns the PolicyCode field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetPolicyCode() string {
	if o == nil || IsNil(o.PolicyCode) {
		var ret string
		return ret
	}
	return *o.PolicyCode
}

// GetPolicyCodeOk returns a tuple with the PolicyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetPolicyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyCode) {
		return nil, false
	}
	return o.PolicyCode, true
}

// HasPolicyCode returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasPolicyCode() bool {
	if o != nil && !IsNil(o.PolicyCode) {
		return true
	}

	return false
}

// SetPolicyCode gets a reference to the given string and assigns it to the PolicyCode field.
func (o *DepositCancelConfigCriteriaType) SetPolicyCode(v string) {
	o.PolicyCode = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *DepositCancelConfigCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRevenueType returns the RevenueType field value if set, zero value otherwise.
func (o *DepositCancelConfigCriteriaType) GetRevenueType() DepositCancelRevenueType {
	if o == nil || IsNil(o.RevenueType) {
		var ret DepositCancelRevenueType
		return ret
	}
	return *o.RevenueType
}

// GetRevenueTypeOk returns a tuple with the RevenueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositCancelConfigCriteriaType) GetRevenueTypeOk() (*DepositCancelRevenueType, bool) {
	if o == nil || IsNil(o.RevenueType) {
		return nil, false
	}
	return o.RevenueType, true
}

// HasRevenueType returns a boolean if a field has been set.
func (o *DepositCancelConfigCriteriaType) HasRevenueType() bool {
	if o != nil && !IsNil(o.RevenueType) {
		return true
	}

	return false
}

// SetRevenueType gets a reference to the given DepositCancelRevenueType and assigns it to the RevenueType field.
func (o *DepositCancelConfigCriteriaType) SetRevenueType(v DepositCancelRevenueType) {
	o.RevenueType = &v
}

func (o DepositCancelConfigCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositCancelConfigCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	if !IsNil(o.PolicyCode) {
		toSerialize["policyCode"] = o.PolicyCode
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.RevenueType) {
		toSerialize["revenueType"] = o.RevenueType
	}
	return toSerialize, nil
}

type NullableDepositCancelConfigCriteriaType struct {
	value *DepositCancelConfigCriteriaType
	isSet bool
}

func (v NullableDepositCancelConfigCriteriaType) Get() *DepositCancelConfigCriteriaType {
	return v.value
}

func (v *NullableDepositCancelConfigCriteriaType) Set(val *DepositCancelConfigCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositCancelConfigCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositCancelConfigCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositCancelConfigCriteriaType(val *DepositCancelConfigCriteriaType) *NullableDepositCancelConfigCriteriaType {
	return &NullableDepositCancelConfigCriteriaType{value: val, isSet: true}
}

func (v NullableDepositCancelConfigCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositCancelConfigCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


