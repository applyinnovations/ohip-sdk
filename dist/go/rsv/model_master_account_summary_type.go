/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the MasterAccountSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MasterAccountSummaryType{}

// MasterAccountSummaryType Minimal information of the posting master reservation that can be used to identify the reservation uniquely.
type MasterAccountSummaryType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
	// Business Date when the reservation was created.
	CreateBusinessDate *string `json:"createBusinessDate,omitempty"`
}

// NewMasterAccountSummaryType instantiates a new MasterAccountSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMasterAccountSummaryType() *MasterAccountSummaryType {
	this := MasterAccountSummaryType{}
	return &this
}

// NewMasterAccountSummaryTypeWithDefaults instantiates a new MasterAccountSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMasterAccountSummaryTypeWithDefaults() *MasterAccountSummaryType {
	this := MasterAccountSummaryType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *MasterAccountSummaryType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *MasterAccountSummaryType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *MasterAccountSummaryType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *MasterAccountSummaryType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *MasterAccountSummaryType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *MasterAccountSummaryType) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

// GetCreateBusinessDate returns the CreateBusinessDate field value if set, zero value otherwise.
func (o *MasterAccountSummaryType) GetCreateBusinessDate() string {
	if o == nil || IsNil(o.CreateBusinessDate) {
		var ret string
		return ret
	}
	return *o.CreateBusinessDate
}

// GetCreateBusinessDateOk returns a tuple with the CreateBusinessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountSummaryType) GetCreateBusinessDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreateBusinessDate) {
		return nil, false
	}
	return o.CreateBusinessDate, true
}

// HasCreateBusinessDate returns a boolean if a field has been set.
func (o *MasterAccountSummaryType) HasCreateBusinessDate() bool {
	if o != nil && !IsNil(o.CreateBusinessDate) {
		return true
	}

	return false
}

// SetCreateBusinessDate gets a reference to the given string and assigns it to the CreateBusinessDate field.
func (o *MasterAccountSummaryType) SetCreateBusinessDate(v string) {
	o.CreateBusinessDate = &v
}

func (o MasterAccountSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MasterAccountSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	if !IsNil(o.CreateBusinessDate) {
		toSerialize["createBusinessDate"] = o.CreateBusinessDate
	}
	return toSerialize, nil
}

type NullableMasterAccountSummaryType struct {
	value *MasterAccountSummaryType
	isSet bool
}

func (v NullableMasterAccountSummaryType) Get() *MasterAccountSummaryType {
	return v.value
}

func (v *NullableMasterAccountSummaryType) Set(val *MasterAccountSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMasterAccountSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMasterAccountSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMasterAccountSummaryType(val *MasterAccountSummaryType) *NullableMasterAccountSummaryType {
	return &NullableMasterAccountSummaryType{value: val, isSet: true}
}

func (v NullableMasterAccountSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMasterAccountSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


