/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the MasterAccountTypeReservationBlock type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MasterAccountTypeReservationBlock{}

// MasterAccountTypeReservationBlock Information of the block associated with the reservation.
type MasterAccountTypeReservationBlock struct {
	// Unique Id that references an object uniquely in the system.
	BlockIdList []UniqueIDType `json:"blockIdList,omitempty"`
	TransactionCode []string `json:"transactionCode,omitempty"`
}

// NewMasterAccountTypeReservationBlock instantiates a new MasterAccountTypeReservationBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMasterAccountTypeReservationBlock() *MasterAccountTypeReservationBlock {
	this := MasterAccountTypeReservationBlock{}
	return &this
}

// NewMasterAccountTypeReservationBlockWithDefaults instantiates a new MasterAccountTypeReservationBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMasterAccountTypeReservationBlockWithDefaults() *MasterAccountTypeReservationBlock {
	this := MasterAccountTypeReservationBlock{}
	return &this
}

// GetBlockIdList returns the BlockIdList field value if set, zero value otherwise.
func (o *MasterAccountTypeReservationBlock) GetBlockIdList() []UniqueIDType {
	if o == nil || IsNil(o.BlockIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.BlockIdList
}

// GetBlockIdListOk returns a tuple with the BlockIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountTypeReservationBlock) GetBlockIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.BlockIdList) {
		return nil, false
	}
	return o.BlockIdList, true
}

// HasBlockIdList returns a boolean if a field has been set.
func (o *MasterAccountTypeReservationBlock) HasBlockIdList() bool {
	if o != nil && !IsNil(o.BlockIdList) {
		return true
	}

	return false
}

// SetBlockIdList gets a reference to the given []UniqueIDType and assigns it to the BlockIdList field.
func (o *MasterAccountTypeReservationBlock) SetBlockIdList(v []UniqueIDType) {
	o.BlockIdList = v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *MasterAccountTypeReservationBlock) GetTransactionCode() []string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret []string
		return ret
	}
	return o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MasterAccountTypeReservationBlock) GetTransactionCodeOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *MasterAccountTypeReservationBlock) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given []string and assigns it to the TransactionCode field.
func (o *MasterAccountTypeReservationBlock) SetTransactionCode(v []string) {
	o.TransactionCode = v
}

func (o MasterAccountTypeReservationBlock) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MasterAccountTypeReservationBlock) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockIdList) {
		toSerialize["blockIdList"] = o.BlockIdList
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	return toSerialize, nil
}

type NullableMasterAccountTypeReservationBlock struct {
	value *MasterAccountTypeReservationBlock
	isSet bool
}

func (v NullableMasterAccountTypeReservationBlock) Get() *MasterAccountTypeReservationBlock {
	return v.value
}

func (v *NullableMasterAccountTypeReservationBlock) Set(val *MasterAccountTypeReservationBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableMasterAccountTypeReservationBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableMasterAccountTypeReservationBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMasterAccountTypeReservationBlock(val *MasterAccountTypeReservationBlock) *NullableMasterAccountTypeReservationBlock {
	return &NullableMasterAccountTypeReservationBlock{value: val, isSet: true}
}

func (v NullableMasterAccountTypeReservationBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMasterAccountTypeReservationBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


