/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the RoutingInstructionsInfoCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingInstructionsInfoCriteria{}

// RoutingInstructionsInfoCriteria Transactions and scheduled instructions included in this routing element will be replaced with the new element.
type RoutingInstructionsInfoCriteria struct {
	Comp *RoutingInstructionsInfoCriteriaComp `json:"comp,omitempty"`
	Folio *RoutingInstructionsInfoCriteriaFolio `json:"folio,omitempty"`
	// Hotel context of the reservation.
	HotelId *string `json:"hotelId,omitempty"`
	NewRoutingInfo *RoutingInfoType `json:"newRoutingInfo,omitempty"`
	// On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
	RefreshFolio *bool `json:"refreshFolio,omitempty"`
	Request *RoutingInstructionsInfoCriteriaRequest `json:"request,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.
	RetrievePostingsForRoomRouting *bool `json:"retrievePostingsForRoomRouting,omitempty"`
	Room *RoutingInstructionsInfoCriteriaRoom `json:"room,omitempty"`
}

// NewRoutingInstructionsInfoCriteria instantiates a new RoutingInstructionsInfoCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingInstructionsInfoCriteria() *RoutingInstructionsInfoCriteria {
	this := RoutingInstructionsInfoCriteria{}
	return &this
}

// NewRoutingInstructionsInfoCriteriaWithDefaults instantiates a new RoutingInstructionsInfoCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingInstructionsInfoCriteriaWithDefaults() *RoutingInstructionsInfoCriteria {
	this := RoutingInstructionsInfoCriteria{}
	return &this
}

// GetComp returns the Comp field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetComp() RoutingInstructionsInfoCriteriaComp {
	if o == nil || IsNil(o.Comp) {
		var ret RoutingInstructionsInfoCriteriaComp
		return ret
	}
	return *o.Comp
}

// GetCompOk returns a tuple with the Comp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetCompOk() (*RoutingInstructionsInfoCriteriaComp, bool) {
	if o == nil || IsNil(o.Comp) {
		return nil, false
	}
	return o.Comp, true
}

// HasComp returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasComp() bool {
	if o != nil && !IsNil(o.Comp) {
		return true
	}

	return false
}

// SetComp gets a reference to the given RoutingInstructionsInfoCriteriaComp and assigns it to the Comp field.
func (o *RoutingInstructionsInfoCriteria) SetComp(v RoutingInstructionsInfoCriteriaComp) {
	o.Comp = &v
}

// GetFolio returns the Folio field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetFolio() RoutingInstructionsInfoCriteriaFolio {
	if o == nil || IsNil(o.Folio) {
		var ret RoutingInstructionsInfoCriteriaFolio
		return ret
	}
	return *o.Folio
}

// GetFolioOk returns a tuple with the Folio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetFolioOk() (*RoutingInstructionsInfoCriteriaFolio, bool) {
	if o == nil || IsNil(o.Folio) {
		return nil, false
	}
	return o.Folio, true
}

// HasFolio returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasFolio() bool {
	if o != nil && !IsNil(o.Folio) {
		return true
	}

	return false
}

// SetFolio gets a reference to the given RoutingInstructionsInfoCriteriaFolio and assigns it to the Folio field.
func (o *RoutingInstructionsInfoCriteria) SetFolio(v RoutingInstructionsInfoCriteriaFolio) {
	o.Folio = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RoutingInstructionsInfoCriteria) SetHotelId(v string) {
	o.HotelId = &v
}

// GetNewRoutingInfo returns the NewRoutingInfo field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetNewRoutingInfo() RoutingInfoType {
	if o == nil || IsNil(o.NewRoutingInfo) {
		var ret RoutingInfoType
		return ret
	}
	return *o.NewRoutingInfo
}

// GetNewRoutingInfoOk returns a tuple with the NewRoutingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetNewRoutingInfoOk() (*RoutingInfoType, bool) {
	if o == nil || IsNil(o.NewRoutingInfo) {
		return nil, false
	}
	return o.NewRoutingInfo, true
}

// HasNewRoutingInfo returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasNewRoutingInfo() bool {
	if o != nil && !IsNil(o.NewRoutingInfo) {
		return true
	}

	return false
}

// SetNewRoutingInfo gets a reference to the given RoutingInfoType and assigns it to the NewRoutingInfo field.
func (o *RoutingInstructionsInfoCriteria) SetNewRoutingInfo(v RoutingInfoType) {
	o.NewRoutingInfo = &v
}

// GetRefreshFolio returns the RefreshFolio field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetRefreshFolio() bool {
	if o == nil || IsNil(o.RefreshFolio) {
		var ret bool
		return ret
	}
	return *o.RefreshFolio
}

// GetRefreshFolioOk returns a tuple with the RefreshFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetRefreshFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshFolio) {
		return nil, false
	}
	return o.RefreshFolio, true
}

// HasRefreshFolio returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasRefreshFolio() bool {
	if o != nil && !IsNil(o.RefreshFolio) {
		return true
	}

	return false
}

// SetRefreshFolio gets a reference to the given bool and assigns it to the RefreshFolio field.
func (o *RoutingInstructionsInfoCriteria) SetRefreshFolio(v bool) {
	o.RefreshFolio = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetRequest() RoutingInstructionsInfoCriteriaRequest {
	if o == nil || IsNil(o.Request) {
		var ret RoutingInstructionsInfoCriteriaRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetRequestOk() (*RoutingInstructionsInfoCriteriaRequest, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given RoutingInstructionsInfoCriteriaRequest and assigns it to the Request field.
func (o *RoutingInstructionsInfoCriteria) SetRequest(v RoutingInstructionsInfoCriteriaRequest) {
	o.Request = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *RoutingInstructionsInfoCriteria) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRetrievePostingsForRoomRouting returns the RetrievePostingsForRoomRouting field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetRetrievePostingsForRoomRouting() bool {
	if o == nil || IsNil(o.RetrievePostingsForRoomRouting) {
		var ret bool
		return ret
	}
	return *o.RetrievePostingsForRoomRouting
}

// GetRetrievePostingsForRoomRoutingOk returns a tuple with the RetrievePostingsForRoomRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetRetrievePostingsForRoomRoutingOk() (*bool, bool) {
	if o == nil || IsNil(o.RetrievePostingsForRoomRouting) {
		return nil, false
	}
	return o.RetrievePostingsForRoomRouting, true
}

// HasRetrievePostingsForRoomRouting returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasRetrievePostingsForRoomRouting() bool {
	if o != nil && !IsNil(o.RetrievePostingsForRoomRouting) {
		return true
	}

	return false
}

// SetRetrievePostingsForRoomRouting gets a reference to the given bool and assigns it to the RetrievePostingsForRoomRouting field.
func (o *RoutingInstructionsInfoCriteria) SetRetrievePostingsForRoomRouting(v bool) {
	o.RetrievePostingsForRoomRouting = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *RoutingInstructionsInfoCriteria) GetRoom() RoutingInstructionsInfoCriteriaRoom {
	if o == nil || IsNil(o.Room) {
		var ret RoutingInstructionsInfoCriteriaRoom
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInstructionsInfoCriteria) GetRoomOk() (*RoutingInstructionsInfoCriteriaRoom, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *RoutingInstructionsInfoCriteria) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given RoutingInstructionsInfoCriteriaRoom and assigns it to the Room field.
func (o *RoutingInstructionsInfoCriteria) SetRoom(v RoutingInstructionsInfoCriteriaRoom) {
	o.Room = &v
}

func (o RoutingInstructionsInfoCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingInstructionsInfoCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comp) {
		toSerialize["comp"] = o.Comp
	}
	if !IsNil(o.Folio) {
		toSerialize["folio"] = o.Folio
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.NewRoutingInfo) {
		toSerialize["newRoutingInfo"] = o.NewRoutingInfo
	}
	if !IsNil(o.RefreshFolio) {
		toSerialize["refreshFolio"] = o.RefreshFolio
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.RetrievePostingsForRoomRouting) {
		toSerialize["retrievePostingsForRoomRouting"] = o.RetrievePostingsForRoomRouting
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	return toSerialize, nil
}

type NullableRoutingInstructionsInfoCriteria struct {
	value *RoutingInstructionsInfoCriteria
	isSet bool
}

func (v NullableRoutingInstructionsInfoCriteria) Get() *RoutingInstructionsInfoCriteria {
	return v.value
}

func (v *NullableRoutingInstructionsInfoCriteria) Set(val *RoutingInstructionsInfoCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingInstructionsInfoCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingInstructionsInfoCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingInstructionsInfoCriteria(val *RoutingInstructionsInfoCriteria) *NullableRoutingInstructionsInfoCriteria {
	return &NullableRoutingInstructionsInfoCriteria{value: val, isSet: true}
}

func (v NullableRoutingInstructionsInfoCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingInstructionsInfoCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


