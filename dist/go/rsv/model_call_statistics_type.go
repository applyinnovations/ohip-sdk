/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the CallStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallStatisticsType{}

// CallStatisticsType Holds Call Statistics Information.
type CallStatisticsType struct {
	// Application User for which the Call Statistics is being retrieved.
	AppUserName *string `json:"appUserName,omitempty"`
	// Holds Total Call Time by Agent.
	TotalCallTime *int32 `json:"totalCallTime,omitempty"`
	// Holds Total Calls made by Agent.
	TotalCalls *int32 `json:"totalCalls,omitempty"`
	// Holds Average Call Time of Agent.
	AverageCallTime *int32 `json:"averageCallTime,omitempty"`
	// Holds Total Sales by Agent.
	TotalSales *int32 `json:"totalSales,omitempty"`
	TotalRevenue *CurrencyAmountType `json:"totalRevenue,omitempty"`
}

// NewCallStatisticsType instantiates a new CallStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallStatisticsType() *CallStatisticsType {
	this := CallStatisticsType{}
	return &this
}

// NewCallStatisticsTypeWithDefaults instantiates a new CallStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallStatisticsTypeWithDefaults() *CallStatisticsType {
	this := CallStatisticsType{}
	return &this
}

// GetAppUserName returns the AppUserName field value if set, zero value otherwise.
func (o *CallStatisticsType) GetAppUserName() string {
	if o == nil || IsNil(o.AppUserName) {
		var ret string
		return ret
	}
	return *o.AppUserName
}

// GetAppUserNameOk returns a tuple with the AppUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetAppUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppUserName) {
		return nil, false
	}
	return o.AppUserName, true
}

// HasAppUserName returns a boolean if a field has been set.
func (o *CallStatisticsType) HasAppUserName() bool {
	if o != nil && !IsNil(o.AppUserName) {
		return true
	}

	return false
}

// SetAppUserName gets a reference to the given string and assigns it to the AppUserName field.
func (o *CallStatisticsType) SetAppUserName(v string) {
	o.AppUserName = &v
}

// GetTotalCallTime returns the TotalCallTime field value if set, zero value otherwise.
func (o *CallStatisticsType) GetTotalCallTime() int32 {
	if o == nil || IsNil(o.TotalCallTime) {
		var ret int32
		return ret
	}
	return *o.TotalCallTime
}

// GetTotalCallTimeOk returns a tuple with the TotalCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetTotalCallTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCallTime) {
		return nil, false
	}
	return o.TotalCallTime, true
}

// HasTotalCallTime returns a boolean if a field has been set.
func (o *CallStatisticsType) HasTotalCallTime() bool {
	if o != nil && !IsNil(o.TotalCallTime) {
		return true
	}

	return false
}

// SetTotalCallTime gets a reference to the given int32 and assigns it to the TotalCallTime field.
func (o *CallStatisticsType) SetTotalCallTime(v int32) {
	o.TotalCallTime = &v
}

// GetTotalCalls returns the TotalCalls field value if set, zero value otherwise.
func (o *CallStatisticsType) GetTotalCalls() int32 {
	if o == nil || IsNil(o.TotalCalls) {
		var ret int32
		return ret
	}
	return *o.TotalCalls
}

// GetTotalCallsOk returns a tuple with the TotalCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetTotalCallsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCalls) {
		return nil, false
	}
	return o.TotalCalls, true
}

// HasTotalCalls returns a boolean if a field has been set.
func (o *CallStatisticsType) HasTotalCalls() bool {
	if o != nil && !IsNil(o.TotalCalls) {
		return true
	}

	return false
}

// SetTotalCalls gets a reference to the given int32 and assigns it to the TotalCalls field.
func (o *CallStatisticsType) SetTotalCalls(v int32) {
	o.TotalCalls = &v
}

// GetAverageCallTime returns the AverageCallTime field value if set, zero value otherwise.
func (o *CallStatisticsType) GetAverageCallTime() int32 {
	if o == nil || IsNil(o.AverageCallTime) {
		var ret int32
		return ret
	}
	return *o.AverageCallTime
}

// GetAverageCallTimeOk returns a tuple with the AverageCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetAverageCallTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.AverageCallTime) {
		return nil, false
	}
	return o.AverageCallTime, true
}

// HasAverageCallTime returns a boolean if a field has been set.
func (o *CallStatisticsType) HasAverageCallTime() bool {
	if o != nil && !IsNil(o.AverageCallTime) {
		return true
	}

	return false
}

// SetAverageCallTime gets a reference to the given int32 and assigns it to the AverageCallTime field.
func (o *CallStatisticsType) SetAverageCallTime(v int32) {
	o.AverageCallTime = &v
}

// GetTotalSales returns the TotalSales field value if set, zero value otherwise.
func (o *CallStatisticsType) GetTotalSales() int32 {
	if o == nil || IsNil(o.TotalSales) {
		var ret int32
		return ret
	}
	return *o.TotalSales
}

// GetTotalSalesOk returns a tuple with the TotalSales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetTotalSalesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSales) {
		return nil, false
	}
	return o.TotalSales, true
}

// HasTotalSales returns a boolean if a field has been set.
func (o *CallStatisticsType) HasTotalSales() bool {
	if o != nil && !IsNil(o.TotalSales) {
		return true
	}

	return false
}

// SetTotalSales gets a reference to the given int32 and assigns it to the TotalSales field.
func (o *CallStatisticsType) SetTotalSales(v int32) {
	o.TotalSales = &v
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *CallStatisticsType) GetTotalRevenue() CurrencyAmountType {
	if o == nil || IsNil(o.TotalRevenue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallStatisticsType) GetTotalRevenueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalRevenue) {
		return nil, false
	}
	return o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *CallStatisticsType) HasTotalRevenue() bool {
	if o != nil && !IsNil(o.TotalRevenue) {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given CurrencyAmountType and assigns it to the TotalRevenue field.
func (o *CallStatisticsType) SetTotalRevenue(v CurrencyAmountType) {
	o.TotalRevenue = &v
}

func (o CallStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppUserName) {
		toSerialize["appUserName"] = o.AppUserName
	}
	if !IsNil(o.TotalCallTime) {
		toSerialize["totalCallTime"] = o.TotalCallTime
	}
	if !IsNil(o.TotalCalls) {
		toSerialize["totalCalls"] = o.TotalCalls
	}
	if !IsNil(o.AverageCallTime) {
		toSerialize["averageCallTime"] = o.AverageCallTime
	}
	if !IsNil(o.TotalSales) {
		toSerialize["totalSales"] = o.TotalSales
	}
	if !IsNil(o.TotalRevenue) {
		toSerialize["totalRevenue"] = o.TotalRevenue
	}
	return toSerialize, nil
}

type NullableCallStatisticsType struct {
	value *CallStatisticsType
	isSet bool
}

func (v NullableCallStatisticsType) Get() *CallStatisticsType {
	return v.value
}

func (v *NullableCallStatisticsType) Set(val *CallStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCallStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCallStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallStatisticsType(val *CallStatisticsType) *NullableCallStatisticsType {
	return &NullableCallStatisticsType{value: val, isSet: true}
}

func (v NullableCallStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


