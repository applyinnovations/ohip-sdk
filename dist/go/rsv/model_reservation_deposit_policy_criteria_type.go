/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the ReservationDepositPolicyCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationDepositPolicyCriteriaType{}

// ReservationDepositPolicyCriteriaType A deposit policy attached with the reservation.
type ReservationDepositPolicyCriteriaType struct {
	RevenueType *DepositCancelRevenueType `json:"revenueType,omitempty"`
	Policy *DepositPolicyType `json:"policy,omitempty"`
	// Comments attached with a deposit.
	Comments *string `json:"comments,omitempty"`
	AmountPaid *CurrencyAmountType `json:"amountPaid,omitempty"`
	AmountDue *CurrencyAmountType `json:"amountDue,omitempty"`
	PolicyId *UniqueIDType `json:"policyId,omitempty"`
	// Property where the reservation exists.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
}

// NewReservationDepositPolicyCriteriaType instantiates a new ReservationDepositPolicyCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationDepositPolicyCriteriaType() *ReservationDepositPolicyCriteriaType {
	this := ReservationDepositPolicyCriteriaType{}
	return &this
}

// NewReservationDepositPolicyCriteriaTypeWithDefaults instantiates a new ReservationDepositPolicyCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationDepositPolicyCriteriaTypeWithDefaults() *ReservationDepositPolicyCriteriaType {
	this := ReservationDepositPolicyCriteriaType{}
	return &this
}

// GetRevenueType returns the RevenueType field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetRevenueType() DepositCancelRevenueType {
	if o == nil || IsNil(o.RevenueType) {
		var ret DepositCancelRevenueType
		return ret
	}
	return *o.RevenueType
}

// GetRevenueTypeOk returns a tuple with the RevenueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetRevenueTypeOk() (*DepositCancelRevenueType, bool) {
	if o == nil || IsNil(o.RevenueType) {
		return nil, false
	}
	return o.RevenueType, true
}

// HasRevenueType returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasRevenueType() bool {
	if o != nil && !IsNil(o.RevenueType) {
		return true
	}

	return false
}

// SetRevenueType gets a reference to the given DepositCancelRevenueType and assigns it to the RevenueType field.
func (o *ReservationDepositPolicyCriteriaType) SetRevenueType(v DepositCancelRevenueType) {
	o.RevenueType = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetPolicy() DepositPolicyType {
	if o == nil || IsNil(o.Policy) {
		var ret DepositPolicyType
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetPolicyOk() (*DepositPolicyType, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given DepositPolicyType and assigns it to the Policy field.
func (o *ReservationDepositPolicyCriteriaType) SetPolicy(v DepositPolicyType) {
	o.Policy = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ReservationDepositPolicyCriteriaType) SetComments(v string) {
	o.Comments = &v
}

// GetAmountPaid returns the AmountPaid field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetAmountPaid() CurrencyAmountType {
	if o == nil || IsNil(o.AmountPaid) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.AmountPaid
}

// GetAmountPaidOk returns a tuple with the AmountPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetAmountPaidOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.AmountPaid) {
		return nil, false
	}
	return o.AmountPaid, true
}

// HasAmountPaid returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasAmountPaid() bool {
	if o != nil && !IsNil(o.AmountPaid) {
		return true
	}

	return false
}

// SetAmountPaid gets a reference to the given CurrencyAmountType and assigns it to the AmountPaid field.
func (o *ReservationDepositPolicyCriteriaType) SetAmountPaid(v CurrencyAmountType) {
	o.AmountPaid = &v
}

// GetAmountDue returns the AmountDue field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetAmountDue() CurrencyAmountType {
	if o == nil || IsNil(o.AmountDue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.AmountDue
}

// GetAmountDueOk returns a tuple with the AmountDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetAmountDueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.AmountDue) {
		return nil, false
	}
	return o.AmountDue, true
}

// HasAmountDue returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasAmountDue() bool {
	if o != nil && !IsNil(o.AmountDue) {
		return true
	}

	return false
}

// SetAmountDue gets a reference to the given CurrencyAmountType and assigns it to the AmountDue field.
func (o *ReservationDepositPolicyCriteriaType) SetAmountDue(v CurrencyAmountType) {
	o.AmountDue = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetPolicyId() UniqueIDType {
	if o == nil || IsNil(o.PolicyId) {
		var ret UniqueIDType
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetPolicyIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given UniqueIDType and assigns it to the PolicyId field.
func (o *ReservationDepositPolicyCriteriaType) SetPolicyId(v UniqueIDType) {
	o.PolicyId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ReservationDepositPolicyCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationDepositPolicyCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationDepositPolicyCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationDepositPolicyCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationDepositPolicyCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

func (o ReservationDepositPolicyCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationDepositPolicyCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RevenueType) {
		toSerialize["revenueType"] = o.RevenueType
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.AmountPaid) {
		toSerialize["amountPaid"] = o.AmountPaid
	}
	if !IsNil(o.AmountDue) {
		toSerialize["amountDue"] = o.AmountDue
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	return toSerialize, nil
}

type NullableReservationDepositPolicyCriteriaType struct {
	value *ReservationDepositPolicyCriteriaType
	isSet bool
}

func (v NullableReservationDepositPolicyCriteriaType) Get() *ReservationDepositPolicyCriteriaType {
	return v.value
}

func (v *NullableReservationDepositPolicyCriteriaType) Set(val *ReservationDepositPolicyCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationDepositPolicyCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationDepositPolicyCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationDepositPolicyCriteriaType(val *ReservationDepositPolicyCriteriaType) *NullableReservationDepositPolicyCriteriaType {
	return &NullableReservationDepositPolicyCriteriaType{value: val, isSet: true}
}

func (v NullableReservationDepositPolicyCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationDepositPolicyCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


