/*
OPERA Cloud Reservation API

APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rsv

import (
	"encoding/json"
)

// checks if the RoomCalendarResType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomCalendarResType{}

// RoomCalendarResType Reservation Information for a Reservation Item in the Calendar.
type RoomCalendarResType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	DateTimeSpan *DateTimeSpanType `json:"dateTimeSpan,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	Surname *string `json:"surname,omitempty"`
	Title *string `json:"title,omitempty"`
	VipStatus *VIPStatusType `json:"vipStatus,omitempty"`
	Guarantee *ResGuaranteeType `json:"guarantee,omitempty"`
	NoOfRooms *int32 `json:"noOfRooms,omitempty"`
	RoomScheduleDisplay *RoomCalendarDisplayType `json:"roomScheduleDisplay,omitempty"`
	// Verify if the room number is locked for the reservation. When true the room number cannot be changed.
	RoomNumberLocked *bool `json:"roomNumberLocked,omitempty"`
	AdvanceCheckIn *AdvanceCheckInType `json:"advanceCheckIn,omitempty"`
	// List of room move details
	RoomMoveHistory []RoomMoveDetailType `json:"roomMoveHistory,omitempty"`
	ScheduledRoomMove *ScheduledRoomMoveDetailType `json:"scheduledRoomMove,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	HasLinkedReservations *LinkedReservationType `json:"hasLinkedReservations,omitempty"`
	// This attribute indicates if the linked reservation is marked as Back to Back or not.
	BackToBackReservation *bool `json:"backToBackReservation,omitempty"`
	// Indicates whether the room was assigned by AI Room Assignment.
	AssignedByAI *bool `json:"assignedByAI,omitempty"`
	// Indicates whether the room assigned by AI Room Assignment was an upgrade.
	UpgradedByAI *bool `json:"upgradedByAI,omitempty"`
	RoomOwnershipType *ReservationRoomOwnershipType `json:"roomOwnershipType,omitempty"`
}

// NewRoomCalendarResType instantiates a new RoomCalendarResType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomCalendarResType() *RoomCalendarResType {
	this := RoomCalendarResType{}
	return &this
}

// NewRoomCalendarResTypeWithDefaults instantiates a new RoomCalendarResType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomCalendarResTypeWithDefaults() *RoomCalendarResType {
	this := RoomCalendarResType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *RoomCalendarResType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetDateTimeSpan returns the DateTimeSpan field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetDateTimeSpan() DateTimeSpanType {
	if o == nil || IsNil(o.DateTimeSpan) {
		var ret DateTimeSpanType
		return ret
	}
	return *o.DateTimeSpan
}

// GetDateTimeSpanOk returns a tuple with the DateTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetDateTimeSpanOk() (*DateTimeSpanType, bool) {
	if o == nil || IsNil(o.DateTimeSpan) {
		return nil, false
	}
	return o.DateTimeSpan, true
}

// HasDateTimeSpan returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasDateTimeSpan() bool {
	if o != nil && !IsNil(o.DateTimeSpan) {
		return true
	}

	return false
}

// SetDateTimeSpan gets a reference to the given DateTimeSpanType and assigns it to the DateTimeSpan field.
func (o *RoomCalendarResType) SetDateTimeSpan(v DateTimeSpanType) {
	o.DateTimeSpan = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *RoomCalendarResType) SetGivenName(v string) {
	o.GivenName = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetSurname() string {
	if o == nil || IsNil(o.Surname) {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasSurname() bool {
	if o != nil && !IsNil(o.Surname) {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *RoomCalendarResType) SetSurname(v string) {
	o.Surname = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *RoomCalendarResType) SetTitle(v string) {
	o.Title = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetVipStatus() VIPStatusType {
	if o == nil || IsNil(o.VipStatus) {
		var ret VIPStatusType
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetVipStatusOk() (*VIPStatusType, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given VIPStatusType and assigns it to the VipStatus field.
func (o *RoomCalendarResType) SetVipStatus(v VIPStatusType) {
	o.VipStatus = &v
}

// GetGuarantee returns the Guarantee field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetGuarantee() ResGuaranteeType {
	if o == nil || IsNil(o.Guarantee) {
		var ret ResGuaranteeType
		return ret
	}
	return *o.Guarantee
}

// GetGuaranteeOk returns a tuple with the Guarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetGuaranteeOk() (*ResGuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantee) {
		return nil, false
	}
	return o.Guarantee, true
}

// HasGuarantee returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasGuarantee() bool {
	if o != nil && !IsNil(o.Guarantee) {
		return true
	}

	return false
}

// SetGuarantee gets a reference to the given ResGuaranteeType and assigns it to the Guarantee field.
func (o *RoomCalendarResType) SetGuarantee(v ResGuaranteeType) {
	o.Guarantee = &v
}

// GetNoOfRooms returns the NoOfRooms field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetNoOfRooms() int32 {
	if o == nil || IsNil(o.NoOfRooms) {
		var ret int32
		return ret
	}
	return *o.NoOfRooms
}

// GetNoOfRoomsOk returns a tuple with the NoOfRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetNoOfRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfRooms) {
		return nil, false
	}
	return o.NoOfRooms, true
}

// HasNoOfRooms returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasNoOfRooms() bool {
	if o != nil && !IsNil(o.NoOfRooms) {
		return true
	}

	return false
}

// SetNoOfRooms gets a reference to the given int32 and assigns it to the NoOfRooms field.
func (o *RoomCalendarResType) SetNoOfRooms(v int32) {
	o.NoOfRooms = &v
}

// GetRoomScheduleDisplay returns the RoomScheduleDisplay field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetRoomScheduleDisplay() RoomCalendarDisplayType {
	if o == nil || IsNil(o.RoomScheduleDisplay) {
		var ret RoomCalendarDisplayType
		return ret
	}
	return *o.RoomScheduleDisplay
}

// GetRoomScheduleDisplayOk returns a tuple with the RoomScheduleDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetRoomScheduleDisplayOk() (*RoomCalendarDisplayType, bool) {
	if o == nil || IsNil(o.RoomScheduleDisplay) {
		return nil, false
	}
	return o.RoomScheduleDisplay, true
}

// HasRoomScheduleDisplay returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasRoomScheduleDisplay() bool {
	if o != nil && !IsNil(o.RoomScheduleDisplay) {
		return true
	}

	return false
}

// SetRoomScheduleDisplay gets a reference to the given RoomCalendarDisplayType and assigns it to the RoomScheduleDisplay field.
func (o *RoomCalendarResType) SetRoomScheduleDisplay(v RoomCalendarDisplayType) {
	o.RoomScheduleDisplay = &v
}

// GetRoomNumberLocked returns the RoomNumberLocked field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetRoomNumberLocked() bool {
	if o == nil || IsNil(o.RoomNumberLocked) {
		var ret bool
		return ret
	}
	return *o.RoomNumberLocked
}

// GetRoomNumberLockedOk returns a tuple with the RoomNumberLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetRoomNumberLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomNumberLocked) {
		return nil, false
	}
	return o.RoomNumberLocked, true
}

// HasRoomNumberLocked returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasRoomNumberLocked() bool {
	if o != nil && !IsNil(o.RoomNumberLocked) {
		return true
	}

	return false
}

// SetRoomNumberLocked gets a reference to the given bool and assigns it to the RoomNumberLocked field.
func (o *RoomCalendarResType) SetRoomNumberLocked(v bool) {
	o.RoomNumberLocked = &v
}

// GetAdvanceCheckIn returns the AdvanceCheckIn field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetAdvanceCheckIn() AdvanceCheckInType {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		var ret AdvanceCheckInType
		return ret
	}
	return *o.AdvanceCheckIn
}

// GetAdvanceCheckInOk returns a tuple with the AdvanceCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetAdvanceCheckInOk() (*AdvanceCheckInType, bool) {
	if o == nil || IsNil(o.AdvanceCheckIn) {
		return nil, false
	}
	return o.AdvanceCheckIn, true
}

// HasAdvanceCheckIn returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasAdvanceCheckIn() bool {
	if o != nil && !IsNil(o.AdvanceCheckIn) {
		return true
	}

	return false
}

// SetAdvanceCheckIn gets a reference to the given AdvanceCheckInType and assigns it to the AdvanceCheckIn field.
func (o *RoomCalendarResType) SetAdvanceCheckIn(v AdvanceCheckInType) {
	o.AdvanceCheckIn = &v
}

// GetRoomMoveHistory returns the RoomMoveHistory field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetRoomMoveHistory() []RoomMoveDetailType {
	if o == nil || IsNil(o.RoomMoveHistory) {
		var ret []RoomMoveDetailType
		return ret
	}
	return o.RoomMoveHistory
}

// GetRoomMoveHistoryOk returns a tuple with the RoomMoveHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetRoomMoveHistoryOk() ([]RoomMoveDetailType, bool) {
	if o == nil || IsNil(o.RoomMoveHistory) {
		return nil, false
	}
	return o.RoomMoveHistory, true
}

// HasRoomMoveHistory returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasRoomMoveHistory() bool {
	if o != nil && !IsNil(o.RoomMoveHistory) {
		return true
	}

	return false
}

// SetRoomMoveHistory gets a reference to the given []RoomMoveDetailType and assigns it to the RoomMoveHistory field.
func (o *RoomCalendarResType) SetRoomMoveHistory(v []RoomMoveDetailType) {
	o.RoomMoveHistory = v
}

// GetScheduledRoomMove returns the ScheduledRoomMove field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetScheduledRoomMove() ScheduledRoomMoveDetailType {
	if o == nil || IsNil(o.ScheduledRoomMove) {
		var ret ScheduledRoomMoveDetailType
		return ret
	}
	return *o.ScheduledRoomMove
}

// GetScheduledRoomMoveOk returns a tuple with the ScheduledRoomMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetScheduledRoomMoveOk() (*ScheduledRoomMoveDetailType, bool) {
	if o == nil || IsNil(o.ScheduledRoomMove) {
		return nil, false
	}
	return o.ScheduledRoomMove, true
}

// HasScheduledRoomMove returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasScheduledRoomMove() bool {
	if o != nil && !IsNil(o.ScheduledRoomMove) {
		return true
	}

	return false
}

// SetScheduledRoomMove gets a reference to the given ScheduledRoomMoveDetailType and assigns it to the ScheduledRoomMove field.
func (o *RoomCalendarResType) SetScheduledRoomMove(v ScheduledRoomMoveDetailType) {
	o.ScheduledRoomMove = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *RoomCalendarResType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetHasLinkedReservations returns the HasLinkedReservations field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetHasLinkedReservations() LinkedReservationType {
	if o == nil || IsNil(o.HasLinkedReservations) {
		var ret LinkedReservationType
		return ret
	}
	return *o.HasLinkedReservations
}

// GetHasLinkedReservationsOk returns a tuple with the HasLinkedReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetHasLinkedReservationsOk() (*LinkedReservationType, bool) {
	if o == nil || IsNil(o.HasLinkedReservations) {
		return nil, false
	}
	return o.HasLinkedReservations, true
}

// HasHasLinkedReservations returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasHasLinkedReservations() bool {
	if o != nil && !IsNil(o.HasLinkedReservations) {
		return true
	}

	return false
}

// SetHasLinkedReservations gets a reference to the given LinkedReservationType and assigns it to the HasLinkedReservations field.
func (o *RoomCalendarResType) SetHasLinkedReservations(v LinkedReservationType) {
	o.HasLinkedReservations = &v
}

// GetBackToBackReservation returns the BackToBackReservation field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetBackToBackReservation() bool {
	if o == nil || IsNil(o.BackToBackReservation) {
		var ret bool
		return ret
	}
	return *o.BackToBackReservation
}

// GetBackToBackReservationOk returns a tuple with the BackToBackReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetBackToBackReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.BackToBackReservation) {
		return nil, false
	}
	return o.BackToBackReservation, true
}

// HasBackToBackReservation returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasBackToBackReservation() bool {
	if o != nil && !IsNil(o.BackToBackReservation) {
		return true
	}

	return false
}

// SetBackToBackReservation gets a reference to the given bool and assigns it to the BackToBackReservation field.
func (o *RoomCalendarResType) SetBackToBackReservation(v bool) {
	o.BackToBackReservation = &v
}

// GetAssignedByAI returns the AssignedByAI field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetAssignedByAI() bool {
	if o == nil || IsNil(o.AssignedByAI) {
		var ret bool
		return ret
	}
	return *o.AssignedByAI
}

// GetAssignedByAIOk returns a tuple with the AssignedByAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetAssignedByAIOk() (*bool, bool) {
	if o == nil || IsNil(o.AssignedByAI) {
		return nil, false
	}
	return o.AssignedByAI, true
}

// HasAssignedByAI returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasAssignedByAI() bool {
	if o != nil && !IsNil(o.AssignedByAI) {
		return true
	}

	return false
}

// SetAssignedByAI gets a reference to the given bool and assigns it to the AssignedByAI field.
func (o *RoomCalendarResType) SetAssignedByAI(v bool) {
	o.AssignedByAI = &v
}

// GetUpgradedByAI returns the UpgradedByAI field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetUpgradedByAI() bool {
	if o == nil || IsNil(o.UpgradedByAI) {
		var ret bool
		return ret
	}
	return *o.UpgradedByAI
}

// GetUpgradedByAIOk returns a tuple with the UpgradedByAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetUpgradedByAIOk() (*bool, bool) {
	if o == nil || IsNil(o.UpgradedByAI) {
		return nil, false
	}
	return o.UpgradedByAI, true
}

// HasUpgradedByAI returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasUpgradedByAI() bool {
	if o != nil && !IsNil(o.UpgradedByAI) {
		return true
	}

	return false
}

// SetUpgradedByAI gets a reference to the given bool and assigns it to the UpgradedByAI field.
func (o *RoomCalendarResType) SetUpgradedByAI(v bool) {
	o.UpgradedByAI = &v
}

// GetRoomOwnershipType returns the RoomOwnershipType field value if set, zero value otherwise.
func (o *RoomCalendarResType) GetRoomOwnershipType() ReservationRoomOwnershipType {
	if o == nil || IsNil(o.RoomOwnershipType) {
		var ret ReservationRoomOwnershipType
		return ret
	}
	return *o.RoomOwnershipType
}

// GetRoomOwnershipTypeOk returns a tuple with the RoomOwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomCalendarResType) GetRoomOwnershipTypeOk() (*ReservationRoomOwnershipType, bool) {
	if o == nil || IsNil(o.RoomOwnershipType) {
		return nil, false
	}
	return o.RoomOwnershipType, true
}

// HasRoomOwnershipType returns a boolean if a field has been set.
func (o *RoomCalendarResType) HasRoomOwnershipType() bool {
	if o != nil && !IsNil(o.RoomOwnershipType) {
		return true
	}

	return false
}

// SetRoomOwnershipType gets a reference to the given ReservationRoomOwnershipType and assigns it to the RoomOwnershipType field.
func (o *RoomCalendarResType) SetRoomOwnershipType(v ReservationRoomOwnershipType) {
	o.RoomOwnershipType = &v
}

func (o RoomCalendarResType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomCalendarResType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.DateTimeSpan) {
		toSerialize["dateTimeSpan"] = o.DateTimeSpan
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.Surname) {
		toSerialize["surname"] = o.Surname
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	if !IsNil(o.Guarantee) {
		toSerialize["guarantee"] = o.Guarantee
	}
	if !IsNil(o.NoOfRooms) {
		toSerialize["noOfRooms"] = o.NoOfRooms
	}
	if !IsNil(o.RoomScheduleDisplay) {
		toSerialize["roomScheduleDisplay"] = o.RoomScheduleDisplay
	}
	if !IsNil(o.RoomNumberLocked) {
		toSerialize["roomNumberLocked"] = o.RoomNumberLocked
	}
	if !IsNil(o.AdvanceCheckIn) {
		toSerialize["advanceCheckIn"] = o.AdvanceCheckIn
	}
	if !IsNil(o.RoomMoveHistory) {
		toSerialize["roomMoveHistory"] = o.RoomMoveHistory
	}
	if !IsNil(o.ScheduledRoomMove) {
		toSerialize["scheduledRoomMove"] = o.ScheduledRoomMove
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.HasLinkedReservations) {
		toSerialize["hasLinkedReservations"] = o.HasLinkedReservations
	}
	if !IsNil(o.BackToBackReservation) {
		toSerialize["backToBackReservation"] = o.BackToBackReservation
	}
	if !IsNil(o.AssignedByAI) {
		toSerialize["assignedByAI"] = o.AssignedByAI
	}
	if !IsNil(o.UpgradedByAI) {
		toSerialize["upgradedByAI"] = o.UpgradedByAI
	}
	if !IsNil(o.RoomOwnershipType) {
		toSerialize["roomOwnershipType"] = o.RoomOwnershipType
	}
	return toSerialize, nil
}

type NullableRoomCalendarResType struct {
	value *RoomCalendarResType
	isSet bool
}

func (v NullableRoomCalendarResType) Get() *RoomCalendarResType {
	return v.value
}

func (v *NullableRoomCalendarResType) Set(val *RoomCalendarResType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomCalendarResType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomCalendarResType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomCalendarResType(val *RoomCalendarResType) *NullableRoomCalendarResType {
	return &NullableRoomCalendarResType{value: val, isSet: true}
}

func (v NullableRoomCalendarResType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomCalendarResType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


