openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Reservation functionality in OPERA Cloud. <br /><br\
    \ />OPERA Cloud Reservations provides a complete set of capabilities for creating\
    \ and updating reservations. Reservations are a central feature of OPERA Cloud.\
    \ As a key source of information, the reservation specifies a guest&apos;s arrival\
    \ date, departure date, room type, rate, packages, and many other details. It\
    \ is also a gateway to dozens of other functions that contribute to the guest&apos;s\
    \ experience.  All reservations in OPERA Cloud require a guest profile.<br /><br\
    \ /> You can create profiles while booking a reservation. If a profile already\
    \ exists, you can look it up (using getProfiles in the Customer Relationship Management\
    \ module) and attach it to the reservation during the reservation booking process\
    \ using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br\
    \ /><br /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2024 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Reservation API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /rsv/v1
tags:
- description: " The REST APIs allow you to perform all actions related to reservations\
    \ from creating a new reservation, to adding on sharers, updating packages, item\
    \ inventory and even pre-checking in a reservation."
  name: Reservation
- description: The Reservation Statistics Service provides statistical data for reservations
    that exist in OPERA Cloud.
  name: RSVStats
paths:
  /blockReservationStatisticsByDateAndRoomPool:
    get:
      description: Get block Reservation statistics by date and room pool <p><strong>OperationId:</strong>getBlockReservationStatisticsByDateAndRoomPool</p>
        <p>This API allows a time span of <strong>90</strong> days.</p>
      operationId: getBlockReservationStatisticsByDateAndRoomPool
      parameters:
      - description: Whether to exclude blocks without quote IDs from the statistics
          gathering.
        in: query
        name: excludeBlocksWithoutQuoteID
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/blockReservationStatistics'
          description: Response for BlockReservationStatisticsByDateAndRoomPool operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BlockReservationStatisticsByDateAndRoomPool not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get block Reservation Statistics
      tags:
      - RSVStats
  /calls:
    post:
      description: Use this API to request a new call or make updates to an existing
        call.<p><strong>OperationId:</strong>postCall</p>
      operationId: postCall
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerCall'
        description: Request to register call. Either creates a new call or updates
          an existing call.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/registerCall'
          description: Response that contains either created/updated call information
            if successful or error(s) if not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Register calls
      tags:
      - Reservation
      x-codegen-request-body-name: registerCall
  /calls/statistics:
    get:
      description: Use this API to get call statistics. <p><strong>OperationId:</strong>getCallStatistics</p>
        <p>This API allows a time span of <strong>30</strong> days.</p>
      operationId: getCallStatistics
      parameters:
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - in: query
        name: domain
        schema:
          type: string
      - explode: true
        in: query
        name: appUserName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/callStatistics'
          description: Response object to the request to retrieve Call Statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CallStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get call statistics
      tags:
      - Reservation
  /externalSystems/{extSystemCode}/reservations:
    get:
      description: "This API will allow a user to retrieve a list of reservations\
        \ based on the search criteria specified in the request body. For example\
        \ you can search for reservations using query parameters like first name,\
        \ last name, arrival/departure date, external confirmation number. <p><strong>OperationId:</strong>getExternalSystemReservations</p>"
      operationId: getExternalSystemReservations
      parameters:
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: extSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceList
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Mark this reservation as recently accessed.
        in: query
        name: recentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: searchType
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          type: string
      - description: List of Hotels to support searches with multiple resorts for
          which traces are to be fetched.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Free form text field for searching all reservation fields
        in: query
        name: text
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedArrivalStartTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedArrivalEndTime
        schema:
          format: date-time
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedReturnEndTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedReturnStartTime
        schema:
          format: date-time
          type: string
      - description: Attached profile name
        explode: true
        in: query
        name: companyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: travelAgentIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: companyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: sourceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: contactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: groupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: billingContactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership ID criteria.
        in: query
        name: membershipCardNumber
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevels
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: VIP status of the customer.
        in: query
        name: anyVIPStatus
        schema:
          type: boolean
      - description: VIP status of the customer.
        explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservation having Guarantee Code(Reservation Type)
          supplied here.
        in: query
        name: guaranteeCode
        schema:
          type: string
      - description: Fetches the reservation having method of payment supplied here.
        in: query
        name: paymentMethod
        schema:
          type: string
      - description: Fetches the reservation for which discount is applied
        in: query
        name: discountApplied
        schema:
          default: false
          type: boolean
      - explode: true
        in: query
        name: user
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Fetches reservation created by specified user. If both CreatedByUsers\
          \ and CreatedBy is specified, CreatedByUsers will take precedence."
        in: query
        name: createdBy
        schema:
          type: string
      - description: Fetches reservations cancelled by list of users.
        explode: true
        in: query
        name: cancelledByList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservations which are cancelled on a specific date.
        in: query
        name: cancelledOn
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ratePlanCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sourceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: marketCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true the search result will exclude the blocks reservations.
        in: query
        name: excludeBlockReservations
        schema:
          type: boolean
      - description: The Name of the block that is attached to the reservation.
        in: query
        name: blockName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Custom reference
        in: query
        name: customReference
        schema:
          type: string
      - description: GDS Record Locator for reservation.
        in: query
        name: recordLocator
        schema:
          type: string
      - explode: true
        in: query
        name: orderBy
        schema:
          items:
            enum:
            - Nights
            - ArrivalDate
            - ArrivalDateETR
            - DepartureDate
            - GuestSurname
            - RateAmount
            - RateCode
            - Room
            - RoomType
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sortOrder
        schema:
          default: "[\"Asc\"]"
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicator to query reservations which have a room number assigned.
        in: query
        name: roomAssignedOnly
        schema:
          type: boolean
      - description: Indicator to query reservations which does not have a room number
          assigned.
        in: query
        name: roomUnassignedOnly
        schema:
          type: boolean
      - description: Room number of the reservation to search by.
        in: query
        name: roomId
        schema:
          type: string
      - description: Room Type.
        explode: false
        in: query
        name: roomType
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: roomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        in: query
        name: roomSmokingPreference
        schema:
          type: string
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: housekeepingRoomStatuses
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roomRangeFrom
        schema:
          type: string
      - in: query
        name: roomRangeTo
        schema:
          type: string
      - description: Filter by the last digits of a reservation's phone number.
        in: query
        name: communication
        schema:
          type: string
      - description: Instruction to fetch whether the room was assigned/upgraded by
          AI. This will also include Reservation instruction.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - ReservationID
            - Indicators
            - Deposits
            - RevenuesAndBalances
            - GuestServiceStatus
            - MasterInfo
            - CancellationInfo
            - BlockReservations
            - TaxType
            - GuestDeviceNotification
            - RoomAssignedByAI
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Flag containing true or false value for reservation to be eligible\
          \ for prior check in by guest using mobile device. Pass the 'true' or 'false'\
          \ values when creating / modifying reservation to indicate whether a reservation\
          \ is eligible for mobile check in yes / no. Upon fetch, the current state\
          \ of the flag will show true or false."
        in: query
        name: allowPreRegistration
        schema:
          type: boolean
      - description: Indicates that only reservations with deposit balance should
          be expected from the result.
        in: query
        name: hasDepositBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open balance should be
          expected from the result.
        in: query
        name: hasOpenBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open folio should be expected
          from the result.
        in: query
        name: hasOpenFolio
        schema:
          type: boolean
      - description: Criteria that indicates whether to scheduled checkouts or not.
        in: query
        name: includeScheduledCheckOut
        schema:
          type: boolean
      - description: Indicates that only linked reservations should be expected from
          the result.
        in: query
        name: linkedOnly
        schema:
          type: boolean
      - description: Indicates that only unlinked reservations should be expected
          from the result.
        in: query
        name: unlinkedOnly
        schema:
          type: boolean
      - description: Indicates if reservations which have already arrived on the Search
          Date is required.
        in: query
        name: actualArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which were expected to depart on the\
          \ Search Date and have already checked, is required."
        in: query
        name: actualDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as Complimentary\
          \ Rates , is required. This flag should be used in conjunction with the\
          \ Arrivals, Departures or StayOvers criteria."
        in: query
        name: complimentaryReservations
        schema:
          type: boolean
      - description: Indicates if reservations which have cancelled on the Search
          Date which is also the day of arrival is required.
        in: query
        name: dayOfArrivalCancels
        schema:
          type: boolean
      - description: "Indicates if reservations which are day use reservation on the\
          \ Search Date, is required."
        in: query
        name: dayUse
        schema:
          type: boolean
      - description: "Indicates if reservations which checked out early on the Search\
          \ Date, is required."
        in: query
        name: earlyDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected arrivals for the\
          \ Search Date and who have not yet arrived, is required."
        in: query
        name: expectedArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected departures for\
          \ the Search Date and who have not yet departed, is required."
        in: query
        name: expectedDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which have extended their stays on\
          \ the Search Date, is required."
        in: query
        name: extendedStays
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as House\
          \ Use Rates , is required. This flag should be used in conjunction with\
          \ the Arrivals, Departures or StayOvers criteria."
        in: query
        name: houseUseReservations
        schema:
          type: boolean
      - description: "Indicates if reservations which are StayOvers on the Search\
          \ Date, is required."
        in: query
        name: stayovers
        schema:
          type: boolean
      - description: "Date for searching the reservations. This is the date for which\
          \ the search types are applicable. If date is not available, the business\
          \ date will be used by default."
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: roomRoutingId
        schema:
          type: string
      - description: Indicates to exclude Pseudo room reservations.
        in: query
        name: excludePseudoRoomReservations
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludeReservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: VIP status of the customer.
        explode: true
        in: query
        name: excludeVIPStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates to exclude Advance Checked In Reservations from search
          result.
        in: query
        name: excludeAdvanceCheckedIn
        schema:
          type: boolean
      - description: Exclude the reservation(s) with provided room features from the
          search result.
        explode: true
        in: query
        name: excludeRoomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Player ID associated to the reservation.
        in: query
        name: playerId
        schema:
          type: string
      - description: Balance from.
        in: query
        name: gamingBalanceFrom
        schema:
          type: number
      - description: Balance to.
        in: query
        name: gamingBalanceTo
        schema:
          type: number
      - description: Comp Balance From
        in: query
        name: compAccountingBalanceFrom
        schema:
          type: number
      - description: Comp Balance To
        in: query
        name: compAccountingBalanceTo
        schema:
          type: number
      - description: Represents Reservation search type Player Snapshot.
        explode: true
        in: query
        name: searchTypes
        schema:
          items:
            enum:
            - Any
            - DayUse
            - Arrival
            - Arrived
            - Departure
            - WaitList
            - Cancellation
            - CheckedOut
            - NoShow
            - Complimentary
            - InHouse
            - PostStayPendingBalance
            - PreRegistered
            - PostToRoom
            - OpenFolio
            - ScheduledCheckOut
            - Queued
            - MobileCheckout
            - RegisteredAndInHouse
            - ResvBlockTraces
            - GuestMessages
            - MassCancellation
            - Operator
            - Turndown
            - WalkIn
            - AdvanceCheckedIn
            - OpenBalance
            - AutoFolioSettlement
            - Routing
            - PlayerSnapshot
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Reservation status type for reservations search.
        explode: true
        in: query
        name: reservationStatuses
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transportationCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Enum to denote the Status of Readiness messages sent to Guest
          Devices.
        explode: true
        in: query
        name: roomReadyStatuses
        schema:
          items:
            enum:
            - Pending
            - Completed
            - Failed
            - Sent
            - Received
            - Cancelled
            - PendingAvailability
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Fetches the reservations for which Checkout Message is received.
        in: query
        name: checkoutMessageReceived
        schema:
          type: boolean
      - description: Fetches the reservations for which reservation communication
          has been opted.
        in: query
        name: optedForCommunication
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsDetails'
          description: "Response object to the Fetch Reservation Request operation.\
            \ Based on the criteria, reservation information is returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExternalSystemReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservations for a hotel
      tags:
      - Reservation
  /hotels/{hotelId}/awardUpgrades:
    get:
      description: Get award upgrades for a specific property. <p><strong>OperationId:</strong>getAwardUpgrades</p>
      operationId: getAwardUpgrades
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: The type of the membership.
        in: query
        name: membershipType
        schema:
          type: string
      - description: The card number associated with this membership.
        in: query
        name: membershipCardNo
        schema:
          type: string
      - description: Current membership points available for this guest.
        in: query
        name: membershipPoints
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: reservationTimeSpanStartDate
        schema:
          format: date
          type: string
      - in: query
        name: reservationTimeSpanEndDate
        schema:
          format: date
          type: string
      - in: query
        name: reservationTimeSpanDuration
        schema:
          type: string
      - description: The number of rooms.
        in: query
        name: numberOfRooms
        schema:
          type: integer
      - description: Room type associated with the reservation.
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/awardUpgrades'
          description: Response object for available award upgrades.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AwardUpgrades not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Award Upgrades
      tags:
      - Reservation
  /hotels/{hotelId}/awards:
    get:
      description: Get certificates and awards associated with the Reservation. <p><strong>OperationId:</strong>getAwards</p>
      operationId: getAwards
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationAwards'
          description: Response of fetch awards for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Awards not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Awards
      tags:
      - Reservation
  /hotels/{hotelId}/blocks/{blockId}/reservations:
    post:
      description: "Use this to create a new reservation for a block, you must know\
        \ the block Code to create this reservation.  In order to post a successful\
        \ block reservation, please ensure you use the ListOfValues API's to know\
        \ the hotel's codes; such as Address Type, Country Code,  Titles, preferenceCodes\
        \ etc. <p><strong>OperationId:</strong>postReservationByBlock</p>"
      operationId: postReservationByBlock
      parameters:
      - description: Unique OPERA internal ID for the block.
        in: path
        name: blockId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is created.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postReservationByBlock_request'
        description: Request object to create reservations. Includes instructions
          for information which needs to be returned.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Reservation for a Block
      tags:
      - Reservation
      x-codegen-request-body-name: createReservation
  /hotels/{hotelId}/cancellationPolicies:
    put:
      description: Change cancellation policy that is configured for a property. <p><strong>OperationId:</strong>putCancellationPolicy</p>
      operationId: putCancellationPolicy
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationCancellationPolicyCriteria'
        description: Request object that holds the details of Cancellation Policy
          to be changed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationCancellationPolicyCriteria'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a Cancellation policy
      tags:
      - Reservation
      x-codegen-request-body-name: reservationCancellationPolicyCriteria
  /hotels/{hotelId}/confirmationLetters:
    get:
      description: Get a list of Reservations for which confirmation letters need
        to be sent. <p><strong>OperationId:</strong>getConfirmationLetters</p> <p>This
        API allows a time span of <strong>90</strong> days.</p>
      operationId: getConfirmationLetters
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: If true then the fetch result will include the reservations that
          do not have a letter attached to them.
        in: query
        name: notAttached
        schema:
          type: boolean
      - description: If true then the result will include only the pending confirmation
          letters.
        in: query
        name: pending
        schema:
          type: boolean
      - description: If true then the result will include only the confirmation letters
          that have been sent to the guest.
        in: query
        name: sent
        schema:
          type: boolean
      - description: The ending value of the date range.
        in: query
        name: createdOnEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: createdOnStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStartDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: letterStyleId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Name of the confirmation letter style.
        explode: true
        in: query
        name: letterStyle
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: letterStyleIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationGuestId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationGuestIdType
        schema:
          type: string
      - description: Membership ID criteria.
        in: query
        name: membershipId
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevelCode
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypeCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: This is the HotelCode of the Block.
        in: query
        name: blockHotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: blockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The Name of the block that is attached to the reservation.
        in: query
        name: blockName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationConfirmationLetters'
          description: Response object to the request to fetch a list of reservations
            for which confirmation letters need to be sent.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConfirmationLetters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Confirmation Letters
      tags:
      - Reservation
    post:
      description: Create a confirmation letter for a property. <p><strong>OperationId:</strong>postConfirmationLetters</p>
      operationId: postConfirmationLetters
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/confirmationLetters'
        description: Request object to create a confirmation letter.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/confirmationLettersDetails'
          description: Response object after creating a confirmation letter.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create the confirmation letters
      tags:
      - Reservation
      x-codegen-request-body-name: confirmationLetters
  /hotels/{hotelId}/depositPolicies:
    put:
      description: Change deposit policy which already exists for a property. <p><strong>OperationId:</strong>putDepositPolicy</p>
      operationId: putDepositPolicy
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationDepositPolicyCriteria'
        description: Request object that holds the details of hotel level Deposit
          Policy to be changed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeDepositPolicyDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change deposit policy
      tags:
      - Reservation
      x-codegen-request-body-name: reservationDepositPolicyCriteria
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/linkedReservations/{reservationExternalId}:
    delete:
      description: Use this API to unlink a reservation from its currently associated
        reservation. <p><strong>OperationId:</strong>deleteReservationLinksByExtId</p>
      operationId: deleteReservationLinksByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Reservation Links
      tags:
      - Reservation
    post:
      description: This will allow you to link 1 or more reservations to an existing
        reservation.  <p><strong>OperationId:</strong>postReservationLinksByExtId</p>
      operationId: postReservationLinksByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/linkReservationsCriteria'
        description: Request to link a list of reservations with another existing
          reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Link Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: linkReservationsCriteria
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}:
    get:
      description: Use this API to get a reservation using the external reference
        ID associated with the reservation such as a Central Reservation System confirmation
        number or booking engine confirmation number.<p><strong>OperationId:</strong>getReservationByExtId</p>
      operationId: getReservationByExtId
      parameters:
      - description: External reservation Id.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          external reservation Id.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Instruction on which of the reservation's elements are to be\
          \ returned e.g. DailySummary will return summarized information for each\
          \ day of the reservation. Instructions are cumulative i.e. if multiple instructions\
          \ are sent in a request, then the combined reservation elements would be\
          \ returned, elements will not be duplicated in the response."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Comments
            - GuestComments
            - Packages
            - TotalCostOfStay
            - InventoryItems
            - ReservationPaymentMethods
            - RoutingInstructions
            - Preferences
            - Memberships
            - Alerts
            - Traces
            - ConfirmationLetters
            - CallHistory
            - FixedCharges
            - GuestMessages
            - ReservationPolicies
            - Indicators
            - LinkedReservations
            - RevenuesAndBalances
            - GuestLastStay
            - ECoupons
            - TrackItItems
            - ReservationAwards
            - WebRegistrationCards
            - ReservationActivities
            - ScheduledActivities
            - PrepaidCards
            - Shares
            - Attachments
            - Locators
            - ProfileAwards
            - TransactionDiversions
            - Tickets
            - GuestMemberships
            - ECertificates
            - UpsellInfo
            - RoomAssignedByAI
            - DailySummary
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether the Enrollment is in progress or not
          for the Profile associated with this Reservation.
        explode: true
        in: query
        name: allowedActions
        schema:
          items:
            enum:
            - Cancel
            - Move
            - PreCharge
            - PostCharge
            - FacilitySchedule
            - Upsell
            - PreCheckIn
            - PostToNoShowCancel
            - NoShow
            - NameChange
            - Discount
            - HouseKeeping
            - EnrollToPrimaryMembership
            - EnrollInProgress
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservation'
          description: Return object to the request for information regarding a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationByExtId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get reservation by external ID
      tags:
      - Reservation
    put:
      description: "Use this to update an existing reservation for a hotel, such as\
        \ adding comments, changing the number of guests.   There are many fields\
        \ in putReservation defined by ListOfValues; ensure you have reviewed ListOfValues\
        \ APIs in order successfully to use putReservation. <p><strong>OperationId:</strong>putReservationByExtId</p>"
      operationId: putReservationByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeReservation'
        description: Request method to change a reservations information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeReservationDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Reservation by ID
      tags:
      - Reservation
      x-codegen-request-body-name: changeReservation
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/addOnReservationPackagesByExtId:
    put:
      description: "This API will allow you to update Add On (Sell Separate) packages\
        \ on a reservation's. Note: this API works as a full overlay for Reservation\
        \ Add On Packages./<p><strong>OperationId:</strong>putAddOnReservationPackagesByExtId</p>"
      operationId: putAddOnReservationPackagesByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 50
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          External reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: External system Leg Number for the reservation.
        in: query
        name: legNumber
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationAddOnPackagesType'
        description: Request object to overlay addon packages on an existing reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/addOnReservationPackagesType'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Add On (Sell Separate) packages on a reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reservationAddOnPackages
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/cancellations:
    post:
      description: Use this if a guest would like to cancel their reservation.  You
        will receive a cancellation number in the response. <p><strong>OperationId:</strong>postCancelReservationByExtId</p>
      operationId: postCancelReservationByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cancelReservation'
        description: Request object for canceling reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cancelReservationDetails'
          description: Response object for the request to cancel reservations. Response
            contains the reservations which were successfully canceled.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Cancel Reservation by ID
      tags:
      - Reservation
      x-codegen-request-body-name: cancelReservation
    put:
      description: Use this API to reinstate a cancelled reservation. <p><strong>OperationId:</strong>putReinstateReservationByExtId</p>
      operationId: putReinstateReservationByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reinstateReservation'
        description: Overriding the validation check will log the supposed errors
          in the warnings log if they would fail.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reinstateReservationDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reinstate a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reinstateReservation
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/routingInstructions:
    post:
      description: You can use this API to create routing instructions on a reservation.
        <p><strong>OperationId:</strong>postRoutingInstructionsByExtId</p>
      operationId: postRoutingInstructionsByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationRoutingCriteria'
        description: Request to create a routing instruction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create routing instructions
      tags:
      - Reservation
      x-codegen-request-body-name: reservationRoutingCriteria
    put:
      description: Change routing instructions on an existing reservation. <p><strong>OperationId:</strong>putRoutingInstructionsByExtId</p>
      operationId: putRoutingInstructionsByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/routingInstructionsInfo'
        description: Request when changing a routing instruction.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change routing instructions
      tags:
      - Reservation
      x-codegen-request-body-name: routingInstructionsInfo
  /hotels/{hotelId}/externalSystems/{externalSystemCode}/reservations/{reservationExternalId}/shares:
    delete:
      description: This API can be used to separate the share reservations. <p><strong>OperationId:</strong>deleteShareReservationByExtId</p>
      operationId: deleteShareReservationByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicate to Override the Room Inventory Check if applicable.
        in: query
        name: overrideInventoryCheck
        schema:
          type: boolean
      - description: Indicate to Override the check on Maximum Room Occupancy if applicable.
        in: query
        name: overrideMaxOccupancyCheck
        schema:
          type: boolean
      - description: Indicate to Override the check on Maximum Room Occupancy if applicable.
        in: query
        name: overrideRateAvailabilityCheck
        schema:
          type: boolean
      - description: "After the break share operation, return the new list of Sharer\
          \ Reservations."
        in: query
        name: returnShareReservations
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Separate share Reservations
      tags:
      - Reservation
    get:
      description: This API can be used to retrieve the share reservations that exist
        on a reservation. <p><strong>OperationId:</strong>getShareReservationsByExtId</p>
      operationId: getShareReservationsByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          external reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/shareReservations'
          description: Response for the fetch share reservation request. This returns
            all sharer reservations including the request reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ShareReservationsByExtId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get share Reservations
      tags:
      - Reservation
    post:
      description: Combine share reservation for a given reservation id <p><strong>OperationId:</strong>postCombineShareReservationsByExtId</p>
      operationId: postCombineShareReservationsByExtId
      parameters:
      - description: External reservation ID.
        in: path
        name: reservationExternalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/combineShareReservations'
        description: Request to combine sharer reservations. This request requires
          a Reservation Name Id(Joining to) and a Joining Reservation Id
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/combineShareReservationsDetails'
          description: "Response for the combine share reservation request. Based\
            \ on the request, this will return all sharer reservations including the\
            \ request reservation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Combine Share Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: combineShareReservations
  /hotels/{hotelId}/fetchExternalSystemDeliveryHistory:
    get:
      description: Get external system delivery history. <p><strong>OperationId:</strong>getExternalSystemDeliveryHistory</p>
      operationId: getExternalSystemDeliveryHistory
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/deliveryHistoryLog'
          description: Response that contains fetched reservation's delivery history.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExternalSystemDeliveryHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get External system delivery history
      tags:
      - Reservation
  /hotels/{hotelId}/guestMessages:
    get:
      description: Get guest messages which exist on a reservation. <p><strong>OperationId:</strong>getGuestMessages</p>
        <p>The maximum allowable limit for this API is <strong>100</strong>.</p>
      operationId: getGuestMessages
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: Flag that specified if Delivered Guest Messages will also be
          retrieved.
        in: query
        name: retrieveDeliveredMessages
        schema:
          type: boolean
      - description: Room number attached to the reservation.
        in: query
        name: room
        schema:
          type: string
      - description: Lookup guest messages with this Travel agent name.
        in: query
        name: travelAgent
        schema:
          type: string
      - description: Lookup guest messages with the Company name.
        in: query
        name: company
        schema:
          type: string
      - description: Lookup guest messages with the Travel agent name.
        in: query
        name: group
        schema:
          type: string
      - description: Lookup guest messages with the Source name.
        in: query
        name: source
        schema:
          type: string
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: reservationStatus
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          type: string
      - description: Flag that specified if Undelivered Guest Messages will also be
          retrieved.
        in: query
        name: retrieveUndeliveredMessages
        schema:
          type: boolean
      - description: Flag that specified if Printed Guest Messages will also be retrieved.
        in: query
        name: retrievePrintedMessages
        schema:
          type: boolean
      - description: Flag that specified if Texted Guest Messages will also be retrieved.
        in: query
        name: retrieveTextedMessages
        schema:
          type: boolean
      - description: Lookup messages using Block name.
        in: query
        name: blockName
        schema:
          type: string
      - description: Lookup guest messages with the recipient name.
        in: query
        name: recipientName
        schema:
          type: string
      - description: Lookup guest messages using reservation confirmation no.
        in: query
        name: confirmationNo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guestMessages'
          description: Response object to the request to retrieve Guest Messages for
            a Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GuestMessages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get guest messages
      tags:
      - Reservation
  /hotels/{hotelId}/locks/{lockHandle}:
    delete:
      description: Release Reservation Lock. <p><strong>OperationId:</strong>deleteReservationLock</p>
      operationId: deleteReservationLock
      parameters:
      - description: Lock handle of the lock to be released.
        in: path
        name: lockHandle
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Release Reservation Lock
      tags:
      - Reservation
    put:
      description: Extend Reservation Lock. <p><strong>OperationId:</strong>putReservationLock</p>
      operationId: putReservationLock
      parameters:
      - description: Lock handle of the lock to be extended.
        in: path
        name: lockHandle
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/extendReservationLock'
        description: Operation for extending the lifetime of a lock on a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/extendReservationLockDetails'
          description: This response will indicate whether or not the extension was
            successful. This operation may return errors when the lock being requested
            to be extended no longer exists. This can happen when the lock has already
            expired and cleaned up.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend Reservation Lock
      tags:
      - Reservation
      x-codegen-request-body-name: extendReservationLock
  /hotels/{hotelId}/preArrivalMembersReservations:
    get:
      description: Get preArrival Member Reservations. <p><strong>OperationId:</strong>getPreArrivalMemberReservations</p>
      operationId: getPreArrivalMemberReservations
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Membership Type.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of the desired reservation external confirmation number.
        in: query
        name: externalReferenceType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/preArrivalMemberReservationsDetails'
          description: Collection of PreArrivalMemberReservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PreArrivalMemberReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get preArrival Member Reservations
      tags:
      - Reservation
  /hotels/{hotelId}/preConfiguredRoutingInstructions:
    get:
      description: Get preConfigured Routing Instructions. <p><strong>OperationId:</strong>getPreConfiguredRoutingInstructions</p>
      operationId: getPreConfiguredRoutingInstructions
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: rateCode
        schema:
          type: string
      - description: Promotion Code for ComplimentaryRouting
        explode: true
        in: query
        name: promotionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: guestName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: guestIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: companyName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: companyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: groupName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: groupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: travelAgentName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: travelAgentIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: sourceName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: sourceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: contactName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: contactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: billingContactName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: billingContactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        in: query
        name: addresseeName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: addresseeIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: query
        name: reservationId
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/preConfiguredRoutingInstructions'
          description: This is the Response Message to the request for Pre-Configured
            Routing Instructions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PreConfiguredRoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get pre-Configured Routing Instructions
      tags:
      - Reservation
  /hotels/{hotelId}/profiles/{profileIdtoShare}/share:
    get:
      description: Get Reservations to share by profile id. <p><strong>OperationId:</strong>getReservationsToShareByProfileId</p>
        <p>The maximum allowable limit for this API is <strong>100</strong>.</p>
      operationId: getReservationsToShareByProfileId
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: profileIdtoShare
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Free form text field for searching all reservation fields
        in: query
        name: superSearch
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationGuestId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationGuestIdType
        schema:
          type: string
      - description: Membership ID criteria.
        in: query
        name: membershipId
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevel
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: Room number
        in: query
        name: roomId
        schema:
          type: string
      - description: Instruction to fetch whether the room was assigned/upgraded by
          AI. This will also include Reservation instruction.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Comments
            - GuestComments
            - Packages
            - InventoryItems
            - ReservationPaymentMethods
            - RoutingInstructions
            - Preferences
            - Memberships
            - Alerts
            - Traces
            - ConfirmationLetters
            - CallHistory
            - FixedCharges
            - GuestMessages
            - ReservationPolicies
            - Indicators
            - LinkedReservations
            - RevenuesAndBalances
            - GuestLastStay
            - ECoupons
            - TrackItItems
            - TotalCostOfStay
            - ReservationAwards
            - WebRegistrationCards
            - ServiceRequests
            - ReservationActivities
            - ScheduledActivities
            - PrepaidCards
            - Shares
            - Attachments
            - Locators
            - ProfileAwards
            - TransactionDiversions
            - Tickets
            - GuestMemberships
            - ECertificates
            - UpsellInfo
            - RoomAssignedByAI
            - CustomNameValue
            - CustomChargeExemptions
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchReservations'
          description: "Response object to the Fetch UpgradeEligibilityReservations\
            \ Request operation. Based on the criteria, reservation information is\
            \ returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationsToShareByProfileId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Reservations to share '
      tags:
      - Reservation
  /hotels/{hotelId}/rateInfoValidation:
    put:
      description: Validate the rate plan information for a reservation. <p><strong>OperationId:</strong>validateRateInfo</p>
      operationId: validateRateInfo
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/validateRateInfo'
        description: Retrieve either the reservation's rate information or make a
          quotation for a rate information. SummaryInfo attribute specifies if the
          item being requested is of detail or summary type.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/rateInfo'
          description: "Response will either be Summary or Detail type, but not both.\
            \ See the request for the summary attribute flag."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate rate information
      tags:
      - Reservation
      x-codegen-request-body-name: validateRateInfo
  /hotels/{hotelId}/reservations:
    get:
      description: "Use this API to search reservations in a hotel, filtering by whether\
        \ they are Day Use, Due In, Checked In, Due Out, Checked Out, Cancelled, No\
        \ Show and Complimentary or any other of the large selection of search criteria.\
        \ It also serves as an entry way for changing existing reservation information,\
        \ canceling reservations, checking in guests, canceling check ins, etc. You\
        \ can use further query parameters to narrow your results. This API is not\
        \ designed to support sync between two systems or initial upload of data.<p><strong>OperationId:</strong>getHotelReservations</p>"
      operationId: getHotelReservations
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: keyTrack2 is an id which is either generated by the PMS or provided
          by the door lock system and which is associated to the reservation. With
          the keyTrack2 value a reservation can be identified.
        in: query
        name: keyTrack2
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: discrepancy
        schema:
          enum:
          - Skip
          - Sleep
          type: string
      - description: Mark this reservation as recently accessed.
        in: query
        name: recentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: searchType
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          - FiscalInfo
          - CorrectionPostings
          - Vouchers
          - ScheduledRoomMove
          type: string
      - description: Free form text field for searching all reservation fields
        in: query
        name: text
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationIdList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: confirmationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: cancellationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          default: "[\"External\"]"
          items:
            type: string
          type: array
        style: form
      - description: External reference leg number
        in: query
        name: externalReferenceLegId
        schema:
          type: number
      - description: The ending value of the date range.
        in: query
        name: arrivalEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStartDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: stayOnStartDate
        schema:
          format: date
          type: string
      - description: Fetches reservations which are created on the given property
          business date.
        in: query
        name: createdOnStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedArrivalEndTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedArrivalStartTime
        schema:
          format: date-time
          type: string
      - description: The ending value of the date range.
        in: query
        name: depositDueEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: depositDueStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedReturnEndTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedReturnStartTime
        schema:
          format: date-time
          type: string
      - description: Attached profile name
        explode: true
        in: query
        name: companyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: sourceNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: travelAgentNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: groupNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: travelAgentIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: companyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: sourceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: contactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: groupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation. API expects CompanyName Query parameter
          along with the ID to obtain correct results.
        explode: true
        in: query
        name: billingContactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Identifier for a guest profile associated with the reservation(s)
        in: query
        name: profileId
        schema:
          type: string
      - description: Commission Paid criteria
        in: query
        name: commissionPaid
        schema:
          type: boolean
      - description: All reservations with generated vouchers to be returned if vouchersGenerated
          is set to true. All reservations without the generated vouchers to be returned
          if it is set to false.
        in: query
        name: vouchersGenerated
        schema:
          type: boolean
      - description: Membership ID criteria.
        in: query
        name: membershipCardNumber
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevels
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "When set to true, only reservations with a membership belonging\
          \ to the specified membership type will be returned"
        in: query
        name: reservationsWithMembershipType
        schema:
          type: boolean
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: fromName
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: toName
        schema:
          type: string
      - description: VIP status of the customer.
        in: query
        name: anyVIPStatus
        schema:
          type: boolean
      - description: VIP status of the customer.
        explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservation having Guarantee Code(Reservation Type)
          supplied here.
        in: query
        name: guaranteeCode
        schema:
          type: string
      - description: Fetches the reservation having method of payment supplied here.
        in: query
        name: paymentMethod
        schema:
          type: string
      - description: Fetches the reservation for which discount is applied
        in: query
        name: discountApplied
        schema:
          default: false
          type: boolean
      - explode: true
        in: query
        name: user
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Fetches reservation created by specified user. If both CreatedByUsers\
          \ and CreatedBy is specified, CreatedByUsers will take precedence."
        in: query
        name: createdBy
        schema:
          type: string
      - description: Fetches reservations cancelled by list of users.
        explode: true
        in: query
        name: cancelledByList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches reservations which are cancelled on the given property
          business date.
        in: query
        name: cancelledOn
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ratePlanCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sourceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: marketCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true the search result will exclude the blocks reservations.
        in: query
        name: excludeBlockReservations
        schema:
          type: boolean
      - description: The Hotel Code of the Block.
        in: query
        name: blockCriteriaHotelCode
        schema:
          type: string
      - description: The Name of the block that is attached to the reservation.
        in: query
        name: blockName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Custom reference
        in: query
        name: customReference
        schema:
          type: string
      - description: GDS Record Locator for reservation.
        in: query
        name: recordLocator
        schema:
          type: string
      - explode: true
        in: query
        name: orderBy
        schema:
          items:
            enum:
            - Nights
            - ArrivalDate
            - ArrivalDateETR
            - DepartureDate
            - GuestSurname
            - RateAmount
            - RateCode
            - Room
            - RoomType
            - QueuePriority
            - QueueDurationTime
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sortOrder
        schema:
          default: "[\"Asc\"]"
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicator to query reservations which have a room number assigned.
        in: query
        name: roomAssignedOnly
        schema:
          type: boolean
      - description: Indicator to query reservations which does not have a room number
          assigned.
        in: query
        name: roomUnassignedOnly
        schema:
          type: boolean
      - description: Room number of the reservation to search by.
        in: query
        name: roomId
        schema:
          type: string
      - description: Room Type.
        explode: false
        in: query
        name: roomType
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: roomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        in: query
        name: roomSmokingPreference
        schema:
          type: string
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: housekeepingRoomStatuses
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roomRangeFrom
        schema:
          type: string
      - in: query
        name: roomRangeTo
        schema:
          type: string
      - description: Filter by the last digits of a reservation's phone number.
        in: query
        name: communication
        schema:
          type: string
      - description: "Instruction on which elements of the reservation are to be fetched.\
          \ Instructions are cumulative i.e. additional elements would be added, but\
          \ not duplicated."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - ReservationID
            - Indicators
            - Deposits
            - RevenuesAndBalances
            - GuestServiceStatus
            - MasterInfo
            - CancellationInfo
            - BlockReservations
            - TaxType
            - GuestDeviceNotification
            - RoomAssignedByAI
            - SwapShiftRooms
            - ReservationPreferences
            - FiscalInfo
            - CommissionsInfo
            - DepartureReservationInfo
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether the Enrollment is in progress or not
          for the Profile associated with this Reservation.
        explode: true
        in: query
        name: allowedReservationActions
        schema:
          items:
            enum:
            - Cancel
            - Move
            - PreCharge
            - PostCharge
            - FacilitySchedule
            - Upsell
            - PreCheckIn
            - PostToNoShowCancel
            - NoShow
            - NameChange
            - Discount
            - HouseKeeping
            - EnrollToPrimaryMembership
            - EnrollInProgress
            - MemberAwardAttached
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Flag containing true or false value for reservation to be eligible\
          \ for prior check in by guest using mobile device. Pass the 'true' or 'false'\
          \ values when creating / modifying reservation to indicate whether a reservation\
          \ is eligible for mobile check in yes / no. Upon fetch, the current state\
          \ of the flag will show true or false."
        in: query
        name: allowPreRegistration
        schema:
          type: boolean
      - description: Indicates that reservations with No Post flag should not be expected
          from the result.
        in: query
        name: excludeNoPost
        schema:
          type: boolean
      - description: Indicates that reservations with PM room type should not be expected
          from the result.
        in: query
        name: excludePMRooms
        schema:
          type: boolean
      - description: Indicates that only reservations with deposit balance should
          be expected from the result.
        in: query
        name: hasDepositBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open balance should be
          expected from the result.
        in: query
        name: hasOpenBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open folio should be expected
          from the result.
        in: query
        name: hasOpenFolio
        schema:
          type: boolean
      - description: Criteria that indicates whether to scheduled checkouts or not.
        in: query
        name: includeScheduledCheckOut
        schema:
          type: boolean
      - description: Indicates that only linked reservations should be expected from
          the result.
        in: query
        name: linkedOnly
        schema:
          type: boolean
      - description: Indicates that only unlinked reservations should be expected
          from the result.
        in: query
        name: unlinkedOnly
        schema:
          type: boolean
      - description: Indicates if reservations which have already arrived on the Search
          Date is required.
        in: query
        name: actualArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which were expected to depart on the\
          \ Search Date and have already checked, is required."
        in: query
        name: actualDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as Complimentary\
          \ Rates , is required. This flag should be used in conjunction with the\
          \ Arrivals, Departures or StayOvers criteria."
        in: query
        name: complimentaryReservations
        schema:
          type: boolean
      - description: Indicates if reservations which have cancelled on the Search
          Date which is also the day of arrival is required.
        in: query
        name: dayOfArrivalCancels
        schema:
          type: boolean
      - description: "Indicates if reservations which are day use reservation on the\
          \ Search Date, is required."
        in: query
        name: dayUse
        schema:
          type: boolean
      - description: "Indicates if reservations which checked out early on the Search\
          \ Date, is required."
        in: query
        name: earlyDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected arrivals for the\
          \ Search Date and who have not yet arrived, is required."
        in: query
        name: expectedArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected departures for\
          \ the Search Date and who have not yet departed, is required."
        in: query
        name: expectedDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which have extended their stays on\
          \ the Search Date, is required."
        in: query
        name: extendedStays
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as House\
          \ Use Rates , is required. This flag should be used in conjunction with\
          \ the Arrivals, Departures or StayOvers criteria."
        in: query
        name: houseUseReservations
        schema:
          type: boolean
      - description: "Indicates if reservations which are StayOvers on the Search\
          \ Date, is required."
        in: query
        name: stayovers
        schema:
          type: boolean
      - description: "Date for searching the reservations. This is the date for which\
          \ the search types are applicable. If date is not available, the business\
          \ date will be used by default."
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: roomRoutingId
        schema:
          type: string
      - description: Periodic folio type.
        in: query
        name: periodicFolio
        schema:
          enum:
          - Weekly
          - Monthly
          - Days
          type: string
      - description: Comma-delimited list of Folio Settlement Type codes.
        in: query
        name: folioSettlementTypes
        schema:
          type: string
      - description: "Use the Number of Days For Settlement, defined for the Reservation."
        in: query
        name: defaultDays
        schema:
          type: boolean
      - description: Use the Number of days since last auto settled.
        in: query
        name: daysSinceLastAutoSettled
        schema:
          type: number
      - description: Use the Date since last auto settled.
        in: query
        name: dateSinceLastAutoSettled
        schema:
          format: date
          type: string
      - description: Indicates to exclude Pseudo room reservations.
        in: query
        name: excludePseudoRoomReservations
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludeReservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: VIP status of the customer.
        explode: true
        in: query
        name: excludeVIPStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates to exclude Advance Checked In Reservations from search
          result.
        in: query
        name: excludeAdvanceCheckedIn
        schema:
          type: boolean
      - description: Exclude the reservation(s) with provided room features from the
          search result.
        explode: true
        in: query
        name: excludeRoomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Player ID associated to the reservation.
        in: query
        name: playerId
        schema:
          type: string
      - description: Balance from.
        in: query
        name: gamingBalanceFrom
        schema:
          type: number
      - description: Balance to.
        in: query
        name: gamingBalanceTo
        schema:
          type: number
      - description: Comp Balance From
        in: query
        name: compAccountingBalanceFrom
        schema:
          type: number
      - description: Comp Balance To
        in: query
        name: compAccountingBalanceTo
        schema:
          type: number
      - description: Represents Reservation search type Player Snapshot.
        explode: true
        in: query
        name: searchTypes
        schema:
          items:
            enum:
            - Any
            - DayUse
            - Arrival
            - Arrived
            - Departure
            - WaitList
            - Cancellation
            - CheckedOut
            - NoShow
            - Complimentary
            - InHouse
            - PostStayPendingBalance
            - PreRegistered
            - PostToRoom
            - OpenFolio
            - ScheduledCheckOut
            - Queued
            - MobileCheckout
            - RegisteredAndInHouse
            - ResvBlockTraces
            - GuestMessages
            - MassCancellation
            - Operator
            - Turndown
            - WalkIn
            - AdvanceCheckedIn
            - OpenBalance
            - AutoFolioSettlement
            - Routing
            - PlayerSnapshot
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Reservation status type for reservations search.
        explode: true
        in: query
        name: reservationStatuses
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transportationCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Enum to denote the Status of Readiness messages sent to Guest
          Devices.
        explode: true
        in: query
        name: roomReadyStatuses
        schema:
          items:
            enum:
            - Pending
            - Completed
            - Failed
            - Sent
            - Received
            - Cancelled
            - PendingAvailability
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Fetches the reservations for which Checkout Message is received.
        in: query
        name: checkoutMessageReceived
        schema:
          type: boolean
      - description: Fetches the reservations for which reservation communication
          has been opted.
        in: query
        name: optedForCommunication
        schema:
          type: boolean
      - description: Fetches the reservations for which this reservation room can
          be shifted or swapped.
        in: query
        name: swapShiftRoomReservationId
        schema:
          type: string
      - description: The smoking preferences of rooms to be fetched.
        explode: true
        in: query
        name: roomSmokingPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The room features of the rooms. Fetches reservations with rooms\
          \ that have same room features. It has to be used in conjunction with roomType,\
          \ arrivalStartDate, and arrivalEndDate."
        explode: true
        in: query
        name: roomFeaturePreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The floor of the rooms. Fetches reservations with rooms that\
          \ are on the same floor. It has to be used in conjunction with roomType,\
          \ arrivalStartDate, and arrivalEndDate."
        explode: true
        in: query
        name: roomsFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Name of Contact Profile associated with Reservation.
        explode: true
        in: query
        name: contactNames
        schema:
          items:
            maxLength: 82
            minLength: 0
            type: string
          type: array
        style: form
      - description: Travel Agent Record Locators List.
        explode: true
        in: query
        name: taRecordLocatorList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Package Codes and Package Groups to be searched, can only be\
          \ used when searching for reservations at a single property with a maximum\
          \ date range of 90 days. It is required to populate either Arrival From/To,\
          \ Departure From/To, or the Stay Date filter(s)."
        explode: true
        in: query
        name: packageCodes
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 100
          type: array
        style: form
      - description: "Inventory Items to be searched, can only be used when searching\
          \ for reservations at a single property with a maximum date range of 90\
          \ days. It is required to populate either Arrival From/To, Departure From/To,\
          \ or the Stay Date filter(s)"
        explode: true
        in: query
        name: inventoryItems
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 100
          type: array
        style: form
      - description: Fetches the reservation having Guarantee Codes(Reservation Type)
          supplied here. Example guaranteeCodes=6PM
        explode: true
        in: query
        name: guaranteeCodes
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 100
          type: array
        style: form
      - description: Name of the group of Linked Reservations to be searched.
        in: query
        name: linkedName
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: Indicates that only reservations marked as Back to Back should
          be expected in the result.
        in: query
        name: backToBackOnly
        schema:
          type: boolean
      - description: Fetches linked Back to Back reservations with the specified Back
          to Back Date. Fetched reservations will be marked as Back to Back and they
          will either depart or arrive on the specified Back to Back day.
        in: query
        name: backToBackDateOn
        schema:
          format: date
          type: string
      - description: Scheduled Move Rooms Date Criteria. This will parameter be mandatory
          when search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveDate
        schema:
          format: date
          type: string
      - description: Start of Scheduled Move Room Time Range Criteria (in 24 hour
          time format). Applicable when Search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveStartTime
        schema:
          maxLength: 8
          minLength: 0
          pattern: "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
      - description: End of Scheduled Move Room Time Range Criteria (in 24 hour time
          format). Applicable when Search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveEndTime
        schema:
          maxLength: 8
          minLength: 0
          pattern: "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
      - description: Scheduled Move Room Status Criteria.
        in: query
        name: scheduledRoomMoveStatus
        schema:
          enum:
          - Completed
          - Pending
          type: string
      - description: "When this flag is set to true, it will exclude the linked reservations\
          \ which are marked as Back to Back in the result. Marking reservations as\
          \ Back to Back is available when the Back to Back Handling for Linked Reservations\
          \ OPERA control is active."
        in: query
        name: excludeBackToBackReservations
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsDetails'
          description: "Response object to the Fetch Reservation Request operation.\
            \ Based on the criteria, reservation information is returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get and search for reservations in a hotel
      tags:
      - Reservation
    post:
      description: "Use this to create a new reservation for a hA12:F24otel.  Generally,\
        \ you would search for a hotel's availability and rates before proceeding\
        \ to use postReservation.  There are many fields in postReservation defined\
        \ by ListOfValues; ensure you have reviewed ListOfValues APIs in order successfully\
        \ to use postReservation. <p><strong>OperationId:</strong>postReservation</p>"
      operationId: postReservation
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postReservation_request'
        description: Request object to create reservations. Includes instructions
          for information which needs to be returned.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/createReservationType'
          description: Response for created reservation
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: createReservation
  /hotels/{hotelId}/reservations/activityLog:
    get:
      description: Use this API to get the activity log data of reservations being
        created and managed.<p><strong>OperationId:</strong>getReservationActivityLog</p>
      operationId: getReservationActivityLog
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - in: query
        name: activityType
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIdsUserId
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIdsUserId
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityLog'
          description: Response object for the request for the reservation user activity
            log.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch reservation activity log
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/alerts:
    post:
      description: Create or updates multiple alerts for multiple reservations in
        bulk. <p><strong>OperationId:</strong>postBulkReservationAlerts</p>
      operationId: postBulkReservationAlerts
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationAlerts'
        description: Request object to create or update multiple alerts information
          for multiple reservations in bulk.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Bulk Reservation Alerts
      tags:
      - Reservation
      x-codegen-request-body-name: reservationAlerts
  /hotels/{hotelId}/reservations/cancellations:
    post:
      description: This API can be used to  cancel multiple reservations. <p><strong>OperationId:</strong>postCancelReservations</p>
      operationId: postCancelReservations
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cancelReservations'
        description: Request to submit batch cancel reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Cancel Reservations '
      tags:
      - Reservation
      x-codegen-request-body-name: cancelReservations
  /hotels/{hotelId}/reservations/linkedReservations/{reservationId}:
    delete:
      description: Use this API to unlink a reservation from its currently associated
        reservation. <p><strong>OperationId:</strong>deleteReservationLinks</p>
      operationId: deleteReservationLinks
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Reservation Links
      tags:
      - Reservation
    post:
      description: This will allow you to link 1 or more reservations to an existing
        reservation.  <p><strong>OperationId:</strong>postReservationLinks</p>
      operationId: postReservationLinks
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postReservationLinks_request'
        description: Request to link a list of reservations with another existing
          reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Link Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: linkReservationsCriteria
    put:
      description: This Operation allows to update attributes common to all reservations
        that are linked to an existing reservation. <p><strong>OperationId:</strong>putReservationLinks</p>
      operationId: putReservationLinks
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeLinkedReservationsCommonDetails'
        description: Request object with attributes to be updated on all linked reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedReservationsCommonDetails'
          description: Response object with new values for the attributes that were
            updated on all linked reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Linked Reservations Common Details.
      tags:
      - Reservation
      x-codegen-request-body-name: changeLinkedReservationsCommonDetails
  /hotels/{hotelId}/reservations/rateInfo:
    get:
      description: Use this API to retrieve rate plan information including a breakdown
        of packages and taxes.<p><strong>OperationId:</strong>getRateInfo</p>
      operationId: getRateInfo
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
          \ code."
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Flag to indicate if summary information is required.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - in: query
        name: criteriaStartDate
        schema:
          format: date
          type: string
      - in: query
        name: criteriaEndDate
        schema:
          format: date
          type: string
      - description: Defines the number of Adults.
        in: query
        name: adults
        schema:
          type: integer
      - description: Defines the number of Children.
        in: query
        name: children
        schema:
          type: integer
      - description: Age of a child in years.
        explode: true
        in: query
        name: childAge
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Number of children classified under the first Age Qualifying
          Group(Child Bucket#1).
        in: query
        name: bucket1Count
        schema:
          type: integer
      - description: Number of children classified under the second Age Qualifying
          Group(Child Bucket#2).
        in: query
        name: bucket2Count
        schema:
          type: integer
      - description: Number of children classified under the third Age Qualifying
          Group(Child Bucket#3).
        in: query
        name: bucket3Count
        schema:
          type: integer
      - description: Number of children classified under the fourth Age Qualifying
          Group(Child Bucket#4).
        in: query
        name: bucket4Count
        schema:
          type: integer
      - description: Number of children classified under the fifth Age Qualifying
          Group(Child Bucket#5).
        in: query
        name: bucket5Count
        schema:
          type: integer
      - description: This field is only required when the criteria is meant for a
          detailed results. The date for the rate detail is needed.
        in: query
        name: detailDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: blockIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: ratePlanCode
        schema:
          type: string
      - description: The ending value of the date range.
        explode: true
        in: query
        name: effectiveRateEnd
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: The starting value of the date range.
        explode: true
        in: query
        name: effectiveRateStart
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/rateInfo'
          description: "Response will either be Summary or Detail type, but not both.\
            \ See the request for the summary attribute flag."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RateInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get rate information
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/reservationCancellations:
    post:
      description: Use this API to cancel reservations including multiple share reservations
        with single request. You will receive cancellation numbers in the response.
        <p><strong>OperationId:</strong>postCancelShareReservation</p>
      operationId: postCancelShareReservation
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cancelReservation'
        description: Request object for canceling reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cancelReservationDetails'
          description: Response object for the request to cancel reservations. Response
            contains the reservations which were successfully canceled.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Cancel reservations
      tags:
      - Reservation
      x-codegen-request-body-name: cancelReservation
  /hotels/{hotelId}/reservations/statistics:
    get:
      description: Get DistributionReservationsSummary. <p><strong>OperationId:</strong>getDistributionReservationsSummary</p>
      operationId: getDistributionReservationsSummary
      parameters:
      - description: This is the Hotel Code of the Reservations
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: This is the EnterpriseId of Hotel Code
        in: query
        name: enterpriseId
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: This is the ChannelCode of Hotel Code in the Reservations
        explode: true
        in: query
        name: channelCode
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: This is the Last Updated From Date for a Reservation
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: This is the Last Updated To Date for a Reservation
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          default: 20
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkDistributionReservationsSummary'
          description: "Response for checking allowed actions, existence of attached\
            \ records."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DistributionReservationsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation DistributionReservationsSummary
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/summary:
    get:
      description: "<p>This operation fetches brief summary for the reservations and\
        \ also supports the Global Parameter <strong>MAX ROWS FETCH COUNT</strong>.<br>By\
        \ default this parameter is configured to support an overall fetch of <strong>5000</strong>\
        \ Records in total, with maximum number of records that can be fetched at\
        \ a time being <strong>200</strong> (limit). However, this parameter can be\
        \ updated to support an overall fetch value being a valid number between <strong>1</strong>\
        \ and <strong>10000</strong> with maximum number of records that can be fetched\
        \ at a time being same i.e. <strong>200</strong> (limit).</p><p>Requests with\
        \ an <strong>offset</strong> and <strong>limit</strong> sum exceeding the\
        \ <strong>MAX ROWS FETCH COUNT</strong> configured would fail the request.</p>\
        \ <p><strong>OperationId:</strong>getReservationsSummary</p>"
      operationId: getReservationsSummary
      parameters:
      - description: Unique ID of the hotel where reservations is being searched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: This filter indicates if the reservation(s) has performed an
          Advance Check-In or not. Data fetched is for 30 days ahead of business date.
        in: query
        name: advancedCheckedIn
        schema:
          type: boolean
      - description: This filter indicates number of records the API has to fetch.
        in: query
        name: limit
        schema:
          default: 200
          type: integer
      - description: This filter is for the index or initial index of the set(page)
          being requested. If the index goes out of the bounds of the total set count
          then no data will be returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: This filter indicates whether the reservation is Pre-Registered
          for Internet Check-In or not. Data fetched is for 30 days ahead of business
          date.
        in: query
        name: preRegistered
        schema:
          type: boolean
      - description: This filter is for the date of arrival of reservation.
        in: query
        name: arrivalDate
        schema:
          format: date
          type: string
      - description: This filter is for the date of departure of reservation.
        in: query
        name: departureDate
        schema:
          format: date
          type: string
      - description: This filter is for the business date when reservation(s) was
          created in the system.
        in: query
        name: createDateTime
        schema:
          format: date
          type: string
      - description: This filter is for the date when reservation(s) was cancelled.
        in: query
        name: cancelledOn
        schema:
          format: date
          type: string
      - description: This filter is for the date when reservation(s) folio was closed.
        in: query
        name: folioClosedOn
        schema:
          format: date
          type: string
      - description: This filter looks up reservations with this last Name. Data fetched
          is for +-2 business date only when passed alone.
        in: query
        name: lastName
        schema:
          type: string
      - description: This filter is ID of the company used for the reservation. Data
          fetched is for +-2 business date only when passed alone.
        in: query
        name: companyId
        schema:
          type: number
      - description: This filter is ID of the guest.
        in: query
        name: guestNameId
        schema:
          type: number
      - description: This filter is computed reservation status of the reservation(s).
        in: query
        name: reservationStatus
        schema:
          enum:
          - Cancelled
          - CheckedOut
          - CheckedIn
          - DueIn
          - DueOut
          - InHouse
          - NoShow
          - WaitList
          type: string
      - description: This filter is ID of confirmation for the reservation.
        in: query
        name: confirmationNumber
        schema:
          type: string
      - description: This filter is ID of external reference for the reservation.
        in: query
        name: externalReferenceNumber
        schema:
          type: string
      - description: This filter is ID of cancellation for the reservation.
        in: query
        name: cancellationNumber
        schema:
          type: string
      - description: This filter is used for looking up reservations with this membership
          number. Last Name is required along with membership number to filter the
          data.
        in: query
        name: membershipNumber
        schema:
          type: string
      - description: This filter is unique identifier of the registration card number.
          Last Name is required along with registration card number to filter the
          data.
        in: query
        name: registeredCardNumber
        schema:
          type: string
      - description: This filter checks reservations with balance amount greater than
          or equal to this amount. Departure date is required along with balance to
          filter the data.
        in: query
        name: balance
        schema:
          type: number
      - description: This filter is for room number.
        in: query
        name: roomId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsSummary'
          description: Response that contains fetched reservation's delivery history.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get brief summary for Reservations
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/validations:
    put:
      description: "Use this API to validate details of a reservation that you are\
        \ about to create or modify. Elements to be validated will depend on the instructions\
        \ provided e.g. StayDates, Packages, Shares etc. Use of this api will not\
        \ change any data on the reservation.<p><strong>OperationId:</strong>putValidateReservationChanges</p>"
      operationId: putValidateReservationChanges
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putValidateReservationChanges_request'
        description: Request to validate reservation changes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/validateReservationChangesDetails'
          description: Response for validating reservation changes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate Reservation Before Creating or Applying Changes
      tags:
      - Reservation
      x-codegen-request-body-name: validateReservationChanges
  /hotels/{hotelId}/reservations/{reservationIdtoShare}/share:
    get:
      description: Fetch the reservation that can be shared with an existing reservation.
        <p><strong>OperationId:</strong>getReservationsToShareByReservationId</p>
        <p>The maximum allowable limit for this API is <strong>100</strong>.</p>
      operationId: getReservationsToShareByReservationId
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationIdtoShare
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Free form text field for searching all reservation fields
        in: query
        name: superSearch
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationGuestId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationGuestIdType
        schema:
          type: string
      - description: Membership ID criteria.
        in: query
        name: membershipId
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevel
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: Room number
        in: query
        name: roomId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: cancellationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          default: "[\"External\"]"
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: confirmationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Travel Agent Record Locators List.
        explode: true
        in: query
        name: taRecordLocatorList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Reservation status list for reservations search.
        explode: true
        in: query
        name: reservationStatuses
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Name of the group of Linked Reservations to be searched.
        in: query
        name: linkedName
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: Instruction to fetch whether the room was assigned/upgraded by
          AI. This will also include Reservation instruction.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Comments
            - GuestComments
            - Packages
            - InventoryItems
            - ReservationPaymentMethods
            - RoutingInstructions
            - Preferences
            - Memberships
            - Alerts
            - Traces
            - ConfirmationLetters
            - CallHistory
            - FixedCharges
            - GuestMessages
            - ReservationPolicies
            - Indicators
            - LinkedReservations
            - RevenuesAndBalances
            - GuestLastStay
            - ECoupons
            - TrackItItems
            - TotalCostOfStay
            - ReservationAwards
            - WebRegistrationCards
            - ServiceRequests
            - ReservationActivities
            - ScheduledActivities
            - PrepaidCards
            - Shares
            - Attachments
            - Locators
            - ProfileAwards
            - TransactionDiversions
            - Tickets
            - GuestMemberships
            - ECertificates
            - UpsellInfo
            - RoomAssignedByAI
            - CustomNameValue
            - CustomChargeExemptions
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchReservations'
          description: "Response object to the Fetch UpgradeEligibilityReservations\
            \ Request operation. Based on the criteria, reservation information is\
            \ returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationsToShareByReservationId not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservations to share by Reservation id
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}:
    delete:
      description: This API will delete only an on hold (in-session) reservation.<p><strong>OperationId:</strong>deleteOnHoldReservation</p>
      operationId: deleteOnHoldReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is to delete only an on hold (in-session) reservation.
        in: path
        name: reservationId
        required: true
        schema:
          type: number
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Reservation by resort
      tags:
      - Reservation
    get:
      description: "Use this API to retrieve a reservation&apos;s detail such as guest&apos;s\
        \ stay, arrival and departure dates, transportation, room and rate information,\
        \ preferences, packages, and more using OPERA&apos;s reservationId.<p><strong>OperationId:</strong>getReservation</p>"
      operationId: getReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Instruction on which of the reservation's elements are to be\
          \ returned e.g. DailySummary will return summarized information for each\
          \ day of the reservation. Instructions are cumulative i.e. if multiple instructions\
          \ are sent in a request, then the combined reservation elements would be\
          \ returned, elements will not be duplicated in the response."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Comments
            - ReservationMembershipAwards
            - GuestComments
            - Packages
            - TotalCostOfStay
            - InventoryItems
            - ReservationPaymentMethods
            - RoutingInstructions
            - Preferences
            - Memberships
            - Alerts
            - Traces
            - ConfirmationLetters
            - CallHistory
            - FixedCharges
            - GuestMessages
            - ReservationPolicies
            - Indicators
            - LinkedReservations
            - RevenuesAndBalances
            - GuestLastStay
            - ECoupons
            - TrackItItems
            - ReservationAwards
            - WebRegistrationCards
            - ReservationActivities
            - ScheduledActivities
            - PrepaidCards
            - Shares
            - Attachments
            - Locators
            - ProfileAwards
            - TransactionDiversions
            - Tickets
            - GuestMemberships
            - ECertificates
            - UpsellInfo
            - RoomAssignedByAI
            - AutoCheckInRoomType
            - Keys
            - AccompanyingGuestProfile
            - AccompanyingGuestMembership
            - AccompanyingGuestRelationship
            - Voucher
            - ScheduledRoomMoves
            - DailySummary
            - RateInfoDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether the Enrollment is in progress or not
          for the Profile associated with this Reservation.
        explode: true
        in: query
        name: allowedActions
        schema:
          items:
            enum:
            - Cancel
            - Move
            - PreCharge
            - PostCharge
            - FacilitySchedule
            - Upsell
            - PreCheckIn
            - PostToNoShowCancel
            - NoShow
            - NameChange
            - Discount
            - HouseKeeping
            - EnrollToPrimaryMembership
            - EnrollInProgress
            - MemberAwardAttached
            - UpgradeAwardAttached
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Marks the reservation as recently accessed.
        in: query
        name: markAsRecentlyAccessed
        schema:
          type: boolean
      - description: Flag indicating whether to fetch the in-session reservation.
        in: query
        name: includeInSession
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservation'
            application/json:
              example:
                reservations:
                  reservation:
                  - reservationIdList:
                    - id: "571062"
                      type: Reservation
                    - id: "813595"
                      type: Confirmation
                    roomStay:
                      arrivalDate: 2020-01-13
                      departureDate: 2020-01-14
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-01-13
                        reservationExpectedDepartureTime: 2020-01-14
                      guarantee:
                        guaranteeCode: 6PM
                        shortDescription: 6pm Hold
                    reservationGuests:
                    - profileInfo:
                        profileIdList:
                        - id: "687128"
                          type: Profile
                        profile:
                          customer:
                            personName:
                            - givenName: Jennifer
                              surname: Clarke
                              nameType: Primary
                      primary: true
                    comments:
                    - comment:
                        text:
                          value: This is a sample reservation comment
                        notificationLocation: GEN
                        type: RESERVATION
                        internal: false
                        createDateTime: 2020-01-28 17:22:35.0
                        creatorId: BEN@HOTEL1
                        lastModifyDateTime: 2020-01-28 17:22:35.0
                        lastModifierId: BEN@HOTEL1
                      id: "113803"
                      type: Comment
                    - comment:
                        text:
                          value: Cashier Comment will go here
                        commentTitle: Cashier Comment
                        notificationLocation: PROPHOTEL1
                        type: CASHIER
                        internal: false
                        createDateTime: 2020-01-28 17:23:38.0
                        creatorId: BEN@HOTEL1
                        lastModifyDateTime: 2020-01-28 17:27:51.0
                        lastModifierId: BEN@HOTEL1
                      id: "113804"
                      type: Comment
                    hotelId: HOTEL1
                    reservationStatus: Reserved
                    createDateTime: 2020-01-28 14:33:54.0
                    preRegistered: false
                    allowMobileCheckout: false
          description: Return object to the request for information regarding a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Reservation not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get reservation by ID
      tags:
      - Reservation
    put:
      description: "Use this to update an existing reservation for a hotel, such as\
        \ adding comments, changing the number of guests.   There are many fields\
        \ in putReservation defined by ListOfValues; ensure you have reviewed ListOfValues\
        \ APIs in order successfully to use putReservation. <p><strong>OperationId:</strong>putReservation</p>"
      operationId: putReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putReservation_request'
        description: Request method to change a reservations information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeReservationDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Reservation by ID
      tags:
      - Reservation
      x-codegen-request-body-name: changeReservation
  /hotels/{hotelId}/reservations/{reservationId}/addOnReservationPackages:
    put:
      description: "This API will allow you to update Add On (Sell Separate) packages\
        \ on a reservation. Note: this API works as a full overlay for Reservation's\
        \ Add On Packages.<p><strong>OperationId:</strong>putAddOnReservationPackages</p>"
      operationId: putAddOnReservationPackages
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          type: number
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationAddOnPackagesType'
        description: Request object to overlay addon packages on an existing reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/addOnReservationPackagesType'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Add On (Sell Separate) packages on a reservation.
      tags:
      - Reservation
      x-codegen-request-body-name: reservationAddOnPackages
  /hotels/{hotelId}/reservations/{reservationId}/alerts:
    get:
      description: Get the alert notices including global alerts for a reservation.
        <p><strong>OperationId:</strong>getAlertNotices</p>
      operationId: getAlertNotices
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: alertArea
        schema:
          enum:
          - CheckIn
          - CheckOut
          - Reservation
          - Billing
          - InHouse
          type: string
      - description: Determines whether to fetch Global Alert Notices or Welcome Offer
          Alert Notice.
        in: query
        name: welcomeOffer
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/alerts'
          description: "Response with the fetched alerts, includes global alerts,\
            \ notes and undelivered guest messages."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AlertNotices not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Alert Notices
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/attachments:
    get:
      description: Get Reservation attachments <p><strong>OperationId:</strong>getReservationAttachments</p>
      operationId: getReservationAttachments
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicator to retrieve e-Signed registration card attachments.
        in: query
        name: webRegistrationCard
        schema:
          type: boolean
      - description: "File name used to filter final list of attachments. For example,\
          \ Document.txt."
        in: query
        name: attachedFileName
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Description used to filter final list of attachments. For example,\
          \ Offical guest ID. (This parameter does not require wildcard characters\
          \ like * or % )."
        in: query
        name: description
        schema:
          maxLength: 100
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationAttachments'
          description: Return object to the request for information regarding reservation
            attachments.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationAttachments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation attachments
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/attachments/{attachmentId}:
    delete:
      description: Delete attachments from a Reservation. <p><strong>OperationId:</strong>deleteReservationAttachment</p>
      operationId: deleteReservationAttachment
      parameters:
      - description: Unique Id of the attachment to be deleted.
        in: path
        name: attachmentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Reservation attachments
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/breakshares/action/validate:
    put:
      description: This API performs a validation before separating share reservations.
        <p><strong>OperationId:</strong>putBreakShareValidations</p>
      operationId: putBreakShareValidations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/breakShareValidations'
        description: Request for Break Share operation validations. This request should
          be done prior to the actual Break Share operation request. Based on the
          validations returned from this request the appropriate parameters can be
          returned in the actual break share request.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/breakShareValidationsDetails'
          description: Response for the Break Share Validation request. This returns
            all validation messages for the operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate before breaking a share Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: breakShareValidations
  /hotels/{hotelId}/reservations/{reservationId}/calls:
    get:
      description: Get the Reservation Call History <p><strong>OperationId:</strong>getCallHistory</p>
      operationId: getCallHistory
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/callHistory'
          description: Response that contains either the fetched call history if was
            successful or error(s) if not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CallHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get the Reservation Call History
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/cancellationHistory:
    get:
      description: Get cancellation history for a reservation. <p><strong>OperationId:</strong>getCancellationHistory</p>
        <p>This API allows a time span of <strong>30</strong> days.</p>
      operationId: getCancellationHistory
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: hotelName
        schema:
          type: string
      - in: query
        name: roomStayStartDate
        schema:
          format: date
          type: string
      - in: query
        name: roomStayEndDate
        schema:
          format: date
          type: string
      - in: query
        name: roomStayDuration
        schema:
          type: string
      - description: Room class code
        in: query
        name: roomClass
        schema:
          type: string
      - description: Room type code
        in: query
        name: roomType
        schema:
          type: string
      - description: Room Id
        in: query
        name: numberOfRooms
        schema:
          type: integer
      - description: Room Id
        in: query
        name: roomId
        schema:
          type: string
      - description: Rate plan code
        in: query
        name: ratePlanCode
        schema:
          type: string
      - description: This is the HotelCode of the Block.
        in: query
        name: reservationBlockHotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationBlockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationBlockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The Name of the block that is attached to the reservation.
        in: query
        name: blockName
        schema:
          type: string
      - description: Booking channel code
        in: query
        name: bookingChannelCode
        schema:
          type: string
      - description: Party code
        in: query
        name: linkCode
        schema:
          type: string
      - description: Guarantee Code.
        in: query
        name: onHold
        schema:
          type: boolean
      - description: The account identification number for this particular member
          in this particular program.
        in: query
        name: membershipAccountId
        schema:
          type: string
      - description: "The code or name of the bonus program. BonusCode can be used\
          \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
        in: query
        name: membershipBonusCode
        schema:
          type: string
      - description: "The code or name of the membership level and indicates the level\
          \ of membership (Gold Club, Platinum member, etc.). This is same as the\
          \ BonusCode."
        in: query
        name: membershipLevel
        schema:
          type: string
      - description: Membership ID (Unique ID from the memberships table).
        in: query
        name: membershipId
        schema:
          type: number
      - description: Guest's last stay date.
        in: query
        name: lastStayDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cancellationHistory'
          description: Response object to the request to retrieve cancellation history
            for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CancellationHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get cancellation history
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/cancellationPolicies:
    delete:
      description: Delete an existing cancellation policy for a specific hotel. <p><strong>OperationId:</strong>deleteCancellationPolicy</p>
      operationId: deleteCancellationPolicy
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: policyId
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Cancellation policy
      tags:
      - Reservation
    post:
      description: Create a new cancellation policy for a property. <p><strong>OperationId:</strong>postCancellationPolicy</p>
      operationId: postCancellationPolicy
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationCancellationPolicyCriteria'
        description: Request object that holds the details of Cancellation Policy
          to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a Cancellation policy
      tags:
      - Reservation
      x-codegen-request-body-name: reservationCancellationPolicyCriteria
    put:
      description: Compute the cancellation policies for a reservation. <p><strong>OperationId:</strong>putComputeCancellationPolicies</p>
      operationId: putComputeCancellationPolicies
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/computeCancellationPolicies'
        description: "Operation to fetch the details for cancellation rules, applicable\
          \ to a reservation. Based on the criteria the rule information can be retrieved\
          \ for all cancellation rules or for a particular rule."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/computeCancellationPoliciesDetails'
          description: Response for the cancellation rules configuration request.
            Contains computed details for the cancellation rules requested.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Compute the cancellation policies
      tags:
      - Reservation
      x-codegen-request-body-name: computeCancellationPolicies
  /hotels/{hotelId}/reservations/{reservationId}/cancellations:
    post:
      description: Use this if a guest would like to cancel their reservation.  You
        will receive a cancellation number in the response. <p><strong>OperationId:</strong>postCancelReservation</p>
      operationId: postCancelReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCancelReservation_request'
        description: Request object for canceling reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cancelReservationDetails'
          description: Response object for the request to cancel reservations. Response
            contains the reservations which were successfully canceled.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Cancel Reservation by ID
      tags:
      - Reservation
      x-codegen-request-body-name: cancelReservation
    put:
      description: Use this API to reinstate a cancelled reservation. <p><strong>OperationId:</strong>putReinstateReservation</p>
      operationId: putReinstateReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reinstateReservation'
        description: Overriding the validation check will log the supposed errors
          in the warnings log if they would fail.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reinstateReservationDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reinstate a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reinstateReservation
  /hotels/{hotelId}/reservations/{reservationId}/certificates:
    delete:
      description: Remove a certification from a reservation. <p><strong>OperationId:</strong>deleteReservationCertificate</p>
      operationId: deleteReservationCertificate
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Detach Certificate
      tags:
      - Reservation
    post:
      description: Attach a certificate to Reservation. <p><strong>OperationId:</strong>postReservationCertificate</p>
      operationId: postReservationCertificate
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/attachCertificate'
        description: Request to attach certificate to the Reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Attach Certificate
      tags:
      - Reservation
      x-codegen-request-body-name: attachCertificate
  /hotels/{hotelId}/reservations/{reservationId}/combineshares/action/validate:
    put:
      description: Validate before combining Reservations for shares. <p><strong>OperationId:</strong>putCombineShareValidations</p>
      operationId: putCombineShareValidations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/combineShareValidations'
        description: "Request to validate a combine share operation. This would be\
          \ done prior to the actual Combine Share operation. Based on the validations\
          \ returned from this request, the appropriate values can be returned to\
          \ the Combine Share operation request."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/combineShareValidationsDetails'
          description: Response for the Combine Share Validation request. This returns
            all validation messages which may be required for the combine share operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Combine Share Validations
      tags:
      - Reservation
      x-codegen-request-body-name: combineShareValidations
  /hotels/{hotelId}/reservations/{reservationId}/copy:
    post:
      description: Copy a Reservation. <p><strong>OperationId:</strong>postReservationCopy</p>
      operationId: postReservationCopy
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyReservation'
        description: Request for copying a reservation's information as a template
          for a new reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: copyReservation
  /hotels/{hotelId}/reservations/{reservationId}/dailyRates/action/validate:
    put:
      description: Validate daily rate details change. <p><strong>OperationId:</strong>putReservationDailyRateDetailValidation</p>
      operationId: putReservationDailyRateDetailValidation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationDailyRateDetail'
        description: Request for validating Daily Rate Details modifications.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationDailyRateDetailDetails'
          description: Response after validating the changes for Daily Rate Details
            modifications.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate daily rate details change
      tags:
      - Reservation
      x-codegen-request-body-name: reservationDailyRateDetail
  /hotels/{hotelId}/reservations/{reservationId}/depositPolicies:
    delete:
      description: Delete deposit policy for a property.   <p><strong>OperationId:</strong>deleteDepositPolicy</p>
      operationId: deleteDepositPolicy
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: policyId
        required: true
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete deposit policy
      tags:
      - Reservation
    post:
      description: Create deposit policy for a property. This policy can then be used
        for reservations. <p><strong>OperationId:</strong>postDepositPolicy</p>
      operationId: postDepositPolicy
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationDepositPolicyCriteria'
        description: Request object that holds the details of hotel level Deposit
          Policy to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create deposit policy
      tags:
      - Reservation
      x-codegen-request-body-name: reservationDepositPolicyCriteria
    put:
      description: Computes the deposit policies. <p><strong>OperationId:</strong>putComputeDepositPolicies</p>
      operationId: putComputeDepositPolicies
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/computeDepositPolicies'
        description: "Operation to fetch the details for deposit rules, applicable\
          \ to a reservation. Based on the criteria the rule information can be retrieved\
          \ for all deposit rules or for a particular rule."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/computeDepositPoliciesDetails'
          description: Response for the deposit rules configuration request. Contains
            computed details for the deposit rules requested.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Computes the deposit policies
      tags:
      - Reservation
      x-codegen-request-body-name: computeDepositPolicies
  /hotels/{hotelId}/reservations/{reservationId}/eCoupons:
    delete:
      description: Delete the Reservation Ecoupons. <p><strong>OperationId:</strong>deleteECoupons</p>
      operationId: deleteECoupons
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: eCouponId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Reservation ECoupons
      tags:
      - Reservation
    get:
      description: Get the Reservation Ecoupons. <p><strong>OperationId:</strong>getECoupons</p>
      operationId: getECoupons
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eCoupons'
          description: Response object for fetching the eCoupons attached to Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ECoupons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation Ecoupons
      tags:
      - Reservation
    post:
      description: Create the Reservation Ecoupons. <p><strong>OperationId:</strong>postECoupons</p>
      operationId: postECoupons
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCouponsInfo'
        description: Request object for creating new eCoupons.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Reservation ECoupon
      tags:
      - Reservation
      x-codegen-request-body-name: eCouponsInfo
    put:
      description: Change the Reservation Ecoupons. <p><strong>OperationId:</strong>putECoupons</p>
      operationId: putECoupons
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eCouponsInfo'
        description: Request object for changing the existing eCoupons attached to
          Reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eCoupons'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Reservation Ecoupon
      tags:
      - Reservation
      x-codegen-request-body-name: eCouponsInfo
  /hotels/{hotelId}/reservations/{reservationId}/excludedPreferences:
    get:
      description: Get the Reservation excluded preferences. <p><strong>OperationId:</strong>getReservationExcludedPreferences</p>
      operationId: getReservationExcludedPreferences
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The preference type for which the excluded preference search
          will be performed.
        in: query
        name: preferenceType
        schema:
          type: string
      - description: The preference code for which the excluded preference search
          will be performed.
        in: query
        name: preferenceCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationExcludedPreferences'
          description: Response for the excluded preferences request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationExcludedPreferences not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Reservation excluded preferences
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/guestLocators:
    get:
      description: Get the Guest locater for a Reservation. <p><strong>OperationId:</strong>getReservationLocators</p>
      operationId: getReservationLocators
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationLocators'
          description: Response object response to retrieve Guest Messages for a Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationLocators not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Reservation Guest Locator
      tags:
      - Reservation
    post:
      description: Create Guest Locater for a list of Reservations. <p><strong>OperationId:</strong>postReservationLocators</p>
      operationId: postReservationLocators
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationLocatorsDetailsInfo'
        description: Request object for creating new Notes for the hotels
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationLocatorsDetails'
          description: Response object for creating new Notes for the hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Reservation Guest Locator
      tags:
      - Reservation
      x-codegen-request-body-name: reservationLocatorsDetailsInfo
  /hotels/{hotelId}/reservations/{reservationId}/guestLocators/{locatorId}:
    delete:
      description: Delete a Guest Locater for a Reservation. <p><strong>OperationId:</strong>deleteReservationLocators</p>
      operationId: deleteReservationLocators
      parameters:
      - in: path
        name: locatorId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Reservation Locators
      tags:
      - Reservation
    put:
      description: Change a list of Guest Locater for a Reservation. <p><strong>OperationId:</strong>changeReservationLocators</p>
      operationId: changeReservationLocators
      parameters:
      - in: path
        name: locatorId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationLocatorsInfo'
        description: Request object for changing hotel Notes for hotels.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationLocatorsStatus'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Reservation Guest Locators
      tags:
      - Reservation
      x-codegen-request-body-name: reservationLocatorsInfo
  /hotels/{hotelId}/reservations/{reservationId}/guestMessages:
    post:
      description: Create guest message for a guest reservation. <p><strong>OperationId:</strong>postGuestMessages</p>
      operationId: postGuestMessages
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createGuestMessages'
        description: Request object for creating a new guest message.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guestMessagesDetails'
          description: Response object to the request to create Guest Messages for
            a Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create guest messages
      tags:
      - Reservation
      x-codegen-request-body-name: createGuestMessages
    put:
      description: Change guest messages for Reservation. <p><strong>OperationId:</strong>putResvGuestMessages</p>
      operationId: putResvGuestMessages
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeResvGuestMessages'
        description: Request object for updating the Guest Messages for a Reservation
          Workspace.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeResvGuestMessages'
          description: Response object to the request to update Guest Messages for
            a Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Reservation Guest Messages
      tags:
      - Reservation
      x-codegen-request-body-name: changeResvGuestMessages
  /hotels/{hotelId}/reservations/{reservationId}/guestMessages/{guestMessageId}:
    delete:
      description: Delete guest messages from a reservation. <p><strong>OperationId:</strong>deleteGuestMessages</p>
      operationId: deleteGuestMessages
      parameters:
      - description: Guest Message Id
        in: path
        name: guestMessageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete guest messages
      tags:
      - Reservation
    put:
      description: Change guest Message on a reservation. <p><strong>OperationId:</strong>putGuestMessages</p>
      operationId: putGuestMessages
      parameters:
      - description: Guest Message Id
        in: path
        name: guestMessageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeGuestMessages'
        description: Request object for modifying an existing guest message.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeGuestMessages'
          description: Response object to the request to update Guest Messages for
            a Reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change guest Message  '
      tags:
      - Reservation
      x-codegen-request-body-name: changeGuestMessages
  /hotels/{hotelId}/reservations/{reservationId}/header/action/validate:
    put:
      description: Validate Reservation header change. <p><strong>OperationId:</strong>putReservationHeaderValidation</p>
      operationId: putReservationHeaderValidation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationDailyRateDetail'
        description: Request for validating Reservation Header modifications.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationDailyRateDetailDetails'
          description: Response after validating the changes for the reservation header
            modifications.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate Reservation header change
      tags:
      - Reservation
      x-codegen-request-body-name: reservationDailyRateDetail
  /hotels/{hotelId}/reservations/{reservationId}/inventoryItems:
    delete:
      description: Delete the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>deleteReservedInventoryItems</p>
      operationId: deleteReservedInventoryItems
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Reserved Inventory Items
      tags:
      - Reservation
    get:
      description: Get the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>getReservedInventoryItems</p>
      operationId: getReservedInventoryItems
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/inventoryItems'
          description: Return object to the request for information regarding inventory
            Items reserved for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservedInventoryItems not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Reserved Inventory Items '
      tags:
      - Reservation
    post:
      description: Reserve Reservation inventory items. <p><strong>OperationId:</strong>postReserveInventoryItems</p>
      operationId: postReserveInventoryItems
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reserveInventoryItems'
        description: Request object to reserve inventory Items for a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reserve Reservation inventory items
      tags:
      - Reservation
      x-codegen-request-body-name: reserveInventoryItems
    put:
      description: Change the Inventory Items reserved for the Reservation. <p><strong>OperationId:</strong>putReservedInventoryItems</p>
      operationId: putReservedInventoryItems
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservedInventoryItemsInfo'
        description: Request object to change the reserved inventory Items for a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservedInventoryItemsInfo'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change reserved Inventory Items '
      tags:
      - Reservation
      x-codegen-request-body-name: reservedInventoryItemsInfo
  /hotels/{hotelId}/reservations/{reservationId}/linked:
    get:
      description: Get linked Reservations for given Reservation. <p><strong>OperationId:</strong>getLinkedReservations</p>
      operationId: getLinkedReservations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: additionalReservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: additionalReservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Instruction to fetch whether the room was assigned/upgraded by
          AI. This will also include Reservation instruction.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Comments
            - GuestComments
            - Packages
            - InventoryItems
            - ReservationPaymentMethods
            - RoutingInstructions
            - Preferences
            - Memberships
            - Alerts
            - Traces
            - ConfirmationLetters
            - CallHistory
            - FixedCharges
            - GuestMessages
            - ReservationPolicies
            - Indicators
            - LinkedReservations
            - RevenuesAndBalances
            - GuestLastStay
            - ECoupons
            - TrackItItems
            - TotalCostOfStay
            - ReservationAwards
            - WebRegistrationCards
            - ServiceRequests
            - ReservationActivities
            - ScheduledActivities
            - PrepaidCards
            - Shares
            - Attachments
            - Locators
            - ProfileAwards
            - TransactionDiversions
            - Tickets
            - GuestMemberships
            - ECertificates
            - UpsellInfo
            - RoomAssignedByAI
            - CustomNameValue
            - CustomChargeExemptions
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedHotelReservations'
          description: Return object for retrieving linked reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LinkedReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get linked Reservations '
      tags:
      - Reservation
    put:
      description: Use this API to update an existing linked reservation for given
        reservation name id and hotel code. <p><strong>OperationId:</strong>putLinkedReservation</p>
      operationId: putLinkedReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeLinkedReservationType'
        description: Request object to change a linked reservation information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Linked Reservation by ID
      tags:
      - Reservation
      x-codegen-request-body-name: changeLinkedReservation
  /hotels/{hotelId}/reservations/{reservationId}/linkedSummary:
    get:
      description: Get Reservation summary for linked Reservation of given Reservation
        id. <p><strong>OperationId:</strong>getLinkedReservationsSummary</p>
      operationId: getLinkedReservationsSummary
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: additionalReservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: additionalReservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates that only reservations marked as Back to Back should
          be expected in the result. Returned linked Back to Back reservations will
          belong to the same group of linked Back to Back reservations as the specified
          reservation with the given reservation name id and hotel code.
        in: query
        name: backToBackOnly
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedReservationsInfo'
          description: Return object for retrieving linked reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LinkedReservationsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation summary for linked Reservation
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/locks:
    put:
      description: Acquire Reservation Lock. <p><strong>OperationId:</strong>putAcquireReservationLock</p>
      operationId: putAcquireReservationLock
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationLock'
        description: Operation for requesting a lock on a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationLockDetails'
          description: This response will indicate whether the requested lock has
            been granted or some other user owns the lock.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Acquire Reservation Lock
      tags:
      - Reservation
      x-codegen-request-body-name: reservationLock
  /hotels/{hotelId}/reservations/{reservationId}/locks/break:
    post:
      description: Break Reservation lock on a reservation. <p><strong>OperationId:</strong>postBreakReservationLock</p>
      operationId: postBreakReservationLock
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationLock'
        description: Operation for forcefully breaking a reservation lock This operation
          is subject to user permissions.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Break Reservation lock
      tags:
      - Reservation
      x-codegen-request-body-name: reservationLock
  /hotels/{hotelId}/reservations/{reservationId}/masterAccount:
    delete:
      description: Cancel Master account on a reservation. <p><strong>OperationId:</strong>deleteMasterAccount</p>
      operationId: deleteMasterAccount
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Cancel Master Account
      tags:
      - Reservation
    post:
      description: Create a master account for a reservation. <p><strong>OperationId:</strong>postMasterAccount</p>
      operationId: postMasterAccount
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/masterAccount'
        description: Request for CreateMasterAccount operation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a Master Account
      tags:
      - Reservation
      x-codegen-request-body-name: masterAccount
    put:
      description: Change a master account on a reservation. <p><strong>OperationId:</strong>putMasterAccount</p>
      operationId: putMasterAccount
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/masterAccount'
        description: Request for ChangeMasterAccount operation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/masterAccountSummary'
          description: Response for ChangeMasterAccount operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a Master Account
      tags:
      - Reservation
      x-codegen-request-body-name: masterAccount
  /hotels/{hotelId}/reservations/{reservationId}/memberships:
    delete:
      description: Delete a membership from an existing reservation. <p><strong>OperationId:</strong>deleteReservationMembership</p>
      operationId: deleteReservationMembership
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Reservation membership
      tags:
      - Reservation
    post:
      description: Add a membership to an existing reservation. <p><strong>OperationId:</strong>postReservationMembership</p>
      operationId: postReservationMembership
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationMembership'
        description: Method to create a reservation membership on an existing reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a Reservation membership
      tags:
      - Reservation
      x-codegen-request-body-name: reservationMembership
  /hotels/{hotelId}/reservations/{reservationId}/mergeReservations:
    put:
      description: Use this API to merge multiple reservations. <p><strong>OperationId:</strong>mergeReservations</p>
      operationId: mergeReservations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationsToMerge'
        description: Request method to Merge reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mergeReservationsStatus'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Merge multiple Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: reservationsToMerge
  /hotels/{hotelId}/reservations/{reservationId}/move:
    put:
      description: This API can be used to move a reservation to a different hotel.
        <p><strong>OperationId:</strong>putReservationHotelMove</p>
      operationId: putReservationHotelMove
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/moveReservationHotel'
        description: Request for moving a reservation and its valid sharers to a different
          hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/moveReservationHotelDetails'
          description: "This API will potentially remove the following information\
            \ to a moved reservation: - Routing Instructions - All routing information\
            \ will have to be configured in the new hotel. - Packages - All packages\
            \ will need to be re-configured, if it exist, in the new hotel. - Imperfect\
            \ Share - An imperfect share was requested to be moved and has been ignored."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Move the Reservation '
      tags:
      - Reservation
      x-codegen-request-body-name: moveReservationHotel
  /hotels/{hotelId}/reservations/{reservationId}/packages:
    delete:
      description: This API will allow you to delete packages from a reservation.
        <p><strong>OperationId:</strong>deleteReservationPackage</p>
      operationId: deleteReservationPackage
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a package from a Reservation
      tags:
      - Reservation
    get:
      description: Get the package availability for a hotel code and reservation id
        <p><strong>OperationId:</strong>getPackage</p>
      operationId: getPackage
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: postingRhythm
        schema:
          type: string
      - in: query
        name: productCode
        required: true
        schema:
          type: string
      - in: query
        name: ratePlanCode
        schema:
          type: string
      - in: query
        name: reservationTimeSpanStartDate
        schema:
          format: date
          type: string
      - in: query
        name: reservationTimeSpanEndDate
        schema:
          format: date
          type: string
      - in: query
        name: packageTimeSpanStartDate
        schema:
          format: date
          type: string
      - in: query
        name: packageTimeSpanEndDate
        schema:
          format: date
          type: string
      - in: query
        name: packageQuantity
        schema:
          type: integer
      - in: query
        name: packageExcludedQuantity
        schema:
          type: integer
      - description: Defines the number of Adults.
        in: query
        name: reservationAdults
        schema:
          type: integer
      - description: Defines the number of Children.
        in: query
        name: reservationChildren
        schema:
          type: integer
      - description: Simple type for package instructions that can be used in requests
          for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Primary
            - Transaction
            - Classification
            - Schedule
            - InventoryItems
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packages'
          description: "Response to fetch package availability with the data, success\
            \ and warnings or errors."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Package not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Package
      tags:
      - Reservation
    post:
      description: This API will allow you to add packages to a reservation. <p><strong>OperationId:</strong>postReservationPackage</p>
      operationId: postReservationPackage
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPackagesInfo'
        description: Request method to attach a package to an existing reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add a package to a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPackagesInfo
    put:
      description: This API will allow you to update existing packages on a reservation.
        <p><strong>OperationId:</strong>putReservationPackage</p>
      operationId: putReservationPackage
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPackagesInfo'
        description: "Method to change/modify a reservation package on an existing\
          \ reservation. The main information required are the Package Code, Resort,\
          \ RateCode(if applicable), Original Begin Date(if applicable) and Original\
          \ End Date(if applicable). These are the criteria by which the package will\
          \ be identified in order to be modified/changed. The elements that can be\
          \ changed are the Quantity, Excluded Quantity, Unit Price and Unit Allowance\
          \ if existing. For RateCode packages, the begin date and end date cannot\
          \ be changed. For non-RateCode packages, the begin date or end date can\
          \ be changed."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPackagesInfo'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a package on a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPackagesInfo
  /hotels/{hotelId}/reservations/{reservationId}/payeeSharer:
    put:
      description: Use this API to mark or un mark a shared reservation as the payee
        sharer for the group of shared reservations. <p><strong>OperationId:</strong>putPayeeSharer</p>
      operationId: putPayeeSharer
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changePayeeSharerType'
        description: Request object to to mark or unmark the payee sharer information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Payee Sharer Information by ID.
      tags:
      - Reservation
      x-codegen-request-body-name: changePayeeSharer
  /hotels/{hotelId}/reservations/{reservationId}/paymentMethods:
    delete:
      description: Use this API to delete a payment method from a reservation. <p><strong>OperationId:</strong>deletePaymentMethods</p>
      operationId: deletePaymentMethods
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete a payment method '
      tags:
      - Reservation
    get:
      description: This API will return the payment method(s) that exist on a reservation.
        <p><strong>OperationId:</strong>getPaymentMethods</p>
      operationId: getPaymentMethods
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to notify the operation to also retrieve the outstanding\
          \ balance, current authorized amount and amount needed to be approved for\
          \ each folio."
        in: query
        name: includeAmounts
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPaymentMethods'
          description: Response object for the fetch payment method request. Retrieves
            the payment methods for the reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PaymentMethods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get a payment method '
      tags:
      - Reservation
    post:
      description: Use this API to add a payment method to a reservation. <p><strong>OperationId:</strong>postPaymentMethods</p>
      operationId: postPaymentMethods
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPaymentMethods'
        description: Request to create payment methods.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create a payment method '
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPaymentMethods
    put:
      description: This API will update an existing payment method on a reservation.
        <p><strong>OperationId:</strong>putPaymentMethods</p>
      operationId: putPaymentMethods
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPaymentMethods'
        description: Method to update a reservation's payment methods.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPaymentMethods'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change a payment method '
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPaymentMethods
  /hotels/{hotelId}/reservations/{reservationId}/policies:
    get:
      description: Use this API to get cancelation and deposit policies for a given
        reservation.<p><strong>OperationId:</strong>getReservationPolicies</p>
      operationId: getReservationPolicies
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A flag which instructs whether the deposit policies needs to
          be fetched.
        in: query
        name: fetchDepositPolicies
        schema:
          type: boolean
      - description: A flag which instructs whether the cancel policies needs to be
          fetched.
        in: query
        name: fetchCancellationPolicies
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPolicies'
          description: Response that contains deposit and cancellation policies attached
            with the reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationPolicies not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get reservation cancel and deposit policies
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/preCheckIn:
    delete:
      description: This will cancel or rather revert the pre-checkin action for a
        guest's reservation. The reservation will return to DUEIN status. <p><strong>OperationId:</strong>deletePreCheckInReservation</p>
      operationId: deletePreCheckInReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: resvIDExtension
        schema:
          type: integer
      - description: The time at which the guest arrives at the hotel.
        in: query
        name: arrivalTime
        schema:
          format: date-time
          type: string
      - description: Room Number to be assigned to the reservation.
        in: query
        name: roomNumber
        schema:
          type: string
      - description: Currency code preferred by guest.
        in: query
        name: guestPreferredCurrency
        schema:
          type: string
      - description: Attribute AllowMobileViewFolio is set to true when the reservation
          is eligible for viewing folio using mobile device.
        in: query
        name: allowMobileViewFolio
        schema:
          type: boolean
      - explode: true
        in: query
        name: paymentMethodDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: paymentMethodFolioView
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: paymentMethod
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: cardIdIDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdIDContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: cardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: authorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeeded
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: authorizationRuleCode
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: authorizationRuleAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: authorizationRuleCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: authorizationRulePercent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: emailFolioID
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: emailFolioIDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: emailFolioIDContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: emailFolioIDType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: emailFolioCreateDateTime
        schema:
          format: date-time
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: emailFolioCreatorID
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailFolioEmailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFolioEmailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: emailFolioLastModifierID
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: emailFolioLastModifyDateTime
        schema:
          format: date-time
          type: string
      - description: Display Order sequence.
        in: query
        name: emailFolioOrderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: emailFolioPrimaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: emailFolioPurgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailFolioType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: emailFolioTypeDescription
        schema:
          type: string
      - in: query
        name: arrivalCarrierCode
        schema:
          type: string
      - in: query
        name: arrivalDateTime
        schema:
          format: date-time
          type: string
      - in: query
        name: arrivalStationCode
        schema:
          type: string
      - in: query
        name: arrivalTransportCode
        schema:
          type: string
      - in: query
        name: arrivalTransportationReqd
        schema:
          type: boolean
      - in: query
        name: arrivalType
        schema:
          type: string
      - in: query
        name: arrivalComments
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Revert a PreCheckIn Reservation
      tags:
      - Reservation
    post:
      description: This will allow you to set a reservation as a pre-registered guest.  The
        API request requires the guests confirmation number and you can optionally
        include arrival time.  The behavior of the API will be dependent upon the
        Pre-registration rules configured for the hotel in OPERA Cloud administration.
        <p><strong>OperationId:</strong>postPreCheckInReservation</p>
      operationId: postPreCheckInReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postPreCheckInReservation_request'
        description: Request to pre-register a reservation eligible for pre-registration
          and change arrival details.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Pre-Checkin a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: preCheckInReservation
  /hotels/{hotelId}/reservations/{reservationId}/preferences:
    get:
      description: You can use this API to retrieve the preferences that exist on
        a reservation. <p><strong>OperationId:</strong>getReservationPreference</p>
      operationId: getReservationPreference
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: preferenceTypeCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPreference'
          description: Response for the reservation's preferences.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationPreference not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation Preferences
      tags:
      - Reservation
    post:
      description: This API will add a preference to a Reservation.  <p><strong>OperationId:</strong>postReservationPreference</p>
      operationId: postReservationPreference
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPreferenceInfo'
        description: Method to create a reservation preference on an existing reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add a preference to a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPreferenceInfo
  /hotels/{hotelId}/reservations/{reservationId}/preferences/{preferenceCode}:
    delete:
      description: You can use this API to remove a preference that exist on a reservation.
        <p><strong>OperationId:</strong>deleteReservationPreference</p>
      operationId: deleteReservationPreference
      parameters:
      - description: Preference Code
        in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Reservation Preference
      tags:
      - Reservation
    put:
      description: You can use this API to update the preferences that exist on a
        reservation. <p><strong>OperationId:</strong>putReservationPreference</p>
      operationId: putReservationPreference
      parameters:
      - description: Preference Code
        in: path
        name: preferenceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationPreferenceInfo'
        description: Method to change a reservation preference on an existing reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPreferenceDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a Reservation Preference
      tags:
      - Reservation
      x-codegen-request-body-name: reservationPreferenceInfo
  /hotels/{hotelId}/reservations/{reservationId}/reverseDepositPolicy/{policyId}:
    post:
      description: You can use this API to reverse a deposit policy on a specified
        reservation. <p><strong>OperationId:</strong>postReverseDepositPolicy</p>
      operationId: postReverseDepositPolicy
      parameters:
      - description: Policy ID
        in: path
        name: policyId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reverseDepositPolicy'
        description: Request type to reverse deposit policy of a reservation.(This
          is applicable only when advance deposit handling is set to '17') ReverseDepositPolicy
          operation will reverse the policy by creating a new request with same opposite
          amount.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reverse a deposit policy
      tags:
      - Reservation
      x-codegen-request-body-name: reverseDepositPolicy
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions:
    delete:
      deprecated: true
      description: You can use this API to delete routing instructions from a reservation.
        <p><strong>OperationId:</strong>deleteRoutingInstructions</p>
      operationId: deleteRoutingInstructions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete routing instructions
      tags:
      - Reservation
    get:
      description: "Use this API to fetch a reservation's routing instructions. It\
        \ requires a reservation ID, which can be fetched using getReservations. <p><strong>OperationId:</strong>getRoutingInstructions</p>\
        \ <p>The maximum allowable limit for this API is <strong>20</strong>.</p>"
      operationId: getRoutingInstructions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Include the window routing instructions to the response.
        in: query
        name: includeWindowRouting
        schema:
          type: boolean
      - description: Include the room routing instructions in the response.
        in: query
        name: includeRoomRouting
        schema:
          type: boolean
      - description: Include the comp routing instructions in the response.
        in: query
        name: includeCompRouting
        schema:
          type: boolean
      - description: Include the comp routing requests in the response.
        in: query
        name: includeCompRoutingRequests
        schema:
          type: boolean
      - description: If date is included then the search result should only be valid
          for dates which includes this date.
        in: query
        name: effectiveOn
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/routingInstructions'
          description: Response object containing routing instructions for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get routing instructions
      tags:
      - Reservation
    post:
      description: "You can use this API to create routing instructions on a reservation.\
        \ It requires a reservation ID, which can be fetched using getReservations.\
        \ <p><strong>OperationId:</strong>postRoutingInstructions</p>"
      operationId: postRoutingInstructions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationRoutingCriteria'
        description: Request to create a routing instruction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create routing instructions for a reservation
      tags:
      - Reservation
      x-codegen-request-body-name: reservationRoutingCriteria
    put:
      description: Change routing instructions on an existing reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>
      operationId: putRoutingInstructions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/routingInstructionsInfo'
        description: Request when changing a routing instruction.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change routing instructions
      tags:
      - Reservation
      x-codegen-request-body-name: routingInstructionsInfo
  /hotels/{hotelId}/reservations/{reservationId}/scheduledRoomMoves/{scheduledMoveDate}:
    put:
      description: "Use this to update an existing scheduled room move for a reservation\
        \ in a hotel and for a specific date. Use this to update move comments, move\
        \ time etc. <p><strong>OperationId:</strong>putScheduledRoomMove</p>"
      operationId: putScheduledRoomMove
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property code of the reservation.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 0
          type: string
      - description: The scheduled date of room move.
        in: path
        name: scheduledMoveDate
        required: true
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/scheduledRoomMoveDetails'
        description: Request method to change a scheduled room move details.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/scheduledRoomMoveDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Scheduled Room Move Details based on reservationID and move
        date
      tags:
      - Reservation
      x-codegen-request-body-name: scheduledRoomMoveDetails
  /hotels/{hotelId}/reservations/{reservationId}/shareRateAmount:
    put:
      description: Change the share amounts of a reservation <p><strong>OperationId:</strong>putShareRateAmount</p>
      operationId: putShareRateAmount
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeShareRateAmount'
        description: "Request to change the share amount for a sharer reservation.\
          \ The amount change type can be Full, Entire or Split"
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/shareReservations'
          description: Response for the change share amount request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Share Rate Amount
      tags:
      - Reservation
      x-codegen-request-body-name: changeShareRateAmount
  /hotels/{hotelId}/reservations/{reservationId}/sharedGuestCount:
    put:
      description: Change the guest counts(adults or children) for a Sharing Reservation
        <p><strong>OperationId:</strong>putSharingGuests</p>
      operationId: putSharingGuests
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeSharingGuests'
        description: Request to change Sharing Reservations Guest Counts(adults or
          children) information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changeSharingGuests'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Sharing Guests
      tags:
      - Reservation
      x-codegen-request-body-name: changeSharingGuests
  /hotels/{hotelId}/reservations/{reservationId}/shares:
    delete:
      description: This API can be used to separate the share reservations. <p><strong>OperationId:</strong>deleteShareReservation</p>
      operationId: deleteShareReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicate to Override the Room Inventory Check if applicable.
        in: query
        name: overrideInventoryCheck
        schema:
          type: boolean
      - description: Indicate to Override the check on Maximum Room Occupancy if applicable.
        in: query
        name: overrideMaxOccupancyCheck
        schema:
          type: boolean
      - description: Indicate to Override the check on Maximum Room Occupancy if applicable.
        in: query
        name: overrideRateAvailabilityCheck
        schema:
          type: boolean
      - description: "After the break share operation, return the new list of Sharer\
          \ Reservations."
        in: query
        name: returnShareReservations
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Separate share Reservations
      tags:
      - Reservation
    get:
      description: This API can be used to retrieve the share reservations that exist
        on a reservation. <p><strong>OperationId:</strong>getShareReservations</p>
      operationId: getShareReservations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/shareReservations'
          description: Response for the fetch share reservation request. This returns
            all sharer reservations including the request reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ShareReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get share Reservations
      tags:
      - Reservation
    post:
      description: Combine share reservation for a given reservation id <p><strong>OperationId:</strong>postCombineShareReservations</p>
      operationId: postCombineShareReservations
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/combineShareReservations'
        description: Request to combine sharer reservations. This request requires
          a Reservation Name Id(Joining to) and a Joining Reservation Id
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/combineShareReservationsDetails'
          description: "Response for the combine share reservation request. Based\
            \ on the request, this will return all sharer reservations including the\
            \ request reservation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Combine Share Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: combineShareReservations
  /hotels/{hotelId}/reservations/{reservationId}/stay/action/validate:
    put:
      description: Validate overlapping stay for a reservation <p><strong>OperationId:</strong>putValidateOverlappingStay</p>
      operationId: putValidateOverlappingStay
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/overlappingStay'
        description: Request to check for overlapping stays of reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/overlappingStayDetails'
          description: Response for checking overlapping stays of reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check overlapping stay
      tags:
      - Reservation
      x-codegen-request-body-name: overlappingStay
  /hotels/{hotelId}/reservations/{reservationId}/tickets:
    delete:
      description: You can use this API to delete tickets from a reservation. <p><strong>OperationId:</strong>deleteTickets</p>
      operationId: deleteTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete tickets
      tags:
      - Reservation
    get:
      description: Get tickets for a reservation. <p><strong>OperationId:</strong>getTickets</p>
      operationId: getTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property where the tickets messages belongs to.
        in: query
        name: packageCode
        schema:
          type: string
      - description: Flag that specified if only issued tickets will be retrieved.
        in: query
        name: retrieveIssuedOnly
        schema:
          type: boolean
      - description: Flag that specified if only not issued tickets will be retrieved.
        in: query
        name: retrieveNotIssuedOnly
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/tickets'
          description: Common tickets request base type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Tickets not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get tickets
      tags:
      - Reservation
    post:
      description: Use this API to create tickets on a reservation. <p><strong>OperationId:</strong>postTickets</p>
      operationId: postTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/ticketsInfo'
        description: Common tickets request base type.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create tickets
      tags:
      - Reservation
      x-codegen-request-body-name: ticketsInfo
    put:
      description: Use this API to change tickets on a reservation. <p><strong>OperationId:</strong>putTickets</p>
      operationId: putTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/ticketsInfo'
        description: Common tickets request base type.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/tickets'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change tickets
      tags:
      - Reservation
      x-codegen-request-body-name: ticketsInfo
  /hotels/{hotelId}/reservations/{reservationId}/tickets/inquiry:
    get:
      description: You can use this API to perform a Inquiry for Reservation tickets.
        <p><strong>OperationId:</strong>getTicketsInquiry</p>
      operationId: getTicketsInquiry
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: ticketId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: ticketIdType
        schema:
          type: string
      - description: Package Code.
        explode: true
        in: query
        name: packageCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationProductId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationProductIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: ticketNumberId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: ticketNumberIdType
        schema:
          type: string
      - description: Tickets issue date.
        explode: true
        in: query
        name: ticketIssueDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Tickets comsumption date.
        explode: true
        in: query
        name: ticketConsumptionDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: The Rate Code to which tickets belong to.
        explode: true
        in: query
        name: ticketRateCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The Status Code for outbound WS call.
        explode: true
        in: query
        name: ticketStatus
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/tickets'
          description: Common tickets request base type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TicketsInquiry not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Inquiry for Reservation tickets
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/tickets/issue:
    post:
      description: You can use this API to issue Reservation tickets. <p><strong>OperationId:</strong>postIssueTickets</p>
      operationId: postIssueTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/ticketsInfo'
        description: Common tickets request base type.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Issue Reservation tickets
      tags:
      - Reservation
      x-codegen-request-body-name: ticketsInfo
  /hotels/{hotelId}/reservations/{reservationId}/tickets/refund:
    delete:
      description: You can use this API to refund Reservation tickets. <p><strong>OperationId:</strong>deleteRefundTickets</p>
      operationId: deleteRefundTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Refund Reservation tickets
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/tickets/reprint:
    get:
      description: You can use this API to reprint Reservation tickets. <p><strong>OperationId:</strong>getReprintTickets</p>
      operationId: getReprintTickets
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: ticketId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: ticketIdType
        schema:
          type: string
      - description: Package Code.
        explode: true
        in: query
        name: packageCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationProductId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationProductIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: ticketNumberId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: ticketNumberIdType
        schema:
          type: string
      - description: Tickets issue date.
        explode: true
        in: query
        name: ticketIssueDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Tickets comsumption date.
        explode: true
        in: query
        name: ticketConsumptionDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: The Rate Code to which tickets belong to.
        explode: true
        in: query
        name: ticketRateCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The Status Code for outbound WS call.
        explode: true
        in: query
        name: ticketStatus
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/tickets'
          description: Common tickets request base type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReprintTickets not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reprints Reservation tickets
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/traces:
    get:
      description: You can use this API to get traces for a Reservation. <p><strong>OperationId:</strong>getTracesByReservation</p>
      operationId: getTracesByReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/traces'
          description: Return object to the request for information regarding traces.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TracesByReservation not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get traces for a Reservation
      tags:
      - Reservation
  /hotels/{hotelId}/reservations/{reservationId}/transactionDiversions:
    delete:
      description: You can use this API to delete Transaction Diversions. <p><strong>OperationId:</strong>deleteTransactionDiversions</p>
      operationId: deleteTransactionDiversions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete Transaction Diversions '
      tags:
      - Reservation
    get:
      description: You can use this API to get Transaction Diversions. <p><strong>OperationId:</strong>getTransactionDiversions</p>
      operationId: getTransactionDiversions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: transactionDiversionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to check if the the daily details are required to be fetched
          for a particular transaciton.
        in: query
        name: includeDailyDetails
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionDiversions'
          description: Response to fetch the transaction diversion rules attached
            to a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionDiversions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Transaction Diversions '
      tags:
      - Reservation
    post:
      description: You can use this API to create Transaction Diversions. <p><strong>OperationId:</strong>postTransactionDiversions</p>
      operationId: postTransactionDiversions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiversionsInfo'
        description: Request to create transaction diversion rules for a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create Transaction Diversions '
      tags:
      - Reservation
      x-codegen-request-body-name: transactionDiversionsInfo
    put:
      description: You can use this API to change Transaction Diversions. <p><strong>OperationId:</strong>putTransactionDiversions</p>
      operationId: putTransactionDiversions
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transactionDiversionsInfo'
        description: Request to modify transaction diversion rules attached to a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionDiversionsDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change Transaction Diversions '
      tags:
      - Reservation
      x-codegen-request-body-name: transactionDiversionsInfo
  /hotels/{hotelId}/reservations/{reservationId}/upgradeEligibleReservations:
    put:
      description: You can use this API to set Upgrade Eligibility for Reservations.
        <p><strong>OperationId:</strong>putReservationsUpgradeEligibility</p>
      operationId: putReservationsUpgradeEligibility
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reservationsUpgradeEligibility'
        description: "Request object containing a list of reservation name ids, hotel\
          \ code and eligibility flag."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsUpgradeEligibilityDetails'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Set Upgrade Eligibility for Reservations
      tags:
      - Reservation
      x-codegen-request-body-name: reservationsUpgradeEligibility
  /hotels/{hotelId}/reservations/{reservationId}/upsell:
    delete:
      description: This API will enable you to delete an upsell from a reservation.
        There may be reservation policies that might prevent an upsell from being
        deleted and as such an appropriate response will be returned. <p><strong>OperationId:</strong>deleteUpsell</p>
      operationId: deleteUpsell
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates whether to Override the Room Inventory Check
        in: query
        name: overrideInventory
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Reservation Upsell
      tags:
      - Reservation
    get:
      description: "Use this API to retrieve the available upsell offers for a specific\
        \ reservation. If no upsell options are configured for this hotel or available\
        \ for this reservation, an appropriate error will be returned. <p><strong>OperationId:</strong>getReservationUpsellInfo</p>"
      operationId: getReservationUpsellInfo
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationUpsellInfo'
          description: Response object to the that contains information for a reservation
            prior to upgrade.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationUpsellInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get available Upsell offers
      tags:
      - Reservation
    post:
      description: This API will allow you to upsell a reservation in OPERA.  You
        would need to already know the upsell rules that are available for this reservation
        - you can do this by using the getUpsell API. <p><strong>OperationId:</strong>postUpsellReservation</p>
      operationId: postUpsellReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postUpsellReservation_request'
        description: Request to upsell a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Upsell a Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: upsellReservation
  /hotels/{hotelId}/roomCalendar:
    get:
      description: "Use this API to get the room calendar for a hotel. It fetches\
        \ inventory detail per rooms, the reservations assigned for a selected date\
        \ range in the past or future, scheduled Out of Order or Out of Service status,\
        \ room description, room attributes, room features, connecting room, etc.<p><strong>OperationId:</strong>getRoomCalendar</p>"
      operationId: getRoomCalendar
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "If true, then filter room results to rooms with Advance Checked\
          \ In Reservations."
        in: query
        name: advanceCheckedIn
        schema:
          type: boolean
      - description: "If 'Y', then filter room results to rooms that are assigned\
          \ to guest."
        in: query
        name: assignedRooms
        schema:
          type: string
      - description: "If 'Y', then filter room results to component rooms."
        in: query
        name: componentRooms
        schema:
          type: string
      - description: "If 'Y', then filter room results to only connecting rooms."
        in: query
        name: connectingRoomsOnly
        schema:
          type: string
      - description: Indicates that only reservations marked as Back to Back should
          be expected in the result.
        in: query
        name: backToBackOnly
        schema:
          type: boolean
      - description: Indicates that only reservations having scheduled room moves
          should be expected in the result.
        in: query
        name: scheduledRoomMoveOnly
        schema:
          type: boolean
      - description: "If 'Y', then filter room results to rooms with Due Out Reservations."
        in: query
        name: dueOut
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: "If true, then fetch result will be sorted in descending order."
        in: query
        name: isSortDescending
        schema:
          type: boolean
      - description: Page index to be retrieved.
        in: query
        name: pageIndex
        schema:
          type: integer
      - description: "If 'Y', then filter room results to component rooms that have\
          \ at least one of its rooms assigned to guest."
        in: query
        name: partiallyAssignedRooms
        schema:
          type: string
      - description: Number of records per page.
        in: query
        name: recordsPerPage
        schema:
          type: integer
      - description: "If 'Y', then filter room results to rooms with Room Conditions."
        in: query
        name: roomConditions
        schema:
          type: string
      - description: "If 'Y', then filter room results to rooms with rotation rooms\
          \ only. It is supported only if OPERA Control Room Rotation is active."
        in: query
        name: ownerRoomsOnly
        schema:
          type: string
      - description: "If 'Y', then filter room results to rooms that are exclusive\
          \ to the owner. It is supported only if OPERA Control Room Rotation is active."
        in: query
        name: ownerExclusiveOnly
        schema:
          type: string
      - description: A collection of supported sorting for room calendar.
        in: query
        name: sortingBy
        schema:
          enum:
          - Default
          - Room
          - RoomType
          - RoomStatus
          type: string
      - description: Include Room Move History in result.
        in: query
        name: includeRoomMoveHistory
        schema:
          type: boolean
      - description: Include information about Component Room Reservation dates when
          fetching a component suite.
        in: query
        name: includeComponentRoomBlockOutDates
        schema:
          type: boolean
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: "If 'Y', then filter room results to rooms that are not yet assigned\
          \ to guest."
        in: query
        name: unassignedRooms
        schema:
          type: string
      - description: Room search filter.
        explode: true
        in: query
        name: roomId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Type search filter.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Class search filter.
        explode: true
        in: query
        name: roomClass
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Floor search filter.
        explode: true
        in: query
        name: floor
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: roomFeature
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: roomStatus
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Smoking Preference filter.
        explode: true
        in: query
        name: smokingPreference
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: bedType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If set to true then reservations having past or future room moves
          will come according to the exact stay dates in the rooms.
        in: query
        name: showRoomMoveSegments
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomCalendar'
          description: This is the Response Message to information regarding existence
            of future reservation or business blocks.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomCalendar not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get the room calendar
      tags:
      - Reservation
  /hotels/{hotelId}/rooms/{roomId}/traces:
    get:
      description: This API will fetch the traces for a Room. <p><strong>OperationId:</strong>getTracesByRoom</p>
      operationId: getTracesByRoom
      parameters:
      - description: Room Id
        in: path
        name: roomId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/traces'
          description: Return object to the request for information regarding traces.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TracesByRoom not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get traces for a Room
      tags:
      - Reservation
  /hotels/{hotelId}/script:
    get:
      description: This API will get the script for your property. <p><strong>OperationId:</strong>getScript</p>
      operationId: getScript
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: languageCode
        schema:
          type: string
      - description: "Used for Character Strings, length 0 to 40."
        in: query
        name: scriptType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/script'
          description: Script for a Reservation based on its StayDetails as well as
            itinerary.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Script not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get a script
      tags:
      - Reservation
  /hotels/{hotelId}/sellMessages/config:
    delete:
      description: Delete an existing sell message configuration for a property. <p><strong>OperationId:</strong>deleteSellMessageConfig</p>
      operationId: deleteSellMessageConfig
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete sell message
      tags:
      - Reservation
    get:
      description: Fetch the existing sell message configuration for a property. <p><strong>OperationId:</strong>getSellMessageConfig</p>
      operationId: getSellMessageConfig
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Sell Message text.
        in: query
        name: message
        schema:
          type: string
      - description: Room Type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Rate Plan code.
        explode: true
        in: query
        name: ratePlanCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: blockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Block Code to query for.
        in: query
        name: blockCode
        schema:
          type: string
      - description: Language code for the sell message.
        in: query
        name: languageCode
        schema:
          type: string
      - description: CRO code to query for.
        in: query
        name: croCode
        schema:
          type: string
      - description: The date on which the fetched sell message should be active.
        in: query
        name: displayDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchSellMessageConfig'
          description: This is the fetch response message type for fetch operation
            of sell messages.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SellMessageConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get sell messages '
      tags:
      - Reservation
    post:
      description: Create sell message configuration for a property. <p><strong>OperationId:</strong>postSellMessageConfig</p>
      operationId: postSellMessageConfig
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/sellMessageConfig'
        description: This is the request message type for creating sell messages.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create sell message
      tags:
      - Reservation
      x-codegen-request-body-name: sellMessageConfig
    put:
      description: Update the existing sell message configuration for a property.
        <p><strong>OperationId:</strong>putSellMessageConfig</p>
      operationId: putSellMessageConfig
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/sellMessageConfig'
        description: This is the request message type for sell message update operation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/sellMessageConfig'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change sell message
      tags:
      - Reservation
      x-codegen-request-body-name: sellMessageConfig
  /hotels/{hotelId}/stay/action/validate:
    put:
      description: Validate overlapping stays <p><strong>OperationId:</strong>putValidateOverlappingStays</p>
      operationId: putValidateOverlappingStays
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/overlappingStay'
        description: Request to check for overlapping stays of reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/overlappingStayDetails'
          description: Response for checking overlapping stays of reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check overlapping stay
      tags:
      - Reservation
      x-codegen-request-body-name: overlappingStay
  /hotels/{hotelId}/turnaways:
    post:
      description: Register turnaways for a property. <p><strong>OperationId:</strong>postTurnawayReservation</p>
      operationId: postTurnawayReservation
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerTurnaway'
        description: Request to register turn away reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Register Turnaway
      tags:
      - Reservation
      x-codegen-request-body-name: registerTurnaway
  /hotels/{hotelId}/upgradeEligibleReservations:
    get:
      description: You can use this API to fetch Reservations Eligible for an Upgrade.
        <p><strong>OperationId:</strong>getUpgradeEligibilityReservations</p> <p>This
        API allows a time span of <strong>30</strong> days.</p>
      operationId: getUpgradeEligibilityReservations
      parameters:
      - description: Unique ID of the hotel where reservation is searched based on
          reservation ID.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The ending value of the date range.
        in: query
        name: arrivalEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStartDate
        schema:
          format: date
          type: string
      - description: Membership Type.
        in: query
        name: membershipType
        schema:
          type: string
      - description: Type of the desired reservation external confirmation number.
        in: query
        name: externalReferenceType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/upgradeEligibilityReservations'
          description: "Response object to the Fetch UpgradeEligibilityReservations\
            \ Request operation. Based on the criteria, reservation information is\
            \ returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: UpgradeEligibilityReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Reservations Eligible for an Upgrade
      tags:
      - Reservation
  /profiles/{profileId}/reservations:
    get:
      description: Use this API to identify whether there are future reservations
        or business block for the profile id. <p><strong>OperationId:</strong>getFutureReservationsOrBlocks</p>
      operationId: getFutureReservationsOrBlocks
      parameters:
      - description: Unique OPERA internal profile ID which is used to find any type
          of profile from OPERA. This ID is a primary identification of a profile
          in OPERA.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/futureReservationsOrBlocksDetails'
          description: This is the Response Message to information regarding existence
            of future reservation or business blocks.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FutureReservationsOrBlocks not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Future Reservations on a profile
      tags:
      - Reservation
  /recentlyAccessedReservations:
    get:
      description: This API will return all recently accessed Reservations. <p><strong>OperationId:</strong>getRecentlyAccessedReservations</p>
      operationId: getRecentlyAccessedReservations
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recentlyAccessedReservations'
          description: Response with the fetched recently accessed reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RecentlyAccessedReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get recently accessed Reservations
      tags:
      - Reservation
  /reservations:
    get:
      description: "This API will allow a user to retrieve a list of reservations\
        \ based on the search criteria specified in the request body. For example\
        \ you can search for reservations using query parameters like first name,\
        \ last name, arrival/departure date, external confirmation number. <p><strong>OperationId:</strong>getReservations</p>"
      operationId: getReservations
      parameters:
      - description: Mark this reservation as recently accessed.
        in: query
        name: recentlyAccessed
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: searchType
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          - ScheduledRoomMoves
          type: string
      - description: List of Hotels to support searches with multiple resorts for
          which traces are to be fetched.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Free form text field for searching all reservation fields
        in: query
        name: text
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationIdList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: confirmationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: cancellationNumberList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: externalReferenceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: externalSystemCodes
        schema:
          default: "[\"External\"]"
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: arrivalEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedArrivalStartTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedArrivalEndTime
        schema:
          format: date-time
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedReturnEndTime
        schema:
          format: date-time
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedReturnStartTime
        schema:
          format: date-time
          type: string
      - description: Attached profile name
        explode: true
        in: query
        name: companyNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: sourceNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: travelAgentNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: groupNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: travelAgentIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: companyIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: sourceIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: contactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: groupIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: billingContactIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Identifier for a guest profile associated with the reservation(s)
        in: query
        name: profileId
        schema:
          type: string
      - description: Membership ID criteria.
        in: query
        name: membershipCardNumber
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevels
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "When set to true, only reservations with a membership belonging\
          \ to the specified membership type will be returned"
        in: query
        name: reservationsWithMembershipType
        schema:
          type: boolean
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: VIP status of the customer.
        in: query
        name: anyVIPStatus
        schema:
          type: boolean
      - description: VIP status of the customer.
        explode: true
        in: query
        name: vipCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservation having Guarantee Code(Reservation Type)
          supplied here.
        in: query
        name: guaranteeCode
        schema:
          type: string
      - description: Fetches the reservation having method of payment supplied here.
        in: query
        name: paymentMethod
        schema:
          type: string
      - description: Fetches the reservation for which discount is applied
        in: query
        name: discountApplied
        schema:
          default: false
          type: boolean
      - explode: true
        in: query
        name: user
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Fetches reservation created by specified user. If both CreatedByUsers\
          \ and CreatedBy is specified, CreatedByUsers will take precedence."
        in: query
        name: createdBy
        schema:
          type: string
      - description: Fetches reservations cancelled by list of users.
        explode: true
        in: query
        name: cancelledByList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservations which are cancelled on a specific date.
        in: query
        name: cancelledOn
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: ratePlanCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sourceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: marketCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true the search result will exclude the blocks reservations.
        in: query
        name: excludeBlockReservations
        schema:
          type: boolean
      - description: The Name of the block that is attached to the reservation.
        in: query
        name: blockName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Custom reference
        in: query
        name: customReference
        schema:
          type: string
      - description: GDS Record Locator for reservation.
        in: query
        name: recordLocator
        schema:
          type: string
      - explode: true
        in: query
        name: orderBy
        schema:
          items:
            enum:
            - Nights
            - ArrivalDate
            - ArrivalDateETR
            - DepartureDate
            - GuestSurname
            - RateAmount
            - RateCode
            - Room
            - RoomType
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: sortOrder
        schema:
          default: "[\"Asc\"]"
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicator to query reservations which have a room number assigned.
        in: query
        name: roomAssignedOnly
        schema:
          type: boolean
      - description: Indicator to query reservations which does not have a room number
          assigned.
        in: query
        name: roomUnassignedOnly
        schema:
          type: boolean
      - description: Room number of the reservation to search by.
        in: query
        name: roomId
        schema:
          type: string
      - description: Room Type.
        explode: false
        in: query
        name: roomType
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: roomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        in: query
        name: roomSmokingPreference
        schema:
          type: string
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: roomFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: housekeepingRoomStatuses
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roomRangeFrom
        schema:
          type: string
      - in: query
        name: roomRangeTo
        schema:
          type: string
      - description: Filter by the last digits of a reservation's phone number.
        in: query
        name: communication
        schema:
          type: string
      - description: "Instruction on which of the reservation's elements are to be\
          \ returned. Instructions are cumulative i.e. if multiple instructions are\
          \ sent in a request, then the combined reservation elements would be returned,\
          \ elements will not be duplicated in the response."
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - ReservationID
            - Indicators
            - Deposits
            - RevenuesAndBalances
            - GuestServiceStatus
            - MasterInfo
            - CancellationInfo
            - BlockReservations
            - TaxType
            - GuestDeviceNotification
            - RoomAssignedByAI
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether the Enrollment is in progress or not
          for the Profile associated with this Reservation.
        explode: true
        in: query
        name: allowedReservationActions
        schema:
          items:
            enum:
            - Cancel
            - Move
            - PreCharge
            - PostCharge
            - FacilitySchedule
            - Upsell
            - PreCheckIn
            - PostToNoShowCancel
            - NoShow
            - NameChange
            - Discount
            - HouseKeeping
            - EnrollToPrimaryMembership
            - EnrollInProgress
            - MemberAwardAttached
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: "Flag containing true or false value for reservation to be eligible\
          \ for prior check in by guest using mobile device. Pass the 'true' or 'false'\
          \ values when creating / modifying reservation to indicate whether a reservation\
          \ is eligible for mobile check in yes / no. Upon fetch, the current state\
          \ of the flag will show true or false."
        in: query
        name: allowPreRegistration
        schema:
          type: boolean
      - description: Indicates that only reservations with deposit balance should
          be expected from the result.
        in: query
        name: hasDepositBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open balance should be
          expected from the result.
        in: query
        name: hasOpenBalance
        schema:
          type: boolean
      - description: Indicates that only reservations with open folio should be expected
          from the result.
        in: query
        name: hasOpenFolio
        schema:
          type: boolean
      - description: Criteria that indicates whether to scheduled checkouts or not.
        in: query
        name: includeScheduledCheckOut
        schema:
          type: boolean
      - description: Indicates that only linked reservations should be expected from
          the result.
        in: query
        name: linkedOnly
        schema:
          type: boolean
      - description: Indicates that only unlinked reservations should be expected
          from the result.
        in: query
        name: unlinkedOnly
        schema:
          type: boolean
      - description: Indicates if reservations which have already arrived on the Search
          Date is required.
        in: query
        name: actualArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which were expected to depart on the\
          \ Search Date and have already checked, is required."
        in: query
        name: actualDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as Complimentary\
          \ Rates , is required. This flag should be used in conjunction with the\
          \ Arrivals, Departures or StayOvers criteria."
        in: query
        name: complimentaryReservations
        schema:
          type: boolean
      - description: Indicates if reservations which have cancelled on the Search
          Date which is also the day of arrival is required.
        in: query
        name: dayOfArrivalCancels
        schema:
          type: boolean
      - description: "Indicates if reservations which are day use reservation on the\
          \ Search Date, is required."
        in: query
        name: dayUse
        schema:
          type: boolean
      - description: "Indicates if reservations which checked out early on the Search\
          \ Date, is required."
        in: query
        name: earlyDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected arrivals for the\
          \ Search Date and who have not yet arrived, is required."
        in: query
        name: expectedArrivals
        schema:
          type: boolean
      - description: "Indicates if reservations which are expected departures for\
          \ the Search Date and who have not yet departed, is required."
        in: query
        name: expectedDepartures
        schema:
          type: boolean
      - description: "Indicates if reservations which have extended their stays on\
          \ the Search Date, is required."
        in: query
        name: extendedStays
        schema:
          type: boolean
      - description: "Indicates if reservations where rate codes are marked as House\
          \ Use Rates , is required. This flag should be used in conjunction with\
          \ the Arrivals, Departures or StayOvers criteria."
        in: query
        name: houseUseReservations
        schema:
          type: boolean
      - description: "Indicates if reservations which are StayOvers on the Search\
          \ Date, is required."
        in: query
        name: stayovers
        schema:
          type: boolean
      - description: "Date for searching the reservations. This is the date for which\
          \ the search types are applicable. If date is not available, the business\
          \ date will be used by default."
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: roomRoutingId
        schema:
          type: string
      - description: Indicates to exclude Pseudo room reservations.
        in: query
        name: excludePseudoRoomReservations
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludeReservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: VIP status of the customer.
        explode: true
        in: query
        name: excludeVIPStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeSpecials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Preference value for display purposes.
        explode: true
        in: query
        name: excludeFloorPreferences
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates to exclude Advance Checked In Reservations from search
          result.
        in: query
        name: excludeAdvanceCheckedIn
        schema:
          type: boolean
      - description: Exclude the reservation(s) with provided room features from the
          search result.
        explode: true
        in: query
        name: excludeRoomFeatures
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Player ID associated to the reservation.
        in: query
        name: playerId
        schema:
          type: string
      - description: Balance from.
        in: query
        name: gamingBalanceFrom
        schema:
          type: number
      - description: Balance to.
        in: query
        name: gamingBalanceTo
        schema:
          type: number
      - description: Comp Balance From
        in: query
        name: compAccountingBalanceFrom
        schema:
          type: number
      - description: Comp Balance To
        in: query
        name: compAccountingBalanceTo
        schema:
          type: number
      - description: Represents Reservation search type Player Snapshot.
        explode: true
        in: query
        name: searchTypes
        schema:
          items:
            enum:
            - Any
            - DayUse
            - Arrival
            - Arrived
            - Departure
            - WaitList
            - Cancellation
            - CheckedOut
            - NoShow
            - Complimentary
            - InHouse
            - PostStayPendingBalance
            - PreRegistered
            - PostToRoom
            - OpenFolio
            - ScheduledCheckOut
            - Queued
            - MobileCheckout
            - RegisteredAndInHouse
            - ResvBlockTraces
            - GuestMessages
            - MassCancellation
            - Operator
            - Turndown
            - WalkIn
            - AdvanceCheckedIn
            - OpenBalance
            - AutoFolioSettlement
            - Routing
            - PlayerSnapshot
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Reservation status type for reservations search.
        explode: true
        in: query
        name: reservationStatuses
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: transportationCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Enum to denote the Status of Readiness messages sent to Guest
          Devices.
        explode: true
        in: query
        name: roomReadyStatuses
        schema:
          items:
            enum:
            - Pending
            - Completed
            - Failed
            - Sent
            - Received
            - Cancelled
            - PendingAvailability
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Fetches the reservations for which Checkout Message is received.
        in: query
        name: checkoutMessageReceived
        schema:
          type: boolean
      - description: Fetches the reservations for which reservation communication
          has been opted.
        in: query
        name: optedForCommunication
        schema:
          type: boolean
      - description: Fetches reservations which were created on the given property
          business date.
        in: query
        name: createdOn
        schema:
          format: date
          type: string
      - description: Fetches all reservations that are scheduled to stay over the
          selected date.
        in: query
        name: stayOn
        schema:
          format: date
          type: string
      - description: Name of Contact Profile associated with Reservation.
        explode: true
        in: query
        name: contactNames
        schema:
          items:
            maxLength: 82
            minLength: 0
            type: string
          type: array
        style: form
      - description: Travel Agent Record Locators List.
        explode: true
        in: query
        name: taRecordLocatorList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetches the reservation having Guarantee Codes(Reservation Type)
          supplied here. Example guaranteeCodes=6PM
        explode: true
        in: query
        name: guaranteeCodes
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 100
          type: array
        style: form
      - description: Name of the group of Linked Reservations to be searched.
        in: query
        name: linkedName
        schema:
          maxLength: 50
          minLength: 0
          type: string
      - description: Indicates that only reservations marked as Back to Back should
          be expected in the result.
        in: query
        name: backToBackOnly
        schema:
          type: boolean
      - description: Fetches linked Back to Back reservations with the specified Back
          to Back Date. Fetched reservations will be marked as Back to Back and they
          will either depart or arrive on the specified Back to Back day.
        in: query
        name: backToBackDateOn
        schema:
          format: date
          type: string
      - description: Scheduled Move Rooms Date Criteria. This will parameter be mandatory
          when Search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveDate
        schema:
          format: date
          type: string
      - description: Start of Scheduled Move Room Time Range Criteria (in 24 hour
          time format). Applicable when Search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveStartTime
        schema:
          maxLength: 8
          minLength: 0
          pattern: "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
      - description: End of Scheduled Move Room Time Range Criteria (in 24 hour time
          format). Applicable when Search Type is ScheduledRoomMove.
        in: query
        name: scheduledRoomMoveEndTime
        schema:
          maxLength: 8
          minLength: 0
          pattern: "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
          type: string
      - description: Scheduled Move Room Status Criteria.
        in: query
        name: scheduledRoomMoveStatus
        schema:
          enum:
          - Completed
          - Pending
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsDetails'
            application/json:
              example:
                reservations:
                  reservationInfo:
                  - reservationIdList:
                    - id: "236552"
                      type: Reservation
                    - id: "379252"
                      type: Confirmation
                    - id: "5735646"
                      type: ExternalReference
                    roomStay:
                      arrivalDate: 2020-05-08
                      departureDate: 2020-05-09
                      originalTimeSpan:
                        startDate: 2020-05-08
                        endDate: 2020-05-09
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-05-08 19:17:25.0
                        reservationExpectedDepartureTime: 2020-05-09 13:30:00.0
                      adultCount: "2"
                      childCount: "1"
                      roomClass: ALL
                      roomType: STDQ
                      numberOfRooms: "1"
                      roomNumber: "2010"
                      ratePlanCode: UPGRADE
                      rateAmount:
                        amount: "100"
                        currencyCode: USD
                      rateSuppressed: false
                      fixedRate: false
                      guarantee:
                        guaranteeCode: CHECKED IN
                        shortDescription: Checked In
                      marketCode: CORP
                      sourceOfBusiness: CWEB
                      sourceOfBusinessDescription: Website
                      balance:
                        amount: "115.55"
                        currencyCode: USD
                      roomTypeCharged: STDQ
                      roomNumberLocked: false
                      pseudoRoom: false
                    reservationGuest:
                      givenName: SARAH
                      middleName: F
                      surname: SMITH
                      phoneNumber: '415 555 0100 '
                      email: Sarah@example.com
                      language: E
                      vip:
                        vipCode: GOLD
                        vipDescription: Gold
                      address:
                        cityName: Redwood Shores
                        postalCode: "94065"
                        state: CA
                        country:
                          code: AU
                      anonymization: {}
                      guestLastStayInformation:
                        lastStayRoom: "304"
                      guestRestricted: false
                      nameType: Guest
                      id: "288106"
                      type: Profile
                    reservationPaymentMethod:
                      paymentMethod: CA
                    displayColor: GREEN
                    reservationIndicators:
                    - indicatorName: EXTERNALREFERENCES
                      count: "1"
                    - indicatorName: PREFERENCE
                      count: "3"
                    - indicatorName: PROFILENOTE
                      count: "2"
                    - indicatorName: PACKAGEITEM
                      count: "1"
                    - indicatorName: OPENFOLIO
                    - indicatorName: STAYREVENUE
                    - indicatorName: HISTORYFUTURE
                      count: "3"
                    - indicatorName: COMMUNICATION
                      count: "6"
                    - indicatorName: ASSOCIATEDPROFILES
                      count: "1"
                    sourceOfSale:
                      sourceType: PMS
                      sourceCode: HOTEL1
                    waitlist: {}
                    advanceCheckIn:
                      advanceCheckedIn: true
                      expectedReturnTime: 2020-05-09 15:00:00.0
                    hotelId: HOTEL1
                    hotelName: Hotel One
                    roomStayReservation: true
                    createDateTime: 2020-01-09 01:02:48.0
                    lastModifyDateTime: 2020-02-26 03:00:08.0
                    reservationStatus: CheckedOut
                    computedReservationStatus: CheckedOut
                    walkInIndicator: true
                    commissionPayoutTo: None
                    paymentMethod: CA
                    preRegistered: false
                    openFolio: true
                    allowMobileCheckout: false
                    optedForCommunication: false
                  - reservationIdList:
                    - id: "267803"
                      type: Reservation
                    - id: "238564"
                      type: ParentReservation
                    - id: "432198"
                      type: Confirmation
                    roomStay:
                      arrivalDate: 2020-05-08
                      departureDate: 2020-05-09
                      originalTimeSpan:
                        startDate: 2020-05-08
                        endDate: 2020-05-09
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-05-08 15:14:32.0
                        reservationExpectedDepartureTime: 2020-05-09 14:14:00.0
                      adultCount: "2"
                      childCount: "1"
                      roomClass: ALL
                      roomType: STDK
                      numberOfRooms: "1"
                      roomNumber: "304"
                      ratePlanCode: FIXED
                      rateAmount:
                        amount: "106"
                        currencyCode: USD
                      rateSuppressed: false
                      partyCode: "383555 SMITH, SARAH"
                      fixedRate: false
                      guarantee:
                        guaranteeCode: CHECKED IN
                        shortDescription: Checked In
                      marketCode: CORI
                      sourceOfBusiness: TRAVAG1
                      sourceOfBusinessDescription: Travel Agent1
                      balance:
                        amount: "442"
                        currencyCode: USD
                      roomTypeCharged: STDK
                      roomNumberLocked: false
                      pseudoRoom: false
                    reservationGuest:
                      givenName: SARAH
                      middleName: F
                      surname: SMITH
                      phoneNumber: +1 415 555 0100
                      email: Sarah@example.com
                      language: E
                      vip:
                        vipCode: GOLD
                        vipDescription: Gold
                      address:
                        cityName: Redwood Shores
                        postalCode: "94065"
                        state: CA
                        country:
                          code: AU
                      anonymization: {}
                      guestLastStayInformation:
                        lastStayRoom: "304"
                      guestRestricted: false
                      nameType: Guest
                      id: "288106"
                      type: Profile
                    reservationPaymentMethod:
                      paymentCard:
                        cardType: Mc
                      paymentMethod: MC
                    displayColor: GREEN
                    reservationIndicators:
                    - indicatorName: ITINERARY
                      count: "1"
                    - indicatorName: TRACE
                      count: "1"
                    - indicatorName: PREFERENCE
                      count: "2"
                    - indicatorName: PROFILENOTE
                      count: "2"
                    - indicatorName: TRANSPORT
                    - indicatorName: PACKAGEITEM
                      count: "1"
                    - indicatorName: OPENFOLIO
                    - indicatorName: STAYREVENUE
                    - indicatorName: HISTORYFUTURE
                      count: "3"
                    - indicatorName: COMMUNICATION
                      count: "6"
                    - indicatorName: ASSOCIATEDPROFILES
                      count: "1"
                    sourceOfSale:
                      sourceType: PMS
                      sourceCode: ABHI
                    waitlist: {}
                    advanceCheckIn:
                      advanceCheckedIn: false
                      expectedReturnTime: 2020-05-09
                      eTRComments: ETR Comments
                    hotelId: HOTEL1
                    hotelName: Hotel One
                    roomStayReservation: true
                    createDateTime: 2020-07-10 15:08:43.0
                    lastModifyDateTime: 2020-02-26 03:44:50.0
                    reservationStatus: CheckedOut
                    computedReservationStatus: CheckedOut
                    walkInIndicator: false
                    commissionPayoutTo: None
                    paymentMethod: MC
                    preRegistered: false
                    openFolio: true
                    allowMobileCheckout: false
                    optedForCommunication: false
                  - reservationIdList:
                    - id: "238564"
                      type: Reservation
                    - id: "383555"
                      type: Confirmation
                    - id: "5737400"
                      type: ExternalReference
                    roomStay:
                      arrivalDate: 2020-05-08
                      departureDate: 2020-05-09
                      originalTimeSpan:
                        startDate: 2020-05-08
                        endDate: 2020-05-09
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-05-08 07:00:00.0
                        reservationExpectedDepartureTime: 2020-05-09
                      adultCount: "2"
                      childCount: "1"
                      roomClass: ALL
                      roomType: STDK
                      numberOfRooms: "2"
                      ratePlanCode: FIXED
                      rateAmount:
                        amount: "106"
                        currencyCode: USD
                      rateSuppressed: false
                      partyCode: "383555 SMITH, SARAH"
                      fixedRate: false
                      guarantee:
                        guaranteeCode: 6PM
                        shortDescription: 6pm Hold
                      marketCode: CORP
                      sourceOfBusiness: TRAVEL
                      sourceOfBusinessDescription: Travel Site
                      balance:
                        amount: "106"
                        currencyCode: USD
                      roomTypeCharged: STDK
                      roomNumberLocked: false
                      pseudoRoom: false
                    reservationGuest:
                      givenName: SARAH
                      middleName: F
                      surname: SMITH
                      phoneNumber: +1 415 555 0100
                      email: Sarah@example.com
                      language: E
                      vip:
                        vipCode: GOLD
                        vipDescription: Gold
                      address:
                        cityName: Redwood Shores
                        postalCode: "94065"
                        state: CA
                        country:
                          code: AU
                      anonymization: {}
                      guestLastStayInformation:
                        lastStayRoom: "304"
                      guestRestricted: false
                      nameType: Guest
                      id: "288106"
                      type: Profile
                    reservationPaymentMethod:
                      paymentCard:
                        cardType: Va
                      paymentMethod: MNVIS
                    displayColor: GREEN
                    reservationIndicators:
                    - indicatorName: WEBREGISTRATIONCARDS
                      count: "1"
                    - indicatorName: ITINERARY
                      count: "1"
                    - indicatorName: TRACE
                      count: "1"
                    - indicatorName: EXTERNALREFERENCES
                      count: "1"
                    - indicatorName: PREFERENCE
                      count: "2"
                    - indicatorName: PROFILENOTE
                      count: "2"
                    - indicatorName: ALERT
                      count: "5"
                    - indicatorName: TRANSPORT
                    - indicatorName: PACKAGEITEM
                      count: "1"
                    - indicatorName: HISTORYFUTURE
                      count: "3"
                    - indicatorName: COMMUNICATION
                      count: "6"
                    - indicatorName: ASSOCIATEDPROFILES
                      count: "1"
                    - indicatorName: DUPLICATES
                    sourceOfSale:
                      sourceType: PMS
                      sourceCode: HOTEL1
                    waitlist: {}
                    advanceCheckIn:
                      advanceCheckedIn: false
                      expectedReturnTime: 2020-05-09
                      eTRComments: test add comments ERT?
                    hotelId: HOTEL1
                    hotelName: Hotel One
                    roomStayReservation: true
                    createDateTime: 2020-01-14 19:47:34.0
                    lastModifyDateTime: 2020-02-26 04:36:07.0
                    reservationStatus: NoShow
                    computedReservationStatus: NoShow
                    walkInIndicator: false
                    commissionPayoutTo: None
                    paymentMethod: MNVIS
                    preRegistered: false
                    openFolio: false
                    allowMobileCheckout: false
                    optedForCommunication: false
                  totalPages: "1"
                  offset: "20"
                  limit: "20"
                  hasMore: true
                  totalResults: "3"
          description: "Response object to the Fetch Reservation Request operation.\
            \ Based on the criteria, reservation information is returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Reservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservations for a hotel
      tags:
      - Reservation
  /reservations/indicators:
    get:
      description: Get Reservation indicators. <p><strong>OperationId:</strong>getReservationIndicators</p>
      operationId: getReservationIndicators
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Hotel code of each reservation ID. If more than one reservation\
          \ id is requested from multiple hotels, this is needed to identify per reservation\
          \ id. Example reservationId=123&hotelId=PROP1&reservationId=456&hotelId=PROP2"
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Simple type that corresponds to check reservation instructions.
        explode: true
        in: query
        name: checkInstructions
        schema:
          items:
            enum:
            - HasDepositPolicies
            - HasCancellationPolicies
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkReservationsDetails'
          description: "Response for checking allowed actions, existence of attached\
            \ records, or indicators of a reservation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationIndicators not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation indicators
      tags:
      - Reservation
  /reservations/linkedReservations/{reservationId}:
    delete:
      description: Use this API to unlink a reservation from its currently associated
        reservation. <p><strong>OperationId:</strong>deleteReservationLinksByChain</p>
      operationId: deleteReservationLinksByChain
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove Reservation Links By Chain
      tags:
      - Reservation
    post:
      description: This will allow you to link 1 or more reservations to an existing
        reservation.  <p><strong>OperationId:</strong>postReservationLinksByChain</p>
      operationId: postReservationLinksByChain
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/linkReservationsCriteria'
        description: Request to link a list of reservations with another existing
          reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Link Reservations By Chain
      tags:
      - Reservation
      x-codegen-request-body-name: linkReservationsCriteria
  /reservations/pace:
    get:
      description: Use this API to get Reservation pace. <p><strong>OperationId:</strong>getReservationPace</p>
      operationId: getReservationPace
      parameters:
      - description: Hotel code from which the reservations will be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Target stay date for report
        in: query
        name: stayDate
        schema:
          format: date
          type: string
      - description: Number of lead days from stay date
        in: query
        name: leadDays
        schema:
          type: integer
      - description: List of Channels for which pace to be computed
        in: query
        name: channels
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPace'
          description: FetchReservationPace response.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationPace not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation pace
      tags:
      - RSVStats
  /reservations/statistics:
    get:
      description: Use this API to get a statistical breakdown of reservations such
        as inventory and revenue data.<p><strong>OperationId:</strong>getReservationStatistics</p>
      operationId: getReservationStatistics
      parameters:
      - description: "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt)."
        explode: true
        in: query
        name: chainName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The IATA city code; for example DCA, ORD."
        explode: true
        in: query
        name: hotelCityCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The code that uniquely identifies a single hotel property. The
          hotel code is decided between vendors.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A text field used to communicate the context (or source of -\
          \ ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes."
        explode: true
        in: query
        name: hotelCodeContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A text field used to communicate the proper name of the hotel.
        explode: true
        in: query
        name: hotelName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        explode: true
        in: query
        name: requestedReportsTypeEndDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Hotel fiscal date for statistics.
        explode: true
        in: query
        name: fiscalDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Identifies the type of statistics collected. Each ReportCode
          corresponds to a set of category summaries based upon a predetermined agreement.
        explode: true
        in: query
        name: reportCode
        schema:
          items:
            enum:
            - ChannelMonitorSummary
            - ReservationAndRevenueSummary
            type: string
          type: array
        style: form
      - description: The starting value of the date range.
        explode: true
        in: query
        name: requestedReportsTypeStartDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Name of the parameter.
        explode: true
        in: query
        name: requestedReportsTypeParameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: requestedReportsTypeParameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationStatistics'
          description: Collection of statistic data of a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get reservation statistics
      tags:
      - RSVStats
  /reservations/{reservationId}:
    delete:
      deprecated: true
      description: This API will delete only an on hold (in-session) reservation.<p><strong>OperationId:</strong>deleteReservation</p>
      operationId: deleteReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is to delete only an on hold (in-session) reservation.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Reservation
      tags:
      - Reservation
  /reservations/{reservationId}/split:
    put:
      description: You can use this API to split a multi room reservation.  This will
        create a new confirmation number for the split reservation. <p><strong>OperationId:</strong>putSplitMultiRoomReservation</p>
      operationId: putSplitMultiRoomReservation
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/splitMultiRoomReservation'
        description: Request to split multi-room reservation into separate reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/splitMultiRoomReservationDetails'
          description: Response for splitting multi-room reservation into separate
            reservations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Split multi room Reservation
      tags:
      - Reservation
      x-codegen-request-body-name: splitMultiRoomReservation
  /sellMessages:
    get:
      description: Fetch the configured sell messages for a property. <p><strong>OperationId:</strong>getSellMessages</p>
      operationId: getSellMessages
      parameters:
      - description: This is the Central Reservation office code.
        in: query
        name: croCode
        schema:
          type: string
      - description: This is the hotel code or resort.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: criteriaId
        schema:
          type: string
      - description: This is the language code.
        in: query
        name: criteriaIdType
        schema:
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: This represents the rate plan code of the room type.
        in: query
        name: ratePlanCode
        schema:
          type: string
      - description: This represents the room type code.
        in: query
        name: roomType
        schema:
          type: string
      - description: Flag which tells if this message is Sticky (Y/N).
        in: query
        name: stickyFlagYn
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: criteriaType
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Instruction to fetch all Room Type sell messages configured.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - RateCodes
            - RoomTypes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: This represents the moduleType of the SellMessages to be fetched.
        in: query
        name: usedInModule
        schema:
          enum:
          - Blocks
          - Reservations
          - FunctionDiary
          - LookToBookSales
          - GroupRoomsControl
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/sellMessages'
          description: This is the Response Message Type to the request for retrieving
            Sell Messages.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SellMessages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get sell messages
      tags:
      - Reservation
  /sellMessages/config:
    delete:
      description: Delete an existing sell message configuration. <p><strong>OperationId:</strong>deleteSellMessageConfigByChain</p>
      operationId: deleteSellMessageConfigByChain
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: sellMessageConfigId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete sell message by chain
      tags:
      - Reservation
    get:
      description: Fetch the existing sell message configuration. <p><strong>OperationId:</strong>getSellMessageConfigByChain</p>
      operationId: getSellMessageConfigByChain
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Sell Message text.
        in: query
        name: message
        schema:
          type: string
      - description: Room Type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Rate Plan code.
        explode: true
        in: query
        name: ratePlanCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: blockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Block Code to query for.
        in: query
        name: blockCode
        schema:
          type: string
      - description: Language code for the sell message.
        in: query
        name: languageCode
        schema:
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Chain code to query for.
        in: query
        name: chainId
        schema:
          type: string
      - description: CRO code to query for.
        in: query
        name: croCode
        schema:
          type: string
      - description: The date on which the fetched sell message should be active.
        in: query
        name: displayDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchSellMessageConfig'
          description: This is the fetch response message type for fetch operation
            of sell messages.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SellMessageConfigByChain not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get sell messages by chain
      tags:
      - Reservation
    post:
      description: Create sell message configuration. <p><strong>OperationId:</strong>postSellMessageConfigByChain</p>
      operationId: postSellMessageConfigByChain
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/sellMessageConfig'
        description: This is the request message type for creating sell messages.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create sell message by chain
      tags:
      - Reservation
      x-codegen-request-body-name: sellMessageConfig
    put:
      description: Update the existing sell message configuration. <p><strong>OperationId:</strong>putSellMessageConfigByChain</p>
      operationId: putSellMessageConfigByChain
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/sellMessageConfig'
        description: This is the request message type for sell message update operation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/sellMessageConfig'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change sell message by chain
      tags:
      - Reservation
      x-codegen-request-body-name: sellMessageConfig
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    blockReservationStatistics:
      description: Response for BlockReservationStatisticsByDateAndRoomPool operation.
      properties:
        blockReservationStatisticsByDateAndRoomPool:
          $ref: '#/components/schemas/blockReservationStatisticsByDateAndRoomPoolType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    blockReservationStatisticsByDateAndRoomPoolType:
      description: Statistics of block reservations summarized by date and room pools.
      properties:
        dailyStats:
          description: Statistics of one day.
          items:
            $ref: '#/components/schemas/dailyStatType'
          maxItems: 4000
          type: array
      type: object
    dailyStatsType:
      description: Statistics of one day.
      items:
        $ref: '#/components/schemas/dailyStatType'
      maxItems: 4000
      type: array
    dailyStatType:
      description: Statistics of one day.
      properties:
        statisticDate:
          description: Date of statistics.
          format: date
          type: string
        blockStats:
          description: Statistics of one block.
          items:
            $ref: '#/components/schemas/blockStatType'
          maxItems: 4000
          type: array
      type: object
    blockStatsType:
      description: Statistics of one block.
      items:
        $ref: '#/components/schemas/blockStatType'
      maxItems: 4000
      type: array
    blockStatType:
      description: Statistics of one block.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomPoolStats:
          description: Statistics of one room pool.
          items:
            $ref: '#/components/schemas/roomPoolStatType'
          maxItems: 4000
          type: array
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    roomPoolStatsType:
      description: Statistics of one room pool.
      items:
        $ref: '#/components/schemas/roomPoolStatType'
      maxItems: 4000
      type: array
    roomPoolStatType:
      description: Statistics of one room pool.
      properties:
        roomPool:
          description: Room pool (room pool represents a group of room types).
          maxLength: 20
          minLength: 0
          type: string
        paidRooms:
          description: Number of non-complementary rooms.
          type: integer
        compRooms:
          description: Number of complementary rooms.
          type: integer
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    registerCall:
      description: Request to register call. Either creates a new call or updates
        an existing call.
      properties:
        call:
          $ref: '#/components/schemas/callType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    callType:
      description: Holds call information.
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        caller:
          $ref: '#/components/schemas/callerType'
        reservation:
          $ref: '#/components/schemas/callType_reservation'
        turnawayCode:
          description: Call turn away code.
          maxLength: 20
          minLength: 0
          type: string
        comments:
          description: Call comments.
          maxLength: 200
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
      type: object
    callerType:
      description: Holds caller information.
      properties:
        givenName:
          description: Caller First Name.
          maxLength: 280
          minLength: 0
          type: string
        surname:
          description: Caller Last Name.
          maxLength: 80
          minLength: 0
          type: string
        phone:
          description: Caller Phone Number.
          maxLength: 80
          minLength: 0
          type: string
        email:
          description: Caller Email.
          maxLength: 80
          minLength: 0
          type: string
        fax:
          description: Caller Fax Number.
          maxLength: 80
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    callStatistics:
      description: Response object to the request to retrieve Call Statistics.
      properties:
        callStatisticsList:
          description: Holds Call Statistics Information.
          items:
            $ref: '#/components/schemas/callStatisticsType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    callStatisticsListType:
      description: Holds Call Statistics Information.
      items:
        $ref: '#/components/schemas/callStatisticsType'
      maxItems: 4000
      type: array
    callStatisticsType:
      description: Holds Call Statistics Information.
      properties:
        appUserName:
          description: Application User for which the Call Statistics is being retrieved.
          maxLength: 20
          minLength: 0
          type: string
        totalCallTime:
          description: Holds Total Call Time by Agent.
          type: integer
        totalCalls:
          description: Holds Total Calls made by Agent.
          type: integer
        averageCallTime:
          description: Holds Average Call Time of Agent.
          type: integer
        totalSales:
          description: Holds Total Sales by Agent.
          type: integer
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    reservationsDetails:
      description: "Response object to the Fetch Reservation Request operation. Based\
        \ on the criteria, reservation information is returned."
      properties:
        reservations:
          $ref: '#/components/schemas/reservationsDetails_reservations'
        masterInfoList:
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        departureReservationInfo:
          $ref: '#/components/schemas/departureReservationInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        commissionsInfo:
          $ref: '#/components/schemas/reservationCommissionInfoType'
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        displayColorDetails:
          $ref: '#/components/schemas/reservationDisplayColorInfoType'
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        roomFeatures:
          description: Set of reservation preferences which belongs to the Room Features.
          maxLength: 4000
          minLength: 0
          type: string
        fiscalInfo:
          $ref: '#/components/schemas/fiscalInfoType'
        parentReservationHotelId:
          description: Property associated with the Linked Reservation that serves
            as parent to this reservation.
          maxLength: 20
          minLength: 0
          type: string
        scheduledRoomMoveInfo:
          $ref: '#/components/schemas/scheduledRoomMoveInfoType'
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system
            for the external reference number. It is only applicable to reservation
            external references.
          type: integer
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        bookingTimeSpan:
          $ref: '#/components/schemas/bookingTimeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
        scheduledRoomMoveRoomPending:
          description: Pending Scheduled Move Room.
          type: boolean
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        roomAvailableNights:
          description: Number of nights this room is avaiable if room is assigned
            to reservation
          type: integer
        backToBack:
          description: This attribute indicates if the linked reservation is marked
            as Back to Back or not.
          type: boolean
        backToBackSequence:
          $ref: '#/components/schemas/backToBackResSequenceType'
        scheduledRoomMoveResponseType:
          $ref: '#/components/schemas/scheduledRoomMoveResponseType'
        backToBackGroupId:
          description: This attribute represents a common identifier for a subgroup
            of linked reservations marked as Back to Back in a group of linked reservations.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: "Type to specify a rate promotion. Usually attached to a reservation\
        \ to indicate a specific promotion is applied to the reservation. <p>Note:\
        \ For putReservation when promotion type element is sent with no value, existing\
        \ promotion codes on the reservation will be removed.</p>"
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        fullName:
          description: Full display name
          type: string
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        birthDate:
          description: Date of birth
          format: date
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          $ref: '#/components/schemas/countryNameType'
        vip:
          $ref: '#/components/schemas/vIPType'
        address:
          $ref: '#/components/schemas/addressSearchType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        guestLastStayInformation:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    surnameType:
      description: "Family name, last name."
      maxLength: 80
      minLength: 0
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    countryNameType:
      description: "Used for Character Strings, length 0 to 200 - It indicates country/nationality\
        \ description."
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        displayCountryFlag:
          description: "Setting this to true will display the guest profile's country\
            \ flag in the OPERA Cloud user interface, if it is configured."
          type: boolean
        isoCode:
          description: ISO standard code for country.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
      type: object
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    reservationPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        expirationDateExpired:
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        storeToCreditCardWallet:
          description: Indicate whether the credit card will be stored to the credit
            card wallet or not.
          type: boolean
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        code:
          description: The authorization rule code.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    payeeInfoType:
      description: Payee information.
      properties:
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentTime:
          description: Time the text was last sent to the user.
          format: date-time
          type: string
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        instructions:
          description: Turndown instructions for the room.
          type: string
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        frontOfficeStatus:
          $ref: '#/components/schemas/frontOfficeRoomStatusType'
        housekeepingStatus:
          $ref: '#/components/schemas/frontOfficeRoomStatusType'
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
        reservationPreConfiguredRoutingInstructions:
          $ref: '#/components/schemas/reservationPreConfiguredRoutingInstructionsType'
      type: object
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        excludeFromAutoAuthorization:
          description: Indicates if the reseravtion will be excluded from auto athorization
            of Credit Cards.
          type: boolean
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
      type: object
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        beginDate:
          description: Begin Date for attached Routing Instruction.
          format: date
          type: string
        endDate:
          description: End Date for attached Routing Instruction.
          format: date
          type: string
        folioView:
          description: Folio Window.
          type: integer
      type: object
    authorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
        amountRequired:
          description: Deposit Amount Required.
          type: number
        amountOwed:
          description: Deposit Amount Oustanding.
          type: number
      type: object
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - HouseKeeping
      - EnrollToPrimaryMembership
      - EnrollInProgress
      - MemberAwardAttached
      - UpgradeAwardAttached
      type: string
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
      type: object
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        telephones:
          $ref: '#/components/schemas/resCommunicationType_telephones'
        emails:
          $ref: '#/components/schemas/resCommunicationType_emails'
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        expectedReturnTime:
          description: Expected Return Time
          format: date-time
          type: string
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    awardUpgrades:
      description: Response object for available award upgrades.
      properties:
        awardUpgradeInfo:
          $ref: '#/components/schemas/awardUpgradeInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardUpgradeInfoType:
      properties:
        membershipType:
          description: The type of the membership.
          maxLength: 20
          minLength: 0
          type: string
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: The current level of the membership.
          maxLength: 20
          minLength: 0
          type: string
        fromRoomType:
          description: From Room type associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        reservationTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        membershipPoints:
          description: Current membership points available for this guest.
          type: integer
        awardUpgradeSummaries:
          description: Summary information related to award upgrade.
          items:
            $ref: '#/components/schemas/awardUpgradeSummaryType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property associated with the award upgrade.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    awardUpgradeSummariesType:
      description: Summary information related to award upgrade.
      items:
        $ref: '#/components/schemas/awardUpgradeSummaryType'
      maxItems: 4000
      type: array
    awardUpgradeSummaryType:
      properties:
        awardCode:
          description: User configured award code.
          maxLength: 40
          minLength: 0
          type: string
        fromRoomType:
          description: From Room type associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        toRoomType:
          description: To Room type associated with the award.
          maxLength: 20
          minLength: 0
          type: string
        pointsRequired:
          description: Total Number of points required for the award.
          type: integer
        penaltyPoints:
          description: Total Number of penalty points if cancelled.
          type: integer
        penaltyDays:
          description: Number days before arrival to apply penalty for cancellation.
          type: integer
        penaltyCharge:
          description: Number points deducted if award is cancelled.
          type: integer
        penaltyType:
          description: "Type of cancel penalty like Points, etc."
          maxLength: 20
          minLength: 0
          type: string
        awardUpgradeDetails:
          description: Daily Details related to award upgrade.
          items:
            $ref: '#/components/schemas/awardUpgradeDetailType'
          maxItems: 4000
          type: array
      type: object
    awardUpgradeDetailsType:
      description: Daily Details related to award upgrade.
      items:
        $ref: '#/components/schemas/awardUpgradeDetailType'
      maxItems: 4000
      type: array
    awardUpgradeDetailType:
      properties:
        date:
          description: Date on which the award details like points required and penalty
            points are applicable.
          format: date
          type: string
        pointsRequired:
          description: Points required for the award detail date.
          type: integer
        penaltyPoints:
          description: Penalty Points applicable for the award detail date.
          type: integer
      type: object
    reservationAwards:
      description: Response of fetch awards for a reservation.
      properties:
        reservationAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    awardsType:
      description: List of awards.
      items:
        $ref: '#/components/schemas/awardType'
      maxItems: 4000
      type: array
    awardType:
      description: Detailed information of the awards.
      properties:
        awardCode:
          description: Award category.
          maxLength: 20
          minLength: 0
          type: string
        awardType:
          $ref: '#/components/schemas/awardKindType'
        description:
          description: Description of the award/certificate.
          type: string
        certificateNo:
          description: Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        membershipNo:
          description: Membership No.
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelCategory:
          description: Indicates the lowest hotel category for which the certificate
            is valid.
          maxLength: 20
          minLength: 0
          type: string
        externalHotelCode:
          description: Hotel Code of the CRS application that this certificate belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        externalConfirmationNo:
          description: Confirmation Number given by a CRS application for this reservation.
          maxLength: 20
          minLength: 0
          type: string
        categoryValid:
          description: Indicates whether the category of certificate is valid or not
            for this resort.
          type: boolean
        reservationCertificateType:
          $ref: '#/components/schemas/reservationCertificateType'
        rewardCertificateType:
          $ref: '#/components/schemas/rewardCertificateType'
        status:
          $ref: '#/components/schemas/awardStatusType'
        expirationDate:
          description: Expiration Date.
          format: date
          type: string
        gift:
          description: Signifies whether award is gift or not.
          type: boolean
        upgrade:
          description: Signifies whether upgrade award or not.
          type: boolean
        package:
          description: Signifies whether upgrade is package or not.
          type: boolean
        instantlyRedeemable:
          description: Indicates if the award is an Instant Redemption award.
          type: boolean
        paidUpgrade:
          description: Indicates if this certificate was ordered using the "Paid Upgrade"
            option in the E-Certs screen.
          type: boolean
        detailedCertificate:
          description: Indicates if this certificate is detailed or not.
          type: boolean
        nights:
          description: Award Nights.
          type: integer
        sourceType:
          description: "MRW : From MRW MAN:Entered manually."
          type: string
        points:
          description: No. of points used to order this award.
          type: number
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        quantity:
          description: Quantity of such awards needed to be ordered.
          type: integer
        displaySequence:
          description: Indicates the order in which the certificates received from
            MRW.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    awardKindType:
      description: Indicates that this is electronic certificate.
      enum:
      - Paper
      - ECertificate
      type: string
    reservationCertificateType:
      description: Certificate is incentive.
      enum:
      - Reward
      - Incentive
      type: string
    rewardCertificateType:
      description: Point Saver reward.
      enum:
      - Regular
      - StayAnytime
      - PointSaver
      type: string
    awardStatusType:
      description: Indicates that certificate is in use.
      enum:
      - Available
      - NotAvailable
      - InUse
      type: string
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    createReservation:
      description: Request object to create reservations. Includes instructions for
        information which needs to be returned.
      properties:
        reservations:
          $ref: '#/components/schemas/hotelReservationsType'
        fetchInstructions:
          description: Instruction on what has to be fetched. Refer to Generic common
            types document.
          items:
            $ref: '#/components/schemas/reservationInstructionType'
          type: array
        reservationsInstructionsType:
          $ref: '#/components/schemas/reservationsInstructionsType'
        channelInformation:
          $ref: '#/components/schemas/channelResvRQInfoType'
        reservationNotification:
          default: false
          description: "Boolean flag that forces reservation to updates in OPERA.\
            \ By default, this value is false."
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelReservationsType:
      description: A collection of Reservation objects and Unique IDs of Reservation.
      properties:
        reservation:
          description: A collection of Reservations.
          items:
            $ref: '#/components/schemas/hotelReservationType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    hotelReservationType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        roomStay:
          $ref: '#/components/schemas/roomStayType'
        compAuthorizer:
          $ref: '#/components/schemas/compAuthorizerInfoType'
        reservationGuests:
          description: Collection of guests associated with the reservation.
          items:
            $ref: '#/components/schemas/resGuestType'
          maxItems: 4000
          type: array
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        additionalGuestInfo:
          $ref: '#/components/schemas/resGuestAdditionalInfoType'
        reservationProfiles:
          $ref: '#/components/schemas/hotelReservationType_reservationProfiles'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        trackItItems:
          description: ""
          items:
            $ref: '#/components/schemas/trackItItemType'
          maxItems: 4000
          type: array
        locators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        attachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        webRegistrationCards:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        serviceRequests:
          description: Service request.
          items:
            $ref: '#/components/schemas/serviceRequest'
          maxItems: 4000
          type: array
        reservationActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        scheduledActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        prepaidCards:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardType'
          maxItems: 4000
          type: array
        profileAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        reservationPackages:
          description: A Service object represents a non-room product provided to
            guests. Service products may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestComments:
          description: List of Notes for the Guest related to the profile.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestMemberships:
          description: List of Memberships for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/membershipType'
          maxItems: 4000
          type: array
        preferenceCollection:
          description: Collection of reservation preferences.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        reservationMemberships:
          description: List of reservation memberships.
          items:
            $ref: '#/components/schemas/reservationMembershipType'
          maxItems: 4000
          type: array
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        routingInstructions:
          description: A routing info object can either be of type Folio OR of type
            Room with its corresponding instructions.
          items:
            $ref: '#/components/schemas/routingInfoType'
          maxItems: 4000
          type: array
        reservationPolicies:
          $ref: '#/components/schemas/reservationPoliciesType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        linkedReservation:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        extSystemSync:
          type: boolean
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        cancellation:
          $ref: '#/components/schemas/hotelReservationType_cancellation'
        catering:
          $ref: '#/components/schemas/cateringResInfoType'
        alerts:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        traces:
          description: List of Reservation Traces.
          items:
            $ref: '#/components/schemas/hotelReservationTraceType'
          maxItems: 4000
          type: array
        confirmationLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
        callHistory:
          description: Holds call information.
          items:
            $ref: '#/components/schemas/callType'
          maxItems: 4000
          type: array
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/guestMessageType'
          maxItems: 4000
          type: array
        lockHandle:
          description: "An id representing the record lock for this reservation. When\
            \ passed, update operation will verify that this lock is still valid."
          type: number
        overrideInstructions:
          description: List of override actions done.
          items:
            $ref: '#/components/schemas/overrideInstructionType'
          maxItems: 4000
          type: array
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        eCoupons:
          description: Collection of ECouponType object.
          items:
            $ref: '#/components/schemas/eCouponType'
          maxItems: 4000
          type: array
        transactionDiversions:
          $ref: '#/components/schemas/hotelReservationType_transactionDiversions'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        tickets:
          description: Collection of TicketType objects.
          items:
            $ref: '#/components/schemas/ticketType'
          maxItems: 4000
          type: array
        accessRestrictionMessage:
          description: Configurable Access Restriction Message for Excluded Block
            or Rate Code.
          maxLength: 4000
          minLength: 0
          type: string
        eCertificates:
          description: Collection of ECertificateType object.
          items:
            $ref: '#/components/schemas/reservationECertificateType'
          maxItems: 4000
          type: array
        customNameValueDetail:
          $ref: '#/components/schemas/nameValueDetailType'
        customChargeExemptionDetails:
          description: List of Custom Charge Exemptions.
          items:
            $ref: '#/components/schemas/customChargeExemptionType'
          maxItems: 4000
          type: array
        folios:
          description: This type contains a list of generated bills for a reservation.
          items:
            $ref: '#/components/schemas/folioShortInfoType'
          maxItems: 4000
          type: array
        autoBorrowFromHouse:
          description: "This flag will force to borrow from house if borrow required\
            \ for number of rooms requested, this will only applicable when reservation\
            \ is attached to a Block."
          type: boolean
        overrideExternalChecks:
          description: "Forcefully override the create/update action on the Reservation.\
            \ For real-time CRS interfaces, this element is used as force selling\
            \ indicator in case of Create or Update Reservation"
          type: boolean
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkIn:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        printRate:
          description: Indicates whether to show the rate or not on a printed document
            which includes the rate.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
        reinstateDate:
          description: Business Date when the reservation was last reinstated.
          format: date
          type: string
        party:
          description: Party/PartyCode when reservation is part of a party(a small
            group).
          maxLength: 50
          minLength: 0
          type: string
        primaryEnrollmentResort:
          description: Name Of the Resort/Hotel for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        primaryEnrollmentChain:
          description: Name of the Chain for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        customReference:
          description: Custom Reference to identify reservation.
          maxLength: 50
          minLength: 0
          type: string
        displayColor:
          description: The color to display this reservation on room grid displays.
          maxLength: 20
          minLength: 0
          type: string
        displayColorDetails:
          $ref: '#/components/schemas/reservationDisplayColorInfoType'
        markAsRecentlyAccessed:
          description: Mark this reservation as recently accessed.
          type: boolean
        overrideInventoryCheck:
          description: Indicates to Override the Room Inventory Check if applicable.
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        preRegistered:
          description: Is the reservation pre-registered.
          type: boolean
        upgradeEligible:
          description: Indicates whether the reservation is eligible for upgrade.
          type: boolean
        overrideBlockRestriction:
          type: boolean
        allowAutoCheckin:
          description: Flag to allow auto checkin
          type: boolean
        hasOpenFolio:
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowPreRegistration:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for prior check in by guest using mobile device . Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile check in yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        optedForCommunication:
          description: "Flag containing true or false value to determine if the guest\
            \ has opted for communications pertaining to this reservation.Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is marked for communication. Upon fetch, the current\
            \ state of the flag will show true or false."
          type: boolean
        chargeCardNumber:
          description: This attribute represents Hotel charge card number. This number
            is generated automatically in OPERA when a reservation is created in OPERA.
            It is part of a functionality that provide the guest with the convenience
            of placing all their charges directly on their reservation folio.
          maxLength: 100
          minLength: 0
          type: string
        overrideOutOfServiceCheck:
          description: Indicates to Override the Room Out Of Service Check if applicable.
          type: boolean
        overrideRotationRoom:
          default: true
          description: Override the rotation room that is next in the sequence with
            the room currently assigned to this reservation. This is applicable when
            Room Rotation OPERA Control is active.
          type: boolean
        overrideRoomOwnership:
          default: true
          description: Override the room ownership of the room currently assigned
            to this reservation. This is applicable when Room Rotation OPERA Control
            is active.
          type: boolean
        reservationMembershipAwards:
          description: Collection of membership awards attached to a reservation
          items:
            $ref: '#/components/schemas/reservationMembershipAwardType'
          maxItems: 4000
          type: array
        overrideRoomFeatures:
          description: "This flag indicates true/false. When this is true, it will\
            \ allow to override the room feature preference validation while assigning\
            \ rooms. The Reservation Room Features OPERA Control will determine which\
            \ room feature preferences will be validated. When Reservation Room Features\
            \ is on, the validation will be against the Room Feature preferences attached\
            \ to the reservation. If the parameter is off, the validation will be\
            \ against the room feature preferences attached to the profile. This is\
            \ applicable when the Room Feature Validation OPERA Control is on."
          type: boolean
        backToBack:
          description: This attribute indicates if the linked reservation is marked
            as Back to Back or not.
          type: boolean
        backToBackSequence:
          $ref: '#/components/schemas/backToBackResSequenceType'
        payeeSharer:
          description: This attribute indicates if the Shared reservation is marked
            as the Payee Sharer or not.
          type: boolean
        scheduledRoomMoves:
          description: Scheduled Room Moves
          items:
            $ref: '#/components/schemas/scheduledRoomMoveType'
          maxItems: 4000
          type: array
        routeAllTransactionsToShare:
          description: Indicates if this joining reservation should route all transactions
            to the 'Share To' reservation when including Share Reservations Instructions.
          type: boolean
        backToBackGroupId:
          description: This attribute represents a common identifier for a subgroup
            of linked reservations marked as Back to Back in a group of linked reservations.
          maxLength: 80
          minLength: 0
          type: string
        overrideSharesStayingPastDepartureCheck:
          description: Indicates to override the check on shared reservations to whom
            changes can be propagated until their departure date.
          type: boolean
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    roomStayType:
      properties:
        registrationNumber:
          $ref: '#/components/schemas/uniqueID_Type'
        currentRoomInfo:
          $ref: '#/components/schemas/currentRoomInfoType'
        roomRates:
          description: "A collection of Room Rates associated with a particular Room\
            \ Stay. Each Room Rate combination can have multiple rates. Example King\
            \ room, Rack rate plan, Monday through Thursday, weekday amount, Friday\
            \ and Saturday, weekend amount."
          items:
            $ref: '#/components/schemas/roomRateType'
          maxItems: 4000
          type: array
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        bookingTimeSpan:
          $ref: '#/components/schemas/bookingTimeSpanType'
        reservationKeyInfo:
          $ref: '#/components/schemas/reservationKeyInfoType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        suiteWith:
          description: Connecting Rooms.
          maxLength: 200
          minLength: 0
          type: string
        total:
          $ref: '#/components/schemas/totalType'
        totalPoints:
          $ref: '#/components/schemas/pointsType'
        multiValueAttrs:
          description: Informative indicators indicating different values of an attribute
            exists over the stay.
          items:
            maxLength: 2000
            type: string
          maxItems: 4000
          type: array
        upsellInfo:
          $ref: '#/components/schemas/upsellInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        printRate:
          description: This control whether rate info will be printed in confirmation
            letter.
          type: boolean
        primaryShareType:
          $ref: '#/components/schemas/primaryShareTypeType'
        remoteCheckInAllowed:
          description: Indicates whether the reservation is pre-registered for internet
            check-in or not.
          type: boolean
        bookingMedium:
          description: Classifies the medium(Channel field on reservation screen)
            through which the reservation is made.
          maxLength: 20
          minLength: 0
          type: string
        bookingMediumDescription:
          description: Description of the booking medium.
          maxLength: 2000
          minLength: 0
          type: string
        availableUpsellOfferCount:
          description: Number of Upsell Offers Available for this stay. This will
            only be populated if the Upsell Instruction is included in the Allowed
            Instruction request
          type: integer
      type: object
    currentRoomInfoType:
      description: Room information of the reservation for the current day.
      properties:
        roomType:
          description: Current room type.
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Current room number.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
        suggestedRoomNumbers:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        roomDescription:
          description: Current room description.
          maxLength: 2000
          minLength: 0
          type: string
        roomViewCode:
          description: "Represents the room view code like City view, River view,\
            \ Ocean view etc."
          maxLength: 40
          minLength: 0
          type: string
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was upgraded by AI Room Assignment.
          type: boolean
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    reservationRoomOwnershipType:
      description: Indicates if the assigned reservation room is an Owner/Referral
        or Regular room.
      enum:
      - Owner
      - Referral
      - Regular
      type: string
    roomRateType:
      properties:
        total:
          $ref: '#/components/schemas/totalType'
        totalPoints:
          $ref: '#/components/schemas/pointsType'
        rates:
          $ref: '#/components/schemas/ratesType'
        packages:
          items:
            $ref: '#/components/schemas/packageElementType'
          maxItems: 4000
          type: array
        stayProfiles:
          description: Profile associated with the room Stay.
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        taxFreeGuestCounts:
          $ref: '#/components/schemas/guestCountsType'
        awards:
          $ref: '#/components/schemas/resAwardsType'
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomRateInfo:
          description: Information about the Room Rate Combination.
          maxLength: 2000
          minLength: 0
          type: string
        eligibilityCode:
          description: "Used by 3rd party CRS, the Eligible Reservation Code defines\
            \ if this day/rate is eligible for points in the Loyalty System."
          maxLength: 20
          minLength: 0
          type: string
        awardCode:
          description: "Used by 3rd party CRS, the Award Code defines if this day/rate\
            \ was booked as an Award in the Loyalty System."
          maxLength: 20
          minLength: 0
          type: string
        awardNumber:
          description: "Used by 3rd party CRS, the Award Number defines if this day/rate\
            \ was booked as an Award in the Loyalty System."
          maxLength: 80
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          maxLength: 20
          minLength: 0
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        rateIncludesTax:
          description: Indicates if the calculated amount for the day is inclusive
            of tax.
          type: boolean
        suppressRate:
          type: boolean
        marketCode:
          description: "The code that relates to the market being sold to (e.g., the\
            \ corporate market, packages)."
          maxLength: 20
          minLength: 0
          type: string
        marketCodeDescription:
          description: Description of the market code.
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: "To specify where the business came from e.g. radio, newspaper\
            \ ad, etc."
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        numberOfUnits:
          description: The number of rooms.
          type: integer
        roomId:
          description: A string value representing the unique identification of a
            room.
          maxLength: 20
          minLength: 0
          type: string
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        roomTypeCharged:
          description: Room Type used for the Rate calculation.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: Commission Code applicable for commission calculation for Travel
            Agent/Company.
          maxLength: 20
          minLength: 0
          type: string
        commissionable:
          description: Indicates Commission is applicable for commission calculation
            for Travel Agent/Company.
          type: boolean
        houseUseOnly:
          description: Indicates this reservation is for House use.
          type: boolean
        complimentary:
          description: Indicates this reservation rate is complimentary.
          type: boolean
        inventoryLender:
          description: Indicates whether the room type inventory was taken from the
            allotment or House availability.
          type: string
        fixedRate:
          description: Fixed Rate Indicator.
          type: boolean
        barRanking:
          description: Best Available rates ranking.
          type: integer
        rateGroup:
          description: "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups\
            \ are enabled the element provides the rate group for the rate plan code."
          maxLength: 20
          minLength: 0
          type: string
        discountAllowed:
          description: Indicates if the Rate Code is discountable i.e discounts are
            allowed on the rate code.
          type: boolean
        bogoDiscount:
          description: Indicates if the Rate Code has BOGO(Bye one Get one) indicator.
          type: boolean
        rateLevel:
          description: "Rate plan type like Corporate,Regular,Military,Weekend etc."
          maxLength: 20
          minLength: 0
          type: string
        commissionPercentage:
          description: Indicates commission percentage used by the rate plan.
          type: integer
        commissionAmount:
          description: Indicates commission amount used by the rate plan.
          type: integer
        taxIncluded:
          description: "If true, indicates if tax is included in the rate code."
          type: boolean
        allowAutoCheckIn:
          description: It represents whether auto check-in is enabled or not for psuedo
            room types.
          type: boolean
        bookingMedium:
          description: Classifies the medium(Channel field on reservation screen)
            through which the reservation is made.
          maxLength: 20
          minLength: 0
          type: string
        bookingMediumDescription:
          description: Description of the booking medium.
          maxLength: 2000
          minLength: 0
          type: string
        purposeOfStay:
          description: Purpose of stay.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    totalType:
      description: The total amount charged for the service including additional amounts
        and fees.
      properties:
        taxes:
          $ref: '#/components/schemas/taxesType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        amountBeforeTax:
          description: "The total amount does not include any associated tax (e.g.,\
            \ sales tax, VAT, GST or any associated tax), if the amount is Tax Exclusive.\
            \ However, it does Include Taxes if it is marked as Tax Inclusive."
          type: number
        amountBeforeAnyTax:
          description: "The total amount per room does not include any associated\
            \ tax (e.g., sales tax, VAT, GST or any associated tax), for both Tax\
            \ Exclusive/Inclusive."
          type: number
        amountAfterTax:
          description: "The total amount including all associated taxes (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        code:
          description: Type of charge.
          maxLength: 20
          minLength: 0
          type: string
        rateOverride:
          description: When true indicates that the rate amount has been overridden.
          type: boolean
        baseAmount:
          description: The rate's base price. Amount excluding price for any add to
            rate combine line package attached to the rate.Also excludes any discounts
          type: number
        amountBeforeTaxPerRoom:
          description: "The total amount per room not including any associated tax\
            \ (e.g., sales tax, VAT, GST or any associated tax)."
          type: number
        amountAfterTaxPerRoom:
          description: "The total amount per room including all associated taxes (e.g.,\
            \ sales tax, VAT, GST or any associated tax)."
          type: number
      type: object
    taxesType:
      description: A collection of taxes.
      properties:
        tax:
          description: An individual tax.
          items:
            $ref: '#/components/schemas/taxType'
          maxItems: 99
          type: array
        amount:
          description: A monetary amount.
          type: number
        totalTax:
          description: A sum of the taxes which are related to Rate Info.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    taxType:
      description: "Applicable tax element. This element allows for both percentages\
        \ and flat amounts. If one field is used, the other should be zero since logically,\
        \ taxes should be calculated in only one of the two ways."
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/amountDeterminationType'
        code:
          description: "Code identifying the fee (e.g.,agency fee, municipality fee)."
          maxLength: 20
          minLength: 0
          type: string
        generateTransactionCode:
          description: Unique identifier for Generate Tax Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    amountDeterminationType:
      description: "Used to indicate if an amount is inclusive or exclusive of other\
        \ charges, such as taxes."
      enum:
      - Inclusive
      - Exclusive
      type: string
    ratesType:
      description: Individual rate amount.
      properties:
        rate:
          description: "The Rate contains a collection of elements that define the\
            \ amount of the rate, associated fees, additional occupant amounts. Taxes\
            \ can be broken out or included within the various amounts. A currency\
            \ can be associated to each amount."
          items:
            $ref: '#/components/schemas/amountType'
          maxItems: 4000
          type: array
      type: object
    amountType:
      description: "Base charge and additional charges related to a room that includes\
        \ such things as additional guest amounts, cancel fees, etc. Also includes\
        \ Discount percentages, total amount, and the rate description."
      properties:
        base:
          $ref: '#/components/schemas/totalType'
        discount:
          $ref: '#/components/schemas/discountType'
        shareRatePercentage:
          description: Indicates the share rate percentage for the reservation if
            set to CUSTOMSPLIT.
          maximum: 100
          minimum: 0
          type: number
        shareDistributionInstruction:
          $ref: '#/components/schemas/shareDistributionInstructionType'
        total:
          $ref: '#/components/schemas/totalType'
        requiredPoints:
          $ref: '#/components/schemas/pointsType'
        effectiveRate:
          $ref: '#/components/schemas/totalType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    discountType:
      description: "Identifies and provides details about the discount. This allows\
        \ for both percentages and flat amounts. If one field is used, the other should\
        \ be zero/not specified since logically."
      properties:
        discountReason:
          maxLength: 2000
          minLength: 0
          type: string
        percent:
          description: Percentage discount.
          type: number
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        discountCode:
          description: "Specifies the type of discount (e.g., No condition, LOS, Deposit\
            \ or Total amount spent)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    shareDistributionInstructionType:
      description: The type of Rate Amount Change to be done on the Sharer reservation.
        This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount
        between Sharer Reservations. ENTIRE -> This Sharer will get the total amount
        of the rate code for all the Sharer Reservations.
      enum:
      - Full
      - Entire
      - Split
      - CustomSplit
      type: string
    packageElementType:
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        allowance:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        packageCode:
          type: string
        calculationRule:
          type: string
        postingRhythm:
          type: string
        quantity:
          type: integer
        includedInRate:
          type: boolean
        addRateSeprateLine:
          type: boolean
        addRateCombinedLine:
          type: boolean
        startTime:
          type: string
        endTime:
          type: string
        sellSeparate:
          type: boolean
      type: object
    reservationProfileType:
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profile:
          $ref: '#/components/schemas/profileType'
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
        emails:
          $ref: '#/components/schemas/profileType_emails'
        uRLs:
          $ref: '#/components/schemas/profileType_uRLs'
        comments:
          $ref: '#/components/schemas/profileType_comments'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileType_profileDeliveryMethods'
        profileMemberships:
          $ref: '#/components/schemas/profileType_profileMemberships'
        preferenceCollection:
          $ref: '#/components/schemas/profileType_preferenceCollection'
        relationships:
          $ref: '#/components/schemas/profileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        reservationInfoList:
          $ref: '#/components/schemas/reservationHistoryFutureInfoType'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        eCertificates:
          description: List of e-certificates for the profile.
          items:
            $ref: '#/components/schemas/eCertificateType'
          maxItems: 4000
          type: array
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipsList:
          $ref: '#/components/schemas/profileType_roomOwnershipsList'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        guestAge:
          description: Age of a guest in years.
          minimum: 0
          type: integer
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        salutation:
          description: Salutation of the profile
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    identificationInfoType:
      description: Information on the identification of the customer.
      properties:
        identification:
          $ref: '#/components/schemas/identificationType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    identificationType:
      description: Identification information of the customer.
      properties:
        idType:
          description: "Identification Type. Eg Passport, Driving License etc."
          maxLength: 40
          minLength: 0
          type: string
        idNumber:
          description: Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idNumberMasked:
          description: Masked Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        issuedCountry:
          description: The country where Identification was issued.
          maxLength: 20
          minLength: 0
          type: string
        issuedDate:
          description: Issued date of Identification.
          format: date
          type: string
        issuedPlace:
          description: The place where Identification was issued.
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of Identification.
          format: date
          type: string
        registeredProperty:
          description: Property where the identification belongs to.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    companyType:
      properties:
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    uRLInfoType:
      description: Web site address.
      properties:
        url:
          $ref: '#/components/schemas/uRLType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        value:
          description: Property Value
          type: string
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    profileMembershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
      type: object
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
      type: object
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    preferenceTypeType:
      description: Preference details for the profile.
      properties:
        preference:
          description: Collection of Preferences for the profile.
          items:
            $ref: '#/components/schemas/preferenceType'
          maxItems: 4000
          type: array
        preferenceType:
          description: Preference group code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceTypeDescription:
          description: Preference group description.
          type: string
        sequence:
          description: Preference Sequence.
          type: string
        maxQuantity:
          description: Maximum quantity of preferences allowed per preference group.
          type: integer
        availableQuantity:
          description: Available quantity of preferences (maximum quantity - Existing
            preferences)per preference group.
          type: integer
        maxResortUsedQuantity:
          description: Maximum quantity of preferences used by any resort per preference
            group.
          type: integer
        reservationPreference:
          description: Whether this preference is reservation preference or not.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    preferenceType:
      description: Guest Preference details for the profile.
      properties:
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceId:
          maxLength: 20
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        customer:
          $ref: '#/components/schemas/customerType'
        company:
          $ref: '#/components/schemas/companyType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    ownerType:
      description: Generic type for information about an owner.
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          $ref: '#/components/schemas/personNameType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        masterAccountDetails:
          type: object
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    masterAccountInfoType:
      type: object
    reservationHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/historyListType'
        futureList:
          $ref: '#/components/schemas/futureListType'
      type: object
    historyListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    futureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    lastStayInfoType:
      description: Contains last stay related details for the profile
      properties:
        lastRoom:
          description: Used to hold last room information for the profile.
          type: string
        totalStay:
          description: The total number of previous stay of the profile.
          type: integer
      type: object
    profileRestrictions:
      properties:
        reason:
          description: Restriction reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Description of restriction reason.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
      type: object
    profileCashieringType:
      description: Contains cashiering related details for the profile
      properties:
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    profileCommissionType:
      description: This is the preconfigured routing instruction type.
      properties:
        hotelId:
          description: Hotel Code for the commission being used for a profile.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: commission Code for a profile.
          maxLength: 20
          minLength: 0
          type: string
        bankAccount:
          description: Bank account used for the commission for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethods'
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
      type: object
    commissionPaymentMethods:
      description: Check
      enum:
      - Cent
      - Eft
      - Chk
      type: string
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/characterUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/numericUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/dateUDFType'
          maxItems: 4000
          type: array
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    eCertificatesType:
      description: List of e-certificates for the profile.
      items:
        $ref: '#/components/schemas/eCertificateType'
      maxItems: 4000
      type: array
    eCertificateType:
      description: E-Certificates details.
      properties:
        voucherNo:
          description: System generated unique voucher number.
          maxLength: 40
          minLength: 0
          type: string
        certificateNo:
          description: Printed certificate no. This has to be unique.
          maxLength: 40
          minLength: 0
          type: string
        eCertificateInfo:
          $ref: '#/components/schemas/eCertificateInfoType'
        expiryDate:
          description: Date of expiry.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        consumptionDetail:
          $ref: '#/components/schemas/eCertificateConsumptionType'
        status:
          $ref: '#/components/schemas/eCertificateStatusType'
        printed:
          description: Print status of the certificate.
          type: boolean
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        issueDate:
          description: Date when certificate was issued.
          format: date
          type: string
      type: object
    eCertificateInfoType:
      description: E-Certificates details.
      properties:
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Membership type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        awardCode:
          description: Award type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code to which certificate is attached to.
          maxLength: 20
          minLength: 0
          type: string
        voucherBenefitCode:
          description: Voucher benefit code attached to the certificate.
          maxLength: 40
          minLength: 0
          type: string
        hotels:
          $ref: '#/components/schemas/eCertificateInfoType_hotels'
        description:
          description: Description about the certificate.
          maxLength: 200
          minLength: 0
          type: string
        longDescription:
          description: Detail description about the certificate.
          maxLength: 4000
          minLength: 0
          type: string
        label:
          description: Label for the certificate.
          maxLength: 40
          minLength: 0
          type: string
        value:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        benefitSummary:
          description: Summary of Benefits attached to this ECertificate.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    eCertificateScopeType:
      description: Indicates that OPERA E-Certificate is available for a specific
        list of hotels.
      enum:
      - Global
      - Hotel
      - MultiHotel
      type: string
    eCertificateConsumptionType:
      description: E-Certificates details.
      properties:
        hotelId:
          description: Property where certificate was consumed for.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/eCertificateConsumeSourceType'
        surname:
          description: Last name of the person who consumed the certificate..
          maxLength: 40
          minLength: 0
          type: string
        firstName:
          description: First name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: Middle name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email of the person who consumed the certificate.
          maxLength: 2000
          minLength: 0
          type: string
        date:
          description: Date the certificate was consumed.
          format: date
          type: string
        userName:
          description: Application user who created the consumption.
          maxLength: 2000
          minLength: 0
          type: string
        referenceId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    eCertificateConsumeSourceType:
      description: Indicates that OPERA E-Certificate is consumed by hotelPMS.
      enum:
      - Central
      - Web
      - Hotel
      type: string
    eCertificateStatusType:
      description: Indicates that OPERA E-Certificate is reserved.
      enum:
      - Cancelled
      - Consumed
      - Deleted
      - Expired
      - Issued
      - Reserved
      type: string
    eCertificateIssueSourceType:
      description: Indicates that OPERA E-Certificate is issued by external system.
      enum:
      - Opera
      - Web
      - Interface
      type: string
    roomOwnershipType:
      description: Define the search criteria for retrieving room ownership records
      properties:
        roomOwnershipId:
          description: Unique Id for Room Owner record.
          type: integer
        contractNumber:
          description: Contract number for room owner.
          type: string
        roomId:
          description: Room Id of room owner.
          type: string
        roomCategory:
          description: Room Category of the room ownership record.
          type: string
        roomType:
          description: Room Type of the room ownership record.
          type: string
        startDate:
          description: Start Date of the room ownership record.
          format: date
          type: string
        endDate:
          description: End Date of the room ownership record.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          description: Status of the room ownership record.
          type: string
      type: object
    guestCountsType:
      description: A collection of GuestCount by age group.
      properties:
        childAges:
          description: Age of a child in years.
          items:
            $ref: '#/components/schemas/childAgeType'
          maxItems: 4000
          type: array
        childBuckets:
          $ref: '#/components/schemas/childBucketsType'
        adults:
          description: Defines the number of Adults.
          type: integer
        children:
          description: Defines the number of Children.
          type: integer
      type: object
    childAgesType:
      description: Age of a child in years.
      items:
        $ref: '#/components/schemas/childAgeType'
      maxItems: 4000
      type: array
    childAgeType:
      description: Defines Child's Age.
      properties:
        age:
          description: Age of a child in years.
          type: integer
      type: object
    childBucketsType:
      description: Defines children counts with Age Qualifying Group(Child Bucket)
        classification.
      properties:
        bucket1Count:
          description: Number of children classified under the first Age Qualifying
            Group(Child Bucket#1).
          type: integer
        bucket2Count:
          description: Number of children classified under the second Age Qualifying
            Group(Child Bucket#2).
          type: integer
        bucket3Count:
          description: Number of children classified under the third Age Qualifying
            Group(Child Bucket#3).
          type: integer
        bucket4Count:
          description: Number of children classified under the fourth Age Qualifying
            Group(Child Bucket#4).
          type: integer
        bucket5Count:
          description: Number of children classified under the fifth Age Qualifying
            Group(Child Bucket#5).
          type: integer
      type: object
    resAwardsType:
      description: Membership Awards code applied on the reservation.
      properties:
        membershipNo:
          $ref: '#/components/schemas/uniqueID_Type'
        originalRoomType:
          description: Room Type before the Upgrade Award.
          maxLength: 20
          minLength: 0
          type: string
        upgradeRoomType:
          description: Room Type after the Upgrade Award.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    upsellInfoType:
      description: Information regarding upsell for a reservation.
      properties:
        originalInfo:
          $ref: '#/components/schemas/upsellInfoType_originalInfo'
        upsellInfo:
          $ref: '#/components/schemas/upsellInfoType_upsellInfo'
      type: object
    primaryShareTypeType:
      enum:
      - Primary
      - NonPrimary
      type: string
    compAuthorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    resGuestType:
      description: "A collection of ResGuest objects, identifying the guests associated\
        \ with this reservation. Which guests are in which room is determined by each\
        \ RoomStays ResGuestRPHs collection."
      properties:
        profileInfo:
          $ref: '#/components/schemas/resGuestType_profileInfo'
        arrivalTransport:
          $ref: '#/components/schemas/transportInfoType'
        departureTransport:
          $ref: '#/components/schemas/transportInfoType'
        visaInfo:
          $ref: '#/components/schemas/visaInfoType'
        reservationGuestRPH:
          description: "This is a reference placeholder, used as an index for this\
            \ guest in this reservation. In the ResGuest object it is used like all\
            \ other RPH attributes to send the delta of a reservation. It is used\
            \ by the RoomStay and Service objects to indicate which guests are associated\
            \ with that room stay or service."
          maxLength: 8
          minLength: 1
          type: string
        primary:
          description: When true indicates this is the primary guest.
          type: boolean
      type: object
    profileCashieringDetailType:
      description: The type contains routing instructions for the profile.
      properties:
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
        routingInstructions:
          $ref: '#/components/schemas/profileRoutingInstructionsType'
        taxType:
          description: Tax type code.
          maxLength: 20
          minLength: 0
          type: string
        fiscalGuestType:
          description: Guest type code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileRoutingInstructionsType:
      description: The type contains routing instructions for the profile.
      properties:
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        autoPopulateRouting:
          description: A flag which determines whether the instructions has to be
            automatically populated for this profile or not.
          type: boolean
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        otaTaxType:
          description: Open Travel Alliance(OTA) tax type for the given Transaction
            code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transportInfoType:
      properties:
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        type:
          maxLength: 20
          minLength: 0
          type: string
        transportCode:
          maxLength: 20
          minLength: 0
          type: string
        carrierCode:
          maxLength: 20
          minLength: 0
          type: string
        stationCode:
          maxLength: 20
          minLength: 0
          type: string
        dateTime:
          format: date-time
          type: string
        transportationReqd:
          type: boolean
      type: object
    visaInfoType:
      properties:
        visaIssueDate:
          format: date
          type: string
        visaExpiryDate:
          format: date
          type: string
        visaNumber:
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resGuestAdditionalInfoType:
      properties:
        portOfEntry:
          description: Entry point into the country. (Croatian Requirements).
          maxLength: 40
          minLength: 0
          type: string
        dateOfEntry:
          description: Entry Date into the country. (Croatian Requirements).
          format: date
          type: string
        nextDestination:
          description: Entry Date into the country. (Croatian Requirements).
          type: string
        preferredRoomType:
          description: Preferred Room Type of the guest.
          maxLength: 20
          minLength: 0
          type: string
        lastStay:
          $ref: '#/components/schemas/guestLastStayInfoType'
        purposeOfStay:
          description: "Purpose of stay. This is field is mandatory for putReservation/postReservation\
            \ Request when the Advanced Daily Details functionality is not active.\
            \ When Advanced Daily Details is active, if a value is sent in the roomRateType\
            \ object then it will take precedence over this value."
          maxLength: 20
          minLength: 0
          type: string
        guestClassification:
          description: Guest Classification for the data export.
          maxLength: 40
          minLength: 0
          type: string
        guestStatus:
          description: Guest Status for the data export.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    trackItItemsType:
      description: ""
      items:
        $ref: '#/components/schemas/trackItItemType'
      maxItems: 4000
      type: array
    trackItItemType:
      description: Detailed information of a Track It item.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        trackItId:
          $ref: '#/components/schemas/trackItId'
        group:
          $ref: '#/components/schemas/trackItGroup'
        ticketNumber:
          maxLength: 80
          minLength: 0
          type: string
        referenceNumber:
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/trackItType'
        action:
          $ref: '#/components/schemas/trackItActionType'
        location:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          type: integer
        followUpDate:
          format: date
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        assignedTo:
          $ref: '#/components/schemas/applicationUserType'
        reservationInfo:
          $ref: '#/components/schemas/trackItReservationInfoType'
        trackItLogList:
          items:
            $ref: '#/components/schemas/trackItLogType'
          maxItems: 4000
          type: array
      type: object
    trackItId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    trackItGroup:
      description: Group to which the Track It items belong.
      enum:
      - Parcel
      - Valet
      - Baggage
      - Lost
      type: string
    trackItType:
      description: "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed\
        \ vehicles or services."
      properties:
        type:
          $ref: '#/components/schemas/codeDescriptionType'
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    trackItActionType:
      description: Identifies the response expected from staff or other parties relative
        to a Track It ticket.
      properties:
        trackItAction:
          $ref: '#/components/schemas/codeDescriptionType'
        status:
          $ref: '#/components/schemas/actionStatusType'
      type: object
    actionStatusType:
      description: "Action status of the Track It item(Open, Closed)."
      enum:
      - Open
      - Closed
      type: string
    applicationUserType:
      properties:
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        appUser:
          maxLength: 60
          minLength: 0
          type: string
        lDAPUser:
          maxLength: 60
          minLength: 0
          type: string
        actAs:
          maxLength: 20
          minLength: 0
          type: string
        actAt:
          maxLength: 20
          minLength: 0
          type: string
        userDefaultLanguage:
          maxLength: 20
          minLength: 0
          type: string
        appUserId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          type: integer
        cashierTitle:
          description: Cashier title.
          maxLength: 2000
          minLength: 0
          type: string
        department:
          maxLength: 60
          minLength: 0
          type: string
        departmentLocation:
          maxLength: 60
          minLength: 0
          type: string
        salesRepCode:
          maxLength: 20
          minLength: 0
          type: string
        expiryDate:
          format: date
          type: string
        disabledUntil:
          format: date
          type: string
        passwordChangeDate:
          format: date
          type: string
        userInfo:
          $ref: '#/components/schemas/employeeInfoType'
        userSessionInfo:
          $ref: '#/components/schemas/userSessionInfoType'
        attendantInfo:
          $ref: '#/components/schemas/attendantType'
      type: object
    employeeInfoType:
      properties:
        personName:
          $ref: '#/components/schemas/personNameType'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        phoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
      type: object
    userSessionInfoType:
      properties:
        businessDate:
          format: date
          type: string
        systemDate:
          format: date
          type: string
        terminal:
          type: string
        runningApp:
          type: string
        shareProfiles:
          type: boolean
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        cro:
          $ref: '#/components/schemas/codeDescriptionType'
        chain:
          maxLength: 20
          minLength: 0
          type: string
        cROCountryCode:
          maxLength: 20
          minLength: 0
          type: string
        sessionDefaults:
          $ref: '#/components/schemas/userSessionDefaultsType'
        parameters:
          description: Collection of generic Name-Value-Pair parameters.
          items:
            $ref: '#/components/schemas/parameterType'
          maxItems: 4000
          type: array
      type: object
    userSessionDefaultsType:
      properties:
        dbDateFormat:
          type: string
        oracleDateFormat:
          type: string
        oracleTimeFormat:
          type: string
        javaDateFormat:
          type: string
        javaTimeFormat:
          type: string
        currencyCode:
          maxLength: 20
          minLength: 0
          type: string
        currencyFormat:
          type: string
        defaultLanguage:
          type: string
        baseLanguage:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    parametersType:
      description: Collection of generic Name-Value-Pair parameters.
      items:
        $ref: '#/components/schemas/parameterType'
      maxItems: 4000
      type: array
    parameterType:
      description: Name value pair type that will hold generic parameter information.
        Only use this type when the parameters being passed are too dynamic to be
        defined.
      properties:
        parameterName:
          description: Name of the parameter.
          type: string
        parameterValue:
          description: Value of the parameter.
          type: string
      type: object
    attendantType:
      properties:
        attendantId:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trackItReservationInfoType:
      description: Reservation info associated with a Track It item.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        guestInfo:
          $ref: '#/components/schemas/resGuestInfoType'
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          maxLength: 20
          minLength: 0
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    trackItLogListType:
      items:
        $ref: '#/components/schemas/trackItLogType'
      maxItems: 4000
      type: array
    trackItLogType:
      description: Individual activity log related to the Track It ticket.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        trackItLogId:
          $ref: '#/components/schemas/uniqueID_Type'
        trackItId:
          $ref: '#/components/schemas/trackItId'
        type:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 200
          minLength: 0
          type: string
        businessDate:
          format: date
          type: string
        logUserId:
          type: integer
        logUserName:
          type: string
        logDate:
          format: date-time
          type: string
      type: object
    reservationLocatorsType:
      description: Holds the Locator Information.
      items:
        $ref: '#/components/schemas/reservationLocatorType'
      maxItems: 4000
      type: array
    reservationLocatorType:
      description: Holds the information for a Reservation Guest Locator
      properties:
        dateSpan:
          $ref: '#/components/schemas/dateRangeType'
        timeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        locatorText:
          description: The Locator Text for the guest.
          type: string
        locatorOn:
          description: Date and time of the Guest Locator.
          format: date-time
          type: string
        locatorBy:
          description: User that entered this Guest Locator.
          type: string
        locatorId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    attachmentType:
      description: Attached files.
      properties:
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    serviceRequests:
      description: Service request.
      items:
        $ref: '#/components/schemas/serviceRequest'
      maxItems: 4000
      type: array
    serviceRequest:
      description: Service request.
      properties:
        hotelId:
          description: Hotel Code of the service request.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Service request code.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/serviceRequestStatusType'
        priority:
          description: The priority level of the service request.
          maxLength: 20
          minLength: 0
          type: string
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileId:
          $ref: '#/components/schemas/profileId'
        guestName:
          description: The guest name.
          maxLength: 200
          minLength: 0
          type: string
        room:
          description: The room number in which the service request was created.
          maxLength: 20
          minLength: 0
          type: string
        comment:
          description: Description of the service request.
          maxLength: 2000
          minLength: 0
          type: string
        action:
          description: Description of the action taken to complete the request.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    serviceRequestStatusType:
      enum:
      - Open
      - PendingFollowUp
      - Closed
      - DoNotDisturb
      - MakeUpRoom
      type: string
    activityLookUpList:
      description: Criteria for fetching Activity Bookings.
      items:
        $ref: '#/components/schemas/fetchActivityBookingsType'
      maxItems: 4000
      type: array
    fetchActivityBookingsType:
      description: Used in the request message to describe the "filtering Criteria"
        when executing an activity lookup.
      properties:
        profileId:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        personName:
          $ref: '#/components/schemas/personNameType'
        address:
          $ref: '#/components/schemas/addressType'
        activities:
          description: A collection of Activity objects.
          items:
            $ref: '#/components/schemas/activityList_inner'
          maxItems: 4000
          type: array
        hotelId:
          description: "Hotel Code, It is used to filter hotel specific children to\
            \ this specific hotel code."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    activityList:
      description: A collection of Activity objects.
      items:
        $ref: '#/components/schemas/activityList_inner'
      maxItems: 4000
      type: array
    prepaidCardsType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/prepaidCardType'
      maxItems: 4000
      type: array
    prepaidCardType:
      description: Holds fixed charge information.
      properties:
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        name:
          description: "Family name, last name or Company Name."
          maxLength: 80
          minLength: 0
          type: string
        firstName:
          description: "Given name, first name or names."
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        cardNo:
          description: Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        giftCard:
          description: Indicates a gift card type.
          type: boolean
      type: object
    reservationPackageType:
      description: A ReservationPackageType class.
      properties:
        packageHeaderType:
          $ref: '#/components/schemas/packageCodeHeaderType'
        scheduleList:
          description: A HotelPackageSchedule type.
          items:
            $ref: '#/components/schemas/reservationPackageScheduleType'
          maxItems: 4000
          type: array
        newTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        consumptionDetails:
          $ref: '#/components/schemas/packageConsumptionType'
        packageCode:
          description: Package code. This is the unique code used for the package
            and is a required element.
          maxLength: 20
          minLength: 0
          type: string
        internalId:
          description: Reservation Package Opera Internal Unique Id. This is the unique
            Id used for this reservation package.
          type: number
        ratePlanCode:
          description: "The rate code which contains this package. If the package\
            \ is not part of a rate code, this will be empty. Required element and\
            \ part of the key to fetch the correct package record on the reservation."
          maxLength: 20
          minLength: 0
          type: string
        startDate:
          description: "Required value when changing a reservation package. If the\
            \ original start date was null, then null is required."
          format: date
          type: string
        endDate:
          description: "Required value when changing a reservation package. If the\
            \ original end date was null, then null is required."
          format: date
          type: string
        packageGroup:
          description: "Package group code. If this package is part of a package group,\
            \ the group code is indicated here. This is a required element and is\
            \ part of the key to fetch the correct package record ."
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/productSourceType'
        awardCode:
          description: This is the Award code used to redeem the package if the package
            is a redemption package.
          maxLength: 20
          minLength: 0
          type: string
        points:
          description: Indicates the points used to redeem the redemption package.
          type: integer
      type: object
    packageCodeHeaderType:
      properties:
        primaryDetails:
          $ref: '#/components/schemas/configPackagePrimaryDetailsType'
        transactionDetails:
          $ref: '#/components/schemas/configPackageTransactionType'
        postingAttributes:
          $ref: '#/components/schemas/configPostingAttributesType'
      type: object
    configPackagePrimaryDetailsType:
      description: A Config Package Info type.
      properties:
        description:
          description: The description of the package.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          description: The short description of the package.
          maxLength: 2000
          minLength: 0
          type: string
        forecastGroup:
          description: The Forecast group package belongs to.
          maxLength: 20
          minLength: 0
          type: string
        arrangementCode:
          description: Arrangement Code.
          maxLength: 20
          minLength: 0
          type: string
        beginSellDate:
          description: Indicates the begin sell date of the package.
          format: date
          type: string
        endSellDate:
          description: Indicates the end sell date of the package.
          format: date
          type: string
      type: object
    configPackageTransactionType:
      description: A HotelPackageTransaction type.
      properties:
        allowance:
          description: "Package is marked as an allowance, in case charge is expected\
            \ back to the guest account from external interface eg. POS. which need\
            \ to be offset against a consumption allowance."
          type: boolean
        currency:
          description: The currency code for this package.
          maxLength: 20
          minLength: 0
          type: string
        postingType:
          description: "The posting frequency for this package, e.g., daily, arrival,\
            \ departure, etc."
          maxLength: 20
          minLength: 0
          type: string
        calculationRule:
          description: The price calculation rule for this package.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    configPostingAttributesType:
      description: A config Package posting attributes type.
      properties:
        addToRate:
          description: The package price is added to the room rate.
          type: boolean
        printSeparateLine:
          description: The package price is printed on separate line of the folio.
          type: boolean
        sellSeparate:
          description: Can the package be sold separate from rate plan code?
          type: boolean
        postNextDay:
          description: package charges will be posted next business day.
          type: boolean
        forecastNextDay:
          description: Package will be forecasted for consumption the next business
            day.
          type: boolean
        formula:
          description: "The custom formula used for this package, if any."
          maxLength: 2000
          minLength: 0
          type: string
        startTime:
          description: Start time the package is valid.
          type: string
        endTime:
          description: End time the package is valid.
          type: string
        catering:
          description: Is package used for catering?
          type: boolean
        postingRhythm:
          $ref: '#/components/schemas/packagePostingRhythmType'
        priceCalculationRule:
          $ref: '#/components/schemas/packageCalculationRuleType'
        ticket:
          description: Indicates whether a package is configured as a ticket or not.
          type: boolean
        inventoryItems:
          description: Package Code Inventory Items type.
          items:
            $ref: '#/components/schemas/pkgInventoryItemType'
          maxItems: 4000
          type: array
        calculatedPrice:
          description: "Calculated Package Price based from Number of Adults, Children\
            \ and Calculation Rule."
          type: number
      type: object
    packagePostingRhythmType:
      description: Package Posting rhythm type.
      properties:
        everyXNightsStartingNightY:
          $ref: '#/components/schemas/packagePostingRhythmType_everyXNightsStartingNightY'
        certainNightsOfTheWeek:
          $ref: '#/components/schemas/packagePostingRhythmType_certainNightsOfTheWeek'
        customStaySchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customStaySchedule'
        customNightSchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customNightSchedule'
        type:
          $ref: '#/components/schemas/postingRhythmType'
      type: object
    postingRhythmType:
      description: Simple type for posting Rhythm types.
      enum:
      - EveryNight
      - ArrivalNight
      - EveryXNightsStartingNightY
      - CertainNightsOfTheWeek
      - LastNight
      - EveryNightExceptArrivalNight
      - EveryNightExceptLast
      - EveryNightExceptFirstAndLast
      - CustomStaySchedule
      - CustomNightSchedule
      - FloatingAllowancePerStay
      - TicketPosting
      type: string
    packageCalculationRuleType:
      description: Simple type for package caluculation rules.
      enum:
      - FlatRate
      - PerPerson
      - PerAdult
      - PerChild
      - PerRoom
      type: string
    pkgInventoryItemType:
      properties:
        articleNumber:
          description: Article Number of the inventory item.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the inventory item.
          maxLength: 200
          minLength: 0
          type: string
        quantity:
          description: Quantity of the inventory item allocated to the package.
          type: integer
        itemId:
          description: Identifier for the inventory item.
          type: integer
      type: object
    reservationPackageScheduleType:
      description: A HotelPackageSchedule type.
      properties:
        consumptionDate:
          description: The date the package was used or can be used.
          format: date
          type: string
        unitPrice:
          description: The price per unit of the package.
          type: number
        totalQuantity:
          description: "The total quantity of the package for this date, calculated\
            \ based on the calculation rule as defined in the PackageHeaderType"
          type: integer
        computedResvPrice:
          description: Computed Reservation Price of the package. Calculation Will
            Be Performed Based On Other Parameters.
          type: number
        unitAllowance:
          description: The allowance per unit of the package.
          type: number
        reservationDate:
          description: The date of the Reservation when this package is applicable.
            This can be different from the date the package will be consumed. Example
            are next day packages. Reservation date is when the package is applied
            to the guest and Consumption date is when the guest can consume the package.
          format: date
          type: string
        originalUnitPrice:
          description: The original price per unit of the package if it has been changed.
          type: number
        originalUnitAllowance:
          description: The original allowance per unit of the package if it has been
            changed.
          type: number
      type: object
    packageConsumptionType:
      description: "Package Consumption Information. Includes information on quantity\
        \ of the package used, allowance consumption etc."
      properties:
        defaultQuantity:
          description: Quantity of packages to be attached i.e. the multiplier to
            be applied against the calculation rule to determine the total quantity
            of the packages.
          type: integer
        excludedQuantity:
          description: The quantity which has been excluded in the package.
          type: integer
        totalQuantity:
          description: "The total quantity of the package, calculated based on the\
            \ calculation rule as defined in the PackageHeaderType and defaultQuantity."
          type: integer
        allowanceConsumed:
          description: Indicates if Allowance(for POS packages) has been consumed/posted
            for today.
          type: boolean
      type: object
    productSourceType:
      description: Sources of Products
      enum:
      - Reservation
      - RateHeader
      - RateDetail
      type: string
    resInventoryItemsType:
      description: Defines a collection of inventory items attached to a reservation.
      properties:
        item:
          description: Inventory item attached to a reservation.
          items:
            $ref: '#/components/schemas/resInventoryItemType'
          maxItems: 4000
          type: array
        itemClassCode:
          description: The Item Class ID which the item belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resInventoryItemType:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        item:
          $ref: '#/components/schemas/itemInfoType'
        quantity:
          description: Number of items booked.
          type: integer
        timeSpan:
          $ref: '#/components/schemas/dateRangeType'
        source:
          $ref: '#/components/schemas/resInventoryItemSourceType'
      type: object
    itemInfoType:
      description: Basic information regarding an Item.
      properties:
        description:
          description: Detail description of an item.
          maxLength: 2000
          minLength: 0
          type: string
        availabilityPeriod:
          $ref: '#/components/schemas/timeWindowType'
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        quantity:
          description: Quantity of hold Item
          type: integer
        itemHoldId:
          description: ID reference for the hold Item
          type: number
        code:
          description: Item Code.
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: Name of an item.
          maxLength: 200
          minLength: 0
          type: string
        itemPool:
          description: Indicates if it is an item pool. Not applicable for Item within
            the Item Pool.
          type: boolean
        sellSeparate:
          description: If true indicates that item is allowed to sell separately.
          type: boolean
        sellInReservation:
          description: If true indicates that item can be sold in reservation.
          type: boolean
        sellInEvent:
          description: If true indicates that item can be sold in event.
          type: boolean
        requiredForBooking:
          description: If true indicates that item is required for the reservation.
          type: boolean
        fixedCharge:
          description: If true indicates that item has fixed charge when it is attached
            to a reservation.
          type: boolean
        outsideStay:
          description: If true indicates that item could be held outside of the reservation
            stay days.
          type: boolean
        defaultDuration:
          description: Define the default duration in days when booking the item.
          type: integer
      type: object
    timeWindowType:
      description: Defines a Time period with start time and an end time.
      properties:
        startTime:
          description: Start Time of the Time window.
          type: string
        endTime:
          description: End Time of the Time window.
          type: string
      type: object
    resInventoryItemSourceType:
      description: "Defines whether the item is setup due to a Rate Plan, Package\
        \ or a Block."
      properties:
        ratePlanCode:
          description: "Rate Plan Code, If populated specifies that the item is setup\
            \ due to a Rate Plan."
          maxLength: 20
          minLength: 0
          type: string
        packageCode:
          description: "Package Code, If populated specifies that the item is setup\
            \ due to a Package."
          maxLength: 20
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        welcomeOffer:
          description: "If true, it implies that the item has been attached to the\
            \ reservation as part of a Welcome Offer"
          type: boolean
        packageInternalId:
          description: Source Reservation Package Opera Internal Unique Id. This is
            the unique Id used for the reservation package associated with this item.
          type: number
      type: object
    blockId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    membershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    reservationMembershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        linkMembership:
          type: boolean
        primary:
          type: boolean
      type: object
    reservationPaymentMethodsType:
      description: Defines reservation payment methods.
      items:
        $ref: '#/components/schemas/reservationPaymentMethodType'
      maxItems: 4000
      type: array
    routingInfoListType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding instructions.
      items:
        $ref: '#/components/schemas/routingInfoType'
      maxItems: 4000
      type: array
    routingInfoType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        folio:
          $ref: '#/components/schemas/routingInfoType_folio'
        room:
          $ref: '#/components/schemas/routingInfoType_room'
        comp:
          $ref: '#/components/schemas/routingInfoType_comp'
        request:
          $ref: '#/components/schemas/routingInfoType_request'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
      type: object
    routingInstructionType:
      description: "Routing limit can be one of the three: Credit Limit, Percetage\
        \ Limit, Covers Limit"
      properties:
        duration:
          $ref: '#/components/schemas/routingInstructionType_duration'
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        creditLimit:
          description: "Allowable credit amount for this routing instruction. Null\
            \ value means no limit, 0 equals zero."
          type: number
        percentageLimit:
          description: The routing limit percentage allowed for this routing instruction.
          type: number
        covers:
          description: Number of covers for this routing instruction.
          type: number
        limitUsed:
          description: Amount of Credit used for this routing instruction.
          type: number
        routingLinkId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    compAccountingType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
        aRNumber:
          description: AR Account Number of the authorizer
          maxLength: 20
          minLength: 0
          type: string
        compTypeCode:
          description: The Comp Type for this Account. Used when using the Comp types
            functionality
          maxLength: 20
          minLength: 0
          type: string
        compVoucherNo:
          description: The coupon or voucher number used by the external gaming system
            to track postings made to this routing.
          maxLength: 30
          minLength: 0
          type: string
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        membershipId:
          description: Membership number
          maxLength: 100
          minLength: 0
          type: string
        membershipIdNo:
          description: Unique Id of membership
          type: integer
        membershipNameOnCard:
          description: Name displayed on the membership card
          maxLength: 80
          minLength: 0
          type: string
      type: object
    compRoutingRequestType:
      description: Type for the details of a Comp Routing Request
      properties:
        requestedBy:
          $ref: '#/components/schemas/userInfoType'
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        declinedBy:
          $ref: '#/components/schemas/userInfoType'
        status:
          $ref: '#/components/schemas/compRoutingStatusType'
      type: object
    userInfoType:
      description: Opera User Information
      properties:
        userId:
          description: User Id of the Opera User
          type: integer
        userName:
          description: Name of the Opera User
          maxLength: 40
          minLength: 0
          type: string
      type: object
    compRoutingStatusType:
      description: Status which indicates that the Request of Comp Routing was declined
      enum:
      - Request
      - Comp
      - Declined
      type: string
    reservationPoliciesType:
      description: A collection of reservation deposit and cancellation policies.
      properties:
        cancellationPolicies:
          description: A list of reservation cancellation policies.
          items:
            $ref: '#/components/schemas/resCancellationPolicyType'
          maxItems: 4000
          type: array
        depositPolicies:
          description: A list of deposit policies attached with the reservation.
          items:
            $ref: '#/components/schemas/resDepositPolicyType'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        name:
          description: Name identifier for the reservation.
          type: string
      type: object
    resCancellationPoliciesType:
      description: A list of reservation cancellation policies.
      items:
        $ref: '#/components/schemas/resCancellationPolicyType'
      maxItems: 4000
      type: array
    resCancellationPolicyType:
      description: A cancellation policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/resCancelPenaltyType'
        percentageDue:
          description: The percentage amount due for reservation cancellation.
          maximum: 100
          minimum: 0
          type: number
        comments:
          description: Comments attached with the reservation cancellation.
          maxLength: 2000
          minLength: 0
          type: string
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    depositCancelRevenueType:
      description: The type to indicate what revenue is to be used for calculating
        deposit/cancellation amounts.
      enum:
      - Rooms
      - Catering
      - All
      type: string
    resCancelPenaltyType:
      description: The CancelPenalty class defines the cancellation policy of the
        hotel facility.
      properties:
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        penaltyDescription:
          description: Text description of the Penalty in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        offsetUnit:
          $ref: '#/components/schemas/offsetUnitType'
        formattedRule:
          description: Formatted Text Rule of the Cancellation Penalty.
          maxLength: 2000
          minLength: 0
          type: string
        policyCode:
          description: Policy Code.
          maxLength: 20
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
        nonRefundable:
          description: Indicates if the amount is refundable if booking is canceled.
          type: boolean
        effective:
          description: Indicator if Cancellation Penalty is currently applicable or
            not.
          type: boolean
      type: object
    policyDeadlineType:
      description: "Cancellation deadline, absolute or relative."
      properties:
        absoluteDeadline:
          description: Defines the absolute deadline. Either this or the offset attributes
            may be used.
          format: date-time
          type: string
        offsetFromArrival:
          description: The number of days before arrival that allows cancellation
            without penalties.
          type: integer
        offsetDropTime:
          description: Time on offset day the cancellation penalties applies.
          format: date-time
          type: string
        offsetFromBookingDate:
          description: The number of days after booking deposit must be paid.
          type: integer
      type: object
    policyAmountPercentType:
      description: Defines the percentage basis for calculating the fee amount or
        the amount.
      properties:
        basisType:
          $ref: '#/components/schemas/policyBasisTypeType'
        nights:
          description: The number of nights of the hotel stay that are used to calculate
            the fee amount.
          type: integer
        percent:
          description: The percentage used to calculate the amount.
          maximum: 100
          minimum: 0
          type: number
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    policyBasisTypeType:
      description: Full Amount.
      enum:
      - FlatAmount
      - Percentage
      - Nights
      - NightPercentage
      - FullAmount
      type: string
    offsetUnitType:
      description: Indicates deadline offset unit type.
      enum:
      - Year
      - Month
      - Day
      - Hour
      type: string
    resDepositPoliciesType:
      description: A list of deposit policies attached with the reservation.
      items:
        $ref: '#/components/schemas/resDepositPolicyType'
      maxItems: 4000
      type: array
    resDepositPolicyType:
      description: A deposit policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/depositPolicyType'
        comments:
          description: Comments attached with a deposit.
          maxLength: 2000
          minLength: 0
          type: string
        amountPaid:
          $ref: '#/components/schemas/currencyAmountType'
        amountDue:
          $ref: '#/components/schemas/currencyAmountType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    depositPolicyType:
      description: "Used to define the deposit policy, guarantees policy, and/or accepted\
        \ forms of payment."
      properties:
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        description:
          description: Text description of the Payment in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        depositReceiptNo:
          description: Receipt number associated with the deposit policy
          type: integer
        transactionDate:
          description: Transaction Date associated with the deposit policy
          format: date
          type: string
        depositReqReversed:
          description: Flag to indicate if deposit policy is reversed
          type: boolean
        formattedRule:
          description: Formatted Text Rule of the deposit policy.
          maxLength: 2000
          minLength: 0
          type: string
        typeOfCharges:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policyCode:
          description: Deposit Policy Code
          maxLength: 20
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
      type: object
    linkedReservationsInfoType:
      description: Linked Reservations.
      properties:
        reservationInfo:
          items:
            $ref: '#/components/schemas/linkedReservationInfoType'
          maxItems: 4000
          type: array
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        linkedName:
          description: Name of the group of Linked Reservation.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    linkedReservationInfoType:
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        givenName:
          maxLength: 40
          minLength: 0
          type: string
        surname:
          maxLength: 40
          minLength: 0
          type: string
        title:
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        room:
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        rate:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        displayColor:
          maxLength: 20
          minLength: 0
          type: string
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        linkReservationType:
          $ref: '#/components/schemas/linkedReservationType'
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        roomNumberLocked:
          description: This attribute is to verify if room number is locked for the
            reservation. When true the room number cannot be changed
          type: boolean
        suppressRate:
          description: This attribute checks if rate is suppressed or not in order
            to properly show strike through.
          type: boolean
        adultCount:
          description: Number of adults of the reservation.
          type: integer
        childCount:
          description: Number of children of the reservation.
          type: integer
        backToBack:
          description: This attribute indicates if the linked reservation is marked
            as Back to Back or not.
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        backToBackSequence:
          $ref: '#/components/schemas/backToBackResSequenceType'
        shared:
          description: This attribute indicates if the linked reservation is a shared
            reservation or not.
          type: boolean
        backToBackGroupId:
          description: This attribute represents a common identifier for a subgroup
            of linked reservations marked as Back to Back in a group of linked reservations.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    linkedReservationType:
      description: Enumeration of the different Linked Reservation Types.
      enum:
      - Linked
      - Shared
      - Default
      type: string
    cateringResInfoType:
      description: Information regarding catering event and catering revenue type
        associated to the reservation.
      properties:
        eventId:
          $ref: '#/components/schemas/eventId'
        revenueType:
          description: Catering revenue type associated to the reservation.
          type: string
      type: object
    eventId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    alertsType:
      description: List of alerts.
      items:
        $ref: '#/components/schemas/alertType'
      maxItems: 4000
      type: array
    alertType:
      properties:
        code:
          description: Code identifying the type of alert.
          maxLength: 20
          minLength: 0
          type: string
        global:
          description: Indicate whether the alert is a global that is automatically
            and dynamically attached to all reservations that meet the alert criteria.
          type: boolean
        area:
          $ref: '#/components/schemas/alertAreaType'
        description:
          description: The alert message.
          type: string
        screenNotification:
          description: Notify by showing the alert on the screen
          type: boolean
        printerNotification:
          description: Notify by sending the message to the printer.
          type: boolean
        printerName:
          description: Printer used to print the alert notification.
          type: string
        reportId:
          $ref: '#/components/schemas/uniqueID_Type'
        reportName:
          description: Report name of the report type.
          type: string
        reportDescription:
          description: Report description. Mainly used for as a parameter for printing
            the alerts.
          maxLength: 1000
          minLength: 0
          type: string
        guestInfo:
          $ref: '#/components/schemas/alertGuestInfoType'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        welcomeOffer:
          $ref: '#/components/schemas/welcomeOfferType'
        stopCheckInCheckOut:
          description: Indicates the Reservation Stop Check In/Check Out Global Alert.
          type: boolean
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    alertAreaType:
      enum:
      - CheckIn
      - CheckOut
      - Reservation
      - Billing
      - InHouse
      type: string
    alertGuestInfoType:
      properties:
        guestName:
          description: Guest Name.
          maxLength: 200
          minLength: 0
          type: string
        membership:
          $ref: '#/components/schemas/membershipType'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
        lastHotelCode:
          description: Hotel code of the last stay location of the guest.
          maxLength: 20
          minLength: 0
          type: string
        lastStayDate:
          description: Last stay date at the property.
          format: date
          type: string
        totalStay:
          description: Holds total number of days that the guest have stayed in the
            property.
          type: integer
        comments:
          description: Additional alert information regarding the membership of the
            guest.
          type: string
        preference:
          description: Additional alert information regarding the guest.
          type: string
        preference2:
          description: Additional mandatory alert information regarding the guest
            preferences.
          type: string
        guestPreferredLanguage:
          maxLength: 40
          minLength: 0
          type: string
        totalBrandStay:
          description: Holds total number of days that the guest have stayed in the
            properties for the same brand.
          type: integer
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
      type: object
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    languageType:
      maxLength: 40
      minLength: 0
      type: string
    welcomeOfferType:
      properties:
        status:
          description: Determines the status of the welcome offer.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/welcomeOfferOptionsType'
      type: object
    welcomeOfferOptionsType:
      description: None of the Welcome Offer option is selected.
      enum:
      - BonusPoints
      - Ecoupons
      - Items
      - PostIt
      - NotSelected
      type: string
    hotelReservationTracesType:
      description: List of Reservation Traces.
      items:
        $ref: '#/components/schemas/hotelReservationTraceType'
      maxItems: 4000
      type: array
    hotelReservationTraceType:
      description: Extended Trace object to hold information for a reservation.
      properties:
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        traceText:
          description: The information this trace contains.
          type: string
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
        enteredBy:
          description: User that entered this trace.
          type: string
      type: object
    traceResolveType:
      properties:
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
        resolvedBy:
          description: User that resolved the trace
          type: string
      type: object
    confirmationsType:
      description: List of confirmation letters.
      items:
        $ref: '#/components/schemas/confirmationType'
      maxItems: 4000
      type: array
    confirmationType:
      properties:
        recipientInfo:
          $ref: '#/components/schemas/confRecipientInfoType'
        deliveryInfo:
          description: List of confirmation letter delivery methods and their status
          items:
            $ref: '#/components/schemas/confDeliveryInfoType'
          maxItems: 4
          type: array
        confirmationStyleInfo:
          $ref: '#/components/schemas/confirmationStyle'
        fromEmail:
          description: Senders Email address.
          maxLength: 2000
          minLength: 0
          type: string
        sendTextMessage:
          description: Flag to indicate sending confirmation letter as text message.
          type: boolean
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    confRecipientInfoType:
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        formerName:
          $ref: '#/components/schemas/profileNameType'
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        faxInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        telephoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        recipientType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileNameType:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    confDeliveryInfoTypes:
      description: List of confirmation letter delivery methods and their status
      items:
        $ref: '#/components/schemas/confDeliveryInfoType'
      maxItems: 4
      type: array
    confDeliveryInfoType:
      properties:
        communicationType:
          $ref: '#/components/schemas/confDeliveryMethod'
        lastStatus:
          $ref: '#/components/schemas/sentConfirmationStatus'
        lastAttempted:
          description: Date of last attempt to send confirmation letter.
          format: date-time
          type: string
        successfulTries:
          description: Number of success letter sent.
          type: integer
      type: object
    confDeliveryMethod:
      enum:
      - Print
      - Email
      - Fax
      - Text
      - NotConfigured
      type: string
    sentConfirmationStatus:
      enum:
      - Pending
      - Succeeded
      - Failed
      type: string
    confirmationStyle:
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        style:
          description: Name of the confirmation letter style.
          type: string
      type: object
    callHistoryType:
      description: Holds call information.
      items:
        $ref: '#/components/schemas/callType'
      maxItems: 4000
      type: array
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          description: Quantity of the product.
          type: integer
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
      type: object
    guestMessagesType:
      description: Holds the Message Information
      items:
        $ref: '#/components/schemas/guestMessageType'
      maxItems: 4000
      type: array
    guestMessageType:
      description: Holds the Message information for a Reservation
      properties:
        message:
          $ref: '#/components/schemas/messageType'
        delivery:
          $ref: '#/components/schemas/messageDeliveryType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    messageType:
      description: Holds the Message Information
      properties:
        messageText:
          description: Message Content
          maxLength: 2000
          minLength: 0
          type: string
        messageDate:
          description: Date the message was created
          format: date-time
          type: string
        typeOfMessage:
          $ref: '#/components/schemas/typeOfMessageType'
        recipient:
          description: Recipient of the Message
          maxLength: 2000
          minLength: 0
          type: string
        operator:
          description: User who created the Message
          maxLength: 40
          minLength: 0
          type: string
      type: object
    typeOfMessageType:
      description: The type of Message for Guest Messages.
      enum:
      - Tm
      - Vm
      type: string
    messageDeliveryType:
      description: Holds the Delivery Information of the Message
      properties:
        deliveryStatus:
          $ref: '#/components/schemas/messageStatusType'
        deliveryDate:
          description: Date the message has been delivered (marked as received)
          format: date-time
          type: string
        deliveredBy:
          description: User who delivered the message (who marked message as received)
          maxLength: 40
          minLength: 0
          type: string
        printDate:
          description: Date when message has been printed
          format: date-time
          type: string
        textMessageSentDate:
          description: Date when message has been sent via SMS
          format: date-time
          type: string
        textMessageSentBy:
          description: User who sent the message
          maxLength: 40
          minLength: 0
          type: string
        textMessageSentById:
          description: User Id of who sent the message
          type: integer
        textMessageRecipientNo:
          description: Number in which the message is to be sent.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    messageStatusType:
      description: Status of the Message.
      enum:
      - Mr
      - Nr
      type: string
    overrideInstructionsType:
      description: List of override actions done.
      items:
        $ref: '#/components/schemas/overrideInstructionType'
      maxItems: 4000
      type: array
    overrideInstructionType:
      description: Type for Overrides. Contains information for the override action
        performed while booking a reservation.
      properties:
        description:
          description: The description of the restriction for which the override was
            done.
          maxLength: 2000
          minLength: 0
          type: string
        date:
          description: The date when the override was done.
          format: date
          type: string
        type:
          description: "The type of override done. If done for Availability, then\
            \ it will be AVAILABILITY."
          maxLength: 80
          minLength: 0
          type: string
        userId:
          description: Login ID of the user who performed the override.
          maxLength: 40
          minLength: 0
          type: string
        reasonCode:
          description: The override reason code.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: The override reason description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    eCouponsType:
      description: Collection of ECouponType object.
      items:
        $ref: '#/components/schemas/eCouponType'
      maxItems: 4000
      type: array
    eCouponType:
      description: Reservation eCoupon Type Information.
      properties:
        eCouponId:
          $ref: '#/components/schemas/uniqueID_Type'
        code:
          description: Code to attach the eCoupon to Reservation.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the eCoupon attached to the Reservation.
          maxLength: 2000
          minLength: 0
          type: string
        autoAttached:
          description: Determines whether the eCoupon is attached through the Rate
            Code or not.
          type: boolean
        issuedQuantity:
          description: Assigned Quantity for the eCoupon when attached to Reservation.
          type: integer
        usedQuantity:
          description: Used Quantity of the eCoupon for the Reservation.
          type: integer
        reason:
          description: Reason for attaching/modifing eCoupon.
          maxLength: 4000
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan of the attached eCoupon to Reservation.
          maxLength: 20
          minLength: 0
          type: string
        welcomeOffer:
          description: Determines whether this eCoupon is eligible for welcome offer
            or not.
          type: boolean
      type: object
    reservationTransactionDiversionsType:
      description: List of Transaction Diversion rules.
      items:
        $ref: '#/components/schemas/reservationTransactionDiversionType'
      maxItems: 4000
      type: array
    reservationTransactionDiversionType:
      description: A Transaction Diversion Rule Type
      properties:
        vipCode:
          description: VIP code to consider while applying Diversion Instruction.
          maxLength: 20
          minLength: 0
          type: string
        membership:
          $ref: '#/components/schemas/membershipTypeLevelType'
        targetRoom:
          description: Room number to receive all the diverted transactions configured
            for this instruction.
          maxLength: 20
          minLength: 0
          type: string
        transactionCodes:
          description: Collection of Transaction Code List
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        description:
          description: User defined message for the Transaction Diversion Rule.
          maxLength: 2000
          minLength: 0
          type: string
        level:
          $ref: '#/components/schemas/transactionDiversionRuleLevelType'
        thresholds:
          $ref: '#/components/schemas/thresholdDetailsType'
        type:
          $ref: '#/components/schemas/transactionDiversionRuleTypeType'
        hotelId:
          description: Hotel code with which Transaction Diversion Rule is associated.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Transaction Diversion Code
          maxLength: 20
          minLength: 0
          type: string
        displaySequence:
          description: User configured Sequence number.
          type: number
        inactive:
          description: Indicator that tells whether the transaction diversion rule
            is active or not.
          type: boolean
        notes:
          $ref: '#/components/schemas/commentInfoType'
        posted:
          description: Transaction diversions that are posted.
          type: integer
        diverted:
          description: Transaction diversions that are diverted .
          type: integer
        dailyDetails:
          description: List of daily details for Transaction Diversion rule.
          items:
            $ref: '#/components/schemas/transactionDiversionDailyDetailType'
          maxItems: 4000
          type: array
      type: object
    membershipTypeLevelType:
      properties:
        type:
          description: Code type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
        level:
          description: Description type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transactionDiversionRuleLevelType:
      description: Reservation level.
      enum:
      - Property
      - Reservation
      type: string
    thresholdDetailsType:
      description: Type for the threshold elements.
      properties:
        entity:
          $ref: '#/components/schemas/entityType'
        scope:
          $ref: '#/components/schemas/scopeType'
        minRequired:
          description: "Minimum required number of quantities, counts or minutes that\
            \ must be posted."
          type: integer
        complimentary:
          description: "The number of quantities, counts or minutes for which transaction\
            \ diversion is allowed ."
          type: integer
        isEditable:
          description: Configuring this flag to be TRUE will make the thresholds editable.
          type: boolean
      type: object
    entityType:
      description: Indicates the rule is based on Minutes associated with the charge.
      enum:
      - ThresholdCount
      - ThresholdQuantity
      - ThresholdMinutes
      type: string
    scopeType:
      description: Minimum required and complimentary values are applicable Per Stay.
      enum:
      - PerDay
      - PerStay
      type: string
    transactionDiversionRuleTypeType:
      description: "The rule type on which the Transaction Diversion Rule is based.\
        \ If a reservation has any of the following code, Transaction Diversion rule\
        \ gets active for that reservation"
      enum:
      - Vip
      - Membership
      type: string
    transactionDiversionDailyDetailsType:
      description: List of daily details for Transaction Diversion rule.
      items:
        $ref: '#/components/schemas/transactionDiversionDailyDetailType'
      maxItems: 4000
      type: array
    transactionDiversionDailyDetailType:
      description: List of daily details for Transaction Diversion rule.
      properties:
        posted:
          description: Transaction diversion rules that are posted.
          type: integer
        diverted:
          description: Transaction diversion rules that are diverted .
          type: integer
        date:
          description: Daily details Date about when the rules are posted or diverted.
          format: date
          type: string
      type: object
    ticketsType:
      description: Collection of TicketType objects.
      items:
        $ref: '#/components/schemas/ticketType'
      maxItems: 4000
      type: array
    ticketType:
      description: Reservation Ticket Type Information.
      properties:
        ticketId:
          $ref: '#/components/schemas/uniqueID_Type'
        packageCode:
          description: Package Code.
          maxLength: 20
          minLength: 0
          type: string
        reservationProductId:
          $ref: '#/components/schemas/uniqueID_Type'
        ticketNumber:
          $ref: '#/components/schemas/uniqueID_Type'
        description:
          description: Package description.
          maxLength: 2000
          minLength: 0
          type: string
        issueDate:
          description: Tickets issue date.
          format: date
          type: string
        price:
          description: Tickets price.
          type: number
        consumptionDate:
          description: Tickets comsumption date.
          format: date
          type: string
        rateCode:
          description: The Rate Code to which tickets belong to.
          maxLength: 20
          minLength: 0
          type: string
        quantity:
          description: Number of tickets used to create multiple tickets.
          type: integer
        reference:
          description: Free text field for reference information.
          maxLength: 2000
          minLength: 0
          type: string
        status:
          description: The Status Code for outbound WS call.
          maxLength: 20
          minLength: 0
          type: string
        statusDescription:
          description: The Status Description for outbound WS call.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationECertificatesType:
      description: Collection of ECertificateType object.
      items:
        $ref: '#/components/schemas/reservationECertificateType'
      maxItems: 4000
      type: array
    reservationECertificateType:
      description: Reservation ECertificate Type Information.
      properties:
        eCertificateNo:
          description: ECertificate Number for the reservation.
          maxLength: 40
          minLength: 0
          type: string
        actionType:
          $ref: '#/components/schemas/requestActionType'
        eCertificateType:
          $ref: '#/components/schemas/eCertificateClassficationType'
      type: object
    requestActionType:
      enum:
      - Create
      - Remove
      - Query
      type: string
    eCertificateClassficationType:
      description: Enumeration of the different type of Ecertificate.
      enum:
      - Promotion
      - Award
      - Benefit
      - Other
      type: string
    nameValueDetailType:
      description: Detailed information returned during name value search.
      properties:
        nameValues:
          description: List of name value pairs.
          items:
            $ref: '#/components/schemas/nameValueType'
          maxItems: 4000
          type: array
      type: object
    nameValuesType:
      description: List of name value pairs.
      items:
        $ref: '#/components/schemas/nameValueType'
      maxItems: 4000
      type: array
    nameValueType:
      description: Contains name value pair.
      properties:
        name:
          description: Contains unique key which represents for record field.
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Contains value for the record/column.
          maxLength: 4000
          minLength: 0
          type: string
        formatString:
          description: Contains format string for values.
          maxLength: 100
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/nameValueDataTypeType'
        origin:
          $ref: '#/components/schemas/nameValueOriginType'
        usageInstruction:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    nameValueDataTypeType:
      enum:
      - String
      - Number
      - Date
      - Datetime
      - Time
      - Integer
      type: string
    nameValueOriginType:
      description: Contains origin details.
      properties:
        originName:
          $ref: '#/components/schemas/nameValueModuleType'
        destination:
          description: Contains destination column for Origin.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    nameValueModuleType:
      enum:
      - Reservation
      - Folio
      - Profile
      - Fintrix
      type: string
    customChargeExemptionsType:
      description: List of Custom Charge Exemptions.
      items:
        $ref: '#/components/schemas/customChargeExemptionType'
      maxItems: 4000
      type: array
    customChargeExemptionType:
      description: Contains custom charges exemption information.
      properties:
        customChargesExemption:
          $ref: '#/components/schemas/codeDescriptionType'
        customChargeQuantity:
          $ref: '#/components/schemas/customChargeQuantityType'
        customChargeDates:
          description: Contains List of Custom Charge Exemption information for a
            day.
          items:
            $ref: '#/components/schemas/customChargeExemptionDateType'
          maxItems: 4000
          type: array
        excludedDates:
          description: Contains list of dates which are valid for custom charge exemptions.
          items:
            $ref: '#/components/schemas/excludedDateType'
          maxItems: 4000
          type: array
        percentage:
          description: Exemption Percentage
          maximum: 100
          minimum: 0
          type: number
        propertyExemption:
          description: Flag specifying if custom charge exemptions is property level
            or not.
          type: boolean
      type: object
    customChargeQuantityType:
      description: Contains quantity of custom charge exemptions.
      properties:
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
        available:
          description: Indicates if Custom Charges Exemption information is editable.
          type: boolean
        guests:
          description: List of guests.
          items:
            $ref: '#/components/schemas/customChargeGuestInfoType'
          type: array
      type: object
    customChargeExemptionDatesType:
      description: Contains List of Custom Charge Exemption information for a day.
      items:
        $ref: '#/components/schemas/customChargeExemptionDateType'
      maxItems: 4000
      type: array
    customChargeExemptionDateType:
      description: Contains Custom Charge Exemption information for a day.
      properties:
        date:
          description: Contains Custom Charge Exemption date.
          format: date
          type: string
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
        guests:
          description: List of guests.
          items:
            $ref: '#/components/schemas/customChargeGuestInfoType'
          type: array
      type: object
    excludedDatesType:
      description: Contains list of dates which are valid for custom charge exemptions.
      items:
        $ref: '#/components/schemas/excludedDateType'
      maxItems: 4000
      type: array
    excludedDateType:
      description: Specifies all the enabled dates.
      properties:
        date:
          description: Contains exclusion date.
          format: date
          type: string
        reason:
          $ref: '#/components/schemas/exclusionReasonType'
      type: object
    exclusionReasonType:
      description: Custom Charge has already been Processed for this date within the
        reservation stay.
      enum:
      - NotConfigured
      - CustomChargeProcessed
      type: string
    foliosShortInfoType:
      description: This type contains a list of generated bills for a reservation.
      items:
        $ref: '#/components/schemas/folioShortInfoType'
      maxItems: 4000
      type: array
    folioShortInfoType:
      description: This type contains information of generated bills.
      properties:
        folioNo:
          description: Folio No of the bill generated.
          type: number
        folioType:
          description: Folio type of the bill generated.
          maxLength: 200
          minLength: 0
          type: string
        autoGenerated:
          description: Flag to indicate if the folio is auto generated or not.
          type: boolean
      type: object
    reservationInstructionType:
      description: Simple type for reservation instructions that can be used in requests
        for information which needs to be returned.
      enum:
      - Reservation
      - Comments
      - GuestComments
      - ReservationMembershipAwards
      - Packages
      - InventoryItems
      - ReservationPaymentMethods
      - RoutingInstructions
      - Preferences
      - Memberships
      - Alerts
      - Traces
      - ConfirmationLetters
      - CallHistory
      - FixedCharges
      - GuestMessages
      - ReservationPolicies
      - Indicators
      - LinkedReservations
      - RevenuesAndBalances
      - GuestLastStay
      - ECoupons
      - TrackItItems
      - TotalCostOfStay
      - ReservationAwards
      - WebRegistrationCards
      - ServiceRequests
      - ReservationActivities
      - ScheduledActivities
      - PrepaidCards
      - Shares
      - Attachments
      - Locators
      - ProfileAwards
      - TransactionDiversions
      - Tickets
      - GuestMemberships
      - ECertificates
      - UpsellInfo
      - RoomAssignedByAI
      - CustomNameValue
      - CustomChargeExemptions
      - FiscalInfo
      - ScheduledRoomMoves
      - DailySummary
      type: string
    reservationsInstructionsType:
      description: Instructions for a reservation.
      properties:
        linkReservations:
          $ref: '#/components/schemas/linkReservationInstructionType'
        shareReservations:
          $ref: '#/components/schemas/shareReservationInstructionType'
      type: object
    linkReservationInstructionType:
      description: Instructions for a linked reservation.
      properties:
        linkToReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        linkFromReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        link:
          type: boolean
      type: object
    shareReservationInstructionType:
      properties:
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        rateAmountShare:
          $ref: '#/components/schemas/shareDistributionInstructionType'
        shareType:
          $ref: '#/components/schemas/shareTypeType'
        fixedRate:
          description: Indicates whether fixed rate will be applied to all shares.
          type: boolean
      type: object
    effectiveRatesType:
      description: Collection of effective rate amount per guest on specific dates.
      items:
        $ref: '#/components/schemas/effectiveRateType'
      maxItems: 4000
      type: array
    effectiveRateType:
      description: Effective rate amount per guest on specific dates.
      properties:
        onePersonRate:
          description: Rate amount for one person.
          type: number
        twoPersonRate:
          description: Rate amount for two persons.
          type: number
        threePersonRate:
          description: Rate amount for three persons.
          type: number
        fourPersonRate:
          description: Rate amount for four persons.
          type: number
        fivePersonRate:
          description: Rate amount for five persons.
          type: number
        extraPersonRate:
          description: Rate amount for each extra person.
          type: number
        extraChildRate:
          description: Rate amount for each extra Child.
          type: number
        oneChildRate:
          description: Rate amount for one Child.
          type: number
        twoChildrenRate:
          description: Rate amount for two Children.
          type: number
        threeChildrenRate:
          description: Rate amount for three Children.
          type: number
        fourChildrenRate:
          description: Rate amount for four Children.
          type: number
        rateByAgeBuckets:
          description: Rate amount by age bucket.
          items:
            $ref: '#/components/schemas/rateByAgeBucketType'
          maxItems: 3
          type: array
        minimumChildrenForFreeStay:
          description: Minimum number of children needed to get free stay.
          type: integer
        pointsRequired:
          description: The number of award points required for applying this rate
            plan schedule.
          type: number
        overrideFloorAmount:
          description: true if floor amount needs to be override
          type: boolean
        hotelId:
          description: ""
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: ""
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: ""
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: ""
          type: integer
        amountBeforeTax:
          description: Rate amount Before Tax.
          type: number
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    rateByAgeBucketsType:
      description: Rate amount by age bucket.
      items:
        $ref: '#/components/schemas/rateByAgeBucketType'
      maxItems: 3
      type: array
    rateByAgeBucketType:
      description: Rate amount by age bucket.
      properties:
        rateAmount:
          description: Rate amount by age bucket.
          type: number
        minimumAge:
          description: Minimum age for age bucket.
          type: integer
        maximumAge:
          description: Maximum age for age bucket.
          type: integer
      type: object
    shareTypeType:
      description: Indicates that only profile information will be retrieved from
        the reservation request object and the rest will be provided from the master
        reservation.
      enum:
      - Reservation
      - Profile
      type: string
    channelResvRQInfoType:
      description: Holds all the channel reservation specific information.
      properties:
        channelSummaryInfo:
          $ref: '#/components/schemas/channelSummaryInfoType'
        channelResvAction:
          $ref: '#/components/schemas/channelResvActionType'
        retransmissionIndicator:
          description: This attribute indicates true if the message is resubmitted
            for processing.
          type: boolean
      type: object
    channelSummaryInfoType:
      description: Depicts channel information such as the type and code.
      properties:
        bookingChannel:
          $ref: '#/components/schemas/bookingChannelType'
      type: object
    bookingChannelType:
      properties:
        channelCode:
          maxLength: 20
          minLength: 0
          type: string
        channelName:
          maxLength: 80
          minLength: 0
          type: string
      type: object
    channelResvActionType:
      description: Cancel a reservation in OPERA through a channel. The cancellation
        of the reservation is committed in OPERA at once. There is no session reservation
        involved.
      enum:
      - Book
      - Hold
      - Initiate
      - Ignore
      - Modify
      - Commit
      - CommitOverrideEdits
      - Create
      - Change
      - Cancel
      type: string
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    reservationCancellationPolicyCriteria:
      description: Request type to create a cancellation policy for a reservation.
      properties:
        policy:
          $ref: '#/components/schemas/reservationCancellationPolicyCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationCancellationPolicyCriteriaType:
      description: A cancellation policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/resCancelPenaltyType'
        percentageDue:
          description: The percentage amount due for reservation cancellation.
          maximum: 100
          minimum: 0
          type: number
        comments:
          description: Comments attached with the reservation cancellation.
          maxLength: 1000
          minLength: 0
          type: string
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property where the reservation exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    reservationConfirmationLetters:
      description: Response object to the request to fetch a list of reservations
        for which confirmation letters need to be sent.
      properties:
        resrvationInfoList:
          description: Reservations information and the confirmation letters type
            attached with them.
          items:
            $ref: '#/components/schemas/reservationConfLettersType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationConfLettersListType:
      description: Reservations information and the confirmation letters type attached
        with them.
      items:
        $ref: '#/components/schemas/reservationConfLettersType'
      maxItems: 4000
      type: array
    reservationConfLettersType:
      description: Reservation information and the confirmation letters type attached
        with it.
      properties:
        reservation:
          $ref: '#/components/schemas/reservationInfoType'
        confLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
      type: object
    confirmationLetters:
      description: Request object to create a confirmation letter.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        responseInstruction:
          $ref: '#/components/schemas/responseInstructionsType'
        confLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    responseInstructionsType:
      description: Enumaration of the different return modes of a response.
      enum:
      - Id
      - FullInfo
      - ErrorsWarnings
      type: string
    confirmationLettersDetails:
      description: Response object after creating a confirmation letter.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        responseInstruction:
          $ref: '#/components/schemas/responseInstructionsType'
        confLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationDepositPolicyCriteria:
      description: Request type to create a deposit policy on a reservation.
      properties:
        policy:
          $ref: '#/components/schemas/reservationDepositPolicyCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationDepositPolicyCriteriaType:
      description: A deposit policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/depositPolicyType'
        comments:
          description: Comments attached with a deposit.
          maxLength: 1000
          minLength: 0
          type: string
        amountPaid:
          $ref: '#/components/schemas/currencyAmountType'
        amountDue:
          $ref: '#/components/schemas/currencyAmountType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property where the reservation exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    changeDepositPolicyDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    linkReservationsCriteria:
      description: Request to link a list of reservations with another existing reservation.
      properties:
        hotelId:
          description: Hotel of the reservations to be linked with another reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        linkToReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        responseInstruction:
          $ref: '#/components/schemas/linkReservationsCriteria_responseInstruction'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservation:
      description: Return object to the request for information regarding a reservation.
      properties:
        reservations:
          $ref: '#/components/schemas/hotelReservationsType'
        masterInfoList:
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        channelInfo:
          $ref: '#/components/schemas/reservationChannelInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationChannelInfoType:
      description: Holds all the channel reservation specific information.
      properties:
        channelSummaryInfo:
          $ref: '#/components/schemas/channelSummaryInfoType'
        channelResvStatus:
          $ref: '#/components/schemas/channelResvStatusType'
        lastCommittedResv:
          $ref: '#/components/schemas/lastCommittedResvType'
      type: object
    channelResvStatusType:
      description: Depicts that the operation was failed.
      enum:
      - Pending
      - Cancelled
      - Modified
      - Committed
      - Ignored
      - Unsuccessful
      - Pending Cancellation
      type: string
    changeReservation:
      description: Request method to change a reservations information.
      properties:
        reservations:
          description: A collection of Reservations with information that needs to
            be changed.
          items:
            $ref: '#/components/schemas/hotelReservationInstructionType'
          type: array
        reservationsInstructionsType:
          $ref: '#/components/schemas/reservationsInstructionsType'
        channelInformation:
          $ref: '#/components/schemas/channelResvRQInfoType'
        reservationNotification:
          default: false
          description: "Boolean flag that forces reservation to updates in OPERA.\
            \ By default, this value is false."
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelReservationInstructionType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        associatedReservations:
          description: Information regarding associated reservations to the reservation.
          type: object
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        roomStay:
          $ref: '#/components/schemas/roomStayType'
        compAuthorizer:
          $ref: '#/components/schemas/compAuthorizerInfoType'
        reservationGuests:
          description: Collection of guests associated with the reservation.
          items:
            $ref: '#/components/schemas/resGuestType'
          maxItems: 4000
          type: array
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        additionalGuestInfo:
          $ref: '#/components/schemas/resGuestAdditionalInfoType'
        reservationProfiles:
          $ref: '#/components/schemas/hotelReservationType_reservationProfiles'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        trackItItems:
          description: ""
          items:
            $ref: '#/components/schemas/trackItItemType'
          maxItems: 4000
          type: array
        shares:
          $ref: '#/components/schemas/hotelReservationsType'
        locators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        attachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        webRegistrationCards:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        serviceRequests:
          description: Service request.
          items:
            $ref: '#/components/schemas/serviceRequest'
          maxItems: 4000
          type: array
        reservationActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        scheduledActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        prepaidCards:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardType'
          maxItems: 4000
          type: array
        profileAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        reservationPackages:
          description: A Service object represents a non-room product provided to
            guests. Service products may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestComments:
          description: List of Notes for the Guest related to the profile.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestMemberships:
          description: List of Memberships for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/membershipType'
          maxItems: 4000
          type: array
        preferenceCollection:
          description: Collection of reservation preferences.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        reservationMemberships:
          description: List of reservation memberships.
          items:
            $ref: '#/components/schemas/reservationMembershipType'
          maxItems: 4000
          type: array
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        routingInstructions:
          description: A routing info object can either be of type Folio OR of type
            Room with its corresponding instructions.
          items:
            $ref: '#/components/schemas/routingInfoType'
          maxItems: 4000
          type: array
        reservationPolicies:
          $ref: '#/components/schemas/reservationPoliciesType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        linkedReservation:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        extSystemSync:
          type: boolean
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        cancellation:
          $ref: '#/components/schemas/hotelReservationType_cancellation'
        catering:
          $ref: '#/components/schemas/cateringResInfoType'
        statisticalClassification:
          $ref: '#/components/schemas/resStatClassificationType'
        alerts:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        traces:
          description: List of Reservation Traces.
          items:
            $ref: '#/components/schemas/hotelReservationTraceType'
          maxItems: 4000
          type: array
        confirmationLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
        callHistory:
          description: Holds call information.
          items:
            $ref: '#/components/schemas/callType'
          maxItems: 4000
          type: array
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/guestMessageType'
          maxItems: 4000
          type: array
        lockHandle:
          description: "An id representing the record lock for this reservation. When\
            \ passed, update operation will verify that this lock is still valid."
          type: number
        overrideInstructions:
          description: List of override actions done.
          items:
            $ref: '#/components/schemas/overrideInstructionType'
          maxItems: 4000
          type: array
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        eCoupons:
          description: Collection of ECouponType object.
          items:
            $ref: '#/components/schemas/eCouponType'
          maxItems: 4000
          type: array
        transactionDiversions:
          $ref: '#/components/schemas/hotelReservationType_transactionDiversions'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        tickets:
          description: Collection of TicketType objects.
          items:
            $ref: '#/components/schemas/ticketType'
          maxItems: 4000
          type: array
        accessRestrictionMessage:
          description: Configurable Access Restriction Message for Excluded Block
            or Rate Code.
          maxLength: 4000
          minLength: 0
          type: string
        eCertificates:
          description: Collection of ECertificateType object.
          items:
            $ref: '#/components/schemas/reservationECertificateType'
          maxItems: 4000
          type: array
        customNameValueDetail:
          $ref: '#/components/schemas/nameValueDetailType'
        customChargeExemptionDetails:
          description: List of Custom Charge Exemptions.
          items:
            $ref: '#/components/schemas/customChargeExemptionType'
          maxItems: 4000
          type: array
        folios:
          description: This type contains a list of generated bills for a reservation.
          items:
            $ref: '#/components/schemas/folioShortInfoType'
          maxItems: 4000
          type: array
        autoBorrowFromHouse:
          description: "This flag will force to borrow from house if borrow required\
            \ for number of rooms requested, this will only applicable when reservation\
            \ is attached to a Block."
          type: boolean
        overrideExternalChecks:
          description: "Forcefully override the create/update action on the Reservation.\
            \ For real-time CRS interfaces, this element is used as force selling\
            \ indicator in case of Create or Update Reservation"
          type: boolean
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkIn:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        printRate:
          description: Indicates whether to show the rate or not on a printed document
            which includes the rate.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
        reinstateDate:
          description: Business Date when the reservation was last reinstated.
          format: date
          type: string
        party:
          description: Party/PartyCode when reservation is part of a party(a small
            group).
          maxLength: 50
          minLength: 0
          type: string
        primaryEnrollmentResort:
          description: Name Of the Resort/Hotel for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        primaryEnrollmentChain:
          description: Name of the Chain for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        customReference:
          description: Custom Reference to identify reservation.
          maxLength: 50
          minLength: 0
          type: string
        displayColor:
          description: The color to display this reservation on room grid displays.
          maxLength: 20
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this reservation as recently accessed.
          type: boolean
        overrideInventoryCheck:
          description: Indicates to Override the Room Inventory Check if applicable.
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        preRegistered:
          description: Is the reservation pre-registered.
          type: boolean
        upgradeEligible:
          description: Indicates whether the reservation is eligible for upgrade.
          type: boolean
        overrideBlockRestriction:
          type: boolean
        allowAutoCheckin:
          description: Flag to allow auto checkin
          type: boolean
        hasOpenFolio:
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowPreRegistration:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for prior check in by guest using mobile device . Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile check in yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        optedForCommunication:
          description: "Flag containing true or false value to determine if the guest\
            \ has opted for communications pertaining to this reservation.Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is marked for communication. Upon fetch, the current\
            \ state of the flag will show true or false."
          type: boolean
        chargeCardNumber:
          description: This attribute represents Hotel charge card number. This number
            is generated automatically in OPERA when a reservation is created in OPERA.
            It is part of a functionality that provide the guest with the convenience
            of placing all their charges directly on their reservation folio.
          maxLength: 100
          minLength: 0
          type: string
        overrideOutOfServiceCheck:
          description: Indicates to Override the Room Out Of Service Check if applicable.
          type: boolean
        overrideRotationRoom:
          default: true
          description: Override the rotation room that is next in the sequence with
            the room currently assigned to this reservation. This is applicable when
            Room Rotation OPERA Control is active.
          type: boolean
        overrideRoomOwnership:
          default: true
          description: Override the room ownership of the room currently assigned
            to this reservation. This is applicable when Room Rotation OPERA Control
            is active.
          type: boolean
        responseInstructions:
          $ref: '#/components/schemas/hotelReservationInstructionType_responseInstructions'
        changeInstrunctions:
          $ref: '#/components/schemas/changeInstructionType'
        overrideRoomFeatures:
          description: "This flag indicates true/false. When this is true, it will\
            \ allow to override the room feature preference validation while assigning\
            \ rooms. The Reservation Room Features OPERA Control will determine which\
            \ room feature preferences will be validated. When Reservation Room Features\
            \ is on, the validation will be against the Room Feature preferences attached\
            \ to the reservation. If the parameter is off, the validation will be\
            \ against the room feature preferences attached to the profile. This is\
            \ applicable when the Room Feature Validation OPERA Control is on."
          type: boolean
        routeAllTransactionsToShare:
          description: Indicates if this joining reservation should route all transactions
            to the 'Share To' reservation when including Share Reservations Instructions.
          type: boolean
      type: object
    associatedResType:
      description: Information regarding associated reservations to the reservation.
      type: object
    resStatClassificationType:
      description: Statistical Classification information for the reservation.
      properties:
        roomType:
          description: Room Type used to calculate statistics for export(DRS).
          maxLength: 20
          minLength: 0
          type: string
        rateTier:
          description: Rate Tier used calculate statistics for export(DRS).
          type: integer
      type: object
    changeInstructionType:
      description: Instructions for Changing a Reservation.
      properties:
        shareReservations:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        updatePackagePrice:
          description: Indicates whether package prices will be updated with the latest
            configurations.
          type: boolean
        changeAllShares:
          type: boolean
        overrideInventory:
          type: boolean
        facilitySchedulerOption:
          $ref: '#/components/schemas/facilitySchedulerOptionType'
        applyUntilLastShareDepartureDate:
          description: Indicates whether the chosen changes will be made not only
            to overlapping dates of share reservations but also to non-overlapping
            dates after the departure date of the edited reservation. When false or
            omitted the chosen changes are applied only to overlapping dates of share
            reservations.
          type: boolean
      type: object
    facilitySchedulerOptionType:
      description: Facility Scheduler Option value.
      enum:
      - Default
      - Update
      - Noupdate
      type: string
    changeReservationDetails:
      properties:
        reservations:
          $ref: '#/components/schemas/hotelReservationsType'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        channelInformation:
          $ref: '#/components/schemas/channelResvRSInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    channelResvRSInfoType:
      description: Holds all the channel reservation specific information.
      properties:
        channelSummaryInfo:
          $ref: '#/components/schemas/channelSummaryInfoType'
        channelResvStatus:
          $ref: '#/components/schemas/channelResvStatusType'
        channelMarketingInfo:
          description: "Marketing Text like cancel policy, deposit policy etc."
          items:
            $ref: '#/components/schemas/channelMarketingInfoType_inner'
          maxItems: 4000
          type: array
        lastCommittedResv:
          $ref: '#/components/schemas/lastCommittedResvType'
        inSessionReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    channelMarketingInfoType:
      description: "Marketing Text like cancel policy, deposit policy etc."
      items:
        $ref: '#/components/schemas/channelMarketingInfoType_inner'
      maxItems: 4000
      type: array
    marketingPolicyType:
      description: "Indicates the channel policy type like deposit,cancel etc."
      enum:
      - Deposit
      - Commission
      - Cancel
      - Guarantee
      - General
      - Penalty
      - Tax
      - Promotion
      type: string
    reinstateReservation:
      description: Overriding the validation check will log the supposed errors in
        the warnings log if they would fail.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationLockHandle:
          type: number
        reservation:
          $ref: '#/components/schemas/hotelReservationType'
        overrideInventory:
          description: Flag that indicates if room inventory check should be skipped
            when the reservation is being reinstated.
          type: boolean
        overrideRates:
          description: Flag that indicates if rate code inventory check should be
            skipped when the reservation is being reinstated.
          type: boolean
        overrideRoomOutOfService:
          description: Flag that indicates if the check on the housekeeping status
            for out of service should be skipped.
          type: boolean
        overrideRoomAllocation:
          description: Flag that indicates if the check on room allocation should
            be skipped.
          type: boolean
        additionalReservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reinstateReservationDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cancelReservation:
      description: Request object for canceling reservations.
      properties:
        rateChangeInstruction:
          $ref: '#/components/schemas/rateChangeInstructionType'
        reason:
          $ref: '#/components/schemas/cancellationReasonType'
        reservations:
          description: Information on the reservation that is to be canceled.
          items:
            $ref: '#/components/schemas/cancelReservationType'
          type: array
        channelInformation:
          $ref: '#/components/schemas/channelResvRQInfoType'
        reservationNotification:
          default: false
          description: "Boolean flag that forces reservation to updates in OPERA.\
            \ By default, this value is false."
          type: boolean
        verificationOnly:
          description: Indicator if the request is a verification on whether the reservation
            can be canceled.
          type: boolean
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    rateChangeInstructionType:
      description: Defines override rate type.
      properties:
        discount:
          $ref: '#/components/schemas/discountType'
        rateChange:
          $ref: '#/components/schemas/rateChangeType'
      type: object
    rateChangeType:
      description: Simple type for rate change type.
      enum:
      - Verify
      - OldRate
      - NewRate
      type: string
    cancellationReasonType:
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cancelReservationType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalCancellationId:
          description: External cancellation number to be stored as cancellation number
            of the reservation. This is supported by postCancelShareReservation and
            postCancelReservation only.
          maxLength: 50
          minLength: 1
          type: string
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        cxlInstr:
          $ref: '#/components/schemas/cancellationInstructionsType'
        refResId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationLockHandle:
          type: number
        overrideExternalChecks:
          description: "This forcefully overrides the cancel operation on Reservation.\
            \ For real-time CRS interface, it is used as cancellation override flag."
          type: boolean
      type: object
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    interfaceRightsStatusType:
      properties:
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    cancellationInstructionsType:
      properties:
        description:
          description: Detailed description such as why reservation cannot be cancelled.
          maxLength: 4000
          minLength: 0
          type: string
        deleteResTraces:
          type: boolean
        status:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    cancelReservationDetails:
      description: Response object for the request to cancel reservations. Response
        contains the reservations which were successfully canceled.
      properties:
        cxlActivityLog:
          description: "Cancellation information includes information regarding Reason,\
            \ Date of Cancellation etc.."
          items:
            $ref: '#/components/schemas/cancellationActivityType'
          maxItems: 4000
          type: array
        oldRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
        newRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
        reservations:
          description: Information regarding the reservation which was canceled.
          items:
            $ref: '#/components/schemas/cancelReservationType'
          maxItems: 4000
          type: array
        reservationPolicies:
          $ref: '#/components/schemas/reservationPoliciesType'
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        channelInformation:
          $ref: '#/components/schemas/channelResvRSInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cancellationActivityType:
      properties:
        reason:
          $ref: '#/components/schemas/cancellationReasonType'
        cxlDate:
          format: date
          type: string
        userId:
          type: number
        userName:
          type: string
        cancellationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    dailyRatesType:
      description: Defines room rate information on a daily basis.
      items:
        $ref: '#/components/schemas/dailyRateType'
      maxItems: 4000
      type: array
    dailyRateType:
      description: The total amount charged for the service including additional amounts
        and fees.
      properties:
        taxes:
          $ref: '#/components/schemas/taxesType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        amountBeforeTax:
          description: "The total amount not including any associated tax (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        amountAfterTax:
          description: "The total amount including all associated taxes (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        code:
          description: Type of charge.
          maxLength: 20
          minLength: 0
          type: string
        rateOverride:
          description: When true indicates that the rate amount has been overridden.
          type: boolean
        baseAmount:
          description: The rate's base price. Amount excluding price for any add to
            rate combine line package attached to the rate.Also excludes any discounts
          type: number
        discount:
          $ref: '#/components/schemas/discountType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    reservationRoutingCriteria:
      description: Request to create a routing instruction.
      properties:
        criteria:
          $ref: '#/components/schemas/resvRoutingCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resvRoutingCriteriaType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        folio:
          $ref: '#/components/schemas/routingInfoType_folio'
        room:
          $ref: '#/components/schemas/routingInfoType_room'
        comp:
          $ref: '#/components/schemas/routingInfoType_comp'
        request:
          $ref: '#/components/schemas/routingInfoType_request'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        hotelId:
          description: Hotel context of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        retrievePostingsForRoomRouting:
          description: "This flag indicates if postings that can be refreshed need\
            \ to be part of the response when a routing instruction is created, updated\
            \ or deleted."
          type: boolean
      type: object
    routingInstructionsInfo:
      description: Request when changing a routing instruction.
      properties:
        criteria:
          $ref: '#/components/schemas/routingInstructionsInfo_criteria'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    shareReservations:
      description: Response for the fetch share reservation request. This returns
        all sharer reservations including the request reservation.
      properties:
        shareReservations:
          $ref: '#/components/schemas/hotelReservationsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    combineShareReservations:
      description: Request to combine sharer reservations. This request requires a
        Reservation Name Id(Joining to) and a Joining Reservation Id
      properties:
        criteria:
          $ref: '#/components/schemas/combineShareReservationsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    combineShareReservationsType:
      description: Record Type for Combining Share Reservations.
      properties:
        combineShareInstruction:
          $ref: '#/components/schemas/combineShareInstructionType'
        hotelId:
          description: Opera Hotel/Resort code for the Combine Share Reservations
            request.
          maxLength: 20
          minLength: 0
          type: string
        shareToReservation:
          $ref: '#/components/schemas/combineShareReservationsType_shareToReservation'
        existingReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        newReservations:
          description: Type for the profile information to create a new share reservation.
            This is used to create sharers from profiles.
          items:
            $ref: '#/components/schemas/combineShareFromProfileType'
          maxItems: 4000
          type: array
        fetchInstructions:
          $ref: '#/components/schemas/combineShareReservationsType_fetchInstructions'
        overrideRoomOwnership:
          default: true
          description: Override the room ownership of the room currently assigned
            to this reservation. This is applicable when Room Rotation OPERA Control
            is active.
          type: boolean
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
        existingReservation:
          $ref: '#/components/schemas/combineShareFromExistingReservationType'
      type: object
    combineShareInstructionType:
      description: Instructions for overriding checks during combine share operation.
      properties:
        rateChangeInstruction:
          $ref: '#/components/schemas/rateChangeInstructionType'
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        overrideInstruction:
          $ref: '#/components/schemas/overrideInstructionType'
        distributionType:
          $ref: '#/components/schemas/shareDistributionInstructionType'
        overrideInventoryCheck:
          description: Indicate to override the room inventory check if applicable.
          type: boolean
        roomMoveCheckedinResv:
          description: "If the joining sharer is checked in, do a room move to the\
            \ main sharer's room."
          type: boolean
        overrideMaxOccupancyCheck:
          description: Indicate to override the check on maximum room occupancy if
            applicable.
          type: boolean
      type: object
    combineShareFromProfilesType:
      description: Type for the profile information to create a new share reservation.
        This is used to create sharers from profiles.
      items:
        $ref: '#/components/schemas/combineShareFromProfileType'
      maxItems: 4000
      type: array
    combineShareFromProfileType:
      description: Type for the profile information to create a new share reservation.
        This is used to create sharers from profiles.
      properties:
        newSharerId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationPaymentMethods:
          $ref: '#/components/schemas/copyReservationPaymentMethodsType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        dailyRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        routeAllTransactionsToShareReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    copyReservationPaymentMethodsType:
      description: A collection of Reservation Payment Methods.
      properties:
        reservationPaymentMethod:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        copyCreditCards:
          description: Indicates copying of credit card payment methods. This flag
            will only be applied to payment method windows not sent in the collection.
          type: boolean
        copyOthers:
          description: Indicates copying of other payment methods. This flag will
            only be applied to payment method windows not sent in the collection.
          type: boolean
      type: object
    combineShareReservationsDetails:
      description: "Response for the combine share reservation request. Based on the\
        \ request, this will return all sharer reservations including the request\
        \ reservation."
      properties:
        shareReservations:
          $ref: '#/components/schemas/hotelReservationsType'
        oldRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
        newRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    deliveryHistoryLog:
      description: Response that contains fetched reservation's delivery history.
      properties:
        deliveryHistoryLog:
          description: Delivery History Information.
          items:
            $ref: '#/components/schemas/deliveryHistoryType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    deliveryHistoryType:
      properties:
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        resvNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryMethod:
          $ref: '#/components/schemas/deliveryMethodType'
        interfaceId:
          description: Interface Id.
          maxLength: 20
          minLength: 0
          type: string
        deliveryStatus:
          $ref: '#/components/schemas/statusType'
        errorDescription:
          description: The error Description Of Reservation Delivery status
          maxLength: 4000
          minLength: 0
          type: string
        retryCount:
          description: Retry Count
          type: integer
        deliveryDate:
          description: Delivery Date.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    deliveryMethodType:
      description: PRINT
      enum:
      - Msmq
      - Http
      - Fax
      - Email
      - Print
      type: string
    statusType:
      description: Status of the batch process.
      enum:
      - Success
      - Error
      - Running
      - Stopped
      - Warning
      - Failed
      - Started
      - CompletedWithLogs
      type: string
    guestMessages:
      description: Response object to the request to retrieve Guest Messages for a
        Reservation.
      properties:
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/resvGuestMessageType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resvGuestMessagesType:
      description: Holds the Message Information
      items:
        $ref: '#/components/schemas/resvGuestMessageType'
      maxItems: 4000
      type: array
    resvGuestMessageType:
      description: List of Guest Messages
      properties:
        message:
          $ref: '#/components/schemas/resvMessageType'
        delivery:
          $ref: '#/components/schemas/messageDeliveryType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    resvMessageType:
      description: Holds the Message Information
      properties:
        messageText:
          description: Message Content
          maxLength: 2000
          minLength: 0
          type: string
        messageDate:
          description: Date the message was created
          format: date-time
          type: string
        typeOfMessage:
          $ref: '#/components/schemas/typeOfMessageType'
        recipient:
          description: Recipient of the Message
          maxLength: 80
          minLength: 0
          type: string
        operator:
          description: User who created the Message
          maxLength: 40
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        roomId:
          description: Display room number if it has been assigned.
          type: string
        reservationStatus:
          description: Status of the reservation.
          maxLength: 80
          minLength: 0
          type: string
        noOfNights:
          description: shows the number of nights for the reservation.
          type: integer
        guestNameId:
          description: shows the Id of the Guest.
          type: integer
        departureDate:
          description: Display the departure date of the guest.
          format: date-time
          type: string
        arrivalDate:
          description: Display the arrival date of the guest.
          format: date-time
          type: string
        confirmationNo:
          description: Confirmation number of the reservation.
          type: string
        blockCode:
          description: Display the block code associated with the reservation.
          type: string
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        roomStatus:
          description: Display the status of the Room.
          type: string
      type: object
    extendReservationLock:
      description: Operation for extending the lifetime of a lock on a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        lockHandle:
          description: The lock handle of the record lock we are attempting to release.
          type: number
        additionalTimeToLive:
          description: The number of seconds to add to the lock's validity time.
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    extendReservationLockDetails:
      description: This response will indicate whether or not the extension was successful.
        This operation may return errors when the lock being requested to be extended
        no longer exists. This can happen when the lock has already expired and cleaned
        up.
      properties:
        reservationLock:
          $ref: '#/components/schemas/operaRecordLock'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    operaRecordLock:
      description: This type contains information about a record lock.
      properties:
        lockHandle:
          description: This is the identifier of the lock. This will be null when
            the requesting user does not own the lock.
          type: number
        recordType:
          $ref: '#/components/schemas/operaLockRecordType'
        recordId:
          description: This is the id of the locked record.
          type: string
        createdBy:
          description: This is the user name of the current owner of the locked record.
          type: string
        createdOn:
          description: This is the time when the record was locked.
          format: date
          type: string
        timeToLive:
          description: This is the validity of the lock in seconds.
          type: number
        expiresOn:
          description: This is the estimated expiry time of the lock.
          format: date
          type: string
        internal:
          description: Notification flag to specify if the lock is based on an Internal
            Opera9 lock versus an External lock.
          type: boolean
      type: object
    operaLockRecordType:
      enum:
      - Reservation
      - Cashier
      type: string
    preArrivalMemberReservationsDetails:
      properties:
        preArrivalMemberReservationType:
          description: Collection of PreArrivalMemberReservations.
          items:
            $ref: '#/components/schemas/preArrivalMemberReservationType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    preArrivalMemberReservationType:
      properties:
        createDateTime:
          description: Date on which Reservation is Created.
          format: date-time
          type: string
        arrivalDate:
          description: Arrival Date.
          format: date
          type: string
        membershipId:
          description: Membership Card number.
          maxLength: 80
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    preConfiguredRoutingInstructions:
      description: This is the Response Message to the request for Pre-Configured
        Routing Instructions.
      properties:
        routingInstructions:
          description: Set of Pre-Configured Routing Instructions.
          items:
            $ref: '#/components/schemas/preConfiguredRoutingInstrType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    preConfiguredRoutingInstrListType:
      description: Set of Pre-Configured Routing Instructions.
      items:
        $ref: '#/components/schemas/preConfiguredRoutingInstrType'
      maxItems: 4000
      type: array
    preConfiguredRoutingInstrType:
      description: Routing can be promotion code complimentary routing or profile
        routing.
      properties:
        reservationProfile:
          $ref: '#/components/schemas/resAttachedProfileType'
        compRoutingInstructionType:
          $ref: '#/components/schemas/promoCodeCompRoutingType'
        autoPopulateRouting:
          description: A flag which determines whether the Pre-configured Routing
            Instruction has to be automatically populated for this profile or not.
          maxLength: 20
          minLength: 0
          type: string
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        ratePlanCode:
          description: This is the actual rate code. This will be populated only for
            Pre-configured Routing Instructions for RateCodes.
          maxLength: 20
          minLength: 0
          type: string
        beginDate:
          description: This is the Begin date for the Default Routing Instruction
            selected.
          format: date
          type: string
        endDate:
          description: This is the End date for the Default Routing Instruction selected.
          format: date
          type: string
      type: object
    promoCodeCompRoutingType:
      description: "Promotion Code Complimentary Routing limit can be one of the three:\
        \ Credit Limit, Percetage Limit, Covers Limit"
      properties:
        membershipId:
          description: Membership number for promotion code complimentary routing
          maxLength: 100
          minLength: 0
          type: string
        comments:
          description: User Defined Comments. Used for promotion code Complimentary
            Routing.
          maxLength: 2000
          minLength: 0
          type: string
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        duration:
          $ref: '#/components/schemas/promoCodeCompRoutingType_duration'
        creditLimit:
          description: "Allowable credit amount for this promotion code complimentary\
            \ routing instruction. Null value means no limit, 0 equals zero."
          type: number
        percentageLimit:
          description: The promotion code complimentary routing limit percentage allowed
            for this routing instruction.
          type: number
        covers:
          description: Number of covers for this promotion code complimentary routing
            instruction.
          type: number
        promotionCode:
          description: Promotion code for Complimentary Routing
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: The folio number where it is applied for promotion code complimentary
            routing.
          type: integer
        promptForAuthorizer:
          description: Flag to indicate to prompt the Authorizer for promotion code
            complimentary routing.
          type: boolean
        compPreApprovalRequired:
          description: Flag to indicate that pre approval is required for promotion
            code complimentary routing .
          type: boolean
      type: object
    fetchReservations:
      properties:
        reservationInfoList:
          $ref: '#/components/schemas/fetchReservations_reservationInfoList'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    validateRateInfo:
      description: Retrieve either the reservation's rate information or make a quotation
        for a rate information. SummaryInfo attribute specifies if the item being
        requested is of detail or summary type.
      properties:
        criteria:
          $ref: '#/components/schemas/validateRateInfo_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    rateInfo:
      description: "Response will either be Summary or Detail type, but not both.\
        \ See the request for the summary attribute flag."
      properties:
        detail:
          $ref: '#/components/schemas/rateInfo_detail'
        summary:
          $ref: '#/components/schemas/reservationRateSummaryType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationRateSummaryType:
      properties:
        details:
          items:
            $ref: '#/components/schemas/reservationRateSummaryDetailType'
          maxItems: 4000
          type: array
        gross:
          description: Amount of revenue and package excluding tax.
          type: number
        net:
          description: Amount of revenue and package including tax.
          type: number
        fixedCharges:
          description: Amount of automatically posted charges along with room and
            taxes.
          type: number
        deposit:
          description: Amount paid prior to the stay.
          type: number
        totalCostOfStay:
          description: Amount of total cost of stay.
          type: number
        outStandingCostOfStay:
          description: Remaining amount to be paid.
          type: number
        guestPay:
          description: Amount to be paid by Guest.
          type: number
        routing:
          description: Amount of automatically forwarded charges for specific transaction
            codes.
          type: number
        currencyCode:
          description: Currency revenue calculation is based on.
          maxLength: 3
          minLength: 3
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        hasSuppressedRate:
          description: Whether suppressed rate is present or not.
          type: boolean
      type: object
    reservationRateSummaryDetailType:
      properties:
        summaryDate:
          description: Stay date for which revenue calculation is done.
          format: date
          type: string
        revenue:
          description: Base Amount of rate.
          type: number
        package:
          description: Amount of an additional product or service that is sold as
            part of the rate or in addition to the rate.
          type: number
        tax:
          description: Amount of tax generated separately on the revenue and package.
          type: number
        gross:
          description: Amount of revenue and package excluding tax.
          type: number
        net:
          description: Amount of revenue and package including tax.
          type: number
        ratePlanCode:
          description: Rate code calculation is based on.
          maxLength: 20
          minLength: 0
          type: string
        revenueSimulationDate:
          description: Date revenue calculation is based on.
          format: date
          type: string
        currencyCode:
          description: Currency revenue calculation is based on.
          maxLength: 3
          minLength: 3
          type: string
        rateSuppressed:
          description: Indicates if the rate is to be hidden.
          type: boolean
      type: object
    activityLog:
      description: Response object for the request for the reservation user activity
        log.
      properties:
        activityLog:
          $ref: '#/components/schemas/activityLogListType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    activityLogType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        module:
          type: string
        logDate:
          format: date-time
          type: string
        refActionId:
          type: number
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        deviceCode:
          description: The selected device code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationAlerts:
      description: Request object to create or update multiple alerts information
        for multiple reservations in bulk.
      properties:
        reservations:
          description: Holds multiple alerts for a single reservation. Reservation
            will be identified by a unique identifier/ list of unique identifiers.
          items:
            $ref: '#/components/schemas/reservationAlertsType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationAlertsListType:
      description: Holds multiple alerts for a single reservation. Reservation will
        be identified by a unique identifier/ list of unique identifiers.
      items:
        $ref: '#/components/schemas/reservationAlertsType'
      maxItems: 4000
      type: array
    reservationAlertsType:
      description: Hold the multiple alerts for a single reservation which is identified
        by a unique identifier.
      properties:
        alert:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property code where the reservation belongs to.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    cancelReservations:
      description: Request to submit batch cancel reservations.
      properties:
        cancelReservations:
          $ref: '#/components/schemas/cancelReservationsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cancelReservationsType:
      description: Criteria for submitting batch cancel reservations.
      properties:
        reservations:
          description: Unique identifier for a reservation.
          items:
            $ref: '#/components/schemas/reservationId'
          maxItems: 4000
          type: array
        reason:
          $ref: '#/components/schemas/cancellationReasonType'
        cancelInstructions:
          $ref: '#/components/schemas/cancelReservationsInstructionsType'
        hotelId:
          description: The hotel code for the reservations that are being cancelled.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservations:
      description: Unique identifier for a reservation.
      items:
        $ref: '#/components/schemas/reservationId'
      maxItems: 4000
      type: array
    cancelReservationsInstructionsType:
      description: The instructions to be applied for the reservations that are being
        cancelled.
      properties:
        deleteTraces:
          description: Indicate if the traces associated with the reservations have
            to be deleted after the cancellation process.
          type: boolean
        ignorePenalties:
          description: Indicate whether to ignore any associated cancellation rules
            during the cancellation process.
          type: boolean
        ignoreDeposits:
          description: Indicate whether to allow cancel a reservation which has an
            applied deposit.
          type: boolean
        cancelShares:
          description: Indicate whether any sharing reservations associated with the
            reservation which is being cancelled will also be cancelled.
          type: boolean
      type: object
    validateReservationChanges:
      description: Request to validate reservation changes.
      properties:
        reservation:
          $ref: '#/components/schemas/hotelReservationType'
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        instructions:
          $ref: '#/components/schemas/validateReservationChanges_instructions'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationValidationInstructionType:
      description: Instruction to validate CompRouting Instructions attached to a
        reservation.
      enum:
      - StayHeader
      - StayDates
      - OverlappingStay
      - Packages
      - RefreshPackages
      - Preferences
      - AccessRestrictions
      - Ecertificates
      - Promotions
      - TrackItItems
      - TotalCostOfStay
      - ReservationAwards
      - WebRegistrationCards
      - ServiceRequests
      - ReservationActivities
      - ScheduledActivities
      - PrepaidCards
      - Shares
      - Attachments
      - Locators
      - ProfileAwards
      - RefreshRates
      - ReservationGuarantee
      - UpsellsAvailable
      - InventoryItems
      - CompRouting
      - RoomAvailablity
      type: string
    upsellRateInstructionType:
      description: Instruction to remove the upsell and recalculate the rate based
        on the upsell target room type.
      enum:
      - HonorUpsellRateForAdditionalNights
      - OriginalRoomType
      - TargetRoomType
      type: string
    validateReservationChangesDetails:
      description: Response for validating reservation changes.
      properties:
        validationMessages:
          items:
            $ref: '#/components/schemas/validationReturnType'
          maxItems: 4000
          type: array
        reservation:
          $ref: '#/components/schemas/hotelReservationType'
        reservationGuarantee:
          $ref: '#/components/schemas/guaranteePolicyType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    validationsReturnType:
      items:
        $ref: '#/components/schemas/validationReturnType'
      maxItems: 4000
      type: array
    validationReturnType:
      description: Validations type record returned after Validations are done.
      properties:
        validationType:
          description: "The type of Validation Record. Example would be OVERBOOK_INVENTORY,\
            \ OVERRIDE_MAX_OCCUPANCY, CREDIT_CARD_REQUIRED In some cases this will\
            \ match a permission."
          maxLength: 20
          minLength: 0
          type: string
        validationMessage:
          description: The message returned after validating.
          maxLength: 2000
          minLength: 0
          type: string
        validationAction:
          $ref: '#/components/schemas/validationActionType'
        validationCode:
          description: The code returned after validation.
          maxLength: 100
          minLength: 0
          type: string
        invalidReservations:
          description: List of Reservations.
          items:
            $ref: '#/components/schemas/reservationSummaryType'
          maxItems: 4000
          type: array
      type: object
    validationActionType:
      description: Validation Actions returned after validations are done. STOP-PROCESSING
        implies that the user cannot continue with the operation as some validation
        failed. USER-RESPONSE-REQUIRED implies that some validations can be overridden
        and the User can continue if they wish to override.
      enum:
      - StopProcessing
      - UserResponseRequired
      type: string
    reservationSummaryListType:
      description: List of Reservations.
      items:
        $ref: '#/components/schemas/reservationSummaryType'
      maxItems: 4000
      type: array
    reservationSummaryType:
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestFirstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        stayPeriod:
          $ref: '#/components/schemas/dateRangeType'
      type: object
    guaranteePolicyType:
      description: Specifies Guarantee Code attributes.
      properties:
        description:
          description: Description of the Guarantee Code.
          maxLength: 2000
          minLength: 0
          type: string
        requirements:
          $ref: '#/components/schemas/guaranteeRequirementsType'
        shortDescription:
          $ref: '#/components/schemas/translationTextType80'
        paymentTypes:
          description: "Payment card code like AX,VI etc."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        guaranteeCode:
          description: Code assigned to the Guarantee.
          maxLength: 20
          minLength: 0
          type: string
        onHold:
          description: If true indicates this Guarantee Code is used only to hold
            the inventory during reservation process.
          type: boolean
        reserveInventory:
          description: If true indicates inventory will be reserved/deducted when
            reservation uses this Guarantee Code.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        lateArrival:
          description: Represents the late arrival time.
          type: string
        cancelPenalty:
          $ref: '#/components/schemas/guaranteePolicyType_cancelPenalty'
        depositPolicy:
          $ref: '#/components/schemas/guaranteePolicyType_depositPolicy'
        defaultGuarantee:
          description: If true indicates this can be the default guarantee type to
            be selected for a reservation.
          type: boolean
      type: object
    guaranteeRequirementsType:
      description: Specifies various requirement for the guarantee code.
      properties:
        requirementCode:
          description: Requirement Code.
          type: string
        cancellation:
          description: When true indicates cancellation on the reservation is required
            for this guarantee code.
          type: boolean
        phoneNumber:
          description: When true indicates phone number on the reservation is required
            for this guarantee code.
          type: boolean
        address:
          description: When true indicates address on the reservation is required
            for this guarantee code.
          type: boolean
        creditCard:
          description: When true indicates Credit Card on the reservation is required
            for this guarantee code.
          type: boolean
        arrivalTime:
          description: When true indicates arrival Time on the reservation is required
            for this guarantee code.
          type: boolean
        deposit:
          description: When true indicates deposit is required for this guarantee
            code.
          type: boolean
      type: object
    translationTextType80:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 80.
          maxLength: 80
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    paymentTypesType:
      description: "Payment card code like AX,VI etc."
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    alerts:
      description: "Response with the fetched alerts, includes global alerts, notes\
        \ and undelivered guest messages."
      properties:
        alerts:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          type: array
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/resvGuestMessageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationAttachments:
      description: Return object to the request for information regarding reservation
        attachments.
      properties:
        reservationAttachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    breakShareValidations:
      description: Request for Break Share operation validations. This request should
        be done prior to the actual Break Share operation request. Based on the validations
        returned from this request the appropriate parameters can be returned in the
        actual break share request.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    breakShareValidationsDetails:
      description: Response for the Break Share Validation request. This returns all
        validation messages for the operation.
      properties:
        returnedValidations:
          items:
            $ref: '#/components/schemas/validationReturnType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    callHistory:
      description: Response that contains either the fetched call history if was successful
        or error(s) if not.
      properties:
        callHistory:
          description: Holds call information.
          items:
            $ref: '#/components/schemas/callType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cancellationHistory:
      description: Response object to the request to retrieve cancellation history
        for a reservation.
      properties:
        cxlActivityLog:
          description: Cancellation Activity information. Refer to Generic common
            types document.
          items:
            $ref: '#/components/schemas/cancellationActivityType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    computeCancellationPolicies:
      description: "Operation to fetch the details for cancellation rules, applicable\
        \ to a reservation. Based on the criteria the rule information can be retrieved\
        \ for all cancellation rules or for a particular rule."
      properties:
        criteria:
          $ref: '#/components/schemas/computeCancellationPolicies_criteria'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    computeCancellationPoliciesDetails:
      description: Response for the cancellation rules configuration request. Contains
        computed details for the cancellation rules requested.
      properties:
        policies:
          description: A list of reservation cancellation policies.
          items:
            $ref: '#/components/schemas/resCancellationPolicyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    attachCertificate:
      description: Request to attach certificate to the Reservation.
      properties:
        awards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    combineShareValidations:
      description: "Request to validate a combine share operation. This would be done\
        \ prior to the actual Combine Share operation. Based on the validations returned\
        \ from this request, the appropriate values can be returned to the Combine\
        \ Share operation request."
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        shareToReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        existingReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        newReservation:
          $ref: '#/components/schemas/combineShareFromProfileType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    combineShareValidationsDetails:
      description: Response for the Combine Share Validation request. This returns
        all validation messages which may be required for the combine share operation.
      properties:
        returnedValidations:
          items:
            $ref: '#/components/schemas/validationReturnType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyReservation:
      description: Request for copying a reservation's information as a template for
        a new reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/copyReservationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyReservationType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceReservationId:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        newReservation:
          $ref: '#/components/schemas/hotelReservationInstructionType'
        instructions:
          $ref: '#/components/schemas/copyReservationType_instructions'
      type: object
    reservationDailyRateDetail:
      description: Request for validating Daily Rate Details modifications.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        newDetail:
          $ref: '#/components/schemas/dailyRateDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyRateDetailType:
      description: Rate details for the different dates of a reservation.
      properties:
        rate:
          $ref: '#/components/schemas/amountType'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        promotions:
          description: Type to specify a rate promotion. Usually attached to a reservation
            to indicate a specific promotion is applied to the reservation.
          items:
            $ref: '#/components/schemas/promotionType'
          maxItems: 4000
          type: array
        roomType:
          description: Room Type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          description: Market Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Room number of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        roomTypeToCharge:
          description: The Room Type on which the rate is based on. The reservation
            may use a different room type but is charged based on a different room
            type.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: The Rate Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        startDate:
          description: The date of the reservation stay.
          format: date
          type: string
        endDate:
          description: "The date of the reservation stay. If the same details need\
            \ to be applied to a date range of the stay, then the Start Date and End\
            \ Date would specify the range."
          format: date
          type: string
        commissionCode:
          description: The Commission Code used for the reservation.
          maxLength: 20
          minLength: 0
          type: string
        fixedRate:
          description: Indicates if the rate is fixed and could be different from
            the default rate amount of the rate code.
          type: boolean
        discountAllowed:
          description: Indicates if the Rate Code is discountable i.e discounts are
            allowed on the rate code.
          type: boolean
        changeAllSharers:
          description: "Indicates if all the share reservations will be changed. This\
            \ is returned in the response after validation, indicating whether all\
            \ shares will be changed (in the case of room type change or date change)."
          type: boolean
      type: object
    promotionsType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      items:
        $ref: '#/components/schemas/promotionType'
      maxItems: 4000
      type: array
    reservationDailyRateDetailDetails:
      description: Response after validating the changes for Daily Rate Details modifications.
      properties:
        returnedValidations:
          items:
            $ref: '#/components/schemas/validationReturnType'
          maxItems: 4000
          type: array
        newDetail:
          description: "Daily detail information with changes for Market Code, Source\
            \ Code, Rate amount and Currency code, based on the validations done."
          items:
            $ref: '#/components/schemas/dailyRateDetailType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    computeDepositPolicies:
      description: "Operation to fetch the details for deposit rules, applicable to\
        \ a reservation. Based on the criteria the rule information can be retrieved\
        \ for all deposit rules or for a particular rule."
      properties:
        criteria:
          $ref: '#/components/schemas/depositCancelConfigCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositCancelConfigCriteriaType:
      description: "Criteria for calculating the deposit/cancellation amount based\
        \ on a reservation, policy code, amount or percentage."
      properties:
        hotelId:
          description: Property Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        policyCode:
          description: The policy code based on which the calculation of the amount
            and due date is to be done.
          maxLength: 20
          minLength: 0
          type: string
        percentage:
          description: The percentage based on which the calculation of the amount
            and due date is to be done.
          type: number
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
      type: object
    computeDepositPoliciesDetails:
      description: Response for the deposit rules configuration request. Contains
        computed details for the deposit rules requested.
      properties:
        policies:
          description: A list of deposit policies attached with the reservation.
          items:
            $ref: '#/components/schemas/resDepositPolicyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCoupons:
      description: Response object for fetching the eCoupons attached to Reservation.
      properties:
        eCoupons:
          description: Collection of ECouponType object.
          items:
            $ref: '#/components/schemas/eCouponType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eCouponsInfo:
      description: Request object for changing the existing eCoupons attached to Reservation.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        eCoupons:
          description: Collection of ECouponType object.
          items:
            $ref: '#/components/schemas/eCouponType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationExcludedPreferences:
      description: Response for the excluded preferences request.
      properties:
        reservationExcludedPreferences:
          description: Collection of excluded preferences for a particular preference
            of a reservation.
          items:
            $ref: '#/components/schemas/excludedPreferenceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    excludedPreferencesType:
      description: Collection of excluded preferences for a particular preference
        of a reservation.
      items:
        $ref: '#/components/schemas/excludedPreferenceType'
      maxItems: 4000
      type: array
    excludedPreferenceType:
      description: List of excluded preferences for a particular preference.
      properties:
        priority:
          description: Priority of the source system.
          type: integer
        preference:
          $ref: '#/components/schemas/codeDescriptionType'
        source:
          description: Source name of the preference.
          type: string
      type: object
    reservationLocators:
      description: Response object response to retrieve Guest Messages for a Reservation.
      properties:
        reservationLocators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLocatorsDetailsInfo:
      description: Request object for creating new Notes for the hotels
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationLocators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLocatorsDetails:
      description: Response object for creating new Notes for the hotel.
      properties:
        reservationLocators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLocatorsInfo:
      description: Request object for changing hotel Notes for hotels.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationLocators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLocatorsStatus:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createGuestMessages:
      description: Request object for creating the Guest Messages for a Reservation.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/guestMessageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    guestMessagesDetails:
      description: Response object to the request to create Guest Messages for a Reservation.
      properties:
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/resvGuestMessageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeResvGuestMessages:
      description: Request object for updating the Guest Messages for a Reservation
        Workspace.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/resvGuestMessageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeGuestMessages:
      description: Request object for updating the Guest Messages for a Reservation.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/guestMessageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    inventoryItems:
      description: Return object to the request for information regarding inventory
        Items reserved for a reservation.
      properties:
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reserveInventoryItems:
      description: Request object to reserve inventory Items for a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        itemHoldIdList:
          description: ID of an Hold Item
          items:
            type: number
          maxItems: 4000
          type: array
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    itemHoldIDListType:
      description: ID of an Hold Item
      items:
        type: number
      maxItems: 4000
      type: array
    reservedInventoryItemsInfo:
      description: Request object to change the reserved inventory Items for a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    linkedHotelReservations:
      description: Return object for retrieving linked reservations.
      properties:
        reservations:
          $ref: '#/components/schemas/linkedHotelReservationsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    linkedHotelReservationsType:
      description: A collection of Linked Reservation objects and Unique IDs of Reservation.
      properties:
        linkedReservation:
          description: A collection of Linked Reservations.
          items:
            $ref: '#/components/schemas/linkedHotelReservationType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    linkedHotelReservationType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        associatedReservations:
          description: Information regarding associated reservations to the reservation.
          type: object
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        roomStay:
          $ref: '#/components/schemas/roomStayType'
        compAuthorizer:
          $ref: '#/components/schemas/compAuthorizerInfoType'
        reservationGuests:
          description: Collection of guests associated with the reservation.
          items:
            $ref: '#/components/schemas/resGuestType'
          maxItems: 4000
          type: array
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        additionalGuestInfo:
          $ref: '#/components/schemas/resGuestAdditionalInfoType'
        reservationProfiles:
          $ref: '#/components/schemas/hotelReservationType_reservationProfiles'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        trackItItems:
          description: ""
          items:
            $ref: '#/components/schemas/trackItItemType'
          maxItems: 4000
          type: array
        shares:
          $ref: '#/components/schemas/hotelReservationsType'
        locators:
          description: Holds the Locator Information.
          items:
            $ref: '#/components/schemas/reservationLocatorType'
          maxItems: 4000
          type: array
        attachments:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        webRegistrationCards:
          description: Attachment List.
          items:
            $ref: '#/components/schemas/attachmentType'
          maxItems: 4000
          type: array
        serviceRequests:
          description: Service request.
          items:
            $ref: '#/components/schemas/serviceRequest'
          maxItems: 4000
          type: array
        reservationActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        scheduledActivities:
          description: Criteria for fetching Activity Bookings.
          items:
            $ref: '#/components/schemas/fetchActivityBookingsType'
          maxItems: 4000
          type: array
        prepaidCards:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardType'
          maxItems: 4000
          type: array
        profileAwards:
          description: List of awards.
          items:
            $ref: '#/components/schemas/awardType'
          maxItems: 4000
          type: array
        reservationPackages:
          description: A Service object represents a non-room product provided to
            guests. Service products may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestComments:
          description: List of Notes for the Guest related to the profile.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestMemberships:
          description: List of Memberships for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/membershipType'
          maxItems: 4000
          type: array
        preferenceCollection:
          description: Collection of reservation preferences.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        reservationMemberships:
          description: List of reservation memberships.
          items:
            $ref: '#/components/schemas/reservationMembershipType'
          maxItems: 4000
          type: array
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        routingInstructions:
          description: A routing info object can either be of type Folio OR of type
            Room with its corresponding instructions.
          items:
            $ref: '#/components/schemas/routingInfoType'
          maxItems: 4000
          type: array
        reservationPolicies:
          $ref: '#/components/schemas/reservationPoliciesType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        linkedReservation:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        extSystemSync:
          type: boolean
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        cancellation:
          $ref: '#/components/schemas/hotelReservationType_cancellation'
        catering:
          $ref: '#/components/schemas/cateringResInfoType'
        statisticalClassification:
          $ref: '#/components/schemas/resStatClassificationType'
        alerts:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        traces:
          description: List of Reservation Traces.
          items:
            $ref: '#/components/schemas/hotelReservationTraceType'
          maxItems: 4000
          type: array
        confirmationLetters:
          description: List of confirmation letters.
          items:
            $ref: '#/components/schemas/confirmationType'
          maxItems: 4000
          type: array
        callHistory:
          description: Holds call information.
          items:
            $ref: '#/components/schemas/callType'
          maxItems: 4000
          type: array
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        guestMessages:
          description: Holds the Message Information
          items:
            $ref: '#/components/schemas/guestMessageType'
          maxItems: 4000
          type: array
        lockHandle:
          description: "An id representing the record lock for this reservation. When\
            \ passed, update operation will verify that this lock is still valid."
          type: number
        overrideInstructions:
          description: List of override actions done.
          items:
            $ref: '#/components/schemas/overrideInstructionType'
          maxItems: 4000
          type: array
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        eCoupons:
          description: Collection of ECouponType object.
          items:
            $ref: '#/components/schemas/eCouponType'
          maxItems: 4000
          type: array
        transactionDiversions:
          $ref: '#/components/schemas/hotelReservationType_transactionDiversions'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        tickets:
          description: Collection of TicketType objects.
          items:
            $ref: '#/components/schemas/ticketType'
          maxItems: 4000
          type: array
        accessRestrictionMessage:
          description: Configurable Access Restriction Message for Excluded Block
            or Rate Code.
          maxLength: 4000
          minLength: 0
          type: string
        eCertificates:
          description: Collection of ECertificateType object.
          items:
            $ref: '#/components/schemas/reservationECertificateType'
          maxItems: 4000
          type: array
        customNameValueDetail:
          $ref: '#/components/schemas/nameValueDetailType'
        customChargeExemptionDetails:
          description: List of Custom Charge Exemptions.
          items:
            $ref: '#/components/schemas/customChargeExemptionType'
          maxItems: 4000
          type: array
        folios:
          description: This type contains a list of generated bills for a reservation.
          items:
            $ref: '#/components/schemas/folioShortInfoType'
          maxItems: 4000
          type: array
        autoBorrowFromHouse:
          description: "This flag will force to borrow from house if borrow required\
            \ for number of rooms requested, this will only applicable when reservation\
            \ is attached to a Block."
          type: boolean
        overrideExternalChecks:
          description: "Forcefully override the create/update action on the Reservation.\
            \ For real-time CRS interfaces, this element is used as force selling\
            \ indicator in case of Create or Update Reservation"
          type: boolean
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkIn:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        printRate:
          description: Indicates whether to show the rate or not on a printed document
            which includes the rate.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
        reinstateDate:
          description: Business Date when the reservation was last reinstated.
          format: date
          type: string
        party:
          description: Party/PartyCode when reservation is part of a party(a small
            group).
          maxLength: 50
          minLength: 0
          type: string
        primaryEnrollmentResort:
          description: Name Of the Resort/Hotel for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        primaryEnrollmentChain:
          description: Name of the Chain for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        customReference:
          description: Custom Reference to identify reservation.
          maxLength: 50
          minLength: 0
          type: string
        displayColor:
          description: The color to display this reservation on room grid displays.
          maxLength: 20
          minLength: 0
          type: string
        markAsRecentlyAccessed:
          description: Mark this reservation as recently accessed.
          type: boolean
        overrideInventoryCheck:
          description: Indicates to Override the Room Inventory Check if applicable.
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        preRegistered:
          description: Is the reservation pre-registered.
          type: boolean
        upgradeEligible:
          description: Indicates whether the reservation is eligible for upgrade.
          type: boolean
        overrideBlockRestriction:
          type: boolean
        allowAutoCheckin:
          description: Flag to allow auto checkin
          type: boolean
        hasOpenFolio:
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowPreRegistration:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for prior check in by guest using mobile device . Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile check in yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        optedForCommunication:
          description: "Flag containing true or false value to determine if the guest\
            \ has opted for communications pertaining to this reservation.Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is marked for communication. Upon fetch, the current\
            \ state of the flag will show true or false."
          type: boolean
        chargeCardNumber:
          description: This attribute represents Hotel charge card number. This number
            is generated automatically in OPERA when a reservation is created in OPERA.
            It is part of a functionality that provide the guest with the convenience
            of placing all their charges directly on their reservation folio.
          maxLength: 100
          minLength: 0
          type: string
        overrideOutOfServiceCheck:
          description: Indicates to Override the Room Out Of Service Check if applicable.
          type: boolean
        linkReservationType:
          $ref: '#/components/schemas/linkedReservationType'
      type: object
    linkedReservationsInfo:
      properties:
        linkedReservationList:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLock:
      description: Operation for requesting a lock on a reservation.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        overrideIfLockedByRequestingUser:
          description: "If true, the operation will try to break the existing lock\
            \ if the requesting user is the same as the owner of the lock."
          type: boolean
        lockHandle:
          description: "An identifier representing the record lock for the reservation\
            \ under process.When passed,then it will verify that if the lock is still\
            \ valid and return same lock handle.Else it will create new lock."
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationLockDetails:
      description: This response will indicate whether the requested lock has been
        granted or some other user owns the lock.
      properties:
        acquiredReservationLock:
          $ref: '#/components/schemas/operaRecordLock'
        existingReservationLock:
          $ref: '#/components/schemas/operaRecordLock'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    masterAccount:
      description: Request for CreateMasterAccount operation.
      properties:
        masterAccount:
          $ref: '#/components/schemas/masterAccountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    masterAccountType:
      description: Details of the posting master reservation.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        reservationBlock:
          $ref: '#/components/schemas/masterAccountType_reservationBlock'
        roomRate:
          $ref: '#/components/schemas/masterAccountType_roomRate'
        reservationGuest:
          $ref: '#/components/schemas/resGuestType'
        reservationProfiles:
          description: Collection of non-guest profiles associated with the reservation.
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        customReference:
          description: Custom Reference to identify reservation.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    masterAccountSummary:
      description: Response for ChangeMasterAccount operation.
      properties:
        masterAccount:
          $ref: '#/components/schemas/masterAccountSummaryType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    masterAccountSummaryType:
      description: Minimal information of the posting master reservation that can
        be used to identify the reservation uniquely.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
      type: object
    reservationMembership:
      description: Method to create a reservation membership on an existing reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationMemberships:
          description: Membership information for the membership card which has to
            be attached to the reservation.
          items:
            $ref: '#/components/schemas/reservationMembershipType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationsToMerge:
      description: Request method to Merge reservations.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        fromReservationID:
          $ref: '#/components/schemas/uniqueID_Type'
        toReservationIDList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mergeReservationsStatus:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    moveReservationHotel:
      description: Request for moving a reservation and its valid sharers to a different
        hotel.
      properties:
        criteria:
          $ref: '#/components/schemas/moveReservationHotelCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    moveReservationHotelCriteriaType:
      properties:
        sourceHotelCode:
          description: Hotel code for the current reservation being moved.
          maxLength: 20
          minLength: 0
          type: string
        destinationHotelCode:
          description: Hotel code for the hotel which the reservation will be moved.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        configuredReservation:
          $ref: '#/components/schemas/hotelReservationInstructionType'
        includedSharers:
          description: Valid share reservation identifier. This ID will be verified
            against the SourceHotel.
          items:
            $ref: '#/components/schemas/reservationIdList'
          maxItems: 4000
          type: array
        moveReasonCode:
          maxLength: 20
          minLength: 0
          type: string
        retainRateCodeAndAmount:
          description: "If true, it indicates that rate codes and amounts for different\
            \ days of the source reservation will be moved to target reservation.\
            \ When false or null that means available rate codes from target property\
            \ is used and will be part of REST request already."
          type: boolean
      type: object
    moveReservationHotelDetails:
      description: "This API will potentially remove the following information to\
        \ a moved reservation: - Routing Instructions - All routing information will\
        \ have to be configured in the new hotel. - Packages - All packages will need\
        \ to be re-configured, if it exist, in the new hotel. - Imperfect Share -\
        \ An imperfect share was requested to be moved and has been ignored."
      properties:
        reservation:
          $ref: '#/components/schemas/hotelReservationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packages:
      description: "Response to fetch package availability with the data, success\
        \ and warnings or errors."
      properties:
        reservationPackages:
          $ref: '#/components/schemas/packages_reservationPackages'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPackagesInfo:
      description: Request method to attach a package to an existing reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationPackages:
          description: A Service object represents a package provided to guests. Service
            packages may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPaymentMethods:
      description: Method to create a reservation's payment methods.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPolicies:
      description: Response that contains deposit and cancellation policies attached
        with the reservation.
      properties:
        cancellationPolicies:
          description: A list of reservation cancellation policies.
          items:
            $ref: '#/components/schemas/resCancellationPolicyType'
          maxItems: 4000
          type: array
        depositPolicies:
          description: A list of deposit policies attached with the reservation.
          items:
            $ref: '#/components/schemas/resDepositPolicyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    preCheckInReservation:
      description: Request to pre-register a reservation eligible for pre-registration
        and change arrival details.
      properties:
        reservation:
          $ref: '#/components/schemas/reservationPreCheckInDetailsType'
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPreCheckInDetailsType:
      description: Type describing the different details regarding a pre-registered
        reservation including ID.
      properties:
        hotelId:
          description: Hotel Code of this reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        preCheckInDetails:
          $ref: '#/components/schemas/preCheckInDetailsType'
      type: object
    preCheckInDetailsType:
      description: Type describing the different details regarding a pre-registered
        reservation.
      properties:
        arrival:
          $ref: '#/components/schemas/reservationArrivalInfoType'
        roomId:
          description: Room Number to be assigned to the reservation.
          maxLength: 20
          minLength: 0
          type: string
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        reservationPaymentMethods:
          description: Defines reservation payment methods.
          items:
            $ref: '#/components/schemas/reservationPaymentMethodType'
          maxItems: 4000
          type: array
        arrivalTransport:
          $ref: '#/components/schemas/transportInfoType'
      type: object
    reservationArrivalInfoType:
      description: Type describing information regarding the arrival of a reservation.
      properties:
        arrivalTime:
          description: The time at which the guest arrives at the hotel.
          format: date-time
          type: string
      type: object
    reservationPreference:
      description: Response for the reservation's preferences.
      properties:
        reservationPreferences:
          description: "For reservation preferences, you will want to send ReservationPreferenceType\
            \ as the preferenceType object to acknowledge any reservation related\
            \ process with the request."
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPreferenceInfo:
      description: Method to change a reservation preference on an existing reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationPreferences:
          description: Preference information for the reservation.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPreferenceDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reverseDepositPolicy:
      description: Request type to reverse deposit policy of a reservation.(This is
        applicable only when advance deposit handling is set to '17') ReverseDepositPolicy
        operation will reverse the policy by creating a new request with same opposite
        amount.
      properties:
        policy:
          $ref: '#/components/schemas/reservationReversePolicyCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationReversePolicyCriteriaType:
      description: Reverse policy information of a reservation.
      properties:
        hotelId:
          description: Property where the reservation exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    routingInstructions:
      description: Response object containing routing instructions for a reservation.
      properties:
        routingInstructions:
          description: A routing info object can either be of type Folio OR of type
            Room with its corresponding instructions.
          items:
            $ref: '#/components/schemas/routingInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeShareRateAmount:
      description: "Request to change the share amount for a sharer reservation. The\
        \ amount change type can be Full, Entire or Split"
      properties:
        criteria:
          $ref: '#/components/schemas/changeShareRateAmountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeShareRateAmountType:
      description: Type for changing the Rate Amount of a Sharer.
      properties:
        hotelId:
          description: Opera Hotel/Resort code for the Change Share Amount request.
          maxLength: 20
          minLength: 0
          type: string
        shareDistributionCriteria:
          $ref: '#/components/schemas/shareDistributionCriteria'
        changeShareRateInstructions:
          $ref: '#/components/schemas/changeShareRateAmountType_changeShareRateInstructions'
      type: object
    shareDistributionCriteria:
      description: Extended Reservation object to hold additional instructions along
        with the reservation. This should be used for updates on the reservation.
      properties:
        distributionType:
          $ref: '#/components/schemas/shareDistributionInstructionType'
        shareReservations:
          description: ""
          items:
            $ref: '#/components/schemas/shareReservationType'
          maxItems: 4000
          type: array
      type: object
    shareReservationsType:
      description: ""
      items:
        $ref: '#/components/schemas/shareReservationType'
      maxItems: 4000
      type: array
    shareReservationType:
      description: ""
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        dailyRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
      type: object
    changeSharingGuests:
      description: Request to change Sharing Reservations Guest Counts(adults or children)
        information.
      properties:
        reservations:
          description: A collection of Sharing Reservations with the Guest Counts(adults
            or children) information that needs to be changed.
          items:
            $ref: '#/components/schemas/sharingGuestType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    sharingGuestType:
      description: The Reservation class contains the current reservation with the
        guest counts(adults or children).
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        hotelId:
          description: Hotel Code of this reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    overlappingStay:
      description: Request to check for overlapping stays of reservations.
      properties:
        overlappingStayInfo:
          description: Overlapping stay information of a reservation.
          items:
            $ref: '#/components/schemas/overlappingStayInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    overlappingStayInfoListType:
      description: Overlapping stay information of a reservation.
      items:
        $ref: '#/components/schemas/overlappingStayInfoType'
      maxItems: 4000
      type: array
    overlappingStayInfoType:
      description: Possible overlapping stay information of a reservation.
      properties:
        hotelId:
          description: Hotel Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        excludedReservations:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    overlappingStayDetails:
      description: Response for checking overlapping stays of reservations.
      properties:
        overlappingStayMessages:
          items:
            $ref: '#/components/schemas/validationReturnType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    tickets:
      description: Common tickets request base type.
      properties:
        tickets:
          description: Collection of TicketType objects.
          items:
            $ref: '#/components/schemas/ticketType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ticketsInfo:
      description: Common tickets request base type.
      properties:
        hotelId:
          description: Hotel Code of the Reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        tickets:
          description: Collection of TicketType objects.
          items:
            $ref: '#/components/schemas/ticketType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    traces:
      description: Return object to the request for information regarding traces.
      properties:
        traces:
          description: List of Reservation Traces.
          items:
            $ref: '#/components/schemas/hotelReservationTraceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiversions:
      description: Response to fetch the transaction diversion rules attached to a
        reservation.
      properties:
        transactionDiversions:
          description: List of Transaction Diversion rules.
          items:
            $ref: '#/components/schemas/reservationTransactionDiversionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiversionsInfo:
      description: Request to modify transaction diversion rules attached to a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        transactionDiversions:
          description: List of Transaction Diversion rules.
          items:
            $ref: '#/components/schemas/reservationTransactionDiversionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionDiversionsDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationsUpgradeEligibility:
      description: "Request object containing a list of reservation name ids, hotel\
        \ code and eligibility flag."
      properties:
        upgradeEligibilityListType:
          description: List of upgrade Eligibility Types.
          items:
            $ref: '#/components/schemas/upgradeEligibilityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    upgradeEligibilityListType:
      description: List of upgrade Eligibility Types.
      items:
        $ref: '#/components/schemas/upgradeEligibilityType'
      maxItems: 4000
      type: array
    upgradeEligibilityType:
      description: "Reservation name ids, hotel code and eligibility flag."
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        upgradeElgibilityStatus:
          $ref: '#/components/schemas/upgradeElgibilityStatusType'
      type: object
    upgradeElgibilityStatusType:
      description: Simple type for upgrade eligibility status.
      enum:
      - Eligible
      - NotEligible
      - Unknown
      type: string
    reservationsUpgradeEligibilityDetails:
      description: Response Body.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    upsellReservation:
      description: Request to upsell a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        upsell:
          $ref: '#/components/schemas/upsellType'
        override:
          description: Indicates whether to override validation or not.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    upsellType:
      description: Holds upsell information
      properties:
        ruleId:
          $ref: '#/components/schemas/uniqueID_Type'
        ruleCode:
          description: Upsell rule code
          maxLength: 20
          minLength: 0
          type: string
        ruleDescription:
          description: Upsell rule description
          maxLength: 2000
          minLength: 0
          type: string
        percentageSavings:
          description: Percentage savings resulting from accepting upsell offer. This
            will be calculated as the ratio of the amount saved by accepting the upsell
            offer to the actual room rate (i.e. room rate when upsell is not offered)
          maximum: 100
          minimum: 0
          type: number
        upsellType:
          description: Rate code redemption type.
          maxLength: 1
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          $ref: '#/components/schemas/roomTypeInfoType'
        firstNightAmount:
          $ref: '#/components/schemas/amountPointsType'
        totalStayAmount:
          $ref: '#/components/schemas/amountPointsType'
        rates:
          description: Reservation date and its corresponding upsell rate amount
          items:
            $ref: '#/components/schemas/upsellDailyRateType'
          maxItems: 4000
          type: array
      type: object
    roomTypeInfoType:
      properties:
        longDescription:
          description: Detail description of the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        webName:
          description: Name corresponding to a RoomType.
          maxLength: 80
          minLength: 0
          type: string
        webPage:
          description: URL providing more information about the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomTypeAttributes:
          $ref: '#/components/schemas/roomTypeAttributesType'
        bookingChannelMappings:
          description: Booking Channels mapping for the Room Type.
          items:
            $ref: '#/components/schemas/bookingChannelMappingType'
          maxItems: 4000
          type: array
        bedTypeCodes:
          description: Bed type code associated with room.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        bedType:
          $ref: '#/components/schemas/bedTypeInfoType'
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        suite:
          description: Indicates room type is a suite.
          type: boolean
        component:
          description: Indicates room type is a Component Room.
          type: boolean
        invBlockCode:
          description: Block code.
          maxLength: 40
          minLength: 0
          type: string
        roomViewCode:
          description: "Represents the room view code like City view, River view,\
            \ Ocean view etc."
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Represents the promotional code.
          maxLength: 40
          minLength: 0
          type: string
        roomQualifierCode:
          description: "Represents the room qualifier code like Deluxe,Economy,Suite\
            \ etc."
          maxLength: 40
          minLength: 0
          type: string
        roomQualifierMatchIndicator:
          description: Represents the match indicator of room qualifier code returned
            in the response with the requested room qualifier code.
          maxLength: 20
          minLength: 0
          type: string
        accessible:
          description: Indicates whether room type is accessible or not.
          type: boolean
      type: object
    roomFeaturesType:
      description: A recurring element that identifies the room features.
      items:
        $ref: '#/components/schemas/roomFeatureType'
      maxItems: 4000
      type: array
    roomFeatureType:
      description: Room Feature Information.
      properties:
        code:
          description: A code representing a room feature.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: A code representing a room feature.
          maxLength: 2000
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        quantity:
          description: Indicates quantity.
          type: integer
      type: object
    roomTypeAttributesType:
      description: Attributes of property room type.
      properties:
        defaultOccupancy:
          description: Default occupancy of property room type.
          type: integer
        maximumOccupancy:
          description: Max occupancy of property room type.
          type: integer
        noOfPhysicalRooms:
          description: Number of physical rooms of property room type.
          type: integer
        minimumOccupancy:
          description: Minimum occupancy of property room type.
          type: integer
        maximumAdults:
          description: Maximum adult occupancy of property room type.
          type: integer
        maximumChildren:
          description: Maximum children occupancy of property room type.
          type: integer
      type: object
    bookingChannelMappingType:
      properties:
        bookingChannelCode:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    bedTypeInfoType:
      description: Information representing Bed type associated with a room type.
      properties:
        code:
          description: Bed Type Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    amountPointsType:
      description: Holds monetary value expressed with a currency code / number of
        points
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          description: Number of points
          type: integer
      type: object
    upsellDailyRatesType:
      description: Reservation date and its corresponding upsell rate amount
      items:
        $ref: '#/components/schemas/upsellDailyRateType'
      maxItems: 4000
      type: array
    upsellDailyRateType:
      description: Reservation date and its corresponding upsell rate amount
      properties:
        date:
          description: Reservation date
          format: date
          type: string
        requiredAmount:
          $ref: '#/components/schemas/amountPointsType'
      type: object
    reservationUpsellInfo:
      description: Response object to the that contains information for a reservation
        prior to upgrade.
      properties:
        upsellInfo:
          $ref: '#/components/schemas/upsellInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomCalendar:
      properties:
        roomCalendar:
          $ref: '#/components/schemas/roomCalendarType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomCalendarType:
      description: Room Calendar entry that holds Room and Reservation Information.
      properties:
        room:
          description: Holds the Room Information.
          items:
            $ref: '#/components/schemas/roomCalendarInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: The resort of the Room Calendar.
          maxLength: 20
          minLength: 0
          type: string
        totalRooms:
          description: Total Numebr of Rooms.
          type: integer
        pageIndex:
          description: Current Page the group of Rooms is included in.
          type: integer
        recordsPerPage:
          description: Number of records per page.
          type: integer
      type: object
    roomCalendarInfoType:
      description: Holds hotel Room and Reservation Information.
      properties:
        roomInfo:
          $ref: '#/components/schemas/roomInfo'
        roomSchedule:
          description: Holds the Schedule and Reservations.
          items:
            $ref: '#/components/schemas/roomScheduleType'
          maxItems: 4000
          type: array
        componentRoomReservationsForSuite:
          description: "If room is a component suite , holds information about component\
            \ room reservations"
          items:
            $ref: '#/components/schemas/componentBlockOutDates'
          maxItems: 4000
          type: array
        roomId:
          description: Room Number.
          maxLength: 20
          minLength: 0
          type: string
        roomOrder:
          description: Order the Room is displayed based on the Room Display Room
            settings.
          type: integer
        componentSuite:
          description: Indicates if a room is a Component Suite or not.
          type: boolean
        pseudo:
          description: Indicates if a room is a Pseudo room or not.
          type: boolean
        houseKeeping:
          description: Indicates true/false. When this flag is set to true indicates
            room type of the room is flagged as housekeeping.
          type: boolean
        roomOwnerStatus:
          $ref: '#/components/schemas/roomOwnerStatusType'
      type: object
    roomInfo:
      description: Room details
      properties:
        roomType:
          description: Room Type of the Room.
          maxLength: 20
          minLength: 0
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomCondition:
          description: Room Condition information if the room has an associated Room
            Condition.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumber:
          description: Component Room Number.
          maxLength: 4000
          minLength: 0
          type: string
        componentSuiteRoomNumbers:
          description: Component Suite Room Numbers.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        connectingRooms:
          description: Room number.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    roomScheduleType:
      description: Holds TimeSpan and Reservation Information.
      properties:
        roomCalendarResList:
          description: List of Reservations under this schedule.
          items:
            $ref: '#/components/schemas/roomCalendarResType'
          maxItems: 4000
          type: array
        roomScheduleDisplay:
          $ref: '#/components/schemas/roomCalendarDisplayType'
        roomScheduleCategory:
          $ref: '#/components/schemas/roomScheduleCategoryType'
        description:
          description: Description for the the Room Schedule.
          maxLength: 2000
          minLength: 0
          type: string
        start:
          description: The starting value of the time span.
          format: date-time
          type: string
        end:
          description: The ending value of the time span.
          format: date-time
          type: string
      type: object
    roomCalendarResType:
      description: Reservation Information for a Reservation Item in the Calendar.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        givenName:
          maxLength: 40
          minLength: 0
          type: string
        surname:
          maxLength: 40
          minLength: 0
          type: string
        title:
          maxLength: 20
          minLength: 0
          type: string
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        noOfRooms:
          type: integer
        roomScheduleDisplay:
          $ref: '#/components/schemas/roomCalendarDisplayType'
        roomNumberLocked:
          description: Verify if the room number is locked for the reservation. When
            true the room number cannot be changed.
          type: boolean
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        roomMoveHistory:
          description: List of room move details
          items:
            $ref: '#/components/schemas/roomMoveDetailType'
          maxItems: 4000
          type: array
        scheduledRoomMove:
          $ref: '#/components/schemas/scheduledRoomMoveDetailType'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        hasLinkedReservations:
          $ref: '#/components/schemas/linkedReservationType'
        backToBackReservation:
          description: This attribute indicates if the linked reservation is marked
            as Back to Back or not.
          type: boolean
        assignedByAI:
          description: Indicates whether the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Indicates whether the room assigned by AI Room Assignment was
            an upgrade.
          type: boolean
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
      type: object
    roomCalendarDisplayType:
      description: Display Information for the Room Calendar.
      properties:
        displayLabel:
          maxLength: 40
          minLength: 0
          type: string
        displayColor:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    roomMoveDetailsType:
      description: List of room move details
      items:
        $ref: '#/components/schemas/roomMoveDetailType'
      maxItems: 4000
      type: array
    roomMoveDetailType:
      description: Room move history information.
      properties:
        hotelId:
          description: Identifies the hotel code under which room is moved.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        date:
          description: Business date on which room is moved.
          format: date-time
          type: string
        reasonCode:
          description: Identifies the room move reason code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of why room is moved.
          maxLength: 2000
          minLength: 0
          type: string
        fromRoom:
          description: Room from which guest is moved.
          maxLength: 20
          minLength: 0
          type: string
        toRoom:
          description: Room to which guest is moved.
          maxLength: 20
          minLength: 0
          type: string
        movedBy:
          description: The user who moved the guest.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    roomScheduleCategoryType:
      description: Enumeration of the different Room Schedule Types.
      enum:
      - Reservation
      - Ooo
      - Oos
      - Default
      type: string
    componentBlockOutDates:
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
      type: object
    script:
      description: Script for a Reservation based on its StayDetails as well as itinerary.
      properties:
        script:
          description: "The script for the reservation, which was requested."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchSellMessageConfig:
      description: This is the fetch response message type for fetch operation of
        sell messages.
      properties:
        sellMessageConfigs:
          $ref: '#/components/schemas/fetchSellMessageConfig_sellMessageConfigs'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    sellMessageConfigsType:
      description: "The SellMessageConfigsType is the list of sell messages, each\
        \ comprising of all the sell message attributes and other details."
      properties:
        sellMessageConfig:
          items:
            $ref: '#/components/schemas/sellMessageConfigType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    sellMessageConfigType:
      description: "Only one of the following can hold a value: HotelCode, CROCode\
        \ or ChainCode"
      properties:
        message:
          description: Sell message text.
          maxLength: 2000
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        blockCode:
          description: Block Code to which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        timespan:
          $ref: '#/components/schemas/timeSpanType'
        hotelId:
          description: Hotel Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        croCode:
          description: CRO Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: Chain Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Plan Code for which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        languageCode:
          description: Language in which the sell message is defined.
          maxLength: 20
          minLength: 0
          type: string
        stickyFlag:
          description: Sticky flag is used to define if the sell message should display
            on the block screen by default.
          type: boolean
        sellSequence:
          description: This number indicates the display order of the sell message.
          type: number
        usedInModule:
          description: This represents the moduleType where we want to display this
            SellMessage.
          items:
            $ref: '#/components/schemas/usedInModuleType'
          maxItems: 10
          type: array
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    usedInModuleType:
      description: "Simple type for indicating the module for which user wants to\
        \ create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function\
        \ Diary and Group Rooms Control."
      enum:
      - Blocks
      - Reservations
      - FunctionDiary
      - LookToBookSales
      - GroupRoomsControl
      type: string
    sellMessageConfig:
      description: This is the request message type for sell message update operation.
      properties:
        sellMessageConfigs:
          $ref: '#/components/schemas/sellMessageConfigsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    registerTurnaway:
      description: Request to register turn away reservation.
      properties:
        turnaway:
          $ref: '#/components/schemas/turnawayType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    turnawayType:
      description: Holds information related to prospect reservation to be turned
        away.
      properties:
        details:
          $ref: '#/components/schemas/turnawayDetailsType'
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        address:
          $ref: '#/components/schemas/addressType'
        callId:
          $ref: '#/components/schemas/uniqueID_Type'
        comments:
          description: Holds comments for a prospect reservation to be turned away.
          maxLength: 200
          minLength: 0
          type: string
        reasonCode:
          description: Holds turn away code pertaining to reason of turning away prospect
            reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    turnawayDetailsType:
      description: Holds detailed information of a prospect reservation to be turned
        away.
      properties:
        hotelId:
          description: Holds Opera Hotel/Resort code of turn away reservation.
          maxLength: 20
          minLength: 0
          type: string
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        numberOfRooms:
          description: Holds the number of rooms.
          type: integer
        marketCode:
          description: "Holds the code that relates to the market being sold to (e.g.,\
            \ the corporate market, packages)."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Holds the Rate Code.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Holds the Room Type.
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        yieldMarketCode:
          description: Holds the Yield Market Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    upgradeEligibilityReservations:
      description: "Response object to the Fetch UpgradeEligibilityReservations Request\
        \ operation. Based on the criteria, reservation information is returned."
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    futureReservationsOrBlocksDetails:
      description: This is the Response Message to information regarding existence
        of future reservation or business blocks.
      properties:
        response:
          description: response - whether there are future reservation or business
            blocks for the profile.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    recentlyAccessedReservations:
      description: Response with the fetched recently accessed reservations.
      properties:
        reservations:
          description: A single recently accessed reservation.
          items:
            $ref: '#/components/schemas/recentlyAccessedReservationType'
          maxItems: 10
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    recentlyAccessedReservationsType:
      description: A single recently accessed reservation.
      items:
        $ref: '#/components/schemas/recentlyAccessedReservationType'
      maxItems: 10
      type: array
    recentlyAccessedReservationType:
      description: A recently used reservation record.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        guestFirstName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastName:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: The resort of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: A text field used to communicate the proper name of the hotel.
          maxLength: 80
          minLength: 0
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        accessDate:
          description: The date the record was accessed.
          format: date
          type: string
      type: object
    checkReservationsDetails:
      description: "Response for checking allowed actions, existence of attached records,\
        \ or indicators of a reservation."
      properties:
        checkReservations:
          description: "Collection of reservations and the status of its allowed actions,\
            \ attached records, and indicators."
          items:
            $ref: '#/components/schemas/checkReservationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkReservationsType:
      description: "Collection of reservations and the status of its allowed actions,\
        \ attached records, and indicators."
      items:
        $ref: '#/components/schemas/checkReservationType'
      maxItems: 4000
      type: array
    checkReservationType:
      description: "Reservation and the status of its allowed actions, attached records,\
        \ and indicators."
      properties:
        hotelId:
          description: Property code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        results:
          description: "Collection of status of allowed actions, attached records,\
            \ and indicators of the reservation."
          items:
            $ref: '#/components/schemas/checkResultType'
          maxItems: 4000
          type: array
      type: object
    checkResultsType:
      description: "Collection of status of allowed actions, attached records, and\
        \ indicators of the reservation."
      items:
        $ref: '#/components/schemas/checkResultType'
      maxItems: 4000
      type: array
    checkResultType:
      description: "Status of allowed actions, attached records, and indicators of\
        \ the reservation."
      properties:
        checkInstruction:
          $ref: '#/components/schemas/checkInstructionType'
        exists:
          description: "Indicates status of allowed actions, total number of attached\
            \ records, or number of occurrences of indicator of a reservation."
          type: boolean
      type: object
    checkInstructionType:
      description: Simple type that corresponds to check reservation instructions.
      enum:
      - HasDepositPolicies
      - HasCancellationPolicies
      type: string
    reservationPace:
      description: FetchReservationPace response.
      properties:
        reservationPace:
          $ref: '#/components/schemas/reservationPaceRSType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPaceRSType:
      description: Contains reservation pace report data.
      properties:
        hotelId:
          type: string
        businessDate:
          format: date
          type: string
        dailyPaceStats:
          description: a collection of reservation pace statistics.
          items:
            $ref: '#/components/schemas/dailyPaceStatType'
          maxItems: 4000
          type: array
      type: object
    dailyPaceStatsType:
      description: a collection of reservation pace statistics.
      items:
        $ref: '#/components/schemas/dailyPaceStatType'
      maxItems: 4000
      type: array
    dailyPaceStatType:
      description: An instance or a day of a reservation pace statistic.
      properties:
        channel:
          type: string
        consideredDate:
          description: The day to which the information belongs.
          format: date
          type: string
        rooms:
          description: Number of rooms reserved.
          type: integer
      type: object
    reservationStatistics:
      description: FetchReservationStatistics response
      properties:
        statisticsType:
          description: Collection of statistic data of a reservation.
          items:
            $ref: '#/components/schemas/statisticType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    statisticType:
      description: Defines all details needed to create a statistical report.
      properties:
        statisticCodesType:
          description: Statistic Codes.
          items:
            $ref: '#/components/schemas/statisticCodeType'
          maxItems: 4000
          type: array
        chainCode:
          description: The code that identifies a hotel chain or management group.
            The hotel chain code is decided between vendors. This attribute is optional
            if the hotel is an independent property that can be identified by the
            HotelCode attribute.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: The code that uniquely identifies a single hotel property.
            The hotel code is decided between vendors.
          maxLength: 20
          minLength: 0
          type: string
        hotelCityCode:
          description: "The IATA city code; for example DCA, ORD."
          maxLength: 40
          minLength: 0
          type: string
        hotelName:
          description: A text field used to communicate the proper name of the hotel.
          maxLength: 80
          minLength: 0
          type: string
        hotelCodeContext:
          description: "A text field used to communicate the context (or source of\
            \ - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes."
          maxLength: 40
          minLength: 0
          type: string
        chainName:
          description: "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt)."
          maxLength: 80
          minLength: 0
          type: string
        fiscalDate:
          description: Hotel fiscal date for statistics.
          format: date
          type: string
        reportCode:
          description: Identifies the type of statistics collected. Each ReportCode
            corresponds to a set of category summaries based upon a predetermined
            agreement.
          maxLength: 100
          minLength: 0
          type: string
        description:
          description: "This element has revenue amount data for its revenue category\
            \ such as Room Revenue, Food and Beverage Revenue."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    statisticCodeType:
      description: Defines the codes and corresponding categories for which the data
        in the other elements has been gathered.
      properties:
        statisticSetsType:
          description: Collection of statistic summary data.
          items:
            $ref: '#/components/schemas/statisticSetType'
          maxItems: 4000
          type: array
        statCode:
          description: "Actual code used by the system to collect the statistics (e.g.\
            \ CORP, RACK if category is Market Segment)."
          maxLength: 20
          minLength: 0
          type: string
        statCategoryCode:
          description: Category Code category of StatCode attribute (e.g. Market Segment).
          maxLength: 40
          minLength: 0
          type: string
        statCodeClass:
          description: Class grouping of StatCode attribute.
          maxLength: 40
          minLength: 0
          type: string
        description:
          description: Statistic code description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    statisticSetType:
      description: "An instance of a statistic, which is a set containing revenue\
        \ category and number category summaries."
      properties:
        revenueCategorySummariesType:
          description: Collection of RevenueCategorySummary elements. Used if revenue
            values reported.
          items:
            $ref: '#/components/schemas/revenueCategorySummaryType'
          maxItems: 4000
          type: array
        numericCategorySummariesType:
          description: Collection of CountCategorySummary elements. Used if count
            values reported.
          items:
            $ref: '#/components/schemas/numericCategorySummaryType'
          maxItems: 4000
          type: array
        statisticDate:
          description: Date of the statistic.
          format: date
          type: string
        weekendDate:
          description: Determines whether statistic date is a weekend date.
          type: boolean
      type: object
    revenueCategorySummaryType:
      description: "This element has revenue amount data for its revenue category\
        \ such as Room Revenue, Food and Beverage Revenue."
      properties:
        revenueCategoryCode:
          description: The representation of a revenue category.
          maxLength: 40
          minLength: 0
          type: string
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    numericCategorySummaryType:
      description: "This element has count data for each count category such as number\
        \ of guests, rooms occupied, etc."
      properties:
        numericSummary:
          description: The total count for the category in NumericCategoryCode.
          type: number
        numericCategoryCode:
          description: "The representation of a numeric category such as Guests :\
            \ Number of guests, RoomsOcc : Rooms occupied."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    splitMultiRoomReservation:
      description: Request to split multi-room reservation into separate reservations.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        lockHandle:
          description: "An identifier representing the record lock for the reservation\
            \ under process. When passed, the operation will verify that the lock\
            \ is still valid."
          type: number
        splitAll:
          description: "If set to TRUE, the reservation will be separated into number\
            \ of rooms that it currently has. Otherwise, only 1 single room reservation\
            \ will be created and the original reservation will be deducted with 1\
            \ room."
          type: boolean
        copyPaymentInformation:
          description: Flag to instruct the operation to copy payment methods of the
            original reservation to the new reservation to be created.
          type: boolean
        reservationPaymentMethods:
          $ref: '#/components/schemas/copyReservationPaymentMethodsType'
        responseInstructions:
          $ref: '#/components/schemas/splitMultiRoomReservation_responseInstructions'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    splitMultiRoomReservationDetails:
      description: Response for splitting multi-room reservation into separate reservations.
      properties:
        linkedReservations:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        newReservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    sellMessages:
      description: This is the Response Message Type to the request for retrieving
        Sell Messages.
      properties:
        sellMessages:
          $ref: '#/components/schemas/sellMessagesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    sellMessagesType:
      description: The SellMessagesType is the list of message and attributes returned
        by web service.
      properties:
        sellMessage:
          description: This is the message text.
          items:
            $ref: '#/components/schemas/sellMessageType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    sellMessageType:
      description: The SellMessagesType defines the standard attributes that will
        be retrieved with the sell message.
      properties:
        message:
          description: This is the message text.
          maxLength: 2000
          minLength: 0
          type: string
        croCode:
          description: This is the Central Reservation office code.
          maxLength: 20
          minLength: 0
          type: string
        chainCode:
          description: This is the chain code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: This is the hotel code or resort.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: This represents the room type code.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: This represents the rate plan code of the room type.
          maxLength: 20
          minLength: 0
          type: string
        languageCode:
          description: This is the language code.
          maxLength: 20
          minLength: 0
          type: string
        stickyFlagYn:
          description: Flag which tells if this message is Sticky (Y/N).
          maxLength: 1
          minLength: 0
          type: string
        usedInModule:
          $ref: '#/components/schemas/usedInModuleType'
        beginDate:
          description: This is the Begin date for the configured SellMessage.
          format: date
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    reservationDisplayColorInfoType:
      description: "Information of reservation display color, determined based on\
        \ OPERA parameter RESERVATION_COLOR_DEFINITION "
      properties:
        displayColor:
          $ref: '#/components/schemas/colorType'
        colorDefinition:
          $ref: '#/components/schemas/colorDefinitionType'
        colorDescription:
          description: Description populated based on DisplayColor.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    frontOfficeRoomStatusType:
      description: Simple type for front office room status instructions to be used
        in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.
      enum:
      - Vacant
      - Occupied
      type: string
    colorDefinitionType:
      description: 'Color definition type. This color definition type is used to determine
        the defintion of color '
      enum:
      - RESERVATION
      - MARKET_CODE
      - VIP_LEVEL
      - MEMBERSHIP_LEVEL
      type: string
    actionType:
      description: Action types allowed by the event api.
      enum:
      - CREATE
      - UPDATE
      - DELETE
      type: string
    customChargeGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    fiscalInfoType:
      description: Fiscal related information for a reservation.
      properties:
        partnerCode:
          description: Fiscal partner code.
          type: string
        fiscalStatus:
          description: OPERA Fiscal status.
          type: string
        fiscalPayloadType:
          $ref: '#/components/schemas/payloadType'
      type: object
    payloadType:
      description: Fiscal Payload Type.
      enum:
      - CheckOut
      - FolioGeneration
      type: string
    reservationCommissionInfoType:
      properties:
        commissionsPaid:
          type: boolean
        commissionNotesAvailable:
          type: boolean
      type: object
    reservationsSummaryInformationType:
      description: Reservations Summary.
      properties:
        reservationsInformation:
          items:
            $ref: '#/components/schemas/reservationsInformationType'
          maxItems: 4000
          type: array
        offset:
          description: Indicates the index of the next applicable set(page).
          type: integer
        limit:
          description: Indicates number of records the API can return as per the API
            request limit sent. A maximum of 200 records can be only returned at a
            time.
          type: integer
        count:
          description: Indicates number of records the API has returned actually as
            per the API request criteria.
          type: integer
        hasMore:
          description: Indicates whether there are more records available to be returned
            as per the API request criteria or not.
          type: boolean
        totalResults:
          description: Indicates total number of records available that can be returned
            as per the API request criteria.
          type: integer
      type: object
    reservationsInformationType:
      description: Reservations Information.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: "Unique identifiers for both internal and external systems\
            \ Eg: ReservationId, ConfirmationNumber, CancellationNumber, ExternalReferenceNumber\
            \ etc"
          items:
            $ref: '#/components/schemas/distinctIDType'
          maxItems: 10
          type: array
        externalReferences:
          description: This type contains unique information of external reference.
          items:
            $ref: '#/components/schemas/externalReferenceType'
          maxItems: 4000
          type: array
        guestDetails:
          $ref: '#/components/schemas/guestDetails'
        reservationDates:
          $ref: '#/components/schemas/reservationDates'
        companyDetails:
          $ref: '#/components/schemas/companyDetails'
        travelAgentDetails:
          $ref: '#/components/schemas/travelAgentDetails'
        groupDetails:
          $ref: '#/components/schemas/groupDetails'
        blockIdList:
          description: "Unique identifiers for Blocks. Eg: BlockId, BlockCode"
          items:
            $ref: '#/components/schemas/distinctIDType'
          maxItems: 5
          type: array
        membershipDetails:
          $ref: '#/components/schemas/membershipDetails'
        adults:
          description: Total number of adults.
          type: integer
        children:
          description: Number of children.
          type: integer
        noOfRooms:
          description: Number of rooms.
          type: integer
        amount:
          description: Total share amount.
          type: number
        balance:
          description: Balance.
          type: number
        rateCode:
          description: Rate code used for the reservation.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Currency code.
          maxLength: 20
          minLength: 0
          type: string
        reservationStatus:
          description: Reservation status.
          maxLength: 20
          minLength: 0
          type: string
        computedReservationStatus:
          description: Computed reservation status.
          maxLength: 20
          minLength: 0
          type: string
        creatorId:
          description: Internal User ID used to create reservation.
          maxLength: 100
          minLength: 0
          type: string
        lastModifierId:
          description: Internal User ID used to update the reservation details.
          maxLength: 100
          minLength: 0
          type: string
        guaranteeCode:
          description: Reservation guarantee code.
          maxLength: 20
          minLength: 0
          type: string
        paymentType:
          description: Payment method used for the reservation.
          maxLength: 50
          minLength: 0
          type: string
        nights:
          description: Number of Nights
          type: integer
        promotionCode:
          description: Promotion Code for the Reservation.
          maxLength: 32000
          minLength: 0
          type: string
        roomId:
          description: Room Number.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source of the created reservation.
          maxLength: 20
          minLength: 0
          type: string
        originCode:
          description: Channel used to create the reservation.
          maxLength: 40
          minLength: 0
          type: string
        marketCode:
          description: Market code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        arrivalTime:
          description: Arrival Time of reservation.
          maxLength: 10
          minLength: 0
          type: string
        departureTime:
          description: Departure Time of reservation.
          maxLength: 10
          minLength: 0
          type: string
        roomType:
          description: Room Type.
          maxLength: 32000
          minLength: 0
          type: string
        bookedRoomType:
          description: Booked Room Type.
          maxLength: 32000
          minLength: 0
          type: string
        vipStatus:
          description: VIP Status.
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code.
          maxLength: 50
          minLength: 0
          type: string
        registrationCardNumber:
          description: Registration card number.
          maxLength: 40
          minLength: 0
          type: string
        preRegistered:
          description: Indicates whether the reservation is pre-registered for internet
            check-in or not.
          type: boolean
        advancedCheckedIn:
          description: Indicates if the reservation has performed an Advance Check
            In.
          type: boolean
        shared:
          description: Indicates if the reservation is shared or not.
          type: boolean
      type: object
    distinctIDType:
      description: "Unique identifiers for both internal and external systems Eg:\
        \ ReservationId, ConfirmationNumber, CancellationNumber, ExternalReferenceNumber\
        \ etc"
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 32000
          minLength: 0
          type: string
        type:
          description: "A reference to the type of object defined by the UniqueID\
            \ element. Eg: Reservation, Confirmation, Cancellation, ExternalReference\
            \ etc"
          maxLength: 20
          minLength: 0
          type: string
        idExtension:
          description: "Additional identifying value assigned by the creating system.\
            \ Eg: ConfirmationLegNumber, ExternalLegNumber"
          type: integer
      type: object
    reservationDates:
      description: Reservation Dates
      properties:
        arrivalDate:
          description: Date of arrival.
          format: date
          type: string
        departureDate:
          description: Date of departure.
          format: date
          type: string
        cancelledOn:
          description: Date when reservation(s) was cancelled.
          format: date
          type: string
        folioClosedOn:
          description: Date when folio was closed.
          format: date
          type: string
        createDateTime:
          description: Date when reservation(s) was created.
          format: date-time
          type: string
        lastModifyDateTime:
          description: Date when reservation(s) was updated.
          format: date-time
          type: string
      type: object
    guestDetails:
      description: Guest Details
      properties:
        guestNameId:
          description: ID of the guest.
          maxLength: 20
          minLength: 0
          type: string
        lastName:
          description: Reservation last name.
          maxLength: 80
          minLength: 0
          type: string
        firstName:
          description: Reservation first name.
          maxLength: 80
          minLength: 0
          type: string
        alternateLastName:
          description: Alternate last name.
          maxLength: 80
          minLength: 0
          type: string
        alternateFirstName:
          description: Alternate first name.
          maxLength: 80
          minLength: 0
          type: string
        alternateSalutation:
          description: Alternate salutation.
          maxLength: 60
          minLength: 0
          type: string
        guestTitle:
          description: Guest title.
          maxLength: 40
          minLength: 0
          type: string
        emailAddress:
          description: Email address of the Guest.
          maxLength: 200
          minLength: 0
          type: string
        phoneNumber:
          description: Phone number of the Guest.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    membershipDetails:
      description: Membership Details
      properties:
        membershipId:
          description: Membership Internal ID.
          maxLength: 20
          minLength: 0
          type: string
        membershipNumber:
          description: Membership number.
          maxLength: 32000
          minLength: 0
          type: string
        membershipType:
          description: Membership Type.
          maxLength: 32000
          minLength: 0
          type: string
        membershipLevel:
          description: Membership Level.
          maxLength: 32000
          minLength: 0
          type: string
        multipleMemberships:
          description: Multiple Memberships.
          type: boolean
      type: object
    companyDetails:
      description: Company Details
      properties:
        companyId:
          description: ID of the company for the reservation.
          maxLength: 20
          minLength: 0
          type: string
        companyName:
          description: Name of the company for the reservation.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    groupDetails:
      description: Group Details
      properties:
        groupID:
          description: ID of the group for the reservation.
          maxLength: 20
          minLength: 0
          type: string
        groupName:
          description: Name of the group for the reservation.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    travelAgentDetails:
      description: Travel Agent Details
      properties:
        travelAgentID:
          description: ID of the travel agent for the reservation.
          maxLength: 20
          minLength: 0
          type: string
        travelAgentName:
          description: Name of the travel agent for the reservation.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    reservationsSummary:
      description: "Response object to the Fetch Reservations information. Based on\
        \ the criteria, reservation information is returned."
      properties:
        reservationsSummaryInformation:
          $ref: '#/components/schemas/reservationsSummaryInformationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationMembershipAwardType:
      description: This type contains information of a membership award attached to
        a reservation.
      properties:
        membershipType:
          description: Membership type for which awards are defined.
          maxLength: 20
          minLength: 0
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          maxLength: 80
          minLength: 0
          type: string
        membershipCardNo:
          description: The card number associated with this membership.
          maxLength: 50
          minLength: 0
          type: string
        awardBasedOn:
          description: "Indicates if the Award is based on RATE, PRODUCT or UPGRADE."
          maxLength: 20
          minLength: 0
          type: string
        awardType:
          description: Unique code that identifies this award.
          maxLength: 40
          minLength: 0
          type: string
        pointsRequired:
          description: Number of points required for the award.
          minimum: 0
          type: number
        dateAwarded:
          description: Date when the award was issued.
          format: date
          type: string
        arrivalDate:
          description: The arrival date of the stay for when the award is associated.
          format: date
          type: string
        awardCancelDate:
          description: "If the reservation associated with the award was cancelled,\
            \ the reservation cancellation date appears here."
          format: date
          type: string
        cancelPenaltyDays:
          description: "The cancel days, set up in awards configuration that establishes\
            \ the number of days before arrival when a reservation may be cancelled\
            \ without an award points penalty."
          minimum: 0
          type: number
        cancelPenaltyPoints:
          description: "The award points that will be deducted (based on a cancel\
            \ days restriction) if the award is cancelled. (Cancel days, set up in\
            \ awards configuration, and establish the number of days before arrival\
            \ when a reservation may be cancelled without an award points penalty)."
          minimum: 0
          type: number
        actualCancelPoints:
          description: The number of points actually deducted from the member's total
            award points if there is a penalty points restriction associated with
            the award cancellation.
          minimum: 0
          type: number
        awardCancellationNo:
          description: Unique ID for the award cancellation if cancelled.
          minimum: 0
          type: number
      type: object
    createReservationType:
      description: Create Reservation Response Type
      properties:
        reservations:
          $ref: '#/components/schemas/hotelReservationsType'
        channelInformation:
          $ref: '#/components/schemas/channelResvRSInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    lastCommittedResvType:
      properties:
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomType:
          description: Current room type.
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Number of rooms
          type: integer
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
      type: object
    reservationKeyInfoType:
      description: Holds the room key information provided by the Door Lock System.
      properties:
        keyPin:
          description: PIN provided in keyTrack3 from the Door Lock System that is
            used to unlock a room. This is supported when Key Pin handling is active
            for the property and the Door Lock System in use.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    departureReservationInfoType:
      description: Key information about the departure reservation.
      properties:
        reservationExpectedDepartureTime:
          description: The departure Reservation Expected Departure Time.
          format: date-time
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
      type: object
    roomOwnerStatusType:
      description: Enumeration of different ownership statuses of room
      enum:
      - OwnerRoom
      - Exclusive
      - Regular
      type: string
    linkedReservationsCommonDetailsType:
      description: Details common to all linked reservations.
      properties:
        linkedName:
          description: Name associated with a group of linked reservations.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    changeLinkedReservationsCommonDetails:
      description: Request object for updating linked reservations details.
      properties:
        linkedReservationsCommonDetails:
          $ref: '#/components/schemas/linkedReservationsCommonDetailsType'
      type: object
    linkedReservationsCommonDetails:
      description: Response object for updating linked reservations details.
      properties:
        linkedReservationsCommonDetails:
          $ref: '#/components/schemas/linkedReservationsCommonDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeLinkedReservationType:
      description: Request object to change a linked reservation information.
      properties:
        linkedReservationInfo:
          $ref: '#/components/schemas/linkedReservationInfoType'
        backToBackToReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    backToBackResSequenceType:
      description: Type object represents Back To Back Sequence Position and Total
        Count of Linked Back To Back Reservations ordered by consecutive Stay Dates.
      properties:
        position:
          description: Indicates the Sequence position of Back to Back Reservation.
          type: integer
        totalCount:
          description: Indicates the total count of Back To Back Reservations in the
            group of Linked Reservations.
          type: integer
      type: object
    roomOccupancyType:
      description: Room Occupancy information.
      properties:
        roomId:
          description: Room Id.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room Type.
          maxLength: 20
          minLength: 0
          type: string
        roomIsOccupied:
          description: Indicates if the Room is currently occupied.
          type: boolean
        estimatedDepartureTime:
          description: Estimated Time of Departure of reservation when room status
            is occupied.
          format: date-time
          type: string
        guestFirstName:
          description: Guest First/Given Name on reservation when room status is occupied.
          maxLength: 40
          minLength: 0
          type: string
        guestLastName:
          description: Guest Last Name /Surname on reservation when room status is
            occupied.
          maxLength: 40
          minLength: 0
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    combineShareFromExistingReservationType:
      description: Details of the existing reservation to be combined as a sharer.
      properties:
        routeAllTransactionsToShareReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        dailyRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
      type: object
    scheduledRoomMoveInfoType:
      description: Scheduled Move information.
      properties:
        moveStatus:
          $ref: '#/components/schemas/scheduledRoomMoveStatusType'
        moveComments:
          description: Comments about scheduled move.
          maxLength: 200
          minLength: 0
          type: string
        moveInRoomOccupancyInfo:
          $ref: '#/components/schemas/roomOccupancyType'
        estimatedMoveTime:
          description: Estimated Move Time.
          format: date-time
          type: string
        moveOutRoomId:
          description: Scheduled Move Out Room Id.
          maxLength: 20
          minLength: 0
          type: string
        moveOutRoomType:
          description: Scheduled Move Out Room Type.
          maxLength: 20
          minLength: 0
          type: string
        moveOutRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
      type: object
    scheduledRoomMoveType:
      description: Scheduled Move information.
      properties:
        scheduledRoomMoveInfo:
          $ref: '#/components/schemas/scheduledRoomMoveInfoType'
        roomAssignmentSegmentBegin:
          description: Date Room Assignment Begins.
          format: date-time
          type: string
        roomAssignmentSegmentEnd:
          description: Date of the Scheduled Move Room.
          format: date-time
          type: string
        roomAssignmentSegmentNo:
          description: Room Assignment Segment Number.
          type: integer
      type: object
    scheduledRoomMoveStatusType:
      description: Flag indicating scheduled room move status.
      enum:
      - Completed
      - Pending
      type: string
    checkDistributionReservationsSummaryType:
      description: "Reservation Statistics and the status of its allowed actions,\
        \ attached records."
      properties:
        hotelId:
          description: Property code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        channelCode:
          description: Channel code.
          maxLength: 20
          minLength: 0
          type: string
        enterpriseId:
          description: EnterpriseId of Property.
          maxLength: 20
          minLength: 0
          type: string
        arrivalDate:
          description: Arrival Date.
          format: date
          type: string
        departureDate:
          description: Departure Date.
          format: date
          type: string
        creationDate:
          description: Creation Date.
          format: date-time
          type: string
        lastUpdateDate:
          description: LastUpdate Date.
          format: date-time
          type: string
        cancellationDate:
          description: Cancellation Date.
          format: date-time
          type: string
        numberOfRooms:
          description: number of Rooms Booked.
          type: integer
        reservationStatus:
          description: Status of Reservation.
          maxLength: 20
          minLength: 0
          type: string
        confirmationId:
          description: ConfirmationId of Reservation.
          maxLength: 20
          minLength: 0
          type: string
        legNumber:
          description: ConfirmationLeg Number of Reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          description: ReservationId of Reservation.
          maxLength: 20
          minLength: 0
          type: string
        guestName:
          description: GuestName.
          maxLength: 20
          minLength: 0
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    checkDistributionReservationsSummary:
      description: "Response for checking allowed actions, existence of attached records,\
        \ or count of reservations."
      properties:
        checkReservations:
          description: "Collection of reservations Count and the status of its allowed\
            \ actions, attached records."
          items:
            $ref: '#/components/schemas/checkDistributionReservationsSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bookingTimeSpanType:
      description: "The booking time span of the reservation, only applicable when\
        \ time increments are being used."
      properties:
        startDateTime:
          description: The start time of the reservation booking
          format: date-time
          type: string
        endDateTime:
          description: The end time of the reservation booking
          format: date-time
          type: string
      type: object
    changePayeeSharerType:
      description: Request object to to mark or unmark the payee sharer information.
      properties:
        shareReservation:
          $ref: '#/components/schemas/payeeSharerInfoType'
      type: object
    payeeSharerInfoType:
      description: Holds the information to mark or unmark a shared reservation as
        a payee sharer.
      properties:
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        payeeSharer:
          description: This attribute indicates if the Shared reservation is marked
            as the Payee Sharer or not.
          type: boolean
      type: object
    addOnReservationPackageType:
      description: AddOn ReservationPackageType class.
      properties:
        scheduleList:
          description: A HotelPackageSchedule type.
          items:
            $ref: '#/components/schemas/reservationPackageScheduleType'
          maxItems: 4000
          type: array
        consumptionDetails:
          $ref: '#/components/schemas/packageConsumptionType'
        packageCode:
          description: Package code. This is the unique code used for the package
            and is a required element.
          maxLength: 20
          minLength: 0
          type: string
        internalId:
          description: Reservation Package Opera Internal Unique Id. This is the unique
            Id used for this reservation package.
          type: number
        startDate:
          description: Package begin date.
          format: date
          type: string
        endDate:
          description: Package End Date.
          format: date
          type: string
        packageGroup:
          description: Package group code. Package group code is used to link multiple
            packages that are members of a group.
          maxLength: 20
          minLength: 0
          type: string
        source:
          $ref: '#/components/schemas/productSourceType'
        awardCode:
          description: This is the Award code used to redeem the package if the package
            is a redemption package.
          maxLength: 20
          minLength: 0
          type: string
        points:
          description: Indicates the points used to redeem the redemption package.
          type: integer
        calculationRule:
          $ref: '#/components/schemas/packageCalculationRuleType'
      type: object
    reservationAddOnPackagesType:
      description: A Service object represents a non-room product provided to guests.
        Service products may have associated inventory and charges.
      properties:
        reservationPackages:
          description: A Service object represents a package provided to guests. Service
            packages may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/addOnReservationPackageType'
          type: array
        overridePackageConfiguration:
          default: true
          description: Indicates if scheduleList and calculationRule provided in this
            request should override package configuration. When overridePackageConfiguration
            is true the scheduleList is mandatory.
          type: boolean
        overrideInventoryItemAvailabilty:
          default: false
          description: Indicates if Availablity should be overriden when an Inventory
            Item based on a package is not available.
          type: boolean
      type: object
    addOnReservationPackagesType:
      description: A collection of Reservation packages.
      properties:
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationPackages:
          description: A Service object represents a package provided to guests. Service
            packages may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPreConfiguredRoutingInstructionsType:
      properties:
        consumableInventory:
          description: List of default routing instructions.
          items:
            $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
          maxItems: 4000
          type: array
      type: object
    scheduledRoomMoveResponseType:
      description: Scheduled Room Move information.
      properties:
        moveComments:
          description: Comments about scheduled move.
          maxLength: 200
          minLength: 0
          type: string
        moveInRoomOccupancyInfo:
          $ref: '#/components/schemas/roomOccupancyType'
        estimatedMoveTime:
          description: Estimated Move Time in 24Hour Format
          format: date-time
          type: string
      type: object
    scheduledRoomMoveDetails:
      description: Details regarding a specific scheduled room move.
      properties:
        moveComments:
          description: Comments about scheduled move.
          maxLength: 200
          minLength: 0
          type: string
        scheduledMoveTime:
          description: The scheduled time of room move.
          format: date-time
          type: string
      type: object
    scheduledRoomMoveDetailType:
      description: Scheduled room move information.
      properties:
        scheduledRoomMoveFrom:
          $ref: '#/components/schemas/scheduleRoomMoveType'
        scheduledRoomMoveTo:
          $ref: '#/components/schemas/scheduleRoomMoveType'
      type: object
    scheduleRoomMoveType:
      description: Type of room move scheduled either from or to information
      properties:
        scheduleRoomMoveStatus:
          $ref: '#/components/schemas/scheduledRoomMoveStatusType'
        scheduleRoomMoveDate:
          description: Business date on which room is scheduled to be moved from or
            to another room.
          format: date
          type: string
        scheduleMoveRoomNumber:
          description: Room to which guest is scheduled to be moved.
          maxLength: 20
          minLength: 0
          type: string
        scheduledMoveTime:
          description: The scheduled time of room move.
          format: date-time
          type: string
      type: object
    attachDetachType:
      description: This type contains attach and detach information for accompanying
        guest profile.
      properties:
        attachDateTime:
          description: Time stamp the accompanying guest was last attached.
          format: date-time
          type: string
        detachDateTime:
          description: Time stamp the accompanying guest was last detached.
          format: date-time
          type: string
        detached:
          description: This attribute indicates if the accompanying guest is marked
            as detached or attached.
          type: boolean
      type: object
    postReservationByBlock_request:
      allOf:
      - $ref: '#/components/schemas/createReservation'
      - example:
          reservations:
            reservation:
            - sourceOfSale:
                sourceType: PMS
                sourceCode: TOKYO
              roomStay:
                roomRates:
                - total:
                    amountBeforeTax: "200"
                  rates:
                    rate:
                    - base:
                        amountBeforeTax: "200"
                        currencyCode: USD
                      shareDistributionInstruction: Full
                      total:
                        amountBeforeTax: "200"
                      start: 2016-12-05
                      end: 2016-12-05
                  stayProfiles:
                  - profileIdList:
                    - id: "3223789"
                      type: Profile
                    reservationProfileType: Group
                  guestCounts:
                    adults: "1"
                    children: "0"
                  reservationBlock:
                    blockIdList:
                    - id: "32723"
                      type: Block
                  roomType: STTD
                  ratePlanCode: 1HJ
                  start: 2016-12-05
                  end: 2016-12-05
                  suppressRate: true
                  marketCode: COM
                  marketCodeDescription: COMPLIMENTARY
                  sourceOfBusiness: TW
                  sourceOfBusinessDescription: OnlineAgent
                  numberOfUnits: "1"
                  pseudoRoom: false
                  roomTypeCharged: STTD
                  houseUseOnly: false
                  complimentary: false
                  fixedRate: true
                  discountAllowed: false
                  bogoDiscount: false
                guestCounts:
                  adults: "1"
                  children: "0"
                arrivalDate: 2016-12-05
                departureDate: 2016-12-06
                guarantee:
                  guaranteeCode: 6PM
                  shortDescription: 6PM Hold
                roomNumberLocked: false
                printRate: false
              reservationGuests:
              - profileInfo:
                  profileIdList:
                  - id: "3099001"
                    type: Profile
                  profile:
                    customer:
                      personName:
                      - givenName: Jennifer
                        surname: Smith
                        nameType: Primary
                      - nameType: External
                      language: E
                    profileType: Guest
                primary: true
              reservationProfiles:
                reservationProfile:
                - profileIdList:
                  - id: "3223789"
                    type: Profile
                  reservationProfileType: Group
              reservationPaymentMethods:
              - paymentMethod: CASH
                folioView: "1"
              hotelId: HOTEL1
              roomStayReservation: true
              reservationStatus: Reserved
              computedReservationStatus: DueIn
              walkIn: false
              printRate: false
              preRegistered: false
              upgradeEligible: false
              allowAutoCheckin: false
              hasOpenFolio: false
              allowMobileCheckout: false
              allowMobileViewFolio: false
              allowPreRegistration: false
              optedForCommunication: false
        type: object
    postReservation_request:
      allOf:
      - $ref: '#/components/schemas/createReservation'
      - example:
          reservations:
            reservation:
            - sourceOfSale:
                sourceType: PMS
                sourceCode: HOTEL1
              roomStay:
                roomRates:
                - total:
                    amountBeforeTax: "200"
                  rates:
                    rate:
                    - base:
                        amountBeforeTax: "200"
                        currencyCode: USD
                      shareDistributionInstruction: Full
                      total:
                        amountBeforeTax: "200"
                      start: 2021-07-01
                      end: 2021-07-02
                  stayProfiles:
                  - profileIdList:
                    - id: "719616"
                      type: Profile
                    reservationProfileType: Group
                  guestCounts:
                    adults: "1"
                    children: "0"
                  roomType: STDK
                  ratePlanCode: DFLEX
                  start: 2021-07-01
                  end: 2021-07-02
                  suppressRate: true
                  marketCode: ASSN
                  marketCodeDescription: Group Association
                  sourceCode: REF
                  sourceCodeDescription: Referral
                  numberOfUnits: "1"
                  pseudoRoom: false
                  roomTypeCharged: STDK
                  houseUseOnly: false
                  complimentary: false
                  fixedRate: true
                  discountAllowed: false
                  bogoDiscount: false
                guestCounts:
                  adults: "1"
                  children: "0"
                arrivalDate: 2021-07-01
                departureDate: 2021-07-02
                guarantee:
                  guaranteeCode: 6PM
                  shortDescription: 6PM Hold
                roomNumberLocked: false
                printRate: false
              reservationGuests:
              - profileInfo:
                  profile:
                    customer:
                      personName:
                      - givenName: Ben
                        surname: Smith
                        nameType: Primary
                      - nameType: External
                      language: E
                    profileType: Guest
                primary: true
              reservationProfiles:
                reservationProfile:
                - profileIdList:
                  - id: "3223789"
                    type: Profile
                  reservationProfileType: Group
              reservationPaymentMethods:
              - paymentMethod: CA
                folioView: "1"
              comments:
              - comment:
                  text:
                    value: This guest would like a corner room
                  commentTitle: General Notes
                  notificationLocation: RESERVATION
                  type: GEN
                  internal: false
              reservationPackages:
              - packageHeaderType:
                  primaryDetails:
                    description: Breakfast Buffet - Adult 1
                  transactionDetails:
                    allowance: true
                    currency: USD
                    postingType: D
                    calculationRule: F
                  postingAttributes:
                    addToRate: false
                    printSeparateLine: false
                    postNextDay: false
                    forecastNextDay: false
                scheduleList:
                - consumptionDate: 2021-07-01
                  unitPrice: "25"
                  computedResvPrice: "25"
                  unitAllowance: "25"
                  reservationDate: 2021-07-01
                  originalUnitPrice: "25"
                  originalUnitAllowance: "25"
                consumptionDetails:
                  defaultQuantity: "1"
                  totalQuantity: "1"
                  allowanceConsumed: false
                packageCode: BBRFSTAS
                startDate: 2021-07-01
                endDate: 2021-07-02
                source: Reservation
              hotelId: HOTEL1
              roomStayReservation: true
              reservationStatus: Reserved
              computedReservationStatus: DueIn
              walkIn: false
              printRate: false
              preRegistered: false
              upgradeEligible: false
              allowAutoCheckin: false
              hasOpenFolio: false
              allowMobileCheckout: false
              allowMobileViewFolio: false
              allowPreRegistration: false
              optedForCommunication: false
        type: object
    postReservationLinks_request:
      allOf:
      - $ref: '#/components/schemas/linkReservationsCriteria'
      - example:
          hotelId: TOKYO
          reservationIdList:
          - id: "720933"
            type: Reservation
          linkToReservationId:
            id: "720932"
            type: Reservation
          responseInstruction:
            fetchLinkedReservations: true
        type: object
    putValidateReservationChanges_request:
      allOf:
      - $ref: '#/components/schemas/validateReservationChanges'
      - example:
          reservation:
            roomStay:
              roomRates:
              - rates:
                  rate:
                  - base:
                      amountBeforeTax: "299"
                    start: 2020-11-23
                    end: 2020-11-23
                guestCounts:
                  adults: 1
                  children: 0
                roomType: STDK
                ratePlanCode: RACK
                suppressRate: false
                marketCode: HOUSE
                sourceOfBusiness: DIRECT
                numberOfUnits: 1
                pseudoRoom: false
                roomTypeCharged: STDK
                houseUseOnly: false
                complimentary: false
                discountAllowed: false
                bogoDiscount: false
                start: 2020-11-28
                end: 2020-11-28
              guestCounts:
                adults: 1
                children: 0
              arrivalDate: 2020-11-28
              departureDate: 2020-11-29
              expectedTimes:
                reservationExpectedArrivalTime: 2020-11-28
                reservationExpectedDepartureTime: 2020-11-29
              guarantee:
                guaranteeCode: 6PM
                onHold: false
            reservationGuests:
            - profileInfo:
                profileIdList:
                - id: "1156017"
                  type: Profile
              primary: false
            reservationPaymentMethods:
              paymentMethod: CASH
              folioView: "1"
            comments: []
            hotelId: HOTEL1
            reservationStatus: Reserved
          timeSpan:
            startDate: 2020-11-28
            endDate: 2020-11-29
          instructions:
            instruction:
            - StayHeader
          links: []
        type: object
    putReservation_request:
      allOf:
      - $ref: '#/components/schemas/changeReservation'
      - example:
          reservations:
          - sourceOfSale:
              sourceType: PMS
              sourceCode: HOTEL1
            roomStay:
              roomRates:
              - total:
                  amountBeforeTax: "120"
                rates:
                  rate:
                  - base:
                      amountBeforeTax: "120"
                      currencyCode: USD
                    shareDistributionInstruction: Full
                    total:
                      amountBeforeTax: "120"
                    start: 2021-02-27
                    end: 2021-02-27
                guestCounts:
                  adults: "1"
                  children: "0"
                roomType: STDK
                ratePlanCode: IHUBFAST
                start: 2021-02-27
                end: 2021-02-27
                suppressRate: false
                marketCode: CORP
                marketCodeDescription: Group Corporate
                sourceCode: REF
                sourceCodeDescription: Referral
                numberOfUnits: "1"
                pseudoRoom: false
                roomTypeCharged: STDK
                houseUseOnly: false
                complimentary: false
                fixedRate: false
                discountAllowed: false
                bogoDiscount: false
              guestCounts:
                adults: "1"
                children: "0"
              arrivalDate: 2021-02-27
              departureDate: 2021-02-28
              guarantee:
                guaranteeCode: GDED
                shortDescription: Group Deduct
              total:
                amountBeforeTax: "120"
                amountAfterTax: "121"
              roomNumberLocked: false
              printRate: false
              remoteCheckInAllowed: false
              bookingMedium: PMS
              bookingMediumDescription: PMS Channel
            reservationGuests:
              reservationGuest:
              - profileInfo:
                  profileIdList:
                  - id: "687128"
                    type: Profile
                  profile:
                    customer:
                      personName:
                      - givenName: Sam
                        surname: Jones
                        nameTitle: Mr
                        nameType: Primary
                      - nameType: External
                      language: E
                      vipStatus: GOLD
                      vipDescription: Gold Level
                    profileType: Guest
                primary: true
            comments:
              commentInfo:
              - comment:
                  text:
                    value: The guest will be a late arrival
                  commentTitle: InHouse Comment
                  notificationLocation: PROPDFLT
                  type: RESERVATION
                  internal: false
                id: "120303"
                type: Comment
              - comment:
                  text:
                    value: reservation comments
                  commentTitle: No Change To Reservation Comment
                  notificationLocation: GEN
                  type: RESERVATION
                  internal: false
                id: "120304"
                type: Comment
              - comment:
                  text:
                    value: New Cashier Comment
                  commentTitle: New Cashier Comment
                  notificationLocation: Note1
                  type: CASHIER
                  internal: false
            hotelId: HOTEL1
            roomStayReservation: true
            reservationStatus: Reserved
            computedReservationStatus: DueIn
            walkIn: false
            printRate: false
            createBusinessDate: 2021-02-27
            preRegistered: false
            upgradeEligible: false
            allowAutoCheckin: false
            hasOpenFolio: false
            allowMobileCheckout: false
            allowMobileViewFolio: false
            allowPreRegistration: false
            optedForCommunication: false
            chargeCardNumber: "5904606"
        type: object
    postCancelReservation_request:
      allOf:
      - $ref: '#/components/schemas/cancelReservation'
      - example:
          reason:
            description: Bad weather has changed travel plans
            code: WEATHER
          reservations:
          - reservationIdList:
            - id: "660082"
              type: Reservation
            externalCancellationId: "123456"
            roomStatus: Clean
            allowedActions:
            - Cancel
            hotelId: HOTEL1
            cxlInstr:
              deleteResTraces: true
          verificationOnly: false
        type: object
    postPreCheckInReservation_request:
      allOf:
      - $ref: '#/components/schemas/preCheckInReservation'
      - example:
          reservation:
            reservationId:
              type: Confirmation
              idContext: OPERA
        type: object
    postUpsellReservation_request:
      allOf:
      - $ref: '#/components/schemas/upsellReservation'
      - example:
          hotelId: HOTEL1
          reservationId:
            type: Reservation
            idContext: OPERA
          upsell:
            ruleId:
              id: "754"
              type: UpsellRuleId
            ratePlanCode: PROM01
            roomType:
              roomType: DLXK
            firstNightAmount:
              amount:
                amount: 150
            totalStayAmount:
              amount:
                amount: 150
            rates:
            - date: 2020-02-16
              requiredAmount:
                amount:
                  amount: 150
            - date: 2020-02-17
              requiredAmount:
                amount:
                  amount: 150
        type: object
    callType_reservation:
      description: Holds Reservation Id and Hotel Code.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        hotelId:
          description: Holds Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationsDetails_reservations:
      description: Collection of Reservations and their information.
      properties:
        reservationInfo:
          description: Contains details of the reservation.
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
      type: object
    folioTextsType_inner:
      properties:
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
        row:
          description: Row number of the additional text.
          type: integer
      type: object
    resCommunicationType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    resCommunicationType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    hotelReservationType_reservationProfiles:
      description: Collection of guests associated with the reservation.
      properties:
        reservationProfile:
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
      type: object
    hotelReservationType_cancellation:
      description: Information regarding why reservation has been/was cancelled. This
        could hold information as history even if reservation is no more in in Cancelled
        status.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        cancellationNo:
          $ref: '#/components/schemas/uniqueID_Type'
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
      type: object
    hotelReservationType_transactionDiversions:
      description: List of transaction diversions attached to the reservation.
      properties:
        transactionDiversions:
          items:
            $ref: '#/components/schemas/reservationTransactionDiversionsType'
          maxItems: 4000
          type: array
        actionType:
          maxLength: 2000
          type: string
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_preferenceCollection:
      description: List of customer preferences.
      properties:
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    profileType_roomOwnershipsList:
      description: Room Ownership records.
      properties:
        roomOwnershipInfo:
          description: Collection of Detailed information on Room Ownership records.
          items:
            $ref: '#/components/schemas/roomOwnershipType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    customerType_identifications:
      description: List of identification of the customer.
      properties:
        identificationInfo:
          description: Collection of detailed information on the identification of
            the customer.
          items:
            $ref: '#/components/schemas/identificationInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    eCertificateInfoType_hotels:
      description: Hotel to which certificate is attached to.
      properties:
        code:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        scope:
          $ref: '#/components/schemas/eCertificateScopeType'
      type: object
    upsellInfoType_originalInfo:
      description: Original Values of the reservation prior to upgrade.
      properties:
        rateCode:
          description: The Rate Code of the Reservation before it was upgraded
          maxLength: 20
          minLength: 0
          type: string
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        nights:
          description: The number of nights of the reservation before being upgraded.
          type: integer
      type: object
    upsellInfoType_upsellInfo:
      description: Information of a reservation during the process of upgrade.
      properties:
        totalUpsellCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalUpsellMoneyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        firstNightUpsellAmount:
          $ref: '#/components/schemas/currencyAmountType'
        firstNightUpsellCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalUpsellPoints:
          description: Total Upsell Points.
          type: integer
        totalActualRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        roomLongDescription:
          description: Detail description of the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        ruleId:
          description: Upsell Rule Id.
          type: integer
        ruleCode:
          description: Upsell rule code
          maxLength: 20
          minLength: 0
          type: string
        ruleDescription:
          description: Upsell rule description
          maxLength: 2000
          minLength: 0
          type: string
        percentageSavings:
          description: Percentage savings resulting from accepting upsell offer. This
            will be calculated as the ratio of the amount saved by accepting the upsell
            offer to the actual room rate (i.e. room rate when upsell is not offered)
          maximum: 100
          minimum: 0
          type: number
        upsellDate:
          description: The date on which reservation is upgraded.
          format: date
          type: string
        upsellUser:
          description: User who upgraded the reservation.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resGuestType_profileInfo:
      description: A collection of Profiles or Unique IDs of Profiles.
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        externalReference:
          $ref: '#/components/schemas/externalReferenceType'
        profile:
          $ref: '#/components/schemas/profileType'
        profileCashieringDetail:
          $ref: '#/components/schemas/profileCashieringDetailType'
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        attachDetachType:
          $ref: '#/components/schemas/attachDetachType'
      type: object
    activityList_inner_deposit:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        collectedBy:
          enum:
          - Vendor
          - Agent
          - Other
          type: string
      type: object
    activityList_inner:
      description: Represents a single instance of a scheduled activity.
      properties:
        activityIds:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        type:
          description: "The Type of the activity. Eg: SPA, Golf etc."
          type: string
        location:
          description: "The Location where the activity takes place. Eg: Salon"
          type: string
        name:
          description: Name of the people for whom the activity is scheduled. Can
            be more than one but should be equal to the number of persons
          items:
            maxLength: 200
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        numberOfPersons:
          description: The total number of the people for whom the activity is scheduled.
            Can be more than one but should be equal to the number of persons
          type: integer
        timeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        duration:
          $ref: '#/components/schemas/dateTimeSpanType'
        description:
          description: Description of the activity
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        note:
          description: Any additional notes or comments regarding the scheduled activity.
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        groupCode:
          description: Any Block code associated with the activity if its a Group
            booking.
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        deposit:
          $ref: '#/components/schemas/activityList_inner_deposit'
        inactiveDate:
          description: The Date by which the activity is deemed Cancelled/Deleted.
          format: date-time
          type: string
        participants:
          description: The names of the participants.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 4000
          type: array
        uRLLink:
          description: The URL link to launch the Activity Reservation System to view
            or edit full details of this activity.
          type: string
        extensions:
          description: Vendor extensions to the activity record.
          items:
            type: string
          maxItems: 4000
          type: array
        status:
          description: "Activity reservation status. Typical examples are RESERVED,\
            \ BOOKED, CANCELLED, and TENTATIVE."
          type: string
        statusDescription:
          description: "Activity reservation status description. Typical examples\
            \ are RESERVED, BOOKED, CANCELLED, and TENTATIVE."
          type: string
        link:
          description: When true indicates that activity link only needs to be inserted
            or deleted for this record.
          type: boolean
      type: object
    packagePostingRhythmType_everyXNightsStartingNightY:
      description: Post the package every X nights Staring from Night Y.
      properties:
        startOnNightY:
          description: Starting night for consumption and posting prices.
          type: integer
        postEveryXNights:
          description: Occurance of nights when the package needs to be posted and
            consumed.
          type: integer
      type: object
    packagePostingRhythmType_certainNightsOfTheWeek:
      description: Post the package on certain nights of the week.
      properties:
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    packagePostingRhythmType_customStaySchedule:
      description: "This user defined schedule lets you enter a posting rhythm over\
        \ a 14-day period, starting with the arrival date, by assigning the day (number)\
        \ within a guest stay for posting this package price."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
      type: object
    packagePostingRhythmType_customNightSchedule:
      description: "The start and end of the posting period is determined as follows:\
        \ If the package is attached to a rate code: The period starts with the date\
        \ when the rate code to which the package is attached becomes effective for\
        \ the stay. The period ends with the date of the last night for that rate\
        \ code (or the last night of the stay if the rate code remains in effect until\
        \ the departure date). If the package is attached separately to the reservation:\
        \ The Begin Date specified on the reservation when the package was attached\
        \ is the start date for the period. The End Date specified on the reservation\
        \ when the package was attached is the end date for the period. If no Begin\
        \ Date and/or End Date are specified when the package is attached to the reservation,\
        \ the Begin Date is assumed to be the arrival date and the End Date is assumed\
        \ to be the departure date of the reservation, irrespective of when the package\
        \ is attached to the reservation."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
      type: object
    routingInfoType_folio_guestInfo:
      description: Guest details
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    routingInfoType_folio:
      description: Folio routing type.
      properties:
        guestInfo:
          $ref: '#/components/schemas/routingInfoType_folio_guestInfo'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        aRNumber:
          description: Accounts Receivable.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
        paymentMethod:
          maxLength: 2000
          type: string
      type: object
    routingInfoType_room:
      description: Room routing type.
      properties:
        roomId:
          description: Room number to route the instructions.
          maxLength: 20
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
      type: object
    routingInfoType_comp:
      description: Comp Accounting Routing Info
      properties:
        compAccountingInfo:
          $ref: '#/components/schemas/compAccountingType'
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
      type: object
    routingInfoType_request:
      description: Comp Accounting Request routing
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
      type: object
    routingInstructionType_duration:
      description: Duration of this instruction.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        daily:
          description: Flag to indicate if the routing instruction is a daily instruction.
          type: boolean
      type: object
    linkReservationsCriteria_responseInstruction:
      description: Response instruction for the operation.
      properties:
        fetchLinkedReservations:
          description: "If set to TRUE, response will have the list of linked reservations."
          type: boolean
      type: object
    hotelReservationInstructionType_responseInstructions:
      description: Collection of instructions to be returned as a set of reservation
        information.
      properties:
        responseInstruction:
          items:
            $ref: '#/components/schemas/reservationInstructionType'
          maxItems: 4000
          type: array
        confirmationOnly:
          description: "If this value is set to TRUE, then the operation will only\
            \ return for a Success or Failed flag."
          type: boolean
      type: object
    channelMarketingInfoType_inner:
      properties:
        description:
          description: "Marketing Text like cancel policy, deposit policy etc."
          maxLength: 4000
          minLength: 0
          type: string
        policyType:
          $ref: '#/components/schemas/marketingPolicyType'
        ratePlanCode:
          description: Indicates the rate code for which the policy is associated
            with.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    routingInstructionsInfo_criteria_folio:
      description: Folio routing type.
      properties:
        guestInfo:
          $ref: '#/components/schemas/routingInfoType_folio_guestInfo'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        aRNumber:
          description: Accounts Receivable.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
        paymentMethod:
          maxLength: 2000
          type: string
      type: object
    routingInstructionsInfo_criteria_room:
      description: Room routing type.
      properties:
        roomNumber:
          description: Room number to route the instructions.
          maxLength: 20
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
      type: object
    routingInstructionsInfo_criteria_comp:
      description: Comp Accounting Routing Info
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
      type: object
    routingInstructionsInfo_criteria_request:
      description: Comp Accounting Request routing
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
      type: object
    routingInstructionsInfo_criteria:
      description: Transactions and scheduled instructions included in this routing
        element will be replaced with the new element.
      properties:
        folio:
          $ref: '#/components/schemas/routingInstructionsInfo_criteria_folio'
        room:
          $ref: '#/components/schemas/routingInstructionsInfo_criteria_room'
        comp:
          $ref: '#/components/schemas/routingInstructionsInfo_criteria_comp'
        request:
          $ref: '#/components/schemas/routingInstructionsInfo_criteria_request'
        hotelId:
          description: Hotel context of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        retrievePostingsForRoomRouting:
          description: "This flag indicates if postings that can be refreshed need\
            \ to be part of the response when a routing instruction is created, updated\
            \ or deleted."
          type: boolean
        newRoutingInfo:
          $ref: '#/components/schemas/routingInfoType'
      type: object
    combineShareReservationsType_shareToReservation:
      description: Collection of unique reservation identifiers. Currently supported
        are Reservation Id and/or Confirmation Number which may include the leg number.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        dailyRates:
          description: Defines room rate information on a daily basis.
          items:
            $ref: '#/components/schemas/dailyRateType'
          maxItems: 4000
          type: array
      type: object
    combineShareReservationsType_fetchInstructions:
      description: Collection of fetch reservation instructions to be returned.
      properties:
        fetchInstruction:
          description: Instruction on what information has to be fetched.
          items:
            $ref: '#/components/schemas/reservationInstructionType'
          maxItems: 4000
          type: array
        returnShareReservations:
          description: "After the combine shares operation, return the new list of\
            \ share reservations."
          type: boolean
      type: object
    promoCodeCompRoutingType_duration:
      description: Duration of this instruction for promotion code complimentary Routing
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        daily:
          description: Flag to indicate if the routing instruction is a daily instruction
            for promotion code complimentary routing
          type: boolean
      type: object
    fetchReservations_reservationInfoList:
      description: List of reservations which can be shared.
      properties:
        reservationInfo:
          description: Information of the reservation which can be shared.
          items:
            $ref: '#/components/schemas/reservationInfoType'
          type: array
      type: object
    validateRateInfo_criteria:
      description: Search type can either be based on a reservation or based on a
        quotation. If a reservation name id is passed then most criteria are ignored.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        quantity:
          type: integer
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        detailDate:
          description: This field is only required when the criteria is meant for
            a detailed results. The date for the rate detail is needed.
          format: date
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        ratePlanCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        roomType:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationPackages:
          description: A Service object represents a non-room product provided to
            guests. Service products may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        resvRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        reservationProfiles:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
        summaryInfo:
          description: Flag to indicate if summary information is required.
          type: boolean
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        includeFixedCharges:
          default: true
          description: "Flag to indicate if fixed charges is to be included in the\
            \ response, and added to the total cost of stay."
          type: boolean
        includeDeposits:
          default: true
          description: "Flag to indicate if paid deposits is to be included in the\
            \ response, and deducted from total cost of stay when calculating for\
            \ outstanding cost of stay."
          type: boolean
        includeRouting:
          default: true
          description: Flag to indicate if routing and guest pay amounts are to be
            included in the response.
          type: boolean
      type: object
    rateInfo_detail:
      description: The revenue information for the rate code.
      properties:
        revenue:
          $ref: '#/components/schemas/totalType'
        packages:
          description: Package information for the rate code.
          items:
            $ref: '#/components/schemas/totalType'
          type: array
        rateSuppressed:
          description: Indicates if the rate is to be hidden.
          type: boolean
      type: object
    validateReservationChanges_instructions:
      description: Collection of validation instructions.
      properties:
        instruction:
          description: Reservation validation instruction.
          items:
            $ref: '#/components/schemas/reservationValidationInstructionType'
          type: array
        upsellRateInstruction:
          $ref: '#/components/schemas/upsellRateInstructionType'
        copyOperation:
          description: Whether the current operation is copy reservation or not.
          type: boolean
      type: object
    guaranteePolicyType_cancelPenalty:
      description: The CancelPenalty class defines the cancellation policy of the
        hotel facility.
      properties:
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        penaltyDescription:
          description: Text description of the Penalty in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        offsetUnit:
          $ref: '#/components/schemas/offsetUnitType'
        formattedRule:
          description: Formatted Text Rule of the Cancellation Penalty.
          maxLength: 2000
          minLength: 0
          type: string
        policyCode:
          description: Policy Code.
          maxLength: 20
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
        nonRefundable:
          description: Indicates if the amount is refundable if booking is canceled.
          type: boolean
        effective:
          description: Indicator if Cancellation Penalty is currently applicable or
            not.
          type: boolean
        estimatedAmount:
          description: Message.
          type: number
      type: object
    guaranteePolicyType_depositPolicy:
      description: A deposit policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/depositPolicyType'
        comments:
          description: Comments attached with a deposit.
          maxLength: 2000
          minLength: 0
          type: string
        amountPaid:
          $ref: '#/components/schemas/currencyAmountType'
        amountDue:
          $ref: '#/components/schemas/currencyAmountType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        estimatedAmount:
          description: Message.
          type: number
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    computeCancellationPolicies_criteria:
      description: "Criteria for calculating the deposit/cancellation amount based\
        \ on a reservation, policy code, amount or percentage."
      properties:
        hotelId:
          description: Property Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        policyCode:
          description: The policy code based on which the calculation of the amount
            and due date is to be done.
          maxLength: 20
          minLength: 0
          type: string
        percentage:
          description: The percentage based on which the calculation of the amount
            and due date is to be done.
          type: number
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        nights:
          description: The number of nights used in the calculation of the cancellation
            amount.
          type: integer
      type: object
    copyReservationType_instructions:
      description: "Flags which will be considered when copying from the template.\
        \ If this element is not sent, all the flags will be assumed to be ignored."
      properties:
        includePayments:
          type: boolean
        includeSpecials:
          type: boolean
        includeRouting:
          type: boolean
        includeComments:
          type: boolean
        includePackages:
          type: boolean
        includeItemInventory:
          type: boolean
        includeCreditCardPayments:
          type: boolean
        includeNonCreditCardPayments:
          type: boolean
        includeCompRouting:
          type: boolean
      type: object
    masterAccountType_reservationBlock:
      description: Information of the block associated with the reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        transactionCode:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    masterAccountType_roomRate:
      description: Posting master reservation room and rate information.
      properties:
        marketCode:
          description: Market Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room Type of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: The Rate Code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    packages_reservationPackages:
      description: "A collection of Service objects. This is the collection of all\
        \ services associated with any part of this reservation (the reservation in\
        \ its entirety, one or more guests, or one or more room stays). Which services\
        \ are attributable to which part is determined by each object's ServiceRPHs\
        \ collection."
      properties:
        reservationPackage:
          description: A Service object represents a package provided to guests. Service
            packages may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
      type: object
    changeShareRateAmountType_changeShareRateInstructions:
      description: Instruction to apply new effective rates to the reservations.
      properties:
        effectiveRates:
          description: Collection of effective rate amount per guest on specific dates.
          items:
            $ref: '#/components/schemas/effectiveRateType'
          maxItems: 4000
          type: array
        returnShareReservations:
          description: "After the change rate operation, return the new list of Sharer\
            \ Reservaitions."
          type: boolean
      type: object
    fetchSellMessageConfig_sellMessageConfigs:
      description: Sell Messages which are retrieved as per the criteria in the request
        message. Refer to the generic common types document for the SellMessagesType.
      properties:
        sellMessageConfigs:
          $ref: '#/components/schemas/sellMessageConfigsType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
      type: object
    splitMultiRoomReservation_responseInstructions:
      description: Response instruction for the operation.
      properties:
        fetchLinkedReservations:
          description: "If set to TRUE, response will have the list of linked reservations."
          type: boolean
        fetchNewReservationIDs:
          description: "If set to TRUE, response will have the list of unique identifiers\
            \ of the reservations that were created."
          type: boolean
      type: object
x-original-swagger-version: "2.0"
