/*
OPERA Cloud List of Values Management API

APIs to cater for List of Value functionality in OPERA Cloud. A List of Values in the OPERA Application can be configured by a property.  Then by using these APIs you can retrieve all configured codes.  As an example, Titles is a configurable ListOfValues.  A hotel can specify what titles they wish to use, and thus fetching the LOV for title, you can view the codes that are configured for a property.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lov

import (
	"encoding/json"
)

// checks if the ValidateListOfValuesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateListOfValuesRequest{}

// ValidateListOfValuesRequest struct for ValidateListOfValuesRequest
type ValidateListOfValuesRequest struct {
	Criteria *ListOfValuesCriteriaType `json:"criteria,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewValidateListOfValuesRequest instantiates a new ValidateListOfValuesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateListOfValuesRequest() *ValidateListOfValuesRequest {
	this := ValidateListOfValuesRequest{}
	return &this
}

// NewValidateListOfValuesRequestWithDefaults instantiates a new ValidateListOfValuesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateListOfValuesRequestWithDefaults() *ValidateListOfValuesRequest {
	this := ValidateListOfValuesRequest{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *ValidateListOfValuesRequest) GetCriteria() ListOfValuesCriteriaType {
	if o == nil || IsNil(o.Criteria) {
		var ret ListOfValuesCriteriaType
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateListOfValuesRequest) GetCriteriaOk() (*ListOfValuesCriteriaType, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *ValidateListOfValuesRequest) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given ListOfValuesCriteriaType and assigns it to the Criteria field.
func (o *ValidateListOfValuesRequest) SetCriteria(v ListOfValuesCriteriaType) {
	o.Criteria = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ValidateListOfValuesRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateListOfValuesRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ValidateListOfValuesRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ValidateListOfValuesRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ValidateListOfValuesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateListOfValuesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableValidateListOfValuesRequest struct {
	value *ValidateListOfValuesRequest
	isSet bool
}

func (v NullableValidateListOfValuesRequest) Get() *ValidateListOfValuesRequest {
	return v.value
}

func (v *NullableValidateListOfValuesRequest) Set(val *ValidateListOfValuesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateListOfValuesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateListOfValuesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateListOfValuesRequest(val *ValidateListOfValuesRequest) *NullableValidateListOfValuesRequest {
	return &NullableValidateListOfValuesRequest{value: val, isSet: true}
}

func (v NullableValidateListOfValuesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateListOfValuesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


