/*
OPERA Cloud Room Rotation Configuration Service API

APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmrcfg

import (
	"encoding/json"
)

// checks if the RoomOwnershipsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomOwnershipsList{}

// RoomOwnershipsList Room Ownership records.
type RoomOwnershipsList struct {
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Collection of Detailed information on Room Ownership records.
	RoomOwnershipInfo []RoomOwnershipType `json:"roomOwnershipInfo,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
}

// NewRoomOwnershipsList instantiates a new RoomOwnershipsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomOwnershipsList() *RoomOwnershipsList {
	this := RoomOwnershipsList{}
	return &this
}

// NewRoomOwnershipsListWithDefaults instantiates a new RoomOwnershipsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomOwnershipsListWithDefaults() *RoomOwnershipsList {
	this := RoomOwnershipsList{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *RoomOwnershipsList) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomOwnershipsList) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *RoomOwnershipsList) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *RoomOwnershipsList) SetCount(v int32) {
	o.Count = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *RoomOwnershipsList) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomOwnershipsList) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *RoomOwnershipsList) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *RoomOwnershipsList) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetRoomOwnershipInfo returns the RoomOwnershipInfo field value if set, zero value otherwise.
func (o *RoomOwnershipsList) GetRoomOwnershipInfo() []RoomOwnershipType {
	if o == nil || IsNil(o.RoomOwnershipInfo) {
		var ret []RoomOwnershipType
		return ret
	}
	return o.RoomOwnershipInfo
}

// GetRoomOwnershipInfoOk returns a tuple with the RoomOwnershipInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomOwnershipsList) GetRoomOwnershipInfoOk() ([]RoomOwnershipType, bool) {
	if o == nil || IsNil(o.RoomOwnershipInfo) {
		return nil, false
	}
	return o.RoomOwnershipInfo, true
}

// HasRoomOwnershipInfo returns a boolean if a field has been set.
func (o *RoomOwnershipsList) HasRoomOwnershipInfo() bool {
	if o != nil && !IsNil(o.RoomOwnershipInfo) {
		return true
	}

	return false
}

// SetRoomOwnershipInfo gets a reference to the given []RoomOwnershipType and assigns it to the RoomOwnershipInfo field.
func (o *RoomOwnershipsList) SetRoomOwnershipInfo(v []RoomOwnershipType) {
	o.RoomOwnershipInfo = v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *RoomOwnershipsList) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomOwnershipsList) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *RoomOwnershipsList) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *RoomOwnershipsList) SetTotalResults(v int32) {
	o.TotalResults = &v
}

func (o RoomOwnershipsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomOwnershipsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.RoomOwnershipInfo) {
		toSerialize["roomOwnershipInfo"] = o.RoomOwnershipInfo
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	return toSerialize, nil
}

type NullableRoomOwnershipsList struct {
	value *RoomOwnershipsList
	isSet bool
}

func (v NullableRoomOwnershipsList) Get() *RoomOwnershipsList {
	return v.value
}

func (v *NullableRoomOwnershipsList) Set(val *RoomOwnershipsList) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomOwnershipsList) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomOwnershipsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomOwnershipsList(val *RoomOwnershipsList) *NullableRoomOwnershipsList {
	return &NullableRoomOwnershipsList{value: val, isSet: true}
}

func (v NullableRoomOwnershipsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomOwnershipsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


