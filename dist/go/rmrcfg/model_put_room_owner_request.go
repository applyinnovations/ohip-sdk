/*
OPERA Cloud Room Rotation Configuration Service API

APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmrcfg

import (
	"encoding/json"
)

// checks if the PutRoomOwnerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutRoomOwnerRequest{}

// PutRoomOwnerRequest struct for PutRoomOwnerRequest
type PutRoomOwnerRequest struct {
	// Contract ID of the room owner record.
	ContractId *int32 `json:"contractId,omitempty"`
	RoomOwner *RoomOwnerType `json:"roomOwner,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPutRoomOwnerRequest instantiates a new PutRoomOwnerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutRoomOwnerRequest() *PutRoomOwnerRequest {
	this := PutRoomOwnerRequest{}
	return &this
}

// NewPutRoomOwnerRequestWithDefaults instantiates a new PutRoomOwnerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutRoomOwnerRequestWithDefaults() *PutRoomOwnerRequest {
	this := PutRoomOwnerRequest{}
	return &this
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *PutRoomOwnerRequest) GetContractId() int32 {
	if o == nil || IsNil(o.ContractId) {
		var ret int32
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomOwnerRequest) GetContractIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *PutRoomOwnerRequest) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int32 and assigns it to the ContractId field.
func (o *PutRoomOwnerRequest) SetContractId(v int32) {
	o.ContractId = &v
}

// GetRoomOwner returns the RoomOwner field value if set, zero value otherwise.
func (o *PutRoomOwnerRequest) GetRoomOwner() RoomOwnerType {
	if o == nil || IsNil(o.RoomOwner) {
		var ret RoomOwnerType
		return ret
	}
	return *o.RoomOwner
}

// GetRoomOwnerOk returns a tuple with the RoomOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomOwnerRequest) GetRoomOwnerOk() (*RoomOwnerType, bool) {
	if o == nil || IsNil(o.RoomOwner) {
		return nil, false
	}
	return o.RoomOwner, true
}

// HasRoomOwner returns a boolean if a field has been set.
func (o *PutRoomOwnerRequest) HasRoomOwner() bool {
	if o != nil && !IsNil(o.RoomOwner) {
		return true
	}

	return false
}

// SetRoomOwner gets a reference to the given RoomOwnerType and assigns it to the RoomOwner field.
func (o *PutRoomOwnerRequest) SetRoomOwner(v RoomOwnerType) {
	o.RoomOwner = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutRoomOwnerRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutRoomOwnerRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutRoomOwnerRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PutRoomOwnerRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PutRoomOwnerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutRoomOwnerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.RoomOwner) {
		toSerialize["roomOwner"] = o.RoomOwner
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutRoomOwnerRequest struct {
	value *PutRoomOwnerRequest
	isSet bool
}

func (v NullablePutRoomOwnerRequest) Get() *PutRoomOwnerRequest {
	return v.value
}

func (v *NullablePutRoomOwnerRequest) Set(val *PutRoomOwnerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutRoomOwnerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutRoomOwnerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutRoomOwnerRequest(val *PutRoomOwnerRequest) *NullablePutRoomOwnerRequest {
	return &NullablePutRoomOwnerRequest{value: val, isSet: true}
}

func (v NullablePutRoomOwnerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutRoomOwnerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


