/*
OPERA Cloud Room Rotation Configuration Service API

APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmrcfg

import (
	"encoding/json"
)

// checks if the RotationRevenueTransactionCodesChangeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RotationRevenueTransactionCodesChangeType{}

// RotationRevenueTransactionCodesChangeType Two collections of transaction codes for a resort. One collection lists codes to be changed to Rotation Revenue transaction codes and the other to be changed to non Rotation Revenue Transaction codes.
type RotationRevenueTransactionCodesChangeType struct {
	// Hotel code of revenue transaction code.
	HotelId *string `json:"hotelId,omitempty"`
	// Revenue transaction code.
	RotationRevenueTransactionCodes []string `json:"rotationRevenueTransactionCodes,omitempty"`
	// Revenue transaction code.
	NonRotationRevenueTransactionCodes []string `json:"nonRotationRevenueTransactionCodes,omitempty"`
}

// NewRotationRevenueTransactionCodesChangeType instantiates a new RotationRevenueTransactionCodesChangeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRotationRevenueTransactionCodesChangeType() *RotationRevenueTransactionCodesChangeType {
	this := RotationRevenueTransactionCodesChangeType{}
	return &this
}

// NewRotationRevenueTransactionCodesChangeTypeWithDefaults instantiates a new RotationRevenueTransactionCodesChangeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRotationRevenueTransactionCodesChangeTypeWithDefaults() *RotationRevenueTransactionCodesChangeType {
	this := RotationRevenueTransactionCodesChangeType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodesChangeType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodesChangeType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodesChangeType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RotationRevenueTransactionCodesChangeType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRotationRevenueTransactionCodes returns the RotationRevenueTransactionCodes field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodesChangeType) GetRotationRevenueTransactionCodes() []string {
	if o == nil || IsNil(o.RotationRevenueTransactionCodes) {
		var ret []string
		return ret
	}
	return o.RotationRevenueTransactionCodes
}

// GetRotationRevenueTransactionCodesOk returns a tuple with the RotationRevenueTransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodesChangeType) GetRotationRevenueTransactionCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.RotationRevenueTransactionCodes) {
		return nil, false
	}
	return o.RotationRevenueTransactionCodes, true
}

// HasRotationRevenueTransactionCodes returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodesChangeType) HasRotationRevenueTransactionCodes() bool {
	if o != nil && !IsNil(o.RotationRevenueTransactionCodes) {
		return true
	}

	return false
}

// SetRotationRevenueTransactionCodes gets a reference to the given []string and assigns it to the RotationRevenueTransactionCodes field.
func (o *RotationRevenueTransactionCodesChangeType) SetRotationRevenueTransactionCodes(v []string) {
	o.RotationRevenueTransactionCodes = v
}

// GetNonRotationRevenueTransactionCodes returns the NonRotationRevenueTransactionCodes field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodesChangeType) GetNonRotationRevenueTransactionCodes() []string {
	if o == nil || IsNil(o.NonRotationRevenueTransactionCodes) {
		var ret []string
		return ret
	}
	return o.NonRotationRevenueTransactionCodes
}

// GetNonRotationRevenueTransactionCodesOk returns a tuple with the NonRotationRevenueTransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodesChangeType) GetNonRotationRevenueTransactionCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.NonRotationRevenueTransactionCodes) {
		return nil, false
	}
	return o.NonRotationRevenueTransactionCodes, true
}

// HasNonRotationRevenueTransactionCodes returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodesChangeType) HasNonRotationRevenueTransactionCodes() bool {
	if o != nil && !IsNil(o.NonRotationRevenueTransactionCodes) {
		return true
	}

	return false
}

// SetNonRotationRevenueTransactionCodes gets a reference to the given []string and assigns it to the NonRotationRevenueTransactionCodes field.
func (o *RotationRevenueTransactionCodesChangeType) SetNonRotationRevenueTransactionCodes(v []string) {
	o.NonRotationRevenueTransactionCodes = v
}

func (o RotationRevenueTransactionCodesChangeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RotationRevenueTransactionCodesChangeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RotationRevenueTransactionCodes) {
		toSerialize["rotationRevenueTransactionCodes"] = o.RotationRevenueTransactionCodes
	}
	if !IsNil(o.NonRotationRevenueTransactionCodes) {
		toSerialize["nonRotationRevenueTransactionCodes"] = o.NonRotationRevenueTransactionCodes
	}
	return toSerialize, nil
}

type NullableRotationRevenueTransactionCodesChangeType struct {
	value *RotationRevenueTransactionCodesChangeType
	isSet bool
}

func (v NullableRotationRevenueTransactionCodesChangeType) Get() *RotationRevenueTransactionCodesChangeType {
	return v.value
}

func (v *NullableRotationRevenueTransactionCodesChangeType) Set(val *RotationRevenueTransactionCodesChangeType) {
	v.value = val
	v.isSet = true
}

func (v NullableRotationRevenueTransactionCodesChangeType) IsSet() bool {
	return v.isSet
}

func (v *NullableRotationRevenueTransactionCodesChangeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRotationRevenueTransactionCodesChangeType(val *RotationRevenueTransactionCodesChangeType) *NullableRotationRevenueTransactionCodesChangeType {
	return &NullableRotationRevenueTransactionCodesChangeType{value: val, isSet: true}
}

func (v NullableRotationRevenueTransactionCodesChangeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRotationRevenueTransactionCodesChangeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


