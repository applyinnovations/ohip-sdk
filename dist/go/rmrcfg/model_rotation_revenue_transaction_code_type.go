/*
OPERA Cloud Room Rotation Configuration Service API

APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmrcfg

import (
	"encoding/json"
)

// checks if the RotationRevenueTransactionCodeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RotationRevenueTransactionCodeType{}

// RotationRevenueTransactionCodeType A revenue transaction code
type RotationRevenueTransactionCodeType struct {
	// Hotel code of revenue transaction code.
	HotelId *string `json:"hotelId,omitempty"`
	// Unique ID for the Transaction Code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Indicates that the transaction code is marked as a rotation revenue transaction code.
	RotationRevenue *bool `json:"rotationRevenue,omitempty"`
	// Description of the Transaction Code.
	Description *string `json:"description,omitempty"`
}

// NewRotationRevenueTransactionCodeType instantiates a new RotationRevenueTransactionCodeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRotationRevenueTransactionCodeType() *RotationRevenueTransactionCodeType {
	this := RotationRevenueTransactionCodeType{}
	var rotationRevenue bool = false
	this.RotationRevenue = &rotationRevenue
	return &this
}

// NewRotationRevenueTransactionCodeTypeWithDefaults instantiates a new RotationRevenueTransactionCodeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRotationRevenueTransactionCodeTypeWithDefaults() *RotationRevenueTransactionCodeType {
	this := RotationRevenueTransactionCodeType{}
	var rotationRevenue bool = false
	this.RotationRevenue = &rotationRevenue
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodeType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodeType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodeType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RotationRevenueTransactionCodeType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodeType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodeType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodeType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *RotationRevenueTransactionCodeType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetRotationRevenue returns the RotationRevenue field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodeType) GetRotationRevenue() bool {
	if o == nil || IsNil(o.RotationRevenue) {
		var ret bool
		return ret
	}
	return *o.RotationRevenue
}

// GetRotationRevenueOk returns a tuple with the RotationRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodeType) GetRotationRevenueOk() (*bool, bool) {
	if o == nil || IsNil(o.RotationRevenue) {
		return nil, false
	}
	return o.RotationRevenue, true
}

// HasRotationRevenue returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodeType) HasRotationRevenue() bool {
	if o != nil && !IsNil(o.RotationRevenue) {
		return true
	}

	return false
}

// SetRotationRevenue gets a reference to the given bool and assigns it to the RotationRevenue field.
func (o *RotationRevenueTransactionCodeType) SetRotationRevenue(v bool) {
	o.RotationRevenue = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RotationRevenueTransactionCodeType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RotationRevenueTransactionCodeType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RotationRevenueTransactionCodeType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RotationRevenueTransactionCodeType) SetDescription(v string) {
	o.Description = &v
}

func (o RotationRevenueTransactionCodeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RotationRevenueTransactionCodeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.RotationRevenue) {
		toSerialize["rotationRevenue"] = o.RotationRevenue
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableRotationRevenueTransactionCodeType struct {
	value *RotationRevenueTransactionCodeType
	isSet bool
}

func (v NullableRotationRevenueTransactionCodeType) Get() *RotationRevenueTransactionCodeType {
	return v.value
}

func (v *NullableRotationRevenueTransactionCodeType) Set(val *RotationRevenueTransactionCodeType) {
	v.value = val
	v.isSet = true
}

func (v NullableRotationRevenueTransactionCodeType) IsSet() bool {
	return v.isSet
}

func (v *NullableRotationRevenueTransactionCodeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRotationRevenueTransactionCodeType(val *RotationRevenueTransactionCodeType) *NullableRotationRevenueTransactionCodeType {
	return &NullableRotationRevenueTransactionCodeType{value: val, isSet: true}
}

func (v NullableRotationRevenueTransactionCodeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRotationRevenueTransactionCodeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


