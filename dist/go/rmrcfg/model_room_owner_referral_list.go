/*
OPERA Cloud Room Rotation Configuration Service API

APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmrcfg

import (
	"encoding/json"
)

// checks if the RoomOwnerReferralList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomOwnerReferralList{}

// RoomOwnerReferralList Room Owner Referral records.
type RoomOwnerReferralList struct {
	// Collection of Detailed information on Room Owner's Referral records.
	RoomOwnerReferrals []RoomOwnerReferralType `json:"roomOwnerReferrals,omitempty"`
}

// NewRoomOwnerReferralList instantiates a new RoomOwnerReferralList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomOwnerReferralList() *RoomOwnerReferralList {
	this := RoomOwnerReferralList{}
	return &this
}

// NewRoomOwnerReferralListWithDefaults instantiates a new RoomOwnerReferralList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomOwnerReferralListWithDefaults() *RoomOwnerReferralList {
	this := RoomOwnerReferralList{}
	return &this
}

// GetRoomOwnerReferrals returns the RoomOwnerReferrals field value if set, zero value otherwise.
func (o *RoomOwnerReferralList) GetRoomOwnerReferrals() []RoomOwnerReferralType {
	if o == nil || IsNil(o.RoomOwnerReferrals) {
		var ret []RoomOwnerReferralType
		return ret
	}
	return o.RoomOwnerReferrals
}

// GetRoomOwnerReferralsOk returns a tuple with the RoomOwnerReferrals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomOwnerReferralList) GetRoomOwnerReferralsOk() ([]RoomOwnerReferralType, bool) {
	if o == nil || IsNil(o.RoomOwnerReferrals) {
		return nil, false
	}
	return o.RoomOwnerReferrals, true
}

// HasRoomOwnerReferrals returns a boolean if a field has been set.
func (o *RoomOwnerReferralList) HasRoomOwnerReferrals() bool {
	if o != nil && !IsNil(o.RoomOwnerReferrals) {
		return true
	}

	return false
}

// SetRoomOwnerReferrals gets a reference to the given []RoomOwnerReferralType and assigns it to the RoomOwnerReferrals field.
func (o *RoomOwnerReferralList) SetRoomOwnerReferrals(v []RoomOwnerReferralType) {
	o.RoomOwnerReferrals = v
}

func (o RoomOwnerReferralList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomOwnerReferralList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomOwnerReferrals) {
		toSerialize["roomOwnerReferrals"] = o.RoomOwnerReferrals
	}
	return toSerialize, nil
}

type NullableRoomOwnerReferralList struct {
	value *RoomOwnerReferralList
	isSet bool
}

func (v NullableRoomOwnerReferralList) Get() *RoomOwnerReferralList {
	return v.value
}

func (v *NullableRoomOwnerReferralList) Set(val *RoomOwnerReferralList) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomOwnerReferralList) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomOwnerReferralList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomOwnerReferralList(val *RoomOwnerReferralList) *NullableRoomOwnerReferralList {
	return &NullableRoomOwnerReferralList{value: val, isSet: true}
}

func (v NullableRoomOwnerReferralList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomOwnerReferralList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


