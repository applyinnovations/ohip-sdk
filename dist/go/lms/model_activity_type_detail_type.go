/*
OPERA Cloud Leisure Management API

APIs to cater for external Leisure Management functionality integrated with OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lms

import (
	"encoding/json"
)

// checks if the ActivityTypeDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityTypeDetailType{}

// ActivityTypeDetailType Activity Type detail information.
type ActivityTypeDetailType struct {
	// Property to which the activity Type belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// Type for the activity Type.
	TypeCode *string `json:"typeCode,omitempty"`
	// Description for the Activity Type.
	Description *string `json:"description,omitempty"`
}

// NewActivityTypeDetailType instantiates a new ActivityTypeDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityTypeDetailType() *ActivityTypeDetailType {
	this := ActivityTypeDetailType{}
	return &this
}

// NewActivityTypeDetailTypeWithDefaults instantiates a new ActivityTypeDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityTypeDetailTypeWithDefaults() *ActivityTypeDetailType {
	this := ActivityTypeDetailType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ActivityTypeDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ActivityTypeDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ActivityTypeDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTypeCode returns the TypeCode field value if set, zero value otherwise.
func (o *ActivityTypeDetailType) GetTypeCode() string {
	if o == nil || IsNil(o.TypeCode) {
		var ret string
		return ret
	}
	return *o.TypeCode
}

// GetTypeCodeOk returns a tuple with the TypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeDetailType) GetTypeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TypeCode) {
		return nil, false
	}
	return o.TypeCode, true
}

// HasTypeCode returns a boolean if a field has been set.
func (o *ActivityTypeDetailType) HasTypeCode() bool {
	if o != nil && !IsNil(o.TypeCode) {
		return true
	}

	return false
}

// SetTypeCode gets a reference to the given string and assigns it to the TypeCode field.
func (o *ActivityTypeDetailType) SetTypeCode(v string) {
	o.TypeCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ActivityTypeDetailType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityTypeDetailType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ActivityTypeDetailType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ActivityTypeDetailType) SetDescription(v string) {
	o.Description = &v
}

func (o ActivityTypeDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityTypeDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TypeCode) {
		toSerialize["typeCode"] = o.TypeCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableActivityTypeDetailType struct {
	value *ActivityTypeDetailType
	isSet bool
}

func (v NullableActivityTypeDetailType) Get() *ActivityTypeDetailType {
	return v.value
}

func (v *NullableActivityTypeDetailType) Set(val *ActivityTypeDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityTypeDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityTypeDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityTypeDetailType(val *ActivityTypeDetailType) *NullableActivityTypeDetailType {
	return &NullableActivityTypeDetailType{value: val, isSet: true}
}

func (v NullableActivityTypeDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityTypeDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


