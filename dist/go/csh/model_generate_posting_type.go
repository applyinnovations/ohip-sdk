/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the GeneratePostingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratePostingType{}

// GeneratePostingType Financial posting with their breakup
type GeneratePostingType struct {
	Amount *CurrencyAmountType `json:"amount,omitempty"`
	// Generate transaction number for the Posting.
	ReferenceTransactionNo *float32 `json:"referenceTransactionNo,omitempty"`
	// Unique identifier for the Transaction code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Transaction Date.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Transaction Number for which request is being submitted.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
}

// NewGeneratePostingType instantiates a new GeneratePostingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratePostingType() *GeneratePostingType {
	this := GeneratePostingType{}
	return &this
}

// NewGeneratePostingTypeWithDefaults instantiates a new GeneratePostingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratePostingTypeWithDefaults() *GeneratePostingType {
	this := GeneratePostingType{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GeneratePostingType) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePostingType) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GeneratePostingType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *GeneratePostingType) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

// GetReferenceTransactionNo returns the ReferenceTransactionNo field value if set, zero value otherwise.
func (o *GeneratePostingType) GetReferenceTransactionNo() float32 {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		var ret float32
		return ret
	}
	return *o.ReferenceTransactionNo
}

// GetReferenceTransactionNoOk returns a tuple with the ReferenceTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePostingType) GetReferenceTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		return nil, false
	}
	return o.ReferenceTransactionNo, true
}

// HasReferenceTransactionNo returns a boolean if a field has been set.
func (o *GeneratePostingType) HasReferenceTransactionNo() bool {
	if o != nil && !IsNil(o.ReferenceTransactionNo) {
		return true
	}

	return false
}

// SetReferenceTransactionNo gets a reference to the given float32 and assigns it to the ReferenceTransactionNo field.
func (o *GeneratePostingType) SetReferenceTransactionNo(v float32) {
	o.ReferenceTransactionNo = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *GeneratePostingType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePostingType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *GeneratePostingType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *GeneratePostingType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *GeneratePostingType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePostingType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *GeneratePostingType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *GeneratePostingType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *GeneratePostingType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePostingType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *GeneratePostingType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *GeneratePostingType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

func (o GeneratePostingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratePostingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ReferenceTransactionNo) {
		toSerialize["referenceTransactionNo"] = o.ReferenceTransactionNo
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	return toSerialize, nil
}

type NullableGeneratePostingType struct {
	value *GeneratePostingType
	isSet bool
}

func (v NullableGeneratePostingType) Get() *GeneratePostingType {
	return v.value
}

func (v *NullableGeneratePostingType) Set(val *GeneratePostingType) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratePostingType) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratePostingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratePostingType(val *GeneratePostingType) *NullableGeneratePostingType {
	return &NullableGeneratePostingType{value: val, isSet: true}
}

func (v NullableGeneratePostingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratePostingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


