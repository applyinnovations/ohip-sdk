/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the TrxAdjustCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrxAdjustCriteriaType{}

// TrxAdjustCriteriaType struct for TrxAdjustCriteriaType
type TrxAdjustCriteriaType struct {
	// The AR Account Number for the Account.
	ARAccountNo *string `json:"aRAccountNo,omitempty"`
	// The AR Invoice Number for the Account.
	ARInvoiceNo *float32 `json:"aRInvoiceNo,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// List of Custom Charge Exemptions.
	CustomChargeExemptionDetails []CustomChargeExemptionType `json:"customChargeExemptionDetails,omitempty"`
	Details *AdjustmentDetailsType `json:"details,omitempty"`
	// Property code where the reservation transaction exists.
	HotelId *string `json:"hotelId,omitempty"`
	// Date of the Audit. This is used when postings are being created using the Income Audit functionality.
	IncomeAuditDate *string `json:"incomeAuditDate,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// The unique transaction number of this transaction.
	TransactionList []float32 `json:"transactionList,omitempty"`
}

// NewTrxAdjustCriteriaType instantiates a new TrxAdjustCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrxAdjustCriteriaType() *TrxAdjustCriteriaType {
	this := TrxAdjustCriteriaType{}
	return &this
}

// NewTrxAdjustCriteriaTypeWithDefaults instantiates a new TrxAdjustCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrxAdjustCriteriaTypeWithDefaults() *TrxAdjustCriteriaType {
	this := TrxAdjustCriteriaType{}
	return &this
}

// GetARAccountNo returns the ARAccountNo field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetARAccountNo() string {
	if o == nil || IsNil(o.ARAccountNo) {
		var ret string
		return ret
	}
	return *o.ARAccountNo
}

// GetARAccountNoOk returns a tuple with the ARAccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetARAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.ARAccountNo) {
		return nil, false
	}
	return o.ARAccountNo, true
}

// HasARAccountNo returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasARAccountNo() bool {
	if o != nil && !IsNil(o.ARAccountNo) {
		return true
	}

	return false
}

// SetARAccountNo gets a reference to the given string and assigns it to the ARAccountNo field.
func (o *TrxAdjustCriteriaType) SetARAccountNo(v string) {
	o.ARAccountNo = &v
}

// GetARInvoiceNo returns the ARInvoiceNo field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetARInvoiceNo() float32 {
	if o == nil || IsNil(o.ARInvoiceNo) {
		var ret float32
		return ret
	}
	return *o.ARInvoiceNo
}

// GetARInvoiceNoOk returns a tuple with the ARInvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetARInvoiceNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ARInvoiceNo) {
		return nil, false
	}
	return o.ARInvoiceNo, true
}

// HasARInvoiceNo returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasARInvoiceNo() bool {
	if o != nil && !IsNil(o.ARInvoiceNo) {
		return true
	}

	return false
}

// SetARInvoiceNo gets a reference to the given float32 and assigns it to the ARInvoiceNo field.
func (o *TrxAdjustCriteriaType) SetARInvoiceNo(v float32) {
	o.ARInvoiceNo = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *TrxAdjustCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetCustomChargeExemptionDetails returns the CustomChargeExemptionDetails field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetCustomChargeExemptionDetails() []CustomChargeExemptionType {
	if o == nil || IsNil(o.CustomChargeExemptionDetails) {
		var ret []CustomChargeExemptionType
		return ret
	}
	return o.CustomChargeExemptionDetails
}

// GetCustomChargeExemptionDetailsOk returns a tuple with the CustomChargeExemptionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetCustomChargeExemptionDetailsOk() ([]CustomChargeExemptionType, bool) {
	if o == nil || IsNil(o.CustomChargeExemptionDetails) {
		return nil, false
	}
	return o.CustomChargeExemptionDetails, true
}

// HasCustomChargeExemptionDetails returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasCustomChargeExemptionDetails() bool {
	if o != nil && !IsNil(o.CustomChargeExemptionDetails) {
		return true
	}

	return false
}

// SetCustomChargeExemptionDetails gets a reference to the given []CustomChargeExemptionType and assigns it to the CustomChargeExemptionDetails field.
func (o *TrxAdjustCriteriaType) SetCustomChargeExemptionDetails(v []CustomChargeExemptionType) {
	o.CustomChargeExemptionDetails = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetDetails() AdjustmentDetailsType {
	if o == nil || IsNil(o.Details) {
		var ret AdjustmentDetailsType
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetDetailsOk() (*AdjustmentDetailsType, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given AdjustmentDetailsType and assigns it to the Details field.
func (o *TrxAdjustCriteriaType) SetDetails(v AdjustmentDetailsType) {
	o.Details = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *TrxAdjustCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIncomeAuditDate returns the IncomeAuditDate field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetIncomeAuditDate() string {
	if o == nil || IsNil(o.IncomeAuditDate) {
		var ret string
		return ret
	}
	return *o.IncomeAuditDate
}

// GetIncomeAuditDateOk returns a tuple with the IncomeAuditDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetIncomeAuditDateOk() (*string, bool) {
	if o == nil || IsNil(o.IncomeAuditDate) {
		return nil, false
	}
	return o.IncomeAuditDate, true
}

// HasIncomeAuditDate returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasIncomeAuditDate() bool {
	if o != nil && !IsNil(o.IncomeAuditDate) {
		return true
	}

	return false
}

// SetIncomeAuditDate gets a reference to the given string and assigns it to the IncomeAuditDate field.
func (o *TrxAdjustCriteriaType) SetIncomeAuditDate(v string) {
	o.IncomeAuditDate = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *TrxAdjustCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetTransactionList returns the TransactionList field value if set, zero value otherwise.
func (o *TrxAdjustCriteriaType) GetTransactionList() []float32 {
	if o == nil || IsNil(o.TransactionList) {
		var ret []float32
		return ret
	}
	return o.TransactionList
}

// GetTransactionListOk returns a tuple with the TransactionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxAdjustCriteriaType) GetTransactionListOk() ([]float32, bool) {
	if o == nil || IsNil(o.TransactionList) {
		return nil, false
	}
	return o.TransactionList, true
}

// HasTransactionList returns a boolean if a field has been set.
func (o *TrxAdjustCriteriaType) HasTransactionList() bool {
	if o != nil && !IsNil(o.TransactionList) {
		return true
	}

	return false
}

// SetTransactionList gets a reference to the given []float32 and assigns it to the TransactionList field.
func (o *TrxAdjustCriteriaType) SetTransactionList(v []float32) {
	o.TransactionList = v
}

func (o TrxAdjustCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrxAdjustCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ARAccountNo) {
		toSerialize["aRAccountNo"] = o.ARAccountNo
	}
	if !IsNil(o.ARInvoiceNo) {
		toSerialize["aRInvoiceNo"] = o.ARInvoiceNo
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.CustomChargeExemptionDetails) {
		toSerialize["customChargeExemptionDetails"] = o.CustomChargeExemptionDetails
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.IncomeAuditDate) {
		toSerialize["incomeAuditDate"] = o.IncomeAuditDate
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.TransactionList) {
		toSerialize["transactionList"] = o.TransactionList
	}
	return toSerialize, nil
}

type NullableTrxAdjustCriteriaType struct {
	value *TrxAdjustCriteriaType
	isSet bool
}

func (v NullableTrxAdjustCriteriaType) Get() *TrxAdjustCriteriaType {
	return v.value
}

func (v *NullableTrxAdjustCriteriaType) Set(val *TrxAdjustCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableTrxAdjustCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableTrxAdjustCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrxAdjustCriteriaType(val *TrxAdjustCriteriaType) *NullableTrxAdjustCriteriaType {
	return &NullableTrxAdjustCriteriaType{value: val, isSet: true}
}

func (v NullableTrxAdjustCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrxAdjustCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


