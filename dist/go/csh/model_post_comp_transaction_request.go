/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the PostCompTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCompTransactionRequest{}

// PostCompTransactionRequest struct for PostCompTransactionRequest
type PostCompTransactionRequest struct {
	// Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
	HotelId *string `json:"hotelId,omitempty"`
	// Transaction Number for which request is being submitted.
	TrxNo *float32 `json:"trxNo,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPostCompTransactionRequest instantiates a new PostCompTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCompTransactionRequest() *PostCompTransactionRequest {
	this := PostCompTransactionRequest{}
	return &this
}

// NewPostCompTransactionRequestWithDefaults instantiates a new PostCompTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCompTransactionRequestWithDefaults() *PostCompTransactionRequest {
	this := PostCompTransactionRequest{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PostCompTransactionRequest) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCompTransactionRequest) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PostCompTransactionRequest) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PostCompTransactionRequest) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTrxNo returns the TrxNo field value if set, zero value otherwise.
func (o *PostCompTransactionRequest) GetTrxNo() float32 {
	if o == nil || IsNil(o.TrxNo) {
		var ret float32
		return ret
	}
	return *o.TrxNo
}

// GetTrxNoOk returns a tuple with the TrxNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCompTransactionRequest) GetTrxNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TrxNo) {
		return nil, false
	}
	return o.TrxNo, true
}

// HasTrxNo returns a boolean if a field has been set.
func (o *PostCompTransactionRequest) HasTrxNo() bool {
	if o != nil && !IsNil(o.TrxNo) {
		return true
	}

	return false
}

// SetTrxNo gets a reference to the given float32 and assigns it to the TrxNo field.
func (o *PostCompTransactionRequest) SetTrxNo(v float32) {
	o.TrxNo = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostCompTransactionRequest) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCompTransactionRequest) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostCompTransactionRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *PostCompTransactionRequest) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostCompTransactionRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCompTransactionRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostCompTransactionRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PostCompTransactionRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PostCompTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCompTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TrxNo) {
		toSerialize["trxNo"] = o.TrxNo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostCompTransactionRequest struct {
	value *PostCompTransactionRequest
	isSet bool
}

func (v NullablePostCompTransactionRequest) Get() *PostCompTransactionRequest {
	return v.value
}

func (v *NullablePostCompTransactionRequest) Set(val *PostCompTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCompTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCompTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCompTransactionRequest(val *PostCompTransactionRequest) *NullablePostCompTransactionRequest {
	return &NullablePostCompTransactionRequest{value: val, isSet: true}
}

func (v NullablePostCompTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCompTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


