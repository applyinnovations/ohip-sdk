/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the PostedBillingChargesInBatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostedBillingChargesInBatch{}

// PostedBillingChargesInBatch Operation response to post billing charge with list of reservations.
type PostedBillingChargesInBatch struct {
	Links []InstanceLink `json:"links,omitempty"`
	// Information regarding charges in batch result for each reservation.
	ReservationBatchChargeInfoList []ReservationChargesInBatchInfoType `json:"reservationBatchChargeInfoList,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPostedBillingChargesInBatch instantiates a new PostedBillingChargesInBatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostedBillingChargesInBatch() *PostedBillingChargesInBatch {
	this := PostedBillingChargesInBatch{}
	return &this
}

// NewPostedBillingChargesInBatchWithDefaults instantiates a new PostedBillingChargesInBatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostedBillingChargesInBatchWithDefaults() *PostedBillingChargesInBatch {
	this := PostedBillingChargesInBatch{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostedBillingChargesInBatch) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostedBillingChargesInBatch) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostedBillingChargesInBatch) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *PostedBillingChargesInBatch) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetReservationBatchChargeInfoList returns the ReservationBatchChargeInfoList field value if set, zero value otherwise.
func (o *PostedBillingChargesInBatch) GetReservationBatchChargeInfoList() []ReservationChargesInBatchInfoType {
	if o == nil || IsNil(o.ReservationBatchChargeInfoList) {
		var ret []ReservationChargesInBatchInfoType
		return ret
	}
	return o.ReservationBatchChargeInfoList
}

// GetReservationBatchChargeInfoListOk returns a tuple with the ReservationBatchChargeInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostedBillingChargesInBatch) GetReservationBatchChargeInfoListOk() ([]ReservationChargesInBatchInfoType, bool) {
	if o == nil || IsNil(o.ReservationBatchChargeInfoList) {
		return nil, false
	}
	return o.ReservationBatchChargeInfoList, true
}

// HasReservationBatchChargeInfoList returns a boolean if a field has been set.
func (o *PostedBillingChargesInBatch) HasReservationBatchChargeInfoList() bool {
	if o != nil && !IsNil(o.ReservationBatchChargeInfoList) {
		return true
	}

	return false
}

// SetReservationBatchChargeInfoList gets a reference to the given []ReservationChargesInBatchInfoType and assigns it to the ReservationBatchChargeInfoList field.
func (o *PostedBillingChargesInBatch) SetReservationBatchChargeInfoList(v []ReservationChargesInBatchInfoType) {
	o.ReservationBatchChargeInfoList = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostedBillingChargesInBatch) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostedBillingChargesInBatch) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostedBillingChargesInBatch) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PostedBillingChargesInBatch) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PostedBillingChargesInBatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostedBillingChargesInBatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ReservationBatchChargeInfoList) {
		toSerialize["reservationBatchChargeInfoList"] = o.ReservationBatchChargeInfoList
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostedBillingChargesInBatch struct {
	value *PostedBillingChargesInBatch
	isSet bool
}

func (v NullablePostedBillingChargesInBatch) Get() *PostedBillingChargesInBatch {
	return v.value
}

func (v *NullablePostedBillingChargesInBatch) Set(val *PostedBillingChargesInBatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePostedBillingChargesInBatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePostedBillingChargesInBatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostedBillingChargesInBatch(val *PostedBillingChargesInBatch) *NullablePostedBillingChargesInBatch {
	return &NullablePostedBillingChargesInBatch{value: val, isSet: true}
}

func (v NullablePostedBillingChargesInBatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostedBillingChargesInBatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


