/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the CreditCardInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditCardInfo{}

// CreditCardInfo Information on a credit card for the customer.
type CreditCardInfo struct {
	CardNumberMasked *string `json:"cardNumberMasked,omitempty"`
	CardNumberLast4Digits *string `json:"cardNumberLast4Digits,omitempty"`
	// Expiration date in string representation.
	ExpirationDateString *string `json:"expirationDateString,omitempty"`
	// Masked Expiration date of the credit card
	ExpirationDateMasked *string `json:"expirationDateMasked,omitempty"`
	CardHolderName *string `json:"cardHolderName,omitempty"`
	CardType *CardTypeType `json:"cardType,omitempty"`
	CardId *UniqueIDType `json:"cardId,omitempty"`
}

// NewCreditCardInfo instantiates a new CreditCardInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardInfo() *CreditCardInfo {
	this := CreditCardInfo{}
	return &this
}

// NewCreditCardInfoWithDefaults instantiates a new CreditCardInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardInfoWithDefaults() *CreditCardInfo {
	this := CreditCardInfo{}
	return &this
}

// GetCardNumberMasked returns the CardNumberMasked field value if set, zero value otherwise.
func (o *CreditCardInfo) GetCardNumberMasked() string {
	if o == nil || IsNil(o.CardNumberMasked) {
		var ret string
		return ret
	}
	return *o.CardNumberMasked
}

// GetCardNumberMaskedOk returns a tuple with the CardNumberMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetCardNumberMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumberMasked) {
		return nil, false
	}
	return o.CardNumberMasked, true
}

// HasCardNumberMasked returns a boolean if a field has been set.
func (o *CreditCardInfo) HasCardNumberMasked() bool {
	if o != nil && !IsNil(o.CardNumberMasked) {
		return true
	}

	return false
}

// SetCardNumberMasked gets a reference to the given string and assigns it to the CardNumberMasked field.
func (o *CreditCardInfo) SetCardNumberMasked(v string) {
	o.CardNumberMasked = &v
}

// GetCardNumberLast4Digits returns the CardNumberLast4Digits field value if set, zero value otherwise.
func (o *CreditCardInfo) GetCardNumberLast4Digits() string {
	if o == nil || IsNil(o.CardNumberLast4Digits) {
		var ret string
		return ret
	}
	return *o.CardNumberLast4Digits
}

// GetCardNumberLast4DigitsOk returns a tuple with the CardNumberLast4Digits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetCardNumberLast4DigitsOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumberLast4Digits) {
		return nil, false
	}
	return o.CardNumberLast4Digits, true
}

// HasCardNumberLast4Digits returns a boolean if a field has been set.
func (o *CreditCardInfo) HasCardNumberLast4Digits() bool {
	if o != nil && !IsNil(o.CardNumberLast4Digits) {
		return true
	}

	return false
}

// SetCardNumberLast4Digits gets a reference to the given string and assigns it to the CardNumberLast4Digits field.
func (o *CreditCardInfo) SetCardNumberLast4Digits(v string) {
	o.CardNumberLast4Digits = &v
}

// GetExpirationDateString returns the ExpirationDateString field value if set, zero value otherwise.
func (o *CreditCardInfo) GetExpirationDateString() string {
	if o == nil || IsNil(o.ExpirationDateString) {
		var ret string
		return ret
	}
	return *o.ExpirationDateString
}

// GetExpirationDateStringOk returns a tuple with the ExpirationDateString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetExpirationDateStringOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDateString) {
		return nil, false
	}
	return o.ExpirationDateString, true
}

// HasExpirationDateString returns a boolean if a field has been set.
func (o *CreditCardInfo) HasExpirationDateString() bool {
	if o != nil && !IsNil(o.ExpirationDateString) {
		return true
	}

	return false
}

// SetExpirationDateString gets a reference to the given string and assigns it to the ExpirationDateString field.
func (o *CreditCardInfo) SetExpirationDateString(v string) {
	o.ExpirationDateString = &v
}

// GetExpirationDateMasked returns the ExpirationDateMasked field value if set, zero value otherwise.
func (o *CreditCardInfo) GetExpirationDateMasked() string {
	if o == nil || IsNil(o.ExpirationDateMasked) {
		var ret string
		return ret
	}
	return *o.ExpirationDateMasked
}

// GetExpirationDateMaskedOk returns a tuple with the ExpirationDateMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetExpirationDateMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDateMasked) {
		return nil, false
	}
	return o.ExpirationDateMasked, true
}

// HasExpirationDateMasked returns a boolean if a field has been set.
func (o *CreditCardInfo) HasExpirationDateMasked() bool {
	if o != nil && !IsNil(o.ExpirationDateMasked) {
		return true
	}

	return false
}

// SetExpirationDateMasked gets a reference to the given string and assigns it to the ExpirationDateMasked field.
func (o *CreditCardInfo) SetExpirationDateMasked(v string) {
	o.ExpirationDateMasked = &v
}

// GetCardHolderName returns the CardHolderName field value if set, zero value otherwise.
func (o *CreditCardInfo) GetCardHolderName() string {
	if o == nil || IsNil(o.CardHolderName) {
		var ret string
		return ret
	}
	return *o.CardHolderName
}

// GetCardHolderNameOk returns a tuple with the CardHolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetCardHolderNameOk() (*string, bool) {
	if o == nil || IsNil(o.CardHolderName) {
		return nil, false
	}
	return o.CardHolderName, true
}

// HasCardHolderName returns a boolean if a field has been set.
func (o *CreditCardInfo) HasCardHolderName() bool {
	if o != nil && !IsNil(o.CardHolderName) {
		return true
	}

	return false
}

// SetCardHolderName gets a reference to the given string and assigns it to the CardHolderName field.
func (o *CreditCardInfo) SetCardHolderName(v string) {
	o.CardHolderName = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *CreditCardInfo) GetCardType() CardTypeType {
	if o == nil || IsNil(o.CardType) {
		var ret CardTypeType
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetCardTypeOk() (*CardTypeType, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *CreditCardInfo) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given CardTypeType and assigns it to the CardType field.
func (o *CreditCardInfo) SetCardType(v CardTypeType) {
	o.CardType = &v
}

// GetCardId returns the CardId field value if set, zero value otherwise.
func (o *CreditCardInfo) GetCardId() UniqueIDType {
	if o == nil || IsNil(o.CardId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CardId
}

// GetCardIdOk returns a tuple with the CardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardInfo) GetCardIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CardId) {
		return nil, false
	}
	return o.CardId, true
}

// HasCardId returns a boolean if a field has been set.
func (o *CreditCardInfo) HasCardId() bool {
	if o != nil && !IsNil(o.CardId) {
		return true
	}

	return false
}

// SetCardId gets a reference to the given UniqueIDType and assigns it to the CardId field.
func (o *CreditCardInfo) SetCardId(v UniqueIDType) {
	o.CardId = &v
}

func (o CreditCardInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditCardInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardNumberMasked) {
		toSerialize["cardNumberMasked"] = o.CardNumberMasked
	}
	if !IsNil(o.CardNumberLast4Digits) {
		toSerialize["cardNumberLast4Digits"] = o.CardNumberLast4Digits
	}
	if !IsNil(o.ExpirationDateString) {
		toSerialize["expirationDateString"] = o.ExpirationDateString
	}
	if !IsNil(o.ExpirationDateMasked) {
		toSerialize["expirationDateMasked"] = o.ExpirationDateMasked
	}
	if !IsNil(o.CardHolderName) {
		toSerialize["cardHolderName"] = o.CardHolderName
	}
	if !IsNil(o.CardType) {
		toSerialize["cardType"] = o.CardType
	}
	if !IsNil(o.CardId) {
		toSerialize["cardId"] = o.CardId
	}
	return toSerialize, nil
}

type NullableCreditCardInfo struct {
	value *CreditCardInfo
	isSet bool
}

func (v NullableCreditCardInfo) Get() *CreditCardInfo {
	return v.value
}

func (v *NullableCreditCardInfo) Set(val *CreditCardInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardInfo(val *CreditCardInfo) *NullableCreditCardInfo {
	return &NullableCreditCardInfo{value: val, isSet: true}
}

func (v NullableCreditCardInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


