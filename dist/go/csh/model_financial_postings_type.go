/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the FinancialPostingsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialPostingsType{}

// FinancialPostingsType Collection of Reservations and their information.
type FinancialPostingsType struct {
	// Details of the transaction(Posting).
	Postings []DetailPostingType `json:"postings,omitempty"`
	// List of Transaction codes info.
	TransactionCodes []TrxInfoType `json:"transactionCodes,omitempty"`
	TotalDebit *CurrencyAmountType `json:"totalDebit,omitempty"`
	TotalCredit *CurrencyAmountType `json:"totalCredit,omitempty"`
	OverallTotal *CurrencyAmountType `json:"overallTotal,omitempty"`
	TotalForAllPages *CurrencyAmountType `json:"totalForAllPages,omitempty"`
	// Indicates the number of journal entries.
	TotalEntriesCount *int32 `json:"totalEntriesCount,omitempty"`
}

// NewFinancialPostingsType instantiates a new FinancialPostingsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialPostingsType() *FinancialPostingsType {
	this := FinancialPostingsType{}
	return &this
}

// NewFinancialPostingsTypeWithDefaults instantiates a new FinancialPostingsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialPostingsTypeWithDefaults() *FinancialPostingsType {
	this := FinancialPostingsType{}
	return &this
}

// GetPostings returns the Postings field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetPostings() []DetailPostingType {
	if o == nil || IsNil(o.Postings) {
		var ret []DetailPostingType
		return ret
	}
	return o.Postings
}

// GetPostingsOk returns a tuple with the Postings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetPostingsOk() ([]DetailPostingType, bool) {
	if o == nil || IsNil(o.Postings) {
		return nil, false
	}
	return o.Postings, true
}

// HasPostings returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasPostings() bool {
	if o != nil && !IsNil(o.Postings) {
		return true
	}

	return false
}

// SetPostings gets a reference to the given []DetailPostingType and assigns it to the Postings field.
func (o *FinancialPostingsType) SetPostings(v []DetailPostingType) {
	o.Postings = v
}

// GetTransactionCodes returns the TransactionCodes field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetTransactionCodes() []TrxInfoType {
	if o == nil || IsNil(o.TransactionCodes) {
		var ret []TrxInfoType
		return ret
	}
	return o.TransactionCodes
}

// GetTransactionCodesOk returns a tuple with the TransactionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetTransactionCodesOk() ([]TrxInfoType, bool) {
	if o == nil || IsNil(o.TransactionCodes) {
		return nil, false
	}
	return o.TransactionCodes, true
}

// HasTransactionCodes returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasTransactionCodes() bool {
	if o != nil && !IsNil(o.TransactionCodes) {
		return true
	}

	return false
}

// SetTransactionCodes gets a reference to the given []TrxInfoType and assigns it to the TransactionCodes field.
func (o *FinancialPostingsType) SetTransactionCodes(v []TrxInfoType) {
	o.TransactionCodes = v
}

// GetTotalDebit returns the TotalDebit field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetTotalDebit() CurrencyAmountType {
	if o == nil || IsNil(o.TotalDebit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalDebit
}

// GetTotalDebitOk returns a tuple with the TotalDebit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetTotalDebitOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalDebit) {
		return nil, false
	}
	return o.TotalDebit, true
}

// HasTotalDebit returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasTotalDebit() bool {
	if o != nil && !IsNil(o.TotalDebit) {
		return true
	}

	return false
}

// SetTotalDebit gets a reference to the given CurrencyAmountType and assigns it to the TotalDebit field.
func (o *FinancialPostingsType) SetTotalDebit(v CurrencyAmountType) {
	o.TotalDebit = &v
}

// GetTotalCredit returns the TotalCredit field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetTotalCredit() CurrencyAmountType {
	if o == nil || IsNil(o.TotalCredit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalCredit
}

// GetTotalCreditOk returns a tuple with the TotalCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetTotalCreditOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalCredit) {
		return nil, false
	}
	return o.TotalCredit, true
}

// HasTotalCredit returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasTotalCredit() bool {
	if o != nil && !IsNil(o.TotalCredit) {
		return true
	}

	return false
}

// SetTotalCredit gets a reference to the given CurrencyAmountType and assigns it to the TotalCredit field.
func (o *FinancialPostingsType) SetTotalCredit(v CurrencyAmountType) {
	o.TotalCredit = &v
}

// GetOverallTotal returns the OverallTotal field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetOverallTotal() CurrencyAmountType {
	if o == nil || IsNil(o.OverallTotal) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.OverallTotal
}

// GetOverallTotalOk returns a tuple with the OverallTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetOverallTotalOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.OverallTotal) {
		return nil, false
	}
	return o.OverallTotal, true
}

// HasOverallTotal returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasOverallTotal() bool {
	if o != nil && !IsNil(o.OverallTotal) {
		return true
	}

	return false
}

// SetOverallTotal gets a reference to the given CurrencyAmountType and assigns it to the OverallTotal field.
func (o *FinancialPostingsType) SetOverallTotal(v CurrencyAmountType) {
	o.OverallTotal = &v
}

// GetTotalForAllPages returns the TotalForAllPages field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetTotalForAllPages() CurrencyAmountType {
	if o == nil || IsNil(o.TotalForAllPages) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalForAllPages
}

// GetTotalForAllPagesOk returns a tuple with the TotalForAllPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetTotalForAllPagesOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalForAllPages) {
		return nil, false
	}
	return o.TotalForAllPages, true
}

// HasTotalForAllPages returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasTotalForAllPages() bool {
	if o != nil && !IsNil(o.TotalForAllPages) {
		return true
	}

	return false
}

// SetTotalForAllPages gets a reference to the given CurrencyAmountType and assigns it to the TotalForAllPages field.
func (o *FinancialPostingsType) SetTotalForAllPages(v CurrencyAmountType) {
	o.TotalForAllPages = &v
}

// GetTotalEntriesCount returns the TotalEntriesCount field value if set, zero value otherwise.
func (o *FinancialPostingsType) GetTotalEntriesCount() int32 {
	if o == nil || IsNil(o.TotalEntriesCount) {
		var ret int32
		return ret
	}
	return *o.TotalEntriesCount
}

// GetTotalEntriesCountOk returns a tuple with the TotalEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialPostingsType) GetTotalEntriesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalEntriesCount) {
		return nil, false
	}
	return o.TotalEntriesCount, true
}

// HasTotalEntriesCount returns a boolean if a field has been set.
func (o *FinancialPostingsType) HasTotalEntriesCount() bool {
	if o != nil && !IsNil(o.TotalEntriesCount) {
		return true
	}

	return false
}

// SetTotalEntriesCount gets a reference to the given int32 and assigns it to the TotalEntriesCount field.
func (o *FinancialPostingsType) SetTotalEntriesCount(v int32) {
	o.TotalEntriesCount = &v
}

func (o FinancialPostingsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialPostingsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Postings) {
		toSerialize["postings"] = o.Postings
	}
	if !IsNil(o.TransactionCodes) {
		toSerialize["transactionCodes"] = o.TransactionCodes
	}
	if !IsNil(o.TotalDebit) {
		toSerialize["totalDebit"] = o.TotalDebit
	}
	if !IsNil(o.TotalCredit) {
		toSerialize["totalCredit"] = o.TotalCredit
	}
	if !IsNil(o.OverallTotal) {
		toSerialize["overallTotal"] = o.OverallTotal
	}
	if !IsNil(o.TotalForAllPages) {
		toSerialize["totalForAllPages"] = o.TotalForAllPages
	}
	if !IsNil(o.TotalEntriesCount) {
		toSerialize["totalEntriesCount"] = o.TotalEntriesCount
	}
	return toSerialize, nil
}

type NullableFinancialPostingsType struct {
	value *FinancialPostingsType
	isSet bool
}

func (v NullableFinancialPostingsType) Get() *FinancialPostingsType {
	return v.value
}

func (v *NullableFinancialPostingsType) Set(val *FinancialPostingsType) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialPostingsType) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialPostingsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialPostingsType(val *FinancialPostingsType) *NullableFinancialPostingsType {
	return &NullableFinancialPostingsType{value: val, isSet: true}
}

func (v NullableFinancialPostingsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialPostingsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


