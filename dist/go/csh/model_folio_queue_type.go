/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the FolioQueueType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioQueueType{}

// FolioQueueType List of charges that will be posted against the transaction code based from the test criteria.
type FolioQueueType struct {
	// Folio Type to be assigned to generated folio. This is a country requirement.
	FolioType *string `json:"folioType,omitempty"`
	// Fiscal folio flag to call fiscal folio web service after folio generation.
	GenerateFiscalFolio *bool `json:"generateFiscalFolio,omitempty"`
	// Folio Queue name.
	QueueName *string `json:"queueName,omitempty"`
}

// NewFolioQueueType instantiates a new FolioQueueType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioQueueType() *FolioQueueType {
	this := FolioQueueType{}
	return &this
}

// NewFolioQueueTypeWithDefaults instantiates a new FolioQueueType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioQueueTypeWithDefaults() *FolioQueueType {
	this := FolioQueueType{}
	return &this
}

// GetFolioType returns the FolioType field value if set, zero value otherwise.
func (o *FolioQueueType) GetFolioType() string {
	if o == nil || IsNil(o.FolioType) {
		var ret string
		return ret
	}
	return *o.FolioType
}

// GetFolioTypeOk returns a tuple with the FolioType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioQueueType) GetFolioTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FolioType) {
		return nil, false
	}
	return o.FolioType, true
}

// HasFolioType returns a boolean if a field has been set.
func (o *FolioQueueType) HasFolioType() bool {
	if o != nil && !IsNil(o.FolioType) {
		return true
	}

	return false
}

// SetFolioType gets a reference to the given string and assigns it to the FolioType field.
func (o *FolioQueueType) SetFolioType(v string) {
	o.FolioType = &v
}

// GetGenerateFiscalFolio returns the GenerateFiscalFolio field value if set, zero value otherwise.
func (o *FolioQueueType) GetGenerateFiscalFolio() bool {
	if o == nil || IsNil(o.GenerateFiscalFolio) {
		var ret bool
		return ret
	}
	return *o.GenerateFiscalFolio
}

// GetGenerateFiscalFolioOk returns a tuple with the GenerateFiscalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioQueueType) GetGenerateFiscalFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.GenerateFiscalFolio) {
		return nil, false
	}
	return o.GenerateFiscalFolio, true
}

// HasGenerateFiscalFolio returns a boolean if a field has been set.
func (o *FolioQueueType) HasGenerateFiscalFolio() bool {
	if o != nil && !IsNil(o.GenerateFiscalFolio) {
		return true
	}

	return false
}

// SetGenerateFiscalFolio gets a reference to the given bool and assigns it to the GenerateFiscalFolio field.
func (o *FolioQueueType) SetGenerateFiscalFolio(v bool) {
	o.GenerateFiscalFolio = &v
}

// GetQueueName returns the QueueName field value if set, zero value otherwise.
func (o *FolioQueueType) GetQueueName() string {
	if o == nil || IsNil(o.QueueName) {
		var ret string
		return ret
	}
	return *o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioQueueType) GetQueueNameOk() (*string, bool) {
	if o == nil || IsNil(o.QueueName) {
		return nil, false
	}
	return o.QueueName, true
}

// HasQueueName returns a boolean if a field has been set.
func (o *FolioQueueType) HasQueueName() bool {
	if o != nil && !IsNil(o.QueueName) {
		return true
	}

	return false
}

// SetQueueName gets a reference to the given string and assigns it to the QueueName field.
func (o *FolioQueueType) SetQueueName(v string) {
	o.QueueName = &v
}

func (o FolioQueueType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioQueueType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioType) {
		toSerialize["folioType"] = o.FolioType
	}
	if !IsNil(o.GenerateFiscalFolio) {
		toSerialize["generateFiscalFolio"] = o.GenerateFiscalFolio
	}
	if !IsNil(o.QueueName) {
		toSerialize["queueName"] = o.QueueName
	}
	return toSerialize, nil
}

type NullableFolioQueueType struct {
	value *FolioQueueType
	isSet bool
}

func (v NullableFolioQueueType) Get() *FolioQueueType {
	return v.value
}

func (v *NullableFolioQueueType) Set(val *FolioQueueType) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioQueueType) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioQueueType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioQueueType(val *FolioQueueType) *NullableFolioQueueType {
	return &NullableFolioQueueType{value: val, isSet: true}
}

func (v NullableFolioQueueType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioQueueType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


