/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the BulkPrepaidCardsStatusType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkPrepaidCardsStatusType{}

// BulkPrepaidCardsStatusType Provides status information for bulk Prepaid Cards.
type BulkPrepaidCardsStatusType struct {
	// A unique identifying value assigned to the card.
	RecordNumber *int32 `json:"recordNumber,omitempty"`
	// Status of prepaid card.
	ResponseCode *string `json:"responseCode,omitempty"`
	// Status of prepaid card.
	ResponseText *string `json:"responseText,omitempty"`
}

// NewBulkPrepaidCardsStatusType instantiates a new BulkPrepaidCardsStatusType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkPrepaidCardsStatusType() *BulkPrepaidCardsStatusType {
	this := BulkPrepaidCardsStatusType{}
	return &this
}

// NewBulkPrepaidCardsStatusTypeWithDefaults instantiates a new BulkPrepaidCardsStatusType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkPrepaidCardsStatusTypeWithDefaults() *BulkPrepaidCardsStatusType {
	this := BulkPrepaidCardsStatusType{}
	return &this
}

// GetRecordNumber returns the RecordNumber field value if set, zero value otherwise.
func (o *BulkPrepaidCardsStatusType) GetRecordNumber() int32 {
	if o == nil || IsNil(o.RecordNumber) {
		var ret int32
		return ret
	}
	return *o.RecordNumber
}

// GetRecordNumberOk returns a tuple with the RecordNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkPrepaidCardsStatusType) GetRecordNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.RecordNumber) {
		return nil, false
	}
	return o.RecordNumber, true
}

// HasRecordNumber returns a boolean if a field has been set.
func (o *BulkPrepaidCardsStatusType) HasRecordNumber() bool {
	if o != nil && !IsNil(o.RecordNumber) {
		return true
	}

	return false
}

// SetRecordNumber gets a reference to the given int32 and assigns it to the RecordNumber field.
func (o *BulkPrepaidCardsStatusType) SetRecordNumber(v int32) {
	o.RecordNumber = &v
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *BulkPrepaidCardsStatusType) GetResponseCode() string {
	if o == nil || IsNil(o.ResponseCode) {
		var ret string
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkPrepaidCardsStatusType) GetResponseCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseCode) {
		return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *BulkPrepaidCardsStatusType) HasResponseCode() bool {
	if o != nil && !IsNil(o.ResponseCode) {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given string and assigns it to the ResponseCode field.
func (o *BulkPrepaidCardsStatusType) SetResponseCode(v string) {
	o.ResponseCode = &v
}

// GetResponseText returns the ResponseText field value if set, zero value otherwise.
func (o *BulkPrepaidCardsStatusType) GetResponseText() string {
	if o == nil || IsNil(o.ResponseText) {
		var ret string
		return ret
	}
	return *o.ResponseText
}

// GetResponseTextOk returns a tuple with the ResponseText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkPrepaidCardsStatusType) GetResponseTextOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseText) {
		return nil, false
	}
	return o.ResponseText, true
}

// HasResponseText returns a boolean if a field has been set.
func (o *BulkPrepaidCardsStatusType) HasResponseText() bool {
	if o != nil && !IsNil(o.ResponseText) {
		return true
	}

	return false
}

// SetResponseText gets a reference to the given string and assigns it to the ResponseText field.
func (o *BulkPrepaidCardsStatusType) SetResponseText(v string) {
	o.ResponseText = &v
}

func (o BulkPrepaidCardsStatusType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkPrepaidCardsStatusType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordNumber) {
		toSerialize["recordNumber"] = o.RecordNumber
	}
	if !IsNil(o.ResponseCode) {
		toSerialize["responseCode"] = o.ResponseCode
	}
	if !IsNil(o.ResponseText) {
		toSerialize["responseText"] = o.ResponseText
	}
	return toSerialize, nil
}

type NullableBulkPrepaidCardsStatusType struct {
	value *BulkPrepaidCardsStatusType
	isSet bool
}

func (v NullableBulkPrepaidCardsStatusType) Get() *BulkPrepaidCardsStatusType {
	return v.value
}

func (v *NullableBulkPrepaidCardsStatusType) Set(val *BulkPrepaidCardsStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkPrepaidCardsStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkPrepaidCardsStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkPrepaidCardsStatusType(val *BulkPrepaidCardsStatusType) *NullableBulkPrepaidCardsStatusType {
	return &NullableBulkPrepaidCardsStatusType{value: val, isSet: true}
}

func (v NullableBulkPrepaidCardsStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkPrepaidCardsStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


