/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the ResvRoutingInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResvRoutingInfoType{}

// ResvRoutingInfoType A routing info object can either be of type Folio OR of type Room with its corresponding object.
type ResvRoutingInfoType struct {
	Comp *ResvRoutingCriteriaTypeComp `json:"comp,omitempty"`
	Folio *ResvRoutingCriteriaTypeFolio `json:"folio,omitempty"`
	// On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
	RefreshFolio *bool `json:"refreshFolio,omitempty"`
	Request *ResvRoutingCriteriaTypeRequest `json:"request,omitempty"`
	ReservationInfo *ReservationInfoType `json:"reservationInfo,omitempty"`
	Room *ResvRoutingCriteriaTypeRoom `json:"room,omitempty"`
}

// NewResvRoutingInfoType instantiates a new ResvRoutingInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResvRoutingInfoType() *ResvRoutingInfoType {
	this := ResvRoutingInfoType{}
	return &this
}

// NewResvRoutingInfoTypeWithDefaults instantiates a new ResvRoutingInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResvRoutingInfoTypeWithDefaults() *ResvRoutingInfoType {
	this := ResvRoutingInfoType{}
	return &this
}

// GetComp returns the Comp field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetComp() ResvRoutingCriteriaTypeComp {
	if o == nil || IsNil(o.Comp) {
		var ret ResvRoutingCriteriaTypeComp
		return ret
	}
	return *o.Comp
}

// GetCompOk returns a tuple with the Comp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetCompOk() (*ResvRoutingCriteriaTypeComp, bool) {
	if o == nil || IsNil(o.Comp) {
		return nil, false
	}
	return o.Comp, true
}

// HasComp returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasComp() bool {
	if o != nil && !IsNil(o.Comp) {
		return true
	}

	return false
}

// SetComp gets a reference to the given ResvRoutingCriteriaTypeComp and assigns it to the Comp field.
func (o *ResvRoutingInfoType) SetComp(v ResvRoutingCriteriaTypeComp) {
	o.Comp = &v
}

// GetFolio returns the Folio field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetFolio() ResvRoutingCriteriaTypeFolio {
	if o == nil || IsNil(o.Folio) {
		var ret ResvRoutingCriteriaTypeFolio
		return ret
	}
	return *o.Folio
}

// GetFolioOk returns a tuple with the Folio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetFolioOk() (*ResvRoutingCriteriaTypeFolio, bool) {
	if o == nil || IsNil(o.Folio) {
		return nil, false
	}
	return o.Folio, true
}

// HasFolio returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasFolio() bool {
	if o != nil && !IsNil(o.Folio) {
		return true
	}

	return false
}

// SetFolio gets a reference to the given ResvRoutingCriteriaTypeFolio and assigns it to the Folio field.
func (o *ResvRoutingInfoType) SetFolio(v ResvRoutingCriteriaTypeFolio) {
	o.Folio = &v
}

// GetRefreshFolio returns the RefreshFolio field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetRefreshFolio() bool {
	if o == nil || IsNil(o.RefreshFolio) {
		var ret bool
		return ret
	}
	return *o.RefreshFolio
}

// GetRefreshFolioOk returns a tuple with the RefreshFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetRefreshFolioOk() (*bool, bool) {
	if o == nil || IsNil(o.RefreshFolio) {
		return nil, false
	}
	return o.RefreshFolio, true
}

// HasRefreshFolio returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasRefreshFolio() bool {
	if o != nil && !IsNil(o.RefreshFolio) {
		return true
	}

	return false
}

// SetRefreshFolio gets a reference to the given bool and assigns it to the RefreshFolio field.
func (o *ResvRoutingInfoType) SetRefreshFolio(v bool) {
	o.RefreshFolio = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetRequest() ResvRoutingCriteriaTypeRequest {
	if o == nil || IsNil(o.Request) {
		var ret ResvRoutingCriteriaTypeRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetRequestOk() (*ResvRoutingCriteriaTypeRequest, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given ResvRoutingCriteriaTypeRequest and assigns it to the Request field.
func (o *ResvRoutingInfoType) SetRequest(v ResvRoutingCriteriaTypeRequest) {
	o.Request = &v
}

// GetReservationInfo returns the ReservationInfo field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetReservationInfo() ReservationInfoType {
	if o == nil || IsNil(o.ReservationInfo) {
		var ret ReservationInfoType
		return ret
	}
	return *o.ReservationInfo
}

// GetReservationInfoOk returns a tuple with the ReservationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetReservationInfoOk() (*ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfo) {
		return nil, false
	}
	return o.ReservationInfo, true
}

// HasReservationInfo returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasReservationInfo() bool {
	if o != nil && !IsNil(o.ReservationInfo) {
		return true
	}

	return false
}

// SetReservationInfo gets a reference to the given ReservationInfoType and assigns it to the ReservationInfo field.
func (o *ResvRoutingInfoType) SetReservationInfo(v ReservationInfoType) {
	o.ReservationInfo = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *ResvRoutingInfoType) GetRoom() ResvRoutingCriteriaTypeRoom {
	if o == nil || IsNil(o.Room) {
		var ret ResvRoutingCriteriaTypeRoom
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoType) GetRoomOk() (*ResvRoutingCriteriaTypeRoom, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *ResvRoutingInfoType) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given ResvRoutingCriteriaTypeRoom and assigns it to the Room field.
func (o *ResvRoutingInfoType) SetRoom(v ResvRoutingCriteriaTypeRoom) {
	o.Room = &v
}

func (o ResvRoutingInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResvRoutingInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comp) {
		toSerialize["comp"] = o.Comp
	}
	if !IsNil(o.Folio) {
		toSerialize["folio"] = o.Folio
	}
	if !IsNil(o.RefreshFolio) {
		toSerialize["refreshFolio"] = o.RefreshFolio
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.ReservationInfo) {
		toSerialize["reservationInfo"] = o.ReservationInfo
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	return toSerialize, nil
}

type NullableResvRoutingInfoType struct {
	value *ResvRoutingInfoType
	isSet bool
}

func (v NullableResvRoutingInfoType) Get() *ResvRoutingInfoType {
	return v.value
}

func (v *NullableResvRoutingInfoType) Set(val *ResvRoutingInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableResvRoutingInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableResvRoutingInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResvRoutingInfoType(val *ResvRoutingInfoType) *NullableResvRoutingInfoType {
	return &NullableResvRoutingInfoType{value: val, isSet: true}
}

func (v NullableResvRoutingInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResvRoutingInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


