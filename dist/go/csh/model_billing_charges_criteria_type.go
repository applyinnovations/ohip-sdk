/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the BillingChargesCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingChargesCriteriaType{}

// BillingChargesCriteriaType Criteria type for posting charges.
type BillingChargesCriteriaType struct {
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// Collection of Charges to be posted.
	Charges []ChargeCriteriaType `json:"charges,omitempty"`
	// Property where the charges are to be posted.
	HotelId *string `json:"hotelId,omitempty"`
	// Date of the Audit. This is used when postings are being created using the Income Audit functionality.
	IncomeAuditDate *string `json:"incomeAuditDate,omitempty"`
	// Flag to indicate it is part of a PostIt Sale.
	PostIt *bool `json:"postIt,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Flag to indicate that current posting is a Welcome Offer Posting.
	WelcomeOfferPosting *bool `json:"welcomeOfferPosting,omitempty"`
}

// NewBillingChargesCriteriaType instantiates a new BillingChargesCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingChargesCriteriaType() *BillingChargesCriteriaType {
	this := BillingChargesCriteriaType{}
	return &this
}

// NewBillingChargesCriteriaTypeWithDefaults instantiates a new BillingChargesCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingChargesCriteriaTypeWithDefaults() *BillingChargesCriteriaType {
	this := BillingChargesCriteriaType{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *BillingChargesCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetCharges returns the Charges field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetCharges() []ChargeCriteriaType {
	if o == nil || IsNil(o.Charges) {
		var ret []ChargeCriteriaType
		return ret
	}
	return o.Charges
}

// GetChargesOk returns a tuple with the Charges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetChargesOk() ([]ChargeCriteriaType, bool) {
	if o == nil || IsNil(o.Charges) {
		return nil, false
	}
	return o.Charges, true
}

// HasCharges returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasCharges() bool {
	if o != nil && !IsNil(o.Charges) {
		return true
	}

	return false
}

// SetCharges gets a reference to the given []ChargeCriteriaType and assigns it to the Charges field.
func (o *BillingChargesCriteriaType) SetCharges(v []ChargeCriteriaType) {
	o.Charges = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BillingChargesCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIncomeAuditDate returns the IncomeAuditDate field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetIncomeAuditDate() string {
	if o == nil || IsNil(o.IncomeAuditDate) {
		var ret string
		return ret
	}
	return *o.IncomeAuditDate
}

// GetIncomeAuditDateOk returns a tuple with the IncomeAuditDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetIncomeAuditDateOk() (*string, bool) {
	if o == nil || IsNil(o.IncomeAuditDate) {
		return nil, false
	}
	return o.IncomeAuditDate, true
}

// HasIncomeAuditDate returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasIncomeAuditDate() bool {
	if o != nil && !IsNil(o.IncomeAuditDate) {
		return true
	}

	return false
}

// SetIncomeAuditDate gets a reference to the given string and assigns it to the IncomeAuditDate field.
func (o *BillingChargesCriteriaType) SetIncomeAuditDate(v string) {
	o.IncomeAuditDate = &v
}

// GetPostIt returns the PostIt field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetPostIt() bool {
	if o == nil || IsNil(o.PostIt) {
		var ret bool
		return ret
	}
	return *o.PostIt
}

// GetPostItOk returns a tuple with the PostIt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetPostItOk() (*bool, bool) {
	if o == nil || IsNil(o.PostIt) {
		return nil, false
	}
	return o.PostIt, true
}

// HasPostIt returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasPostIt() bool {
	if o != nil && !IsNil(o.PostIt) {
		return true
	}

	return false
}

// SetPostIt gets a reference to the given bool and assigns it to the PostIt field.
func (o *BillingChargesCriteriaType) SetPostIt(v bool) {
	o.PostIt = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *BillingChargesCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetWelcomeOfferPosting returns the WelcomeOfferPosting field value if set, zero value otherwise.
func (o *BillingChargesCriteriaType) GetWelcomeOfferPosting() bool {
	if o == nil || IsNil(o.WelcomeOfferPosting) {
		var ret bool
		return ret
	}
	return *o.WelcomeOfferPosting
}

// GetWelcomeOfferPostingOk returns a tuple with the WelcomeOfferPosting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingChargesCriteriaType) GetWelcomeOfferPostingOk() (*bool, bool) {
	if o == nil || IsNil(o.WelcomeOfferPosting) {
		return nil, false
	}
	return o.WelcomeOfferPosting, true
}

// HasWelcomeOfferPosting returns a boolean if a field has been set.
func (o *BillingChargesCriteriaType) HasWelcomeOfferPosting() bool {
	if o != nil && !IsNil(o.WelcomeOfferPosting) {
		return true
	}

	return false
}

// SetWelcomeOfferPosting gets a reference to the given bool and assigns it to the WelcomeOfferPosting field.
func (o *BillingChargesCriteriaType) SetWelcomeOfferPosting(v bool) {
	o.WelcomeOfferPosting = &v
}

func (o BillingChargesCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingChargesCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.Charges) {
		toSerialize["charges"] = o.Charges
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.IncomeAuditDate) {
		toSerialize["incomeAuditDate"] = o.IncomeAuditDate
	}
	if !IsNil(o.PostIt) {
		toSerialize["postIt"] = o.PostIt
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.WelcomeOfferPosting) {
		toSerialize["welcomeOfferPosting"] = o.WelcomeOfferPosting
	}
	return toSerialize, nil
}

type NullableBillingChargesCriteriaType struct {
	value *BillingChargesCriteriaType
	isSet bool
}

func (v NullableBillingChargesCriteriaType) Get() *BillingChargesCriteriaType {
	return v.value
}

func (v *NullableBillingChargesCriteriaType) Set(val *BillingChargesCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingChargesCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingChargesCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingChargesCriteriaType(val *BillingChargesCriteriaType) *NullableBillingChargesCriteriaType {
	return &NullableBillingChargesCriteriaType{value: val, isSet: true}
}

func (v NullableBillingChargesCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingChargesCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


