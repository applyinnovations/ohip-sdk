/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the MaturedDepositType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaturedDepositType{}

// MaturedDepositType Matured Deposits detail.
type MaturedDepositType struct {
	CashierInfo *CashierInfoType `json:"cashierInfo,omitempty"`
	// The folio window where this authorization is applied.
	FolioView *int32 `json:"folioView,omitempty"`
	GuestCreditAmount *CurrencyAmountType `json:"guestCreditAmount,omitempty"`
	// User defined reference of the matured deposit.
	Reference *string `json:"reference,omitempty"`
	// User defined remarks of the matured deposit.
	Remark *string `json:"remark,omitempty"`
	Transaction *TransactionType `json:"transaction,omitempty"`
}

// NewMaturedDepositType instantiates a new MaturedDepositType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaturedDepositType() *MaturedDepositType {
	this := MaturedDepositType{}
	return &this
}

// NewMaturedDepositTypeWithDefaults instantiates a new MaturedDepositType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaturedDepositTypeWithDefaults() *MaturedDepositType {
	this := MaturedDepositType{}
	return &this
}

// GetCashierInfo returns the CashierInfo field value if set, zero value otherwise.
func (o *MaturedDepositType) GetCashierInfo() CashierInfoType {
	if o == nil || IsNil(o.CashierInfo) {
		var ret CashierInfoType
		return ret
	}
	return *o.CashierInfo
}

// GetCashierInfoOk returns a tuple with the CashierInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetCashierInfoOk() (*CashierInfoType, bool) {
	if o == nil || IsNil(o.CashierInfo) {
		return nil, false
	}
	return o.CashierInfo, true
}

// HasCashierInfo returns a boolean if a field has been set.
func (o *MaturedDepositType) HasCashierInfo() bool {
	if o != nil && !IsNil(o.CashierInfo) {
		return true
	}

	return false
}

// SetCashierInfo gets a reference to the given CashierInfoType and assigns it to the CashierInfo field.
func (o *MaturedDepositType) SetCashierInfo(v CashierInfoType) {
	o.CashierInfo = &v
}

// GetFolioView returns the FolioView field value if set, zero value otherwise.
func (o *MaturedDepositType) GetFolioView() int32 {
	if o == nil || IsNil(o.FolioView) {
		var ret int32
		return ret
	}
	return *o.FolioView
}

// GetFolioViewOk returns a tuple with the FolioView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetFolioViewOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioView) {
		return nil, false
	}
	return o.FolioView, true
}

// HasFolioView returns a boolean if a field has been set.
func (o *MaturedDepositType) HasFolioView() bool {
	if o != nil && !IsNil(o.FolioView) {
		return true
	}

	return false
}

// SetFolioView gets a reference to the given int32 and assigns it to the FolioView field.
func (o *MaturedDepositType) SetFolioView(v int32) {
	o.FolioView = &v
}

// GetGuestCreditAmount returns the GuestCreditAmount field value if set, zero value otherwise.
func (o *MaturedDepositType) GetGuestCreditAmount() CurrencyAmountType {
	if o == nil || IsNil(o.GuestCreditAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.GuestCreditAmount
}

// GetGuestCreditAmountOk returns a tuple with the GuestCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetGuestCreditAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.GuestCreditAmount) {
		return nil, false
	}
	return o.GuestCreditAmount, true
}

// HasGuestCreditAmount returns a boolean if a field has been set.
func (o *MaturedDepositType) HasGuestCreditAmount() bool {
	if o != nil && !IsNil(o.GuestCreditAmount) {
		return true
	}

	return false
}

// SetGuestCreditAmount gets a reference to the given CurrencyAmountType and assigns it to the GuestCreditAmount field.
func (o *MaturedDepositType) SetGuestCreditAmount(v CurrencyAmountType) {
	o.GuestCreditAmount = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *MaturedDepositType) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *MaturedDepositType) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *MaturedDepositType) SetReference(v string) {
	o.Reference = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *MaturedDepositType) GetRemark() string {
	if o == nil || IsNil(o.Remark) {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.Remark) {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *MaturedDepositType) HasRemark() bool {
	if o != nil && !IsNil(o.Remark) {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *MaturedDepositType) SetRemark(v string) {
	o.Remark = &v
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *MaturedDepositType) GetTransaction() TransactionType {
	if o == nil || IsNil(o.Transaction) {
		var ret TransactionType
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaturedDepositType) GetTransactionOk() (*TransactionType, bool) {
	if o == nil || IsNil(o.Transaction) {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *MaturedDepositType) HasTransaction() bool {
	if o != nil && !IsNil(o.Transaction) {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given TransactionType and assigns it to the Transaction field.
func (o *MaturedDepositType) SetTransaction(v TransactionType) {
	o.Transaction = &v
}

func (o MaturedDepositType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaturedDepositType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierInfo) {
		toSerialize["cashierInfo"] = o.CashierInfo
	}
	if !IsNil(o.FolioView) {
		toSerialize["folioView"] = o.FolioView
	}
	if !IsNil(o.GuestCreditAmount) {
		toSerialize["guestCreditAmount"] = o.GuestCreditAmount
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Remark) {
		toSerialize["remark"] = o.Remark
	}
	if !IsNil(o.Transaction) {
		toSerialize["transaction"] = o.Transaction
	}
	return toSerialize, nil
}

type NullableMaturedDepositType struct {
	value *MaturedDepositType
	isSet bool
}

func (v NullableMaturedDepositType) Get() *MaturedDepositType {
	return v.value
}

func (v *NullableMaturedDepositType) Set(val *MaturedDepositType) {
	v.value = val
	v.isSet = true
}

func (v NullableMaturedDepositType) IsSet() bool {
	return v.isSet
}

func (v *NullableMaturedDepositType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaturedDepositType(val *MaturedDepositType) *NullableMaturedDepositType {
	return &NullableMaturedDepositType{value: val, isSet: true}
}

func (v NullableMaturedDepositType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaturedDepositType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


