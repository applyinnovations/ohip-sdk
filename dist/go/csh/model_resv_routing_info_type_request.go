/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the ResvRoutingInfoTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResvRoutingInfoTypeRequest{}

// ResvRoutingInfoTypeRequest Comp Accounting Request routing
type ResvRoutingInfoTypeRequest struct {
	CompRequestInfo *CompRoutingRequestType `json:"compRequestInfo,omitempty"`
	// Set of routing instructions associated to this routing type.
	Instructions []RoutingInstructionType `json:"instructions,omitempty"`
}

// NewResvRoutingInfoTypeRequest instantiates a new ResvRoutingInfoTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResvRoutingInfoTypeRequest() *ResvRoutingInfoTypeRequest {
	this := ResvRoutingInfoTypeRequest{}
	return &this
}

// NewResvRoutingInfoTypeRequestWithDefaults instantiates a new ResvRoutingInfoTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResvRoutingInfoTypeRequestWithDefaults() *ResvRoutingInfoTypeRequest {
	this := ResvRoutingInfoTypeRequest{}
	return &this
}

// GetCompRequestInfo returns the CompRequestInfo field value if set, zero value otherwise.
func (o *ResvRoutingInfoTypeRequest) GetCompRequestInfo() CompRoutingRequestType {
	if o == nil || IsNil(o.CompRequestInfo) {
		var ret CompRoutingRequestType
		return ret
	}
	return *o.CompRequestInfo
}

// GetCompRequestInfoOk returns a tuple with the CompRequestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoTypeRequest) GetCompRequestInfoOk() (*CompRoutingRequestType, bool) {
	if o == nil || IsNil(o.CompRequestInfo) {
		return nil, false
	}
	return o.CompRequestInfo, true
}

// HasCompRequestInfo returns a boolean if a field has been set.
func (o *ResvRoutingInfoTypeRequest) HasCompRequestInfo() bool {
	if o != nil && !IsNil(o.CompRequestInfo) {
		return true
	}

	return false
}

// SetCompRequestInfo gets a reference to the given CompRoutingRequestType and assigns it to the CompRequestInfo field.
func (o *ResvRoutingInfoTypeRequest) SetCompRequestInfo(v CompRoutingRequestType) {
	o.CompRequestInfo = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *ResvRoutingInfoTypeRequest) GetInstructions() []RoutingInstructionType {
	if o == nil || IsNil(o.Instructions) {
		var ret []RoutingInstructionType
		return ret
	}
	return o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResvRoutingInfoTypeRequest) GetInstructionsOk() ([]RoutingInstructionType, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *ResvRoutingInfoTypeRequest) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []RoutingInstructionType and assigns it to the Instructions field.
func (o *ResvRoutingInfoTypeRequest) SetInstructions(v []RoutingInstructionType) {
	o.Instructions = v
}

func (o ResvRoutingInfoTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResvRoutingInfoTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompRequestInfo) {
		toSerialize["compRequestInfo"] = o.CompRequestInfo
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	return toSerialize, nil
}

type NullableResvRoutingInfoTypeRequest struct {
	value *ResvRoutingInfoTypeRequest
	isSet bool
}

func (v NullableResvRoutingInfoTypeRequest) Get() *ResvRoutingInfoTypeRequest {
	return v.value
}

func (v *NullableResvRoutingInfoTypeRequest) Set(val *ResvRoutingInfoTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResvRoutingInfoTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResvRoutingInfoTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResvRoutingInfoTypeRequest(val *ResvRoutingInfoTypeRequest) *NullableResvRoutingInfoTypeRequest {
	return &NullableResvRoutingInfoTypeRequest{value: val, isSet: true}
}

func (v NullableResvRoutingInfoTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResvRoutingInfoTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


