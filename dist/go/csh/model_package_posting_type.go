/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the PackagePostingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackagePostingType{}

// PackagePostingType Posting details.
type PackagePostingType struct {
	// Generate transaction number for the Posting.
	ReferenceTransactionNo *float32 `json:"referenceTransactionNo,omitempty"`
	// Posting remarks.
	Remark *string `json:"remark,omitempty"`
	// User-defined posting reference.
	Reference *string `json:"reference,omitempty"`
	// Check number for the posting.
	CheckNo *string `json:"checkNo,omitempty"`
	// Check number count for the posting.
	CheckCount *string `json:"checkCount,omitempty"`
	PostedAmount *CurrencyAmountType `json:"postedAmount,omitempty"`
	Price *CurrencyAmountType `json:"price,omitempty"`
	// Indicates Quantity.
	Quantity *float32 `json:"quantity,omitempty"`
	TransactionType *CashieringTransactionTypeType `json:"transactionType,omitempty"`
	CreditAmount *CurrencyAmountType `json:"creditAmount,omitempty"`
	DebitAmount *CurrencyAmountType `json:"debitAmount,omitempty"`
	// Information regarding the Article(Using Articles Functionality) of this transaction.
	ArticleCode *string `json:"articleCode,omitempty"`
	CashierInfo *CashierInfoType `json:"cashierInfo,omitempty"`
	// Indicates if this transaction is a paid out transaction.
	PaidOut *bool `json:"paidOut,omitempty"`
	// Corrected arrangement code from the package associated to this transaction.
	ArrangementCode *string `json:"arrangementCode,omitempty"`
	GroupTypeInfo *PostingGroupType `json:"groupTypeInfo,omitempty"`
	// Rate code associated to this transaction.
	RateCode *string `json:"rateCode,omitempty"`
	// Comp redemption code assiciated to the transaction.
	CompRedemptionCode *string `json:"compRedemptionCode,omitempty"`
	UpdateInfo *DetailPostingTypeUpdateInfo `json:"updateInfo,omitempty"`
	// Flag indicates that the posting is Flexible Benefits Awards Certificate
	FbaCertificate *bool `json:"fbaCertificate,omitempty"`
	// Tax invoice number generated by payment tax.
	TaxInvoiceNo *string `json:"taxInvoiceNo,omitempty"`
	// Flag to indicates service recovery
	ServiceRecovery *bool `json:"serviceRecovery,omitempty"`
	CompPostingsInfo *CompPostingsType `json:"compPostingsInfo,omitempty"`
	// Unique Id that references an object uniquely in the system.
	FinancialTransactionIdList []UniqueIDType `json:"financialTransactionIdList,omitempty"`
	Exchange *ExchangeAmounts `json:"exchange,omitempty"`
	// Approval code of the posting.
	ApprovalCode *string `json:"approvalCode,omitempty"`
	// Approval status of the posting.
	ApprovalStatus *string `json:"approvalStatus,omitempty"`
	// Flag to identify a Stamp Duty Transaction.
	StampDuty *bool `json:"stampDuty,omitempty"`
	// Flag to identify a Custom Charge.
	CustomCharge *bool `json:"customCharge,omitempty"`
	// Unique Transaction Identifier.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
	// Transaction Date.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Billing Transaction Code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Billing Transaction Description.
	TransactionDescription *string `json:"transactionDescription,omitempty"`
	// The amount of the transaction.
	TransactionAmount *float32 `json:"transactionAmount,omitempty"`
	// Date and time of posting.
	PostingDate *string `json:"postingDate,omitempty"`
	// The date on which the transaction has its revenue effect.
	RevenueDate *string `json:"revenueDate,omitempty"`
	// The receipt number of the transaction, if there is a receipt generated.
	ReceiptNo *float32 `json:"receiptNo,omitempty"`
	// Indicator to determine if the posting was a posting for the Rounding Difference.
	RoundingDifferenceTrx *bool `json:"roundingDifferenceTrx,omitempty"`
	// Indicator to determine if the transaction is commissionable.
	Commissionable *bool `json:"commissionable,omitempty"`
	// Reverse payment transaction unique identifier.
	ReversePaymentTransactionNo *float32 `json:"reversePaymentTransactionNo,omitempty"`
	// Indicator to determine if the transaction can be adjusted.
	CanAdjustInvoice *bool `json:"canAdjustInvoice,omitempty"`
	// Tax Service Accounting Codes used.
	DepositTransactionId *string `json:"depositTransactionId,omitempty"`
	PackageAllowance *CurrencyAmountType `json:"packageAllowance,omitempty"`
	OverageAmount *CurrencyAmountType `json:"overageAmount,omitempty"`
	// Room number for linked reservation package allowance or consumption.
	FromRoom *string `json:"fromRoom,omitempty"`
	// Package Code
	PackageCode *string `json:"packageCode,omitempty"`
}

// NewPackagePostingType instantiates a new PackagePostingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackagePostingType() *PackagePostingType {
	this := PackagePostingType{}
	return &this
}

// NewPackagePostingTypeWithDefaults instantiates a new PackagePostingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackagePostingTypeWithDefaults() *PackagePostingType {
	this := PackagePostingType{}
	return &this
}

// GetReferenceTransactionNo returns the ReferenceTransactionNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetReferenceTransactionNo() float32 {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		var ret float32
		return ret
	}
	return *o.ReferenceTransactionNo
}

// GetReferenceTransactionNoOk returns a tuple with the ReferenceTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetReferenceTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		return nil, false
	}
	return o.ReferenceTransactionNo, true
}

// HasReferenceTransactionNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasReferenceTransactionNo() bool {
	if o != nil && !IsNil(o.ReferenceTransactionNo) {
		return true
	}

	return false
}

// SetReferenceTransactionNo gets a reference to the given float32 and assigns it to the ReferenceTransactionNo field.
func (o *PackagePostingType) SetReferenceTransactionNo(v float32) {
	o.ReferenceTransactionNo = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *PackagePostingType) GetRemark() string {
	if o == nil || IsNil(o.Remark) {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.Remark) {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *PackagePostingType) HasRemark() bool {
	if o != nil && !IsNil(o.Remark) {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *PackagePostingType) SetRemark(v string) {
	o.Remark = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *PackagePostingType) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *PackagePostingType) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *PackagePostingType) SetReference(v string) {
	o.Reference = &v
}

// GetCheckNo returns the CheckNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetCheckNo() string {
	if o == nil || IsNil(o.CheckNo) {
		var ret string
		return ret
	}
	return *o.CheckNo
}

// GetCheckNoOk returns a tuple with the CheckNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCheckNoOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNo) {
		return nil, false
	}
	return o.CheckNo, true
}

// HasCheckNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasCheckNo() bool {
	if o != nil && !IsNil(o.CheckNo) {
		return true
	}

	return false
}

// SetCheckNo gets a reference to the given string and assigns it to the CheckNo field.
func (o *PackagePostingType) SetCheckNo(v string) {
	o.CheckNo = &v
}

// GetCheckCount returns the CheckCount field value if set, zero value otherwise.
func (o *PackagePostingType) GetCheckCount() string {
	if o == nil || IsNil(o.CheckCount) {
		var ret string
		return ret
	}
	return *o.CheckCount
}

// GetCheckCountOk returns a tuple with the CheckCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCheckCountOk() (*string, bool) {
	if o == nil || IsNil(o.CheckCount) {
		return nil, false
	}
	return o.CheckCount, true
}

// HasCheckCount returns a boolean if a field has been set.
func (o *PackagePostingType) HasCheckCount() bool {
	if o != nil && !IsNil(o.CheckCount) {
		return true
	}

	return false
}

// SetCheckCount gets a reference to the given string and assigns it to the CheckCount field.
func (o *PackagePostingType) SetCheckCount(v string) {
	o.CheckCount = &v
}

// GetPostedAmount returns the PostedAmount field value if set, zero value otherwise.
func (o *PackagePostingType) GetPostedAmount() CurrencyAmountType {
	if o == nil || IsNil(o.PostedAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PostedAmount
}

// GetPostedAmountOk returns a tuple with the PostedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPostedAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PostedAmount) {
		return nil, false
	}
	return o.PostedAmount, true
}

// HasPostedAmount returns a boolean if a field has been set.
func (o *PackagePostingType) HasPostedAmount() bool {
	if o != nil && !IsNil(o.PostedAmount) {
		return true
	}

	return false
}

// SetPostedAmount gets a reference to the given CurrencyAmountType and assigns it to the PostedAmount field.
func (o *PackagePostingType) SetPostedAmount(v CurrencyAmountType) {
	o.PostedAmount = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PackagePostingType) GetPrice() CurrencyAmountType {
	if o == nil || IsNil(o.Price) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PackagePostingType) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CurrencyAmountType and assigns it to the Price field.
func (o *PackagePostingType) SetPrice(v CurrencyAmountType) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *PackagePostingType) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *PackagePostingType) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *PackagePostingType) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionType() CashieringTransactionTypeType {
	if o == nil || IsNil(o.TransactionType) {
		var ret CashieringTransactionTypeType
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionTypeOk() (*CashieringTransactionTypeType, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given CashieringTransactionTypeType and assigns it to the TransactionType field.
func (o *PackagePostingType) SetTransactionType(v CashieringTransactionTypeType) {
	o.TransactionType = &v
}

// GetCreditAmount returns the CreditAmount field value if set, zero value otherwise.
func (o *PackagePostingType) GetCreditAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CreditAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CreditAmount
}

// GetCreditAmountOk returns a tuple with the CreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCreditAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CreditAmount) {
		return nil, false
	}
	return o.CreditAmount, true
}

// HasCreditAmount returns a boolean if a field has been set.
func (o *PackagePostingType) HasCreditAmount() bool {
	if o != nil && !IsNil(o.CreditAmount) {
		return true
	}

	return false
}

// SetCreditAmount gets a reference to the given CurrencyAmountType and assigns it to the CreditAmount field.
func (o *PackagePostingType) SetCreditAmount(v CurrencyAmountType) {
	o.CreditAmount = &v
}

// GetDebitAmount returns the DebitAmount field value if set, zero value otherwise.
func (o *PackagePostingType) GetDebitAmount() CurrencyAmountType {
	if o == nil || IsNil(o.DebitAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DebitAmount
}

// GetDebitAmountOk returns a tuple with the DebitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetDebitAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DebitAmount) {
		return nil, false
	}
	return o.DebitAmount, true
}

// HasDebitAmount returns a boolean if a field has been set.
func (o *PackagePostingType) HasDebitAmount() bool {
	if o != nil && !IsNil(o.DebitAmount) {
		return true
	}

	return false
}

// SetDebitAmount gets a reference to the given CurrencyAmountType and assigns it to the DebitAmount field.
func (o *PackagePostingType) SetDebitAmount(v CurrencyAmountType) {
	o.DebitAmount = &v
}

// GetArticleCode returns the ArticleCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetArticleCode() string {
	if o == nil || IsNil(o.ArticleCode) {
		var ret string
		return ret
	}
	return *o.ArticleCode
}

// GetArticleCodeOk returns a tuple with the ArticleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetArticleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleCode) {
		return nil, false
	}
	return o.ArticleCode, true
}

// HasArticleCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasArticleCode() bool {
	if o != nil && !IsNil(o.ArticleCode) {
		return true
	}

	return false
}

// SetArticleCode gets a reference to the given string and assigns it to the ArticleCode field.
func (o *PackagePostingType) SetArticleCode(v string) {
	o.ArticleCode = &v
}

// GetCashierInfo returns the CashierInfo field value if set, zero value otherwise.
func (o *PackagePostingType) GetCashierInfo() CashierInfoType {
	if o == nil || IsNil(o.CashierInfo) {
		var ret CashierInfoType
		return ret
	}
	return *o.CashierInfo
}

// GetCashierInfoOk returns a tuple with the CashierInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCashierInfoOk() (*CashierInfoType, bool) {
	if o == nil || IsNil(o.CashierInfo) {
		return nil, false
	}
	return o.CashierInfo, true
}

// HasCashierInfo returns a boolean if a field has been set.
func (o *PackagePostingType) HasCashierInfo() bool {
	if o != nil && !IsNil(o.CashierInfo) {
		return true
	}

	return false
}

// SetCashierInfo gets a reference to the given CashierInfoType and assigns it to the CashierInfo field.
func (o *PackagePostingType) SetCashierInfo(v CashierInfoType) {
	o.CashierInfo = &v
}

// GetPaidOut returns the PaidOut field value if set, zero value otherwise.
func (o *PackagePostingType) GetPaidOut() bool {
	if o == nil || IsNil(o.PaidOut) {
		var ret bool
		return ret
	}
	return *o.PaidOut
}

// GetPaidOutOk returns a tuple with the PaidOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPaidOutOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidOut) {
		return nil, false
	}
	return o.PaidOut, true
}

// HasPaidOut returns a boolean if a field has been set.
func (o *PackagePostingType) HasPaidOut() bool {
	if o != nil && !IsNil(o.PaidOut) {
		return true
	}

	return false
}

// SetPaidOut gets a reference to the given bool and assigns it to the PaidOut field.
func (o *PackagePostingType) SetPaidOut(v bool) {
	o.PaidOut = &v
}

// GetArrangementCode returns the ArrangementCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetArrangementCode() string {
	if o == nil || IsNil(o.ArrangementCode) {
		var ret string
		return ret
	}
	return *o.ArrangementCode
}

// GetArrangementCodeOk returns a tuple with the ArrangementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetArrangementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ArrangementCode) {
		return nil, false
	}
	return o.ArrangementCode, true
}

// HasArrangementCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasArrangementCode() bool {
	if o != nil && !IsNil(o.ArrangementCode) {
		return true
	}

	return false
}

// SetArrangementCode gets a reference to the given string and assigns it to the ArrangementCode field.
func (o *PackagePostingType) SetArrangementCode(v string) {
	o.ArrangementCode = &v
}

// GetGroupTypeInfo returns the GroupTypeInfo field value if set, zero value otherwise.
func (o *PackagePostingType) GetGroupTypeInfo() PostingGroupType {
	if o == nil || IsNil(o.GroupTypeInfo) {
		var ret PostingGroupType
		return ret
	}
	return *o.GroupTypeInfo
}

// GetGroupTypeInfoOk returns a tuple with the GroupTypeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetGroupTypeInfoOk() (*PostingGroupType, bool) {
	if o == nil || IsNil(o.GroupTypeInfo) {
		return nil, false
	}
	return o.GroupTypeInfo, true
}

// HasGroupTypeInfo returns a boolean if a field has been set.
func (o *PackagePostingType) HasGroupTypeInfo() bool {
	if o != nil && !IsNil(o.GroupTypeInfo) {
		return true
	}

	return false
}

// SetGroupTypeInfo gets a reference to the given PostingGroupType and assigns it to the GroupTypeInfo field.
func (o *PackagePostingType) SetGroupTypeInfo(v PostingGroupType) {
	o.GroupTypeInfo = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetRateCode() string {
	if o == nil || IsNil(o.RateCode) {
		var ret string
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given string and assigns it to the RateCode field.
func (o *PackagePostingType) SetRateCode(v string) {
	o.RateCode = &v
}

// GetCompRedemptionCode returns the CompRedemptionCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetCompRedemptionCode() string {
	if o == nil || IsNil(o.CompRedemptionCode) {
		var ret string
		return ret
	}
	return *o.CompRedemptionCode
}

// GetCompRedemptionCodeOk returns a tuple with the CompRedemptionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCompRedemptionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CompRedemptionCode) {
		return nil, false
	}
	return o.CompRedemptionCode, true
}

// HasCompRedemptionCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasCompRedemptionCode() bool {
	if o != nil && !IsNil(o.CompRedemptionCode) {
		return true
	}

	return false
}

// SetCompRedemptionCode gets a reference to the given string and assigns it to the CompRedemptionCode field.
func (o *PackagePostingType) SetCompRedemptionCode(v string) {
	o.CompRedemptionCode = &v
}

// GetUpdateInfo returns the UpdateInfo field value if set, zero value otherwise.
func (o *PackagePostingType) GetUpdateInfo() DetailPostingTypeUpdateInfo {
	if o == nil || IsNil(o.UpdateInfo) {
		var ret DetailPostingTypeUpdateInfo
		return ret
	}
	return *o.UpdateInfo
}

// GetUpdateInfoOk returns a tuple with the UpdateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetUpdateInfoOk() (*DetailPostingTypeUpdateInfo, bool) {
	if o == nil || IsNil(o.UpdateInfo) {
		return nil, false
	}
	return o.UpdateInfo, true
}

// HasUpdateInfo returns a boolean if a field has been set.
func (o *PackagePostingType) HasUpdateInfo() bool {
	if o != nil && !IsNil(o.UpdateInfo) {
		return true
	}

	return false
}

// SetUpdateInfo gets a reference to the given DetailPostingTypeUpdateInfo and assigns it to the UpdateInfo field.
func (o *PackagePostingType) SetUpdateInfo(v DetailPostingTypeUpdateInfo) {
	o.UpdateInfo = &v
}

// GetFbaCertificate returns the FbaCertificate field value if set, zero value otherwise.
func (o *PackagePostingType) GetFbaCertificate() bool {
	if o == nil || IsNil(o.FbaCertificate) {
		var ret bool
		return ret
	}
	return *o.FbaCertificate
}

// GetFbaCertificateOk returns a tuple with the FbaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetFbaCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.FbaCertificate) {
		return nil, false
	}
	return o.FbaCertificate, true
}

// HasFbaCertificate returns a boolean if a field has been set.
func (o *PackagePostingType) HasFbaCertificate() bool {
	if o != nil && !IsNil(o.FbaCertificate) {
		return true
	}

	return false
}

// SetFbaCertificate gets a reference to the given bool and assigns it to the FbaCertificate field.
func (o *PackagePostingType) SetFbaCertificate(v bool) {
	o.FbaCertificate = &v
}

// GetTaxInvoiceNo returns the TaxInvoiceNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetTaxInvoiceNo() string {
	if o == nil || IsNil(o.TaxInvoiceNo) {
		var ret string
		return ret
	}
	return *o.TaxInvoiceNo
}

// GetTaxInvoiceNoOk returns a tuple with the TaxInvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTaxInvoiceNoOk() (*string, bool) {
	if o == nil || IsNil(o.TaxInvoiceNo) {
		return nil, false
	}
	return o.TaxInvoiceNo, true
}

// HasTaxInvoiceNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasTaxInvoiceNo() bool {
	if o != nil && !IsNil(o.TaxInvoiceNo) {
		return true
	}

	return false
}

// SetTaxInvoiceNo gets a reference to the given string and assigns it to the TaxInvoiceNo field.
func (o *PackagePostingType) SetTaxInvoiceNo(v string) {
	o.TaxInvoiceNo = &v
}

// GetServiceRecovery returns the ServiceRecovery field value if set, zero value otherwise.
func (o *PackagePostingType) GetServiceRecovery() bool {
	if o == nil || IsNil(o.ServiceRecovery) {
		var ret bool
		return ret
	}
	return *o.ServiceRecovery
}

// GetServiceRecoveryOk returns a tuple with the ServiceRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetServiceRecoveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceRecovery) {
		return nil, false
	}
	return o.ServiceRecovery, true
}

// HasServiceRecovery returns a boolean if a field has been set.
func (o *PackagePostingType) HasServiceRecovery() bool {
	if o != nil && !IsNil(o.ServiceRecovery) {
		return true
	}

	return false
}

// SetServiceRecovery gets a reference to the given bool and assigns it to the ServiceRecovery field.
func (o *PackagePostingType) SetServiceRecovery(v bool) {
	o.ServiceRecovery = &v
}

// GetCompPostingsInfo returns the CompPostingsInfo field value if set, zero value otherwise.
func (o *PackagePostingType) GetCompPostingsInfo() CompPostingsType {
	if o == nil || IsNil(o.CompPostingsInfo) {
		var ret CompPostingsType
		return ret
	}
	return *o.CompPostingsInfo
}

// GetCompPostingsInfoOk returns a tuple with the CompPostingsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCompPostingsInfoOk() (*CompPostingsType, bool) {
	if o == nil || IsNil(o.CompPostingsInfo) {
		return nil, false
	}
	return o.CompPostingsInfo, true
}

// HasCompPostingsInfo returns a boolean if a field has been set.
func (o *PackagePostingType) HasCompPostingsInfo() bool {
	if o != nil && !IsNil(o.CompPostingsInfo) {
		return true
	}

	return false
}

// SetCompPostingsInfo gets a reference to the given CompPostingsType and assigns it to the CompPostingsInfo field.
func (o *PackagePostingType) SetCompPostingsInfo(v CompPostingsType) {
	o.CompPostingsInfo = &v
}

// GetFinancialTransactionIdList returns the FinancialTransactionIdList field value if set, zero value otherwise.
func (o *PackagePostingType) GetFinancialTransactionIdList() []UniqueIDType {
	if o == nil || IsNil(o.FinancialTransactionIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.FinancialTransactionIdList
}

// GetFinancialTransactionIdListOk returns a tuple with the FinancialTransactionIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetFinancialTransactionIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.FinancialTransactionIdList) {
		return nil, false
	}
	return o.FinancialTransactionIdList, true
}

// HasFinancialTransactionIdList returns a boolean if a field has been set.
func (o *PackagePostingType) HasFinancialTransactionIdList() bool {
	if o != nil && !IsNil(o.FinancialTransactionIdList) {
		return true
	}

	return false
}

// SetFinancialTransactionIdList gets a reference to the given []UniqueIDType and assigns it to the FinancialTransactionIdList field.
func (o *PackagePostingType) SetFinancialTransactionIdList(v []UniqueIDType) {
	o.FinancialTransactionIdList = v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *PackagePostingType) GetExchange() ExchangeAmounts {
	if o == nil || IsNil(o.Exchange) {
		var ret ExchangeAmounts
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetExchangeOk() (*ExchangeAmounts, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *PackagePostingType) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given ExchangeAmounts and assigns it to the Exchange field.
func (o *PackagePostingType) SetExchange(v ExchangeAmounts) {
	o.Exchange = &v
}

// GetApprovalCode returns the ApprovalCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetApprovalCode() string {
	if o == nil || IsNil(o.ApprovalCode) {
		var ret string
		return ret
	}
	return *o.ApprovalCode
}

// GetApprovalCodeOk returns a tuple with the ApprovalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetApprovalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalCode) {
		return nil, false
	}
	return o.ApprovalCode, true
}

// HasApprovalCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasApprovalCode() bool {
	if o != nil && !IsNil(o.ApprovalCode) {
		return true
	}

	return false
}

// SetApprovalCode gets a reference to the given string and assigns it to the ApprovalCode field.
func (o *PackagePostingType) SetApprovalCode(v string) {
	o.ApprovalCode = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *PackagePostingType) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *PackagePostingType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *PackagePostingType) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetStampDuty returns the StampDuty field value if set, zero value otherwise.
func (o *PackagePostingType) GetStampDuty() bool {
	if o == nil || IsNil(o.StampDuty) {
		var ret bool
		return ret
	}
	return *o.StampDuty
}

// GetStampDutyOk returns a tuple with the StampDuty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetStampDutyOk() (*bool, bool) {
	if o == nil || IsNil(o.StampDuty) {
		return nil, false
	}
	return o.StampDuty, true
}

// HasStampDuty returns a boolean if a field has been set.
func (o *PackagePostingType) HasStampDuty() bool {
	if o != nil && !IsNil(o.StampDuty) {
		return true
	}

	return false
}

// SetStampDuty gets a reference to the given bool and assigns it to the StampDuty field.
func (o *PackagePostingType) SetStampDuty(v bool) {
	o.StampDuty = &v
}

// GetCustomCharge returns the CustomCharge field value if set, zero value otherwise.
func (o *PackagePostingType) GetCustomCharge() bool {
	if o == nil || IsNil(o.CustomCharge) {
		var ret bool
		return ret
	}
	return *o.CustomCharge
}

// GetCustomChargeOk returns a tuple with the CustomCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCustomChargeOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomCharge) {
		return nil, false
	}
	return o.CustomCharge, true
}

// HasCustomCharge returns a boolean if a field has been set.
func (o *PackagePostingType) HasCustomCharge() bool {
	if o != nil && !IsNil(o.CustomCharge) {
		return true
	}

	return false
}

// SetCustomCharge gets a reference to the given bool and assigns it to the CustomCharge field.
func (o *PackagePostingType) SetCustomCharge(v bool) {
	o.CustomCharge = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *PackagePostingType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *PackagePostingType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *PackagePostingType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDescription returns the TransactionDescription field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionDescription() string {
	if o == nil || IsNil(o.TransactionDescription) {
		var ret string
		return ret
	}
	return *o.TransactionDescription
}

// GetTransactionDescriptionOk returns a tuple with the TransactionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDescription) {
		return nil, false
	}
	return o.TransactionDescription, true
}

// HasTransactionDescription returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionDescription() bool {
	if o != nil && !IsNil(o.TransactionDescription) {
		return true
	}

	return false
}

// SetTransactionDescription gets a reference to the given string and assigns it to the TransactionDescription field.
func (o *PackagePostingType) SetTransactionDescription(v string) {
	o.TransactionDescription = &v
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *PackagePostingType) GetTransactionAmount() float32 {
	if o == nil || IsNil(o.TransactionAmount) {
		var ret float32
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetTransactionAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionAmount) {
		return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *PackagePostingType) HasTransactionAmount() bool {
	if o != nil && !IsNil(o.TransactionAmount) {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given float32 and assigns it to the TransactionAmount field.
func (o *PackagePostingType) SetTransactionAmount(v float32) {
	o.TransactionAmount = &v
}

// GetPostingDate returns the PostingDate field value if set, zero value otherwise.
func (o *PackagePostingType) GetPostingDate() string {
	if o == nil || IsNil(o.PostingDate) {
		var ret string
		return ret
	}
	return *o.PostingDate
}

// GetPostingDateOk returns a tuple with the PostingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPostingDateOk() (*string, bool) {
	if o == nil || IsNil(o.PostingDate) {
		return nil, false
	}
	return o.PostingDate, true
}

// HasPostingDate returns a boolean if a field has been set.
func (o *PackagePostingType) HasPostingDate() bool {
	if o != nil && !IsNil(o.PostingDate) {
		return true
	}

	return false
}

// SetPostingDate gets a reference to the given string and assigns it to the PostingDate field.
func (o *PackagePostingType) SetPostingDate(v string) {
	o.PostingDate = &v
}

// GetRevenueDate returns the RevenueDate field value if set, zero value otherwise.
func (o *PackagePostingType) GetRevenueDate() string {
	if o == nil || IsNil(o.RevenueDate) {
		var ret string
		return ret
	}
	return *o.RevenueDate
}

// GetRevenueDateOk returns a tuple with the RevenueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetRevenueDateOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueDate) {
		return nil, false
	}
	return o.RevenueDate, true
}

// HasRevenueDate returns a boolean if a field has been set.
func (o *PackagePostingType) HasRevenueDate() bool {
	if o != nil && !IsNil(o.RevenueDate) {
		return true
	}

	return false
}

// SetRevenueDate gets a reference to the given string and assigns it to the RevenueDate field.
func (o *PackagePostingType) SetRevenueDate(v string) {
	o.RevenueDate = &v
}

// GetReceiptNo returns the ReceiptNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetReceiptNo() float32 {
	if o == nil || IsNil(o.ReceiptNo) {
		var ret float32
		return ret
	}
	return *o.ReceiptNo
}

// GetReceiptNoOk returns a tuple with the ReceiptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetReceiptNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReceiptNo) {
		return nil, false
	}
	return o.ReceiptNo, true
}

// HasReceiptNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasReceiptNo() bool {
	if o != nil && !IsNil(o.ReceiptNo) {
		return true
	}

	return false
}

// SetReceiptNo gets a reference to the given float32 and assigns it to the ReceiptNo field.
func (o *PackagePostingType) SetReceiptNo(v float32) {
	o.ReceiptNo = &v
}

// GetRoundingDifferenceTrx returns the RoundingDifferenceTrx field value if set, zero value otherwise.
func (o *PackagePostingType) GetRoundingDifferenceTrx() bool {
	if o == nil || IsNil(o.RoundingDifferenceTrx) {
		var ret bool
		return ret
	}
	return *o.RoundingDifferenceTrx
}

// GetRoundingDifferenceTrxOk returns a tuple with the RoundingDifferenceTrx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetRoundingDifferenceTrxOk() (*bool, bool) {
	if o == nil || IsNil(o.RoundingDifferenceTrx) {
		return nil, false
	}
	return o.RoundingDifferenceTrx, true
}

// HasRoundingDifferenceTrx returns a boolean if a field has been set.
func (o *PackagePostingType) HasRoundingDifferenceTrx() bool {
	if o != nil && !IsNil(o.RoundingDifferenceTrx) {
		return true
	}

	return false
}

// SetRoundingDifferenceTrx gets a reference to the given bool and assigns it to the RoundingDifferenceTrx field.
func (o *PackagePostingType) SetRoundingDifferenceTrx(v bool) {
	o.RoundingDifferenceTrx = &v
}

// GetCommissionable returns the Commissionable field value if set, zero value otherwise.
func (o *PackagePostingType) GetCommissionable() bool {
	if o == nil || IsNil(o.Commissionable) {
		var ret bool
		return ret
	}
	return *o.Commissionable
}

// GetCommissionableOk returns a tuple with the Commissionable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCommissionableOk() (*bool, bool) {
	if o == nil || IsNil(o.Commissionable) {
		return nil, false
	}
	return o.Commissionable, true
}

// HasCommissionable returns a boolean if a field has been set.
func (o *PackagePostingType) HasCommissionable() bool {
	if o != nil && !IsNil(o.Commissionable) {
		return true
	}

	return false
}

// SetCommissionable gets a reference to the given bool and assigns it to the Commissionable field.
func (o *PackagePostingType) SetCommissionable(v bool) {
	o.Commissionable = &v
}

// GetReversePaymentTransactionNo returns the ReversePaymentTransactionNo field value if set, zero value otherwise.
func (o *PackagePostingType) GetReversePaymentTransactionNo() float32 {
	if o == nil || IsNil(o.ReversePaymentTransactionNo) {
		var ret float32
		return ret
	}
	return *o.ReversePaymentTransactionNo
}

// GetReversePaymentTransactionNoOk returns a tuple with the ReversePaymentTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetReversePaymentTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReversePaymentTransactionNo) {
		return nil, false
	}
	return o.ReversePaymentTransactionNo, true
}

// HasReversePaymentTransactionNo returns a boolean if a field has been set.
func (o *PackagePostingType) HasReversePaymentTransactionNo() bool {
	if o != nil && !IsNil(o.ReversePaymentTransactionNo) {
		return true
	}

	return false
}

// SetReversePaymentTransactionNo gets a reference to the given float32 and assigns it to the ReversePaymentTransactionNo field.
func (o *PackagePostingType) SetReversePaymentTransactionNo(v float32) {
	o.ReversePaymentTransactionNo = &v
}

// GetCanAdjustInvoice returns the CanAdjustInvoice field value if set, zero value otherwise.
func (o *PackagePostingType) GetCanAdjustInvoice() bool {
	if o == nil || IsNil(o.CanAdjustInvoice) {
		var ret bool
		return ret
	}
	return *o.CanAdjustInvoice
}

// GetCanAdjustInvoiceOk returns a tuple with the CanAdjustInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetCanAdjustInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.CanAdjustInvoice) {
		return nil, false
	}
	return o.CanAdjustInvoice, true
}

// HasCanAdjustInvoice returns a boolean if a field has been set.
func (o *PackagePostingType) HasCanAdjustInvoice() bool {
	if o != nil && !IsNil(o.CanAdjustInvoice) {
		return true
	}

	return false
}

// SetCanAdjustInvoice gets a reference to the given bool and assigns it to the CanAdjustInvoice field.
func (o *PackagePostingType) SetCanAdjustInvoice(v bool) {
	o.CanAdjustInvoice = &v
}

// GetDepositTransactionId returns the DepositTransactionId field value if set, zero value otherwise.
func (o *PackagePostingType) GetDepositTransactionId() string {
	if o == nil || IsNil(o.DepositTransactionId) {
		var ret string
		return ret
	}
	return *o.DepositTransactionId
}

// GetDepositTransactionIdOk returns a tuple with the DepositTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetDepositTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepositTransactionId) {
		return nil, false
	}
	return o.DepositTransactionId, true
}

// HasDepositTransactionId returns a boolean if a field has been set.
func (o *PackagePostingType) HasDepositTransactionId() bool {
	if o != nil && !IsNil(o.DepositTransactionId) {
		return true
	}

	return false
}

// SetDepositTransactionId gets a reference to the given string and assigns it to the DepositTransactionId field.
func (o *PackagePostingType) SetDepositTransactionId(v string) {
	o.DepositTransactionId = &v
}

// GetPackageAllowance returns the PackageAllowance field value if set, zero value otherwise.
func (o *PackagePostingType) GetPackageAllowance() CurrencyAmountType {
	if o == nil || IsNil(o.PackageAllowance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PackageAllowance
}

// GetPackageAllowanceOk returns a tuple with the PackageAllowance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPackageAllowanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PackageAllowance) {
		return nil, false
	}
	return o.PackageAllowance, true
}

// HasPackageAllowance returns a boolean if a field has been set.
func (o *PackagePostingType) HasPackageAllowance() bool {
	if o != nil && !IsNil(o.PackageAllowance) {
		return true
	}

	return false
}

// SetPackageAllowance gets a reference to the given CurrencyAmountType and assigns it to the PackageAllowance field.
func (o *PackagePostingType) SetPackageAllowance(v CurrencyAmountType) {
	o.PackageAllowance = &v
}

// GetOverageAmount returns the OverageAmount field value if set, zero value otherwise.
func (o *PackagePostingType) GetOverageAmount() CurrencyAmountType {
	if o == nil || IsNil(o.OverageAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.OverageAmount
}

// GetOverageAmountOk returns a tuple with the OverageAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetOverageAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.OverageAmount) {
		return nil, false
	}
	return o.OverageAmount, true
}

// HasOverageAmount returns a boolean if a field has been set.
func (o *PackagePostingType) HasOverageAmount() bool {
	if o != nil && !IsNil(o.OverageAmount) {
		return true
	}

	return false
}

// SetOverageAmount gets a reference to the given CurrencyAmountType and assigns it to the OverageAmount field.
func (o *PackagePostingType) SetOverageAmount(v CurrencyAmountType) {
	o.OverageAmount = &v
}

// GetFromRoom returns the FromRoom field value if set, zero value otherwise.
func (o *PackagePostingType) GetFromRoom() string {
	if o == nil || IsNil(o.FromRoom) {
		var ret string
		return ret
	}
	return *o.FromRoom
}

// GetFromRoomOk returns a tuple with the FromRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetFromRoomOk() (*string, bool) {
	if o == nil || IsNil(o.FromRoom) {
		return nil, false
	}
	return o.FromRoom, true
}

// HasFromRoom returns a boolean if a field has been set.
func (o *PackagePostingType) HasFromRoom() bool {
	if o != nil && !IsNil(o.FromRoom) {
		return true
	}

	return false
}

// SetFromRoom gets a reference to the given string and assigns it to the FromRoom field.
func (o *PackagePostingType) SetFromRoom(v string) {
	o.FromRoom = &v
}

// GetPackageCode returns the PackageCode field value if set, zero value otherwise.
func (o *PackagePostingType) GetPackageCode() string {
	if o == nil || IsNil(o.PackageCode) {
		var ret string
		return ret
	}
	return *o.PackageCode
}

// GetPackageCodeOk returns a tuple with the PackageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackagePostingType) GetPackageCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PackageCode) {
		return nil, false
	}
	return o.PackageCode, true
}

// HasPackageCode returns a boolean if a field has been set.
func (o *PackagePostingType) HasPackageCode() bool {
	if o != nil && !IsNil(o.PackageCode) {
		return true
	}

	return false
}

// SetPackageCode gets a reference to the given string and assigns it to the PackageCode field.
func (o *PackagePostingType) SetPackageCode(v string) {
	o.PackageCode = &v
}

func (o PackagePostingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackagePostingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReferenceTransactionNo) {
		toSerialize["referenceTransactionNo"] = o.ReferenceTransactionNo
	}
	if !IsNil(o.Remark) {
		toSerialize["remark"] = o.Remark
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.CheckNo) {
		toSerialize["checkNo"] = o.CheckNo
	}
	if !IsNil(o.CheckCount) {
		toSerialize["checkCount"] = o.CheckCount
	}
	if !IsNil(o.PostedAmount) {
		toSerialize["postedAmount"] = o.PostedAmount
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if !IsNil(o.CreditAmount) {
		toSerialize["creditAmount"] = o.CreditAmount
	}
	if !IsNil(o.DebitAmount) {
		toSerialize["debitAmount"] = o.DebitAmount
	}
	if !IsNil(o.ArticleCode) {
		toSerialize["articleCode"] = o.ArticleCode
	}
	if !IsNil(o.CashierInfo) {
		toSerialize["cashierInfo"] = o.CashierInfo
	}
	if !IsNil(o.PaidOut) {
		toSerialize["paidOut"] = o.PaidOut
	}
	if !IsNil(o.ArrangementCode) {
		toSerialize["arrangementCode"] = o.ArrangementCode
	}
	if !IsNil(o.GroupTypeInfo) {
		toSerialize["groupTypeInfo"] = o.GroupTypeInfo
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.CompRedemptionCode) {
		toSerialize["compRedemptionCode"] = o.CompRedemptionCode
	}
	if !IsNil(o.UpdateInfo) {
		toSerialize["updateInfo"] = o.UpdateInfo
	}
	if !IsNil(o.FbaCertificate) {
		toSerialize["fbaCertificate"] = o.FbaCertificate
	}
	if !IsNil(o.TaxInvoiceNo) {
		toSerialize["taxInvoiceNo"] = o.TaxInvoiceNo
	}
	if !IsNil(o.ServiceRecovery) {
		toSerialize["serviceRecovery"] = o.ServiceRecovery
	}
	if !IsNil(o.CompPostingsInfo) {
		toSerialize["compPostingsInfo"] = o.CompPostingsInfo
	}
	if !IsNil(o.FinancialTransactionIdList) {
		toSerialize["financialTransactionIdList"] = o.FinancialTransactionIdList
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.ApprovalCode) {
		toSerialize["approvalCode"] = o.ApprovalCode
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.StampDuty) {
		toSerialize["stampDuty"] = o.StampDuty
	}
	if !IsNil(o.CustomCharge) {
		toSerialize["customCharge"] = o.CustomCharge
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDescription) {
		toSerialize["transactionDescription"] = o.TransactionDescription
	}
	if !IsNil(o.TransactionAmount) {
		toSerialize["transactionAmount"] = o.TransactionAmount
	}
	if !IsNil(o.PostingDate) {
		toSerialize["postingDate"] = o.PostingDate
	}
	if !IsNil(o.RevenueDate) {
		toSerialize["revenueDate"] = o.RevenueDate
	}
	if !IsNil(o.ReceiptNo) {
		toSerialize["receiptNo"] = o.ReceiptNo
	}
	if !IsNil(o.RoundingDifferenceTrx) {
		toSerialize["roundingDifferenceTrx"] = o.RoundingDifferenceTrx
	}
	if !IsNil(o.Commissionable) {
		toSerialize["commissionable"] = o.Commissionable
	}
	if !IsNil(o.ReversePaymentTransactionNo) {
		toSerialize["reversePaymentTransactionNo"] = o.ReversePaymentTransactionNo
	}
	if !IsNil(o.CanAdjustInvoice) {
		toSerialize["canAdjustInvoice"] = o.CanAdjustInvoice
	}
	if !IsNil(o.DepositTransactionId) {
		toSerialize["depositTransactionId"] = o.DepositTransactionId
	}
	if !IsNil(o.PackageAllowance) {
		toSerialize["packageAllowance"] = o.PackageAllowance
	}
	if !IsNil(o.OverageAmount) {
		toSerialize["overageAmount"] = o.OverageAmount
	}
	if !IsNil(o.FromRoom) {
		toSerialize["fromRoom"] = o.FromRoom
	}
	if !IsNil(o.PackageCode) {
		toSerialize["packageCode"] = o.PackageCode
	}
	return toSerialize, nil
}

type NullablePackagePostingType struct {
	value *PackagePostingType
	isSet bool
}

func (v NullablePackagePostingType) Get() *PackagePostingType {
	return v.value
}

func (v *NullablePackagePostingType) Set(val *PackagePostingType) {
	v.value = val
	v.isSet = true
}

func (v NullablePackagePostingType) IsSet() bool {
	return v.isSet
}

func (v *NullablePackagePostingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackagePostingType(val *PackagePostingType) *NullablePackagePostingType {
	return &NullablePackagePostingType{value: val, isSet: true}
}

func (v NullablePackagePostingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackagePostingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


