/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the CCAuthorizationInstructionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CCAuthorizationInstructionType{}

// CCAuthorizationInstructionType Contains the details to use for a credit card authorization.
type CCAuthorizationInstructionType struct {
	AuthorizationSetup *CCAuthorizationInstructionTypeAuthorizationSetup `json:"authorizationSetup,omitempty"`
	// The current date of the Property.
	BusinessDate *string `json:"businessDate,omitempty"`
	CurrentApprovalAmount *CurrencyAmountType `json:"currentApprovalAmount,omitempty"`
	IncidentalAmount *CurrencyAmountType `json:"incidentalAmount,omitempty"`
	// Flag to indicate if initial authorization required.
	InitialAuthorizationRequired *bool `json:"initialAuthorizationRequired,omitempty"`
	// Unique Authorization Sequence for the authorization and settlement.
	OriginalAuthSequence *int32 `json:"originalAuthSequence,omitempty"`
	PaymentMethodInfo *ReservationPaymentMethodType `json:"paymentMethodInfo,omitempty"`
	ReservationDetail *ReservationInfoType `json:"reservationDetail,omitempty"`
	// Unique sequence for this authorization.
	SequenceNumber *string `json:"sequenceNumber,omitempty"`
	TotalApprovalAmount *CurrencyAmountType `json:"totalApprovalAmount,omitempty"`
	// Transaction type of the authorization(INIT or SUPP).
	TransactionType *string `json:"transactionType,omitempty"`
	// Usage type used.
	UsageType *string `json:"usageType,omitempty"`
	// Vendor transaction id for the authorization.
	VendorTranId *string `json:"vendorTranId,omitempty"`
}

// NewCCAuthorizationInstructionType instantiates a new CCAuthorizationInstructionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCCAuthorizationInstructionType() *CCAuthorizationInstructionType {
	this := CCAuthorizationInstructionType{}
	return &this
}

// NewCCAuthorizationInstructionTypeWithDefaults instantiates a new CCAuthorizationInstructionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCCAuthorizationInstructionTypeWithDefaults() *CCAuthorizationInstructionType {
	this := CCAuthorizationInstructionType{}
	return &this
}

// GetAuthorizationSetup returns the AuthorizationSetup field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetAuthorizationSetup() CCAuthorizationInstructionTypeAuthorizationSetup {
	if o == nil || IsNil(o.AuthorizationSetup) {
		var ret CCAuthorizationInstructionTypeAuthorizationSetup
		return ret
	}
	return *o.AuthorizationSetup
}

// GetAuthorizationSetupOk returns a tuple with the AuthorizationSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetAuthorizationSetupOk() (*CCAuthorizationInstructionTypeAuthorizationSetup, bool) {
	if o == nil || IsNil(o.AuthorizationSetup) {
		return nil, false
	}
	return o.AuthorizationSetup, true
}

// HasAuthorizationSetup returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasAuthorizationSetup() bool {
	if o != nil && !IsNil(o.AuthorizationSetup) {
		return true
	}

	return false
}

// SetAuthorizationSetup gets a reference to the given CCAuthorizationInstructionTypeAuthorizationSetup and assigns it to the AuthorizationSetup field.
func (o *CCAuthorizationInstructionType) SetAuthorizationSetup(v CCAuthorizationInstructionTypeAuthorizationSetup) {
	o.AuthorizationSetup = &v
}

// GetBusinessDate returns the BusinessDate field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetBusinessDate() string {
	if o == nil || IsNil(o.BusinessDate) {
		var ret string
		return ret
	}
	return *o.BusinessDate
}

// GetBusinessDateOk returns a tuple with the BusinessDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetBusinessDateOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessDate) {
		return nil, false
	}
	return o.BusinessDate, true
}

// HasBusinessDate returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasBusinessDate() bool {
	if o != nil && !IsNil(o.BusinessDate) {
		return true
	}

	return false
}

// SetBusinessDate gets a reference to the given string and assigns it to the BusinessDate field.
func (o *CCAuthorizationInstructionType) SetBusinessDate(v string) {
	o.BusinessDate = &v
}

// GetCurrentApprovalAmount returns the CurrentApprovalAmount field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetCurrentApprovalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CurrentApprovalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CurrentApprovalAmount
}

// GetCurrentApprovalAmountOk returns a tuple with the CurrentApprovalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetCurrentApprovalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CurrentApprovalAmount) {
		return nil, false
	}
	return o.CurrentApprovalAmount, true
}

// HasCurrentApprovalAmount returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasCurrentApprovalAmount() bool {
	if o != nil && !IsNil(o.CurrentApprovalAmount) {
		return true
	}

	return false
}

// SetCurrentApprovalAmount gets a reference to the given CurrencyAmountType and assigns it to the CurrentApprovalAmount field.
func (o *CCAuthorizationInstructionType) SetCurrentApprovalAmount(v CurrencyAmountType) {
	o.CurrentApprovalAmount = &v
}

// GetIncidentalAmount returns the IncidentalAmount field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetIncidentalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.IncidentalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.IncidentalAmount
}

// GetIncidentalAmountOk returns a tuple with the IncidentalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetIncidentalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.IncidentalAmount) {
		return nil, false
	}
	return o.IncidentalAmount, true
}

// HasIncidentalAmount returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasIncidentalAmount() bool {
	if o != nil && !IsNil(o.IncidentalAmount) {
		return true
	}

	return false
}

// SetIncidentalAmount gets a reference to the given CurrencyAmountType and assigns it to the IncidentalAmount field.
func (o *CCAuthorizationInstructionType) SetIncidentalAmount(v CurrencyAmountType) {
	o.IncidentalAmount = &v
}

// GetInitialAuthorizationRequired returns the InitialAuthorizationRequired field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetInitialAuthorizationRequired() bool {
	if o == nil || IsNil(o.InitialAuthorizationRequired) {
		var ret bool
		return ret
	}
	return *o.InitialAuthorizationRequired
}

// GetInitialAuthorizationRequiredOk returns a tuple with the InitialAuthorizationRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetInitialAuthorizationRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.InitialAuthorizationRequired) {
		return nil, false
	}
	return o.InitialAuthorizationRequired, true
}

// HasInitialAuthorizationRequired returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasInitialAuthorizationRequired() bool {
	if o != nil && !IsNil(o.InitialAuthorizationRequired) {
		return true
	}

	return false
}

// SetInitialAuthorizationRequired gets a reference to the given bool and assigns it to the InitialAuthorizationRequired field.
func (o *CCAuthorizationInstructionType) SetInitialAuthorizationRequired(v bool) {
	o.InitialAuthorizationRequired = &v
}

// GetOriginalAuthSequence returns the OriginalAuthSequence field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetOriginalAuthSequence() int32 {
	if o == nil || IsNil(o.OriginalAuthSequence) {
		var ret int32
		return ret
	}
	return *o.OriginalAuthSequence
}

// GetOriginalAuthSequenceOk returns a tuple with the OriginalAuthSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetOriginalAuthSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalAuthSequence) {
		return nil, false
	}
	return o.OriginalAuthSequence, true
}

// HasOriginalAuthSequence returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasOriginalAuthSequence() bool {
	if o != nil && !IsNil(o.OriginalAuthSequence) {
		return true
	}

	return false
}

// SetOriginalAuthSequence gets a reference to the given int32 and assigns it to the OriginalAuthSequence field.
func (o *CCAuthorizationInstructionType) SetOriginalAuthSequence(v int32) {
	o.OriginalAuthSequence = &v
}

// GetPaymentMethodInfo returns the PaymentMethodInfo field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetPaymentMethodInfo() ReservationPaymentMethodType {
	if o == nil || IsNil(o.PaymentMethodInfo) {
		var ret ReservationPaymentMethodType
		return ret
	}
	return *o.PaymentMethodInfo
}

// GetPaymentMethodInfoOk returns a tuple with the PaymentMethodInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetPaymentMethodInfoOk() (*ReservationPaymentMethodType, bool) {
	if o == nil || IsNil(o.PaymentMethodInfo) {
		return nil, false
	}
	return o.PaymentMethodInfo, true
}

// HasPaymentMethodInfo returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasPaymentMethodInfo() bool {
	if o != nil && !IsNil(o.PaymentMethodInfo) {
		return true
	}

	return false
}

// SetPaymentMethodInfo gets a reference to the given ReservationPaymentMethodType and assigns it to the PaymentMethodInfo field.
func (o *CCAuthorizationInstructionType) SetPaymentMethodInfo(v ReservationPaymentMethodType) {
	o.PaymentMethodInfo = &v
}

// GetReservationDetail returns the ReservationDetail field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetReservationDetail() ReservationInfoType {
	if o == nil || IsNil(o.ReservationDetail) {
		var ret ReservationInfoType
		return ret
	}
	return *o.ReservationDetail
}

// GetReservationDetailOk returns a tuple with the ReservationDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetReservationDetailOk() (*ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationDetail) {
		return nil, false
	}
	return o.ReservationDetail, true
}

// HasReservationDetail returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasReservationDetail() bool {
	if o != nil && !IsNil(o.ReservationDetail) {
		return true
	}

	return false
}

// SetReservationDetail gets a reference to the given ReservationInfoType and assigns it to the ReservationDetail field.
func (o *CCAuthorizationInstructionType) SetReservationDetail(v ReservationInfoType) {
	o.ReservationDetail = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetSequenceNumber() string {
	if o == nil || IsNil(o.SequenceNumber) {
		var ret string
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetSequenceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SequenceNumber) {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasSequenceNumber() bool {
	if o != nil && !IsNil(o.SequenceNumber) {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given string and assigns it to the SequenceNumber field.
func (o *CCAuthorizationInstructionType) SetSequenceNumber(v string) {
	o.SequenceNumber = &v
}

// GetTotalApprovalAmount returns the TotalApprovalAmount field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetTotalApprovalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.TotalApprovalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalApprovalAmount
}

// GetTotalApprovalAmountOk returns a tuple with the TotalApprovalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetTotalApprovalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalApprovalAmount) {
		return nil, false
	}
	return o.TotalApprovalAmount, true
}

// HasTotalApprovalAmount returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasTotalApprovalAmount() bool {
	if o != nil && !IsNil(o.TotalApprovalAmount) {
		return true
	}

	return false
}

// SetTotalApprovalAmount gets a reference to the given CurrencyAmountType and assigns it to the TotalApprovalAmount field.
func (o *CCAuthorizationInstructionType) SetTotalApprovalAmount(v CurrencyAmountType) {
	o.TotalApprovalAmount = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *CCAuthorizationInstructionType) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetUsageType returns the UsageType field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetUsageType() string {
	if o == nil || IsNil(o.UsageType) {
		var ret string
		return ret
	}
	return *o.UsageType
}

// GetUsageTypeOk returns a tuple with the UsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetUsageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UsageType) {
		return nil, false
	}
	return o.UsageType, true
}

// HasUsageType returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasUsageType() bool {
	if o != nil && !IsNil(o.UsageType) {
		return true
	}

	return false
}

// SetUsageType gets a reference to the given string and assigns it to the UsageType field.
func (o *CCAuthorizationInstructionType) SetUsageType(v string) {
	o.UsageType = &v
}

// GetVendorTranId returns the VendorTranId field value if set, zero value otherwise.
func (o *CCAuthorizationInstructionType) GetVendorTranId() string {
	if o == nil || IsNil(o.VendorTranId) {
		var ret string
		return ret
	}
	return *o.VendorTranId
}

// GetVendorTranIdOk returns a tuple with the VendorTranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CCAuthorizationInstructionType) GetVendorTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorTranId) {
		return nil, false
	}
	return o.VendorTranId, true
}

// HasVendorTranId returns a boolean if a field has been set.
func (o *CCAuthorizationInstructionType) HasVendorTranId() bool {
	if o != nil && !IsNil(o.VendorTranId) {
		return true
	}

	return false
}

// SetVendorTranId gets a reference to the given string and assigns it to the VendorTranId field.
func (o *CCAuthorizationInstructionType) SetVendorTranId(v string) {
	o.VendorTranId = &v
}

func (o CCAuthorizationInstructionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CCAuthorizationInstructionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationSetup) {
		toSerialize["authorizationSetup"] = o.AuthorizationSetup
	}
	if !IsNil(o.BusinessDate) {
		toSerialize["businessDate"] = o.BusinessDate
	}
	if !IsNil(o.CurrentApprovalAmount) {
		toSerialize["currentApprovalAmount"] = o.CurrentApprovalAmount
	}
	if !IsNil(o.IncidentalAmount) {
		toSerialize["incidentalAmount"] = o.IncidentalAmount
	}
	if !IsNil(o.InitialAuthorizationRequired) {
		toSerialize["initialAuthorizationRequired"] = o.InitialAuthorizationRequired
	}
	if !IsNil(o.OriginalAuthSequence) {
		toSerialize["originalAuthSequence"] = o.OriginalAuthSequence
	}
	if !IsNil(o.PaymentMethodInfo) {
		toSerialize["paymentMethodInfo"] = o.PaymentMethodInfo
	}
	if !IsNil(o.ReservationDetail) {
		toSerialize["reservationDetail"] = o.ReservationDetail
	}
	if !IsNil(o.SequenceNumber) {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if !IsNil(o.TotalApprovalAmount) {
		toSerialize["totalApprovalAmount"] = o.TotalApprovalAmount
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if !IsNil(o.UsageType) {
		toSerialize["usageType"] = o.UsageType
	}
	if !IsNil(o.VendorTranId) {
		toSerialize["vendorTranId"] = o.VendorTranId
	}
	return toSerialize, nil
}

type NullableCCAuthorizationInstructionType struct {
	value *CCAuthorizationInstructionType
	isSet bool
}

func (v NullableCCAuthorizationInstructionType) Get() *CCAuthorizationInstructionType {
	return v.value
}

func (v *NullableCCAuthorizationInstructionType) Set(val *CCAuthorizationInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableCCAuthorizationInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableCCAuthorizationInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCCAuthorizationInstructionType(val *CCAuthorizationInstructionType) *NullableCCAuthorizationInstructionType {
	return &NullableCCAuthorizationInstructionType{value: val, isSet: true}
}

func (v NullableCCAuthorizationInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCCAuthorizationInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


