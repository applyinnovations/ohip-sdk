/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the DepositTransferCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositTransferCriteriaType{}

// DepositTransferCriteriaType Criteria type for transfer of deposit amount from one reservation to one or more reservation(s).
type DepositTransferCriteriaType struct {
	// Property where the reservation exists.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// The reservation id and the amount to transfer detail.
	ToReservations []DepositTransferToReservationType `json:"toReservations,omitempty"`
	// User Comments for the transfer operation.
	Comments *string `json:"comments,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
}

// NewDepositTransferCriteriaType instantiates a new DepositTransferCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositTransferCriteriaType() *DepositTransferCriteriaType {
	this := DepositTransferCriteriaType{}
	return &this
}

// NewDepositTransferCriteriaTypeWithDefaults instantiates a new DepositTransferCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositTransferCriteriaTypeWithDefaults() *DepositTransferCriteriaType {
	this := DepositTransferCriteriaType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *DepositTransferCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositTransferCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *DepositTransferCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *DepositTransferCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *DepositTransferCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositTransferCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *DepositTransferCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *DepositTransferCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetToReservations returns the ToReservations field value if set, zero value otherwise.
func (o *DepositTransferCriteriaType) GetToReservations() []DepositTransferToReservationType {
	if o == nil || IsNil(o.ToReservations) {
		var ret []DepositTransferToReservationType
		return ret
	}
	return o.ToReservations
}

// GetToReservationsOk returns a tuple with the ToReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositTransferCriteriaType) GetToReservationsOk() ([]DepositTransferToReservationType, bool) {
	if o == nil || IsNil(o.ToReservations) {
		return nil, false
	}
	return o.ToReservations, true
}

// HasToReservations returns a boolean if a field has been set.
func (o *DepositTransferCriteriaType) HasToReservations() bool {
	if o != nil && !IsNil(o.ToReservations) {
		return true
	}

	return false
}

// SetToReservations gets a reference to the given []DepositTransferToReservationType and assigns it to the ToReservations field.
func (o *DepositTransferCriteriaType) SetToReservations(v []DepositTransferToReservationType) {
	o.ToReservations = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *DepositTransferCriteriaType) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositTransferCriteriaType) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *DepositTransferCriteriaType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *DepositTransferCriteriaType) SetComments(v string) {
	o.Comments = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *DepositTransferCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositTransferCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *DepositTransferCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *DepositTransferCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

func (o DepositTransferCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositTransferCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ToReservations) {
		toSerialize["toReservations"] = o.ToReservations
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	return toSerialize, nil
}

type NullableDepositTransferCriteriaType struct {
	value *DepositTransferCriteriaType
	isSet bool
}

func (v NullableDepositTransferCriteriaType) Get() *DepositTransferCriteriaType {
	return v.value
}

func (v *NullableDepositTransferCriteriaType) Set(val *DepositTransferCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositTransferCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositTransferCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositTransferCriteriaType(val *DepositTransferCriteriaType) *NullableDepositTransferCriteriaType {
	return &NullableDepositTransferCriteriaType{value: val, isSet: true}
}

func (v NullableDepositTransferCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositTransferCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


