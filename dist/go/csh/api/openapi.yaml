openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Cashiering related functionality in OPERA Cloud.<br\
    \ /><br /> Cashiering provides access to a guest folio, posting journals, receipt\
    \ histories, currency calculations, credit card settlements, and check a guest\
    \ out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This\
    \ document and all content within is available under the Universal Permissive\
    \ License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023\
    \ Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Cashiering API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /csh/v1
tags:
- description: "Cashiering module provides APIs to service front desk billing requirements,\
    \ as well as any requirements related to a reservation's folio. You can retrieve\
    \ a guest folio, post billing charges to guest folio, add routing instructions\
    \ to a reservation, view authorization history, all the way through to checking\
    \ the guest out using the postCheckOut API."
  name: Cashiering
paths:
  /cashierReportPostings:
    get:
      description: You can use this API to get Cashier Report postings. <p><strong>OperationId:</strong>getCashierReportPostings</p>
      operationId: getCashierReportPostings
      parameters:
      - explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Shift drop report created when cashier closure is completed.
          It is an integral part of closure report and is not to be printed or accessed
          by itself.
        in: query
        name: requestType
        schema:
          enum:
          - Cash
          - Check
          - ForeignCurrency
          - CreditCard
          - Miscellaneous
          - ArSettlements
          - DepositTransfers
          - Shiftdrop
          type: string
      - description: The Cashier Shift Number.
        in: query
        name: closureNo
        schema:
          type: number
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: Cashier closure shift drop location code.
        in: query
        name: shiftDropLocationCode
        schema:
          type: string
      - description: Cashier closure shift drop others payment method type bag number.
        in: query
        name: bagNumberForOthers
        schema:
          type: string
      - description: Cashier closure shift drop cash payment method type bag number.
        in: query
        name: bagNumberForCash
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierReportPostingsInfo'
          description: Response for fetching the Cashier report transactions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierReportPostings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Report Postings
      tags:
      - Cashiering
  /cashiers/{cashierId}/closure:
    put:
      description: You can use this API to change Cashier Closure. <p><strong>OperationId:</strong>putCashier</p>
      operationId: putCashier
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCashier_request'
        description: Request to close cashier's shift.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Close Cashier
      tags:
      - Cashiering
      x-codegen-request-body-name: cashierClosure
  /cashiers/{cashierId}/locks:
    delete:
      description: You can use this API to Break Cashier Lock. <p><strong>OperationId:</strong>breakCashierLock</p>
      operationId: breakCashierLock
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Break Cashier Lock
      tags:
      - Cashiering
    get:
      description: You can use this API to Acquire Cashier Locks. <p><strong>OperationId:</strong>getCashierLock</p>
      operationId: getCashierLock
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/acquiredCashierLock'
          description: Response for the Cashier Lock request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierLock not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Acquire Cashier Locks
      tags:
      - Cashiering
  /cashiers/{cashierId}/transactions:
    get:
      description: You can use this API to get Cashier Transactions. <p><strong>OperationId:</strong>getCashierTransactions</p>
      operationId: getCashierTransactions
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier Shift Number.
        in: query
        name: closureNo
        schema:
          type: number
      - description: Cashier closure shift drop location code.
        in: query
        name: shiftDropLocationCode
        schema:
          type: string
      - description: Cashier closure shift drop others payment method type bag number.
        in: query
        name: bagNumberForOthers
        schema:
          type: string
      - description: Cashier closure shift drop cash payment method type bag number.
        in: query
        name: bagNumberForCash
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierTransactionsDetails'
          description: Response for the fetch cashier's shift transactions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierTransactions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Transactions
      tags:
      - Cashiering
  /cashiersLock/{lockId}:
    delete:
      description: You can use this API to Release Cashier Lock. <p><strong>OperationId:</strong>releaseCashierLock</p>
      operationId: releaseCashierLock
      parameters:
      - description: Unique ID of the lock.
        example: ""
        in: path
        name: lockId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Release Cashier Lock
      tags:
      - Cashiering
  /compAccountingJournal:
    get:
      description: You can use this API to get Comp Accounting Journal. <p><strong>OperationId:</strong>getCompAccountingJournal</p>
      operationId: getCompAccountingJournal
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - explode: true
        in: query
        name: filterTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: filterRoomNumber
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the results for approval code.
        in: query
        name: approvalCode
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: authorizerNameCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the results for reference number.
        in: query
        name: referenceNumberWildCard
        schema:
          type: string
      - description: Filter the results for supplement.
        in: query
        name: supplementWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compAccountingJournal'
          description: Response for fetching the Complimentary Posting Journal.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompAccountingJournal not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Comp Accounting Journal
      tags:
      - Cashiering
  /fbaReimbursements:
    post:
      description: You can use this API to create FBA Reimbursement. <p><strong>OperationId:</strong>postFBAReimbursement</p>
      operationId: postFBAReimbursement
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postFBAReimbursement_request'
        description: PostFBAReimbursement operation posts reimbursement against the
          selected certificate records.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create FBA Reimbursement
      tags:
      - Cashiering
      x-codegen-request-body-name: fbaReimbursementCriteria
  /fbaSettlements:
    post:
      description: You can use this API to create FBA Settlement. <p><strong>OperationId:</strong>postFBASettlement</p>
      operationId: postFBASettlement
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postFBAReimbursement_request'
        description: PostFBASettlement operation posts settlement against the selected
          certificate records.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create FBA Settlement
      tags:
      - Cashiering
      x-codegen-request-body-name: fbaReimbursementCriteria
  /foreignCurrency:
    put:
      description: This API will allow you to Calculate Foreign Currency exchange.
        <p><strong>OperationId:</strong>calculateForeignCurrency</p>
      operationId: calculateForeignCurrency
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/calculateForeignCurrency_request'
        description: Operation to calculate foreign currency exchange.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculatedForeignCurrency'
          description: Information regarding charges in batch result for each reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Calculate Foreign Currency
      tags:
      - Cashiering
      x-codegen-request-body-name: foreignCurrencyCriteria
  /foreignCurrencyExchange:
    post:
      description: You can use this API to Create Foreign Currency Exchange. <p><strong>OperationId:</strong>postForeignCurrencyExchange</p>
      operationId: postForeignCurrencyExchange
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postForeignCurrencyExchange_request'
        description: A set of posting transactions that need to be posted with regards
          to exchange.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/foreignCurrencyExchangeTransaction'
          description: Response of the posting foreign currency exchange transaction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Foreign Currency Exchange
      tags:
      - Cashiering
      x-codegen-request-body-name: foreignCurrencyExchange
  /hotels/{hotelId}/advanceFolio/batchJobs:
    post:
      description: You can use this API to create Batch Advance Folio. <p><strong>OperationId:</strong>postAdvanceFolio</p>
      operationId: postAdvanceFolio
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAdvanceFolio_request'
        description: Request for submitting batch advance folio.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Batch Advance Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: batchAdvanceFolio
  /hotels/{hotelId}/articlesSale:
    post:
      description: You can use this API to create Articles Sale. <p><strong>OperationId:</strong>postArticlesSale</p>
      operationId: postArticlesSale
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postArticlesSale_request'
        description: "Request to post a set of charges, payments and generate a bill\
          \ for a PasserBy or for the Post-It functionality . A PasserBy is someone\
          \ who is not staying at the Property. A PasserBy transaction requires a\
          \ Profile in Opera for whom the the folio is being created."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/articlesSale'
          description: Details of the folio created.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Articles Sale
      tags:
      - Cashiering
      x-codegen-request-body-name: articlesSaleCriteria
  /hotels/{hotelId}/authorizers/credits:
    get:
      description: You can use this API to get Authorizers Credit Info. <p><strong>OperationId:</strong>getAuthorizersCreditInfo</p>
      operationId: getAuthorizersCreditInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This flag will notify the service if the Credit details will
          also be returned or not.
        in: query
        name: includeCreditDetails
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizersCreditInfo'
          description: Returns credit information of Comp Accounting Authorizers.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizersCreditInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Authorizers Credit Info
      tags:
      - Cashiering
  /hotels/{hotelId}/autoCheckoutReservations/batchJobs:
    post:
      description: You can use this API to create Auto Checkout Reservation Batch.
        <p><strong>OperationId:</strong>postAutoCheckoutReservations</p>
      operationId: postAutoCheckoutReservations
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAutoCheckoutReservations_request'
        description: Request type for batch auto checkout.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/batchAutoCheckoutDetails'
          description: Response for batch auto check out.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create Auto Checkout Reservation Batch '
      tags:
      - Cashiering
      x-codegen-request-body-name: batchAutoCheckoutReservation
  /hotels/{hotelId}/autoSettlements/batchJobs:
    post:
      description: You can use this API to create Batch Auto Settlement. <p><strong>OperationId:</strong>postBatchAutoSettlement</p>
      operationId: postBatchAutoSettlement
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBatchAutoSettlement_request'
        description: Request type for batch auto settlement.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Batch Auto Settlement
      tags:
      - Cashiering
      x-codegen-request-body-name: batchAutoSettlementCriteria
  /hotels/{hotelId}/batchDeposits:
    post:
      description: You can use this API to create batch deposits. <p><strong>OperationId:</strong>postBatchDeposit</p>
      operationId: postBatchDeposit
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBatchDeposit_request'
        description: Request for submitting batch deposit for reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create batch deposits
      tags:
      - Cashiering
      x-codegen-request-body-name: batchDeposit
  /hotels/{hotelId}/bedTax:
    get:
      description: You can use this API to Retrieve bed tax information for a property.
        <p><strong>OperationId:</strong>getBedTaxInfo</p>
      operationId: getBedTaxInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Arrival Date of the reservation
        in: query
        name: arrival
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bedTaxInfo'
          description: Response for bed transaction info
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BedTaxInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get bed tax information
      tags:
      - Cashiering
    post:
      description: You can use this API to create new bed tax information for a property.
        <p><strong>OperationId:</strong>postBedTaxInfo</p>
      operationId: postBedTaxInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBedTaxInfo_request'
        description: Request type for create bed transaction info
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create bed tax information
      tags:
      - Cashiering
      x-codegen-request-body-name: bedTaxCriteria
  /hotels/{hotelId}/bedTax/{taxRegistraitionNo}:
    delete:
      description: You can use this API to delete bed tax information for a property.
        <p><strong>OperationId:</strong>removeBedTaxInfo</p>
      operationId: removeBedTaxInfo
      parameters:
      - description: Unique number of the tax registration.
        example: ""
        in: path
        name: taxRegistraitionNo
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete bed tax information
      tags:
      - Cashiering
    put:
      description: You can use this API to Update bed tax information for a property.
        <p><strong>OperationId:</strong>putBedTaxInfo</p>
      operationId: putBedTaxInfo
      parameters:
      - description: Unique number of the tax registration.
        example: ""
        in: path
        name: taxRegistraitionNo
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBedTaxInfo_request'
        description: Request type for change bed transaction info
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change bed tax information
      tags:
      - Cashiering
      x-codegen-request-body-name: bedTaxCriteria
  /hotels/{hotelId}/billingCharges:
    put:
      description: You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharges</p>
      operationId: putBillingCharges
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putBillingCharges_request'
        description: Request to edit multiple billing charge information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/putBillingChargesStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Billing Charges
      tags:
      - Cashiering
      x-codegen-request-body-name: putBillingCharges
  /hotels/{hotelId}/bulkCCSettlements/{batchId}/status:
    get:
      description: You can use this API to get Batch CC Settlements Status. <p><strong>OperationId:</strong>getBatchCCSettlementsStatus</p>
      operationId: getBatchCCSettlementsStatus
      parameters:
      - description: Unique ID of the batch
        example: ""
        in: path
        name: batchId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ccBatchSettlementsStatus'
          description: Response for credit card settlements status.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BatchCCSettlementsStatus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Batch CC Settlements Status
      tags:
      - Cashiering
  /hotels/{hotelId}/cashiers/{cashierId}/closure:
    get:
      description: You can use this API to get Cashier Closure. <p><strong>OperationId:</strong>getCashierClosure</p>
      operationId: getCashierClosure
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier Lock Handle to pass along with operation which required
          cashier to be locked.
        in: query
        name: cashierLockHandle
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierClosureDetails'
          description: Response for the fetch Cashier Closure information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierClosure not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Closure
      tags:
      - Cashiering
  /hotels/{hotelId}/cashiers/{cashierId}/closureReports:
    get:
      description: You can use this API to get Cashier Closure Reports List. <p><strong>OperationId:</strong>getCashierClosureReportsList</p>
      operationId: getCashierClosureReportsList
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier Shift Number.
        in: query
        name: closureNo
        schema:
          type: number
      - description: Cashier closure shift drop location code.
        in: query
        name: shiftDropLocationCode
        schema:
          type: string
      - description: Cashier closure shift drop others payment method type bag number.
        in: query
        name: bagNumberForOthers
        schema:
          type: string
      - description: Cashier closure shift drop cash payment method type bag number.
        in: query
        name: bagNumberForCash
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierClosureReportsList'
          description: "Returns whether a particular report is applicable or not based\
            \ on payment posting type. When no postings for a particular payment type\
            \ is found, that report is marked as not applicable in the closure report."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierClosureReportsList not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Closure Reports List
      tags:
      - Cashiering
  /hotels/{hotelId}/cashiers/{cashierId}/folioTaxPayments:
    put:
      description: You can use this API to change folio tax payments. <p><strong>OperationId:</strong>reverseFolioTaxPayment</p>
      operationId: reverseFolioTaxPayment
      parameters:
      - description: Unique ID of the cashier.
        example: ""
        in: path
        name: cashierId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reverseFolioTaxPayment_request'
        description: Request to reverse a Payment Tax record for Thailand Tax requirement.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTaxPaymentReversal'
          description: Response for the reverse Thailand Tax Payment Tax record request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change folio tax payments
      tags:
      - Cashiering
      x-codegen-request-body-name: transactionReversal
  /hotels/{hotelId}/cashierslock/{lockId}:
    put:
      description: You can use this API to Extend cashiers lock. <p><strong>OperationId:</strong>putCashierLock</p>
      operationId: putCashierLock
      parameters:
      - description: Unique ID of the lock.
        example: ""
        in: path
        name: lockId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putCashierLock_request'
        description: Operation for extending the lifetime of a lock on a cashier.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/extendedCashierLock'
          description: This response will indicate whether or not the extension was
            successful. This operation may return errors when the lock being requested
            to be extended no longer exists. This can happen when the lock has already
            expired and cleaned up.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Extend Cashier Lock
      tags:
      - Cashiering
      x-codegen-request-body-name: cashierLockCriteriaToExtend
  /hotels/{hotelId}/ccSettlement:
    post:
      description: You can use this API to create cc Settlement. <p><strong>OperationId:</strong>postCCSettlement</p>
      operationId: postCCSettlement
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCCSettlement_request'
        description: Request object to change credit card settlement information.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create CreditCard Settlement
      tags:
      - Cashiering
      x-codegen-request-body-name: ccSettlementCriteria
  /hotels/{hotelId}/ccSettlements/batchJobs:
    post:
      description: You can use this API to create Batch CC Settlements. <p><strong>OperationId:</strong>postBatchCCSettlements</p>
      operationId: postBatchCCSettlements
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBatchCCSettlements_request'
        description: Request to process batch settlements
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Batch CC Settlements
      tags:
      - Cashiering
      x-codegen-request-body-name: ccBatchSettlementsProcessCriteria
  /hotels/{hotelId}/check/{checkNumber}:
    get:
      description: You can use this API to get check details. <p><strong>OperationId:</strong>getCheckDetails</p>
      operationId: getCheckDetails
      parameters:
      - description: Unique number of the check
        example: ""
        in: path
        name: checkNumber
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkDetails'
          description: Response object to Fetch the check details for a given posting
            posted through the POS.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CheckDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get check details
      tags:
      - Cashiering
    post:
      description: This operation is to add guest check details for posted check transactions.
        <p><strong>OperationId:</strong>postGuestCheckDetails</p>
      operationId: postGuestCheckDetails
      parameters:
      - description: Unique number of the check
        example: ""
        in: path
        name: checkNumber
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postGuestCheckDetails_request'
        description: Request to process a guest check detail.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post Guest Check Details
      tags:
      - Cashiering
      x-codegen-request-body-name: guestCheckDetails
  /hotels/{hotelId}/check/{checkNumber}/charges:
    delete:
      description: You can use this API to delete (void) Billing Check Charges. <p><strong>OperationId:</strong>voidBillingCheckCharges</p>
      operationId: voidBillingCheckCharges
      parameters:
      - description: Unique number of the check.
        example: ""
        in: path
        name: checkNumber
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The date against which void (reverse) charges are posted.
        in: query
        name: revenueDate
        schema:
          format: date
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: checkId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: checkIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: checkIdType
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - description: Text describing any applicable detail of the posting.
        in: query
        name: postingRemark
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Billing Check Charges
      tags:
      - Cashiering
  /hotels/{hotelId}/closureList:
    get:
      description: You can use this API to get Cashier Closure Information. <p><strong>OperationId:</strong>getCashierClosureInfo</p>
      operationId: getCashierClosureInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier Shift Number.
        in: query
        name: closureNo
        schema:
          type: number
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: Cashier closure shift drop location code.
        in: query
        name: shiftDropLocationCode
        schema:
          type: string
      - description: Cashier closure shift drop others payment method type bag number.
        in: query
        name: bagNumberForOthers
        schema:
          type: string
      - description: Cashier closure shift drop cash payment method type bag number.
        in: query
        name: bagNumberForCash
        schema:
          type: string
      - description: Business Date of cashier closure.
        in: query
        name: closureBusinessDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashierClosureInformation'
          description: Response to the request to get financial details for a Posting
            Activity. This will return the before and after values for the transactions
            which were changed.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CashierClosureInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Cashier Closure Information
      tags:
      - Cashiering
  /hotels/{hotelId}/compRoutingInstructions:
    get:
      description: You can use this API to get Comp Routing Instructions. <p><strong>OperationId:</strong>getCompRoutingInstructions</p>
      operationId: getCompRoutingInstructions
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Family name or last name of the guest
        in: query
        name: nameWildcard
        schema:
          type: string
      - description: Given name or first name of the guest.
        in: query
        name: firstNameWildCard
        schema:
          type: string
      - explode: true
        in: query
        name: roomNumberCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Membership Card number.
        in: query
        name: membershipId
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This reservation is in checked in status and the business date
          is past departure date. This could occur when ORS and PMS are in same environment.
        explode: true
        in: query
        name: resStatusCode
        schema:
          items:
            enum:
            - Reserved
            - Requested
            - NoShow
            - Cancelled
            - InHouse
            - CheckedOut
            - Waitlisted
            - DueIn
            - DueOut
            - Walkin
            - PendingCheckout
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Status which indicates that the Request of Comp Routing was declined
        explode: true
        in: query
        name: compRoutingStatuses
        schema:
          items:
            enum:
            - Request
            - Comp
            - Declined
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compRoutingInstructions'
          description: Response object containing comp routing instructions for a
            reservation .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompRoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Comp Routing Instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/compTrxAuthorizers:
    get:
      description: You can use this API to get Comp Trx Authorizers. <p><strong>OperationId:</strong>getCompTrxAuthorizers</p>
      operationId: getCompTrxAuthorizers
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Folio Window Number to where transactions will be transfered.
        in: query
        name: targetFolioWindowNo
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: uniqueIdId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: uniqueIdIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: uniqueIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: List of transactions to be transfered.
        explode: true
        in: query
        name: transaction
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: authorizerIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: authorizerIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: authorizerIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compTrxAuthorizers'
          description: Response object for fetch comp authorizers operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CompTrxAuthorizers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Comp Trx Authorizers
      tags:
      - Cashiering
  /hotels/{hotelId}/creditBill:
    post:
      description: You can use this API to create Credit Bill. <p><strong>OperationId:</strong>postCreditBill</p>
      operationId: postCreditBill
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCreditBill_request'
        description: Request to post a Credit Folio for an existing Folio. Credit
          Bill Functionality parameter is required.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postedCreditBill'
          description: Response for the request to create a Credit Folio.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Credit Bill
      tags:
      - Cashiering
      x-codegen-request-body-name: creditBillCriteria
  /hotels/{hotelId}/creditBill/action/validate:
    put:
      description: You can use this API to validate credit Bill. <p><strong>OperationId:</strong>validateCreditBill</p>
      operationId: validateCreditBill
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCreditBill_request'
        description: Request to check if a Folio is valid for Credit Bill.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/validatedCreditBill'
          description: Response to the request to check if a Folio is valid for Credit
            Bill.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate Credit Bill
      tags:
      - Cashiering
      x-codegen-request-body-name: creditBillCriteria
  /hotels/{hotelId}/creditLimitsOveragePayments:
    get:
      description: You can use this API to get Credit Limits Overage Payments. <p><strong>OperationId:</strong>getCreditLimitOveragePayments</p>
      operationId: getCreditLimitOveragePayments
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Guest name associated with the transaction.
        in: query
        name: guestNameWildCard
        schema:
          type: string
      - description: Room number associated with the transaction.
        in: query
        name: roomNumberWildCard
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditLimitOveragePaymentsInfo'
          description: Response for Fetch Credit Limit Overage Payments request
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CreditLimitOveragePayments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Credit Limits Overage Payments
      tags:
      - Cashiering
    post:
      description: You can use this API to create Credit Limit Overage Payments. <p><strong>OperationId:</strong>postCreditLimitOveragePayments</p>
      operationId: postCreditLimitOveragePayments
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCreditLimitOveragePayments_request'
        description: Request to start the Credit Limit Overage process for the reservations
          with a folio window balance equal or higher to the credit limit set for
          the credit card payment method of that folio window.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/creditLimitOveragePaymentsDetails'
          description: Response for Submit Credit Limit Overage Payments request
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Credit Limit Overage Payments
      tags:
      - Cashiering
      x-codegen-request-body-name: creditLimitOveragePayments
  /hotels/{hotelId}/creditcardTransaction/logs:
    post:
      description: You can use this API to create vault transaction. <p><strong>OperationId:</strong>registerVaultTransaction</p>
      operationId: registerVaultTransaction
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/registerVaultTransaction_request'
        description: Request to register the vault HTTP transaction.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Register Vault Transaction
      tags:
      - Cashiering
      x-codegen-request-body-name: vaultTransaction
  /hotels/{hotelId}/creditcardsurcharge:
    get:
      description: You can use this API to get CC Surcharge Information. <p><strong>OperationId:</strong>getCCSurchargeInfo</p>
      operationId: getCCSurchargeInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: folioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Track2 data for the card which would be sent to the CC vendor
          as part of the authorization.
        in: query
        name: track2Data
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: code
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: amountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: amountCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: percent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: uniqueIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: uniqueIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: uniqueIdType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Display Order sequence.
        in: query
        name: orderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: The approval code authenticates the authorization.
        in: query
        name: approvalCode
        schema:
          type: string
      - description: Unique Authorization Sequence for the authorization and settlement.
        in: query
        name: originalAuthSequence
        schema:
          type: integer
      - description: Vendor transaction id for the authorization.
        in: query
        name: vendorTranId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: postingAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: postingAmountCurrencyCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ccSurchargeDetails'
          description: Response to the request to fetch Credit Card Surcharge information
            for a Credit Card Payment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CCSurchargeInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get CC Surcharge Information
      tags:
      - Cashiering
  /hotels/{hotelId}/depositFolio:
    get:
      description: You can use this API to get Deposit Folio. <p><strong>OperationId:</strong>getDepositFolio</p>
      operationId: getDepositFolio
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for deposit folio instructions that can be used in
          requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - ProjectedRevenue
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: policyIdId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockIdId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationDepositFolios'
          description: Deposit Posting Information for a reservation. Contains all
            deposit payments made for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DepositFolio not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Deposit Folio
      tags:
      - Cashiering
  /hotels/{hotelId}/depositTransactions:
    get:
      description: You can use this API to get Deposit Folio Transaction Details.
        <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>
      operationId: getDepositFolioTransactionDetails
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to indicate if the automatically generated transactions,\
          \ related to the main transaction number above, are also to be retrieved\
          \ as part of this request."
        in: query
        name: includeGenerates
        schema:
          type: boolean
      - description: Unique Transaction Number of the transaction(posting) for which
          details are required.
        explode: true
        in: query
        name: transactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Flag to indicate what currency exchange information text needs
          to be included in response.
        in: query
        name: includeExchangeInformation
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositFolioTransactionDetails'
          description: Response for the fetch transaction details request. Detail
            information regarding the folio transaction will be returned
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DepositFolioTransactionDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Deposit Folio Transaction Details
      tags:
      - Cashiering
  /hotels/{hotelId}/depositfolios/action/validate:
    put:
      description: You can use this API to validate Deposit Folio. <p><strong>OperationId:</strong>validateDepositFolio</p>
      operationId: validateDepositFolio
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/validateDepositFolio_request'
        description: Request to validate a Deposit Folio for a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositedFolioValidate'
          description: Information regarding the Deposit Policy if a Deposit Folio
            is going to be created for this policy.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate Deposit Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: depositFolioValidateCriteria
  /hotels/{hotelId}/externalSystems/{externalSysCode}/reservations/{reservationId}/depositPayments:
    post:
      description: You can use this API to create Deposit Payment with external reference.
        <p><strong>OperationId:</strong>postDepositPaymentByExtId</p>
      operationId: postDepositPaymentByExtId
      parameters:
      - description: External System's reservation ID.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code to identify the external system from which the request is
          coming. This is the ExternalSystem ID used to exchange information between
          OPERA and the external system.
        example: ""
        in: path
        name: externalSysCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postDepositPaymentByExtId_request'
        description: Request to post a deposit payment to a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositedPayment'
          description: Response for the post deposit payment request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Deposit Payment using external reference.
      tags:
      - Cashiering
      x-codegen-request-body-name: depositPayment
  /hotels/{hotelId}/financialPostings:
    get:
      description: You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p>
      operationId: getFinancialPostings
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - explode: true
        in: query
        name: filterTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: filterRoomNumber
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the results for reference number.
        in: query
        name: referenceNumberWildCard
        schema:
          type: string
      - description: Filter the results for Cheque number's code.
        in: query
        name: checkNumberWildCard
        schema:
          type: string
      - description: Filter the results for supplement.
        in: query
        name: supplementWildCard
        schema:
          type: string
      - description: Filters the results for approval code.
        in: query
        name: approvalCode
        schema:
          type: string
      - explode: true
        in: query
        name: approvalStatusCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the result to only include transactions in this window
          number.
        explode: true
        in: query
        name: folioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: Filters the result to only display the postings that were made
          during the cashier closure range
        in: query
        name: closureNo
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/financialPostings'
          description: Response for fetching the Posting Journal.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FinancialPostings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Financial Postings
      tags:
      - Cashiering
  /hotels/{hotelId}/fiscalCommands:
    post:
      description: You can use this API to create Fiscal Invoice. <p><strong>OperationId:</strong>postFiscalCommandInvoice</p>
      operationId: postFiscalCommandInvoice
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postFiscalCommandInvoice_request'
        description: Request to generate commands and communicate with fiscal service
          from fiscal terminals screen..
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalCommandsResponseInfo'
          description: Response after generating a commands from Fiscal Terminals
            screen.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fiscal Invoice
      tags:
      - Cashiering
      x-codegen-request-body-name: fiscalFolioCriteria
  /hotels/{hotelId}/fiscalFolios:
    post:
      description: You can use this API to create Fiscal Information Folio. <p><strong>OperationId:</strong>generateFiscalFolio</p>
      operationId: generateFiscalFolio
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/generateFiscalFolio_request'
        description: Request to generate fiscal Information folio.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalInformationFolio'
          description: Provides information which is used for fiscal response processing.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fiscal Information Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: fiscalInfoFolioCriteria
  /hotels/{hotelId}/folio/{folioId}/convert:
    put:
      description: You can use this API to Convert folio. <p><strong>OperationId:</strong>convertFolio</p>
      operationId: convertFolio
      parameters:
      - description: Unique ID of the folio
        example: ""
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/convertFolio_request'
        description: Request to convert folio from a Non Fiscal Folio type to a Fiscal
          Folio Type. Functionality is used in Italy and is only available when the
          country mode is set to Italy.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/convertFolioDetails'
          description: Response to the request to Convert Folio. Includes the new
            converted folio information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Convert Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: convertFolioCriteria
  /hotels/{hotelId}/folio/{folioId}/fiscalCommands:
    post:
      deprecated: true
      description: You can use this API to create Fiscal Invoice.<br><p><strong><mark>This
        API is deprecated. Please use postFiscalCommandInvoice instead</mark></strong></p>
        <p><strong>OperationId:</strong>postFiscalInvoice</p>
      operationId: postFiscalInvoice
      parameters:
      - description: Unique ID of the folio.
        example: ""
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postFiscalCommandInvoice_request'
        description: Request to generate commands and communicate with fiscal service
          from fiscal terminals screen..
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fiscal Invoice
      tags:
      - Cashiering
      x-codegen-request-body-name: fiscalFolioCriteria
  /hotels/{hotelId}/folioHistory:
    get:
      description: You can use this API to get folio history for a reservation. <p><strong>OperationId:</strong>getFolioHistory</p>
      operationId: getFolioHistory
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Indicates if search includes AR Folios.
        in: query
        name: aR
        schema:
          type: boolean
      - description: Indicates if search includes Check Out Folios.
        in: query
        name: checkOut
        schema:
          type: boolean
      - description: Indicates if search includes Credit Bill Folios.
        in: query
        name: creditBill
        schema:
          type: boolean
      - description: Indicates if search result includes Associated Bills and is only
          applied when Folio History for a particular reservation (i.e. ReservationID
          has a value) is requested.
        in: query
        name: includeAssociatedFolios
        schema:
          type: boolean
      - description: Indicates if search includes No Show Folios.
        in: query
        name: noShow
        schema:
          type: boolean
      - description: Indicates if search includes Offline Folios.
        in: query
        name: offlineFolio
        schema:
          type: boolean
      - description: Indicates if search includes Passer By Folios.
        in: query
        name: passerBy
        schema:
          type: boolean
      - description: Indicates if search includes Post-It Folios.
        in: query
        name: postIt
        schema:
          type: boolean
      - description: Indicates if search includes Video Check Out Folios.
        in: query
        name: videoCheckOut
        schema:
          type: boolean
      - description: Folio History Date.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Room Number to which this record applies.
        in: query
        name: room
        schema:
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: firstName
        schema:
          type: string
      - description: Credit card number used.
        in: query
        name: creditCardNo
        schema:
          type: string
      - description: Folio Number.
        in: query
        name: folioNo
        schema:
          type: string
      - description: Invoice Number.
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Addressee Name filter. Works with the Addressee Functionality.
        in: query
        name: addresseeName
        schema:
          type: string
      - description: Fiscal Folio Number filter. Works with the Fiscal Folio Number
          Functionality.
        in: query
        name: fiscalFolioNo
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: partnerFiscalFolioStatusCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioHistoryResponse'
          description: Response for the fetch Folio History.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get folio history
      tags:
      - Cashiering
  /hotels/{hotelId}/folioPrinters:
    get:
      description: You can use this API to get folio printers. <p><strong>OperationId:</strong>getFolioPrinters</p>
      operationId: getFolioPrinters
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to decide if folios is to be generated for all windows in
          addition to the one requested with applicable postings and zero balance.
          If any of the windows have non-zero balance then folios are not generated
          for other windows.
        in: query
        name: allFolioWindow
        schema:
          type: boolean
      - description: Correction flag
        in: query
        name: correction
        schema:
          type: boolean
      - description: Indicates the type of folio to be generated
        in: query
        name: debitFolio
        schema:
          type: boolean
      - in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: Manual Folio Number used for settlement during checkout
        in: query
        name: manualFolioNo
        schema:
          type: integer
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: Applicable for Fiscal Terminal. The ID of the terminal where
          the fiscal device is connected.
        in: query
        name: fiscalTerminalId
        schema:
          type: string
      - description: Event being generated by a Supplemental Folio.
        in: query
        name: eventType
        schema:
          enum:
          - CheckOut
          - EarlyDeparture
          - AdvanceBill
          - InterimBill
          - PasserBy
          - PostIt
          - CreditBill
          - Deposit
          - DepositRefund
          - AutoFolio
          - PrepaidCard
          - AutoSettlement
          - InformationFolio
          - SupplementalFolio
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileIdId
        schema:
          type: string
      - description: Description of currency Code.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Description of exchange rate.
        in: query
        name: exchangeRate
        schema:
          type: number
      - description: The bill number of the original bill for which the Credit Bill
          is being generated.
        in: query
        name: associatedBillNumber
        schema:
          type: number
      - description: The folio type of the original bill for which the Credit Bill
          is being generated.
        in: query
        name: associatedBillFolioType
        schema:
          type: string
      - description: The folio number queue(used in certain countries) of the original
          bill for which the Credit Bill is being generated.
        in: query
        name: associatedBillQueueName
        schema:
          type: string
      - description: The Fiscal Folio Bill Number(from a Fiscal System) of the original
          bill for which the Credit Bill is being generated.
        in: query
        name: associatedBillFiscalBillNumber
        schema:
          type: string
      - description: The bill generation date of the original bill for which the Credit
          Bill is being generated.
        in: query
        name: associatedBillGenerationDate
        schema:
          format: date
          type: string
      - description: Folio Type to be assigned to generated folio. This is a country
          requirement.
        in: query
        name: folioType
        schema:
          type: string
      - description: Fiscal folio flag to call fiscal folio web service after folio
          generation.
        in: query
        name: generateFiscalFolio
        schema:
          type: boolean
      - description: Folio Queue name.
        in: query
        name: queueName
        schema:
          type: string
      - description: Fiscal Folio sequence ID stored in queue table.
        in: query
        name: folioSeqId
        schema:
          type: integer
      - description: Action to generate Offline folio when no reponse is received
          from fiscal service.
        in: query
        name: fiscalFolioInstruction
        schema:
          enum:
          - Retry
          - New
          - Void
          - Offline
          type: string
      - description: Contains transaction service type.
        in: query
        name: transactionServiceType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioPrinters'
          description: "Response to the request to fetch the Folio Printers applicable\
            \ for a Folio, based on the"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioPrinters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get folio printers
      tags:
      - Cashiering
  /hotels/{hotelId}/folioTypeNames:
    get:
      description: You can use this API to get Folio Type Name. <p><strong>OperationId:</strong>getFolioTypeName</p>
      operationId: getFolioTypeName
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The internal folio window Id for the reservation to determine
          the guest language details.
        in: query
        name: internalFolioWindowId
        schema:
          type: string
      - description: The Filter language code which will be used to retrieve the report
          name set for this language.
        in: query
        name: languageCode
        schema:
          type: string
      - description: The Folio Type for which the details are requested.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: "The Folio Report Group name. The folio report will be defined\
          \ under each group and based on where the folio has to be printed, Opera\
          \ will pick up the correct folio report name to print."
        in: query
        name: folioReportGroup
        schema:
          enum:
          - Guest
          - Group
          - AccountsReceivables
          - PasserBy
          - PostIt
          - Expense
          - CorrectionHeader
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypeNameInfo'
          description: Response for the fetch Folio Type Information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTypeName not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Folio Type Name
      tags:
      - Cashiering
  /hotels/{hotelId}/folioTypes:
    get:
      description: You can use this API to get Folio Types. <p><strong>OperationId:</strong>getFolioTypes</p>
      operationId: getFolioTypes
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Folio to be use for compress bills.
        in: query
        name: includeCompress
        schema:
          type: boolean
      - description: Folio to be use for credit bills.
        in: query
        name: includeCredit
        schema:
          type: boolean
      - description: Folio Type.
        in: query
        name: folioType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTypesInfo'
          description: Information regarding the Folio Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Folio Types
      tags:
      - Cashiering
  /hotels/{hotelId}/folios/{folioId}/fiscal:
    put:
      description: You can use this API to process fiscal retry status. <p><strong>OperationId:</strong>processFiscalRetry</p>
      operationId: processFiscalRetry
      parameters:
      - description: Unique ID of the folio.
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/processFiscalRetry_request'
        description: The request object to process fiscal retry functionality.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/processFiscalRetryStatus'
          description: The response object to send back the fiscal service response
            to opera.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process Fiscal retry
      tags:
      - Cashiering
      x-codegen-request-body-name: processFiscalRetry
  /hotels/{hotelId}/passerBySale:
    post:
      description: You can use this API to create passer by sale. <p><strong>OperationId:</strong>postPasserBySale</p>
      operationId: postPasserBySale
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postPasserBySale_request'
        description: "Request to post a set of charges, payments and generate a bill\
          \ for a PasserBy or for the Post-It functionality . A PasserBy is someone\
          \ who is not staying at the Property. A PasserBy transaction requires a\
          \ Profile in Opera for whom the the folio is being created."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/passerBySale'
          description: Details of the folio created.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create passer by sale
      tags:
      - Cashiering
      x-codegen-request-body-name: passerBySalesCriteria
  /hotels/{hotelId}/payees/{payeeId}/taxNumber:
    put:
      description: You can use this API to change Payee Tax Number. <p><strong>OperationId:</strong>putPayeeTaxNumber</p>
      operationId: putPayeeTaxNumber
      parameters:
      - description: Unique ID of the payee
        example: ""
        in: path
        name: payeeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putPayeeTaxNumber_request'
        description: Request to validate and change Payee Tax Number.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Payee Tax Number
      tags:
      - Cashiering
      x-codegen-request-body-name: payeeTaxNumber
  /hotels/{hotelId}/policies/{policyId}/transactions/{transactionId}/deposit:
    put:
      description: You can use this API to attach Deposit Policy to Payment. <p><strong>OperationId:</strong>attachDepositPolicyToPayment</p>
      operationId: attachDepositPolicyToPayment
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the policy
        example: ""
        in: path
        name: policyId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/attachDepositPolicyToPayment_request'
        description: Request to attach an existing Deposit Policy on a reservation
          towards an existing deposit payment on the same reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Attach Deposit Policy to Payment
      tags:
      - Cashiering
      x-codegen-request-body-name: attachPolicyApplyCriteria
  /hotels/{hotelId}/postingDates/date/postingSummary:
    get:
      description: You can use this API to get posting Summary. <p><strong>OperationId:</strong>getPostingSummary</p>
      operationId: getPostingSummary
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Configuring this flag to be TRUE will return transactions that
          are auto generated like taxes.
        in: query
        name: includeGenerates
        schema:
          type: boolean
      - description: The date on which the charge is posted.
        in: query
        name: postingDate
        schema:
          format: date
          type: string
      - description: "When set to true,the summary of only the postings using checks\
          \ will be fetched."
        in: query
        name: checkPostings
        schema:
          type: boolean
      - description: "When set to true,the summary of only the postings done by external\
          \ systems will be fetched."
        in: query
        name: postingsByExternalSystem
        schema:
          type: boolean
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - description: "Currency in which the postings are done. If null,amounts posted\
          \ in local currency will be fetched."
        in: query
        name: currency
        schema:
          type: string
      - description: Enumeration Type of Posting Summary Information.
        in: query
        name: postingSummaryType
        schema:
          enum:
          - Postings
          - Adjustments
          - All
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postingSummaryList'
          description: Response object to fetch daily summary charges from Opera which
            are posted in Opera by external system.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PostingSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Posting Summary
      tags:
      - Cashiering
  /hotels/{hotelId}/prepaidCards:
    post:
      description: You can use this API to create Prepaid Cards. <p><strong>OperationId:</strong>postPrepaidCards</p>
      operationId: postPrepaidCards
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postPrepaidCards_request'
        description: Request type for Prepaid card creation process
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Prepaid Cards
      tags:
      - Cashiering
      x-codegen-request-body-name: prepaidCardCriteria
  /hotels/{hotelId}/prepaidCards/activate:
    put:
      description: You can use this API to activate Prepaid Card. <p><strong>OperationId:</strong>activatePrepaidCard</p>
      operationId: activatePrepaidCard
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/activatePrepaidCard_request'
        description: Request type for activate prepaid card.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activatePrepaidCardStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to activate prepaid card.
      tags:
      - Cashiering
      x-codegen-request-body-name: activatePrepaidCard
  /hotels/{hotelId}/prepaidCards/cancel:
    put:
      description: You can use this API to cancel PrepaidCard Transaction. <p><strong>OperationId:</strong>cancelPrepaidCardTransaction</p>
      operationId: cancelPrepaidCardTransaction
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/cancelPrepaidCardTransaction_request'
        description: Request type for reload prepaid card.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cancelPrepaidCardTransactionStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to cancel prepaid card transaction.
      tags:
      - Cashiering
      x-codegen-request-body-name: cancelPrepaidCardTransaction
  /hotels/{hotelId}/prepaidCards/cashOut:
    put:
      description: You can use this API to cashOut Prepaid Card. <p><strong>OperationId:</strong>cashOutPrepaidCard</p>
      operationId: cashOutPrepaidCard
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/cashOutPrepaidCard_request'
        description: Request type for cashout prepaid card.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cashOutPrepaidCardStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to cash out prepaid card.
      tags:
      - Cashiering
      x-codegen-request-body-name: cashOutPrepaidCard
  /hotels/{hotelId}/prepaidCards/reload:
    put:
      description: You can use this API to reload Prepaid Card. <p><strong>OperationId:</strong>reloadPrepaidCard</p>
      operationId: reloadPrepaidCard
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reloadPrepaidCard_request'
        description: Request type for reload prepaid card.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reloadPrepaidCardStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to reload prepaid card.
      tags:
      - Cashiering
      x-codegen-request-body-name: reloadPrepaidCard
  /hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorize:
    post:
      description: You can use this API to authorize Credit Card Amount by Profile.
        <p><strong>OperationId:</strong>authorizeCreditCardAmountByProfile</p>
      operationId: authorizeCreditCardAmountByProfile
      parameters:
      - description: Unique ID of the profile
        example: ""
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/authorizeCreditCardAmountByProfile_request'
        description: Request for a credit card authorization. An authorization request
          will be sent to the Credit Card Vendor as part of this request.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizationInfo'
          description: Response to the credit card authorization request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Authorize Credit Card Amount by Profile
      tags:
      - Cashiering
      x-codegen-request-body-name: ccAuthorizationCriteria
  /hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorizeInstructions:
    get:
      description: You can use this API to get Credit Card Authorization Instructions
        by Profile. <p><strong>OperationId:</strong>getCCAuthorizationInstructionsByProfile</p>
      operationId: getCCAuthorizationInstructionsByProfile
      parameters:
      - description: Unique ID of the profile
        example: ""
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to indicate if the approval amount should be calculated
          before authorization. If this is true and if the amount is 0 the approval
          amount will be calculated based on the rules.
        in: query
        name: evaluateApprovalAmount
        schema:
          type: boolean
      - description: Currently supported transaction type categories used for credit
          card authorization.
        in: query
        name: sourceOfAuthorization
        schema:
          enum:
          - Additional
          - ArPayment
          - Batch
          - BatchDeposit
          - BatchDepositRefund
          - Billing
          - CheckIn
          - CheckInManualAuth
          - Deposit
          - EndOfDay
          - EndOfDayDeposit
          - Manual
          - Other
          - PasserBy
          - PostIt
          - PreCheckIn
          - Refund
          - Scheduled
          type: string
      - description: Update the card details on the reservations for Chip and Pin
          Authorizations.
        in: query
        name: updateReservation
        schema:
          type: boolean
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          default: OPERA
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          default: Reservation
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdIdContext
        schema:
          default: OPERA
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: profileIdType
        schema:
          default: Profile
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: The folio window where this authorization is applied.
        in: query
        name: folioView
        schema:
          type: integer
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: paymentFolioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Track2 data for the card which would be sent to the CC vendor
          as part of the authorization.
        in: query
        name: track2Data
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: "Flag to determine if the credit card was swiped/manually entered\
          \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
          \ Control is active."
        in: query
        name: cardPresent
        schema:
          type: boolean
      - description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
          is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
        in: query
        name: citId
        schema:
          type: string
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: cardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: code
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: amountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: amountCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: percent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: uniqueIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: uniqueIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: uniqueIdType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Display Order sequence.
        in: query
        name: orderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: The approval code authenticates the authorization.
        in: query
        name: approvalCode
        schema:
          type: string
      - description: Unique Authorization Sequence for the authorization and settlement.
        in: query
        name: originalAuthSequence
        schema:
          type: integer
      - description: Vendor transaction id for the authorization.
        in: query
        name: vendorTranId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: Applicable for chip and pin. The ID of the terminal where the
          chip and pin device is connected.
        in: query
        name: terminalId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: incidentalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: incidentalAmountCurrencyCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ccAuthorizationInstructions'
          description: "Response to the fetch authorization instructions. Based on\
            \ the criteria requested, the response can contain information required\
            \ to send a credit card authorization to the Vendor."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CCAuthorizationInstructionsByProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get CC Authorization Instructions by Profile
      tags:
      - Cashiering
  /hotels/{hotelId}/receiptHistory:
    get:
      description: You can use this API to get Receipt History. <p><strong>OperationId:</strong>getReceiptHistory</p>
      operationId: getReceiptHistory
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Receipt History Date Range(from).
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Receipt History Date Range(to).
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: "Family name, last name or Company Name."
        in: query
        name: name
        schema:
          type: string
      - description: "Given name, first name or names."
        in: query
        name: firstName
        schema:
          type: string
      - description: Receipt Type.
        in: query
        name: receiptTypeName
        schema:
          type: string
      - description: Tax Invoice Number.
        in: query
        name: taxInvoice
        schema:
          type: string
      - description: Receipt Number.
        in: query
        name: receiptNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/receiptHistoryResponse'
          description: Response for the fetch Receipt History.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReceiptHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Receipt History
      tags:
      - Cashiering
  /hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}:
    post:
      description: You can use this API to create rate codes. <p><strong>OperationId:</strong>postRateCode</p>
      operationId: postRateCode
      parameters:
      - description: The Rate Code which is to be posted on the Guest Folio.
        example: ""
        in: path
        name: rateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRateCode_request'
        description: "Operation to post a Rate Code amount to the Reservation. Based\
          \ on the criteria, Products(Packages) which are included as part of the\
          \ Rate Code may be posted along with the room rate amount."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postedRateCode'
          description: Response for the operation that posts a Rate Code amount on
            the reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create rate codes
      tags:
      - Cashiering
      x-codegen-request-body-name: postRateCodeCriteria
  /hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}/action/validate:
    put:
      description: You can use this API to change posted rate codes. <p><strong>OperationId:</strong>checkPostRateCode</p>
      operationId: checkPostRateCode
      parameters:
      - description: The Rate Code which is to be posted on the Guest Folio.
        example: ""
        in: path
        name: rateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRateCode_request'
        description: "Request to check if a Rate Code can be posted to the room manually.\
          \ This will check if the Rate Code is valid, if the Products(Packages) which\
          \ are defined as part of the Rate Code can be posted or reversed."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkedRateCode'
          description: Response for the request to check if a Rate Code can be posted
            to a reservation .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change posted rate codes
      tags:
      - Cashiering
      x-codegen-request-body-name: postRateCodeCriteria
  /hotels/{hotelId}/reservations/billingCharges:
    post:
      description: You can use this API to create Billing Charges in Batch. <p><strong>OperationId:</strong>postBillingChargesInBatch</p>
      operationId: postBillingChargesInBatch
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBillingChargesInBatch_request'
        description: Operation to post billing charge to list of reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postedBillingChargesInBatch'
          description: Information regarding charges in batch result for each reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Billing Charges in Batch
      tags:
      - Cashiering
      x-codegen-request-body-name: billingChargesInBatchCriteria
  /hotels/{hotelId}/reservations/cCSettlements:
    get:
      description: You can use this API to get batch CC Settlements. <p><strong>OperationId:</strong>getBatchCCSettlements</p>
      operationId: getBatchCCSettlements
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: fetch only offline settlements.
        in: query
        name: offlineSettlement
        schema:
          type: boolean
      - description: Transaction Date associated with the transaction.
        in: query
        name: transactionDate
        schema:
          format: date
          type: string
      - description: Guest name associated with the transaction.
        in: query
        name: guestName
        schema:
          type: string
      - description: Room number associated with the transaction.
        in: query
        name: roomId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ccBatchSettlements'
          description: Response for credit card settlements.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BatchCCSettlements not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get batch CC Settlements
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/additionalTaxes:
    get:
      description: You can use this API to get Additional Taxes. <p><strong>OperationId:</strong>getAdditionalTaxes</p>
      operationId: getAdditionalTaxes
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Folio Window.
        in: query
        name: folioView
        schema:
          type: integer
      - description: Currency code on which tax is to be calculated
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/additionalTaxesDetails'
          description: Response object containing additional tax information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AdditionalTaxes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get additional Taxes
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/advancePaymentBalance:
    get:
      description: You can use this API to get advance payment balance. <p><strong>OperationId:</strong>getAdvancePaymentBalance</p>
      operationId: getAdvancePaymentBalance
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: From date of reservation.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Number of nights to calculate advance payment.
        in: query
        name: numberOfNights
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/advancePaymentBalance'
          description: Response for the advance payment balance.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AdvancePaymentBalance not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get advance payment balance
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/advanceRoomCharges:
    post:
      description: You can use this API to create advance Room Charges. <p><strong>OperationId:</strong>postAdvanceRoomCharges</p>
      operationId: postAdvanceRoomCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAdvanceRoomCharges_request'
        description: "Request to post the Room Charges for a reservation in advance.\
          \ This request posts the Room Charges for a reservation for tonight or for\
          \ many nights starting from the last posted night. This can also be used\
          \ to verify if the reservation has already been charged for the full stay.\
          \ Setting the Verify flag will return details regarding the last Room Charge\
          \ posted date and if there are any available dates for which the room charges\
          \ can be posted in advance. Room Charges cannot be posted for dates prior\
          \ to the business date of the resort. To make the actual posting, the verification\
          \ flag should be false."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/advanceRoomChargesReservationInfo'
          description: "Response for the generate advance folio request. Post Advance\
            \ Room Charges Request can return the below error codes : FOF00065 - Reservation\
            \ ID or Resort was not supplied. FOF00147 - Reservation is currently not\
            \ In-House. FOF00148 - Date range requested is not valid. FOF00149 - Advance\
            \ Room Charges Posting was not completed successfully as there was an\
            \ Error during posting. FOF00150 - Room Charges have already been posted\
            \ for the requested dates. FOF00151 - Advance Room Charges could not be\
            \ completed {the error message if any}."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create advance Room Charges
      tags:
      - Cashiering
      x-codegen-request-body-name: advanceRoomCharges
  /hotels/{hotelId}/reservations/{reservationId}/alerts:
    get:
      deprecated: true
      description: You can use this API to get Alert Notices.<br><p><strong><mark>This
        API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getAlerts</p>
      operationId: getAlerts
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: alertArea
        schema:
          enum:
          - CheckIn
          - CheckOut
          - Reservation
          - Billing
          - InHouse
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/alertNotices'
          description: "Response with the fetched alerts, includes global alerts."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Alerts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Alert Notices
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/authorizationHistory:
    get:
      description: You can use this API to get authorization history. <p><strong>OperationId:</strong>getAuthorizationHistory</p>
      operationId: getAuthorizationHistory
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: A flag which indicates whether authorizations should be included
          in the returned list.
        in: query
        name: includeAuthorizations
        schema:
          type: boolean
      - description: A flag which indicates whether payments should be included in
          the returned list.
        in: query
        name: includePayments
        schema:
          type: boolean
      - description: A flag which indicates whether refunds should be included in
          the returned list.
        in: query
        name: includeRefunds
        schema:
          type: boolean
      - description: A flag which indicates whether failures should be included in
          the returned list.
        in: query
        name: includeFailures
        schema:
          type: boolean
      - in: query
        name: folioView
        schema:
          type: integer
      - description: Currently supported transaction type categories used for credit
          card authorization.
        in: query
        name: transactionType
        schema:
          enum:
          - Additional
          - ArPayment
          - Batch
          - BatchDeposit
          - BatchDepositRefund
          - Billing
          - CheckIn
          - CheckInManualAuth
          - Deposit
          - EndOfDay
          - EndOfDayDeposit
          - Manual
          - Other
          - PasserBy
          - PostIt
          - PreCheckIn
          - Refund
          - Scheduled
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizationHistory'
          description: "The result element containing a history list of credit card\
            \ authorizations for a particular reservation, filtered by the requested\
            \ criteria."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AuthorizationHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get authorization history
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/charges:
    get:
      description: You can use this API to get post Billing Charges. <p><strong>OperationId:</strong>getPostBillingCharges</p>
      operationId: getPostBillingCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - explode: true
        in: query
        name: folioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        explode: true
        in: query
        name: chargeCashierId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Transaction Code to post.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Article ID.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Quantity to post to the folio.
        explode: true
        in: query
        name: postingQuantity
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: User-defined posting reference.
        explode: true
        in: query
        name: postingReference
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined posting remark.
        explode: true
        in: query
        name: postingRemark
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates the Cheque number.
        explode: true
        in: query
        name: checkNumber
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Corrected arrangement code from the package associated to this
          transaction.
        explode: true
        in: query
        name: arrangementCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Apply room routing when making this posting.
        explode: true
        in: query
        name: applyRoutingInstructions
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Use the applicable package allowance when making this posting.
        explode: true
        in: query
        name: usePackageAllowance
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: True indicates the Transaction Code is allowed to be posted automatically.
        explode: true
        in: query
        name: autoPosting
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: This is the Default option. Operation checks if charges can be
          posted to the reservation based on the status of the reservation.
        explode: true
        in: query
        name: option
        schema:
          items:
            enum:
            - PackageAllowance
            - RoomRouting
            - PostingStatus
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/billingChargesStatus'
          description: Response when checking or inquiring the available options for
            a set of billing charges.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PostBillingCharges not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Billing Charges
      tags:
      - Cashiering
    post:
      description: You can use this API to post a charge to a folio window. <p><strong>OperationId:</strong>postBillingCharges</p>
      operationId: postBillingCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBillingCharges_request'
        description: Request to post a charge on a reservation's folio.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/billingChargesDetails'
          description: Response notifying if the posting of a charge to a reservation
            was successful.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post Charge to a folio
      tags:
      - Cashiering
      x-codegen-request-body-name: billingCharges
  /hotels/{hotelId}/reservations/{reservationId}/check/{checkNumber}/charges:
    post:
      description: You can use this API to validate the posting prior to posting the
        charge to the folio <p><strong>OperationId:</strong>postBillingCheckCharges</p>
      operationId: postBillingCheckCharges
      parameters:
      - description: Unique number of the check.
        example: ""
        in: path
        name: checkNumber
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBillingCheckCharges_request'
        description: Request object for PostBillingCheckCharges operation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Pre-validate the Billing Charge
      tags:
      - Cashiering
      x-codegen-request-body-name: billingCheckChargesCriteria
  /hotels/{hotelId}/reservations/{reservationId}/checkOuts:
    post:
      description: "This API enables you to check out a guest reservation which is\
        \ in due out status, with options to update the room's housekeeping status\
        \ and set a flag to email the guests folio. <p><strong>OperationId:</strong>postCheckOut</p>"
      operationId: postCheckOut
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCheckOut_request'
        description: "Checkout request can be used to verify a reservation for checkout\
          \ and do an actual checkout. In case the verificationOnly attribute is sent\
          \ false, the operation will perform an actual checkout. In case the verificationOnly\
          \ attribute is sent true, the operation goes through the reservation in\
          \ question and verifies if it's Ok to checkout, otherwise the verification\
          \ status element will provide you the verification code. The verification\
          \ codes are described in the documentation of verificationOnly attribute."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check out a guest
      tags:
      - Cashiering
      x-codegen-request-body-name: reservation
  /hotels/{hotelId}/reservations/{reservationId}/checkOuts/reinstate:
    put:
      description: You can use this API to reinstate Checked Out Reservation. <p><strong>OperationId:</strong>reinstateCheckOut</p>
      operationId: reinstateCheckOut
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reinstateCheckOut_request'
        description: "Request to reinstate checkout reservation in order to post additional\
          \ transactions, etc."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reinstate Checked Out Reservation
      tags:
      - Cashiering
      x-codegen-request-body-name: reinstateCheckedOutReservation
  /hotels/{hotelId}/reservations/{reservationId}/comp/folios/autoSettlements:
    put:
      description: You can use this API to auto Settle CompFolios <p><strong>OperationId:</strong>autoSettleCompFolios</p>
      operationId: autoSettleCompFolios
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/autoSettleCompFolios_request'
        description: Request to auto settle comp folios. OPERA will reference the
          'Default Comp Payment Method' setting to settle the folio if no authorizer
          AR account is associated with the folio.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/autoSettleCompFoliosStatus'
          description: Response for auto settle comp folios. This includes collection
            of auto settled comp folios.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to auto settle comp folios.
      tags:
      - Cashiering
      x-codegen-request-body-name: autoSettleCompFolios
  /hotels/{hotelId}/reservations/{reservationId}/compRedemptionPostings:
    post:
      description: You can use this API to post complimentary bucket redemptions for
        a guest having PTS Membership Type <p><strong>OperationId:</strong>postCompRedemptions</p>
      operationId: postCompRedemptions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCompRedemptions_request'
        description: Request type of Complimentary Bucket Redemptions posting.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to post complimentary bucket redemptions for a guest having
        PTS Membership Type
      tags:
      - Cashiering
      x-codegen-request-body-name: postCompRedemptions
  /hotels/{hotelId}/reservations/{reservationId}/compRedemptionReversals:
    post:
      description: You can use this API to reverse complimentary bucket redemptions
        for a guest having PTS Membership Type <p><strong>OperationId:</strong>reverseCompRedemptions</p>
      operationId: reverseCompRedemptions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reverseCompRedemptions_request'
        description: Request type of Complimentary Bucket Redemptions reversal.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to reverse complimentary bucket redemptions for a guest having
        PTS Membership Type
      tags:
      - Cashiering
      x-codegen-request-body-name: reverseCompRedemptions
  /hotels/{hotelId}/reservations/{reservationId}/deferredTaxesProcess:
    post:
      description: Request to submit a job to post the deferred taxes. <p><strong>OperationId:</strong>postDeferredTaxesProcess</p>
      operationId: postDeferredTaxesProcess
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postDeferredTaxesProcess_request'
        description: Request to submit a job to post the deferred taxes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/deferredTaxesProcessDetails'
          description: Response containing the job identifier to post the deferred
            taxes. Returns appropriate warnings in case if deferred tax is not enabled
            for the hotel or deferred tax is enabled but the reservation has deferred
            taxes already posted or currently under process
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Request to submit a job to post the deferred taxes.
      tags:
      - Cashiering
      x-codegen-request-body-name: deferredTaxesProcess
  /hotels/{hotelId}/reservations/{reservationId}/deposit:
    post:
      description: You can use this API to Process reservations deposit. <p><strong>OperationId:</strong>processReservationDeposit</p>
      operationId: processReservationDeposit
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/processReservationDeposit_request'
        description: Request object to process reservation deposit.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process Reservations deposit
      tags:
      - Cashiering
      x-codegen-request-body-name: reservationDepositCriteria
  /hotels/{hotelId}/reservations/{reservationId}/depositFolios:
    post:
      description: You can use this API to create Deposit Folio. <p><strong>OperationId:</strong>postDepositFolio</p>
      operationId: postDepositFolio
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postDepositFolio_request'
        description: Request to create a Deposit Folio for a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postedDepositFolio'
          description: Response to the request to create a Deposit Folio for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Deposit Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: depositFolioCriteria
  /hotels/{hotelId}/reservations/{reservationId}/depositMaturity:
    get:
      description: You can use this API to get Deposit Maturity Information. <p><strong>OperationId:</strong>getDepositMaturityInfo</p>
      operationId: getDepositMaturityInfo
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositMaturityDetails'
          description: Response object for deposit maturity information type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DepositMaturityInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Deposit Maturity Information
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/depositPayments:
    get:
      description: You can use this API to fetch matured deposits. <p><strong>OperationId:</strong>getMaturedDeposits</p>
      operationId: getMaturedDeposits
      parameters:
      - description: Unique ID of the reservation
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/maturedDepositsDetails'
          description: Response of matured deposits.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MaturedDeposits not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get matured deposits
      tags:
      - Cashiering
    post:
      description: You can use this API to create Deposit Payment. <p><strong>OperationId:</strong>postDepositPayment</p>
      operationId: postDepositPayment
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postDepositPaymentByExtId_request'
        description: Request to post a deposit payment to a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositedPayment'
          description: Response for the post deposit payment request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Deposit Payment
      tags:
      - Cashiering
      x-codegen-request-body-name: depositPayment
  /hotels/{hotelId}/reservations/{reservationId}/depositTransition:
    put:
      description: You can use this API to Transfer Deposit to Guest Folio. <p><strong>OperationId:</strong>transitionDepositToGuestFolio</p>
      operationId: transitionDepositToGuestFolio
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/transitionDepositToGuestFolio_request'
        description: Request to post an existing deposit on a reservation to the Guest
          Folio for No Show or Cancelled Reservations. Deposits remain in the deposit
          ledger until Checkin/Checkout. In the case of No Show or Cancelled reservations
          they remain in the deposit ledger until this request is done.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transition Deposit to Guest Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: depositToGuestFolio
  /hotels/{hotelId}/reservations/{reservationId}/earlyDeparture:
    put:
      description: You can use this API to change early Departure. <p><strong>OperationId:</strong>putForEarlyDeparture</p>
      operationId: putForEarlyDeparture
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putForEarlyDeparture_request'
        description: "Request to change a reservation to an Early Departure. As part\
          \ of this process the reservation will be changed to a Due Out status with\
          \ the departure date being the current business date. Only Inhouse reservations\
          \ can be changed to Early Departure. Before changing the reservation to\
          \ early departure, rate restrictions on the rate code used and any allowances\
          \ consumed by the guest for today will be checked. If there is a penalty\
          \ applicable this can be posted to the reservation."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change early Departure
      tags:
      - Cashiering
      x-codegen-request-body-name: earlyDeparture
  /hotels/{hotelId}/reservations/{reservationId}/earlyDeparture/verify:
    get:
      description: You can use this API to verify early Departure. <p><strong>OperationId:</strong>verifyForEarlyDeparture</p>
      operationId: verifyForEarlyDeparture
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates if check has to be done for Rate Tiers.
        in: query
        name: ignoreCheckOnTieredRate
        schema:
          type: boolean
      - description: Indicates if Rate Restriction check should be overridden.
        in: query
        name: ignoreRateRestriction
        schema:
          type: boolean
      - description: Indicates if any allowance consumed by the guest for today can
          be posted to the Guest Folio. If this cannot be done then the Early Departure
          cannot proceed.
        in: query
        name: postConsumedAllowanceToGuest
        schema:
          type: boolean
      - description: Indicates if the early departure penalty should be posted .
        in: query
        name: postEarlyDeparturePenalty
        schema:
          type: boolean
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/earlyDepartureInfo'
          description: "Response for Early departure verification. Contains information\
            \ regarding early departure penalty amount if applicable and any errors\
            \ or warnings as to why the early departure cannot be done. Possible error\
            \ codes are: FOF00152: An early departure could result in a change to\
            \ the room rate, due to the reduced length of stay. FOF00153: Exchange\
            \ Rates not setup for {currency code} . FOF00155: The partially consumed\
            \ package(s) will be charged to the guest account. FOF00156: There is\
            \ a Rate Code Restriction for {restriction information}. FOF00157: The\
            \ reservation status is not valid for an early departure. FOF00158: Early\
            \ Departure is not required as the reservation is already in Due Out status."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: verifyForEarlyDeparture not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Verify for early Departure
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/fetchStagedTransactions:
    get:
      description: This API is used to fetch the staged transactions for a given reservation.
        <p><strong>OperationId:</strong>getfetchStagedTransactions</p>
      operationId: getfetchStagedTransactions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Folio Window Number of the staged transactions.
        in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/stagedTransactions'
          description: Response to the request to get the Reservation's staged comp
            transactions.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: fetchStagedTransactions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get fetchStagedTransactions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/finalCharges:
    post:
      description: You can use this API to apply final postings on a reservation.
        <p><strong>OperationId:</strong>applyFinalPostings</p>
      operationId: applyFinalPostings
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/applyFinalPostings_request'
        description: Request to apply any final charges or payments to a reservation
          prior to checkout. This operation should be called prior to the guest settlement
          which would then reflect the balance the guest has to pay.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Apply final Postings
      tags:
      - Cashiering
      x-codegen-request-body-name: finalPostings
  /hotels/{hotelId}/reservations/{reservationId}/fiscalPrinting:
    get:
      deprecated: true
      description: You can use this API to get Fiscal Printing Details.<br><p><strong><mark>This
        API is deprecated. Please use getValidateFiscalPrintingDetails instead</mark></strong></p>
        <p><strong>OperationId:</strong>getFiscalPrintingDetails</p>
      operationId: getFiscalPrintingDetails
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The folio window where this settlement is applied.
        in: query
        name: folioView
        schema:
          type: integer
      - description: Folio Type
        in: query
        name: folioType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Reservation Related information.
        explode: true
        in: query
        name: fetchInstruction
        schema:
          items:
            enum:
            - Paymentmethod
            - Profile
            - Foliotype
            - Reservation
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileIdId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fiscalCallStatus'
          description: Check if it will call fiscal printing or not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FiscalPrintingDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fiscal Printing Details
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/fixedCharges:
    delete:
      description: You can use this API to remove fixed Charges for a reservation.
        <p><strong>OperationId:</strong>removeFixedCharges</p>
      operationId: removeFixedCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: fixedChargeID
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete Fixed Charges '
      tags:
      - Cashiering
    get:
      description: You can use this API to get fixed Charges for a reservation. <p><strong>OperationId:</strong>getFixedCharges</p>
      operationId: getFixedCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fixedChargesDetails'
          description: Response that contains either the fixed charges list if fetch
            was successful or error(s) if not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FixedCharges not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Fixed Charges
      tags:
      - Cashiering
    post:
      description: You can use this API to create a fixed Charge for a reservation.
        <p><strong>OperationId:</strong>postFixedCharges</p>
      operationId: postFixedCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/updateFixedCharges_request'
        description: Method to create fixed charges of a reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Fixed Charges
      tags:
      - Cashiering
      x-codegen-request-body-name: fixedCharges
    put:
      description: You can use this API to update fixed Charges for a reservation.
        <p><strong>OperationId:</strong>updateFixedCharges</p>
      operationId: updateFixedCharges
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/updateFixedCharges_request'
        description: Method to update fixed charges of a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Updates Fixed Charges '
      tags:
      - Cashiering
      x-codegen-request-body-name: fixedCharges
  /hotels/{hotelId}/reservations/{reservationId}/flexibleBenefitPostings:
    post:
      description: You can use this API to apply flexible benefit postings. <p><strong>OperationId:</strong>applyFlexibleBenefitPostings</p>
      operationId: applyFlexibleBenefitPostings
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/applyFlexibleBenefitPostings_request'
        description: Apply Flexible Benefit Postings.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Apply flexible benefit postings
      tags:
      - Cashiering
      x-codegen-request-body-name: flexibleBenefitPostingsCriteria
  /hotels/{hotelId}/reservations/{reservationId}/folioTaxPayments:
    get:
      description: You can use this API to get folio tax payments information. <p><strong>OperationId:</strong>getFolioTaxPaymentsInfo</p>
      operationId: getFolioTaxPaymentsInfo
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: folioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Track2 data for the card which would be sent to the CC vendor
          as part of the authorization.
        in: query
        name: track2Data
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: code
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: amountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: amountCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: percent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: uniqueIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: uniqueIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: uniqueIdType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Display Order sequence.
        in: query
        name: orderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: The approval code authenticates the authorization.
        in: query
        name: approvalCode
        schema:
          type: string
      - description: Unique Authorization Sequence for the authorization and settlement.
        in: query
        name: originalAuthSequence
        schema:
          type: integer
      - description: Vendor transaction id for the authorization.
        in: query
        name: vendorTranId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: postingAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: postingAmountCurrencyCode
        schema:
          type: string
      - description: User-defined posting reference.
        in: query
        name: postingReference
        schema:
          type: string
      - description: User-defined posting remark.
        in: query
        name: postingRemark
        schema:
          type: string
      - description: User Defined Comments. Used for Deposit Payment postings.
        in: query
        name: comments
        schema:
          type: string
      - description: "Flag to indicate if Credit Card Surcharge has to be applied\
          \ to this payment, when the functionality for Credit Card Surcharge is available."
        in: query
        name: applyCCSurcharge
        schema:
          type: boolean
      - in: query
        name: manualPaymentTaxInfoFolioWindowNo
        schema:
          type: integer
      - description: Billing Transaction Code of the Payment.
        in: query
        name: transactionCode
        schema:
          type: string
      - description: Transaction Date of the Payment.
        in: query
        name: transactionDate
        schema:
          format: date
          type: string
      - description: Billing Transaction Description.
        in: query
        name: transactionDescription
        schema:
          type: string
      - description: Unique Transaction Identifier.
        in: query
        name: transactionNo
        schema:
          type: number
      - description: The Tax Invoice for this payment.
        in: query
        name: taxInvoiceNo
        schema:
          type: string
      - description: The types of Payment Tax transactions.
        in: query
        name: paymentType
        schema:
          enum:
          - Deposit
          - FrontOffice
          - CreditNote
          - CityLedger
          - AccountsReceivables
          - NonVat
          type: string
      - description: A monetary amount.
        in: query
        name: manualPaymentTaxAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: manualPaymentTaxCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: taxableAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: taxableAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: nonTaxableAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: nonTaxableAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: availableCreditAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: availableCreditCurrencyCode
        schema:
          type: string
      - description: The Payment Invoice date
        in: query
        name: paymentDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: taxFolioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Billing Transaction Code of the Payment.
        explode: true
        in: query
        name: taxTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction Date of the Payment.
        explode: true
        in: query
        name: taxTransactionDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Billing Transaction Description.
        explode: true
        in: query
        name: taxTransactionDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Transaction Identifier.
        explode: true
        in: query
        name: taxTransactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: The Tax Invoice for this payment.
        explode: true
        in: query
        name: taxTaxInvoiceNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The types of Payment Tax transactions.
        explode: true
        in: query
        name: taxPaymentType
        schema:
          items:
            enum:
            - Deposit
            - FrontOffice
            - CreditNote
            - CityLedger
            - AccountsReceivables
            - NonVat
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: A monetary amount.
        in: query
        name: creditablePaymentTaxesAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: creditablePaymentTaxesCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: creditablePaymentTaxableAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: creditablePaymentTaxableCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: creditablePaymentNonTaxableAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: creditablePaymentNonTaxableCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: availableTaxCreditAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: availableTaxCreditCurrencyCode
        schema:
          type: string
      - description: The Payment Invoice date
        explode: true
        in: query
        name: taxPaymentDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Applicable for chip and pin. The ID of the terminal where the
          chip and pin device is connected and where the payment is made.
        in: query
        name: terminalId
        schema:
          type: string
      - description: Flag to allow a rebate by Credit Card
        in: query
        name: overrideInsufficientCC
        schema:
          type: boolean
      - description: A monetary amount.
        in: query
        name: changeDueAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: changeDueAmountCurrencyCode
        schema:
          type: string
      - description: Flag to override account receivable credit limit
        in: query
        name: overrideARCreditLimit
        schema:
          type: boolean
      - description: "Flag to indidcate if currency taxes need to be applied or not.\
          \ For ex, in case of Chile, it depends upon nationality of the guest."
        in: query
        name: applyCurrencyTaxes
        schema:
          type: boolean
      - description: "Flag to indidcate if currency taxes need to be applied or not.\
          \ For ex, in case of Chile, it depends upon nationality of the guest."
        in: query
        name: vATOffset
        schema:
          type: boolean
      - description: Payment action to know from where the payment has been made.
        in: query
        name: action
        schema:
          enum:
          - Billing
          - Settlefolio
          - Deposit
          - Compredemption
          - Prepaidcardredemption
          - Advancepayment
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: profileIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTaxPaymentsInfo'
          description: Response to the request for Payment Tax records for a reservation.
            Lists all the Payment Taxes for the reservation which are available.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTaxPaymentsInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get folio tax payments information
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/folios:
    get:
      description: This API is used to fetch the folios for a given reservation. A
        guest reservation could have 1 or more folios per reservation. Folios will
        only exist for a reservation once the guest has checked into the hotel. <p><strong>OperationId:</strong>getFolio</p>
      operationId: getFolio
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to return the Folio Windows information where the Reservation\
          \ Guest is the Payee, i.e the Folio Window is not Routed to another Reservation\
          \ or another Profile."
        in: query
        name: guestPayOnly
        schema:
          type: boolean
      - description: This flag will notify the service if the folio history will also
          be returned or not.
        in: query
        name: includeFolioHistory
        schema:
          type: boolean
      - description: This flag will notify the service if the reservation summary
          information will be returned. If TRUE then we will only return the reservation's
          outstanding balance.
        in: query
        name: reservationBalanceOnly
        schema:
          type: boolean
      - description: Posting details of each window.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - Windowbalances
            - Payment
            - Payee
            - Account
            - Guestpay
            - Notifications
            - Transactioncodes
            - Foliohistory
            - Totalbalance
            - Postings
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The ending value of the date range.
        explode: true
        in: query
        name: end
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: folioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        explode: true
        in: query
        name: limit
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        explode: true
        in: query
        name: offset
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The starting value of the date range.
        explode: true
        in: query
        name: start
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: This flag will notify the service that transactional postings
          will not be returned.
        in: query
        name: summaryOnly
        schema:
          type: boolean
      - description: Grouping by Transactin Type.
        in: query
        name: groupType
        schema:
          enum:
          - CheckNo
          - TransactionDate
          - TransactionCode
          - TransactionType
          type: string
      - description: Currency to which the Credit and Debit Amounts will be converted
          for each Folio. The response will have the ExchangeAmounts element with
          the converted amounts. The Posting Exchange Rate of the current business
          date will be used for the conversion
        in: query
        name: exchangeCurrency
        schema:
          type: string
      - in: query
        name: calculateCollectingAgentTaxes
        schema:
          type: boolean
      - in: query
        name: vATOffset
        schema:
          type: boolean
      - in: query
        name: includeDepositTaxes
        schema:
          type: boolean
      - description: This flag signifies that generated Folio is Normal or Simple
          Folio. Certain countries of the World mandate a simple folio when the invoice
          amount is less than defined threshold.
        in: query
        name: simpleFolio
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folio'
          description: Response to the request to get Financial Information for a
            Reservation
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Folio not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get folios
      tags:
      - Cashiering
    post:
      description: You can use this API to generate folios for a reservation. <p><strong>OperationId:</strong>generateFolio</p>
      operationId: generateFolio
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/generateFolio_request'
        description: Generate Folio request can be used to create a folio for checked
          in reservation or reservation with open folios
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/generatedFolio'
          description: "Generate Folio Response contains generated folio no and invoice\
            \ number along or errors and warnings in case if folio couldn't be generated:\
            \ FOF00065 - The hotel code and/or reservation id is missing. FOF00066\
            \ - Reservation can’t be found with the supplied hotel code and reservation\
            \ id. FOF00123 - Folio window has a balance and folio cannot be generated.\
            \ FOF00124 - The guest's reservation is not in a valid status for folio\
            \ generation."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Generate Folios
      tags:
      - Cashiering
      x-codegen-request-body-name: folioCriteria
    put:
      description: You can use this API to close the Reservation Folio on a reservation.
        <p><strong>OperationId:</strong>closeReservationFolio</p>
      operationId: closeReservationFolio
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/closeReservationFolio_request'
        description: Request to close an Open Folio Reservation. The Property should
          be using the Open Folio Functionality to use this operation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Close Reservation Folio
      tags:
      - Cashiering
      x-codegen-request-body-name: closeFolioCriteria
  /hotels/{hotelId}/reservations/{reservationId}/packageAllowance/links:
    delete:
      description: You can use this API to unlink reservation package allowance. <p><strong>OperationId:</strong>unlinkReservationPackageAllowance</p>
      operationId: unlinkReservationPackageAllowance
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Unlink reservation package allowance
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/packageOptions:
    get:
      description: You can use this API to get Reservation Package Options. <p><strong>OperationId:</strong>getReservationPackageOptions</p>
      operationId: getReservationPackageOptions
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationPackageOptions'
          description: Response to fetch reservation package options.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationPackageOptions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation Package Options
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize:
    post:
      description: You can use this API to authorize Credit Card Amount by Reservation.
        <p><strong>OperationId:</strong>authorizeCreditCardAmount</p>
      operationId: authorizeCreditCardAmount
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/authorizeCreditCardAmountByProfile_request'
        description: Request for a credit card authorization. An authorization request
          will be sent to the Credit Card Vendor as part of this request.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/authorizationInfo'
          description: Response to the credit card authorization request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Authorize Credit Card Amount
      tags:
      - Cashiering
      x-codegen-request-body-name: ccAuthorizationCriteria
  /hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize/manual:
    post:
      description: You can use this API to register Manual Authorization. <p><strong>OperationId:</strong>registerManualAuthorization</p>
      operationId: registerManualAuthorization
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/registerManualAuthorization_request'
        description: Request for registering a Manual Authorization.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Register Manual Authorization
      tags:
      - Cashiering
      x-codegen-request-body-name: ccManualAuthorizationCriteria
  /hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorizeInstructions:
    get:
      description: You can use this API to get Credit Card Authorization Instructions
        by Reservation. <p><strong>OperationId:</strong>getCCAuthorizationInstructions</p>
      operationId: getCCAuthorizationInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to indicate if the approval amount should be calculated
          before authorization. If this is true and if the amount is 0 the approval
          amount will be calculated based on the rules.
        in: query
        name: evaluateApprovalAmount
        schema:
          type: boolean
      - description: Currently supported transaction type categories used for credit
          card authorization.
        in: query
        name: sourceOfAuthorization
        schema:
          enum:
          - Additional
          - ArPayment
          - Batch
          - BatchDeposit
          - BatchDepositRefund
          - Billing
          - CheckIn
          - CheckInManualAuth
          - Deposit
          - EndOfDay
          - EndOfDayDeposit
          - Manual
          - Other
          - PasserBy
          - PostIt
          - PreCheckIn
          - Refund
          - Scheduled
          type: string
      - description: Update the card details on the reservations for Chip and Pin
          Authorizations.
        in: query
        name: updateReservation
        schema:
          type: boolean
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          default: OPERA
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          default: Reservation
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdIdContext
        schema:
          default: OPERA
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: profileIdType
        schema:
          default: Profile
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: The folio window where this authorization is applied.
        in: query
        name: folioView
        schema:
          type: integer
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: paymentFolioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Track2 data for the card which would be sent to the CC vendor
          as part of the authorization.
        in: query
        name: track2Data
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: "Flag to determine if the credit card was swiped/manually entered\
          \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
          \ Control is active."
        in: query
        name: cardPresent
        schema:
          type: boolean
      - description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
          is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
        in: query
        name: citId
        schema:
          type: string
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: cardIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: cardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: code
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: amountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: amountCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: percent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: uniqueIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: uniqueIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: uniqueIdType
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Display Order sequence.
        in: query
        name: orderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: The approval code authenticates the authorization.
        in: query
        name: approvalCode
        schema:
          type: string
      - description: Unique Authorization Sequence for the authorization and settlement.
        in: query
        name: originalAuthSequence
        schema:
          type: integer
      - description: Vendor transaction id for the authorization.
        in: query
        name: vendorTranId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: Applicable for chip and pin. The ID of the terminal where the
          chip and pin device is connected.
        in: query
        name: terminalId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: incidentalAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: incidentalAmountCurrencyCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ccAuthorizationInstructions'
          description: "Response to the fetch authorization instructions. Based on\
            \ the criteria requested, the response can contain information required\
            \ to send a credit card authorization to the Vendor."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CCAuthorizationInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get CC Authorization Instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/payments:
    post:
      description: You can use this API to create Billing Payment on the folio of
        a Reservation. <p><strong>OperationId:</strong>postBillingPayment</p>
      operationId: postBillingPayment
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBillingPayment_request'
        description: Request to post a payment on a reservation's folio.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postedBillingPayment'
          description: Response notifying if the posting of a payment to a reservation
            was successful.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Billing Payment
      tags:
      - Cashiering
      x-codegen-request-body-name: billingPayment
  /hotels/{hotelId}/reservations/{reservationId}/postingActivities:
    get:
      description: You can use this API to get posting activity details. <p><strong>OperationId:</strong>getPostingActivityDetail</p>
      operationId: getPostingActivityDetail
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - in: query
        name: module
        schema:
          type: string
      - in: query
        name: logDate
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - in: query
        name: refActionId
        schema:
          type: number
      - in: query
        name: logUserId
        schema:
          type: integer
      - in: query
        name: logUserName
        schema:
          type: string
      - in: query
        name: machineStation
        schema:
          type: string
      - in: query
        name: croCode
        schema:
          type: string
      - in: query
        name: actionType
        schema:
          type: string
      - in: query
        name: actionDescription
        schema:
          type: string
      - description: The IP Address of the machine that performed the activity
        in: query
        name: iPAddress
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postingActivityDetail'
          description: Response to the request to get financial details for a Posting
            Activity. This will return the before and after values for the transactions
            which were changed.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PostingActivityDetail not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get posting activity details
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/prepaidCards/redemptions:
    put:
      description: You can use this API to redeem Prepaid Cards <p><strong>OperationId:</strong>redeemPrepaidCards</p>
      operationId: redeemPrepaidCards
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/redeemPrepaidCards_request'
        description: Request type for Prepaid card redeem amount request.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/redeemPrepaidCardsStatus'
          description: Response for redeem Prepaid cards request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to redeem prepaid cards.
      tags:
      - Cashiering
      x-codegen-request-body-name: redeemPrepaidCards
  /hotels/{hotelId}/reservations/{reservationId}/proforma:
    post:
      description: You can use this API to create proforma for a specific reservation.
        <p><strong>OperationId:</strong>postProforma</p>
      operationId: postProforma
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postProforma_request'
        description: "Request to create a Proforma(folio) transactions for a reservation.\
          \ The request generates the internal transactions required to create a Proforma\
          \ report. After this request is called , the Opera Proforma report should\
          \ be called so that these transactions can be used in the report. If the\
          \ report is called without this request, the report will be incorrect and\
          \ will not have the complete information. If the report is not used after\
          \ this request, the internal transactions will be removed either by night\
          \ audit or by the next request."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationFolioInformation'
          description: "Response for the Create Proforma WS. After the proforma is\
            \ created by this request, the Opera Proforma report should be called\
            \ to generate the actual physical Proforma report. The response can have\
            \ the summary of the Guests Proforma Folio, if requested."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create proforma
      tags:
      - Cashiering
      x-codegen-request-body-name: reservationFolio
  /hotels/{hotelId}/reservations/{reservationId}/revenueBuckets:
    get:
      description: You can use this API to get a reservations Revenue Bucket Totals.
        <p><strong>OperationId:</strong>getReservationRevenueBucketTotals</p>
      operationId: getReservationRevenueBucketTotals
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Type if the revenue bucket.
        in: query
        name: revenueBucketType
        schema:
          type: string
      - description: This flag will notify the service if the revenue is of complimentary
          type.
        in: query
        name: compRevenue
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueBucketTotals'
          description: Response object for revenue bucket totals for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationRevenueBucketTotals not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservations Revenue Bucket Totals
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/reverseCertificate:
    post:
      description: You can use this API to Reverse certificate postings. <p><strong>OperationId:</strong>reverseCertificatePostings</p>
      operationId: reverseCertificatePostings
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reverseCertificatePostings_request'
        description: Request to reverse the certificate postings of transactions.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reverse certificate postings
      tags:
      - Cashiering
      x-codegen-request-body-name: reverseCertificatePostingsCriteria
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions:
    delete:
      deprecated: true
      description: You can use this API to delete routing instructions for a specified
        reservation.<br><p><strong><mark>This API is deprecated. Please use deleteFolioRoutingInstructions
        or  deleteRoomRoutingInstructions or deleteCompRoutingInstructions or deleteRequestRoutingInstructions
        instead</mark></strong></p> <p><strong>OperationId:</strong>deleteRoutingInstructions</p>
      operationId: deleteRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete routing instructions
      tags:
      - Cashiering
    get:
      description: You can use this API to retrieve routing instructions for a specified
        reservation. <p><strong>OperationId:</strong>getRoutingInstructions</p>
      operationId: getRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: Include the window routing instructions to the response.
        in: query
        name: includeWindowRouting
        schema:
          type: boolean
      - description: Include the room routing instructions in the response.
        in: query
        name: includeRoomRouting
        schema:
          type: boolean
      - description: Include the comp routing instructions in the response.
        in: query
        name: includeCompRouting
        schema:
          type: boolean
      - description: Include the comp routing requests in the response.
        in: query
        name: includeCompRoutingRequests
        schema:
          type: boolean
      - description: If date is included then the search result should only be valid
          for dates which includes this date.
        in: query
        name: effectiveOn
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/routingInstructionsDetails'
          description: Response object containing routing instructions for a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoutingInstructions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get routing instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/change:
    put:
      description: You can use this API to update routing instructions for a specified
        reservation. <p><strong>OperationId:</strong>changeRoutingInstructions</p>
      operationId: changeRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeRoutingInstructions_request'
        description: Request when changing a routing instruction.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedRoutingInstructions'
          description: Response when changing a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the modified
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change routing instructions
      tags:
      - Cashiering
      x-codegen-request-body-name: routingInstructionsToChange
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/comp:
    delete:
      description: You can use this API to delete comp routing instructions for a
        specified reservation. <p><strong>OperationId:</strong>deleteCompRoutingInstructions</p>
      operationId: deleteCompRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "On a successful update, the transactions that are already posted\
          \ in the guest's folio will be re-organized based on the configured instructions."
        in: query
        name: refreshFolio
        schema:
          type: boolean
      - description: "This flag indicates if postings that can be refreshed need to\
          \ be part of the response when a routing instruction is created, updated\
          \ or deleted."
        in: query
        name: retrievePostingsForRoomRouting
        schema:
          type: boolean
      - in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: payeeId
        schema:
          type: string
      - description: Unique Id of membership
        in: query
        name: membershipIdNo
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: authorizerId
        schema:
          type: string
      - description: User Id of the Opera User
        in: query
        name: userId
        schema:
          type: integer
      - description: Name of the Opera User
        in: query
        name: userName
        schema:
          type: string
      - in: query
        name: comments
        schema:
          type: string
      - description: Flag to indicate if the routing instruction is a daily instruction.
        in: query
        name: daily
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: "Allowable credit amount for this routing instruction. Null value\
          \ means no limit, 0 equals zero."
        explode: true
        in: query
        name: creditLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: The routing limit percentage allowed for this routing instruction.
        explode: true
        in: query
        name: percentageLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Number of covers for this routing instruction.
        explode: true
        in: query
        name: covers
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Unique identifier for the Transaction code.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique identifier for the Billing Instruction.
        explode: true
        in: query
        name: billingCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: routingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: routingLinkId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomRoutingPostings'
          description: Response when removing a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the deleted
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete comp routing instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/create:
    put:
      description: You can use this API to add routing instructions to a reservation.
        <p><strong>OperationId:</strong>putRoutingInstructions</p>
      operationId: putRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putRoutingInstructions_request'
        description: Request to create a routing instruction.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/createdRoutingInstructions'
          description: Response when creating a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the new
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create routing instructions
      tags:
      - Cashiering
      x-codegen-request-body-name: routingInstructions
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/folio:
    delete:
      description: You can use this API to delete folio routing instructions for a
        specified reservation. <p><strong>OperationId:</strong>deleteFolioRoutingInstructions</p>
      operationId: deleteFolioRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "On a successful update, the transactions that are already posted\
          \ in the guest's folio will be re-organized based on the configured instructions."
        in: query
        name: refreshFolio
        schema:
          type: boolean
      - description: "This flag indicates if postings that can be refreshed need to\
          \ be part of the response when a routing instruction is created, updated\
          \ or deleted."
        in: query
        name: retrievePostingsForRoomRouting
        schema:
          type: boolean
      - in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: payeeId
        schema:
          type: string
      - description: Flag to indicate if the routing instruction is a daily instruction.
        in: query
        name: daily
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: "Allowable credit amount for this routing instruction. Null value\
          \ means no limit, 0 equals zero."
        explode: true
        in: query
        name: creditLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: The routing limit percentage allowed for this routing instruction.
        explode: true
        in: query
        name: percentageLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Number of covers for this routing instruction.
        explode: true
        in: query
        name: covers
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Unique identifier for the Transaction code.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique identifier for the Billing Instruction.
        explode: true
        in: query
        name: billingCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: routingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: routingLinkId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomRoutingPostings'
          description: Response when removing a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the deleted
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Folio routing instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/request:
    delete:
      description: You can use this API to delete request routing instructions for
        a specified reservation. <p><strong>OperationId:</strong>deleteRequestRoutingInstructions</p>
      operationId: deleteRequestRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "On a successful update, the transactions that are already posted\
          \ in the guest's folio will be re-organized based on the configured instructions."
        in: query
        name: refreshFolio
        schema:
          type: boolean
      - description: "This flag indicates if postings that can be refreshed need to\
          \ be part of the response when a routing instruction is created, updated\
          \ or deleted."
        in: query
        name: retrievePostingsForRoomRouting
        schema:
          type: boolean
      - description: Name of the Opera User
        in: query
        name: userName
        schema:
          type: string
      - in: query
        name: comments
        schema:
          type: string
      - description: Flag to indicate if the routing instruction is a daily instruction.
        in: query
        name: daily
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomRoutingPostings'
          description: Response when removing a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the deleted
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete request routing instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/routingInstructions/room:
    delete:
      description: You can use this API to delete room routing instructions for a
        specified reservation. <p><strong>OperationId:</strong>deleteRoomRoutingInstructions</p>
      operationId: deleteRoomRoutingInstructions
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "On a successful update, the transactions that are already posted\
          \ in the guest's folio will be re-organized based on the configured instructions."
        in: query
        name: refreshFolio
        schema:
          type: boolean
      - description: "This flag indicates if postings that can be refreshed need to\
          \ be part of the response when a routing instruction is created, updated\
          \ or deleted."
        in: query
        name: retrievePostingsForRoomRouting
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationNameId
        schema:
          type: string
      - description: Flag to indicate if the routing instruction is a daily instruction.
        in: query
        name: daily
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: "Allowable credit amount for this routing instruction. Null value\
          \ means no limit, 0 equals zero."
        explode: true
        in: query
        name: creditLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: The routing limit percentage allowed for this routing instruction.
        explode: true
        in: query
        name: percentageLimit
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Number of covers for this routing instruction.
        explode: true
        in: query
        name: covers
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Unique identifier for the Transaction code.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique identifier for the Billing Instruction.
        explode: true
        in: query
        name: billingCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: routingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: routingLinkId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomRoutingPostings'
          description: Response when removing a routing instruction. It may optionally
            return a list of postings which are eligible for transfer as per the deleted
            routing instruction in case of room routing instruction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room routing instructions
      tags:
      - Cashiering
  /hotels/{hotelId}/reservations/{reservationId}/transactions/{transactionId}:
    get:
      description: You can use this API to get eligibility of Deposit Refund. <p><strong>OperationId:</strong>isDepositRefundEligible</p>
      operationId: isDepositRefundEligible
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/depositRefundEligibleCheck'
          description: Response for the refund deposit payment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: isDepositRefundEligible not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get eligibility of Deposit Refund
      tags:
      - Cashiering
    put:
      description: You can use this API to Split deposit transaction. <p><strong>OperationId:</strong>splitDepositTransaction</p>
      operationId: splitDepositTransaction
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/splitDepositTransaction_request'
        description: Request to split deposit transaction for a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/splitDepositTransactionStatus'
          description: Response after spliting deposit transaction.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Split deposit transaction
      tags:
      - Cashiering
      x-codegen-request-body-name: splitDepositTransaction
  /hotels/{hotelId}/reservations/{reservationId}/transferFolioTransactions:
    put:
      description: You can use this API to transfer Folio to Window. <p><strong>OperationId:</strong>transferFolioToWindow</p>
      operationId: transferFolioToWindow
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/transferFolioToWindow_request'
        description: Request for transaction folio(s) to specific window
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transfer Folio to Window.
      tags:
      - Cashiering
      x-codegen-request-body-name: folioToWindow
  /hotels/{hotelId}/reservations/{reservationId}/transferTransactions:
    put:
      description: You can use this API to transfer Transaction to Window. <p><strong>OperationId:</strong>transferTransactionToWindow</p>
      operationId: transferTransactionToWindow
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/transferTransactionToWindow_request'
        description: Request for transaction transfer
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transferTransactionToWindow'
          description: "Transaction Transfer Response contains errors: FOF00065 -\
            \ Reservation ID or Resort was not supplied. FOF00128 - Transactions that\
            \ were automatically generated cannot be transferred. FOF00129 - Transactions\
            \ with Folio Numbers cannot be transferred. FOF00130 - Transactions with\
            \ Invoice Numbers cannot be transferred. FOF00131 - Deposit Transactions\
            \ cannot be transferred. FOF00132 - The status of the reservation is not\
            \ valid for Financial Transaction transfers. FOF00133 - The Transaction\
            \ number(s) are invalid. FOF00134 - Folio window not supplied. FOF00135\
            \ - List of transactions not supplied."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transfer Transaction to Window
      tags:
      - Cashiering
      x-codegen-request-body-name: transactionToWindow
  /hotels/{hotelId}/reservations/{reservationId}/voidfolios/{folioId}:
    put:
      description: You can use this API to void a folio. <p><strong>OperationId:</strong>voidFolio</p>
      operationId: voidFolio
      parameters:
      - description: Unique ID of the folio.
        example: ""
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/voidFolio_request'
        description: Request to Void a Guest Folio when the Void Functionality is
          active.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/voidedFolio'
          description: Response to the request for voiding a Guest Folio.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Void folio
      tags:
      - Cashiering
      x-codegen-request-body-name: folioToVoid
  /hotels/{hotelId}/reservations/{sourceReservationId}/deposit/transfers:
    put:
      description: You can use this API to change Reservation Deposit Transfer. <p><strong>OperationId:</strong>putReservationDepositTransfer</p>
      operationId: putReservationDepositTransfer
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putReservationDepositTransfer_request'
        description: Request to transfer a deposit amount from one reservation to
          one or more reservations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Reservation Deposit Transfer.
      tags:
      - Cashiering
      x-codegen-request-body-name: depositTransferCriteria
  /hotels/{hotelId}/reservations/{toReservationId}/transferTransaction:
    put:
      description: You can use this API to Transfer Transaction to Reservation. <p><strong>OperationId:</strong>transferTransactionToReservation</p>
      operationId: transferTransactionToReservation
      parameters:
      - description: Unique ID of the reservation
        example: ""
        in: path
        name: toReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/transferTransactionToReservation_request'
        description: "Request to transfer a transaction(s) to a reservation. In the\
          \ criteria, the target Reservation Id is required for the transfer."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transfer Transaction to Reservation
      tags:
      - Cashiering
      x-codegen-request-body-name: reservationTransaction
  /hotels/{hotelId}/revenue:
    get:
      description: You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>
      operationId: getHotelRevenue
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Business date.
        in: query
        name: businessDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelRevenueDetails'
          description: Response object for hotel room revenue for all HHonors redemption
            reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelRevenue not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Hotel Revenue
      tags:
      - Cashiering
  /hotels/{hotelId}/routingInstructionCodes:
    get:
      description: You can use this API to get Billing Instruction Codes. <p><strong>OperationId:</strong>getBillingInstructionCodes</p>
      operationId: getBillingInstructionCodes
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to include the search in the Transaction Codes.
        in: query
        name: includeTransactionCodes
        schema:
          type: boolean
      - description: Flag to include the search in the Billing Instructions.
        in: query
        name: includeBillingInstructions
        schema:
          type: boolean
      - description: Flag to include the comp instructions in the available list.
        in: query
        name: includeCompInstructions
        schema:
          type: boolean
      - description: Lookup string which will try to match an existing Billing and/or
          Transaction Codes.
        in: query
        name: codeWildCard
        schema:
          type: string
      - description: Lookup string which will try to match an existing Billing and/or
          Transaction Code Description.
        in: query
        name: descriptionWildCard
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/billingInstructionCodes'
          description: Response object containing comp routing instructions for a
            reservation .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BillingInstructionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Billing (routing) Instruction Codes
      tags:
      - Cashiering
  ? /hotels/{hotelId}/sourceReservations/{sourceReservationId}/destinationReservations/{destinationReservationId}/packageAllowance/links
  : post:
      description: You can use this API to link reservation package allowance. <p><strong>OperationId:</strong>linkReservationPackageAllowance</p>
      operationId: linkReservationPackageAllowance
      parameters:
      - description: Unique ID of the destination reservation.
        example: ""
        in: path
        name: destinationReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the source reservation.
        example: ""
        in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/linkReservationPackageAllowance_request'
        description: Method to create package allowance link from a source reservation
          to the target reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Link Reservation package allowance
      tags:
      - Cashiering
      x-codegen-request-body-name: linkReservationPackageAllowance
  /hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/roomRouting:
    get:
      description: You can use this API to get postings For Refresh. <p><strong>OperationId:</strong>getPostingsForRefresh</p>
      operationId: getPostingsForRefresh
      parameters:
      - description: Unique ID of the target reservation
        example: ""
        in: path
        name: targetReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the source reservation
        example: ""
        in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: targetResvNameIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: targetResvNameIdType
        schema:
          type: string
      - description: Flag to indicate if the routing instruction is a daily instruction.
        in: query
        name: daily
        schema:
          type: boolean
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Hotel context of the Transaction code.
        explode: true
        in: query
        name: transactionHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Print receipt flag that tells whether the transaction receipt
          is to be printed or not. This is based on the transaction code.
        explode: true
        in: query
        name: printTrxReceipt
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Unique identifier for the Transaction code.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction codes info.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Category of the transaction code.
        explode: true
        in: query
        name: transactionGroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sub category of the transaction code.
        explode: true
        in: query
        name: transactionSubGroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Universal product code of the transaction code.
        explode: true
        in: query
        name: universalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: routingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code to which the article belongs.
        explode: true
        in: query
        name: articleHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: articleDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: articleTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: articleUniversalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique identifier for the Billing Instruction.
        explode: true
        in: query
        name: billingCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel context of the Billing Instruction.
        explode: true
        in: query
        name: billingHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Billing Instruction code description.
        explode: true
        in: query
        name: desc
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: billingInstructionRoutingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: "Allowable credit amount for this routing instruction. Null value\
          \ means no limit, 0 equals zero."
        in: query
        name: creditLimit
        schema:
          type: number
      - description: The routing limit percentage allowed for this routing instruction.
        in: query
        name: percentageLimit
        schema:
          type: number
      - description: Number of covers for this routing instruction.
        in: query
        name: covers
        schema:
          type: number
      - description: Amount of Credit used for this routing instruction.
        in: query
        name: limitUsed
        schema:
          type: number
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: routingLinkIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: routingLinkIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postingsForRefresh'
          description: Response object that lists the transactions that can be refreshed
            when a routing instruction set is refreshed.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PostingsForRefresh not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Postings For Refresh
      tags:
      - Cashiering
    put:
      description: You can use this API to change Room Routing Refresh. <p><strong>OperationId:</strong>processRoomRoutingRefresh</p>
      operationId: processRoomRoutingRefresh
      parameters:
      - description: Unique ID of the target reservation
        example: ""
        in: path
        name: targetReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the source reservation
        example: ""
        in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/processRoomRoutingRefresh_request'
        description: "The request object for processing refreshing of a routing instruction\
          \ set. This operation transfers the postings to the respective reservation\
          \ as per the routing instruction set which is created, edited, deleted or\
          \ refreshed."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process Room Routing Refresh
      tags:
      - Cashiering
      x-codegen-request-body-name: roomRoutingRefresh
  /hotels/{hotelId}/storedFolios/{folioId}:
    get:
      description: You can use this API to get Stored Folio Details. <p><strong>OperationId:</strong>getStoredFolioDetails</p>
      operationId: getStoredFolioDetails
      parameters:
      - description: Unique ID of the folio.
        example: ""
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Fiscal Bill number of this posting
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Date of Folio Generation.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        in: query
        name: folioStatus
        schema:
          enum:
          - Deposit
          - Void
          - Ok
          - Zero
          - Compress
          - Converted
          - Internal
          type: string
      - description: The name of the Folio Type used for the Folio Number sequence.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/storedFolioDetailsInfo'
          description: Response object for fetch stored folio details operation
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StoredFolioDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Stored Folio Details
      tags:
      - Cashiering
    post:
      description: You can use this API to create Stored Folio Details. <p><strong>OperationId:</strong>postStoredFolioDetails</p>
      operationId: postStoredFolioDetails
      parameters:
      - description: Unique ID of the folio.
        example: ""
        in: path
        name: folioId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postStoredFolioDetails_request'
        description: Request object to update stored folio details.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Stored Folio Details
      tags:
      - Cashiering
      x-codegen-request-body-name: storedFolioDetails
  /hotels/{hotelId}/supplementFolios:
    post:
      description: You can use this API to post supplemental folio. <p><strong>OperationId:</strong>postSupplementalFolio</p>
      operationId: postSupplementalFolio
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postSupplementalFolio_request'
        description: Request to post a Supplemental Folio for an existing Folio. Debit
          Bill ( Supplemental Folio ) Functionality parameter is required
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/postSupplementalFolioStatus'
          description: Response for the request to create Supplemental Folio.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post supplemental folio
      tags:
      - Cashiering
      x-codegen-request-body-name: postSupplementalFolio
  /hotels/{hotelId}/transactionCodes:
    get:
      description: You can use this API to retrieve a list of Transaction Codes configured
        for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>
      operationId: getTransactionCodes
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Event being generated by a Supplemental Folio.
        in: query
        name: event
        schema:
          enum:
          - CheckOut
          - EarlyDeparture
          - AdvanceBill
          - InterimBill
          - PasserBy
          - PostIt
          - CreditBill
          - Deposit
          - DepositRefund
          - AutoFolio
          - PrepaidCard
          - AutoSettlement
          - InformationFolio
          - SupplementalFolio
          type: string
      - description: "Flag to indicate if Article Codes are required, along with the\
          \ parent Transaction Codes."
        in: query
        name: includeArticles
        schema:
          type: boolean
      - description: Flag to indicate if it is allowed to manually post transaction
          codes.
        in: query
        name: userRoleTransactions
        schema:
          type: boolean
      - description: Flag to include the search for Manual Post Allowed.
        in: query
        name: manualPostAllowed
        schema:
          type: boolean
      - description: Lookup string which will try to match an existing Transaction
          Codes.
        in: query
        name: code
        schema:
          type: string
      - description: Lookup string which will try to match an existing Transaction
          Code Description.
        in: query
        name: description
        schema:
          type: string
      - in: query
        name: wildCard
        schema:
          type: string
      - description: The Fiscal Bill number of this posting
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Date of Folio Generation.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: Folio Number.
        in: query
        name: folioNo
        schema:
          type: number
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        in: query
        name: folioStatus
        schema:
          enum:
          - Deposit
          - Void
          - Ok
          - Zero
          - Compress
          - Converted
          - Internal
          type: string
      - description: The name of the Folio Type used for the Folio Number sequence.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Goods Type Transactions.
        in: query
        name: trxServiceType
        schema:
          enum:
          - Services
          - Goods
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/transactionCodes'
          description: Response that contains either the Transaction Code list if
            fetch was successful or error(s) if not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Transaction Codes
      tags:
      - Cashiering
  /hotels/{hotelId}/transactionDetails:
    get:
      description: You can use this API to get Folio Transaction Details. <p><strong>OperationId:</strong>getFolioTransactionDetails</p>
      operationId: getFolioTransactionDetails
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to indicate if the automatically generated transactions,\
          \ related to the main transaction number above, are also to be retrieved\
          \ as part of this request."
        in: query
        name: includeGenerates
        schema:
          type: boolean
      - description: Unique Transaction Number of the transaction(posting) for which
          details are required.
        explode: true
        in: query
        name: transactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Flag to indicate what currency exchange information text needs
          to be included in response.
        in: query
        name: includeExchangeInformation
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/folioTransactionDetails'
          description: Response for the fetch transaction details request. Detail
            information regarding the folio transaction will be returned
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FolioTransactionDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Folio Transaction Details
      tags:
      - Cashiering
  /hotels/{hotelId}/transactions:
    get:
      description: You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p>
      operationId: getGuestsTransactions
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationList
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Configuring this flag to be TRUE will return transactions that
          are auto generated like taxes.
        in: query
        name: includeGenerates
        schema:
          type: boolean
      - description: Configuring this flag to be TRUE will return transactions that
          are included in an Accounts Receivable invoice.
        in: query
        name: includeTransactionsWithARInvoiceNo
        schema:
          type: boolean
      - description: Configuring this flag to be TRUE will return transactions that
          already belongs to a folio.
        in: query
        name: includeTransactionsWithFolioNo
        schema:
          type: boolean
      - description: "Configuring this flag to be TRUE will return transactions whose\
          \ transaction codes have manual posting enabled, or when an adjustment code\
          \ is attached to the transaction code, the adjustment code's manual posting\
          \ is enabled."
        in: query
        name: includeTransactionsWithManualPostingOnly
        schema:
          type: boolean
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: idContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction number of the payment being corrected.
        explode: true
        in: query
        name: transactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Category of the transaction code to filter the result.
        explode: true
        in: query
        name: transactionGroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sub category of the transaction code to filter the result.
        explode: true
        in: query
        name: transactionSubGroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique identifier for the Billing Instruction.
        explode: true
        in: query
        name: billingCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel context of the Billing Instruction.
        explode: true
        in: query
        name: billingHotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Billing Instruction code description.
        explode: true
        in: query
        name: desc
        schema:
          items:
            type: string
          type: array
        style: form
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        explode: true
        in: query
        name: routingInstructionsId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Lookup string which will try to match an existing Transaction
          Code/s.
        in: query
        name: trxCodeWildCard
        schema:
          type: string
      - description: Lookup string which will try to match an existing Transaction
          Code's Description.
        in: query
        name: trxDescriptionWildCard
        schema:
          type: string
      - description: Lookup string which will try to match an existing Cheque number's
          code.
        in: query
        name: checkNumberWildCard
        schema:
          type: string
      - description: Filters the results for reference number.
        in: query
        name: referenceNumberWildCard
        schema:
          type: string
      - description: Filter the results for supplement.
        in: query
        name: supplementWildCard
        schema:
          type: string
      - description: Filters the result to only include transactions in this window
          number.
        explode: true
        in: query
        name: windowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Wrapper Transaction Type.
        explode: true
        in: query
        name: cashieringTransactionType
        schema:
          items:
            enum:
            - Revenue
            - Payment
            - Wrapper
            type: string
          type: array
          uniqueItems: true
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the result based on its commission property. Do not set
          this criteria if all transactions should be included whether or not they
          are commissionable.
        in: query
        name: commissionable
        schema:
          type: boolean
      - description: Filters the result which are allow for service recovery.
        in: query
        name: serviceRecoveryAllowed
        schema:
          type: boolean
      - description: Returns only postings without bill number.
        explode: true
        in: query
        name: postedTransactionType
        schema:
          items:
            enum:
            - All
            - Routed
            - Direct
            - Transferred
            - Payments
            - NonBilled
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/guestsTransactions'
          description: Lists a summary of transactions of guests.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GuestsTransactions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Guests Transactions
      tags:
      - Cashiering
  /hotels/{hotelId}/transactions/adjust:
    put:
      description: You can use this API to Adjust Transactions. <p><strong>OperationId:</strong>adjustTransactions</p>
      operationId: adjustTransactions
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/adjustTransactions_request'
        description: "Request to adjust a transaction. In order to adjust a transaction,\
          \ a valid amount or percentage is required. A valid reason code and reason\
          \ text is also required. Only negative adjustments are done. The adjust\
          \ process will post a new negative transaction for the same transaction\
          \ code for the current day."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/adjustedTransactions'
          description: Response for the adjustment of transactions request. Contains
            any errors or warnings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Adjust Transactions
      tags:
      - Cashiering
      x-codegen-request-body-name: transactionsAdjustment
  /hotels/{hotelId}/transactions/arInvoices/reverse:
    delete:
      description: You can use this API to reverse an AR Invoice. <p><strong>OperationId:</strong>reverseARInvoice</p>
      operationId: reverseARInvoice
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The reason code for the deletion.
        in: query
        name: reasonCode
        schema:
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: The unique transaction number of this transaction.
        explode: true
        in: query
        name: transactionCodes
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reverse AR Invoice
      tags:
      - Cashiering
  /hotels/{hotelId}/transactions/split:
    put:
      description: You can use this API to Split transactions. <p><strong>OperationId:</strong>splitTransaction</p>
      operationId: splitTransaction
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/splitTransaction_request'
        description: "Request to split a transaction on a reservation. Splitting of\
          \ transactions requires a list of transactions and a valid amount or a percentage\
          \ by which the amount can be split. Based on parameters, certain transactions\
          \ cannot be split. Transaction which are included in an invoice cannot be\
          \ split Transactions where the generates resides elsewhere(reservation or\
          \ window) cannot be split. Automatically generated transactions such as\
          \ taxes, cannot be split by itself. Deposits which were part of a deposit\
          \ folio cannot be split. After the split is done the transaction resides\
          \ on the same folio window as the original transaction."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Split transactions
      tags:
      - Cashiering
      x-codegen-request-body-name: transactionToSplit
  /hotels/{hotelId}/transactions/splitAndTransfer:
    put:
      description: You can use this API to split and transfer transactions. <p><strong>OperationId:</strong>splitAndTransferTransaction</p>
      operationId: splitAndTransferTransaction
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/splitAndTransferTransaction_request'
        description: "Request to split a transaction on a reservation and transfer\
          \ the new transaction to a different reservation or a different window on\
          \ the same reservation. Splitting of transactions requires a Inhouse target\
          \ reservation, a list of transactions for a Inhouse reservation and a valid\
          \ amount or a percentage by which the amount can be split. Based on parameters,\
          \ certain transactions cannot be split. Transaction which are included in\
          \ an invoice cannot be split Transactions where the generates resides elsewhere(reservation\
          \ or window) cannot be split. Automatically generated transactions such\
          \ as taxes, cannot be split by itself. Deposits which were part of a deposit\
          \ folio cannot be split. After the split is done the transaction is transferred\
          \ to the target reservation/window."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Split and transfer transactions
      tags:
      - Cashiering
      x-codegen-request-body-name: transactionToSplitAndTransfer
  /hotels/{hotelId}/transactions/{transactionId}:
    get:
      description: You can use this API to validate Transaction Codes. <p><strong>OperationId:</strong>validateTransactionCodes</p>
      operationId: validateTransactionCodes
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Event being generated by a Supplemental Folio.
        in: query
        name: event
        schema:
          enum:
          - CheckOut
          - EarlyDeparture
          - AdvanceBill
          - InterimBill
          - PasserBy
          - PostIt
          - CreditBill
          - Deposit
          - DepositRefund
          - AutoFolio
          - PrepaidCard
          - AutoSettlement
          - InformationFolio
          - SupplementalFolio
          type: string
      - description: The Fiscal Bill number of this posting
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Date of Folio Generation.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: Folio Number.
        in: query
        name: folioNo
        schema:
          type: number
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        in: query
        name: folioStatus
        schema:
          enum:
          - Deposit
          - Void
          - Ok
          - Zero
          - Compress
          - Converted
          - Internal
          type: string
      - description: The name of the Folio Type used for the Folio Number sequence.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/validatedTransactionCode'
          description: Response notifying if transaction code is valid.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: validateTransactionCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate Transaction Codes
      tags:
      - Cashiering
    post:
      description: You can use this API to submit Comp Transactions. <p><strong>OperationId:</strong>postCompTransaction</p>
      operationId: postCompTransaction
      parameters:
      - description: Unique ID of the transaction.
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCompTransaction_request'
        description: Request object to submit a comp transaction to gaming system
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Submit Comp Transaction
      tags:
      - Cashiering
      x-codegen-request-body-name: compTransactionCriteria
  /hotels/{hotelId}/transactions/{transactionId}/charges:
    put:
      description: You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharge</p>
      operationId: putBillingCharge
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putBillingCharge_request'
        description: Request to edit a billing charge information.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/billingChargeStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Billing Charge
      tags:
      - Cashiering
      x-codegen-request-body-name: billingCharge
  /hotels/{hotelId}/transactions/{transactionId}/compRequestStatus:
    get:
      description: You can use this API to get Gaming Request Status Information.
        <p><strong>OperationId:</strong>getGamingRequestStatusInfo</p>
      operationId: getGamingRequestStatusInfo
      parameters:
      - description: Unique ID of the transaction.
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/gamingRequestStatusInfo'
          description: Response object for fetch gaming info
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: GamingRequestStatusInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Gaming Request Status '
      tags:
      - Cashiering
  /hotels/{hotelId}/transactions/{transactionId}/flexibleBenefitPostings:
    delete:
      description: You can use this API to delete flexible benefit postings. <p><strong>OperationId:</strong>reverseFlexibleBenefitPosting</p>
      operationId: reverseFlexibleBenefitPosting
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete flexible benefit postings
      tags:
      - Cashiering
  /hotels/{hotelId}/transactions/{transactionId}/payments:
    put:
      description: You can use this API to change Billing Payment. <p><strong>OperationId:</strong>changeBillingPayment</p>
      operationId: changeBillingPayment
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeBillingPayment_request'
        description: Request to change a payment posting.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Billing Payment
      tags:
      - Cashiering
      x-codegen-request-body-name: billingPaymentToChange
  /hotels/{hotelId}/transactions/{transactionId}/policies/detach/deposit:
    put:
      description: You can use this API to detach Deposit Policy from Payment. <p><strong>OperationId:</strong>detachDepositPolicyFromPayment</p>
      operationId: detachDepositPolicyFromPayment
      parameters:
      - description: Unique ID of the transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/detachDepositPolicyFromPayment_request'
        description: Request to detach a deposit payment from a Deposit Policy on
          a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Detach Deposit Policy from Payment
      tags:
      - Cashiering
      x-codegen-request-body-name: detachPolicyApplyCriteria
  /hotels/{hotelId}/transactions/{transactionId}/reversePayments:
    post:
      description: You can use this API to create reverse payments. <p><strong>OperationId:</strong>postReversePayment</p>
      operationId: postReversePayment
      parameters:
      - description: Unique ID of the Transaction
        example: ""
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postReversePayment_request'
        description: Request for posting payment reversal.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create reverse payments
      tags:
      - Cashiering
      x-codegen-request-body-name: paymentReversalCriteria
  /hotels/{hotelId}/transactionsTotal:
    get:
      description: You can use this API to get Balance Information. <p><strong>OperationId:</strong>getBalanceInfo</p>
      operationId: getBalanceInfo
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Event being generated by a Supplemental Folio.
        in: query
        name: event
        schema:
          enum:
          - CheckOut
          - EarlyDeparture
          - AdvanceBill
          - InterimBill
          - PasserBy
          - PostIt
          - CreditBill
          - Deposit
          - DepositRefund
          - AutoFolio
          - PrepaidCard
          - AutoSettlement
          - InformationFolio
          - SupplementalFolio
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - explode: true
        in: query
        name: folioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        explode: true
        in: query
        name: cashierId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Transaction Code to post.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Article ID.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        explode: true
        in: query
        name: amount
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        explode: true
        in: query
        name: currencyCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Quantity to post to the folio.
        explode: true
        in: query
        name: postingQuantity
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: User-defined posting reference.
        explode: true
        in: query
        name: postingReference
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined posting remark.
        explode: true
        in: query
        name: postingRemark
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates the Cheque number.
        explode: true
        in: query
        name: checkNumber
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Corrected arrangement code from the package associated to this
          transaction.
        explode: true
        in: query
        name: arrangementCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Apply room routing when making this posting.
        explode: true
        in: query
        name: applyRoutingInstructions
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Use the applicable package allowance when making this posting.
        explode: true
        in: query
        name: usePackageAllowance
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: True indicates the Transaction Code is allowed to be posted automatically.
        explode: true
        in: query
        name: autoPosting
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: uniqueIdId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: uniqueIdIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        explode: true
        in: query
        name: uniqueIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: postItNumberId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: postItNumberIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: postItNumberType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: profileIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: policyIdId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: policyIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: policyIdType
        schema:
          type: string
      - description: The Fiscal Bill number of this posting
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Date of Folio Generation.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: Folio Number.
        in: query
        name: folioNo
        schema:
          type: number
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        in: query
        name: folioStatus
        schema:
          enum:
          - Deposit
          - Void
          - Ok
          - Zero
          - Compress
          - Converted
          - Internal
          type: string
      - description: The name of the Folio Type used for the Folio Number sequence.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/balanceInfoCriteria'
          description: Response for the fetch balance request. This will contain the
            current balance for the criteria requested.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BalanceInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Balance Information
      tags:
      - Cashiering
  /hotels/{hotelId}/transferCompTransactions:
    post:
      description: You can use this API to transfer comp transactions to window <p><strong>OperationId:</strong>transferCompTransactions</p>
      operationId: transferCompTransactions
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/transferCompTransactions_request'
        description: Request object of comp transactions transfer.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transfer comp transactions to window
      tags:
      - Cashiering
      x-codegen-request-body-name: transferCompTransactions
  /hotels/{hotelId}/zeroBalanceCheckoutReservations/batchJobs:
    post:
      description: You can use this API to create Zero Balance Checkout Reservation
        Batch. <p><strong>OperationId:</strong>postZeroBalanceCheckoutReservations</p>
      operationId: postZeroBalanceCheckoutReservations
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postZeroBalanceCheckoutReservations_request'
        description: Request type for batch zero balance checkout
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/batchZeroBalanceCheckoutDetails'
          description: Response type for batch zero balance checkout
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create Zero Balance Checkout Reservation Batch '
      tags:
      - Cashiering
      x-codegen-request-body-name: batchZeroBalanceCheckoutReservation
  /reservations/{reservationId}/postRoomAndTaxForDayUse:
    post:
      description: You can use this API to post post Room And Tax For DayUse <p><strong>OperationId:</strong>postRoomAndTaxForDayUse</p>
      operationId: postRoomAndTaxForDayUse
      parameters:
      - description: Unique ID of the reservation.
        example: ""
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRoomAndTaxForDayUse_request'
        description: Request object to calculate room and tax.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to post room and tax for day use.
      tags:
      - Cashiering
      x-codegen-request-body-name: postRoomAndTaxForDayUse
  /roundingDifference:
    get:
      description: You can use this API to get Rounding Difference. <p><strong>OperationId:</strong>getRoundingDifference</p>
      operationId: getRoundingDifference
      parameters:
      - description: Event being generated by a Supplemental Folio.
        in: query
        name: event
        schema:
          enum:
          - CheckOut
          - EarlyDeparture
          - AdvanceBill
          - InterimBill
          - PasserBy
          - PostIt
          - CreditBill
          - Deposit
          - DepositRefund
          - AutoFolio
          - PrepaidCard
          - AutoSettlement
          - InformationFolio
          - SupplementalFolio
          type: string
      - in: query
        name: folioWindowNo
        schema:
          type: integer
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: Hotel context of the reservation.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: folioView
        schema:
          type: integer
      - in: query
        name: paymentMethod
        schema:
          type: string
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardIdId
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmountNeededAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountNeededCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: The authorization rule code.
        in: query
        name: code
        schema:
          type: integer
      - description: A monetary amount.
        in: query
        name: amountAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: amountCurrencyCode
        schema:
          type: string
      - description: A percentage value if the authorization rule is percentage based.
        in: query
        name: percent
        schema:
          type: number
      - in: query
        name: emailFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: uniqueIdId
        schema:
          type: string
      - description: Time stamp of the creation.
        in: query
        name: createDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: ID of creator. The creator could be a software system identifier
          or an identifier of an employee resposible for the creation.
        in: query
        name: creatorId
        schema:
          type: string
      - description: Defines the e-mail address.
        in: query
        name: emailAddress
        schema:
          type: string
      - description: Supported Email format.
        in: query
        name: emailFormat
        schema:
          enum:
          - Html
          - Text
          type: string
      - description: Identifies the last software system or person to modify a record.
        in: query
        name: lastModifierId
        schema:
          type: string
      - description: Time stamp of last modification.
        in: query
        name: lastModifyDateTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Display Order sequence.
        in: query
        name: orderSequence
        schema:
          type: number
      - description: "When true, indicates a primary information."
        in: query
        name: primaryInd
        schema:
          type: boolean
      - description: "Date an item will be purged from a database (e.g., from a live\
          \ database to an archive)."
        in: query
        name: purgeDate
        schema:
          format: date
          type: string
      - description: "Defines the purpose of the e-mail address (e.g. personal, business,\
          \ listserve)."
        in: query
        name: emailType
        schema:
          type: string
      - description: Describes the Type code
        in: query
        name: typeDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roundingDifferenceAmount'
          description: Response to the request to fetch the rounding difference for
            a payment amount.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoundingDifference not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Rounding Difference
      tags:
      - Cashiering
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    cashierReportPostingsInfo:
      description: Response for fetching the Cashier report transactions.
      properties:
        postings:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    detailPostingsType:
      description: Details of the transaction(Posting).
      items:
        $ref: '#/components/schemas/detailPostingType'
      maxItems: 4000
      type: array
    detailPostingType:
      description: Posting information of the transaction.
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/detailPostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        customCharge:
          description: Flag to identify a Custom Charge.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        targetHotel:
          description: Cross property posting hotel code.
          maxLength: 20
          minLength: 0
          type: string
        subPostings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        guestInfo:
          $ref: '#/components/schemas/detailPostingType_guestInfo'
        aRInfo:
          $ref: '#/components/schemas/transactionARInfoType'
        currencyExchangeInfo:
          $ref: '#/components/schemas/transactionCurrencyExchangeInfoType'
        adjustmentInfo:
          $ref: '#/components/schemas/transactionAdjustmentInfoType'
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        miscellaneousInfo:
          $ref: '#/components/schemas/detailPostingType_miscellaneousInfo'
        exchangeInformation:
          description: "Exchange Information - text presentation of the exchange operation\
            \ including formula, buy rate, etc."
          maxLength: 2000
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
        folioNo:
          description: "The Folio number of this posting, if there was a Folio already\
            \ generated."
          type: number
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal Unique id for the Folio Window.
          type: string
        revisionNo:
          type: number
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        deferredTax:
          description: Flag to indicate if the Posting is a deferred tax record. Set
            to true only when the posting is a deferred tax record. Set to false only
            when the posting is not a deferred tax record.
          type: boolean
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    cashieringTransactionTypeType:
      description: Wrapper Transaction Type.
      enum:
      - Revenue
      - Payment
      - Wrapper
      type: string
    cashierInfoType:
      description: Cashier information. Contains Id and Name details of the cashier.
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        cashierName:
          description: Cashier Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    postingGroupType:
      description: "Transaction group information. Ever posting could represent a.\
        \ Regular transaction b. Group header - has Group Id, Count, Descripton and\
        \ Includes Group Memebers elements c. Group transaction - has SubGroupId element\
        \ pointing to Group Header Id"
      properties:
        groupId:
          description: Group Id.
          maxLength: 20
          minLength: 0
          type: string
        groupCount:
          description: Number of transactions in group.
          type: integer
        groupDescription:
          description: Group Description.
          maxLength: 2000
          minLength: 0
          type: string
        subGroupId:
          description: Indicates to which group transaction belongs.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    compPostingsType:
      description: Collection of comp postings.
      properties:
        authorizer:
          description: Authorizer name of the Comp Account.
          maxLength: 200
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the comp account.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    exchangeAmounts:
      description: Converted values for the Exchange Currency requested.
      properties:
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    summaryPostingsType:
      description: List of postings.
      items:
        $ref: '#/components/schemas/summaryPostingType'
      maxItems: 4000
      type: array
    summaryPostingType:
      description: Posting details.
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/detailPostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        customCharge:
          description: Flag to identify a Custom Charge.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        officialBIRReceiptExists:
          description: Flag to indicate if an Official Receipt is generated for the
            folio window. Applicable only in the Philippines.
          type: boolean
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        groupByCount:
          description: "When some SummaryPostingsGroupBy element is send as request\
            \ ,then this element will represent how many transactions rolled up into\
            \ this Summary Posting Type."
          type: number
        folioWindowNo:
          description: The Folio Window number of this posting.
          type: integer
        deferredTax:
          description: Flag to indicate if the Posting is a deferred tax record. Set
            to true only when the posting is a deferred tax record. Set to false only
            when the posting is not a deferred tax record.
          type: boolean
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
            Refer to OpenTravel Code List Unique ID Type (UIT).
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
            Refer to OpenTravel Code List Unique ID Type (UIT).
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    transactionARInfoType:
      description: Details of the AR account where this transaction was posted to.
      properties:
        accountNumber:
          description: AR Account number.
          maxLength: 20
          minLength: 0
          type: string
        accountName:
          description: The Account name where this invoice is sent.
          maxLength: 1000
          minLength: 0
          type: string
        invoiceNo:
          description: The invoice number which includes this transaction.
          type: number
      type: object
    transactionCurrencyExchangeInfoType:
      description: "Details of the Exchange Information for this transaction, if the\
        \ posting was made in a currency different from the default currency."
      properties:
        description:
          description: Description or reference for this exchange.
          maxLength: 200
          minLength: 0
          type: string
        exchangeRate:
          $ref: '#/components/schemas/currencyAmountType'
        currencyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionPercent:
          description: Percentage for commission used for the currency conversion.
          type: number
        code:
          description: Foreign Currency Code of the currency which was used to post
            this transaction.
          maxLength: 20
          minLength: 0
          type: string
        exchangeDate:
          description: The date when this exchange rate was set.
          format: date
          type: string
      type: object
    transactionAdjustmentInfoType:
      description: "Adjustment details of the transaction, if the transaction was\
        \ created as part of an adjustment."
      properties:
        reason:
          description: Reason for the adjustment.
          maxLength: 2000
          minLength: 0
          type: string
        departmentCode:
          description: Department code for service recovery
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Adjustment code used.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        expirationDateExpired:
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        code:
          description: The authorization rule code.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    payeeInfoType:
      description: Payee information.
      properties:
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    cashierClosure:
      description: Request to close cashier's shift.
      properties:
        criteria:
          $ref: '#/components/schemas/cashierClosureType'
        cashierLockHandle:
          description: The Cashier Lock Handle to pass along with operation which
            required cashier to be locked.
          type: number
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierClosureType:
      description: Cashier Shift Totals and Per Hotel amounts group by currency code
      properties:
        cashierInfo:
          $ref: '#/components/schemas/cashierClosureNoType'
        summaryCurrencyAmountList:
          description: Currency Total Amounts for Cashier Shift.
          items:
            $ref: '#/components/schemas/cashierClosureCurrencyAmountType'
          maxItems: 4000
          type: array
        hotelCurrencyAmountList:
          description: Currency Hotels Amounts for Cashier Shift.
          items:
            $ref: '#/components/schemas/hotelCashierClosureCurrencyAmountType'
          maxItems: 4000
          type: array
      type: object
    cashierClosureNoType:
      description: Type used in cashier closure to specify a cashier's shift.
      properties:
        shiftDropLocationCode:
          description: Cashier closure shift drop location code.
          maxLength: 20
          minLength: 0
          type: string
        bagNumberForOthers:
          description: Cashier closure shift drop others payment method type bag number.
          maxLength: 15
          minLength: 0
          type: string
        bagNumberForCash:
          description: Cashier closure shift drop cash payment method type bag number.
          maxLength: 15
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        closureNo:
          description: The Cashier Shift Number.
          type: number
      type: object
    cashierId:
      description: The Cashier ID of the Cashier who is currently processing the transaction(s).
      type: number
    cashierClosureCurrencyAmountType:
      description: "Cashier Shift Currency Amount type - cash ,check ,credit and others\
        \ elements."
      properties:
        cash:
          $ref: '#/components/schemas/cashierClosureAmountType'
        check:
          $ref: '#/components/schemas/cashierClosureAmountType'
        creditCard:
          $ref: '#/components/schemas/cashierClosureAmountType'
        others:
          $ref: '#/components/schemas/cashierClosureAmountType'
        currencyCode:
          description: The Currency Code.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    cashierClosureAmountType:
      description: Cashier Opening Balance and Shift Amounts type.
      properties:
        openingBalance:
          description: Cashier shift amounts type.
          type: number
        received:
          description: Receviced amount.
          type: number
        paidOut:
          description: Paid Out amount.
          type: number
        expectedShiftBalance:
          description: Expected Cashier shift amount.
          type: number
        actualShiftBalance:
          description: Actual Cashier shift amount.
          type: number
      type: object
    hotelCashierClosureCurrencyAmountType:
      description: Cashier Shift amounts for each Hotel group by currency code
      properties:
        currencyAmounts:
          description: Hotel Cash and Check Balances group by Currency Code.
          items:
            $ref: '#/components/schemas/cashierClosureCurrencyAmountType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        hotelCurrencyCode:
          description: Hotel local currency code.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    cashierLockHandle:
      description: The Cashier Lock Handle to pass along with operation which required
        cashier to be locked.
      type: number
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    acquiredCashierLock:
      description: Response for the Cashier Lock request.
      properties:
        acquiredCashierLock:
          $ref: '#/components/schemas/operaRecordLock'
        existingCashierLock:
          $ref: '#/components/schemas/operaRecordLock'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    operaRecordLock:
      description: This type contains information about a record lock.
      properties:
        lockHandle:
          description: This is the identifier of the lock. This will be null when
            the requesting user does not own the lock.
          type: number
        recordType:
          $ref: '#/components/schemas/operaLockRecordType'
        recordId:
          description: This is the id of the locked record.
          type: string
        createdBy:
          description: This is the user name of the current owner of the locked record.
          type: string
        createdOn:
          description: This is the time when the record was locked.
          format: date
          type: string
        timeToLive:
          description: This is the validity of the lock in seconds.
          type: number
        expiresOn:
          description: This is the estimated expiry time of the lock.
          format: date
          type: string
        internal:
          description: Notification flag to specify if the lock is based on an Internal
            Opera9 lock versus an External lock.
          type: boolean
      type: object
    operaLockRecordType:
      enum:
      - Reservation
      - Cashier
      type: string
    cashierTransactionsDetails:
      description: Response for the fetch cashier's shift transactions.
      properties:
        cashierTransactionsInfo:
          $ref: '#/components/schemas/cashierTransactionsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierTransactionsType:
      description: Cashier Shift Totals and Per Hotel transactions group by transaction
        code
      properties:
        cashierInfo:
          $ref: '#/components/schemas/cashierClosureNoType'
        summaryTransactionList:
          description: Summary of all transactions during Cashier Shift.
          items:
            $ref: '#/components/schemas/cashierTransactionType'
          maxItems: 4000
          type: array
        hotelTransactionList:
          description: Hotel's transactions during Cashier Shift.
          items:
            $ref: '#/components/schemas/hotelCashierTransactionType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    cashierTransactionType:
      description: Cashier Shift Transaction Type.
      properties:
        transactionCode:
          description: Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Transaction codes description which will be populated for summary
            elements only.
          maxLength: 2000
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        trxCount:
          description: Number of same transactions during a shift.
          type: integer
      type: object
    hotelCashierTransactionType:
      description: Cashier Shift amounts for each Hotel group by currency code
      properties:
        transactions:
          description: Hotel's transaction in cashier shift.
          items:
            $ref: '#/components/schemas/cashierTransactionType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    compAccountingJournal:
      description: Response for fetching the Complimentary Posting Journal.
      properties:
        journalPostings:
          $ref: '#/components/schemas/financialPostingsType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    financialPostingsType:
      description: Collection of Reservations and their information.
      properties:
        postings:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        totalDebit:
          $ref: '#/components/schemas/currencyAmountType'
        totalCredit:
          $ref: '#/components/schemas/currencyAmountType'
        overallTotal:
          $ref: '#/components/schemas/currencyAmountType'
        totalForAllPages:
          $ref: '#/components/schemas/currencyAmountType'
        totalEntriesCount:
          description: Indicates the number of journal entries.
          type: integer
      type: object
    fbaReimbursementCriteria:
      description: PostFBA Reimbursement/Settlement operation posts reimbursement/settlement
        against the selected certificate records.
      properties:
        certificateReconciliationTypes:
          description: List of CertificateReconciliationType criteria
          items:
            $ref: '#/components/schemas/certificateReconciliationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    certificateReconciliationTypes:
      description: List of CertificateReconciliationType criteria
      items:
        $ref: '#/components/schemas/certificateReconciliationType'
      maxItems: 4000
      type: array
    certificateReconciliationType:
      description: FBA ( Flexible Benefits Awards ) related fields.
      properties:
        status:
          $ref: '#/components/schemas/fBAStatusType'
        monetaryValue:
          description: Award's FBA monetary values.
          type: number
        amount:
          description: Award's FBA amount.
          type: number
        postedAmount:
          description: Award's FBA posted amount.
          type: number
        reimbursedAmount:
          description: Award's FBA reimbursed amount.
          type: number
        postingDateTime:
          description: Date and time of the FBA posting.
          format: date
          type: string
        postingBusinessDate:
          description: Business date of the FBA posting.
          format: date
          type: string
        settlementDateTime:
          description: Date and time of the FBA settlement.
          format: date
          type: string
        settlementBusinessDate:
          description: Business date of the FBA settlement.
          format: date
          type: string
        reimbursementDateTime:
          description: Date and time of the FBA reimbursement.
          format: date
          type: string
        reimbursementBusinessDate:
          description: Business date of the FBA reimbursement.
          format: date
          type: string
        fbaBillGenDate:
          description: Business date of the FBA bill generation.
          format: date
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        flexibleBenefitAward:
          description: Indicates if this certificate is a Flexible Benefit Award certificate.
          type: boolean
        posted:
          description: Indicates whether FBA has been posted.
          type: boolean
        settled:
          description: Indicates whether FBA has been settled.
          type: boolean
        reimbursed:
          description: Indicates whether FBA has been reimbursed.
          type: boolean
        resettleAllowed:
          description: Marks if the certificate is eligible for resettlement
          type: boolean
        reimburseAllowed:
          description: Marks if the certificate is eligible for reimbursement.
          type: boolean
        orphanCertificate:
          description: Indicates whether the certificate is Orphan or not.
          type: boolean
        hotelId:
          description: Hotel context for the selected certificate.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        fBAStatus:
          $ref: '#/components/schemas/fBAStatusType'
        certificateNumber:
          description: The number for the given certificate.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    fBAStatusType:
      description: Flexible benefit award has been reimbursed.
      enum:
      - Ordered
      - Attached
      - Posted
      - Settled
      - Reimbursed
      type: string
    foreignCurrencyCriteria:
      description: Operation to calculate foreign currency exchange.
      properties:
        exchange:
          description: A set of currencies that need to be converted.
          items:
            $ref: '#/components/schemas/exchangeRateCalculationType'
          type: array
        addExchangeCommission:
          description: Flag to add exchange commission in order to recalculate payment
            amount in billing.
          type: boolean
        includeExchangeInformation:
          description: Flag to include exchange information text in response.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    exchangeRateCalculationType:
      description: Currency conversion calculation type.
      properties:
        hotelId:
          description: Property code where the currency is being converted.
          maxLength: 20
          minLength: 0
          type: string
        fromCurrencyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        exchangeDate:
          description: Date on which exchange rate was obtained.
          format: date
          type: string
        sell:
          description: Buy or Sell for calculation.
          type: boolean
        exchangeReference:
          description: Exchange references.
          type: string
        exchangeType:
          $ref: '#/components/schemas/currencyExchangeType'
        toCurrencyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        date:
          description: Date on which the exchange is to take place.
          format: date
          type: string
        buyCommission:
          description: Buy commission for the foreign currency.
          type: number
        roundingAmount:
          description: Amount by which the exchange was rounded.
          type: number
        calculatedAmount:
          description: Pure calculated amount.
          type: number
        exchangeRate:
          description: Exchange Rate.
          type: number
        euroExchangeRate:
          description: Exchange rate against Euro.
          type: number
        euroAmount:
          description: Amount in Euro for the exchange.
          type: number
        serviceTax:
          $ref: '#/components/schemas/currencyAmountType'
        exchangeInformation:
          description: "Exchange Information - text presentation of the exchange operation\
            \ including formula, buy rate, etc."
          maxLength: 2000
          minLength: 0
          type: string
        exchangeRateCalculationTax:
          $ref: '#/components/schemas/exchangeRateCalculationTaxType'
      type: object
    currencyExchangeType:
      description: E-certificate conversion.
      enum:
      - Cash
      - Settlement
      - Posting
      - Check
      - TACommission
      - Membership
      - Certificate
      type: string
    exchangeRateCalculationTaxType:
      description: Detailed information about exchange rate calculation service tax.
      properties:
        percentageAppliedOn:
          $ref: '#/components/schemas/currencyAmountType'
        baseAmount:
          description: Based Amount in local currency to be added on top of computed
            service tax based on Percentage.
          type: number
        percentage:
          description: Percentage to be multiplied to Percentage Applied On to get
            the service tax.
          type: number
        minServiceTax:
          description: Minimum service tax in local currency to be charged
          type: number
        maxServiceTax:
          description: Maximum service tax in local currency to be charged.
          type: number
        exchangeRateTransactionGenerateTaxes:
          description: Exchange rate calculation tax information based on Transaction
            Code Generate.
          items:
            $ref: '#/components/schemas/exchangeRateTransactionGenerateTaxType'
          maxItems: 4000
          type: array
      type: object
    exchangeRateTransactionGenerateTaxesType:
      description: Exchange rate calculation tax information based on Transaction
        Code Generate.
      items:
        $ref: '#/components/schemas/exchangeRateTransactionGenerateTaxType'
      maxItems: 4000
      type: array
    exchangeRateTransactionGenerateTaxType:
      description: Tax information based on Transaction Code Generate.
      properties:
        code:
          description: Transaction Code Generate description.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Transaction Code Generate description.
          type: string
        taxAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    calculatedForeignCurrency:
      description: Information regarding charges in batch result for each reservation.
      properties:
        exchangeInfo:
          items:
            $ref: '#/components/schemas/exchangeRateCalculationType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    foreignCurrencyExchange:
      description: A set of posting transactions that need to be posted with regards
        to exchange.
      properties:
        foreignCurrencyExchangeList:
          items:
            $ref: '#/components/schemas/postForeignCurrencyExchangeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postForeignCurrencyExchangeType:
      description: Currency conversion calculation type.
      properties:
        hotelId:
          description: Property code where the currency is being converted.
          maxLength: 20
          minLength: 0
          type: string
        fromCurrencyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        exchangeDate:
          description: Date on which exchange rate was obtained.
          format: date
          type: string
        sell:
          description: Buy or Sell for calculation.
          type: boolean
        exchangeReference:
          description: Exchange references.
          type: string
        exchangeType:
          $ref: '#/components/schemas/currencyExchangeType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        room:
          description: Room to which posting is to be made.
          maxLength: 20
          minLength: 0
          type: string
        guestName:
          description: Name of the guest to whom posting is done.
          maxLength: 80
          minLength: 0
          type: string
        passerByName:
          description: Name of the passer by customer to whom posting is to be done.
          maxLength: 80
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    foreignCurrencyExchangeTransaction:
      description: Response of the posting foreign currency exchange transaction.
      properties:
        transaction:
          $ref: '#/components/schemas/foreignCurrencyExchangeTransactionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    foreignCurrencyExchangeTransactionType:
      description: Details about posting and generated folio on currency exchange.
      properties:
        posting:
          $ref: '#/components/schemas/summaryPostingType'
        folio:
          $ref: '#/components/schemas/folioType'
      type: object
    folioType:
      description: Represents a single page in a reservation's ledger which will contain
        transactions and payee information.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        folioAmount:
          $ref: '#/components/schemas/currencyAmountType'
        allowConvertFolioYn:
          description: Flag to check Folio Conversion Allowed.
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        revisionNo:
          description: Folio Revison number.
          type: number
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
      type: object
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    batchAdvanceFolio:
      description: Request for submitting batch advance folio.
      properties:
        batchAdvanceFolio:
          $ref: '#/components/schemas/batchAdvanceFolioType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    batchAdvanceFolioType:
      description: Contains criteria for process batch advance folio.
      properties:
        hotelId:
          description: Property context of the reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservations:
          description: Unique identifier for a reservation.
          items:
            $ref: '#/components/schemas/reservationId'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    reservations:
      description: Unique identifier for a reservation.
      items:
        $ref: '#/components/schemas/reservationId'
      maxItems: 4000
      type: array
    articlesSaleCriteria:
      description: "Request to post a set of charges, payments and generate a bill\
        \ for a PasserBy or for the Post-It functionality . A PasserBy is someone\
        \ who is not staying at the Property. A PasserBy transaction requires a Profile\
        \ in Opera for whom the the folio is being created."
      properties:
        criteria:
          $ref: '#/components/schemas/saleCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    saleCriteriaType:
      description: Criteria type for posting charges.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        payments:
          description: The payment information to be posted.
          items:
            $ref: '#/components/schemas/paymentCriteriaType'
          maxItems: 4000
          type: array
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        folioNameValue:
          description: Custom Folio Name Value Informatoin to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Transaction service type which the Folio is being associated.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    chargesCriteriaType:
      description: Collection of Charges to be posted.
      items:
        $ref: '#/components/schemas/chargeCriteriaType'
      maxItems: 4000
      type: array
    chargeCriteriaType:
      description: Criteria information for posting a charge.
      properties:
        transactionCode:
          description: Transaction Code to post.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Article ID.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postingQuantity:
          description: Quantity to post to the folio.
          type: integer
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        checkNumber:
          description: Indicates the Cheque number.
          maxLength: 200
          minLength: 0
          type: string
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        applyRoutingInstructions:
          description: Apply room routing when making this posting.
          type: boolean
        usePackageAllowance:
          description: Use the applicable package allowance when making this posting.
          type: boolean
        autoPosting:
          description: True indicates the Transaction Code is allowed to be posted
            automatically.
          type: boolean
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    paymentCriteriaType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        postingAmount:
          $ref: '#/components/schemas/currencyAmountType'
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        comments:
          description: User Defined Comments. Used for Deposit Payment postings.
          maxLength: 2000
          minLength: 0
          type: string
        applyCCSurcharge:
          description: "Flag to indicate if Credit Card Surcharge has to be applied\
            \ to this payment, when the functionality for Credit Card Surcharge is\
            \ available."
          type: boolean
        manualPaymentTaxInfo:
          $ref: '#/components/schemas/paymentTaxType'
        creditablePaymentTaxes:
          description: Payment Tax record.
          items:
            $ref: '#/components/schemas/paymentTaxType'
          maxItems: 4000
          type: array
        terminalId:
          description: Applicable for chip and pin. The ID of the terminal where the
            chip and pin device is connected and where the payment is made.
          type: string
        overrideInsufficientCC:
          description: Flag to allow a rebate by Credit Card
          type: boolean
        changeDueAmount:
          $ref: '#/components/schemas/currencyAmountType'
        compRedemptions:
          description: Information regarding Complimentary Bucket Redemption object.
          items:
            $ref: '#/components/schemas/redemptionType'
          maxItems: 4000
          type: array
        overrideARCreditLimit:
          description: Flag to override account receivable credit limit
          type: boolean
        applyCurrencyTaxes:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        vATOffset:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        action:
          $ref: '#/components/schemas/postPaymentActionType'
        prepaidCardRedemptions:
          description: A prepaid redemption info object to be used for posting a payment.
          items:
            $ref: '#/components/schemas/prepaidCardRedemptionType'
          maxItems: 1000
          type: array
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    cashieringPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
        authorizationApproval:
          $ref: '#/components/schemas/authorizationInfoType'
        track2Data:
          description: Track2 data for the card which would be sent to the CC vendor
            as part of the authorization.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    authorizationInfoType:
      properties:
        approvalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: The approval code authenticates the authorization.
          maxLength: 20
          minLength: 0
          type: string
        originalAuthSequence:
          description: Unique Authorization Sequence for the authorization and settlement.
          type: integer
        vendorTranId:
          description: Vendor transaction id for the authorization.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    paymentTaxType:
      description: Information regarding payments made which have Payment Tax.
      properties:
        taxInvoiceNo:
          description: The Tax Invoice for this payment.
          maxLength: 20
          minLength: 0
          type: string
        paymentType:
          $ref: '#/components/schemas/paymentTax'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        taxableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        nonTaxableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        availableCredit:
          $ref: '#/components/schemas/currencyAmountType'
        paymentDate:
          description: The Payment Invoice date
          format: date
          type: string
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date of the Payment.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code of the Payment.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    paymentTax:
      description: The types of Payment Tax transactions.
      enum:
      - Deposit
      - FrontOffice
      - CreditNote
      - CityLedger
      - AccountsReceivables
      - NonVat
      type: string
    paymentTaxesType:
      description: Payment Tax record.
      items:
        $ref: '#/components/schemas/paymentTaxType'
      maxItems: 4000
      type: array
    compRedemptionsType:
      description: Information regarding Complimentary Bucket Redemption object.
      items:
        $ref: '#/components/schemas/redemptionType'
      maxItems: 4000
      type: array
    redemptionType:
      description: Redemption information.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        code:
          description: The associated redemption code.
          maxLength: 20
          minLength: 0
          type: string
        supplement:
          description: Additional information regarding the redemption.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description of the Complimentary Bucket Redemption.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the Complimentary Bucket Redemption.
          maxLength: 20
          minLength: 0
          type: string
        availableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        transactionNo:
          description: Transaction Number of the Complimentary Bucket Redemption.
          type: number
        approvalCode:
          description: Approval Code of the Complimentary Bucket Redemption.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    postPaymentActionType:
      description: Advance Payment Action.
      enum:
      - Billing
      - Settlefolio
      - Deposit
      - Compredemption
      - Prepaidcardredemption
      - Advancepayment
      type: string
    prepaidCardRedemptionsType:
      description: A prepaid redemption info object to be used for posting a payment.
      items:
        $ref: '#/components/schemas/prepaidCardRedemptionType'
      maxItems: 1000
      type: array
    prepaidCardRedemptionType:
      description: Redemption information.
      properties:
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        pin:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: The associated redemption transaction code.
          maxLength: 20
          minLength: 0
          type: string
        reference:
          description: Additional information regarding the redemption.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    fiscalServiceType:
      description: Generate Fiscal Folio Criteria type to be used for fiscal folio
        generation
      properties:
        fiscalTerminal:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          maxLength: 40
          minLength: 0
          type: string
        invoiceCurrencyCode:
          description: Fiscal Invoicing Currency code to be used by the Fiscal Service.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          $ref: '#/components/schemas/fiscalFolioInstruction'
        folioQueueName:
          $ref: '#/components/schemas/folioQueueType'
        folioSeqId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    fiscalFolioInstruction:
      description: Action to generate Offline folio when no reponse is received from
        fiscal service.
      enum:
      - Retry
      - New
      - Void
      - Offline
      type: string
    folioQueueType:
      description: List of charges that will be posted against the transaction code
        based from the test criteria.
      properties:
        folioType:
          description: Folio Type to be assigned to generated folio. This is a country
            requirement.
          maxLength: 100
          minLength: 0
          type: string
        queueName:
          description: Folio Queue name.
          maxLength: 2000
          minLength: 0
          type: string
        generateFiscalFolio:
          description: Fiscal folio flag to call fiscal folio web service after folio
            generation.
          type: boolean
      type: object
    nameValueHeaderDetailType:
      description: Name value details collected before Folio Settlement
      properties:
        nameValueHeader:
          $ref: '#/components/schemas/nameValueBaseSearchType'
        nameValueDetails:
          $ref: '#/components/schemas/nameValueDetailType'
      type: object
    nameValueBaseSearchType:
      description: Contains name value information search criteria.
      properties:
        hotelId:
          description: Specifies the hotel code.
          maxLength: 20
          minLength: 0
          type: string
        moduleName:
          $ref: '#/components/schemas/nameValueModuleType'
        nameValueType:
          $ref: '#/components/schemas/nameValueTypeType'
        sequence:
          $ref: '#/components/schemas/uniqueID_Type'
        configName:
          $ref: '#/components/schemas/customNameValueConfigType'
      type: object
    nameValueModuleType:
      enum:
      - Reservation
      - Folio
      - Profile
      - Fintrix
      type: string
    nameValueTypeType:
      enum:
      - ReservationOptions
      - AfterSettlement
      - BeforeSettlement
      - AfterPayment
      - ProfileOptions
      type: string
    customNameValueConfigType:
      description: Italian Lottery Number.
      enum:
      - ItalianFattura
      - Folio
      - FinancialTransaction
      - TaiwanInvoice
      - SaudiCustomerType
      - ItalianLotteryNumber
      type: string
    nameValueDetailType:
      description: Detailed information returned during name value search.
      properties:
        nameValues:
          description: List of name value pairs.
          items:
            $ref: '#/components/schemas/nameValueType'
          maxItems: 4000
          type: array
      type: object
    nameValuesType:
      description: List of name value pairs.
      items:
        $ref: '#/components/schemas/nameValueType'
      maxItems: 4000
      type: array
    nameValueType:
      description: Contains name value pair.
      properties:
        name:
          description: Contains unique key which represents for record field.
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Contains value for the record/column.
          maxLength: 4000
          minLength: 0
          type: string
        formatString:
          description: Contains format string for values.
          maxLength: 100
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/nameValueDataTypeType'
        origin:
          $ref: '#/components/schemas/nameValueOriginType'
        usageInstruction:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    nameValueDataTypeType:
      enum:
      - String
      - Number
      - Date
      - Datetime
      - Time
      - Integer
      type: string
    nameValueOriginType:
      description: Contains origin details.
      properties:
        originName:
          $ref: '#/components/schemas/nameValueModuleType'
        destination:
          description: Contains destination column for Origin.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    articlesSale:
      description: Details of the folio created.
      properties:
        folioWindowDetails:
          items:
            $ref: '#/components/schemas/folioWindowType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioWindowType:
      description: A folio window view which holds the set of folios for a reservation.
      properties:
        revenue:
          $ref: '#/components/schemas/currencyAmountType'
        payment:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        debitRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        debitPayment:
          $ref: '#/components/schemas/currencyAmountType'
        debitBalance:
          $ref: '#/components/schemas/currencyAmountType'
        exchange:
          $ref: '#/components/schemas/folioWindowExchangeAmounts'
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        compAccountingInfo:
          $ref: '#/components/schemas/compAccountingType'
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        fiscalFolioInstruction:
          $ref: '#/components/schemas/fiscalFolioInstruction'
        folios:
          items:
            $ref: '#/components/schemas/folioType'
          maxItems: 4000
          type: array
        vATOffsetAmount:
          $ref: '#/components/schemas/currencyAmountType'
        serviceTypeInfo:
          description: Details about service type postings.
          items:
            $ref: '#/components/schemas/transactionServiceTypeType'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        emptyFolio:
          description: Flag to notify if the current folio has any postings.
          type: boolean
        emptyWindow:
          description: Flag to notify if the entire window has any postings.
          type: boolean
        officialBIRReceiptExists:
          description: Flag to indicate if an Official Receipt is generated for the
            folio window. Applicable only in the Philippines.
          type: boolean
        simpleFolio:
          description: This flag signifies that generated Folio is Normal or Simple
            Folio. Certain countries of the World mandate a simple folio when the
            invoice amount is less than defined threshold.
          type: boolean
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    folioWindowExchangeAmounts:
      description: Converted folio windows values for the Exchange Currency requested.
      properties:
        revenue:
          $ref: '#/components/schemas/currencyAmountType'
        payment:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    compAccountingType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
        aRNumber:
          description: AR Account Number of the authorizer
          maxLength: 20
          minLength: 0
          type: string
        compTypeCode:
          description: The Comp Type for this Account. Used when using the Comp types
            functionality
          maxLength: 20
          minLength: 0
          type: string
        compVoucherNo:
          description: The coupon or voucher number used by the external gaming system
            to track postings made to this routing.
          maxLength: 30
          minLength: 0
          type: string
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        membershipId:
          description: Membership number
          maxLength: 100
          minLength: 0
          type: string
        membershipIdNo:
          description: Unique Id of membership
          type: integer
        membershipNameOnCard:
          description: Name displayed on the membership card
          maxLength: 80
          minLength: 0
          type: string
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    fiscalResponseType:
      description: Provides information which is used for fiscal response processing.
      properties:
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        retryFiscalPrinting:
          description: Flag to do the retrieval process of fiscal printing or not.
          type: boolean
      type: object
    transactionServiceTypesType:
      description: Details about service type postings.
      items:
        $ref: '#/components/schemas/transactionServiceTypeType'
      maxItems: 4000
      type: array
    transactionServiceTypeType:
      description: Containsts service type posting information.
      properties:
        serviceType:
          $ref: '#/components/schemas/codeDescriptionType'
        revenue:
          $ref: '#/components/schemas/currencyAmountType'
        payment:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        totalPostings:
          description: Running total number of the service type.
          type: integer
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    authorizersCreditInfo:
      description: Returns credit information of Comp Accounting Authorizers.
      properties:
        authorizersCreditType:
          description: List of Comp Accounting Authorizers Credits
          items:
            $ref: '#/components/schemas/authorizerCreditType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizersCreditType:
      description: List of Comp Accounting Authorizers Credits
      items:
        $ref: '#/components/schemas/authorizerCreditType'
      maxItems: 4000
      type: array
    authorizerCreditType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
        hotelId:
          description: Identifies the hotel code.
          maxLength: 20
          minLength: 0
          type: string
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        actualAmount:
          $ref: '#/components/schemas/currencyAmountType'
        authorizerCreditDetails:
          description: List of Comp Accounting Authorizers details
          items:
            $ref: '#/components/schemas/authorizerCreditDetailType'
          maxItems: 4000
          type: array
        transactionDate:
          description: Transaction Date associated with the transaction.
          format: date
          type: string
      type: object
    authorizerCreditDetailsType:
      description: List of Comp Accounting Authorizers details
      items:
        $ref: '#/components/schemas/authorizerCreditDetailType'
      maxItems: 4000
      type: array
    authorizerCreditDetailType:
      description: Information about the Authorizer Credit detail
      properties:
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        actualAmount:
          $ref: '#/components/schemas/currencyAmountType'
        billingInstruction:
          description: Indicates the Routing Instructions for which Authorization
            was done.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    batchAutoCheckoutReservation:
      description: Request type for batch auto checkout.
      properties:
        criteria:
          $ref: '#/components/schemas/checkoutReservationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkoutReservationType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        eventType:
          $ref: '#/components/schemas/cashieringEventType'
        checkoutInstr:
          $ref: '#/components/schemas/checkoutInstructionsType'
        mobileCheckoutFolioEmail:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        checkoutWithOpenFolio:
          description: "If the Property works with Open Folios and the reservation\
            \ has the privileges for Post Stay Charging, this flag could be set to\
            \ True which would checkout the guest without requiring the guest to settle\
            \ his balances."
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        mobileCheckout:
          description: "This flag will be set to true if the reservation is checked\
            \ out via mobility service. When the reservation is checked out through\
            \ UI, this would be false."
          type: boolean
        autoCheckout:
          description: "This flag will be set to true if the reservation is checked\
            \ out via mobility service. When the reservation is checked out through\
            \ UI, this would be false."
          type: boolean
        stopCheckout:
          description: Indicates Stop Checkout reservation Global Alert flag.
          type: boolean
      type: object
    cashieringEventType:
      description: Event being generated by a Supplemental Folio.
      enum:
      - CheckOut
      - EarlyDeparture
      - AdvanceBill
      - InterimBill
      - PasserBy
      - PostIt
      - CreditBill
      - Deposit
      - DepositRefund
      - AutoFolio
      - PrepaidCard
      - AutoSettlement
      - InformationFolio
      - SupplementalFolio
      type: string
    checkoutInstructionsType:
      properties:
        roomStatus:
          description: Housekeeping Status to be assigned to the room after checkout.
          maxLength: 40
          minLength: 0
          type: string
        scheduleOn:
          description: Date and time for scheduled check out which could be performed
            when SCHEDULED CHECKOUT is active. Room status will be assigned according
            to SCHEDULED CHECKOUT ROOM STATUS parameter value.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        guestPreferredCurrency:
          description: Currency Code which the Guest preferred to use and to be stored
            on the reservation of the Guest.
          maxLength: 20
          minLength: 0
          type: string
        ignoreWarnings:
          description: Dictates whether to ignore warnings before check out.
          type: boolean
      type: object
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    batchAutoCheckoutDetails:
      description: Response for batch auto check out.
      properties:
        processId:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength40:
      description: "Used for Character Strings, length 0 to 40."
      maxLength: 40
      minLength: 0
      type: string
    batchAutoSettlementCriteria:
      description: Request type for batch auto settlement.
      properties:
        criteria:
          $ref: '#/components/schemas/autoSettlementType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoSettlementType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        eventType:
          $ref: '#/components/schemas/cashieringEventType'
        paymentMethods:
          description: Defines the payment method to search reservations.
          items:
            $ref: '#/components/schemas/paymentMethodSearchType'
          maxItems: 4000
          type: array
        folioWindowsToSettle:
          description: Folio windows to do auto auto settlement.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 8
          type: array
        folioWindowsToTransfer:
          description: Folio windows to transfer.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 8
          type: array
        reservationCriteria:
          $ref: '#/components/schemas/autoFolioSettlementCriteriaType'
        includeCreditCardBalance:
          description: Dictates whether to include negative postings for auto settlement.
          type: boolean
        minimumWindowBalance:
          description: Indicates the minimum window balance to do auto settlement.
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    paymentMethodsSearchType:
      description: Defines the payment method to search reservations.
      items:
        $ref: '#/components/schemas/paymentMethodSearchType'
      maxItems: 4000
      type: array
    paymentMethodSearchType:
      description: Reservation Payment method search criteria for searching a reservation.
      properties:
        paymentMethod:
          description: Payment Method to search the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    autoFolioSettlementCriteriaType:
      properties:
        folioSettlementTypes:
          description: Comma-delimited list of Folio Settlement Type codes.
          type: string
        defaultDays:
          description: "Use the Number of Days For Settlement, defined for the Reservation."
          type: boolean
        daysSinceLastAutoSettled:
          description: Days since the last auto folio settlement.
          maximum: 365
          minimum: 1
          type: integer
        dateSinceLastAutoSettled:
          description: Date since the last auto folio settlement.
          format: date
          type: string
      type: object
    batchDeposit:
      description: Request for submitting batch deposit for reservations.
      properties:
        batchDeposit:
          $ref: '#/components/schemas/batchDepositType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    batchDepositType:
      description: Contains criteria for batch deposit for reservations.
      properties:
        hotelId:
          description: Property context of the reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservations:
          description: Unique identifier for a reservation.
          items:
            $ref: '#/components/schemas/reservationId'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    bedTaxInfo:
      description: Response for bed transaction info
      properties:
        bedTaxInfoTypes:
          description: List of Bed Tax info.
          items:
            $ref: '#/components/schemas/bedTaxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bedTaxInfoTypes:
      description: List of Bed Tax info.
      items:
        $ref: '#/components/schemas/bedTaxInfoType'
      maxItems: 4000
      type: array
    bedTaxInfoType:
      description: Bed Trx Info type
      properties:
        hotelId:
          description: Property associated with bed tax
          maxLength: 20
          minLength: 0
          type: string
        taxRegistrationNo:
          description: Tax Registration Number
          type: integer
        taxArrivaldate:
          description: Arrival Date with time of the reservation
          format: date
          type: string
        arrivalCarrierCode:
          description: "Arrival Carrier code of the mode of transportation (Airline\
            \ No. or Railway No., etc.)"
          maxLength: 20
          minLength: 0
          type: string
        taxDepartureDate:
          description: Departure Date with time of the reservation
          format: date
          type: string
        departureCarrierCode:
          description: "Departure Carrier code of the mode of transportation (Airline\
            \ No. or Railway No., etc.)"
          maxLength: 20
          minLength: 0
          type: string
        guestName:
          description: Guest name associated with the transaction.
          maxLength: 200
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        arrival:
          description: Arrival Date of the reservation
          format: date
          type: string
        departure:
          description: Departure Date with time of the reservation
          format: date
          type: string
        visaNumber:
          description: Visa Number
          maxLength: 40
          minLength: 0
          type: string
        visaIssueDate:
          description: Issue date of the Visa
          format: date
          type: string
        visaExpirationDate:
          description: Expiration date of visa
          format: date
          type: string
        taxNoOfStays:
          description: Total number of tax stays at the property
          type: integer
        profession:
          description: Profession of the guest
          maxLength: 80
          minLength: 0
          type: string
        passPortStr:
          description: Passport number
          maxLength: 80
          minLength: 0
          type: string
        passport:
          description: Passport number
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Nationality of the guest
          maxLength: 20
          minLength: 0
          type: string
        guestAge:
          description: Age of the guest
          type: integer
        country:
          description: Country of the guest
          maxLength: 20
          minLength: 0
          type: string
        remark:
          description: User-defined remark.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    bedTaxCriteria:
      description: Request type for change bed transaction info
      properties:
        bedTaxInfoType:
          $ref: '#/components/schemas/bedTaxInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    putBillingCharges:
      description: Request to edit a billing charge information.
      properties:
        criteria:
          $ref: '#/components/schemas/billingChargesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    billingChargesType:
      description: Criteria for the charge information list to be edited.
      properties:
        billingCharges:
          description: Request to edit a billing charge information
          items:
            $ref: '#/components/schemas/billingChargeType'
          maxItems: 2000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    billingChargeType:
      properties:
        transactionNo:
          description: Transaction number of the posting being corrected.
          type: number
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Corrected posting quantity.
          type: integer
        reference:
          description: Corrected user-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: Corrected user-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        checkNumber:
          description: Corrected Cheque number.
          maxLength: 200
          minLength: 0
          type: string
        revenueDate:
          description: Corrected Revenue Date.
          format: date
          type: string
        covers:
          description: Corrected POS covers - number of copies of receipts that got
            printed for that particular receipt.
          maxLength: 10
          minLength: 0
          type: string
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalDate:
          description: Approval date of the posting.
          format: date
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    putBillingChargesStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ccBatchSettlementsStatus:
      description: Response for credit card settlements status.
      properties:
        batchSettlementsStatus:
          $ref: '#/components/schemas/cCBatchSettlementsStatusType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCBatchSettlementsStatusType:
      description: List of CCBatchSettlementStatusType type
      properties:
        cCBatchSettlementsStatus:
          items:
            $ref: '#/components/schemas/cCBatchSettlementStatusType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        batchId:
          description: Batch Id for identify status of job.
          type: string
      type: object
    cCBatchSettlementStatusType:
      description: Provides status information for credit card settlements .
      properties:
        settlementStatus:
          description: Status of credit card settlements.
          type: string
        settlementId:
          $ref: '#/components/schemas/uniqueID_Type'
        reason:
          description: Batch Id for identify status of job.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    cashierClosureDetails:
      description: Response for the fetch Cashier Closure information.
      properties:
        cashierClosureInfo:
          $ref: '#/components/schemas/cashierClosureType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierClosureReportsList:
      description: "Returns whether a particular report is applicable or not based\
        \ on payment posting type. When no postings for a particular payment type\
        \ is found, that report is marked as not applicable in the closure report."
      properties:
        cashierReportList:
          items:
            $ref: '#/components/schemas/cashierReportType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierReportType:
      description: Shift drop report created when cashier closure is completed. It
        is an integral part of closure report and is not to be printed or accessed
        by itself.
      enum:
      - Cash
      - Check
      - ForeignCurrency
      - CreditCard
      - Miscellaneous
      - ArSettlements
      - DepositTransfers
      - Shiftdrop
      type: string
    transactionReversal:
      description: Request to reverse a Payment Tax record for Thailand Tax requirement.
      properties:
        reverseCriteria:
          $ref: '#/components/schemas/deleteTransactionCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    deleteTransactionCriteriaType:
      description: Criteria type for deletion of transactions.
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        transactionList:
          description: The unique transaction number of this transaction.
          items:
            type: number
          maxItems: 4000
          type: array
        reasonCode:
          description: The reason code for the deletion.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    folioTaxPaymentReversal:
      description: Response for the reverse Thailand Tax Payment Tax record request.
      properties:
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierLockCriteriaToExtend:
      description: Operation for extending the lifetime of a lock on a cashier.
      properties:
        additionalTimeToLive:
          description: The number of seconds to add to the lock's validity time.
          type: number
        cashierLockHandle:
          description: The Cashier Lock Handle to pass along with operation which
            required cashier to be locked.
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    extendedCashierLock:
      description: This response will indicate whether or not the extension was successful.
        This operation may return errors when the lock being requested to be extended
        no longer exists. This can happen when the lock has already expired and cleaned
        up.
      properties:
        cashierLock:
          $ref: '#/components/schemas/operaRecordLock'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ccSettlementCriteria:
      description: Request object to change credit card settlement information.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        creditCardSettlement:
          $ref: '#/components/schemas/cCBatchSettlementType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCBatchSettlementType:
      description: Credit card transaction detail for batch settlement
      properties:
        settlementId:
          $ref: '#/components/schemas/uniqueID_Type'
        settlementAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guestName:
          description: Guest name associated with the CC settlement transaction.
          maxLength: 2000
          minLength: 0
          type: string
        roomId:
          description: Room number associated with the CC settlement transaction.
          maxLength: 20
          minLength: 0
          type: string
        windowNo:
          description: Window number associated with the CC settlement transaction.
          type: integer
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        approvalCode:
          description: The approval code authenticates the authorization.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio number of transaction
          type: number
        transactionDate:
          description: Transaction Date of the credit card transaction.
          format: date
          type: string
      type: object
    ccBatchSettlementsProcessCriteria:
      description: Request to process batch settlements
      properties:
        criteria:
          $ref: '#/components/schemas/cCBatchSettlementsProcessType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCBatchSettlementsProcessType:
      description: Type for starting settlements job process.
      properties:
        hotelId:
          description: Hotel code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        settlementIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        batchId:
          description: Batch Id for identify status of job.
          type: string
      type: object
    checkDetails:
      description: Response object to Fetch the check details for a given posting
        posted through the POS.
      properties:
        checkDetailsInfo:
          description: "Used for Character Strings, length 0 to 32000."
          maxLength: 32000
          minLength: 0
          type: string
        checkImageInfo:
          description: Response of guest check Image details in encoded format.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        checkNumber:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        checkDate:
          description: Indicates the Cheque date.
          format: date
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength32000:
      description: "Used for Character Strings, length 0 to 32000."
      maxLength: 32000
      minLength: 0
      type: string
    stringLength200:
      description: "Used for Character Strings, length 0 to 200."
      maxLength: 200
      minLength: 0
      type: string
    guestCheckDetails:
      description: Request to process a guest check detail.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        checkDetails:
          $ref: '#/components/schemas/checkDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkDetailsType:
      description: Holds check details information.
      properties:
        checkDate:
          description: Check date of the posting.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        checkText:
          description: Check text of the posting.
          maxLength: 32000
          minLength: 0
          type: string
        checkImage:
          description: Check image of the posting.
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    cashierClosureInformation:
      description: Response to the request to get financial details for a Posting
        Activity. This will return the before and after values for the transactions
        which were changed.
      properties:
        cashierClosureInfo:
          description: Information of the Cashier.
          items:
            $ref: '#/components/schemas/cashierClosureInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashierClosureInfoTypes:
      description: Information of the Cashier.
      items:
        $ref: '#/components/schemas/cashierClosureInfoType'
      maxItems: 4000
      type: array
    cashierClosureInfoType:
      description: Cashier closure Information.
      properties:
        cashierClosureNo:
          $ref: '#/components/schemas/cashierClosureNoType'
        hotelId:
          description: Property this record belongs to.
          maxLength: 20
          minLength: 0
          type: string
        cashierTitle:
          description: Cashier title of the cashier.
          maxLength: 2000
          minLength: 0
          type: string
        cashierUser:
          description: Cashier user name.
          maxLength: 2000
          minLength: 0
          type: string
        openDate:
          description: Date and time cashier was opened.
          format: date
          type: string
        closeDate:
          description: Date and time cashier was closed.
          format: date
          type: string
        closureBusinessDate:
          description: Business date cashier was closed.
          format: date
          type: string
        reportsList:
          description: Information of the Cashier.
          items:
            $ref: '#/components/schemas/cashierReportType'
          maxItems: 7
          type: array
      type: object
    cashierClosureReportsType:
      description: Information of the Cashier.
      items:
        $ref: '#/components/schemas/cashierReportType'
      maxItems: 7
      type: array
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    compRoutingInstructions:
      description: Response object containing comp routing instructions for a reservation
        .
      properties:
        resvRoutingInstructions:
          description: A comp routing info object
          items:
            $ref: '#/components/schemas/resvRoutingInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resvRoutingInfoListType:
      description: A comp routing info object
      items:
        $ref: '#/components/schemas/resvRoutingInfoType'
      maxItems: 4000
      type: array
    resvRoutingInfoType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        folio:
          $ref: '#/components/schemas/resvRoutingInfoType_folio'
        room:
          $ref: '#/components/schemas/resvRoutingInfoType_room'
        comp:
          $ref: '#/components/schemas/resvRoutingInfoType_comp'
        request:
          $ref: '#/components/schemas/resvRoutingInfoType_request'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    routingInstructionType:
      description: "Routing limit can be one of the three: Credit Limit, Percetage\
        \ Limit, Covers Limit"
      properties:
        duration:
          $ref: '#/components/schemas/routingInstructionType_duration'
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        creditLimit:
          description: "Allowable credit amount for this routing instruction. Null\
            \ value means no limit, 0 equals zero."
          type: number
        percentageLimit:
          description: The routing limit percentage allowed for this routing instruction.
          type: number
        covers:
          description: Number of covers for this routing instruction.
          type: number
        limitUsed:
          description: Amount of Credit used for this routing instruction.
          type: number
        routingLinkId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    compRoutingRequestType:
      description: Type for the details of a Comp Routing Request
      properties:
        requestedBy:
          $ref: '#/components/schemas/userInfoType'
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        declinedBy:
          $ref: '#/components/schemas/userInfoType'
        status:
          $ref: '#/components/schemas/compRoutingStatusType'
      type: object
    userInfoType:
      description: Opera User Information
      properties:
        userId:
          description: User Id of the Opera User
          type: integer
        userName:
          description: Name of the Opera User
          maxLength: 40
          minLength: 0
          type: string
      type: object
    compRoutingStatusType:
      description: Status which indicates that the Request of Comp Routing was declined
      enum:
      - Request
      - Comp
      - Declined
      type: string
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the ‘\
            true’ or ‘false’ values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
      type: object
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        fullName:
          description: Full display name
          type: string
        alternateFullName:
          description: Altername full display name
          type: string
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        birthDate:
          description: Date of birth
          format: date
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          $ref: '#/components/schemas/countryNameType'
        vip:
          $ref: '#/components/schemas/vIPType'
        address:
          $ref: '#/components/schemas/addressSearchType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True indicates membership is a Primary
            Membership.
          type: boolean
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    surnameType:
      description: "Family name, last name."
      maxLength: 40
      minLength: 0
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
      type: object
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
      type: object
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentTime:
          description: Time the text was last sent to the user.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        instructions:
          description: Turndown instructions for the room.
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
      type: object
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
        supplies:
          description: List of the facility codes.
          items:
            $ref: '#/components/schemas/facilityCodeType'
          maxItems: 4000
          type: array
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
      type: object
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
      type: object
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
      type: object
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountRequired:
          description: Deposit Amount Required.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
      type: object
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - HouseKeeping
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    interfaceRightsStatusType:
      properties:
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
      type: object
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        telephones:
          $ref: '#/components/schemas/resCommunicationType_telephones'
        emails:
          $ref: '#/components/schemas/resCommunicationType_emails'
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        expectedReturnTime:
          description: Expected Return Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    compTrxAuthorizers:
      description: Response object for fetch comp authorizers operation.
      properties:
        authorizerInfo:
          description: List of authorizers eligible to perform the transfer.
          items:
            $ref: '#/components/schemas/authorizerInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditBillCriteria:
      description: Request to post a Credit Folio for an existing Folio. Credit Bill
        Functionality parameter is required.
      properties:
        criteria:
          $ref: '#/components/schemas/creditBillCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditBillCriteriaType:
      description: Criteria for posting the Credit Bill. Includes charges and payments.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        payments:
          description: The payment information to be posted.
          items:
            $ref: '#/components/schemas/paymentCriteriaType'
          maxItems: 4000
          type: array
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        folioNameValue:
          description: Custom Folio Name Value Informatoin to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Transaction service type which the Folio is being associated.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        originalFolio:
          $ref: '#/components/schemas/folioType'
        fullCredit:
          description: Flag can be used when a Credit Bill is to be created for full
            set of transactions in the Original Bill.
          type: boolean
      type: object
    postedCreditBill:
      description: Response for the request to create a Credit Folio.
      properties:
        folioWindow:
          description: Information regarding the new Credit Folio created.
          items:
            $ref: '#/components/schemas/folioWindowType'
          type: array
        payments:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    validatedCreditBill:
      description: Response to the request to check if a Folio is valid for Credit
        Bill.
      properties:
        folio:
          $ref: '#/components/schemas/validatedCreditBill_folio'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    profileInfoType:
      description: Provides information about attached profiles to the block.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        name:
          description: Name for the profile attached to the block.
          maxLength: 200
          minLength: 0
          type: string
        city:
          description: City for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        phone:
          description: Phone for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: Defines the type of Linked profiles for a block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    exchangeRateInfoType:
      description: Exchange rate information of a currency.
      properties:
        exchangeRate:
          description: Description of exchange rate.
          type: number
        currencyCode:
          description: Description of currency Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    creditLimitOveragePaymentsInfo:
      description: Response for Fetch Credit Limit Overage Payments request
      properties:
        reservationOveragePayments:
          $ref: '#/components/schemas/reservationOveragePaymentsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationOveragePaymentsType:
      description: List of Reservation details for payment that has a folio window
        balance equal or higher to the credit limit set for the credit card payment
        method of that folio window.
      properties:
        reservationOveragePayment:
          description: Reservation details to initiate the Credit Limit Overage process
          items:
            $ref: '#/components/schemas/reservationOveragePaymentType'
          maxItems: 4000
          type: array
        hotelId:
          description: Identifies the hotel code.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    reservationOveragePaymentType:
      description: Details of the reservation with the folio balance equal or higher
        to the credit limit
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestName:
          description: Guest name of the listed reservation.
          maxLength: 2000
          minLength: 0
          type: string
        roomId:
          description: Room number on the reservation.
          maxLength: 20
          minLength: 0
          type: string
        windowNo:
          description: Window number associated where the balance is equal or higher
            to the credit limit on the method of payment.
          type: integer
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Identifies the user defined credit card type if credit card
            type from a defined list is not provided.
          maxLength: 2
          minLength: 0
          type: string
        creditCardNo:
          description: Credit Card number / token (mask based on PCI compliance).
          maxLength: 80
          minLength: 0
          type: string
        cardExpirationDate:
          description: Expiration date of the credit card (mask based on PCI compliance)
          maxLength: 20
          minLength: 0
          type: string
        creditCardId:
          $ref: '#/components/schemas/uniqueID_Type'
        creditCardLimit:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        paymentMethod:
          description: Defines the unique identifier for this payment method.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    creditLimitOveragePayments:
      description: Request to start the Credit Limit Overage process for the reservations
        with a folio window balance equal or higher to the credit limit set for the
        credit card payment method of that folio window.
      properties:
        criteria:
          $ref: '#/components/schemas/reservationOveragePaymentsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditLimitOveragePaymentsDetails:
      description: Response for Submit Credit Limit Overage Payments request
      properties:
        processId:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    vaultTransaction:
      description: Request to register the vault HTTP transaction.
      properties:
        httpTransactionMessage:
          $ref: '#/components/schemas/vaultHTTPTransactionMessageType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    vaultHTTPTransactionMessageType:
      properties:
        hotelId:
          description: The hotel context of the transaction.
          maxLength: 20
          minLength: 0
          type: string
        escapedRequestContent:
          description: The HTTP request entity content. The needs to use escape characters.
          maxLength: 4000
          minLength: 0
          type: string
        escapedResponseContent:
          description: The HTTP response entity content. The needs to use escape characters.
          maxLength: 4000
          minLength: 0
          type: string
        hTTPTransactionDuration:
          $ref: '#/components/schemas/dateRangeType'
        hTTPError:
          $ref: '#/components/schemas/errorType'
        authorizationApproval:
          $ref: '#/components/schemas/vaultHTTPTransactionMessageType_authorizationApproval'
        type:
          $ref: '#/components/schemas/vaultHTTPTransactionType'
      type: object
    errorType:
      description: "Standard way to indicate that an error occurred during the processing\
        \ of an OpenTravel message. If the message successfully processes, but there\
        \ are business errors, those errors should be passed in the warning element."
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings. Refer to OpenTravel\
            \ Code List Error Codes (ERR)."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ OTA_ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the\
            \ data type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown". Refer to OpenTravel Code
            List Error Warning Type (EWT).
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nodeList:
          description: "An XPath expression that selects all the nodes whose data\
            \ caused this error. Further, this expression should have an additional\
            \ contraint which contains the data of the node. This will provide the\
            \ offending data back to systems that cannot maintain the original message."
          type: string
      type: object
    cardAuthorizationTransactionType:
      description: Currently supported transaction type categories used for credit
        card authorization.
      enum:
      - Additional
      - ArPayment
      - Batch
      - BatchDeposit
      - BatchDepositRefund
      - Billing
      - CheckIn
      - CheckInManualAuth
      - Deposit
      - EndOfDay
      - EndOfDayDeposit
      - Manual
      - Other
      - PasserBy
      - PostIt
      - PreCheckIn
      - Refund
      - Scheduled
      type: string
    vaultHTTPTransactionType:
      enum:
      - CCUniqueID
      - CCNumber
      - FolioAuthorization
      type: string
    ccSurchargeDetails:
      description: Response to the request to fetch Credit Card Surcharge information
        for a Credit Card Payment.
      properties:
        info:
          $ref: '#/components/schemas/cCSurchargeAmountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCSurchargeAmountType:
      description: Information regarding the Surcharge amount which will be applied
        to a payment.
      properties:
        hotelId:
          description: Property where the payment is being posted.
          maxLength: 20
          minLength: 0
          type: string
        surchargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        surchargeInfo:
          $ref: '#/components/schemas/cCSurchargeInfoType'
        paymentMethod:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
      type: object
    cCSurchargeInfoType:
      description: Credit Card Surcharge Information type. Information regarding surcharge
        which can be applied to a Credit Card payment.
      properties:
        percentage:
          description: The percentage on the payment amount which will be the Surcharge.
          maximum: 100
          minimum: 0
          type: number
        threshold:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: The Payment Transaction Code for which the Surcharge Applies.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationDepositFolios:
      description: Deposit Posting Information for a reservation. Contains all deposit
        payments made for a reservation.
      properties:
        reservationDepositFoliosInfo:
          description: Detailed information of a reservation and its deposit payment
            posting information.
          items:
            $ref: '#/components/schemas/reservationDepositFolioInfoType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationDepositFoliosInfoType:
      description: Detailed information of a reservation and its deposit payment posting
        information.
      items:
        $ref: '#/components/schemas/reservationDepositFolioInfoType'
      maxItems: 4000
      type: array
    reservationDepositFolioInfoType:
      description: Detailed information of a reservation and its deposit payment posting
        information.
      properties:
        totalAmountDue:
          $ref: '#/components/schemas/currencyAmountType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        deposits:
          description: A List of Deposit Payments.
          items:
            $ref: '#/components/schemas/depositPostingType'
          maxItems: 4000
          type: array
        totalAmountTransferrable:
          $ref: '#/components/schemas/currencyAmountType'
        projectedRevenue:
          $ref: '#/components/schemas/projectedRevenueType'
        policySummaryInfo:
          $ref: '#/components/schemas/reservationPolicySummaryType'
        depositType:
          $ref: '#/components/schemas/depositType'
        depositMaturityType:
          $ref: '#/components/schemas/depositMaturityType'
      type: object
    depositPostingsType:
      description: A List of Deposit Payments.
      items:
        $ref: '#/components/schemas/depositPostingType'
      maxItems: 4000
      type: array
    depositPostingType:
      description: Posting details.
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/detailPostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        customCharge:
          description: Flag to identify a Custom Charge.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        depositPolicy:
          $ref: '#/components/schemas/resDepositPolicyType'
        comments:
          description: User defined comments for the deposit.
          maxLength: 2000
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        receiptSummaryInfo:
          $ref: '#/components/schemas/receiptSummaryType'
        folioNo:
          description: "The Folio number of this posting, if there was a Folio already\
            \ generated."
          type: number
        transferred:
          description: Indicates if the deposit was transferred either to a reservation
            or from a reservation.
          type: boolean
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    resDepositPolicyType:
      description: A deposit policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/depositPolicyType'
        comments:
          description: Comments attached with a deposit.
          maxLength: 2000
          minLength: 0
          type: string
        amountPaid:
          $ref: '#/components/schemas/currencyAmountType'
        amountDue:
          $ref: '#/components/schemas/currencyAmountType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    depositCancelRevenueType:
      description: The type to indicate what revenue is to be used for calculating
        deposit/cancellation amounts.
      enum:
      - Rooms
      - Catering
      - All
      type: string
    depositPolicyType:
      description: "Used to define the deposit policy, guarantees policy, and/or accepted\
        \ forms of payment."
      properties:
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        description:
          description: Text description of the Payment in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        depositReceiptNo:
          description: Receipt number associated with the deposit policy
          type: integer
        transactionDate:
          description: Transaction Date associated with the deposit policy
          format: date
          type: string
        depositReqReversed:
          description: Flag to indicate if deposit policy is reversed
          type: boolean
        formattedRule:
          description: Formatted Text Rule of the deposit policy.
          maxLength: 2000
          minLength: 0
          type: string
        typeOfCharges:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policyCode:
          description: Deposit Policy Code
          maxLength: 20
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
      type: object
    policyAmountPercentType:
      description: Defines the percentage basis for calculating the fee amount or
        the amount.
      properties:
        basisType:
          $ref: '#/components/schemas/policyBasisTypeType'
        nights:
          description: The number of nights of the hotel stay that are used to calculate
            the fee amount.
          type: integer
        percent:
          description: The percentage used to calculate the amount.
          maximum: 100
          minimum: 0
          type: number
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    policyBasisTypeType:
      description: Full Amount.
      enum:
      - FlatAmount
      - Percentage
      - Nights
      - NightPercentage
      - FullAmount
      type: string
    policyDeadlineType:
      description: "Cancellation deadline, absolute or relative."
      properties:
        absoluteDeadline:
          description: Defines the absolute deadline. Either this or the offset attributes
            may be used.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        offsetFromArrival:
          description: The number of days before arrival that allows cancellation
            without penalties.
          type: integer
        offsetDropTime:
          description: Time on offset day the cancellation penalties applies.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        offsetFromBookingDate:
          description: The number of days after booking deposit must be paid.
          type: integer
      type: object
    receiptSummaryType:
      description: Contains Receipt Details.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        receiptAmount:
          $ref: '#/components/schemas/currencyAmountType'
        customNumbers:
          description: Custom Number.
          items:
            maxLength: 200
            minLength: 0
            type: string
          maxItems: 5
          type: array
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        receiptNo:
          description: Receipt Number.
          type: number
        receiptTypeDescription:
          description: Receipt Type Description.
          maxLength: 4000
          minLength: 0
          type: string
        transactionNo:
          description: Transaction Number.
          maxLength: 20
          minLength: 0
          type: string
        receiptType:
          $ref: '#/components/schemas/receiptType'
        taxInvoice:
          description: Tax Invoice Number of the Receipt.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    receiptType:
      description: This contains the receipt type.
      enum:
      - Payment
      - Deposit
      - Paidout
      - Transaction
      - CheckExchange
      - CurrencyExchangeCheck
      - CurrencyExchangeCash
      - DepositRequest
      - DepositRefundReceipt
      - Acknowledgement
      type: string
    projectedRevenueType:
      description: Information about projected catering and room revenue for the reservation.
      properties:
        projectedRoomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        projectedCateringRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        roomNights:
          description: Number of room nights for the reservation.
          type: integer
      type: object
    reservationPolicySummaryType:
      description: A collection of reservation deposit and cancellation policies.
      properties:
        cancellationPolicies:
          description: A list of reservation cancellation policies.
          items:
            $ref: '#/components/schemas/resCancellationPolicyType'
          maxItems: 4000
          type: array
        depositPolicies:
          description: A list of deposit policies attached with the reservation.
          items:
            $ref: '#/components/schemas/resDepositPolicyType'
          maxItems: 4000
          type: array
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        name:
          description: Name identifier for the reservation.
          type: string
      type: object
    resCancellationPoliciesType:
      description: A list of reservation cancellation policies.
      items:
        $ref: '#/components/schemas/resCancellationPolicyType'
      maxItems: 4000
      type: array
    resCancellationPolicyType:
      description: A cancellation policy attached with the reservation.
      properties:
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
        policy:
          $ref: '#/components/schemas/resCancelPenaltyType'
        percentageDue:
          description: The percentage amount due for reservation cancellation.
          maximum: 100
          minimum: 0
          type: number
        comments:
          description: Comments attached with the reservation cancellation.
          maxLength: 2000
          minLength: 0
          type: string
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    resCancelPenaltyType:
      description: The CancelPenalty class defines the cancellation policy of the
        hotel facility.
      properties:
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        penaltyDescription:
          description: Text description of the Penalty in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        offsetUnit:
          $ref: '#/components/schemas/offsetUnitType'
        formattedRule:
          description: Formatted Text Rule of the Cancellation Penalty.
          maxLength: 2000
          minLength: 0
          type: string
        policyCode:
          description: Policy Code.
          maxLength: 20
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
        nonRefundable:
          description: Indicates if the amount is refundable if booking is canceled.
          type: boolean
        effective:
          description: Indicator if Cancellation Penalty is currently applicable or
            not.
          type: boolean
      type: object
    offsetUnitType:
      description: Indicates deadline offset unit type.
      enum:
      - Year
      - Month
      - Day
      - Hour
      type: string
    resDepositPoliciesType:
      description: A list of deposit policies attached with the reservation.
      items:
        $ref: '#/components/schemas/resDepositPolicyType'
      maxItems: 4000
      type: array
    depositType:
      description: Enumeration Type of Deposit.
      enum:
      - Folios
      - Receipts
      - None
      type: string
    depositMaturityType:
      description: The deposit is transferred when the guest checks in.
      enum:
      - CheckIn
      - LastNightStay
      - LastDayAdvanceDeposit
      - None
      type: string
    depositFolioTransactionDetails:
      description: Response for the fetch transaction details request. Detail information
        regarding the folio transaction will be returned
      properties:
        transactions:
          description: List of Deposit Postings with details.
          items:
            $ref: '#/components/schemas/depositDetailPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositDetailPostingsType:
      description: List of Deposit Postings with details.
      items:
        $ref: '#/components/schemas/depositDetailPostingType'
      maxItems: 4000
      type: array
    depositDetailPostingType:
      description: Posting information of the transaction .
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/detailPostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        customCharge:
          description: Flag to identify a Custom Charge.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        depositPolicy:
          $ref: '#/components/schemas/resDepositPolicyType'
        comments:
          description: User defined comments for the deposit.
          maxLength: 2000
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        receiptSummaryInfo:
          $ref: '#/components/schemas/receiptSummaryType'
        folioNo:
          description: "The Folio number of this posting, if there was a Folio already\
            \ generated."
          type: number
        transferred:
          description: Indicates if the deposit was transferred either to a reservation
            or from a reservation.
          type: boolean
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        subPostings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        currencyExchangeInfo:
          $ref: '#/components/schemas/transactionCurrencyExchangeInfoType'
        miscellaneousInfo:
          $ref: '#/components/schemas/depositDetailPostingType_miscellaneousInfo'
        internalFolioWindowID:
          description: Internal Unique id for the Folio Window.
          type: string
      type: object
    depositFolioValidateCriteria:
      description: Request to validate a Deposit Folio for a reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/depositFolioValidateCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositFolioValidateCriteriaType:
      description: Criteria for posting a Deposit Folio.
      properties:
        hotelId:
          description: Property where the reservation exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        depositPolicyId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    depositedFolioValidate:
      description: Information regarding the Deposit Policy if a Deposit Folio is
        going to be created for this policy.
      properties:
        policyInfoList:
          items:
            $ref: '#/components/schemas/resDepositPolicyType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositPayment:
      description: Request to post a deposit payment to a reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/depositPaymentCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositPaymentCriteriaType:
      description: Criteria for posting a deposit payment to a reservation.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        postingAmount:
          $ref: '#/components/schemas/currencyAmountType'
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        comments:
          description: User Defined Comments. Used for Deposit Payment postings.
          maxLength: 2000
          minLength: 0
          type: string
        applyCCSurcharge:
          description: "Flag to indicate if Credit Card Surcharge has to be applied\
            \ to this payment, when the functionality for Credit Card Surcharge is\
            \ available."
          type: boolean
        manualPaymentTaxInfo:
          $ref: '#/components/schemas/paymentTaxType'
        creditablePaymentTaxes:
          description: Payment Tax record.
          items:
            $ref: '#/components/schemas/paymentTaxType'
          maxItems: 4000
          type: array
        terminalId:
          description: Applicable for chip and pin. The ID of the terminal where the
            chip and pin device is connected and where the payment is made.
          type: string
        overrideInsufficientCC:
          description: Flag to allow a rebate by Credit Card
          type: boolean
        changeDueAmount:
          $ref: '#/components/schemas/currencyAmountType'
        compRedemptions:
          description: Information regarding Complimentary Bucket Redemption object.
          items:
            $ref: '#/components/schemas/redemptionType'
          maxItems: 4000
          type: array
        overrideARCreditLimit:
          description: Flag to override account receivable credit limit
          type: boolean
        applyCurrencyTaxes:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        vATOffset:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        action:
          $ref: '#/components/schemas/postPaymentActionType'
        prepaidCardRedemptions:
          description: A prepaid redemption info object to be used for posting a payment.
          items:
            $ref: '#/components/schemas/prepaidCardRedemptionType'
          maxItems: 1000
          type: array
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guaranteeCode:
          description: New guarantee code associated with reservation.
          maxLength: 20
          minLength: 0
          type: string
        depositPolicyId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileId:
          $ref: '#/components/schemas/profileId'
        associatedTrxNo:
          description: Transaction number of the payment being deposited.
          type: number
        overrideInventoryCheck:
          description: Flag to indicate if the Inventory check has to be overridden
            when the guarantee code of the reservation is changed.
          type: boolean
        updateReservationPaymentMethod:
          description: "Flag to indicate if the payment method on the reservation,\
            \ for Window 1, is to be updated with the payment method used for this\
            \ deposit."
          type: boolean
        receiptType:
          $ref: '#/components/schemas/receiptType'
      type: object
    depositedPayment:
      description: Response for the post deposit payment request.
      properties:
        deposits:
          description: A List of Deposit Payments.
          items:
            $ref: '#/components/schemas/depositPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    financialPostings:
      description: Response for fetching the Posting Journal.
      properties:
        journalPostings:
          $ref: '#/components/schemas/financialPostingsType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalFolioCriteria:
      description: Request to generate an Initial/Zero invoice from Fiscal Terminals
        screen.
      properties:
        criteria:
          $ref: '#/components/schemas/fiscalFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalFolioCriteriaType:
      description: Criteria for calling fiscal folio service for the generation of
        invoices
      properties:
        hotelId:
          description: Property where the folio is being generated.
          maxLength: 20
          minLength: 0
          type: string
        folioCommand:
          $ref: '#/components/schemas/folioCommandType'
        effectiveDate:
          description: Effective date to run fiscal command.
          format: date
          type: string
        folios:
          $ref: '#/components/schemas/fiscalInvoiceSummaryType'
      type: object
    folioCommandType:
      enum:
      - Invoice
      - Info
      - ResendInvoice
      - Cancellation
      - EodReset
      - XReport
      - SendFiscalInvoice
      - ZeroInvoice
      - EndOfPeriod
      - ZeroInvoiceWithReceipt
      - FiscalUpdate
      - CheckOut
      type: string
    fiscalInvoiceSummaryType:
      description: Contains information required for the generation of fiscal invoice.
      properties:
        fiscalTerminalId:
          maxLength: 50
          minLength: 0
          type: string
        transactionType:
          maxLength: 1
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
        queueName:
          description: Folio Queue name
          maxLength: 2000
          minLength: 0
          type: string
        generateFiscalFolio:
          description: Fiscal folio flag to call fiscal Information folio web service.
          type: boolean
      type: object
    fiscalCommandsResponseInfo:
      description: Response after generating a commands from Fiscal Terminals screen.
      properties:
        fiscalResponseInfo:
          $ref: '#/components/schemas/fiscalResponseInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalResponseInfoType:
      description: Invoice information returned from the fiscal service.
      properties:
        invoiceNo:
          description: Fiscal terminal invoice number returned from fiscal service.
          type: number
        fiscalResponseId:
          description: Uniquely identifies data sent from FLIP.
          type: number
      type: object
    fiscalInfoFolioCriteria:
      description: Request to generate fiscal Information folio.
      properties:
        criteria:
          $ref: '#/components/schemas/fiscalInfoFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalInfoFolioCriteriaType:
      description: Criteria for calling fiscal Info type folio service
      properties:
        hotelId:
          description: Property where the Folio History exists.
          maxLength: 20
          minLength: 0
          type: string
        folioCommand:
          $ref: '#/components/schemas/folioCommandType'
        folios:
          $ref: '#/components/schemas/folioSummaryType'
      type: object
    folioSummaryType:
      description: Contains Folio Details including payee information and the reservation
        which it's attached to.
      properties:
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        folioAmount:
          $ref: '#/components/schemas/currencyAmountType'
        allowConvertFolioYn:
          description: Flag to check Folio Conversion Allowed.
          type: boolean
        accountReceivablesFolio:
          description: Flag to check Folio generated from Acoount Receivables.
          type: boolean
        officialBIRReceiptExists:
          description: Flag to indicate if an Official Receipt is generated for the
            folio window. Applicable only in the Philippines.
          type: boolean
        paymentTrxNo:
          description: Bill Payment transaction Number.
          type: number
        reservationInfo:
          $ref: '#/components/schemas/validatedCreditBill_folio_reservationInfo'
        postItNo:
          description: Number for Post-It transactions.
          type: number
        associatedBills:
          description: Bill Number.
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        accountCode:
          description: Account Code.
          type: number
        payment:
          $ref: '#/components/schemas/summaryPostingType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        fiscalInvoicingCurrencyInfo:
          $ref: '#/components/schemas/exchangeRateInfoType'
        anonymizedFolio:
          description: Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.
          type: boolean
        customNumbers:
          description: Custom Number.
          items:
            maxLength: 200
            minLength: 0
            type: string
          maxItems: 5
          type: array
        operaFiscalFolioStatus:
          description: Opera Fiscal Folio Status for the Folio.
          type: string
        partnerFiscalFolioStatus:
          description: Stores the fiscal folio status for the partner system.
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        revisionNo:
          description: Folio Revision number.
          type: number
        folioWindowNo:
          type: integer
        fiscalFolioNo:
          description: Bill Number returned by the Fiscal Printer.
          maxLength: 40
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
        queueName:
          description: Folio Queue name.
          maxLength: 2000
          minLength: 0
          type: string
        generateFiscalFolio:
          description: Fiscal folio flag to call fiscal Information folio web service.
          type: boolean
      type: object
    fiscalInformationFolio:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        fiscalResponseList:
          description: Provides information which is used for fiscal response processing.
          items:
            $ref: '#/components/schemas/fiscalResponseType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalCallStatus:
      description: Check if it will call fiscal or not.
      properties:
        isValid:
          description: Flag which contains if its valid or not.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    convertFolioCriteria:
      description: Request to convert folio from a Non Fiscal Folio type to a Fiscal
        Folio Type. Functionality is used in Italy and is only available when the
        country mode is set to Italy.
      properties:
        criteria:
          $ref: '#/components/schemas/convertFolioType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    convertFolioType:
      description: Criteria for Converting Folio.
      properties:
        hotelId:
          description: Hotel code where this folio was generated at.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio number of the Folio which is going to be converted.
          type: number
        folioTypeName:
          description: "Folio Type of the folio(Example: Ricevuta, Fattura)."
          maxLength: 100
          minLength: 0
          type: string
        folioDate:
          description: Date of folio generation.
          format: date
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    convertFolioDetails:
      description: Response to the request to Convert Folio. Includes the new converted
        folio information.
      properties:
        folio:
          $ref: '#/components/schemas/folioType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioHistoryResponse:
      description: Response for the fetch Folio History.
      properties:
        folioHistory:
          description: Folio History details.
          items:
            $ref: '#/components/schemas/folioSummaryType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    foliosType:
      description: Folio History details.
      items:
        $ref: '#/components/schemas/folioSummaryType'
      maxItems: 4000
      type: array
    folioPrinters:
      description: "Response to the request to fetch the Folio Printers applicable\
        \ for a Folio, based on the"
      properties:
        printers:
          $ref: '#/components/schemas/folioPrintersType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioPrintersType:
      description: List of Folio Printers.
      properties:
        folioTypeName:
          description: Name of the Folio Type.
          maxLength: 200
          minLength: 0
          type: string
        printer:
          description: Folio Printer Information.
          items:
            $ref: '#/components/schemas/folioPrinterType'
          maxItems: 4000
          type: array
      type: object
    folioPrinterType:
      description: Information about a Printer which can be used to print a Folio.
      properties:
        printerName:
          description: Description of the Printer
          maxLength: 2000
          minLength: 0
          type: string
        device:
          description: The Printer Device name.
          maxLength: 200
          minLength: 0
          type: string
        folioType:
          description: The Folio Type for which this printer is being used.
          maxLength: 2000
          minLength: 0
          type: string
        folioQueueName:
          description: Folio Queue name for which this printer is being used.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    folioTypeNameInfo:
      description: Response for the fetch Folio Type Information.
      properties:
        details:
          $ref: '#/components/schemas/folioTypeNameInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypeNameInfoType:
      description: Details of a Folio Type configuration.
      properties:
        hotelId:
          description: Property where the Folio Type exists.
          maxLength: 20
          minLength: 0
          type: string
        folioTypeName:
          description: The Folio Type.
          maxLength: 100
          minLength: 0
          type: string
        folioReportName:
          description: The report name which should be used as the Folio for printing.
          maxLength: 100
          minLength: 0
          type: string
        folioReportModuleId:
          $ref: '#/components/schemas/uniqueID_Type'
        folioLanguageCode:
          description: The Language Code for which the folio is effective.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    folioTypesInfo:
      description: Information regarding the Folio Types.
      properties:
        folioInfo:
          items:
            $ref: '#/components/schemas/folioTypesInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTypesInfoType:
      description: Folio Types details.
      properties:
        folioType:
          description: Folio Type.
          maxLength: 20
          minLength: 0
          type: string
        fiscal:
          description: Fiscal Folio indicator.
          type: boolean
        compress:
          description: Indicates folio to be use for compress bills.
          type: boolean
        credit:
          description: Indicates folio type can be used for Credit bills.
          type: boolean
        sendFiscalFolio:
          description: Adding this flag at folio type level would decide to send fiscal
            folio (generate payload) or not.
          type: boolean
      type: object
    processFiscalRetry:
      description: The request object to process fiscal retry functionality.
      properties:
        criteria:
          $ref: '#/components/schemas/fiscalRetryType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fiscalRetryType:
      description: Generate Fiscal Folio Retry Criteria type to be used for fiscal
        folio generation
      properties:
        hotelId:
          description: Hotel where the transaction belongs.
          maxLength: 20
          minLength: 0
          type: string
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        voidFolioModes:
          $ref: '#/components/schemas/voidFolioModes'
        fiscalFolioInstruction:
          $ref: '#/components/schemas/fiscalFolioInstruction'
      type: object
    voidFolioModes:
      description: Different modes to perform void folio.
      enum:
      - Invoice
      - InfoFolio
      - CreditFolio
      - DepositFolio
      - PostIt
      - PasserBy
      - VoidFolio
      - SupplementalFolio
      - SendFiscalFolio
      - ResendFolio
      type: string
    processFiscalRetryStatus:
      description: The response object to send back the fiscal service response to
        opera.
      properties:
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        isLastRetry:
          description: Indicating if it is last trial for fiscal printing.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    passerBySalesCriteria:
      description: "Request to post a set of charges, payments and generate a bill\
        \ for a PasserBy or for the Post-It functionality . A PasserBy is someone\
        \ who is not staying at the Property. A PasserBy transaction requires a Profile\
        \ in Opera for whom the the folio is being created."
      properties:
        criteria:
          $ref: '#/components/schemas/passerByCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    passerByCriteriaType:
      description: Criteria type for posting charges.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        payments:
          description: The payment information to be posted.
          items:
            $ref: '#/components/schemas/paymentCriteriaType'
          maxItems: 4000
          type: array
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        folioNameValue:
          description: Custom Folio Name Value Informatoin to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Transaction service type which the Folio is being associated.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    passerBySale:
      description: Details of the folio created.
      properties:
        folioWindowDetails:
          items:
            $ref: '#/components/schemas/folioWindowType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    payeeTaxNumber:
      description: Request to validate and change Payee Tax Number.
      properties:
        criteria:
          $ref: '#/components/schemas/changePayeeTaxNumberCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changePayeeTaxNumberCriteriaType:
      description: Criteria to validate and change payee tax number.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        taxNumber:
          description: Payee Tax Number.
          maxLength: 40
          minLength: 0
          type: string
        ignoreWarnings:
          description: Flag to ignore warnings while updating a payee folio tax number.
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    attachPolicyApplyCriteria:
      description: Request to attach an existing Deposit Policy on a reservation towards
        an existing deposit payment on the same reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/policyApplyCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    policyApplyCriteriaType:
      description: Criteria for Attaching or Detaching a Deposit Policy towards a
        Deposit payment.
      properties:
        hotelId:
          description: Property where the deposit exists.
          maxLength: 20
          minLength: 0
          type: string
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        transactionNo:
          description: The transaction number of the payment to which the Deposit
            policy is being attached or detached.
          type: number
      type: object
    postingSummaryList:
      description: Response object to fetch daily summary charges from Opera which
        are posted in Opera by external system.
      properties:
        postingSummaries:
          description: Summary of the postings by external system.
          items:
            $ref: '#/components/schemas/postingSummaryType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postingSummaryListType:
      description: Summary of the postings by external system.
      items:
        $ref: '#/components/schemas/postingSummaryType'
      maxItems: 4000
      type: array
    postingSummaryType:
      description: summary of the postings by external system.
      properties:
        totalPostings:
          description: Total count of postings.
          type: integer
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        totalCheckCount:
          description: Total count of checks posted.
          type: integer
      type: object
    prepaidCardCriteria:
      description: Request type for prepaid card creation/reload/redeem/removal process
      properties:
        criteria:
          $ref: '#/components/schemas/prepaidCardCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardCriteriaType:
      description: Holds fixed charge information.
      properties:
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        name:
          description: "Family name, last name or Company Name."
          maxLength: 80
          minLength: 0
          type: string
        firstName:
          description: "Given name, first name or names."
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        cardNo:
          description: Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        pinCode:
          description: Prepaid card pin code.
          maxLength: 10
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        cardDetails:
          $ref: '#/components/schemas/prepaidCardDetailsType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        giftCard:
          description: Indicates a gift card type.
          type: boolean
        postChargeToRoom:
          type: boolean
        saleCriteria:
          $ref: '#/components/schemas/saleCriteriaType'
        vendorInterfaceID:
          type: number
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    prepaidCardDetailsType:
      description: Prepaid Card Details.
      properties:
        initialLoadDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        activateDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        initialCreditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        creditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        debitTotal:
          $ref: '#/components/schemas/currencyAmountType'
        reservedTotal:
          $ref: '#/components/schemas/currencyAmountType'
        balanceTotal:
          $ref: '#/components/schemas/currencyAmountType'
        validUntilDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        expiredDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        transactions:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardTransactionType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardTransactionType:
      description: Prepaid Card transaction.
      properties:
        transactionType:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
        transactionDate:
          description: Transaction number of the Prepaid card transaction.
          format: date
          type: string
        transactionNo:
          description: Transaction number of the Prepaid card transaction.
          type: number
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    prepaidCardTrxTypeType:
      description: Reload transaction.
      enum:
      - Activate
      - Cancel
      - Cashout
      - Inquiry
      - Issue
      - Redeem
      - Reload
      type: string
    activatePrepaidCard:
      description: Request type for activate prepaid card.
      properties:
        criteria:
          $ref: '#/components/schemas/activatePrepaidCard_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    activatePrepaidCardStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cancelPrepaidCardTransaction:
      description: Request type for cancel prepaid card transaction.
      properties:
        criteria:
          $ref: '#/components/schemas/cancelPrepaidCardTransaction_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stringLength100:
      description: "Used for Character Strings, length 0 to 100."
      maxLength: 100
      minLength: 0
      type: string
    cancelPrepaidCardTransactionStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashOutPrepaidCard:
      description: Request type for cashout prepaid card.
      properties:
        criteria:
          $ref: '#/components/schemas/activatePrepaidCard_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cashOutPrepaidCardStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reloadPrepaidCard:
      description: Request type for reload prepaid card.
      properties:
        criteria:
          $ref: '#/components/schemas/activatePrepaidCard_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reloadPrepaidCardStatus:
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ccAuthorizationCriteria:
      description: Request for a credit card authorization. An authorization request
        will be sent to the Credit Card Vendor as part of this request.
      properties:
        criteria:
          $ref: '#/components/schemas/cCAuthorizationCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCAuthorizationCriteriaType:
      description: Contains the credit card criteria for authorization.
      properties:
        hotelId:
          description: Identifies the hotel code to authorize a credit card amount
            for.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileId:
          $ref: '#/components/schemas/profileId'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        folioView:
          description: The folio window where this authorization is applied.
          type: integer
        payment:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        terminalId:
          description: Applicable for chip and pin. The ID of the terminal where the
            chip and pin device is connected.
          type: string
        incidentalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        evaluateApprovalAmount:
          description: Flag to indicate if the approval amount should be calculated
            before authorization. If this is true and if the amount is 0 the approval
            amount will be calculated based on the rules.
          type: boolean
        sourceOfAuthorization:
          $ref: '#/components/schemas/cardAuthorizationTransactionType'
        updateReservation:
          description: Update the card details on the reservations for Chip and Pin
            Authorizations.
          type: boolean
        ccRequestId:
          description: Session Id registered in the WebSocket component for asynchronous
            Credit Card handling.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    authorizationInfo:
      description: Response to the credit card authorization request.
      properties:
        authInfo:
          $ref: '#/components/schemas/authorizationInfoType'
        payment:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ccAuthorizationInstructions:
      description: "Response to the fetch authorization instructions. Based on the\
        \ criteria requested, the response can contain information required to send\
        \ a credit card authorization to the Vendor."
      properties:
        details:
          $ref: '#/components/schemas/cCAuthorizationInstructionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCAuthorizationInstructionType:
      description: Contains the details to use for a credit card authorization.
      properties:
        currentApprovalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        totalApprovalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        incidentalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationSetup:
          $ref: '#/components/schemas/cCAuthorizationInstructionType_authorizationSetup'
        reservationDetail:
          $ref: '#/components/schemas/reservationInfoType'
        paymentMethodInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        sequenceNumber:
          description: Unique sequence for this authorization.
          maxLength: 200
          minLength: 0
          type: string
        transactionType:
          description: Transaction type of the authorization(INIT or SUPP).
          maxLength: 40
          minLength: 0
          type: string
        originalAuthSequence:
          description: Unique Authorization Sequence for the authorization and settlement.
          type: integer
        usageType:
          description: Usage type used.
          maxLength: 20
          minLength: 0
          type: string
        vendorTranId:
          description: Vendor transaction id for the authorization.
          maxLength: 20
          minLength: 0
          type: string
        initialAuthorizationRequired:
          description: Flag to indicate if initial authorization required.
          type: boolean
        businessDate:
          description: The current date of the Property.
          format: date
          type: string
      type: object
    receiptHistoryResponse:
      description: Response for the fetch Receipt History.
      properties:
        receiptHistory:
          description: Receipt History details.
          items:
            $ref: '#/components/schemas/receiptSummaryType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    receiptsType:
      description: Receipt History details.
      items:
        $ref: '#/components/schemas/receiptSummaryType'
      maxItems: 4000
      type: array
    postRateCodeCriteria:
      description: "Request to check if a Rate Code can be posted to the room manually.\
        \ This will check if the Rate Code is valid, if the Products(Packages) which\
        \ are defined as part of the Rate Code can be posted or reversed."
      properties:
        criteria:
          $ref: '#/components/schemas/postRateCodeCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postRateCodeCriteriaType:
      description: Criteria type for posting a Rate Code amount to a guest folio.
      properties:
        hotelId:
          description: Hotel context for the Reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        rateCode:
          description: The Rate Code which is to be posted on the Guest Folio.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Posting quantity.
          type: integer
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        nights:
          description: Number of nights to post the Rate Code for. Used for Comp Accounting.
          type: integer
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        adjustmentCode:
          description: Adjustment code to be used for the manual posting of rate code.
          maxLength: 20
          minLength: 0
          type: string
        revenueDate:
          description: Revenue Date or the business date of the posting.
          format: date
          type: string
        parentTrxNo:
          description: The linked transaction number for this Posting of Rate Code.
          type: number
        postProducts:
          description: "Flag to indicate if Products(Packages) which are part of the\
            \ Rate Code should be posted as part of this operation. If products are\
            \ not required, the entire amount will be posted towards the room element\
            \ of the Rate Code."
          type: boolean
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    guestCountsType:
      description: A collection of GuestCount by age group.
      properties:
        childAges:
          description: Age of a child in years.
          items:
            $ref: '#/components/schemas/childAgeType'
          maxItems: 4000
          type: array
        childBuckets:
          $ref: '#/components/schemas/childBucketsType'
        adults:
          description: Defines the number of Adults.
          type: integer
        children:
          description: Defines the number of Children.
          type: integer
      type: object
    childAgesType:
      description: Age of a child in years.
      items:
        $ref: '#/components/schemas/childAgeType'
      maxItems: 4000
      type: array
    childAgeType:
      description: Defines Child's Age.
      properties:
        age:
          description: Age of a child in years.
          type: integer
      type: object
    childBucketsType:
      description: Defines children counts with Age Qualifying Group(Child Bucket)
        classification.
      properties:
        bucket1Count:
          description: Number of children classified under the first Age Qualifying
            Group(Child Bucket#1).
          type: integer
        bucket2Count:
          description: Number of children classified under the second Age Qualifying
            Group(Child Bucket#2).
          type: integer
        bucket3Count:
          description: Number of children classified under the third Age Qualifying
            Group(Child Bucket#3).
          type: integer
        bucket4Count:
          description: Number of children classified under the fourth Age Qualifying
            Group(Child Bucket#4).
          type: integer
        bucket5Count:
          description: Number of children classified under the fifth Age Qualifying
            Group(Child Bucket#5).
          type: integer
      type: object
    postedRateCode:
      description: Response for the operation that posts a Rate Code amount on the
        reservation.
      properties:
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkedRateCode:
      description: Response for the request to check if a Rate Code can be posted
        to a reservation .
      properties:
        checks:
          $ref: '#/components/schemas/postRateCodeCheckType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postRateCodeCheckType:
      description: The response type for Checks done before Posting a Rate Code amount
        to a reservation.
      properties:
        rateCodeHasProducts:
          description: Indicates that the Rate Code has Products(Packages) for the
            user to determine if they should be posted.
          type: boolean
        canPostProducts:
          description: Indicates that the Products(Packages) which are included in
            the Rate Code cannot be posted as part of this transaction. This could
            be the case where the reservation is an Open Folio or has Post Stay.
          type: boolean
        canReverseProducts:
          description: Indicates that the Products(Packages) which are included in
            the Rate Code cannot be reversed as part of this transaction. This could
            be the case when the reservation has consumed the allowance already and
            is now trying to reverse the Rate Code by using a negative quantity.
          type: boolean
      type: object
    billingChargesInBatchCriteria:
      description: Operation to post billing charge to list of reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/postBillingChargesInBatchCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postBillingChargesInBatchCriteriaType:
      description: Criteria type for posting charges.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        reservations:
          description: Unique identifier for a reservation.
          items:
            $ref: '#/components/schemas/reservationId'
          maxItems: 4000
          type: array
      type: object
    postedBillingChargesInBatch:
      description: Operation response to post billing charge with list of reservations.
      properties:
        reservationBatchChargeInfoList:
          description: Information regarding charges in batch result for each reservation.
          items:
            $ref: '#/components/schemas/reservationChargesInBatchInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationChargesInBatchInfoType:
      description: Result of charges in batch for each reservation.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        arrivalDate:
          description: Arrival date of the reservation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        departureDate:
          description: Departure date of the reservation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        guestName:
          description: Guest name associated to the reservation.
          maxLength: 200
          minLength: 0
          type: string
        roomId:
          description: Room number associated to the reservation.
          maxLength: 20
          minLength: 0
          type: string
        postingAllowed:
          description: Indicator that tells whether posting is allowed for the reservation
          type: boolean
        success:
          description: Returning an empty element of this type indicates the successful
            processing of an message. This is used in conjunction with the Warning
            Type to report any warnings or business errors.
          type: object
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        errors:
          description: An error that occurred during the processing of a message.
          items:
            $ref: '#/components/schemas/errorType'
          maxItems: 99
          type: array
      type: object
    successType:
      description: Returning an empty element of this type indicates the successful
        processing of an message. This is used in conjunction with the Warning Type
        to report any warnings or business errors.
      type: object
    errorsType:
      description: An error that occurred during the processing of a message.
      items:
        $ref: '#/components/schemas/errorType'
      maxItems: 99
      type: array
    ccBatchSettlements:
      description: Response for credit card settlements.
      properties:
        batchSettlements:
          description: List of Settlement transaction details for credit card transaction.
          items:
            $ref: '#/components/schemas/cCBatchSettlementType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCBatchSettlementsType:
      description: List of Settlement transaction details for credit card transaction.
      items:
        $ref: '#/components/schemas/cCBatchSettlementType'
      maxItems: 4000
      type: array
    additionalTaxesDetails:
      description: Response object containing additional tax information.
      properties:
        taxAmountInfo:
          $ref: '#/components/schemas/taxAmountInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    taxAmountInfoType:
      description: Tax amount to be adjusted for the guest
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    advancePaymentBalance:
      description: Response for the advance payment balance.
      properties:
        paymentBalance:
          $ref: '#/components/schemas/currencyAmountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    advanceRoomCharges:
      description: "Request to post the Room Charges for a reservation in advance.\
        \ This request posts the Room Charges for a reservation for tonight or for\
        \ many nights starting from the last posted night. This can also be used to\
        \ verify if the reservation has already been charged for the full stay. Setting\
        \ the Verify flag will return details regarding the last Room Charge posted\
        \ date and if there are any available dates for which the room charges can\
        \ be posted in advance. Room Charges cannot be posted for dates prior to the\
        \ business date of the resort. To make the actual posting, the verification\
        \ flag should be false."
      properties:
        criteria:
          $ref: '#/components/schemas/advanceRoomChargesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    advanceRoomChargesCriteriaType:
      description: Type to set the criteria for generation of advance folios. This
        will post the room and tax transactions for the nights requested.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        postForEntireStay:
          description: Indicates if the posting of room charges have to be done for
            the entire stay.
          type: boolean
        endDateToCharge:
          description: Indicates the last date until which the Advance Room Charges
            have to be posted.
          format: date
          type: string
        verifyOnly:
          description: "Flag to indicate if only a verification is required. This\
            \ checks if advance bills have been generated for this reservation and\
            \ returns the last date in the response. Setting this flag to true, will\
            \ return the information for the below elements in the response: AvailablePostingDates,\
            \ GeneratedForEntireStay, LastRoomAndTaxPostedDate and the Reservation\
            \ Information. No posting will be done. In order for the actual posting\
            \ to occur this flag should be false."
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    advanceRoomChargesReservationInfo:
      description: "Response for the generate advance folio request. Post Advance\
        \ Room Charges Request can return the below error codes : FOF00065 - Reservation\
        \ ID or Resort was not supplied. FOF00147 - Reservation is currently not In-House.\
        \ FOF00148 - Date range requested is not valid. FOF00149 - Advance Room Charges\
        \ Posting was not completed successfully as there was an Error during posting.\
        \ FOF00150 - Room Charges have already been posted for the requested dates.\
        \ FOF00151 - Advance Room Charges could not be completed {the error message\
        \ if any}."
      properties:
        reservationInfo:
          $ref: '#/components/schemas/advanceRoomChargesInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    advanceRoomChargesInfoType:
      properties:
        availablePostingDates:
          $ref: '#/components/schemas/timeSpanType'
        reservation:
          $ref: '#/components/schemas/reservationInfoType'
        generatedForEntireStay:
          description: Indicates if the advance folio has been generated for the entire
            stay.
          type: boolean
        lastRoomAndTaxPostedDate:
          description: Indicates the date of the stay until which the advance bill
            has been generated .
          format: date
          type: string
      type: object
    alertNotices:
      description: "Response with the fetched alerts, includes global alerts."
      properties:
        alerts:
          description: List of alerts.
          items:
            $ref: '#/components/schemas/alertType'
          maxItems: 4000
          type: array
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    alertsType:
      description: List of alerts.
      items:
        $ref: '#/components/schemas/alertType'
      maxItems: 4000
      type: array
    alertType:
      properties:
        code:
          description: Code identifying the type of alert.
          maxLength: 20
          minLength: 0
          type: string
        global:
          description: Indicate whether the alert is a global that is automatically
            and dynamically attached to all reservations that meet the alert criteria.
          type: boolean
        area:
          $ref: '#/components/schemas/alertAreaType'
        description:
          description: The alert message.
          type: string
        screenNotification:
          description: Notify by showing the alert on the screen
          type: boolean
        printerNotification:
          description: Notify by sending the message to the printer.
          type: boolean
        printerName:
          description: Printer used to print the alert notification.
          type: string
        reportId:
          $ref: '#/components/schemas/uniqueID_Type'
        reportName:
          description: Report name of the report type.
          type: string
        reportDescription:
          description: Report description. Mainly used for as a parameter for printing
            the alerts.
          maxLength: 1000
          minLength: 0
          type: string
        guestInfo:
          $ref: '#/components/schemas/alertGuestInfoType'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        welcomeOffer:
          $ref: '#/components/schemas/welcomeOfferType'
        stopCheckInCheckOut:
          description: Indicates the Reservation Stop Check In/Check Out Global Alert.
          type: boolean
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
            Refer to OpenTravel Code List Unique ID Type (UIT).
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    alertAreaType:
      enum:
      - CheckIn
      - CheckOut
      - Reservation
      - Billing
      - InHouse
      type: string
    alertGuestInfoType:
      properties:
        guestName:
          description: Guest Name.
          maxLength: 200
          minLength: 0
          type: string
        membership:
          $ref: '#/components/schemas/membershipType'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
        lastHotelCode:
          description: Hotel code of the last stay location of the guest.
          maxLength: 20
          minLength: 0
          type: string
        lastStayDate:
          description: Last stay date at the property.
          format: date
          type: string
        totalStay:
          description: Holds total number of days that the guest have stayed in the
            property.
          type: integer
        comments:
          description: Additional alert information regarding the membership of the
            guest.
          type: string
        preference:
          description: Additional alert information regarding the guest.
          type: string
        preference2:
          description: Additional mandatory alert information regarding the guest
            preferences.
          type: string
        guestPreferredLanguage:
          maxLength: 40
          minLength: 0
          type: string
        totalBrandStay:
          description: Holds total number of days that the guest have stayed in the
            properties for the same brand.
          type: integer
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
      type: object
    membershipType:
      description: Detailed information of the memberships.
      properties:
        comment:
          $ref: '#/components/schemas/paragraphType'
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        benefits:
          description: Basic information about membership benefit.
          items:
            $ref: '#/components/schemas/benefitType'
          maxItems: 4000
          type: array
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipType:
          description: Type of membership.
          type: string
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        image:
          description: An image for this paragraph.
          type: string
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
      type: object
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    languageType:
      maxLength: 40
      minLength: 0
      type: string
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          description: Used to hold collection of user defined fields of Character/String
            Type.
          items:
            $ref: '#/components/schemas/characterUDFType'
          maxItems: 4000
          type: array
        numericUDFs:
          description: Used to hold collection of user defined fields of Numeric Type.
          items:
            $ref: '#/components/schemas/numericUDFType'
          maxItems: 4000
          type: array
        dateUDFs:
          description: Used to hold collection of user defined fields of Date Type.
          items:
            $ref: '#/components/schemas/dateUDFType'
          maxItems: 4000
          type: array
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    welcomeOfferType:
      properties:
        status:
          description: Determines the status of the welcome offer.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/welcomeOfferOptionsType'
      type: object
    welcomeOfferOptionsType:
      description: None of the Welcome Offer option is selected.
      enum:
      - BonusPoints
      - Ecoupons
      - Items
      - PostIt
      - NotSelected
      type: string
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        image:
          description: An image for this paragraph.
          type: string
        url:
          description: A URL for this paragraph.
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    authorizationHistory:
      description: "The result element containing a history list of credit card authorizations\
        \ for a particular reservation, filtered by the requested criteria."
      properties:
        folioHistory:
          description: The collection of credit card history records.
          items:
            $ref: '#/components/schemas/authorizationHistoryType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    authorizationHistoryType:
      description: Information on a single credit card authorization transaction.
      properties:
        businessDate:
          description: The corresponding business date for this record.
          format: date
          type: string
        transactionType:
          $ref: '#/components/schemas/cardAuthorizationTransactionType'
        approvalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        cardPaymentInformation:
          $ref: '#/components/schemas/authorizationHistoryType_cardPaymentInformation'
        status:
          $ref: '#/components/schemas/authorizationHistoryType_status'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: History type can only be either Settlement or Authorization
            or Payment.
          enum:
          - Settlement
          - Authorization
          - Payment
          type: string
      type: object
    billingChargesStatus:
      description: Response when checking or inquiring the available options for a
        set of billing charges.
      properties:
        options:
          description: TAvailable options for this consumable
          items:
            $ref: '#/components/schemas/checkPostBillingChargesOptionsType_inner'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkPostBillingChargesOptionsType:
      description: TAvailable options for this consumable
      items:
        $ref: '#/components/schemas/checkPostBillingChargesOptionsType_inner'
      maxItems: 4000
      type: array
    personNameType:
      description: This provides name information for a person.
      properties:
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        salutation:
          description: Salutation of the profile
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        externalSystem:
          description: "When name type is external, indicates the external system\
            \ the name belongs to."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    billingCharges:
      description: Request to post a charge on a reservation's folio.
      properties:
        criteria:
          $ref: '#/components/schemas/billingChargesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    billingChargesCriteriaType:
      description: Criteria type for posting charges.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        reservationId:
          $ref: '#/components/schemas/reservationId'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        postIt:
          description: Flag to indicate it is part of a PostIt Sale.
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        welcomeOfferPosting:
          description: Flag to indicate that current posting is a Welcome Offer Posting.
          type: boolean
      type: object
    billingChargesDetails:
      description: Response notifying if the posting of a charge to a reservation
        was successful.
      properties:
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    billingCheckChargesCriteria:
      description: Request object for PostBillingCheckCharges operation.
      properties:
        check:
          $ref: '#/components/schemas/postBillingCheckChargesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postBillingCheckChargesCriteriaType:
      description: Details of the check with line item charges to post to a guest
        folio.
      properties:
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        checkNumber:
          description: Indicates the check number.
          maxLength: 200
          minLength: 0
          type: string
        revenueDate:
          description: The date against which charges are posted.
          format: date
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        items:
          description: Line items of the check.
          items:
            $ref: '#/components/schemas/postBillingCheckChargesItemCriteriaType'
          maxItems: 4000
          type: array
        checkId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
      type: object
    postBillingCheckChargesItemsCriteriaType:
      description: Line items of the check.
      items:
        $ref: '#/components/schemas/postBillingCheckChargesItemCriteriaType'
      maxItems: 4000
      type: array
    postBillingCheckChargesItemCriteriaType:
      description: Line item of check to post.
      properties:
        transactionCode:
          description: Transaction code to use for the posting.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postingRemark:
          description: Text describing any applicable detail of the posting.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservation:
      description: "Checkout request can be used to verify a reservation for checkout\
        \ and do an actual checkout. In case the verificationOnly attribute is sent\
        \ false, the operation will perform an actual checkout. In case the verificationOnly\
        \ attribute is sent true, the operation goes through the reservation in question\
        \ and verifies if it's Ok to checkout, otherwise the verification status element\
        \ will provide you the verification code. The verification codes are described\
        \ in the documentation of verificationOnly attribute."
      properties:
        reservation:
          $ref: '#/components/schemas/checkoutReservationType'
        verificationOnly:
          description: "VerificationOnly \"true\" validates the hotel code and reservation\
            \ id supplied in the request. VerificationOnly \"false\" validates and\
            \ then check-out the guest using the request details. Following codes\
            \ might be returned during the verification: FOF00065 - The hotel code\
            \ and/or reservation id is missing. FOF00066 - Reservation can't be found\
            \ with the supplied hotel code and reservation id. FOF00107 - The guest's\
            \ departure is not scheduled for today. Check-out not possible. FOF00109\
            \ - The guest's reservation is not in a valid status for check-out. FOF00108\
            \ - The guest has a balance. Check-out not possible."
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reinstateCheckedOutReservation:
      description: "Request to reinstate checkout reservation in order to post additional\
        \ transactions, etc."
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        notifyInterfaces:
          description: Indicates whether interfaces should be notified.
          type: boolean
        overrideFlag:
          description: Indicate whether user wants to reinstate even if some other
            guest already checked in into same room.
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoSettleCompFolios:
      description: Request to auto settle comp folios. OPERA will reference the 'Default
        Comp Payment Method' setting to settle the folio if no authorizer AR account
        is associated with the folio.
      properties:
        criteria:
          $ref: '#/components/schemas/autoSettleCompFoliosCriteriaType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoSettleCompFoliosCriteriaType:
      description: Criteria to auto settle comp folios of a reservation.
      properties:
        hotelId:
          description: Hotel code of the folios to be auto settled.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        eventType:
          $ref: '#/components/schemas/cashieringEventType'
        cashierId:
          description: Numeric ID of the cashier.
          type: number
      type: object
    autoSettleCompFoliosStatus:
      description: Response for auto settle comp folios. This includes collection
        of auto settled comp folios.
      properties:
        folios:
          description: Information about comp folio that was auto settled.
          items:
            $ref: '#/components/schemas/autoSettleCompFolioType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    autoSettleCompFoliosType:
      description: Information about comp folio that was auto settled.
      items:
        $ref: '#/components/schemas/autoSettleCompFolioType'
      maxItems: 4000
      type: array
    autoSettleCompFolioType:
      description: Information about comp folio that was auto settled.
      properties:
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        folioView:
          description: Comp folio window that was attempted to be auto settled.
          type: integer
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
      type: object
    postCompRedemptions:
      description: Request type of complimentary bucket redemptions posting.
      properties:
        criteria:
          $ref: '#/components/schemas/postCompRedemptions_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reverseCompRedemptions:
      description: Request type of complimentary bucket redemptions reversal.
      properties:
        criteria:
          $ref: '#/components/schemas/reverseCompRedemptions_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    deferredTaxesProcess:
      description: Request for submitting post deferred taxes for a reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/deferredTaxesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    deferredTaxesCriteriaType:
      description: Contains criteria to post the deferred taxes for the given reservation.
      properties:
        hotelId:
          description: Property context of the reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        refreshAlways:
          description: Configuring this flag to be TRUE will make the postDeferredTax
            job to be submitted always.
          type: boolean
      type: object
    deferredTaxesProcessDetails:
      description: Response of submitting post deferred taxes for a reservation.
      properties:
        processId:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationDepositCriteria:
      description: Request object to process reservation deposit.
      properties:
        criteria:
          $ref: '#/components/schemas/processReservationDepositCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    processReservationDepositCriteriaType:
      description: Criteria to process reservation deposit.
      properties:
        hotelId:
          description: Hotel code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        depositProcessType:
          $ref: '#/components/schemas/depositProcessType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: The Percentage would be transferred to the Guest Ledger of
            the Psuedo Posting Room if the DepositProcessingType = Keep/Return otherwise
            it will be transferred to the Guest Ledger of the current reservation.
          maximum: 100
          minimum: 0
          type: number
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    depositProcessType:
      description: "The Deposit is transferred to an internal account for returned\
        \ deposits to be handled by the property. Users can select to keep all (not\
        \ exceeding total), a portion of, or none of the deposit."
      enum:
      - Keep
      - Return
      - Mature
      type: string
    depositFolioCriteria:
      description: Request to create a Deposit Folio for a reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/depositFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositFolioCriteriaType:
      description: The Deposit folio posting and payments information.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        payments:
          description: The payment information to be posted.
          items:
            $ref: '#/components/schemas/paymentCriteriaType'
          maxItems: 4000
          type: array
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        folioNameValue:
          description: Custom Folio Name Value Informatoin to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Transaction service type which the Folio is being associated.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        guaranteeCode:
          description: New guarantee code associated with reservation.
          maxLength: 20
          minLength: 0
          type: string
        depositPolicyId:
          $ref: '#/components/schemas/uniqueID_Type'
        paymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        simpleFolio:
          description: This flag signifies that generated Folio is Normal or Simple
            Folio. Certain countries of the World mandate a simple folio when the
            invoice amount is less than defined threshold.
          type: boolean
        overrideInventoryCheck:
          description: Flag to indicate if the Inventory check has to be overridden
            when the guarantee code of the reservation is changed.
          type: boolean
        manualFolioNo:
          description: Manual Folio Number used for deposit folio.This applies to
            certain country requirements.
          type: integer
      type: object
    postedDepositFolio:
      description: Response to the request to create a Deposit Folio for a reservation.
      properties:
        folioWindow:
          description: Information regarding the new Deposit Folio created.
          items:
            $ref: '#/components/schemas/folioWindowType'
          type: array
        deposits:
          description: A List of Deposit Payments.
          items:
            $ref: '#/components/schemas/depositPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositMaturityDetails:
      description: Response object for deposit maturity information type.
      properties:
        depositMaturityInfo:
          $ref: '#/components/schemas/depositMaturityInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositMaturityInfoType:
      description: Deposit maturity information type.
      properties:
        depositMaturityType:
          $ref: '#/components/schemas/depositMaturityType'
        totalAmountTransferrable:
          $ref: '#/components/schemas/currencyAmountType'
        totalAmountDue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    maturedDepositsDetails:
      description: Response of matured deposits.
      properties:
        maturedDeposits:
          description: Detailed information of matured deposits.
          items:
            $ref: '#/components/schemas/maturedDepositType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    maturedDepositsType:
      description: Detailed information of matured deposits.
      items:
        $ref: '#/components/schemas/maturedDepositType'
      maxItems: 4000
      type: array
    maturedDepositType:
      description: Matured Deposits detail.
      properties:
        transaction:
          $ref: '#/components/schemas/transactionType'
        guestCreditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        folioView:
          description: The folio window where this authorization is applied.
          type: integer
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        remark:
          description: User defined remarks of the matured deposit.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User defined reference of the matured deposit.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    transactionType:
      description: Transaction type.
      properties:
        transactionNo:
          $ref: '#/components/schemas/codeDescriptionType'
        transactionDate:
          description: Transaction date.
          format: date
          type: string
        transactionCode:
          description: Transaction code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Transaction description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    depositToGuestFolio:
      description: Request to post an existing deposit on a reservation to the Guest
        Folio for No Show or Canceled Reservations. Deposits remain in the deposit
        ledger until Checkin/Checkout. In the case of No Show or Canceled reservations
        they remain in the deposit ledger until this request is done.
      properties:
        criteria:
          $ref: '#/components/schemas/postDepositToGuestFolioType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postDepositToGuestFolioType:
      description: Criteria for transferring the Deposit Amount to the Guest Folio
      properties:
        hotelId:
          description: Resort for which the reservation defined.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    earlyDeparture:
      description: "Request to change a reservation to an Early Departure. As part\
        \ of this process the reservation will be changed to a Due Out status with\
        \ the departure date being the current business date. Only Inhouse reservations\
        \ can be changed to Early Departure. Before changing the reservation to early\
        \ departure, rate restrictions on the rate code used and any allowances consumed\
        \ by the guest for today will be checked. If there is a penalty applicable\
        \ this can be posted to the reservation."
      properties:
        criteria:
          $ref: '#/components/schemas/earlyDepartureCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    earlyDepartureCriteriaType:
      description: Criteria type for verifying or changing an Early Departure reservation.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        ignoreRateRestriction:
          description: Indicates if Rate Restriction check should be overridden.
          type: boolean
        postConsumedAllowanceToGuest:
          description: Indicates if any allowance consumed by the guest for today
            can be posted to the Guest Folio. If this cannot be done then the Early
            Departure cannot proceed.
          type: boolean
        ignoreCheckOnTieredRate:
          description: Indicates if check has to be done for Rate Tiers.
          type: boolean
        postEarlyDeparturePenalty:
          description: Indicates if the early departure penalty should be posted .
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    earlyDepartureInfo:
      description: "Response for Early departure verification. Contains information\
        \ regarding early departure penalty amount if applicable and any errors or\
        \ warnings as to why the early departure cannot be done. Possible error codes\
        \ are: FOF00152: An early departure could result in a change to the room rate,\
        \ due to the reduced length of stay. FOF00153: Exchange Rates not setup for\
        \ {currency code} . FOF00155: The partially consumed package(s) will be charged\
        \ to the guest account. FOF00156: There is a Rate Code Restriction for {restriction\
        \ information}. FOF00157: The reservation status is not valid for an early\
        \ departure. FOF00158: Early Departure is not required as the reservation\
        \ is already in Due Out status."
      properties:
        earlyDepartureDetails:
          $ref: '#/components/schemas/earlyDepartureInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    earlyDepartureInfoType:
      description: "Information regarding Early Departure for a reservation. Contains\
        \ information regarding penalty, if any."
      properties:
        penaltyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        penaltyDescription:
          description: Description of the Early Departure Penalty calculation rule.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    stagedTransactions:
      description: Response to the request to get staged transaction information for
        a Reservation
      properties:
        stagedCompTransactionsInfo:
          description: Transaction ID List of staged comp transactions for the reservation.
          items:
            $ref: '#/components/schemas/uniqueIDListType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    stagedCompTransactionsInfoType:
      description: Transaction ID List of staged comp transactions for the reservation.
      items:
        $ref: '#/components/schemas/uniqueIDListType'
      maxItems: 4000
      type: array
    finalPostings:
      description: Request to apply any final charges or payments to a reservation
        prior to checkout. This operation should be called prior to the guest settlement
        which would then reflect the balance the guest has to pay.
      properties:
        reservation:
          $ref: '#/components/schemas/checkoutReservationType'
        responseInstruction:
          $ref: '#/components/schemas/responseInstructionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    responseInstructionType:
      description: "Response types used in the Apply Final Postings request. Based\
        \ on the request the folio summary , folio details or no details will be returned\
        \ in the response."
      enum:
      - None
      - Summary
      - Details
      type: string
    fixedChargesDetails:
      description: Response that contains either the fixed charges list if fetch was
        successful or error(s) if not.
      properties:
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
            Refer to OpenTravel Code List Unique ID Type (UIT).
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          description: Quantity of the product.
          type: integer
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
      type: object
    fixedCharges:
      description: Method to update fixed charges of a reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    flexibleBenefitPostingsCriteria:
      description: Apply Flexible Benefit Postings.
      properties:
        applyFlexibleBenefitCriteria:
          $ref: '#/components/schemas/applyFlexibleBenefitPostingsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    applyFlexibleBenefitPostingsCriteriaType:
      description: Criteria for retrieving one or more guest's folio transactions.
      properties:
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    folioTaxPaymentsInfo:
      description: Response to the request for Payment Tax records for a reservation.
        Lists all the Payment Taxes for the reservation which are available.
      properties:
        paymentTaxInfo:
          $ref: '#/components/schemas/paymentTaxInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentTaxInfoType:
      description: Type for Package Tax Information for Thailand Tax functionality.
      properties:
        hotelId:
          description: Hotel context for the Reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        taxes:
          description: Payment Tax record.
          items:
            $ref: '#/components/schemas/paymentTaxType'
          maxItems: 4000
          type: array
      type: object
    folio:
      description: Response to the request to get Financial Information for a Reservation
      properties:
        reservationFolioInformation:
          $ref: '#/components/schemas/reservationFolioInfoType'
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationFolioInfoType:
      description: Each folio will include summary and/or detailed information.
      properties:
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        folioWindows:
          description: The Folio Window information of the reservation.
          items:
            $ref: '#/components/schemas/folioWindowType'
          maxItems: 4000
          type: array
        folioHistory:
          description: Folio History element contains all generated folios
          items:
            $ref: '#/components/schemas/folioWindowType'
          maxItems: 4000
          type: array
        postStayChargeAllowed:
          description: Computed flag specifying that the reservation has met the criteria
            which allows charges to be posted after being checked-out.
          type: boolean
        preStayChargeAllowed:
          description: Computed flag specifying that the reservation has met the criteria
            which allows charges to be posted before checking-in.
          type: boolean
        autoCheckInAllowed:
          description: Flag specifying that the reservation can be auto check in when
            Auto Checkin Pseudo Room parameter is active.
          type: boolean
        postToNoShowCancelAllowed:
          description: Flag specifying that the reservation can post if the reservation
            status was No Show or Cancelled.
          type: boolean
        stampDutyExists:
          description: Stamp Duty posted in at least one folio window.
          type: boolean
        roomAndTaxPosted:
          description: Flag to check if the room and tax are already posted.
          type: boolean
        deferredTaxesPosted:
          description: Flag applicable only when ALLOW_DEFERRED_TAXES is ON for the
            resort. Set to true only when there are any unsettled transactions on
            any of the windows with the deferred tax entry posted. Set to false only
            when there are unsettled transactions on any of the windows without deferred
            tax entry.
          type: string
      type: object
    closeFolioCriteria:
      description: Request to close an Open Folio Reservation. The Property should
        be using the Open Folio Functionality to use this operation.
      properties:
        criteria:
          $ref: '#/components/schemas/closeFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    closeFolioCriteriaType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    folioCriteria:
      description: Generate Folio request can be used to create a folio for checked
        in reservation or reservation with open folios
      properties:
        criteria:
          $ref: '#/components/schemas/generateFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    generateFolioCriteriaType:
      description: Generate Folio Criteria type to be used for folio generation request
      properties:
        folioNameValue:
          description: Custom Folio Name Value Information to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        eventType:
          $ref: '#/components/schemas/cashieringEventType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        profileId:
          $ref: '#/components/schemas/profileId'
        fiscalInvoicingCurrencyInfo:
          $ref: '#/components/schemas/exchangeRateInfoType'
        associatedBillInfo:
          $ref: '#/components/schemas/associatedBillInfoType'
        folioQueue:
          $ref: '#/components/schemas/folioQueueType'
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        fiscalFolioInstruction:
          $ref: '#/components/schemas/fiscalFolioInstruction'
        folioTypeValidation:
          $ref: '#/components/schemas/folioTypeValidationType'
        transactions:
          description: List of transaction information.
          items:
            $ref: '#/components/schemas/transactionType'
          maxItems: 4000
          type: array
        transactionServiceType:
          description: Contains transaction service type.
          maxLength: 20
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        folioWindowNo:
          type: integer
        allFolioWindow:
          description: Flag to decide if folios is to be generated for all windows
            in addition to the one requested with applicable postings and zero balance.
            If any of the windows have non-zero balance then folios are not generated
            for other windows.
          type: boolean
        correction:
          description: Correction flag
          type: boolean
        debitFolio:
          description: Indicates the type of folio to be generated
          type: boolean
        manualFolioNo:
          description: Manual Folio Number used for settlement during checkout
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        simpleFolio:
          description: This flag signifies that generated Folio is Normal or Simple
            Folio. Certain countries of the World mandate a simple folio when the
            invoice amount is less than defined threshold.
          type: boolean
      type: object
    associatedBillInfoType:
      description: Associated Bill info.
      properties:
        associatedBillNumber:
          description: The bill number of the original bill for which the Credit Bill
            is being generated.
          type: number
        associatedBillFolioType:
          description: The folio type of the original bill for which the Credit Bill
            is being generated.
          type: string
        associatedBillQueueName:
          description: The folio number queue(used in certain countries) of the original
            bill for which the Credit Bill is being generated.
          type: string
        associatedBillFiscalBillNumber:
          description: The Fiscal Folio Bill Number(from a Fiscal System) of the original
            bill for which the Credit Bill is being generated.
          type: string
        associatedBillGenerationDate:
          description: The bill generation date of the original bill for which the
            Credit Bill is being generated.
          format: date
          type: string
      type: object
    folioTypeValidationType:
      description: Profile detail is not configured with Tax ID.
      enum:
      - TaxID
      type: string
    transactionsType:
      description: List of transaction information.
      items:
        $ref: '#/components/schemas/transactionType'
      maxItems: 4000
      type: array
    generatedFolio:
      description: "Generate Folio Response contains generated folio no and invoice\
        \ number along or errors and warnings in case if folio couldn't be generated:\
        \ FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation\
        \ can\x92t be found with the supplied hotel code and reservation id. FOF00123\
        \ - Folio window has a balance and folio cannot be generated. FOF00124 - The\
        \ guest's reservation is not in a valid status for folio generation."
      properties:
        folioWindows:
          description: Window count will be hotel based configurable.
          items:
            $ref: '#/components/schemas/folioWindowType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationPackageOptions:
      description: Response to fetch reservation package options.
      properties:
        packagePostings:
          description: List of package postings.
          items:
            $ref: '#/components/schemas/packagePostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        linkedAllowanceReservationsInfo:
          $ref: '#/components/schemas/linkedAllowanceReservationsInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packagePostingsType:
      description: List of package postings.
      items:
        $ref: '#/components/schemas/packagePostingType'
      maxItems: 4000
      type: array
    packagePostingType:
      description: Posting details.
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/detailPostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        customCharge:
          description: Flag to identify a Custom Charge.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        packageAllowance:
          $ref: '#/components/schemas/currencyAmountType'
        overageAmount:
          $ref: '#/components/schemas/currencyAmountType'
        fromRoom:
          description: Room number for linked reservation package allowance or consumption.
          maxLength: 20
          minLength: 0
          type: string
        packageCode:
          description: Package Code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    linkedAllowanceReservationsInfoType:
      description: List of reservation with linked package allowances.
      properties:
        hotelId:
          description: The resort code.
          maxLength: 20
          minLength: 0
          type: string
        sourceReservations:
          description: List of Package Allowance Source reservations.
          items:
            $ref: '#/components/schemas/linkedAllowanceReservationInfoType'
          maxItems: 4000
          type: array
        targetReservation:
          $ref: '#/components/schemas/linkedAllowanceReservationInfoType'
      type: object
    linkedAllowanceReservationInfoType:
      description: Linked Allowance Reservation Information.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        confirmationNo:
          description: Reservation confirmation number.
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        roomId:
          description: Guest Room number.
          maxLength: 20
          minLength: 0
          type: string
        consumeSharedAllowances:
          description: Indicates that guest is allowed to consumed shared allowances
            from others.
          type: boolean
      type: object
    ccManualAuthorizationCriteria:
      description: Request for registering a Manual Authorization.
      properties:
        criteria:
          $ref: '#/components/schemas/cCManualAuthorizationCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cCManualAuthorizationCriteriaType:
      description: Type for registering a manual authorization.
      properties:
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        manualApprovalCode:
          description: Approval code is required when making a Manual Authorization.
          maxLength: 20
          minLength: 0
          type: string
        folioView:
          description: The folio window where this authorization is applied.
          type: integer
      type: object
    billingPayment:
      description: Request to post a payment on a reservation's folio.
      properties:
        criteria:
          $ref: '#/components/schemas/billingPayment_criteria'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postedBillingPayment:
      description: Response notifying if the posting of a payment to a reservation
        was successful.
      properties:
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postingActivityDetail:
      description: Response to the request to get financial details for a Posting
        Activity. This will return the before and after values for the transactions
        which were changed.
      properties:
        details:
          $ref: '#/components/schemas/postingActivityDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postingActivityDetailType:
      description: Details of a Posting transaction change.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        activity:
          $ref: '#/components/schemas/activityLogType'
        oldInfo:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        newInfo:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
      type: object
    activityLogType:
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        module:
          type: string
        logDate:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        refActionId:
          type: number
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    redeemPrepaidCards:
      description: Request type for Prepaid card redeem amount request
      properties:
        criteria:
          $ref: '#/components/schemas/redeemPrepaidCardCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    redeemPrepaidCardCriteriaType:
      description: Criteria for Prepaid card redeem request.
      properties:
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        prepaidCardRedemptions:
          description: A prepaid redemption info object to be used for posting a payment.
          items:
            $ref: '#/components/schemas/prepaidCardRedemptionType'
          maxItems: 1000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        folioView:
          description: Folio Window.
          type: integer
      type: object
    redeemPrepaidCardsStatus:
      description: Response for redeem Prepaid cards request.
      properties:
        prepaidCards:
          description: Prepaid card info object.
          items:
            $ref: '#/components/schemas/prepaidCardInfoType'
          maxItems: 4000
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    prepaidCardsInfoType:
      description: Prepaid card info object.
      items:
        $ref: '#/components/schemas/prepaidCardInfoType'
      maxItems: 4000
      type: array
    prepaidCardInfoType:
      description: Detailed information about the prepaid card.
      properties:
        hotelId:
          description: Hotel context for the prepaid card.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        initialLoadDate:
          description: Initial Load Date of the prepaid card.
          format: date
          type: string
        issueDate:
          description: Issue Date of the prepaid card.
          format: date
          type: string
        validUntil:
          description: Validity of the prepaid card amount.
          format: date
          type: string
        expiryDate:
          description: Expiry Date of the prepaid card.
          format: date
          type: string
        initialCredit:
          $ref: '#/components/schemas/currencyAmountType'
        totalDebit:
          $ref: '#/components/schemas/currencyAmountType'
        totalCredit:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        availableCashoutAmount:
          $ref: '#/components/schemas/currencyAmountType'
        reservedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        prepaidCardTransactions:
          description: Prepaid card transaction details.
          items:
            $ref: '#/components/schemas/prepaidCardTransactionInfoType'
          maxItems: 4000
          type: array
        vendorTransactionsActive:
          description: Indicate if vendor transactions are included on the transactions
            list.
          type: boolean
        operaTransactionsActive:
          description: Indicate if opera transactions are included on the transactions
            list.
          type: boolean
      type: object
    prepaidCardTransactionsType:
      description: Prepaid card transaction details.
      items:
        $ref: '#/components/schemas/prepaidCardTransactionInfoType'
      maxItems: 4000
      type: array
    prepaidCardTransactionInfoType:
      description: Prepaid Card Transactions
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        type:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
        date:
          description: Prepaid card transaction date.
          format: date
          type: string
        transactionNo:
          description: Opera transaction number.
          type: integer
        vendorTransactionNo:
          description: Vendor transaction number.
          maxLength: 100
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        source:
          $ref: '#/components/schemas/prepaidCardTransactionSourceType'
        cancellable:
          description: Indicate if the transaction is cancellable or not.
          type: boolean
      type: object
    prepaidCardTransactionSourceType:
      description: Vendor transaction source type.
      enum:
      - Opera
      - Vendor
      type: string
    reservationFolio:
      description: "Request to create a Proforma(folio) transactions for a reservation.\
        \ The request generates the internal transactions required to create a Proforma\
        \ report. After this request is called , the Opera Proforma report should\
        \ be called so that these transactions can be used in the report. If the report\
        \ is called without this request, the report will be incorrect and will not\
        \ have the complete information. If the report is not used after this request,\
        \ the internal transactions will be removed either by night audit or by the\
        \ next request."
      properties:
        criteria:
          $ref: '#/components/schemas/createProformaCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createProformaCriteriaType:
      description: Criteria for creating Proforma transactions for a reservation.
        These transactions will be used by the Opera Proforma Report.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        responseInstruction:
          $ref: '#/components/schemas/proformaResponseInstructionType'
      type: object
    proformaResponseInstructionType:
      description: Response instructions for Proforma Creation.
      enum:
      - None
      - FolioSummary
      type: string
    reservationFolioInformation:
      description: "Response for the Create Proforma WS. After the proforma is created\
        \ by this request, the Opera Proforma report should be called to generate\
        \ the actual physical Proforma report. The response can have the summary of\
        \ the Guests Proforma Folio, if requested."
      properties:
        reservationFolioInformation:
          $ref: '#/components/schemas/reservationFolioInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketTotals:
      description: Response object for revenue bucket totals for a reservation.
      properties:
        revenueBucketsInfo:
          description: List of revenue bucket total details
          items:
            $ref: '#/components/schemas/revenueBucketTotalType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueBucketTotalsType:
      description: List of revenue bucket total details
      items:
        $ref: '#/components/schemas/revenueBucketTotalType'
      maxItems: 4000
      type: array
    revenueBucketTotalType:
      description: reservation revenue bucket total information.
      properties:
        revenueBucketCode:
          $ref: '#/components/schemas/revenueBucketCodeType'
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    revenueBucketCodeType:
      description: This gives detailed information about a trx code arrangement.
      properties:
        description:
          description: Description of the trx code arrangement code.
          maxLength: 40
          minLength: 0
          type: string
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        code:
          description: Code is used to identify a trx code arrangement.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code for which the trx code arrangement
            is specified.
          maxLength: 20
          minLength: 0
          type: string
        revenueBucketType:
          description: This holds Revenue Bucket Type
          maxLength: 20
          minLength: 0
          type: string
        pointsEligible:
          description: Bucket is eligible for membership points
          type: boolean
        bucketValue:
          description: Stores the default value for the arrangement code for revenue
            buckets in order to group transaction codes.
          maxLength: 2000
          minLength: 0
          type: string
        bucketType:
          $ref: '#/components/schemas/bucketTypeType'
      type: object
    bucketTypeType:
      description: Fiscal Bucket Type.
      enum:
      - Default
      - Fiscal
      type: string
    reverseCertificatePostingsCriteria:
      description: Request to reverse the certificate postings of transactions.
      properties:
        reverseCriteria:
          $ref: '#/components/schemas/reverseCertificatePostingsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reverseCertificatePostingsCriteriaType:
      description: Criteria type for reversing certificate postings of transactions.
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        transactionList:
          description: The unique transaction number of this transaction.
          items:
            type: number
          maxItems: 4000
          type: array
        reasonCode:
          description: The reason code for the deletion.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    routingInstructionsDetails:
      description: Response object containing routing instructions for a reservation.
      properties:
        routingInstructions:
          description: A routing info object can either be of type Folio OR of type
            Room with its corresponding instructions.
          items:
            $ref: '#/components/schemas/routingInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    routingInfoListType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding instructions.
      items:
        $ref: '#/components/schemas/routingInfoType'
      maxItems: 4000
      type: array
    routingInfoType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        folio:
          $ref: '#/components/schemas/resvRoutingInfoType_folio'
        room:
          $ref: '#/components/schemas/resvRoutingInfoType_room'
        comp:
          $ref: '#/components/schemas/resvRoutingInfoType_comp'
        request:
          $ref: '#/components/schemas/resvRoutingInfoType_request'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
      type: object
    routingInstructionsToChange:
      description: Request when changing a routing instruction.
      properties:
        criteria:
          $ref: '#/components/schemas/routingInstructionsToChange_criteria'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedRoutingInstructions:
      description: Response when changing a routing instruction. It may optionally
        return a list of postings which are eligible for transfer as per the modified
        routing instruction in case of room routing instruction.
      properties:
        postingsForRoomRouting:
          $ref: '#/components/schemas/postingsInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postingsInfoType:
      description: This type is useful to hold the transaction details along the transaction
        code information.
      properties:
        transactions:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
      type: object
    roomRoutingPostings:
      properties:
        postingsForRoomRouting:
          $ref: '#/components/schemas/postingsInfoType'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    routingInstructions:
      description: Request to create a routing instruction.
      properties:
        criteria:
          $ref: '#/components/schemas/resvRoutingCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resvRoutingCriteriaType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        folio:
          $ref: '#/components/schemas/resvRoutingInfoType_folio'
        room:
          $ref: '#/components/schemas/resvRoutingInfoType_room'
        comp:
          $ref: '#/components/schemas/resvRoutingInfoType_comp'
        request:
          $ref: '#/components/schemas/resvRoutingInfoType_request'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        hotelId:
          description: Hotel context of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        retrievePostingsForRoomRouting:
          description: "This flag indicates if postings that can be refreshed need\
            \ to be part of the response when a routing instruction is created, updated\
            \ or deleted."
          type: boolean
      type: object
    createdRoutingInstructions:
      description: Response when creating a routing instruction. It may optionally
        return a list of postings which are eligible for transfer as per the new routing
        instruction in case of room routing instruction.
      properties:
        postingsForRoomRouting:
          $ref: '#/components/schemas/postingsInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositRefundEligibleCheck:
      description: Response for the refund deposit payment.
      properties:
        isDepositRefundValid:
          description: Is reservation valid for deposit refund.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    splitDepositTransaction:
      description: Request to split deposit transaction for a reservation.
      properties:
        depositTransaction:
          $ref: '#/components/schemas/depositTransactionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositTransactionType:
      description: Deposit transaction of a reservation.
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        transactionNo:
          description: The unique transaction number associated with transaction group.
          type: number
        splitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    splitDepositTransactionStatus:
      description: Response after spliting deposit transaction.
      properties:
        transactions:
          description: List of transaction information.
          items:
            $ref: '#/components/schemas/transactionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioToWindow:
      description: Request for transaction folio(s) to specific window
      properties:
        criteria:
          $ref: '#/components/schemas/folioTransferCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioTransferCriteriaType:
      description: Folio(s) Transfer Criteria type to be used for folio transfer request.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        targetFolioWindowNo:
          description: Folio Window Number to where transactions will be transfered.
          type: integer
        folioList:
          description: List of folios to be transfered.
          items:
            type: integer
          maxItems: 7
          type: array
        folioStyle:
          description: Folio style of the folios to be transferred.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    transactionToWindow:
      description: Request for transaction transfer
      properties:
        criteria:
          $ref: '#/components/schemas/trxTransferCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxTransferCriteriaType:
      description: Transactions can be transferred to either a FolioWindow Number
        of the same reservation or to another Inhouse Reservation.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        membershipIdNo:
          description: Unique ID of Membership.
          type: integer
        targetFolioWindowNo:
          description: Folio Window Number to where transactions will be transfered.
          type: integer
        targetReservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        transactionList:
          description: List of transactions to be transfered.
          items:
            type: number
          maxItems: 4000
          type: array
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    transferTransactionToWindow:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        transactions:
          description: Generated transaction number on destination window.
          items:
            type: number
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioToVoid:
      description: Request to Void a Guest Folio when the Void Functionality is active.
      properties:
        criteria:
          $ref: '#/components/schemas/voidFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    voidFolioCriteriaType:
      description: Criteria for Voiding a Folio.
      properties:
        hotelId:
          description: Property where the Folio exists which has to be voided.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        associatedBillInfo:
          $ref: '#/components/schemas/associatedBillInfoType'
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        folioSeqNo:
          description: Unique sequence number. Used to identify the current folio
            tax record.
          type: number
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        fiscalCreditBillQueueName:
          description: Folio Queue name to generate a credit bill for fiscal service.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    voidedFolio:
      description: Response to the request for voiding a Guest Folio.
      properties:
        fiscalCreditBillFolio:
          $ref: '#/components/schemas/folioWindowType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositTransferCriteria:
      description: Request to transfer a deposit amount from one reservation to one
        or more reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/depositTransferCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    depositTransferCriteriaType:
      description: Criteria type for transfer of deposit amount from one reservation
        to one or more reservation(s).
      properties:
        hotelId:
          description: Property where the reservation exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        toReservations:
          description: The reservation id and the amount to transfer detail.
          items:
            $ref: '#/components/schemas/depositTransferToReservationType'
          maxItems: 4000
          type: array
        comments:
          description: User Comments for the transfer operation.
          maxLength: 2000
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    depositTransferToReservationType:
      description: Deposit Transfer detail for the target reservation.
      properties:
        reservationId:
          $ref: '#/components/schemas/reservationId'
        transferAmount:
          $ref: '#/components/schemas/currencyAmountType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    reservationTransaction:
      description: "Request to transfer a transaction(s) to a reservation. In the\
        \ criteria, the target Reservation Id is required for the transfer."
      properties:
        criteria:
          $ref: '#/components/schemas/reservationTrxTransferCriteria'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reservationTrxTransferCriteria:
      description: Criteria for transaction transfer. The choice element should have
        the target Reservation Id.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        membershipIdNo:
          description: Unique ID of Membership.
          type: integer
        targetFolioWindowNo:
          description: Folio Window Number to where transactions will be transfered.
          type: integer
        targetReservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        transactionList:
          description: List of transactions to be transfered.
          items:
            type: number
          maxItems: 4000
          type: array
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    hotelRevenueDetails:
      description: Response object for hotel room revenue for all HHonors redemption
        reservation.
      properties:
        hotelRevenue:
          $ref: '#/components/schemas/hotelRevenueType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelRevenueType:
      description: Hotel revenue type.
      properties:
        roomRevenue:
          description: Total room revenue for this hotel.
          type: number
        houseRevenue:
          description: Total house revenue for this hotel.
          type: number
        compRevenue:
          description: Total comp revenue for this hotel.
          type: number
        occupiedRooms:
          description: Total occupied revenue for this hotel.
          type: number
        houseRooms:
          description: Total house rooms for this hotel.
          type: number
        compRooms:
          description: Total comp rooms for this hotel.
          type: number
        zeroRoomsRevenue:
          description: Total zero rooms revenue for this hotel.
          type: number
        currencyCode:
          description: The base currency code for this hotel.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    billingInstructionCodes:
      properties:
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    linkReservationPackageAllowance:
      description: Method to create package allowance link from a source reservation
        to the target reservation.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        linkFromReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        linkToReservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        consumeSharedAllowances:
          description: "If set to TRUE, the source reservation contributes its allowance(s)\
            \ to the linked allowance pool and is able to draw from the allowances\
            \ of the target reservation and/or any other source rooms linked to the\
            \ target room."
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postingsForRefresh:
      description: Response object that lists the transactions that can be refreshed
        when a routing instruction set is refreshed.
      properties:
        postingsForRoomRouting:
          $ref: '#/components/schemas/postingsInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomRoutingRefresh:
      description: "The request object for processing refreshing of a routing instruction\
        \ set. This operation transfers the postings to the respective reservation\
        \ as per the routing instruction set which is created, edited, deleted or\
        \ refreshed."
      properties:
        roomRoutingRefreshCriteria:
          $ref: '#/components/schemas/roomRoutingRefreshCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomRoutingRefreshCriteriaType:
      description: Criteria for refreshing the routing instruction set.
      properties:
        hotelId:
          description: Property code where the routing instruction set exists.
          maxLength: 20
          minLength: 0
          type: string
        resvNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        targetResvNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        originalTargetResvNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          $ref: '#/components/schemas/routingInstructionStatusType'
        fromBothResvs:
          description: Flag to indicate whether to fetch transaction from both reservations.
          type: boolean
        transactions:
          description: Unique Transaction Number of the transaction(posting) which
            need to be transferred.
          items:
            type: number
          maxItems: 4000
          type: array
        instructions:
          $ref: '#/components/schemas/routingInstructionType'
      type: object
    routingInstructionStatusType:
      description: Routing instruction set is deleted.
      enum:
      - RoutingInstructionNew
      - RoutingInstructionEdited
      - RoutingInstructionRemoved
      type: string
    storedFolioDetailsInfo:
      description: Response object for fetch stored folio details operation
      properties:
        storedFolioDetails:
          $ref: '#/components/schemas/storedFolioDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    storedFolioDetailsType:
      description: Stored Folio Details type.Folio can be printed/viewed without re-generation.
      properties:
        folioReportURL:
          description: Folio Report URL.
          maxLength: 32000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioFileName:
          description: Name of the Stored Folio file.
          maxLength: 2000
          minLength: 0
          type: string
        reportStatus:
          $ref: '#/components/schemas/statusType'
      type: object
    statusType:
      description: Status of the batch process.
      enum:
      - Success
      - Error
      - Running
      - Stopped
      - Warning
      - Failed
      - Started
      - CompletedWithLogs
      type: string
    storedFolioDetails:
      description: Request object to update stored folio details.
      properties:
        storedFolioDetails:
          $ref: '#/components/schemas/storedFolioDetailsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postSupplementalFolio:
      description: Request to post a Supplemental Folio for an existing Folio. Debit
        Bill ( Supplemental Folio ) Functionality parameter is required
      properties:
        criteria:
          $ref: '#/components/schemas/supplementalFolioCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    supplementalFolioCriteriaType:
      description: Criteria for posting the Supplemental Folio. Includes charges and
        payments.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        payments:
          description: The payment information to be posted.
          items:
            $ref: '#/components/schemas/paymentCriteriaType'
          maxItems: 4000
          type: array
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
        folioNameValue:
          description: Custom Folio Name Value Informatoin to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Transaction service type which the Folio is being associated.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        originalFolio:
          $ref: '#/components/schemas/folioType'
      type: object
    postSupplementalFolioStatus:
      description: Response for the request to create Supplemental Folio.
      properties:
        folioWindow:
          description: Information regarding the new Supplemental Folio created.
          items:
            $ref: '#/components/schemas/folioWindowType'
          maxItems: 4000
          type: array
        payments:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionCodes:
      description: Response that contains either the Transaction Code list if fetch
        was successful or error(s) if not.
      properties:
        trxCodes:
          description: List of TransactionCodes
          items:
            $ref: '#/components/schemas/trxPostingInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxCodesPostingInfoType:
      description: List of TransactionCodes
      items:
        $ref: '#/components/schemas/trxPostingInfoType'
      maxItems: 4000
      type: array
    trxPostingInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        price:
          $ref: '#/components/schemas/currencyAmountType'
        minimumPrice:
          $ref: '#/components/schemas/currencyAmountType'
        maximumPrice:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    folioTransactionDetails:
      description: Response for the fetch transaction details request. Detail information
        regarding the folio transaction will be returned
      properties:
        transactions:
          description: Details of the transaction(Posting).
          items:
            $ref: '#/components/schemas/detailPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    guestsTransactions:
      description: Lists a summary of transactions of guests.
      properties:
        reservationFolioInformation:
          description: Folio details for the requested reservation/s.
          items:
            $ref: '#/components/schemas/reservationFolioInfoType'
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionsAdjustment:
      description: "Request to adjust a transaction. In order to adjust a transaction,\
        \ a valid amount or percentage is required. A valid reason code and reason\
        \ text is also required. Only negative adjustments are done. The adjust process\
        \ will post a new negative transaction for the same transaction code for the\
        \ current day."
      properties:
        criteria:
          $ref: '#/components/schemas/trxAdjustCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxAdjustCriteriaType:
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        transactionList:
          description: The unique transaction number of this transaction.
          items:
            type: number
          maxItems: 4000
          type: array
        details:
          $ref: '#/components/schemas/adjustmentDetailsType'
        incomeAuditDate:
          description: Date of the Audit. This is used when postings are being created
            using the Income Audit functionality.
          format: date
          type: string
        aRAccountNo:
          description: The AR Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        aRInvoiceNo:
          description: The AR Invoice Number for the Account.
          type: number
        customChargeExemptionDetails:
          description: List of Custom Charge Exemptions.
          items:
            $ref: '#/components/schemas/customChargeExemptionType'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    adjustmentDetailsType:
      description: Details regarding adjustments of transactions. Adjustment of transactions
        requires a amount/percentage and the adjustment reason.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: The percentage by which the transaction has to be adjusted.
          maximum: 100
          minimum: 0
          type: number
        reasonCode:
          description: The reason code for the adjustment.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: The reason text for the adjustment.
          maxLength: 2000
          minLength: 0
          type: string
        department:
          description: The department name or ID with which the adjustment is associated.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    customChargeExemptionsType:
      description: List of Custom Charge Exemptions.
      items:
        $ref: '#/components/schemas/customChargeExemptionType'
      maxItems: 4000
      type: array
    customChargeExemptionType:
      description: Contains custom charges exemption information.
      properties:
        customChargesExemption:
          $ref: '#/components/schemas/codeDescriptionType'
        customChargeQuantity:
          $ref: '#/components/schemas/customChargeQuantityType'
        customChargeDates:
          description: Contains List of Custom Charge Exemption information for a
            day.
          items:
            $ref: '#/components/schemas/customChargeExemptionDateType'
          maxItems: 4000
          type: array
        excludedDates:
          description: Contains list of dates which are valid for custom charge exemptions.
          items:
            $ref: '#/components/schemas/excludedDateType'
          maxItems: 4000
          type: array
        percentage:
          description: Exemption Percentage
          maximum: 100
          minimum: 0
          type: number
        propertyExemption:
          description: Flag specifying if custom charge exemptions is property level
            or not.
          type: boolean
      type: object
    customChargeQuantityType:
      description: Contains quantity of custom charge exemptions.
      properties:
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
        available:
          description: Indicates if Custom Charges Exemption information is editable.
          type: boolean
      type: object
    customChargeExemptionDatesType:
      description: Contains List of Custom Charge Exemption information for a day.
      items:
        $ref: '#/components/schemas/customChargeExemptionDateType'
      maxItems: 4000
      type: array
    customChargeExemptionDateType:
      description: Contains Custom Charge Exemption information for a day.
      properties:
        date:
          description: Contains Custom Charge Exemption date.
          format: date
          type: string
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
      type: object
    excludedDatesType:
      description: Contains list of dates which are valid for custom charge exemptions.
      items:
        $ref: '#/components/schemas/excludedDateType'
      maxItems: 4000
      type: array
    excludedDateType:
      description: Specifies all the enabled dates.
      properties:
        date:
          description: Contains exclusion date.
          format: date
          type: string
        reason:
          $ref: '#/components/schemas/exclusionReasonType'
      type: object
    exclusionReasonType:
      description: Custom Charge has already been Processed for this date within the
        reservation stay.
      enum:
      - NotConfigured
      - CustomChargeProcessed
      type: string
    adjustedTransactions:
      description: Response for the adjustment of transactions request. Contains any
        errors or warnings.
      properties:
        serviceRecoveryAdjustments:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transactionToSplit:
      description: "Request to split a transaction on a reservation. Splitting of\
        \ transactions requires a list of transactions and a valid amount or a percentage\
        \ by which the amount can be split. Based on parameters, certain transactions\
        \ cannot be split. Transaction which are included in an invoice cannot be\
        \ split Transactions where the generates resides elsewhere(reservation or\
        \ window) cannot be split. Automatically generated transactions such as taxes,\
        \ cannot be split by itself. Deposits which were part of a deposit folio cannot\
        \ be split. After the split is done the transaction resides on the same folio\
        \ window as the original transaction."
      properties:
        criteria:
          $ref: '#/components/schemas/trxSplitCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxSplitCriteriaType:
      description: Criteria which should be used for Splitting a financial transaction
        which belongs to a reservation.
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        transactionList:
          description: The unique transaction number of this transaction.
          items:
            type: number
          maxItems: 4000
          type: array
        splitDetails:
          $ref: '#/components/schemas/trxSplitCriteriaType_splitDetails'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    transactionToSplitAndTransfer:
      description: "Request to split a transaction on a reservation and transfer the\
        \ new transaction to a different reservation or a different window on the\
        \ same reservation. Splitting of transactions requires a In-house target reservation,\
        \ a list of transactions for a In-house reservation and a valid amount or\
        \ a percentage by which the amount can be split. Based on parameters, certain\
        \ transactions cannot be split. Transaction which are included in an invoice\
        \ cannot be split Transactions where the generates resides elsewhere(reservation\
        \ or window) cannot be split. Automatically generated transactions such as\
        \ taxes, cannot be split by itself. Deposits which were part of a deposit\
        \ folio cannot be split. After the split is done the transaction is transferred\
        \ to the target reservation/window."
      properties:
        criteria:
          $ref: '#/components/schemas/trxSplitAndTransferCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    trxSplitAndTransferCriteriaType:
      description: Type to define the criteria for Splitting and Transferring the
        new transaction.
      properties:
        hotelId:
          description: Property code where the reservation transaction exists.
          maxLength: 20
          minLength: 0
          type: string
        transactionList:
          description: The unique transaction number of this transaction.
          items:
            type: number
          maxItems: 4000
          type: array
        splitDetails:
          $ref: '#/components/schemas/trxSplitCriteriaType_splitDetails'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        targetReservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        targetFolioWindowNo:
          description: "Folio Window Number to where the new transactions , after\
            \ split, will be transfered."
          type: integer
      type: object
    validatedTransactionCode:
      description: Response notifying if transaction code is valid.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        trxCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    compTransactionCriteria:
      description: Request object to submit a comp transaction to gaming system
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        trxNo:
          description: Transaction Number for which request is being submitted.
          type: number
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    billingCharge:
      description: Request to edit a billing charge information.
      properties:
        criteria:
          $ref: '#/components/schemas/changeChargeCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeChargeCriteriaType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Transaction number of the posting being corrected.
          type: number
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Corrected posting quantity.
          type: integer
        reference:
          description: Corrected user-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: Corrected user-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        checkNumber:
          description: Corrected Cheque number.
          maxLength: 200
          minLength: 0
          type: string
        revenueDate:
          description: Corrected Revenue Date.
          format: date
          type: string
        covers:
          description: Corrected POS covers - number of copies of receipts that got
            printed for that particular receipt.
          maxLength: 10
          minLength: 0
          type: string
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalDate:
          description: Approval date of the posting.
          format: date
          type: string
        message:
          description: External message coming from the vendor that explains the status
            of transaction.
          maxLength: 200
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    billingChargeStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    gamingRequestStatusInfo:
      description: Response object for fetch gaming info
      properties:
        statusInfo:
          description: List of guest request status details.
          items:
            $ref: '#/components/schemas/gamingRequestStatusType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    gamingRequestStatusInfoType:
      description: List of guest request status details.
      items:
        $ref: '#/components/schemas/gamingRequestStatusType'
      maxItems: 4000
      type: array
    gamingRequestStatusType:
      description: Type that holds guest request status details.
      properties:
        hotelId:
          description: Hotel code corresponding to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        statusCode:
          description: Status code from the External System..
          maxLength: 200
          minLength: 0
          type: string
        status:
          description: Status of the request.
          maxLength: 50
          minLength: 0
          type: string
        messageId:
          description: Message Id from the External System.
          type: integer
        messageText:
          description: Message sent from the External System regarding the status
            of this request.
          maxLength: 2000
          minLength: 0
          type: string
        requestDate:
          description: Date the request was sent.
          format: date
          type: string
      type: object
    billingPaymentToChange:
      description: Request to change a payment posting.
      properties:
        criteria:
          $ref: '#/components/schemas/changePaymentCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changePaymentCriteriaType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Transaction number of the payment being corrected.
          type: number
        reference:
          description: Corrected user-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: Corrected user-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        checkNumber:
          description: Corrected Cheque number.
          maxLength: 200
          minLength: 0
          type: string
        covers:
          description: Corrected POS covers - number of copies of receipts that got
            printed for that particular receipt.
          maxLength: 10
          minLength: 0
          type: string
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    detachPolicyApplyCriteria:
      description: Request to detach a deposit payment from a Deposit Policy on a
        reservation.
      properties:
        criteria:
          $ref: '#/components/schemas/policyApplyCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentReversalCriteria:
      description: Request for posting payment reversal.
      properties:
        payment:
          $ref: '#/components/schemas/paymentReversalType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    paymentReversalType:
      description: Information regarding the payment transaction to be reversed.
      properties:
        hotelId:
          description: Hotel context of the transaction.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique identifier of the transaction to be reversed.
          type: number
        reasonCode:
          description: The reason code for payment reversal.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    balanceInfoCriteria:
      description: Response for the fetch balance request. This will contain the current
        balance for the criteria requested.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        postings:
          description: List of postings.
          items:
            $ref: '#/components/schemas/summaryPostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transferCompTransactions:
      description: Request type for comp transactions transfer.
      properties:
        criteria:
          $ref: '#/components/schemas/transferCompTransactions_criteria'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    batchZeroBalanceCheckoutReservation:
      description: Request type for batch zero balance checkout.
      properties:
        criteria:
          $ref: '#/components/schemas/checkoutZeroBalanceReservationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    checkoutZeroBalanceReservationType:
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    batchZeroBalanceCheckoutDetails:
      description: Response for batch zero balance check out.
      properties:
        processId:
          description: "Used for Character Strings, length 0 to 40."
          maxLength: 40
          minLength: 0
          type: string
        resvCount:
          description: Zero balance Reservations count identifier.
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postRoomAndTaxForDayUse:
      properties:
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roundingDifferenceAmount:
      description: Response to the request to fetch the rounding difference for a
        payment amount.
      properties:
        roundingDifference:
          $ref: '#/components/schemas/roundingDifferenceAmountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roundingDifferenceAmountType:
      description: "Information regarding the rounding difference which can be applied\
        \ to the payment amount, based on the payment method."
      properties:
        hotelId:
          description: Property where the payment is being posted.
          maxLength: 20
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        roundingDifference:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    putCashier_request:
      allOf:
      - $ref: '#/components/schemas/cashierClosure'
    postFBAReimbursement_request:
      allOf:
      - $ref: '#/components/schemas/fbaReimbursementCriteria'
    calculateForeignCurrency_request:
      allOf:
      - $ref: '#/components/schemas/foreignCurrencyCriteria'
    postForeignCurrencyExchange_request:
      allOf:
      - $ref: '#/components/schemas/foreignCurrencyExchange'
    postAdvanceFolio_request:
      allOf:
      - $ref: '#/components/schemas/batchAdvanceFolio'
    postArticlesSale_request:
      allOf:
      - $ref: '#/components/schemas/articlesSaleCriteria'
    postAutoCheckoutReservations_request:
      allOf:
      - $ref: '#/components/schemas/batchAutoCheckoutReservation'
    postBatchAutoSettlement_request:
      allOf:
      - $ref: '#/components/schemas/batchAutoSettlementCriteria'
    postBatchDeposit_request:
      allOf:
      - $ref: '#/components/schemas/batchDeposit'
    postBedTaxInfo_request:
      allOf:
      - $ref: '#/components/schemas/bedTaxCriteria'
    putBillingCharges_request:
      allOf:
      - $ref: '#/components/schemas/putBillingCharges'
    reverseFolioTaxPayment_request:
      allOf:
      - $ref: '#/components/schemas/transactionReversal'
    putCashierLock_request:
      allOf:
      - $ref: '#/components/schemas/cashierLockCriteriaToExtend'
    postCCSettlement_request:
      allOf:
      - $ref: '#/components/schemas/ccSettlementCriteria'
    postBatchCCSettlements_request:
      allOf:
      - $ref: '#/components/schemas/ccBatchSettlementsProcessCriteria'
    postGuestCheckDetails_request:
      allOf:
      - $ref: '#/components/schemas/guestCheckDetails'
    postCreditBill_request:
      allOf:
      - $ref: '#/components/schemas/creditBillCriteria'
    postCreditLimitOveragePayments_request:
      allOf:
      - $ref: '#/components/schemas/creditLimitOveragePayments'
    registerVaultTransaction_request:
      allOf:
      - $ref: '#/components/schemas/vaultTransaction'
    validateDepositFolio_request:
      allOf:
      - $ref: '#/components/schemas/depositFolioValidateCriteria'
    postDepositPaymentByExtId_request:
      allOf:
      - $ref: '#/components/schemas/depositPayment'
    postFiscalCommandInvoice_request:
      allOf:
      - $ref: '#/components/schemas/fiscalFolioCriteria'
    generateFiscalFolio_request:
      allOf:
      - $ref: '#/components/schemas/fiscalInfoFolioCriteria'
    convertFolio_request:
      allOf:
      - $ref: '#/components/schemas/convertFolioCriteria'
    processFiscalRetry_request:
      allOf:
      - $ref: '#/components/schemas/processFiscalRetry'
    postPasserBySale_request:
      allOf:
      - $ref: '#/components/schemas/passerBySalesCriteria'
    putPayeeTaxNumber_request:
      allOf:
      - $ref: '#/components/schemas/payeeTaxNumber'
    attachDepositPolicyToPayment_request:
      allOf:
      - $ref: '#/components/schemas/attachPolicyApplyCriteria'
    postPrepaidCards_request:
      allOf:
      - $ref: '#/components/schemas/prepaidCardCriteria'
    activatePrepaidCard_request:
      allOf:
      - $ref: '#/components/schemas/activatePrepaidCard'
    cancelPrepaidCardTransaction_request:
      allOf:
      - $ref: '#/components/schemas/cancelPrepaidCardTransaction'
    cashOutPrepaidCard_request:
      allOf:
      - $ref: '#/components/schemas/cashOutPrepaidCard'
    reloadPrepaidCard_request:
      allOf:
      - $ref: '#/components/schemas/reloadPrepaidCard'
    authorizeCreditCardAmountByProfile_request:
      allOf:
      - $ref: '#/components/schemas/ccAuthorizationCriteria'
    postRateCode_request:
      allOf:
      - $ref: '#/components/schemas/postRateCodeCriteria'
    postBillingChargesInBatch_request:
      allOf:
      - $ref: '#/components/schemas/billingChargesInBatchCriteria'
    postAdvanceRoomCharges_request:
      allOf:
      - $ref: '#/components/schemas/advanceRoomCharges'
    postBillingCharges_request:
      allOf:
      - $ref: '#/components/schemas/billingCharges'
    postBillingCheckCharges_request:
      allOf:
      - $ref: '#/components/schemas/billingCheckChargesCriteria'
    postCheckOut_request:
      allOf:
      - $ref: '#/components/schemas/reservation'
    reinstateCheckOut_request:
      allOf:
      - $ref: '#/components/schemas/reinstateCheckedOutReservation'
    autoSettleCompFolios_request:
      allOf:
      - $ref: '#/components/schemas/autoSettleCompFolios'
    postCompRedemptions_request:
      allOf:
      - $ref: '#/components/schemas/postCompRedemptions'
    reverseCompRedemptions_request:
      allOf:
      - $ref: '#/components/schemas/reverseCompRedemptions'
    postDeferredTaxesProcess_request:
      allOf:
      - $ref: '#/components/schemas/deferredTaxesProcess'
    processReservationDeposit_request:
      allOf:
      - $ref: '#/components/schemas/reservationDepositCriteria'
    postDepositFolio_request:
      allOf:
      - $ref: '#/components/schemas/depositFolioCriteria'
    transitionDepositToGuestFolio_request:
      allOf:
      - $ref: '#/components/schemas/depositToGuestFolio'
    putForEarlyDeparture_request:
      allOf:
      - $ref: '#/components/schemas/earlyDeparture'
    applyFinalPostings_request:
      allOf:
      - $ref: '#/components/schemas/finalPostings'
    updateFixedCharges_request:
      allOf:
      - $ref: '#/components/schemas/fixedCharges'
    applyFlexibleBenefitPostings_request:
      allOf:
      - $ref: '#/components/schemas/flexibleBenefitPostingsCriteria'
    closeReservationFolio_request:
      allOf:
      - $ref: '#/components/schemas/closeFolioCriteria'
    generateFolio_request:
      allOf:
      - $ref: '#/components/schemas/folioCriteria'
    registerManualAuthorization_request:
      allOf:
      - $ref: '#/components/schemas/ccManualAuthorizationCriteria'
    postBillingPayment_request:
      allOf:
      - $ref: '#/components/schemas/billingPayment'
    redeemPrepaidCards_request:
      allOf:
      - $ref: '#/components/schemas/redeemPrepaidCards'
    postProforma_request:
      allOf:
      - $ref: '#/components/schemas/reservationFolio'
    reverseCertificatePostings_request:
      allOf:
      - $ref: '#/components/schemas/reverseCertificatePostingsCriteria'
    changeRoutingInstructions_request:
      allOf:
      - $ref: '#/components/schemas/routingInstructionsToChange'
    putRoutingInstructions_request:
      allOf:
      - $ref: '#/components/schemas/routingInstructions'
    splitDepositTransaction_request:
      allOf:
      - $ref: '#/components/schemas/splitDepositTransaction'
    transferFolioToWindow_request:
      allOf:
      - $ref: '#/components/schemas/folioToWindow'
    transferTransactionToWindow_request:
      allOf:
      - $ref: '#/components/schemas/transactionToWindow'
    voidFolio_request:
      allOf:
      - $ref: '#/components/schemas/folioToVoid'
    putReservationDepositTransfer_request:
      allOf:
      - $ref: '#/components/schemas/depositTransferCriteria'
    transferTransactionToReservation_request:
      allOf:
      - $ref: '#/components/schemas/reservationTransaction'
    linkReservationPackageAllowance_request:
      allOf:
      - $ref: '#/components/schemas/linkReservationPackageAllowance'
    processRoomRoutingRefresh_request:
      allOf:
      - $ref: '#/components/schemas/roomRoutingRefresh'
    postStoredFolioDetails_request:
      allOf:
      - $ref: '#/components/schemas/storedFolioDetails'
    postSupplementalFolio_request:
      allOf:
      - $ref: '#/components/schemas/postSupplementalFolio'
    adjustTransactions_request:
      allOf:
      - $ref: '#/components/schemas/transactionsAdjustment'
    splitTransaction_request:
      allOf:
      - $ref: '#/components/schemas/transactionToSplit'
    splitAndTransferTransaction_request:
      allOf:
      - $ref: '#/components/schemas/transactionToSplitAndTransfer'
    postCompTransaction_request:
      allOf:
      - $ref: '#/components/schemas/compTransactionCriteria'
    putBillingCharge_request:
      allOf:
      - $ref: '#/components/schemas/billingCharge'
    changeBillingPayment_request:
      allOf:
      - $ref: '#/components/schemas/billingPaymentToChange'
    detachDepositPolicyFromPayment_request:
      allOf:
      - $ref: '#/components/schemas/detachPolicyApplyCriteria'
    postReversePayment_request:
      allOf:
      - $ref: '#/components/schemas/paymentReversalCriteria'
    transferCompTransactions_request:
      allOf:
      - $ref: '#/components/schemas/transferCompTransactions'
    postZeroBalanceCheckoutReservations_request:
      allOf:
      - $ref: '#/components/schemas/batchZeroBalanceCheckoutReservation'
    postRoomAndTaxForDayUse_request:
      allOf:
      - $ref: '#/components/schemas/postRoomAndTaxForDayUse'
    detailPostingType_updateInfo:
      description: Update info associated to this transaction.
      properties:
        updateDate:
          format: date
          type: string
        updateBy:
          type: string
      type: object
    detailPostingType_guestInfo:
      description: Details of the Guest information where this transaction was posted
        to.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestName:
          description: Guest name associated with the transaction.
          maxLength: 2000
          minLength: 0
          type: string
        roomId:
          description: Room number associated with the transaction.
          maxLength: 20
          minLength: 0
          type: string
        confirmationNo:
          description: Confirmation number associated with the transaction.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    detailPostingType_miscellaneousInfo:
      properties:
        createDateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        covers:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resvRoutingInfoType_folio_guestInfo:
      description: Guest details
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    resvRoutingInfoType_folio:
      description: Folio routing type.
      properties:
        guestInfo:
          $ref: '#/components/schemas/resvRoutingInfoType_folio_guestInfo'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        aRNumber:
          description: Accounts Receivable.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
        paymentMethod:
          maxLength: 2000
          type: string
      type: object
    resvRoutingInfoType_room:
      description: Room routing type.
      properties:
        roomId:
          description: Room number to route the instructions.
          maxLength: 20
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
      type: object
    resvRoutingInfoType_comp:
      description: Comp Accounting Routing Info
      properties:
        compAccountingInfo:
          $ref: '#/components/schemas/compAccountingType'
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
      type: object
    resvRoutingInfoType_request:
      description: Comp Accounting Request routing
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
      type: object
    routingInstructionType_duration:
      description: Duration of this instruction.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        daily:
          description: Flag to indicate if the routing instruction is a daily instruction.
          type: boolean
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
      type: object
    folioTextsType_inner:
      properties:
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
        row:
          description: Row number of the additional text.
          type: integer
      type: object
    resCommunicationType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    resCommunicationType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    validatedCreditBill_folio_reservationInfo:
      description: ReservationID to which this record applies.
      properties:
        reservationId:
          description: ReservationID to which this record applies.
          type: number
        room:
          description: Room Number to which this record applies.
          maxLength: 20
          minLength: 0
          type: string
        nameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestName:
          description: Guest Name
          maxLength: 200
          minLength: 0
          type: string
        altName:
          description: Guest Alternate Last and First Name
          maxLength: 200
          minLength: 0
          type: string
      type: object
    validatedCreditBill_folio:
      description: Contains Folio Details including payee information and the reservation
        which it's attached to.
      properties:
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          maxLength: 2000
          type: string
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        folioAmount:
          $ref: '#/components/schemas/currencyAmountType'
        allowConvertFolioYn:
          description: Flag to check Folio Conversion Allowed.
          type: boolean
        accountReceivablesFolio:
          description: Flag to check Folio generated from Acoount Receivables.
          type: boolean
        paymentTrxNo:
          description: Bill Payment transaction Number.
          type: number
        reservationInfo:
          $ref: '#/components/schemas/validatedCreditBill_folio_reservationInfo'
        postItNo:
          description: Number for Post-It transactions.
          type: number
        associatedBills:
          description: Bill Number.
          items:
            type: string
          type: array
        accountCode:
          description: Account Code.
          type: number
        payment:
          $ref: '#/components/schemas/summaryPostingType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        fiscalInvoicingCurrencyInfo:
          $ref: '#/components/schemas/exchangeRateInfoType'
        anonymizedFolio:
          description: Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        revisionNo:
          description: Folio Revision number.
          type: number
        folioWindowNo:
          type: integer
        fiscalFolioNo:
          description: Bill Number returned by the Fiscal Printer.
          maxLength: 40
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 40
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        queueName:
          description: Folio Queue name.
          maxLength: 2000
          minLength: 0
          type: string
        generateFiscalFolio:
          description: Fiscal folio flag to call fiscal Information folio web service.
          type: boolean
        creditableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        creditBillGenerated:
          description: A flag which indicates whether credit folio has been generated.
          type: boolean
        hasDepositTransfer:
          description: A flag which indicates whether selected folio has deposit transfer
            or not.
          type: boolean
      type: object
    vaultHTTPTransactionMessageType_authorizationApproval:
      description: Authorization approval record.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        approvalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        authorizedPaymentRecord:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        approvalCode:
          description: The approval code authenticates the authorization.
          maxLength: 20
          minLength: 0
          type: string
        originalAuthSequence:
          description: Unique Authorization Sequence for the authorization and settlement.
          type: integer
        cardSwiped:
          type: boolean
        sourceOfAuthorization:
          $ref: '#/components/schemas/cardAuthorizationTransactionType'
      type: object
    depositDetailPostingType_miscellaneousInfo:
      properties:
        createDateTime:
          format: date
          type: string
        paidOut:
          type: boolean
      type: object
    activatePrepaidCard_criteria:
      description: Prepaid card criteria type used to perform manage operation on
        the card.
      properties:
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        pin:
          description: PIN code associated for the prepaid card.
          maxLength: 80
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        postChargeToRoom:
          description: Indicate that charges will be posted to the room.
          type: boolean
        saleCriteria:
          $ref: '#/components/schemas/saleCriteriaType'
      type: object
    cancelPrepaidCardTransaction_criteria:
      description: Prepaid card criteria type used to perform manage operation on
        the card.
      properties:
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
        pin:
          description: PIN code associated for the prepaid card.
          maxLength: 80
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        vendorTransactionNo:
          description: "Used for Character Strings, length 0 to 100."
          maxLength: 100
          minLength: 0
          type: string
        transactionNo:
          description: The opera transaction number associated with prepaid card transaction.
          type: integer
        transactionTye:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
        postChargeToRoom:
          description: Indicate that charges will be posted to the room.
          type: boolean
        saleCriteria:
          $ref: '#/components/schemas/saleCriteriaType'
      type: object
    cCAuthorizationInstructionType_authorizationSetup:
      description: Indicates the Credit Card EFT payment method authorization rules
        setup.
      properties:
        checkIn:
          description: Indicates if authorization at Check In is allowed for this
            payment method. False will indicate that no authorization will be done
            at Check In for this payment method.
          type: boolean
        stay:
          description: Indicates if authorization during the stay of the guest is
            allowed for this payment method. False will indicate that no authorization
            will be done during the stay and prior to settlements for this payment
            method. The settlement request will be sent without an authorization request.
          type: boolean
        deposit:
          description: "Indicates if authorization at Deposit is allowed for this\
            \ payment method. False will indicate that no authorization will be done\
            \ at the time of deposit payments, for this payment method. The settlement\
            \ request will be sent without an authorization request."
          type: boolean
        payOnly:
          description: "Indicates if this payment method is setup as a PayOnly, which\
            \ does not require authorization to be done prior to settlement. The special\
            \ settlement handling will take care of both Authorization and Settlement\
            \ together."
          type: boolean
      type: object
    authorizationHistoryType_cardPaymentInformation:
      description: Payment Card information that was sent for authorization
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
      type: object
    authorizationHistoryType_status_successful:
      description: An indicator that the authorization was successful.
      properties:
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizationHistoryType_status_failed:
      description: An indicator that the authorization failed.
      properties:
        reason:
          description: The reason for the authorization failure.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    authorizationHistoryType_status:
      description: Contains he authorization status indicator - either Successful
        for Failed.
      properties:
        successful:
          $ref: '#/components/schemas/authorizationHistoryType_status_successful'
        failed:
          $ref: '#/components/schemas/authorizationHistoryType_status_failed'
      type: object
    checkPostBillingChargesOptionsType_inner_roomRouting:
      description: Room routing is applicable on the requested consumable.
      properties:
        roomId:
          maxLength: 20
          minLength: 0
          type: string
        guest:
          $ref: '#/components/schemas/personNameType'
        applicable:
          type: boolean
      type: object
    checkPostBillingChargesOptionsType_inner:
      properties:
        consumable:
          $ref: '#/components/schemas/chargeCriteriaType'
        packageAllowance:
          description: Determines if the package allowance is available to be consumed.
          type: boolean
        roomRouting:
          $ref: '#/components/schemas/checkPostBillingChargesOptionsType_inner_roomRouting'
      type: object
    postCompRedemptions_criteria:
      description: Criteria to post complimentary bucket redemptions request.
      properties:
        membershipId:
          description: Membership number.
          maxLength: 100
          minLength: 0
          type: string
        compRedemptions:
          description: Information regarding Complimentary Bucket Redemption object.
          items:
            $ref: '#/components/schemas/redemptionType'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        folioView:
          description: Folio Window.
          type: integer
      type: object
    reverseCompRedemptions_criteria:
      description: Criteria to reverse complimentary bucket redemptions request.
      properties:
        membershipId:
          description: Membership number.
          maxLength: 100
          minLength: 0
          type: string
        compRedemptions:
          description: Information regarding Complimentary Bucket Redemption object.
          items:
            $ref: '#/components/schemas/redemptionType'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        folioView:
          description: Folio Window.
          type: integer
      type: object
    billingPayment_criteria:
      description: Criteria for the payment information to be posted.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        postingAmount:
          $ref: '#/components/schemas/currencyAmountType'
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        comments:
          description: User Defined Comments. Used for Deposit Payment postings.
          maxLength: 2000
          minLength: 0
          type: string
        applyCCSurcharge:
          description: "Flag to indicate if Credit Card Surcharge has to be applied\
            \ to this payment, when the functionality for Credit Card Surcharge is\
            \ available."
          type: boolean
        manualPaymentTaxInfo:
          $ref: '#/components/schemas/paymentTaxType'
        creditablePaymentTaxes:
          description: Payment Tax record.
          items:
            $ref: '#/components/schemas/paymentTaxType'
          maxItems: 4000
          type: array
        terminalId:
          description: Applicable for chip and pin. The ID of the terminal where the
            chip and pin device is connected and where the payment is made.
          maxLength: 2000
          type: string
        overrideInsufficientCC:
          description: Flag to allow a rebate by Credit Card
          type: boolean
        changeDueAmount:
          $ref: '#/components/schemas/currencyAmountType'
        overrideARCreditLimit:
          description: Flag to override account receivable credit limit
          type: boolean
        applyCurrencyTaxes:
          description: "Flag to indicate if currency taxes need to be applied or not.\
            \ For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        vATOffset:
          description: "Flag to indicate if currency taxes need to be applied or not.\
            \ For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        action:
          $ref: '#/components/schemas/postPaymentActionType'
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    routingInstructionsToChange_criteria_folio:
      description: Folio routing type.
      properties:
        guestInfo:
          $ref: '#/components/schemas/resvRoutingInfoType_folio_guestInfo'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        aRNumber:
          description: Accounts Receivable.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
        paymentMethod:
          maxLength: 2000
          type: string
        folioWindowNo:
          type: integer
      type: object
    routingInstructionsToChange_criteria_room:
      description: Room routing type.
      properties:
        roomNumber:
          description: Room number to route the instructions.
          maxLength: 20
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
      type: object
    routingInstructionsToChange_criteria_comp:
      description: Comp Accounting Routing Info
      properties:
        compAccountingInfo:
          $ref: '#/components/schemas/compAccountingType'
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
        folioWindowNo:
          type: integer
      type: object
    routingInstructionsToChange_criteria_request:
      description: Comp Accounting Request routing
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          type: array
      type: object
    routingInstructionsToChange_criteria:
      description: Transactions and scheduled instructions included in this routing
        element will be replaced with the new element.
      properties:
        folio:
          $ref: '#/components/schemas/routingInstructionsToChange_criteria_folio'
        room:
          $ref: '#/components/schemas/routingInstructionsToChange_criteria_room'
        comp:
          $ref: '#/components/schemas/routingInstructionsToChange_criteria_comp'
        request:
          $ref: '#/components/schemas/routingInstructionsToChange_criteria_request'
        hotelId:
          description: Hotel context of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        retrievePostingsForRoomRouting:
          description: "This flag indicates if postings that can be refreshed need\
            \ to be part of the response when a routing instruction is created, updated\
            \ or deleted."
          type: boolean
        newRoutingInfo:
          $ref: '#/components/schemas/routingInfoType'
      type: object
    trxSplitCriteriaType_splitDetails:
      description: The criteria required for the transaction splitting. Splitting
        can be done either by an amount or by a percentage. Atleast one should be
        defined.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percentage:
          description: The percentage by which the transaction has to be split.
          maximum: 100
          minimum: 0
          type: number
        quantity:
          description: The quantity to split. This can be used only if the original
            quantity of the transaction(s) was > 1.
          type: integer
      type: object
    transferCompTransactions_criteria:
      description: Comp transactions transfer criteria.
      properties:
        targetFolioNo:
          description: Folio window number to where transactions will be transfered.
          type: integer
        transactionList:
          description: List of transactions to be transfered.
          items:
            type: number
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
x-original-swagger-version: "2.0"
