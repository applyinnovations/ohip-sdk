/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the FolioTransferCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolioTransferCriteriaType{}

// FolioTransferCriteriaType Folio(s) Transfer Criteria type to be used for folio transfer request.
type FolioTransferCriteriaType struct {
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// List of folios to be transfered.
	FolioList []int32 `json:"folioList,omitempty"`
	// Folio style of the folios to be transferred.
	FolioStyle *string `json:"folioStyle,omitempty"`
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Folio Window Number to where transactions will be transfered.
	TargetFolioWindowNo *int32 `json:"targetFolioWindowNo,omitempty"`
}

// NewFolioTransferCriteriaType instantiates a new FolioTransferCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolioTransferCriteriaType() *FolioTransferCriteriaType {
	this := FolioTransferCriteriaType{}
	return &this
}

// NewFolioTransferCriteriaTypeWithDefaults instantiates a new FolioTransferCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolioTransferCriteriaTypeWithDefaults() *FolioTransferCriteriaType {
	this := FolioTransferCriteriaType{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *FolioTransferCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetFolioList returns the FolioList field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetFolioList() []int32 {
	if o == nil || IsNil(o.FolioList) {
		var ret []int32
		return ret
	}
	return o.FolioList
}

// GetFolioListOk returns a tuple with the FolioList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetFolioListOk() ([]int32, bool) {
	if o == nil || IsNil(o.FolioList) {
		return nil, false
	}
	return o.FolioList, true
}

// HasFolioList returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasFolioList() bool {
	if o != nil && !IsNil(o.FolioList) {
		return true
	}

	return false
}

// SetFolioList gets a reference to the given []int32 and assigns it to the FolioList field.
func (o *FolioTransferCriteriaType) SetFolioList(v []int32) {
	o.FolioList = v
}

// GetFolioStyle returns the FolioStyle field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetFolioStyle() string {
	if o == nil || IsNil(o.FolioStyle) {
		var ret string
		return ret
	}
	return *o.FolioStyle
}

// GetFolioStyleOk returns a tuple with the FolioStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetFolioStyleOk() (*string, bool) {
	if o == nil || IsNil(o.FolioStyle) {
		return nil, false
	}
	return o.FolioStyle, true
}

// HasFolioStyle returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasFolioStyle() bool {
	if o != nil && !IsNil(o.FolioStyle) {
		return true
	}

	return false
}

// SetFolioStyle gets a reference to the given string and assigns it to the FolioStyle field.
func (o *FolioTransferCriteriaType) SetFolioStyle(v string) {
	o.FolioStyle = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *FolioTransferCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *FolioTransferCriteriaType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetTargetFolioWindowNo returns the TargetFolioWindowNo field value if set, zero value otherwise.
func (o *FolioTransferCriteriaType) GetTargetFolioWindowNo() int32 {
	if o == nil || IsNil(o.TargetFolioWindowNo) {
		var ret int32
		return ret
	}
	return *o.TargetFolioWindowNo
}

// GetTargetFolioWindowNoOk returns a tuple with the TargetFolioWindowNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolioTransferCriteriaType) GetTargetFolioWindowNoOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetFolioWindowNo) {
		return nil, false
	}
	return o.TargetFolioWindowNo, true
}

// HasTargetFolioWindowNo returns a boolean if a field has been set.
func (o *FolioTransferCriteriaType) HasTargetFolioWindowNo() bool {
	if o != nil && !IsNil(o.TargetFolioWindowNo) {
		return true
	}

	return false
}

// SetTargetFolioWindowNo gets a reference to the given int32 and assigns it to the TargetFolioWindowNo field.
func (o *FolioTransferCriteriaType) SetTargetFolioWindowNo(v int32) {
	o.TargetFolioWindowNo = &v
}

func (o FolioTransferCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolioTransferCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.FolioList) {
		toSerialize["folioList"] = o.FolioList
	}
	if !IsNil(o.FolioStyle) {
		toSerialize["folioStyle"] = o.FolioStyle
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.TargetFolioWindowNo) {
		toSerialize["targetFolioWindowNo"] = o.TargetFolioWindowNo
	}
	return toSerialize, nil
}

type NullableFolioTransferCriteriaType struct {
	value *FolioTransferCriteriaType
	isSet bool
}

func (v NullableFolioTransferCriteriaType) Get() *FolioTransferCriteriaType {
	return v.value
}

func (v *NullableFolioTransferCriteriaType) Set(val *FolioTransferCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableFolioTransferCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableFolioTransferCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolioTransferCriteriaType(val *FolioTransferCriteriaType) *NullableFolioTransferCriteriaType {
	return &NullableFolioTransferCriteriaType{value: val, isSet: true}
}

func (v NullableFolioTransferCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolioTransferCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


