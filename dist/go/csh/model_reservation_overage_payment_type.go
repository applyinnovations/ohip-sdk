/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the ReservationOveragePaymentType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationOveragePaymentType{}

// ReservationOveragePaymentType Details of the reservation with the folio balance equal or higher to the credit limit
type ReservationOveragePaymentType struct {
	Balance *CurrencyAmountType `json:"balance,omitempty"`
	// Expiration date of the credit card (mask based on PCI compliance)
	CardExpirationDate *string `json:"cardExpirationDate,omitempty"`
	CardType *CardTypeType `json:"cardType,omitempty"`
	CreditCardId *UniqueIDType `json:"creditCardId,omitempty"`
	CreditCardLimit *CurrencyAmountType `json:"creditCardLimit,omitempty"`
	// Credit Card number / token (mask based on PCI compliance).
	CreditCardNo *string `json:"creditCardNo,omitempty"`
	// Guest name of the listed reservation.
	GuestName *string `json:"guestName,omitempty"`
	// Defines the unique identifier for this payment method.
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Room number on the reservation.
	RoomId *string `json:"roomId,omitempty"`
	// Identifies the user defined credit card type if credit card type from a defined list is not provided.
	UserDefinedCardType *string `json:"userDefinedCardType,omitempty"`
	// Window number associated where the balance is equal or higher to the credit limit on the method of payment.
	WindowNo *int32 `json:"windowNo,omitempty"`
}

// NewReservationOveragePaymentType instantiates a new ReservationOveragePaymentType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationOveragePaymentType() *ReservationOveragePaymentType {
	this := ReservationOveragePaymentType{}
	return &this
}

// NewReservationOveragePaymentTypeWithDefaults instantiates a new ReservationOveragePaymentType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationOveragePaymentTypeWithDefaults() *ReservationOveragePaymentType {
	this := ReservationOveragePaymentType{}
	return &this
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetBalance() CurrencyAmountType {
	if o == nil || IsNil(o.Balance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given CurrencyAmountType and assigns it to the Balance field.
func (o *ReservationOveragePaymentType) SetBalance(v CurrencyAmountType) {
	o.Balance = &v
}

// GetCardExpirationDate returns the CardExpirationDate field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetCardExpirationDate() string {
	if o == nil || IsNil(o.CardExpirationDate) {
		var ret string
		return ret
	}
	return *o.CardExpirationDate
}

// GetCardExpirationDateOk returns a tuple with the CardExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetCardExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CardExpirationDate) {
		return nil, false
	}
	return o.CardExpirationDate, true
}

// HasCardExpirationDate returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasCardExpirationDate() bool {
	if o != nil && !IsNil(o.CardExpirationDate) {
		return true
	}

	return false
}

// SetCardExpirationDate gets a reference to the given string and assigns it to the CardExpirationDate field.
func (o *ReservationOveragePaymentType) SetCardExpirationDate(v string) {
	o.CardExpirationDate = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetCardType() CardTypeType {
	if o == nil || IsNil(o.CardType) {
		var ret CardTypeType
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetCardTypeOk() (*CardTypeType, bool) {
	if o == nil || IsNil(o.CardType) {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasCardType() bool {
	if o != nil && !IsNil(o.CardType) {
		return true
	}

	return false
}

// SetCardType gets a reference to the given CardTypeType and assigns it to the CardType field.
func (o *ReservationOveragePaymentType) SetCardType(v CardTypeType) {
	o.CardType = &v
}

// GetCreditCardId returns the CreditCardId field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetCreditCardId() UniqueIDType {
	if o == nil || IsNil(o.CreditCardId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CreditCardId
}

// GetCreditCardIdOk returns a tuple with the CreditCardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetCreditCardIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CreditCardId) {
		return nil, false
	}
	return o.CreditCardId, true
}

// HasCreditCardId returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasCreditCardId() bool {
	if o != nil && !IsNil(o.CreditCardId) {
		return true
	}

	return false
}

// SetCreditCardId gets a reference to the given UniqueIDType and assigns it to the CreditCardId field.
func (o *ReservationOveragePaymentType) SetCreditCardId(v UniqueIDType) {
	o.CreditCardId = &v
}

// GetCreditCardLimit returns the CreditCardLimit field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetCreditCardLimit() CurrencyAmountType {
	if o == nil || IsNil(o.CreditCardLimit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CreditCardLimit
}

// GetCreditCardLimitOk returns a tuple with the CreditCardLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetCreditCardLimitOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CreditCardLimit) {
		return nil, false
	}
	return o.CreditCardLimit, true
}

// HasCreditCardLimit returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasCreditCardLimit() bool {
	if o != nil && !IsNil(o.CreditCardLimit) {
		return true
	}

	return false
}

// SetCreditCardLimit gets a reference to the given CurrencyAmountType and assigns it to the CreditCardLimit field.
func (o *ReservationOveragePaymentType) SetCreditCardLimit(v CurrencyAmountType) {
	o.CreditCardLimit = &v
}

// GetCreditCardNo returns the CreditCardNo field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetCreditCardNo() string {
	if o == nil || IsNil(o.CreditCardNo) {
		var ret string
		return ret
	}
	return *o.CreditCardNo
}

// GetCreditCardNoOk returns a tuple with the CreditCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetCreditCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.CreditCardNo) {
		return nil, false
	}
	return o.CreditCardNo, true
}

// HasCreditCardNo returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasCreditCardNo() bool {
	if o != nil && !IsNil(o.CreditCardNo) {
		return true
	}

	return false
}

// SetCreditCardNo gets a reference to the given string and assigns it to the CreditCardNo field.
func (o *ReservationOveragePaymentType) SetCreditCardNo(v string) {
	o.CreditCardNo = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *ReservationOveragePaymentType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *ReservationOveragePaymentType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationOveragePaymentType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ReservationOveragePaymentType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetUserDefinedCardType returns the UserDefinedCardType field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetUserDefinedCardType() string {
	if o == nil || IsNil(o.UserDefinedCardType) {
		var ret string
		return ret
	}
	return *o.UserDefinedCardType
}

// GetUserDefinedCardTypeOk returns a tuple with the UserDefinedCardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetUserDefinedCardTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UserDefinedCardType) {
		return nil, false
	}
	return o.UserDefinedCardType, true
}

// HasUserDefinedCardType returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasUserDefinedCardType() bool {
	if o != nil && !IsNil(o.UserDefinedCardType) {
		return true
	}

	return false
}

// SetUserDefinedCardType gets a reference to the given string and assigns it to the UserDefinedCardType field.
func (o *ReservationOveragePaymentType) SetUserDefinedCardType(v string) {
	o.UserDefinedCardType = &v
}

// GetWindowNo returns the WindowNo field value if set, zero value otherwise.
func (o *ReservationOveragePaymentType) GetWindowNo() int32 {
	if o == nil || IsNil(o.WindowNo) {
		var ret int32
		return ret
	}
	return *o.WindowNo
}

// GetWindowNoOk returns a tuple with the WindowNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationOveragePaymentType) GetWindowNoOk() (*int32, bool) {
	if o == nil || IsNil(o.WindowNo) {
		return nil, false
	}
	return o.WindowNo, true
}

// HasWindowNo returns a boolean if a field has been set.
func (o *ReservationOveragePaymentType) HasWindowNo() bool {
	if o != nil && !IsNil(o.WindowNo) {
		return true
	}

	return false
}

// SetWindowNo gets a reference to the given int32 and assigns it to the WindowNo field.
func (o *ReservationOveragePaymentType) SetWindowNo(v int32) {
	o.WindowNo = &v
}

func (o ReservationOveragePaymentType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationOveragePaymentType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.CardExpirationDate) {
		toSerialize["cardExpirationDate"] = o.CardExpirationDate
	}
	if !IsNil(o.CardType) {
		toSerialize["cardType"] = o.CardType
	}
	if !IsNil(o.CreditCardId) {
		toSerialize["creditCardId"] = o.CreditCardId
	}
	if !IsNil(o.CreditCardLimit) {
		toSerialize["creditCardLimit"] = o.CreditCardLimit
	}
	if !IsNil(o.CreditCardNo) {
		toSerialize["creditCardNo"] = o.CreditCardNo
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.UserDefinedCardType) {
		toSerialize["userDefinedCardType"] = o.UserDefinedCardType
	}
	if !IsNil(o.WindowNo) {
		toSerialize["windowNo"] = o.WindowNo
	}
	return toSerialize, nil
}

type NullableReservationOveragePaymentType struct {
	value *ReservationOveragePaymentType
	isSet bool
}

func (v NullableReservationOveragePaymentType) Get() *ReservationOveragePaymentType {
	return v.value
}

func (v *NullableReservationOveragePaymentType) Set(val *ReservationOveragePaymentType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationOveragePaymentType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationOveragePaymentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationOveragePaymentType(val *ReservationOveragePaymentType) *NullableReservationOveragePaymentType {
	return &NullableReservationOveragePaymentType{value: val, isSet: true}
}

func (v NullableReservationOveragePaymentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationOveragePaymentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


