/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the AuthorizationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationInfo{}

// AuthorizationInfo Response to the credit card authorization request.
type AuthorizationInfo struct {
	AuthInfo *AuthorizationInfoType `json:"authInfo,omitempty"`
	Payment *CashieringPaymentMethodType `json:"payment,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewAuthorizationInfo instantiates a new AuthorizationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationInfo() *AuthorizationInfo {
	this := AuthorizationInfo{}
	return &this
}

// NewAuthorizationInfoWithDefaults instantiates a new AuthorizationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationInfoWithDefaults() *AuthorizationInfo {
	this := AuthorizationInfo{}
	return &this
}

// GetAuthInfo returns the AuthInfo field value if set, zero value otherwise.
func (o *AuthorizationInfo) GetAuthInfo() AuthorizationInfoType {
	if o == nil || IsNil(o.AuthInfo) {
		var ret AuthorizationInfoType
		return ret
	}
	return *o.AuthInfo
}

// GetAuthInfoOk returns a tuple with the AuthInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationInfo) GetAuthInfoOk() (*AuthorizationInfoType, bool) {
	if o == nil || IsNil(o.AuthInfo) {
		return nil, false
	}
	return o.AuthInfo, true
}

// HasAuthInfo returns a boolean if a field has been set.
func (o *AuthorizationInfo) HasAuthInfo() bool {
	if o != nil && !IsNil(o.AuthInfo) {
		return true
	}

	return false
}

// SetAuthInfo gets a reference to the given AuthorizationInfoType and assigns it to the AuthInfo field.
func (o *AuthorizationInfo) SetAuthInfo(v AuthorizationInfoType) {
	o.AuthInfo = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *AuthorizationInfo) GetPayment() CashieringPaymentMethodType {
	if o == nil || IsNil(o.Payment) {
		var ret CashieringPaymentMethodType
		return ret
	}
	return *o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationInfo) GetPaymentOk() (*CashieringPaymentMethodType, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *AuthorizationInfo) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given CashieringPaymentMethodType and assigns it to the Payment field.
func (o *AuthorizationInfo) SetPayment(v CashieringPaymentMethodType) {
	o.Payment = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizationInfo) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationInfo) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizationInfo) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *AuthorizationInfo) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AuthorizationInfo) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationInfo) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AuthorizationInfo) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *AuthorizationInfo) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o AuthorizationInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthInfo) {
		toSerialize["authInfo"] = o.AuthInfo
	}
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableAuthorizationInfo struct {
	value *AuthorizationInfo
	isSet bool
}

func (v NullableAuthorizationInfo) Get() *AuthorizationInfo {
	return v.value
}

func (v *NullableAuthorizationInfo) Set(val *AuthorizationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationInfo(val *AuthorizationInfo) *NullableAuthorizationInfo {
	return &NullableAuthorizationInfo{value: val, isSet: true}
}

func (v NullableAuthorizationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


