/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the GeneratedFolio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratedFolio{}

// GeneratedFolio Generate Folio Response contains generated folio no and invoice number along or errors and warnings in case if folio couldn't be generated: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation cant be found with the supplied hotel code and reservation id. FOF00123 - Folio window has a balance and folio cannot be generated. FOF00124 - The guest's reservation is not in a valid status for folio generation.
type GeneratedFolio struct {
	// Window count will be hotel based configurable.
	FolioWindows []FolioWindowType `json:"folioWindows,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewGeneratedFolio instantiates a new GeneratedFolio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratedFolio() *GeneratedFolio {
	this := GeneratedFolio{}
	return &this
}

// NewGeneratedFolioWithDefaults instantiates a new GeneratedFolio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratedFolioWithDefaults() *GeneratedFolio {
	this := GeneratedFolio{}
	return &this
}

// GetFolioWindows returns the FolioWindows field value if set, zero value otherwise.
func (o *GeneratedFolio) GetFolioWindows() []FolioWindowType {
	if o == nil || IsNil(o.FolioWindows) {
		var ret []FolioWindowType
		return ret
	}
	return o.FolioWindows
}

// GetFolioWindowsOk returns a tuple with the FolioWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedFolio) GetFolioWindowsOk() ([]FolioWindowType, bool) {
	if o == nil || IsNil(o.FolioWindows) {
		return nil, false
	}
	return o.FolioWindows, true
}

// HasFolioWindows returns a boolean if a field has been set.
func (o *GeneratedFolio) HasFolioWindows() bool {
	if o != nil && !IsNil(o.FolioWindows) {
		return true
	}

	return false
}

// SetFolioWindows gets a reference to the given []FolioWindowType and assigns it to the FolioWindows field.
func (o *GeneratedFolio) SetFolioWindows(v []FolioWindowType) {
	o.FolioWindows = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GeneratedFolio) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedFolio) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GeneratedFolio) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *GeneratedFolio) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *GeneratedFolio) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratedFolio) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *GeneratedFolio) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *GeneratedFolio) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o GeneratedFolio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratedFolio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioWindows) {
		toSerialize["folioWindows"] = o.FolioWindows
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableGeneratedFolio struct {
	value *GeneratedFolio
	isSet bool
}

func (v NullableGeneratedFolio) Get() *GeneratedFolio {
	return v.value
}

func (v *NullableGeneratedFolio) Set(val *GeneratedFolio) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratedFolio) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratedFolio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratedFolio(val *GeneratedFolio) *NullableGeneratedFolio {
	return &NullableGeneratedFolio{value: val, isSet: true}
}

func (v NullableGeneratedFolio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratedFolio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


