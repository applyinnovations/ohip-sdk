/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the ProcessFiscalRetryStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessFiscalRetryStatus{}

// ProcessFiscalRetryStatus The response object to send back the fiscal service response to opera.
type ProcessFiscalRetryStatus struct {
	// Fiscal Folio sequence ID stored in queue table.
	FolioSeqId *int32 `json:"folioSeqId,omitempty"`
	// Indicating if it is last trial for fiscal printing.
	IsLastRetry *bool `json:"isLastRetry,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewProcessFiscalRetryStatus instantiates a new ProcessFiscalRetryStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessFiscalRetryStatus() *ProcessFiscalRetryStatus {
	this := ProcessFiscalRetryStatus{}
	return &this
}

// NewProcessFiscalRetryStatusWithDefaults instantiates a new ProcessFiscalRetryStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessFiscalRetryStatusWithDefaults() *ProcessFiscalRetryStatus {
	this := ProcessFiscalRetryStatus{}
	return &this
}

// GetFolioSeqId returns the FolioSeqId field value if set, zero value otherwise.
func (o *ProcessFiscalRetryStatus) GetFolioSeqId() int32 {
	if o == nil || IsNil(o.FolioSeqId) {
		var ret int32
		return ret
	}
	return *o.FolioSeqId
}

// GetFolioSeqIdOk returns a tuple with the FolioSeqId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessFiscalRetryStatus) GetFolioSeqIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioSeqId) {
		return nil, false
	}
	return o.FolioSeqId, true
}

// HasFolioSeqId returns a boolean if a field has been set.
func (o *ProcessFiscalRetryStatus) HasFolioSeqId() bool {
	if o != nil && !IsNil(o.FolioSeqId) {
		return true
	}

	return false
}

// SetFolioSeqId gets a reference to the given int32 and assigns it to the FolioSeqId field.
func (o *ProcessFiscalRetryStatus) SetFolioSeqId(v int32) {
	o.FolioSeqId = &v
}

// GetIsLastRetry returns the IsLastRetry field value if set, zero value otherwise.
func (o *ProcessFiscalRetryStatus) GetIsLastRetry() bool {
	if o == nil || IsNil(o.IsLastRetry) {
		var ret bool
		return ret
	}
	return *o.IsLastRetry
}

// GetIsLastRetryOk returns a tuple with the IsLastRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessFiscalRetryStatus) GetIsLastRetryOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLastRetry) {
		return nil, false
	}
	return o.IsLastRetry, true
}

// HasIsLastRetry returns a boolean if a field has been set.
func (o *ProcessFiscalRetryStatus) HasIsLastRetry() bool {
	if o != nil && !IsNil(o.IsLastRetry) {
		return true
	}

	return false
}

// SetIsLastRetry gets a reference to the given bool and assigns it to the IsLastRetry field.
func (o *ProcessFiscalRetryStatus) SetIsLastRetry(v bool) {
	o.IsLastRetry = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ProcessFiscalRetryStatus) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessFiscalRetryStatus) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ProcessFiscalRetryStatus) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *ProcessFiscalRetryStatus) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ProcessFiscalRetryStatus) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessFiscalRetryStatus) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ProcessFiscalRetryStatus) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ProcessFiscalRetryStatus) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ProcessFiscalRetryStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessFiscalRetryStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioSeqId) {
		toSerialize["folioSeqId"] = o.FolioSeqId
	}
	if !IsNil(o.IsLastRetry) {
		toSerialize["isLastRetry"] = o.IsLastRetry
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableProcessFiscalRetryStatus struct {
	value *ProcessFiscalRetryStatus
	isSet bool
}

func (v NullableProcessFiscalRetryStatus) Get() *ProcessFiscalRetryStatus {
	return v.value
}

func (v *NullableProcessFiscalRetryStatus) Set(val *ProcessFiscalRetryStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessFiscalRetryStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessFiscalRetryStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessFiscalRetryStatus(val *ProcessFiscalRetryStatus) *NullableProcessFiscalRetryStatus {
	return &NullableProcessFiscalRetryStatus{value: val, isSet: true}
}

func (v NullableProcessFiscalRetryStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessFiscalRetryStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


