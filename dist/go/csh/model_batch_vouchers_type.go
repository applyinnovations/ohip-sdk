/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the BatchVouchersType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchVouchersType{}

// BatchVouchersType struct for BatchVouchersType
type BatchVouchersType struct {
	// Unique identifier for a reservation.
	Reservations []ReservationId `json:"reservations,omitempty"`
}

// NewBatchVouchersType instantiates a new BatchVouchersType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchVouchersType() *BatchVouchersType {
	this := BatchVouchersType{}
	return &this
}

// NewBatchVouchersTypeWithDefaults instantiates a new BatchVouchersType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchVouchersTypeWithDefaults() *BatchVouchersType {
	this := BatchVouchersType{}
	return &this
}

// GetReservations returns the Reservations field value if set, zero value otherwise.
func (o *BatchVouchersType) GetReservations() []ReservationId {
	if o == nil || IsNil(o.Reservations) {
		var ret []ReservationId
		return ret
	}
	return o.Reservations
}

// GetReservationsOk returns a tuple with the Reservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchVouchersType) GetReservationsOk() ([]ReservationId, bool) {
	if o == nil || IsNil(o.Reservations) {
		return nil, false
	}
	return o.Reservations, true
}

// HasReservations returns a boolean if a field has been set.
func (o *BatchVouchersType) HasReservations() bool {
	if o != nil && !IsNil(o.Reservations) {
		return true
	}

	return false
}

// SetReservations gets a reference to the given []ReservationId and assigns it to the Reservations field.
func (o *BatchVouchersType) SetReservations(v []ReservationId) {
	o.Reservations = v
}

func (o BatchVouchersType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchVouchersType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reservations) {
		toSerialize["reservations"] = o.Reservations
	}
	return toSerialize, nil
}

type NullableBatchVouchersType struct {
	value *BatchVouchersType
	isSet bool
}

func (v NullableBatchVouchersType) Get() *BatchVouchersType {
	return v.value
}

func (v *NullableBatchVouchersType) Set(val *BatchVouchersType) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchVouchersType) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchVouchersType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchVouchersType(val *BatchVouchersType) *NullableBatchVouchersType {
	return &NullableBatchVouchersType{value: val, isSet: true}
}

func (v NullableBatchVouchersType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchVouchersType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


