/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the DepositDetailPostingTypeMiscellaneousInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositDetailPostingTypeMiscellaneousInfo{}

// DepositDetailPostingTypeMiscellaneousInfo struct for DepositDetailPostingTypeMiscellaneousInfo
type DepositDetailPostingTypeMiscellaneousInfo struct {
	CreateDateTime *string `json:"createDateTime,omitempty"`
	PaidOut *bool `json:"paidOut,omitempty"`
}

// NewDepositDetailPostingTypeMiscellaneousInfo instantiates a new DepositDetailPostingTypeMiscellaneousInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositDetailPostingTypeMiscellaneousInfo() *DepositDetailPostingTypeMiscellaneousInfo {
	this := DepositDetailPostingTypeMiscellaneousInfo{}
	return &this
}

// NewDepositDetailPostingTypeMiscellaneousInfoWithDefaults instantiates a new DepositDetailPostingTypeMiscellaneousInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositDetailPostingTypeMiscellaneousInfoWithDefaults() *DepositDetailPostingTypeMiscellaneousInfo {
	this := DepositDetailPostingTypeMiscellaneousInfo{}
	return &this
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *DepositDetailPostingTypeMiscellaneousInfo) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositDetailPostingTypeMiscellaneousInfo) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *DepositDetailPostingTypeMiscellaneousInfo) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *DepositDetailPostingTypeMiscellaneousInfo) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetPaidOut returns the PaidOut field value if set, zero value otherwise.
func (o *DepositDetailPostingTypeMiscellaneousInfo) GetPaidOut() bool {
	if o == nil || IsNil(o.PaidOut) {
		var ret bool
		return ret
	}
	return *o.PaidOut
}

// GetPaidOutOk returns a tuple with the PaidOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositDetailPostingTypeMiscellaneousInfo) GetPaidOutOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidOut) {
		return nil, false
	}
	return o.PaidOut, true
}

// HasPaidOut returns a boolean if a field has been set.
func (o *DepositDetailPostingTypeMiscellaneousInfo) HasPaidOut() bool {
	if o != nil && !IsNil(o.PaidOut) {
		return true
	}

	return false
}

// SetPaidOut gets a reference to the given bool and assigns it to the PaidOut field.
func (o *DepositDetailPostingTypeMiscellaneousInfo) SetPaidOut(v bool) {
	o.PaidOut = &v
}

func (o DepositDetailPostingTypeMiscellaneousInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositDetailPostingTypeMiscellaneousInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.PaidOut) {
		toSerialize["paidOut"] = o.PaidOut
	}
	return toSerialize, nil
}

type NullableDepositDetailPostingTypeMiscellaneousInfo struct {
	value *DepositDetailPostingTypeMiscellaneousInfo
	isSet bool
}

func (v NullableDepositDetailPostingTypeMiscellaneousInfo) Get() *DepositDetailPostingTypeMiscellaneousInfo {
	return v.value
}

func (v *NullableDepositDetailPostingTypeMiscellaneousInfo) Set(val *DepositDetailPostingTypeMiscellaneousInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositDetailPostingTypeMiscellaneousInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositDetailPostingTypeMiscellaneousInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositDetailPostingTypeMiscellaneousInfo(val *DepositDetailPostingTypeMiscellaneousInfo) *NullableDepositDetailPostingTypeMiscellaneousInfo {
	return &NullableDepositDetailPostingTypeMiscellaneousInfo{value: val, isSet: true}
}

func (v NullableDepositDetailPostingTypeMiscellaneousInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositDetailPostingTypeMiscellaneousInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


