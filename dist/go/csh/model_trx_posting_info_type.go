/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the TrxPostingInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrxPostingInfoType{}

// TrxPostingInfoType Transaction codes info.
type TrxPostingInfoType struct {
	// Transaction codes info.
	Description *string `json:"description,omitempty"`
	// Category of the transaction code.
	TransactionGroup *string `json:"transactionGroup,omitempty"`
	// Sub category of the transaction code.
	TransactionSubGroup *string `json:"transactionSubGroup,omitempty"`
	// Unique Universal product code of the transaction code.
	UniversalProductCode *string `json:"universalProductCode,omitempty"`
	// This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.
	RoutingInstructionsId *float32 `json:"routingInstructionsId,omitempty"`
	// The List of Articles defined for this transaction code, when using the Articles functionality.
	Articles []ArticleInfoType `json:"articles,omitempty"`
	// Contains service type for transaction code.
	TrxServiceType *string `json:"trxServiceType,omitempty"`
	// Unique identifier for the Transaction code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Hotel context of the Transaction code.
	HotelId *string `json:"hotelId,omitempty"`
	// Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.
	PrintTrxReceipt *bool `json:"printTrxReceipt,omitempty"`
	Price *CurrencyAmountType `json:"price,omitempty"`
	MinimumPrice *CurrencyAmountType `json:"minimumPrice,omitempty"`
	MaximumPrice *CurrencyAmountType `json:"maximumPrice,omitempty"`
}

// NewTrxPostingInfoType instantiates a new TrxPostingInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrxPostingInfoType() *TrxPostingInfoType {
	this := TrxPostingInfoType{}
	return &this
}

// NewTrxPostingInfoTypeWithDefaults instantiates a new TrxPostingInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrxPostingInfoTypeWithDefaults() *TrxPostingInfoType {
	this := TrxPostingInfoType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TrxPostingInfoType) SetDescription(v string) {
	o.Description = &v
}

// GetTransactionGroup returns the TransactionGroup field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetTransactionGroup() string {
	if o == nil || IsNil(o.TransactionGroup) {
		var ret string
		return ret
	}
	return *o.TransactionGroup
}

// GetTransactionGroupOk returns a tuple with the TransactionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetTransactionGroupOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionGroup) {
		return nil, false
	}
	return o.TransactionGroup, true
}

// HasTransactionGroup returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasTransactionGroup() bool {
	if o != nil && !IsNil(o.TransactionGroup) {
		return true
	}

	return false
}

// SetTransactionGroup gets a reference to the given string and assigns it to the TransactionGroup field.
func (o *TrxPostingInfoType) SetTransactionGroup(v string) {
	o.TransactionGroup = &v
}

// GetTransactionSubGroup returns the TransactionSubGroup field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetTransactionSubGroup() string {
	if o == nil || IsNil(o.TransactionSubGroup) {
		var ret string
		return ret
	}
	return *o.TransactionSubGroup
}

// GetTransactionSubGroupOk returns a tuple with the TransactionSubGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetTransactionSubGroupOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionSubGroup) {
		return nil, false
	}
	return o.TransactionSubGroup, true
}

// HasTransactionSubGroup returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasTransactionSubGroup() bool {
	if o != nil && !IsNil(o.TransactionSubGroup) {
		return true
	}

	return false
}

// SetTransactionSubGroup gets a reference to the given string and assigns it to the TransactionSubGroup field.
func (o *TrxPostingInfoType) SetTransactionSubGroup(v string) {
	o.TransactionSubGroup = &v
}

// GetUniversalProductCode returns the UniversalProductCode field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetUniversalProductCode() string {
	if o == nil || IsNil(o.UniversalProductCode) {
		var ret string
		return ret
	}
	return *o.UniversalProductCode
}

// GetUniversalProductCodeOk returns a tuple with the UniversalProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetUniversalProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UniversalProductCode) {
		return nil, false
	}
	return o.UniversalProductCode, true
}

// HasUniversalProductCode returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasUniversalProductCode() bool {
	if o != nil && !IsNil(o.UniversalProductCode) {
		return true
	}

	return false
}

// SetUniversalProductCode gets a reference to the given string and assigns it to the UniversalProductCode field.
func (o *TrxPostingInfoType) SetUniversalProductCode(v string) {
	o.UniversalProductCode = &v
}

// GetRoutingInstructionsId returns the RoutingInstructionsId field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetRoutingInstructionsId() float32 {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		var ret float32
		return ret
	}
	return *o.RoutingInstructionsId
}

// GetRoutingInstructionsIdOk returns a tuple with the RoutingInstructionsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetRoutingInstructionsIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		return nil, false
	}
	return o.RoutingInstructionsId, true
}

// HasRoutingInstructionsId returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasRoutingInstructionsId() bool {
	if o != nil && !IsNil(o.RoutingInstructionsId) {
		return true
	}

	return false
}

// SetRoutingInstructionsId gets a reference to the given float32 and assigns it to the RoutingInstructionsId field.
func (o *TrxPostingInfoType) SetRoutingInstructionsId(v float32) {
	o.RoutingInstructionsId = &v
}

// GetArticles returns the Articles field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetArticles() []ArticleInfoType {
	if o == nil || IsNil(o.Articles) {
		var ret []ArticleInfoType
		return ret
	}
	return o.Articles
}

// GetArticlesOk returns a tuple with the Articles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetArticlesOk() ([]ArticleInfoType, bool) {
	if o == nil || IsNil(o.Articles) {
		return nil, false
	}
	return o.Articles, true
}

// HasArticles returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasArticles() bool {
	if o != nil && !IsNil(o.Articles) {
		return true
	}

	return false
}

// SetArticles gets a reference to the given []ArticleInfoType and assigns it to the Articles field.
func (o *TrxPostingInfoType) SetArticles(v []ArticleInfoType) {
	o.Articles = v
}

// GetTrxServiceType returns the TrxServiceType field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetTrxServiceType() string {
	if o == nil || IsNil(o.TrxServiceType) {
		var ret string
		return ret
	}
	return *o.TrxServiceType
}

// GetTrxServiceTypeOk returns a tuple with the TrxServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetTrxServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrxServiceType) {
		return nil, false
	}
	return o.TrxServiceType, true
}

// HasTrxServiceType returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasTrxServiceType() bool {
	if o != nil && !IsNil(o.TrxServiceType) {
		return true
	}

	return false
}

// SetTrxServiceType gets a reference to the given string and assigns it to the TrxServiceType field.
func (o *TrxPostingInfoType) SetTrxServiceType(v string) {
	o.TrxServiceType = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *TrxPostingInfoType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *TrxPostingInfoType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPrintTrxReceipt returns the PrintTrxReceipt field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetPrintTrxReceipt() bool {
	if o == nil || IsNil(o.PrintTrxReceipt) {
		var ret bool
		return ret
	}
	return *o.PrintTrxReceipt
}

// GetPrintTrxReceiptOk returns a tuple with the PrintTrxReceipt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetPrintTrxReceiptOk() (*bool, bool) {
	if o == nil || IsNil(o.PrintTrxReceipt) {
		return nil, false
	}
	return o.PrintTrxReceipt, true
}

// HasPrintTrxReceipt returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasPrintTrxReceipt() bool {
	if o != nil && !IsNil(o.PrintTrxReceipt) {
		return true
	}

	return false
}

// SetPrintTrxReceipt gets a reference to the given bool and assigns it to the PrintTrxReceipt field.
func (o *TrxPostingInfoType) SetPrintTrxReceipt(v bool) {
	o.PrintTrxReceipt = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetPrice() CurrencyAmountType {
	if o == nil || IsNil(o.Price) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CurrencyAmountType and assigns it to the Price field.
func (o *TrxPostingInfoType) SetPrice(v CurrencyAmountType) {
	o.Price = &v
}

// GetMinimumPrice returns the MinimumPrice field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetMinimumPrice() CurrencyAmountType {
	if o == nil || IsNil(o.MinimumPrice) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.MinimumPrice
}

// GetMinimumPriceOk returns a tuple with the MinimumPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetMinimumPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.MinimumPrice) {
		return nil, false
	}
	return o.MinimumPrice, true
}

// HasMinimumPrice returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasMinimumPrice() bool {
	if o != nil && !IsNil(o.MinimumPrice) {
		return true
	}

	return false
}

// SetMinimumPrice gets a reference to the given CurrencyAmountType and assigns it to the MinimumPrice field.
func (o *TrxPostingInfoType) SetMinimumPrice(v CurrencyAmountType) {
	o.MinimumPrice = &v
}

// GetMaximumPrice returns the MaximumPrice field value if set, zero value otherwise.
func (o *TrxPostingInfoType) GetMaximumPrice() CurrencyAmountType {
	if o == nil || IsNil(o.MaximumPrice) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.MaximumPrice
}

// GetMaximumPriceOk returns a tuple with the MaximumPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrxPostingInfoType) GetMaximumPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.MaximumPrice) {
		return nil, false
	}
	return o.MaximumPrice, true
}

// HasMaximumPrice returns a boolean if a field has been set.
func (o *TrxPostingInfoType) HasMaximumPrice() bool {
	if o != nil && !IsNil(o.MaximumPrice) {
		return true
	}

	return false
}

// SetMaximumPrice gets a reference to the given CurrencyAmountType and assigns it to the MaximumPrice field.
func (o *TrxPostingInfoType) SetMaximumPrice(v CurrencyAmountType) {
	o.MaximumPrice = &v
}

func (o TrxPostingInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrxPostingInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TransactionGroup) {
		toSerialize["transactionGroup"] = o.TransactionGroup
	}
	if !IsNil(o.TransactionSubGroup) {
		toSerialize["transactionSubGroup"] = o.TransactionSubGroup
	}
	if !IsNil(o.UniversalProductCode) {
		toSerialize["universalProductCode"] = o.UniversalProductCode
	}
	if !IsNil(o.RoutingInstructionsId) {
		toSerialize["routingInstructionsId"] = o.RoutingInstructionsId
	}
	if !IsNil(o.Articles) {
		toSerialize["articles"] = o.Articles
	}
	if !IsNil(o.TrxServiceType) {
		toSerialize["trxServiceType"] = o.TrxServiceType
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.PrintTrxReceipt) {
		toSerialize["printTrxReceipt"] = o.PrintTrxReceipt
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.MinimumPrice) {
		toSerialize["minimumPrice"] = o.MinimumPrice
	}
	if !IsNil(o.MaximumPrice) {
		toSerialize["maximumPrice"] = o.MaximumPrice
	}
	return toSerialize, nil
}

type NullableTrxPostingInfoType struct {
	value *TrxPostingInfoType
	isSet bool
}

func (v NullableTrxPostingInfoType) Get() *TrxPostingInfoType {
	return v.value
}

func (v *NullableTrxPostingInfoType) Set(val *TrxPostingInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableTrxPostingInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableTrxPostingInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrxPostingInfoType(val *TrxPostingInfoType) *NullableTrxPostingInfoType {
	return &NullableTrxPostingInfoType{value: val, isSet: true}
}

func (v NullableTrxPostingInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrxPostingInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


