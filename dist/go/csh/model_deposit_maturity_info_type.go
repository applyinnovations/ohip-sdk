/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the DepositMaturityInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositMaturityInfoType{}

// DepositMaturityInfoType Deposit maturity information type.
type DepositMaturityInfoType struct {
	DepositMaturityType *DepositMaturityType `json:"depositMaturityType,omitempty"`
	TotalAmountTransferrable *CurrencyAmountType `json:"totalAmountTransferrable,omitempty"`
	TotalAmountDue *CurrencyAmountType `json:"totalAmountDue,omitempty"`
}

// NewDepositMaturityInfoType instantiates a new DepositMaturityInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositMaturityInfoType() *DepositMaturityInfoType {
	this := DepositMaturityInfoType{}
	return &this
}

// NewDepositMaturityInfoTypeWithDefaults instantiates a new DepositMaturityInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositMaturityInfoTypeWithDefaults() *DepositMaturityInfoType {
	this := DepositMaturityInfoType{}
	return &this
}

// GetDepositMaturityType returns the DepositMaturityType field value if set, zero value otherwise.
func (o *DepositMaturityInfoType) GetDepositMaturityType() DepositMaturityType {
	if o == nil || IsNil(o.DepositMaturityType) {
		var ret DepositMaturityType
		return ret
	}
	return *o.DepositMaturityType
}

// GetDepositMaturityTypeOk returns a tuple with the DepositMaturityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositMaturityInfoType) GetDepositMaturityTypeOk() (*DepositMaturityType, bool) {
	if o == nil || IsNil(o.DepositMaturityType) {
		return nil, false
	}
	return o.DepositMaturityType, true
}

// HasDepositMaturityType returns a boolean if a field has been set.
func (o *DepositMaturityInfoType) HasDepositMaturityType() bool {
	if o != nil && !IsNil(o.DepositMaturityType) {
		return true
	}

	return false
}

// SetDepositMaturityType gets a reference to the given DepositMaturityType and assigns it to the DepositMaturityType field.
func (o *DepositMaturityInfoType) SetDepositMaturityType(v DepositMaturityType) {
	o.DepositMaturityType = &v
}

// GetTotalAmountTransferrable returns the TotalAmountTransferrable field value if set, zero value otherwise.
func (o *DepositMaturityInfoType) GetTotalAmountTransferrable() CurrencyAmountType {
	if o == nil || IsNil(o.TotalAmountTransferrable) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalAmountTransferrable
}

// GetTotalAmountTransferrableOk returns a tuple with the TotalAmountTransferrable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositMaturityInfoType) GetTotalAmountTransferrableOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalAmountTransferrable) {
		return nil, false
	}
	return o.TotalAmountTransferrable, true
}

// HasTotalAmountTransferrable returns a boolean if a field has been set.
func (o *DepositMaturityInfoType) HasTotalAmountTransferrable() bool {
	if o != nil && !IsNil(o.TotalAmountTransferrable) {
		return true
	}

	return false
}

// SetTotalAmountTransferrable gets a reference to the given CurrencyAmountType and assigns it to the TotalAmountTransferrable field.
func (o *DepositMaturityInfoType) SetTotalAmountTransferrable(v CurrencyAmountType) {
	o.TotalAmountTransferrable = &v
}

// GetTotalAmountDue returns the TotalAmountDue field value if set, zero value otherwise.
func (o *DepositMaturityInfoType) GetTotalAmountDue() CurrencyAmountType {
	if o == nil || IsNil(o.TotalAmountDue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalAmountDue
}

// GetTotalAmountDueOk returns a tuple with the TotalAmountDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositMaturityInfoType) GetTotalAmountDueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalAmountDue) {
		return nil, false
	}
	return o.TotalAmountDue, true
}

// HasTotalAmountDue returns a boolean if a field has been set.
func (o *DepositMaturityInfoType) HasTotalAmountDue() bool {
	if o != nil && !IsNil(o.TotalAmountDue) {
		return true
	}

	return false
}

// SetTotalAmountDue gets a reference to the given CurrencyAmountType and assigns it to the TotalAmountDue field.
func (o *DepositMaturityInfoType) SetTotalAmountDue(v CurrencyAmountType) {
	o.TotalAmountDue = &v
}

func (o DepositMaturityInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositMaturityInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DepositMaturityType) {
		toSerialize["depositMaturityType"] = o.DepositMaturityType
	}
	if !IsNil(o.TotalAmountTransferrable) {
		toSerialize["totalAmountTransferrable"] = o.TotalAmountTransferrable
	}
	if !IsNil(o.TotalAmountDue) {
		toSerialize["totalAmountDue"] = o.TotalAmountDue
	}
	return toSerialize, nil
}

type NullableDepositMaturityInfoType struct {
	value *DepositMaturityInfoType
	isSet bool
}

func (v NullableDepositMaturityInfoType) Get() *DepositMaturityInfoType {
	return v.value
}

func (v *NullableDepositMaturityInfoType) Set(val *DepositMaturityInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositMaturityInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositMaturityInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositMaturityInfoType(val *DepositMaturityInfoType) *NullableDepositMaturityInfoType {
	return &NullableDepositMaturityInfoType{value: val, isSet: true}
}

func (v NullableDepositMaturityInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositMaturityInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


