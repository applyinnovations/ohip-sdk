/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the CompTrxAuthorizers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompTrxAuthorizers{}

// CompTrxAuthorizers Response object for fetch comp authorizers operation.
type CompTrxAuthorizers struct {
	// List of authorizers eligible to perform the transfer.
	AuthorizerInfo []AuthorizerInfoType `json:"authorizerInfo,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCompTrxAuthorizers instantiates a new CompTrxAuthorizers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompTrxAuthorizers() *CompTrxAuthorizers {
	this := CompTrxAuthorizers{}
	return &this
}

// NewCompTrxAuthorizersWithDefaults instantiates a new CompTrxAuthorizers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompTrxAuthorizersWithDefaults() *CompTrxAuthorizers {
	this := CompTrxAuthorizers{}
	return &this
}

// GetAuthorizerInfo returns the AuthorizerInfo field value if set, zero value otherwise.
func (o *CompTrxAuthorizers) GetAuthorizerInfo() []AuthorizerInfoType {
	if o == nil || IsNil(o.AuthorizerInfo) {
		var ret []AuthorizerInfoType
		return ret
	}
	return o.AuthorizerInfo
}

// GetAuthorizerInfoOk returns a tuple with the AuthorizerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTrxAuthorizers) GetAuthorizerInfoOk() ([]AuthorizerInfoType, bool) {
	if o == nil || IsNil(o.AuthorizerInfo) {
		return nil, false
	}
	return o.AuthorizerInfo, true
}

// HasAuthorizerInfo returns a boolean if a field has been set.
func (o *CompTrxAuthorizers) HasAuthorizerInfo() bool {
	if o != nil && !IsNil(o.AuthorizerInfo) {
		return true
	}

	return false
}

// SetAuthorizerInfo gets a reference to the given []AuthorizerInfoType and assigns it to the AuthorizerInfo field.
func (o *CompTrxAuthorizers) SetAuthorizerInfo(v []AuthorizerInfoType) {
	o.AuthorizerInfo = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CompTrxAuthorizers) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTrxAuthorizers) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CompTrxAuthorizers) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CompTrxAuthorizers) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CompTrxAuthorizers) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTrxAuthorizers) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CompTrxAuthorizers) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CompTrxAuthorizers) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CompTrxAuthorizers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompTrxAuthorizers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizerInfo) {
		toSerialize["authorizerInfo"] = o.AuthorizerInfo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCompTrxAuthorizers struct {
	value *CompTrxAuthorizers
	isSet bool
}

func (v NullableCompTrxAuthorizers) Get() *CompTrxAuthorizers {
	return v.value
}

func (v *NullableCompTrxAuthorizers) Set(val *CompTrxAuthorizers) {
	v.value = val
	v.isSet = true
}

func (v NullableCompTrxAuthorizers) IsSet() bool {
	return v.isSet
}

func (v *NullableCompTrxAuthorizers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompTrxAuthorizers(val *CompTrxAuthorizers) *NullableCompTrxAuthorizers {
	return &NullableCompTrxAuthorizers{value: val, isSet: true}
}

func (v NullableCompTrxAuthorizers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompTrxAuthorizers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


