/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the CancelPrepaidCardTransactionCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelPrepaidCardTransactionCriteria{}

// CancelPrepaidCardTransactionCriteria Prepaid card criteria type used to perform manage operation on the card.
type CancelPrepaidCardTransactionCriteria struct {
	Amount *CurrencyAmountType `json:"amount,omitempty"`
	// Prepaid card number.
	CardNo *string `json:"cardNo,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// Hotel code.
	HotelId *string `json:"hotelId,omitempty"`
	InterfaceId *UniqueIDType `json:"interfaceId,omitempty"`
	// PIN code associated for the prepaid card.
	Pin *string `json:"pin,omitempty"`
	// Indicate that charges will be posted to the room.
	PostChargeToRoom *bool `json:"postChargeToRoom,omitempty"`
	ProfileId *UniqueIDType `json:"profileId,omitempty"`
	ReservationId *UniqueIDType `json:"reservationId,omitempty"`
	SaleCriteria *SaleCriteriaType `json:"saleCriteria,omitempty"`
	// The opera transaction number associated with prepaid card transaction.
	TransactionNo *int32 `json:"transactionNo,omitempty"`
	TransactionTye *PrepaidCardTrxTypeType `json:"transactionTye,omitempty"`
	// Used for Character Strings, length 0 to 100.
	VendorTransactionNo *string `json:"vendorTransactionNo,omitempty"`
}

// NewCancelPrepaidCardTransactionCriteria instantiates a new CancelPrepaidCardTransactionCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelPrepaidCardTransactionCriteria() *CancelPrepaidCardTransactionCriteria {
	this := CancelPrepaidCardTransactionCriteria{}
	return &this
}

// NewCancelPrepaidCardTransactionCriteriaWithDefaults instantiates a new CancelPrepaidCardTransactionCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelPrepaidCardTransactionCriteriaWithDefaults() *CancelPrepaidCardTransactionCriteria {
	this := CancelPrepaidCardTransactionCriteria{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *CancelPrepaidCardTransactionCriteria) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

// GetCardNo returns the CardNo field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetCardNo() string {
	if o == nil || IsNil(o.CardNo) {
		var ret string
		return ret
	}
	return *o.CardNo
}

// GetCardNoOk returns a tuple with the CardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.CardNo) {
		return nil, false
	}
	return o.CardNo, true
}

// HasCardNo returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasCardNo() bool {
	if o != nil && !IsNil(o.CardNo) {
		return true
	}

	return false
}

// SetCardNo gets a reference to the given string and assigns it to the CardNo field.
func (o *CancelPrepaidCardTransactionCriteria) SetCardNo(v string) {
	o.CardNo = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *CancelPrepaidCardTransactionCriteria) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CancelPrepaidCardTransactionCriteria) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetInterfaceId() UniqueIDType {
	if o == nil || IsNil(o.InterfaceId) {
		var ret UniqueIDType
		return ret
	}
	return *o.InterfaceId
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetInterfaceIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.InterfaceId) {
		return nil, false
	}
	return o.InterfaceId, true
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasInterfaceId() bool {
	if o != nil && !IsNil(o.InterfaceId) {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given UniqueIDType and assigns it to the InterfaceId field.
func (o *CancelPrepaidCardTransactionCriteria) SetInterfaceId(v UniqueIDType) {
	o.InterfaceId = &v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *CancelPrepaidCardTransactionCriteria) SetPin(v string) {
	o.Pin = &v
}

// GetPostChargeToRoom returns the PostChargeToRoom field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetPostChargeToRoom() bool {
	if o == nil || IsNil(o.PostChargeToRoom) {
		var ret bool
		return ret
	}
	return *o.PostChargeToRoom
}

// GetPostChargeToRoomOk returns a tuple with the PostChargeToRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetPostChargeToRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.PostChargeToRoom) {
		return nil, false
	}
	return o.PostChargeToRoom, true
}

// HasPostChargeToRoom returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasPostChargeToRoom() bool {
	if o != nil && !IsNil(o.PostChargeToRoom) {
		return true
	}

	return false
}

// SetPostChargeToRoom gets a reference to the given bool and assigns it to the PostChargeToRoom field.
func (o *CancelPrepaidCardTransactionCriteria) SetPostChargeToRoom(v bool) {
	o.PostChargeToRoom = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetProfileId() UniqueIDType {
	if o == nil || IsNil(o.ProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given UniqueIDType and assigns it to the ProfileId field.
func (o *CancelPrepaidCardTransactionCriteria) SetProfileId(v UniqueIDType) {
	o.ProfileId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetReservationId() UniqueIDType {
	if o == nil || IsNil(o.ReservationId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetReservationIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given UniqueIDType and assigns it to the ReservationId field.
func (o *CancelPrepaidCardTransactionCriteria) SetReservationId(v UniqueIDType) {
	o.ReservationId = &v
}

// GetSaleCriteria returns the SaleCriteria field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetSaleCriteria() SaleCriteriaType {
	if o == nil || IsNil(o.SaleCriteria) {
		var ret SaleCriteriaType
		return ret
	}
	return *o.SaleCriteria
}

// GetSaleCriteriaOk returns a tuple with the SaleCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetSaleCriteriaOk() (*SaleCriteriaType, bool) {
	if o == nil || IsNil(o.SaleCriteria) {
		return nil, false
	}
	return o.SaleCriteria, true
}

// HasSaleCriteria returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasSaleCriteria() bool {
	if o != nil && !IsNil(o.SaleCriteria) {
		return true
	}

	return false
}

// SetSaleCriteria gets a reference to the given SaleCriteriaType and assigns it to the SaleCriteria field.
func (o *CancelPrepaidCardTransactionCriteria) SetSaleCriteria(v SaleCriteriaType) {
	o.SaleCriteria = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetTransactionNo() int32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret int32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetTransactionNoOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given int32 and assigns it to the TransactionNo field.
func (o *CancelPrepaidCardTransactionCriteria) SetTransactionNo(v int32) {
	o.TransactionNo = &v
}

// GetTransactionTye returns the TransactionTye field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetTransactionTye() PrepaidCardTrxTypeType {
	if o == nil || IsNil(o.TransactionTye) {
		var ret PrepaidCardTrxTypeType
		return ret
	}
	return *o.TransactionTye
}

// GetTransactionTyeOk returns a tuple with the TransactionTye field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetTransactionTyeOk() (*PrepaidCardTrxTypeType, bool) {
	if o == nil || IsNil(o.TransactionTye) {
		return nil, false
	}
	return o.TransactionTye, true
}

// HasTransactionTye returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasTransactionTye() bool {
	if o != nil && !IsNil(o.TransactionTye) {
		return true
	}

	return false
}

// SetTransactionTye gets a reference to the given PrepaidCardTrxTypeType and assigns it to the TransactionTye field.
func (o *CancelPrepaidCardTransactionCriteria) SetTransactionTye(v PrepaidCardTrxTypeType) {
	o.TransactionTye = &v
}

// GetVendorTransactionNo returns the VendorTransactionNo field value if set, zero value otherwise.
func (o *CancelPrepaidCardTransactionCriteria) GetVendorTransactionNo() string {
	if o == nil || IsNil(o.VendorTransactionNo) {
		var ret string
		return ret
	}
	return *o.VendorTransactionNo
}

// GetVendorTransactionNoOk returns a tuple with the VendorTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelPrepaidCardTransactionCriteria) GetVendorTransactionNoOk() (*string, bool) {
	if o == nil || IsNil(o.VendorTransactionNo) {
		return nil, false
	}
	return o.VendorTransactionNo, true
}

// HasVendorTransactionNo returns a boolean if a field has been set.
func (o *CancelPrepaidCardTransactionCriteria) HasVendorTransactionNo() bool {
	if o != nil && !IsNil(o.VendorTransactionNo) {
		return true
	}

	return false
}

// SetVendorTransactionNo gets a reference to the given string and assigns it to the VendorTransactionNo field.
func (o *CancelPrepaidCardTransactionCriteria) SetVendorTransactionNo(v string) {
	o.VendorTransactionNo = &v
}

func (o CancelPrepaidCardTransactionCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelPrepaidCardTransactionCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CardNo) {
		toSerialize["cardNo"] = o.CardNo
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.InterfaceId) {
		toSerialize["interfaceId"] = o.InterfaceId
	}
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	if !IsNil(o.PostChargeToRoom) {
		toSerialize["postChargeToRoom"] = o.PostChargeToRoom
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.SaleCriteria) {
		toSerialize["saleCriteria"] = o.SaleCriteria
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.TransactionTye) {
		toSerialize["transactionTye"] = o.TransactionTye
	}
	if !IsNil(o.VendorTransactionNo) {
		toSerialize["vendorTransactionNo"] = o.VendorTransactionNo
	}
	return toSerialize, nil
}

type NullableCancelPrepaidCardTransactionCriteria struct {
	value *CancelPrepaidCardTransactionCriteria
	isSet bool
}

func (v NullableCancelPrepaidCardTransactionCriteria) Get() *CancelPrepaidCardTransactionCriteria {
	return v.value
}

func (v *NullableCancelPrepaidCardTransactionCriteria) Set(val *CancelPrepaidCardTransactionCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelPrepaidCardTransactionCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelPrepaidCardTransactionCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelPrepaidCardTransactionCriteria(val *CancelPrepaidCardTransactionCriteria) *NullableCancelPrepaidCardTransactionCriteria {
	return &NullableCancelPrepaidCardTransactionCriteria{value: val, isSet: true}
}

func (v NullableCancelPrepaidCardTransactionCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelPrepaidCardTransactionCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


