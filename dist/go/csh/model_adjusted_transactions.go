/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the AdjustedTransactions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdjustedTransactions{}

// AdjustedTransactions Response for the adjustment of transactions request. Contains any errors or warnings.
type AdjustedTransactions struct {
	Links []InstanceLink `json:"links,omitempty"`
	// List of postings.
	ServiceRecoveryAdjustments []SummaryPostingType `json:"serviceRecoveryAdjustments,omitempty"`
	// List of Transaction codes info.
	TrxCodesInfo []TrxInfoType `json:"trxCodesInfo,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewAdjustedTransactions instantiates a new AdjustedTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdjustedTransactions() *AdjustedTransactions {
	this := AdjustedTransactions{}
	return &this
}

// NewAdjustedTransactionsWithDefaults instantiates a new AdjustedTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdjustedTransactionsWithDefaults() *AdjustedTransactions {
	this := AdjustedTransactions{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AdjustedTransactions) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdjustedTransactions) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AdjustedTransactions) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *AdjustedTransactions) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetServiceRecoveryAdjustments returns the ServiceRecoveryAdjustments field value if set, zero value otherwise.
func (o *AdjustedTransactions) GetServiceRecoveryAdjustments() []SummaryPostingType {
	if o == nil || IsNil(o.ServiceRecoveryAdjustments) {
		var ret []SummaryPostingType
		return ret
	}
	return o.ServiceRecoveryAdjustments
}

// GetServiceRecoveryAdjustmentsOk returns a tuple with the ServiceRecoveryAdjustments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdjustedTransactions) GetServiceRecoveryAdjustmentsOk() ([]SummaryPostingType, bool) {
	if o == nil || IsNil(o.ServiceRecoveryAdjustments) {
		return nil, false
	}
	return o.ServiceRecoveryAdjustments, true
}

// HasServiceRecoveryAdjustments returns a boolean if a field has been set.
func (o *AdjustedTransactions) HasServiceRecoveryAdjustments() bool {
	if o != nil && !IsNil(o.ServiceRecoveryAdjustments) {
		return true
	}

	return false
}

// SetServiceRecoveryAdjustments gets a reference to the given []SummaryPostingType and assigns it to the ServiceRecoveryAdjustments field.
func (o *AdjustedTransactions) SetServiceRecoveryAdjustments(v []SummaryPostingType) {
	o.ServiceRecoveryAdjustments = v
}

// GetTrxCodesInfo returns the TrxCodesInfo field value if set, zero value otherwise.
func (o *AdjustedTransactions) GetTrxCodesInfo() []TrxInfoType {
	if o == nil || IsNil(o.TrxCodesInfo) {
		var ret []TrxInfoType
		return ret
	}
	return o.TrxCodesInfo
}

// GetTrxCodesInfoOk returns a tuple with the TrxCodesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdjustedTransactions) GetTrxCodesInfoOk() ([]TrxInfoType, bool) {
	if o == nil || IsNil(o.TrxCodesInfo) {
		return nil, false
	}
	return o.TrxCodesInfo, true
}

// HasTrxCodesInfo returns a boolean if a field has been set.
func (o *AdjustedTransactions) HasTrxCodesInfo() bool {
	if o != nil && !IsNil(o.TrxCodesInfo) {
		return true
	}

	return false
}

// SetTrxCodesInfo gets a reference to the given []TrxInfoType and assigns it to the TrxCodesInfo field.
func (o *AdjustedTransactions) SetTrxCodesInfo(v []TrxInfoType) {
	o.TrxCodesInfo = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AdjustedTransactions) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdjustedTransactions) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AdjustedTransactions) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *AdjustedTransactions) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o AdjustedTransactions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdjustedTransactions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.ServiceRecoveryAdjustments) {
		toSerialize["serviceRecoveryAdjustments"] = o.ServiceRecoveryAdjustments
	}
	if !IsNil(o.TrxCodesInfo) {
		toSerialize["trxCodesInfo"] = o.TrxCodesInfo
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableAdjustedTransactions struct {
	value *AdjustedTransactions
	isSet bool
}

func (v NullableAdjustedTransactions) Get() *AdjustedTransactions {
	return v.value
}

func (v *NullableAdjustedTransactions) Set(val *AdjustedTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullableAdjustedTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullableAdjustedTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdjustedTransactions(val *AdjustedTransactions) *NullableAdjustedTransactions {
	return &NullableAdjustedTransactions{value: val, isSet: true}
}

func (v NullableAdjustedTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdjustedTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


