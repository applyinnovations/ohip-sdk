/*
OPERA Cloud Cashiering API

APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package csh

import (
	"encoding/json"
)

// checks if the DetailPostingTypeGuestInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailPostingTypeGuestInfo{}

// DetailPostingTypeGuestInfo Details of the Guest information where this transaction was posted to.
type DetailPostingTypeGuestInfo struct {
	// Confirmation number associated with the transaction.
	ConfirmationNo *string `json:"confirmationNo,omitempty"`
	// Guest name associated with the transaction.
	GuestName *string `json:"guestName,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Room number associated with the transaction.
	RoomId *string `json:"roomId,omitempty"`
}

// NewDetailPostingTypeGuestInfo instantiates a new DetailPostingTypeGuestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailPostingTypeGuestInfo() *DetailPostingTypeGuestInfo {
	this := DetailPostingTypeGuestInfo{}
	return &this
}

// NewDetailPostingTypeGuestInfoWithDefaults instantiates a new DetailPostingTypeGuestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailPostingTypeGuestInfoWithDefaults() *DetailPostingTypeGuestInfo {
	this := DetailPostingTypeGuestInfo{}
	return &this
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *DetailPostingTypeGuestInfo) GetConfirmationNo() string {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret string
		return ret
	}
	return *o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeGuestInfo) GetConfirmationNoOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *DetailPostingTypeGuestInfo) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given string and assigns it to the ConfirmationNo field.
func (o *DetailPostingTypeGuestInfo) SetConfirmationNo(v string) {
	o.ConfirmationNo = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *DetailPostingTypeGuestInfo) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeGuestInfo) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *DetailPostingTypeGuestInfo) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *DetailPostingTypeGuestInfo) SetGuestName(v string) {
	o.GuestName = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *DetailPostingTypeGuestInfo) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeGuestInfo) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *DetailPostingTypeGuestInfo) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *DetailPostingTypeGuestInfo) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *DetailPostingTypeGuestInfo) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeGuestInfo) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *DetailPostingTypeGuestInfo) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *DetailPostingTypeGuestInfo) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *DetailPostingTypeGuestInfo) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailPostingTypeGuestInfo) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *DetailPostingTypeGuestInfo) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *DetailPostingTypeGuestInfo) SetRoomId(v string) {
	o.RoomId = &v
}

func (o DetailPostingTypeGuestInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailPostingTypeGuestInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	return toSerialize, nil
}

type NullableDetailPostingTypeGuestInfo struct {
	value *DetailPostingTypeGuestInfo
	isSet bool
}

func (v NullableDetailPostingTypeGuestInfo) Get() *DetailPostingTypeGuestInfo {
	return v.value
}

func (v *NullableDetailPostingTypeGuestInfo) Set(val *DetailPostingTypeGuestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailPostingTypeGuestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailPostingTypeGuestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailPostingTypeGuestInfo(val *DetailPostingTypeGuestInfo) *NullableDetailPostingTypeGuestInfo {
	return &NullableDetailPostingTypeGuestInfo{value: val, isSet: true}
}

func (v NullableDetailPostingTypeGuestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailPostingTypeGuestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


