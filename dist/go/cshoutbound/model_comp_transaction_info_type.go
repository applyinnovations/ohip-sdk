/*
OPERA Cloud Cashiering Outbound API

APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cshoutbound

import (
	"encoding/json"
)

// checks if the CompTransactionInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompTransactionInfoType{}

// CompTransactionInfoType Transaction information being processed by the vendor.
type CompTransactionInfoType struct {
	// Transaction Number for which request is being submitted.
	TransactionId *float32 `json:"transactionId,omitempty"`
	// Transaction code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Transaction description.
	TransactionDescription *string `json:"transactionDescription,omitempty"`
	// Room number associated with the transaction.
	RoomId *string `json:"roomId,omitempty"`
	// Confirmation number associated with the transaction.
	ConfirmationNo *string `json:"confirmationNo,omitempty"`
	// Approval date of the posting.
	ApprovalDate *string `json:"approvalDate,omitempty"`
	// Approval status of the posting.
	ApprovalStatus *string `json:"approvalStatus,omitempty"`
	// Approval code of the posting.
	ApprovalCode *string `json:"approvalCode,omitempty"`
	// Approval message of the posting coming from the vendor.
	ApprovalMessage *string `json:"approvalMessage,omitempty"`
	Amount *CurrencyAmountType `json:"amount,omitempty"`
	// Family name, last name or Company Name.
	Name *string `json:"name,omitempty"`
	// Given name, first name or names.
	FirstName *string `json:"firstName,omitempty"`
}

// NewCompTransactionInfoType instantiates a new CompTransactionInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompTransactionInfoType() *CompTransactionInfoType {
	this := CompTransactionInfoType{}
	return &this
}

// NewCompTransactionInfoTypeWithDefaults instantiates a new CompTransactionInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompTransactionInfoTypeWithDefaults() *CompTransactionInfoType {
	this := CompTransactionInfoType{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetTransactionId() float32 {
	if o == nil || IsNil(o.TransactionId) {
		var ret float32
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetTransactionIdOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given float32 and assigns it to the TransactionId field.
func (o *CompTransactionInfoType) SetTransactionId(v float32) {
	o.TransactionId = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *CompTransactionInfoType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDescription returns the TransactionDescription field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetTransactionDescription() string {
	if o == nil || IsNil(o.TransactionDescription) {
		var ret string
		return ret
	}
	return *o.TransactionDescription
}

// GetTransactionDescriptionOk returns a tuple with the TransactionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetTransactionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDescription) {
		return nil, false
	}
	return o.TransactionDescription, true
}

// HasTransactionDescription returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasTransactionDescription() bool {
	if o != nil && !IsNil(o.TransactionDescription) {
		return true
	}

	return false
}

// SetTransactionDescription gets a reference to the given string and assigns it to the TransactionDescription field.
func (o *CompTransactionInfoType) SetTransactionDescription(v string) {
	o.TransactionDescription = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *CompTransactionInfoType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetConfirmationNo() string {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret string
		return ret
	}
	return *o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetConfirmationNoOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given string and assigns it to the ConfirmationNo field.
func (o *CompTransactionInfoType) SetConfirmationNo(v string) {
	o.ConfirmationNo = &v
}

// GetApprovalDate returns the ApprovalDate field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetApprovalDate() string {
	if o == nil || IsNil(o.ApprovalDate) {
		var ret string
		return ret
	}
	return *o.ApprovalDate
}

// GetApprovalDateOk returns a tuple with the ApprovalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetApprovalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalDate) {
		return nil, false
	}
	return o.ApprovalDate, true
}

// HasApprovalDate returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasApprovalDate() bool {
	if o != nil && !IsNil(o.ApprovalDate) {
		return true
	}

	return false
}

// SetApprovalDate gets a reference to the given string and assigns it to the ApprovalDate field.
func (o *CompTransactionInfoType) SetApprovalDate(v string) {
	o.ApprovalDate = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *CompTransactionInfoType) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetApprovalCode returns the ApprovalCode field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetApprovalCode() string {
	if o == nil || IsNil(o.ApprovalCode) {
		var ret string
		return ret
	}
	return *o.ApprovalCode
}

// GetApprovalCodeOk returns a tuple with the ApprovalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetApprovalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalCode) {
		return nil, false
	}
	return o.ApprovalCode, true
}

// HasApprovalCode returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasApprovalCode() bool {
	if o != nil && !IsNil(o.ApprovalCode) {
		return true
	}

	return false
}

// SetApprovalCode gets a reference to the given string and assigns it to the ApprovalCode field.
func (o *CompTransactionInfoType) SetApprovalCode(v string) {
	o.ApprovalCode = &v
}

// GetApprovalMessage returns the ApprovalMessage field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetApprovalMessage() string {
	if o == nil || IsNil(o.ApprovalMessage) {
		var ret string
		return ret
	}
	return *o.ApprovalMessage
}

// GetApprovalMessageOk returns a tuple with the ApprovalMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetApprovalMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalMessage) {
		return nil, false
	}
	return o.ApprovalMessage, true
}

// HasApprovalMessage returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasApprovalMessage() bool {
	if o != nil && !IsNil(o.ApprovalMessage) {
		return true
	}

	return false
}

// SetApprovalMessage gets a reference to the given string and assigns it to the ApprovalMessage field.
func (o *CompTransactionInfoType) SetApprovalMessage(v string) {
	o.ApprovalMessage = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *CompTransactionInfoType) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompTransactionInfoType) SetName(v string) {
	o.Name = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CompTransactionInfoType) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionInfoType) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CompTransactionInfoType) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CompTransactionInfoType) SetFirstName(v string) {
	o.FirstName = &v
}

func (o CompTransactionInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompTransactionInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDescription) {
		toSerialize["transactionDescription"] = o.TransactionDescription
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.ApprovalDate) {
		toSerialize["approvalDate"] = o.ApprovalDate
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.ApprovalCode) {
		toSerialize["approvalCode"] = o.ApprovalCode
	}
	if !IsNil(o.ApprovalMessage) {
		toSerialize["approvalMessage"] = o.ApprovalMessage
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	return toSerialize, nil
}

type NullableCompTransactionInfoType struct {
	value *CompTransactionInfoType
	isSet bool
}

func (v NullableCompTransactionInfoType) Get() *CompTransactionInfoType {
	return v.value
}

func (v *NullableCompTransactionInfoType) Set(val *CompTransactionInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompTransactionInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompTransactionInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompTransactionInfoType(val *CompTransactionInfoType) *NullableCompTransactionInfoType {
	return &NullableCompTransactionInfoType{value: val, isSet: true}
}

func (v NullableCompTransactionInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompTransactionInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


