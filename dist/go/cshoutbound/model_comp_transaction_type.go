/*
OPERA Cloud Cashiering Outbound API

APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cshoutbound

import (
	"encoding/json"
)

// checks if the CompTransactionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompTransactionType{}

// CompTransactionType Contains the transaction to be submitted to the vendor
type CompTransactionType struct {
	Amount *CurrencyAmountType `json:"amount,omitempty"`
	PostedAmount *CurrencyAmountType `json:"postedAmount,omitempty"`
	Debit *CurrencyAmountType `json:"debit,omitempty"`
	Credit *CurrencyAmountType `json:"credit,omitempty"`
	// Family name, last name or Company Name.
	Name *string `json:"name,omitempty"`
	// Given name, first name or names.
	FirstName *string `json:"firstName,omitempty"`
	// Membership number.
	MembershipId *string `json:"membershipId,omitempty"`
	// Membership number.
	MembershipType *string `json:"membershipType,omitempty"`
	// Approval date of the posting.
	ApprovalDate *string `json:"approvalDate,omitempty"`
	// Approval status of the posting.
	ApprovalStatus *string `json:"approvalStatus,omitempty"`
	// Approval code of the posting.
	ApprovalCode *string `json:"approvalCode,omitempty"`
	AuthorizerId *UniqueIDType `json:"authorizerId,omitempty"`
	GuestNameId *UniqueIDType `json:"guestNameId,omitempty"`
	ResvNameId *UniqueIDType `json:"resvNameId,omitempty"`
	// Confirmation number associated with the transaction.
	ConfirmationNo *string `json:"confirmationNo,omitempty"`
	// Room number associated with the transaction.
	RoomId *string `json:"roomId,omitempty"`
	// Comp number associated with the transaction.
	CompId *string `json:"compId,omitempty"`
	// Window number where the transaction is posted.
	FolioNo *float32 `json:"folioNo,omitempty"`
	// Subgroup for the transaction.
	SubGroup *string `json:"subGroup,omitempty"`
	TransactionAmount *CurrencyAmountType `json:"transactionAmount,omitempty"`
	// Transaction Number for which request is being submitted.
	TransactionId *float32 `json:"transactionId,omitempty"`
	// Transaction code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Transaction description.
	TransactionDescription *string `json:"transactionDescription,omitempty"`
	// Transaction status.
	TransactionStatus *string `json:"transactionStatus,omitempty"`
	// Transaction date of the posting.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// User name.
	UserName *string `json:"userName,omitempty"`
	ExternalUserId *UniqueIDType `json:"externalUserId,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
}

// NewCompTransactionType instantiates a new CompTransactionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompTransactionType() *CompTransactionType {
	this := CompTransactionType{}
	return &this
}

// NewCompTransactionTypeWithDefaults instantiates a new CompTransactionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompTransactionTypeWithDefaults() *CompTransactionType {
	this := CompTransactionType{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CompTransactionType) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CompTransactionType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *CompTransactionType) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

// GetPostedAmount returns the PostedAmount field value if set, zero value otherwise.
func (o *CompTransactionType) GetPostedAmount() CurrencyAmountType {
	if o == nil || IsNil(o.PostedAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PostedAmount
}

// GetPostedAmountOk returns a tuple with the PostedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetPostedAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PostedAmount) {
		return nil, false
	}
	return o.PostedAmount, true
}

// HasPostedAmount returns a boolean if a field has been set.
func (o *CompTransactionType) HasPostedAmount() bool {
	if o != nil && !IsNil(o.PostedAmount) {
		return true
	}

	return false
}

// SetPostedAmount gets a reference to the given CurrencyAmountType and assigns it to the PostedAmount field.
func (o *CompTransactionType) SetPostedAmount(v CurrencyAmountType) {
	o.PostedAmount = &v
}

// GetDebit returns the Debit field value if set, zero value otherwise.
func (o *CompTransactionType) GetDebit() CurrencyAmountType {
	if o == nil || IsNil(o.Debit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Debit
}

// GetDebitOk returns a tuple with the Debit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetDebitOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Debit) {
		return nil, false
	}
	return o.Debit, true
}

// HasDebit returns a boolean if a field has been set.
func (o *CompTransactionType) HasDebit() bool {
	if o != nil && !IsNil(o.Debit) {
		return true
	}

	return false
}

// SetDebit gets a reference to the given CurrencyAmountType and assigns it to the Debit field.
func (o *CompTransactionType) SetDebit(v CurrencyAmountType) {
	o.Debit = &v
}

// GetCredit returns the Credit field value if set, zero value otherwise.
func (o *CompTransactionType) GetCredit() CurrencyAmountType {
	if o == nil || IsNil(o.Credit) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Credit
}

// GetCreditOk returns a tuple with the Credit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetCreditOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Credit) {
		return nil, false
	}
	return o.Credit, true
}

// HasCredit returns a boolean if a field has been set.
func (o *CompTransactionType) HasCredit() bool {
	if o != nil && !IsNil(o.Credit) {
		return true
	}

	return false
}

// SetCredit gets a reference to the given CurrencyAmountType and assigns it to the Credit field.
func (o *CompTransactionType) SetCredit(v CurrencyAmountType) {
	o.Credit = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CompTransactionType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CompTransactionType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CompTransactionType) SetName(v string) {
	o.Name = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CompTransactionType) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CompTransactionType) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CompTransactionType) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *CompTransactionType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *CompTransactionType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *CompTransactionType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *CompTransactionType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *CompTransactionType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *CompTransactionType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetApprovalDate returns the ApprovalDate field value if set, zero value otherwise.
func (o *CompTransactionType) GetApprovalDate() string {
	if o == nil || IsNil(o.ApprovalDate) {
		var ret string
		return ret
	}
	return *o.ApprovalDate
}

// GetApprovalDateOk returns a tuple with the ApprovalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetApprovalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalDate) {
		return nil, false
	}
	return o.ApprovalDate, true
}

// HasApprovalDate returns a boolean if a field has been set.
func (o *CompTransactionType) HasApprovalDate() bool {
	if o != nil && !IsNil(o.ApprovalDate) {
		return true
	}

	return false
}

// SetApprovalDate gets a reference to the given string and assigns it to the ApprovalDate field.
func (o *CompTransactionType) SetApprovalDate(v string) {
	o.ApprovalDate = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *CompTransactionType) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *CompTransactionType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *CompTransactionType) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetApprovalCode returns the ApprovalCode field value if set, zero value otherwise.
func (o *CompTransactionType) GetApprovalCode() string {
	if o == nil || IsNil(o.ApprovalCode) {
		var ret string
		return ret
	}
	return *o.ApprovalCode
}

// GetApprovalCodeOk returns a tuple with the ApprovalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetApprovalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalCode) {
		return nil, false
	}
	return o.ApprovalCode, true
}

// HasApprovalCode returns a boolean if a field has been set.
func (o *CompTransactionType) HasApprovalCode() bool {
	if o != nil && !IsNil(o.ApprovalCode) {
		return true
	}

	return false
}

// SetApprovalCode gets a reference to the given string and assigns it to the ApprovalCode field.
func (o *CompTransactionType) SetApprovalCode(v string) {
	o.ApprovalCode = &v
}

// GetAuthorizerId returns the AuthorizerId field value if set, zero value otherwise.
func (o *CompTransactionType) GetAuthorizerId() UniqueIDType {
	if o == nil || IsNil(o.AuthorizerId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AuthorizerId
}

// GetAuthorizerIdOk returns a tuple with the AuthorizerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetAuthorizerIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AuthorizerId) {
		return nil, false
	}
	return o.AuthorizerId, true
}

// HasAuthorizerId returns a boolean if a field has been set.
func (o *CompTransactionType) HasAuthorizerId() bool {
	if o != nil && !IsNil(o.AuthorizerId) {
		return true
	}

	return false
}

// SetAuthorizerId gets a reference to the given UniqueIDType and assigns it to the AuthorizerId field.
func (o *CompTransactionType) SetAuthorizerId(v UniqueIDType) {
	o.AuthorizerId = &v
}

// GetGuestNameId returns the GuestNameId field value if set, zero value otherwise.
func (o *CompTransactionType) GetGuestNameId() UniqueIDType {
	if o == nil || IsNil(o.GuestNameId) {
		var ret UniqueIDType
		return ret
	}
	return *o.GuestNameId
}

// GetGuestNameIdOk returns a tuple with the GuestNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetGuestNameIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.GuestNameId) {
		return nil, false
	}
	return o.GuestNameId, true
}

// HasGuestNameId returns a boolean if a field has been set.
func (o *CompTransactionType) HasGuestNameId() bool {
	if o != nil && !IsNil(o.GuestNameId) {
		return true
	}

	return false
}

// SetGuestNameId gets a reference to the given UniqueIDType and assigns it to the GuestNameId field.
func (o *CompTransactionType) SetGuestNameId(v UniqueIDType) {
	o.GuestNameId = &v
}

// GetResvNameId returns the ResvNameId field value if set, zero value otherwise.
func (o *CompTransactionType) GetResvNameId() UniqueIDType {
	if o == nil || IsNil(o.ResvNameId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ResvNameId
}

// GetResvNameIdOk returns a tuple with the ResvNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetResvNameIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ResvNameId) {
		return nil, false
	}
	return o.ResvNameId, true
}

// HasResvNameId returns a boolean if a field has been set.
func (o *CompTransactionType) HasResvNameId() bool {
	if o != nil && !IsNil(o.ResvNameId) {
		return true
	}

	return false
}

// SetResvNameId gets a reference to the given UniqueIDType and assigns it to the ResvNameId field.
func (o *CompTransactionType) SetResvNameId(v UniqueIDType) {
	o.ResvNameId = &v
}

// GetConfirmationNo returns the ConfirmationNo field value if set, zero value otherwise.
func (o *CompTransactionType) GetConfirmationNo() string {
	if o == nil || IsNil(o.ConfirmationNo) {
		var ret string
		return ret
	}
	return *o.ConfirmationNo
}

// GetConfirmationNoOk returns a tuple with the ConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetConfirmationNoOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationNo) {
		return nil, false
	}
	return o.ConfirmationNo, true
}

// HasConfirmationNo returns a boolean if a field has been set.
func (o *CompTransactionType) HasConfirmationNo() bool {
	if o != nil && !IsNil(o.ConfirmationNo) {
		return true
	}

	return false
}

// SetConfirmationNo gets a reference to the given string and assigns it to the ConfirmationNo field.
func (o *CompTransactionType) SetConfirmationNo(v string) {
	o.ConfirmationNo = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *CompTransactionType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *CompTransactionType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *CompTransactionType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetCompId returns the CompId field value if set, zero value otherwise.
func (o *CompTransactionType) GetCompId() string {
	if o == nil || IsNil(o.CompId) {
		var ret string
		return ret
	}
	return *o.CompId
}

// GetCompIdOk returns a tuple with the CompId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetCompIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompId) {
		return nil, false
	}
	return o.CompId, true
}

// HasCompId returns a boolean if a field has been set.
func (o *CompTransactionType) HasCompId() bool {
	if o != nil && !IsNil(o.CompId) {
		return true
	}

	return false
}

// SetCompId gets a reference to the given string and assigns it to the CompId field.
func (o *CompTransactionType) SetCompId(v string) {
	o.CompId = &v
}

// GetFolioNo returns the FolioNo field value if set, zero value otherwise.
func (o *CompTransactionType) GetFolioNo() float32 {
	if o == nil || IsNil(o.FolioNo) {
		var ret float32
		return ret
	}
	return *o.FolioNo
}

// GetFolioNoOk returns a tuple with the FolioNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetFolioNoOk() (*float32, bool) {
	if o == nil || IsNil(o.FolioNo) {
		return nil, false
	}
	return o.FolioNo, true
}

// HasFolioNo returns a boolean if a field has been set.
func (o *CompTransactionType) HasFolioNo() bool {
	if o != nil && !IsNil(o.FolioNo) {
		return true
	}

	return false
}

// SetFolioNo gets a reference to the given float32 and assigns it to the FolioNo field.
func (o *CompTransactionType) SetFolioNo(v float32) {
	o.FolioNo = &v
}

// GetSubGroup returns the SubGroup field value if set, zero value otherwise.
func (o *CompTransactionType) GetSubGroup() string {
	if o == nil || IsNil(o.SubGroup) {
		var ret string
		return ret
	}
	return *o.SubGroup
}

// GetSubGroupOk returns a tuple with the SubGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetSubGroupOk() (*string, bool) {
	if o == nil || IsNil(o.SubGroup) {
		return nil, false
	}
	return o.SubGroup, true
}

// HasSubGroup returns a boolean if a field has been set.
func (o *CompTransactionType) HasSubGroup() bool {
	if o != nil && !IsNil(o.SubGroup) {
		return true
	}

	return false
}

// SetSubGroup gets a reference to the given string and assigns it to the SubGroup field.
func (o *CompTransactionType) SetSubGroup(v string) {
	o.SubGroup = &v
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionAmount() CurrencyAmountType {
	if o == nil || IsNil(o.TransactionAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TransactionAmount) {
		return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionAmount() bool {
	if o != nil && !IsNil(o.TransactionAmount) {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given CurrencyAmountType and assigns it to the TransactionAmount field.
func (o *CompTransactionType) SetTransactionAmount(v CurrencyAmountType) {
	o.TransactionAmount = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionId() float32 {
	if o == nil || IsNil(o.TransactionId) {
		var ret float32
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionIdOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given float32 and assigns it to the TransactionId field.
func (o *CompTransactionType) SetTransactionId(v float32) {
	o.TransactionId = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *CompTransactionType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDescription returns the TransactionDescription field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionDescription() string {
	if o == nil || IsNil(o.TransactionDescription) {
		var ret string
		return ret
	}
	return *o.TransactionDescription
}

// GetTransactionDescriptionOk returns a tuple with the TransactionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDescription) {
		return nil, false
	}
	return o.TransactionDescription, true
}

// HasTransactionDescription returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionDescription() bool {
	if o != nil && !IsNil(o.TransactionDescription) {
		return true
	}

	return false
}

// SetTransactionDescription gets a reference to the given string and assigns it to the TransactionDescription field.
func (o *CompTransactionType) SetTransactionDescription(v string) {
	o.TransactionDescription = &v
}

// GetTransactionStatus returns the TransactionStatus field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionStatus() string {
	if o == nil || IsNil(o.TransactionStatus) {
		var ret string
		return ret
	}
	return *o.TransactionStatus
}

// GetTransactionStatusOk returns a tuple with the TransactionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionStatus) {
		return nil, false
	}
	return o.TransactionStatus, true
}

// HasTransactionStatus returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionStatus() bool {
	if o != nil && !IsNil(o.TransactionStatus) {
		return true
	}

	return false
}

// SetTransactionStatus gets a reference to the given string and assigns it to the TransactionStatus field.
func (o *CompTransactionType) SetTransactionStatus(v string) {
	o.TransactionStatus = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *CompTransactionType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *CompTransactionType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *CompTransactionType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *CompTransactionType) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *CompTransactionType) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *CompTransactionType) SetUserName(v string) {
	o.UserName = &v
}

// GetExternalUserId returns the ExternalUserId field value if set, zero value otherwise.
func (o *CompTransactionType) GetExternalUserId() UniqueIDType {
	if o == nil || IsNil(o.ExternalUserId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetExternalUserIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ExternalUserId) {
		return nil, false
	}
	return o.ExternalUserId, true
}

// HasExternalUserId returns a boolean if a field has been set.
func (o *CompTransactionType) HasExternalUserId() bool {
	if o != nil && !IsNil(o.ExternalUserId) {
		return true
	}

	return false
}

// SetExternalUserId gets a reference to the given UniqueIDType and assigns it to the ExternalUserId field.
func (o *CompTransactionType) SetExternalUserId(v UniqueIDType) {
	o.ExternalUserId = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *CompTransactionType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *CompTransactionType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *CompTransactionType) SetCashierId(v float32) {
	o.CashierId = &v
}

func (o CompTransactionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompTransactionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.PostedAmount) {
		toSerialize["postedAmount"] = o.PostedAmount
	}
	if !IsNil(o.Debit) {
		toSerialize["debit"] = o.Debit
	}
	if !IsNil(o.Credit) {
		toSerialize["credit"] = o.Credit
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.ApprovalDate) {
		toSerialize["approvalDate"] = o.ApprovalDate
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.ApprovalCode) {
		toSerialize["approvalCode"] = o.ApprovalCode
	}
	if !IsNil(o.AuthorizerId) {
		toSerialize["authorizerId"] = o.AuthorizerId
	}
	if !IsNil(o.GuestNameId) {
		toSerialize["guestNameId"] = o.GuestNameId
	}
	if !IsNil(o.ResvNameId) {
		toSerialize["resvNameId"] = o.ResvNameId
	}
	if !IsNil(o.ConfirmationNo) {
		toSerialize["confirmationNo"] = o.ConfirmationNo
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.CompId) {
		toSerialize["compId"] = o.CompId
	}
	if !IsNil(o.FolioNo) {
		toSerialize["folioNo"] = o.FolioNo
	}
	if !IsNil(o.SubGroup) {
		toSerialize["subGroup"] = o.SubGroup
	}
	if !IsNil(o.TransactionAmount) {
		toSerialize["transactionAmount"] = o.TransactionAmount
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDescription) {
		toSerialize["transactionDescription"] = o.TransactionDescription
	}
	if !IsNil(o.TransactionStatus) {
		toSerialize["transactionStatus"] = o.TransactionStatus
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.ExternalUserId) {
		toSerialize["externalUserId"] = o.ExternalUserId
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	return toSerialize, nil
}

type NullableCompTransactionType struct {
	value *CompTransactionType
	isSet bool
}

func (v NullableCompTransactionType) Get() *CompTransactionType {
	return v.value
}

func (v *NullableCompTransactionType) Set(val *CompTransactionType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompTransactionType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompTransactionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompTransactionType(val *CompTransactionType) *NullableCompTransactionType {
	return &NullableCompTransactionType{value: val, isSet: true}
}

func (v NullableCompTransactionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompTransactionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


