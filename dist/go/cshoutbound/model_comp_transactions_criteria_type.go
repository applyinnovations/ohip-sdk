/*
OPERA Cloud Cashiering Outbound API

APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cshoutbound

import (
	"encoding/json"
)

// checks if the CompTransactionsCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompTransactionsCriteriaType{}

// CompTransactionsCriteriaType Contains all transactions to be submitted to the vendor
type CompTransactionsCriteriaType struct {
	// List of transactions to be submitted to the vendor.
	CompPostings []CompTransactionType `json:"compPostings,omitempty"`
}

// NewCompTransactionsCriteriaType instantiates a new CompTransactionsCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompTransactionsCriteriaType() *CompTransactionsCriteriaType {
	this := CompTransactionsCriteriaType{}
	return &this
}

// NewCompTransactionsCriteriaTypeWithDefaults instantiates a new CompTransactionsCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompTransactionsCriteriaTypeWithDefaults() *CompTransactionsCriteriaType {
	this := CompTransactionsCriteriaType{}
	return &this
}

// GetCompPostings returns the CompPostings field value if set, zero value otherwise.
func (o *CompTransactionsCriteriaType) GetCompPostings() []CompTransactionType {
	if o == nil || IsNil(o.CompPostings) {
		var ret []CompTransactionType
		return ret
	}
	return o.CompPostings
}

// GetCompPostingsOk returns a tuple with the CompPostings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompTransactionsCriteriaType) GetCompPostingsOk() ([]CompTransactionType, bool) {
	if o == nil || IsNil(o.CompPostings) {
		return nil, false
	}
	return o.CompPostings, true
}

// HasCompPostings returns a boolean if a field has been set.
func (o *CompTransactionsCriteriaType) HasCompPostings() bool {
	if o != nil && !IsNil(o.CompPostings) {
		return true
	}

	return false
}

// SetCompPostings gets a reference to the given []CompTransactionType and assigns it to the CompPostings field.
func (o *CompTransactionsCriteriaType) SetCompPostings(v []CompTransactionType) {
	o.CompPostings = v
}

func (o CompTransactionsCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompTransactionsCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompPostings) {
		toSerialize["compPostings"] = o.CompPostings
	}
	return toSerialize, nil
}

type NullableCompTransactionsCriteriaType struct {
	value *CompTransactionsCriteriaType
	isSet bool
}

func (v NullableCompTransactionsCriteriaType) Get() *CompTransactionsCriteriaType {
	return v.value
}

func (v *NullableCompTransactionsCriteriaType) Set(val *CompTransactionsCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompTransactionsCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompTransactionsCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompTransactionsCriteriaType(val *CompTransactionsCriteriaType) *NullableCompTransactionsCriteriaType {
	return &NullableCompTransactionsCriteriaType{value: val, isSet: true}
}

func (v NullableCompTransactionsCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompTransactionsCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


