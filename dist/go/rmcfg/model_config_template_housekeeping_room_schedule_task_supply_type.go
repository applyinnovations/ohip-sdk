/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the ConfigTemplateHousekeepingRoomScheduleTaskSupplyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigTemplateHousekeepingRoomScheduleTaskSupplyType{}

// ConfigTemplateHousekeepingRoomScheduleTaskSupplyType Type to indicate associated supply codes for the template task
type ConfigTemplateHousekeepingRoomScheduleTaskSupplyType struct {
	// Supply code value.
	Code *string `json:"code,omitempty"`
	// Description of the supply code.
	Description *string `json:"description,omitempty"`
	// Number of the items to be provided for this task.
	Quantity *int32 `json:"quantity,omitempty"`
	// Used to store the housekeeping room schedule sequence.
	Sequence *int32 `json:"sequence,omitempty"`
	RoomType *CodeDescriptionType `json:"roomType,omitempty"`
	// Specifies the housekeeping room schedule code.
	HousekeepingRoomScheduleCode *string `json:"housekeepingRoomScheduleCode,omitempty"`
	ManagedBy *ManagedByOptions `json:"managedBy,omitempty"`
}

// NewConfigTemplateHousekeepingRoomScheduleTaskSupplyType instantiates a new ConfigTemplateHousekeepingRoomScheduleTaskSupplyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigTemplateHousekeepingRoomScheduleTaskSupplyType() *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType {
	this := ConfigTemplateHousekeepingRoomScheduleTaskSupplyType{}
	return &this
}

// NewConfigTemplateHousekeepingRoomScheduleTaskSupplyTypeWithDefaults instantiates a new ConfigTemplateHousekeepingRoomScheduleTaskSupplyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigTemplateHousekeepingRoomScheduleTaskSupplyTypeWithDefaults() *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType {
	this := ConfigTemplateHousekeepingRoomScheduleTaskSupplyType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetDescription(v string) {
	o.Description = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetRoomType() CodeDescriptionType {
	if o == nil || IsNil(o.RoomType) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetRoomTypeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given CodeDescriptionType and assigns it to the RoomType field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetRoomType(v CodeDescriptionType) {
	o.RoomType = &v
}

// GetHousekeepingRoomScheduleCode returns the HousekeepingRoomScheduleCode field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetHousekeepingRoomScheduleCode() string {
	if o == nil || IsNil(o.HousekeepingRoomScheduleCode) {
		var ret string
		return ret
	}
	return *o.HousekeepingRoomScheduleCode
}

// GetHousekeepingRoomScheduleCodeOk returns a tuple with the HousekeepingRoomScheduleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetHousekeepingRoomScheduleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.HousekeepingRoomScheduleCode) {
		return nil, false
	}
	return o.HousekeepingRoomScheduleCode, true
}

// HasHousekeepingRoomScheduleCode returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasHousekeepingRoomScheduleCode() bool {
	if o != nil && !IsNil(o.HousekeepingRoomScheduleCode) {
		return true
	}

	return false
}

// SetHousekeepingRoomScheduleCode gets a reference to the given string and assigns it to the HousekeepingRoomScheduleCode field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetHousekeepingRoomScheduleCode(v string) {
	o.HousekeepingRoomScheduleCode = &v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetManagedBy() ManagedByOptions {
	if o == nil || IsNil(o.ManagedBy) {
		var ret ManagedByOptions
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) GetManagedByOk() (*ManagedByOptions, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given ManagedByOptions and assigns it to the ManagedBy field.
func (o *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) SetManagedBy(v ManagedByOptions) {
	o.ManagedBy = &v
}

func (o ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.HousekeepingRoomScheduleCode) {
		toSerialize["housekeepingRoomScheduleCode"] = o.HousekeepingRoomScheduleCode
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managedBy"] = o.ManagedBy
	}
	return toSerialize, nil
}

type NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType struct {
	value *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType
	isSet bool
}

func (v NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) Get() *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType {
	return v.value
}

func (v *NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) Set(val *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType(val *ConfigTemplateHousekeepingRoomScheduleTaskSupplyType) *NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType {
	return &NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType{value: val, isSet: true}
}

func (v NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigTemplateHousekeepingRoomScheduleTaskSupplyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


