/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the RoomTypeAttributesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomTypeAttributesType{}

// RoomTypeAttributesType Attributes of property room type.
type RoomTypeAttributesType struct {
	// Default occupancy of property room type.
	DefaultOccupancy *int32 `json:"defaultOccupancy,omitempty"`
	// Max occupancy of property room type.
	MaximumOccupancy *int32 `json:"maximumOccupancy,omitempty"`
	// Number of physical rooms of property room type.
	NoOfPhysicalRooms *int32 `json:"noOfPhysicalRooms,omitempty"`
	// Minimum occupancy of property room type.
	MinimumOccupancy *int32 `json:"minimumOccupancy,omitempty"`
	// Maximum adult occupancy of property room type.
	MaximumAdults *int32 `json:"maximumAdults,omitempty"`
	// Maximum children occupancy of property room type.
	MaximumChildren *int32 `json:"maximumChildren,omitempty"`
}

// NewRoomTypeAttributesType instantiates a new RoomTypeAttributesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomTypeAttributesType() *RoomTypeAttributesType {
	this := RoomTypeAttributesType{}
	return &this
}

// NewRoomTypeAttributesTypeWithDefaults instantiates a new RoomTypeAttributesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomTypeAttributesTypeWithDefaults() *RoomTypeAttributesType {
	this := RoomTypeAttributesType{}
	return &this
}

// GetDefaultOccupancy returns the DefaultOccupancy field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetDefaultOccupancy() int32 {
	if o == nil || IsNil(o.DefaultOccupancy) {
		var ret int32
		return ret
	}
	return *o.DefaultOccupancy
}

// GetDefaultOccupancyOk returns a tuple with the DefaultOccupancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetDefaultOccupancyOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultOccupancy) {
		return nil, false
	}
	return o.DefaultOccupancy, true
}

// HasDefaultOccupancy returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasDefaultOccupancy() bool {
	if o != nil && !IsNil(o.DefaultOccupancy) {
		return true
	}

	return false
}

// SetDefaultOccupancy gets a reference to the given int32 and assigns it to the DefaultOccupancy field.
func (o *RoomTypeAttributesType) SetDefaultOccupancy(v int32) {
	o.DefaultOccupancy = &v
}

// GetMaximumOccupancy returns the MaximumOccupancy field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetMaximumOccupancy() int32 {
	if o == nil || IsNil(o.MaximumOccupancy) {
		var ret int32
		return ret
	}
	return *o.MaximumOccupancy
}

// GetMaximumOccupancyOk returns a tuple with the MaximumOccupancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetMaximumOccupancyOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumOccupancy) {
		return nil, false
	}
	return o.MaximumOccupancy, true
}

// HasMaximumOccupancy returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasMaximumOccupancy() bool {
	if o != nil && !IsNil(o.MaximumOccupancy) {
		return true
	}

	return false
}

// SetMaximumOccupancy gets a reference to the given int32 and assigns it to the MaximumOccupancy field.
func (o *RoomTypeAttributesType) SetMaximumOccupancy(v int32) {
	o.MaximumOccupancy = &v
}

// GetNoOfPhysicalRooms returns the NoOfPhysicalRooms field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetNoOfPhysicalRooms() int32 {
	if o == nil || IsNil(o.NoOfPhysicalRooms) {
		var ret int32
		return ret
	}
	return *o.NoOfPhysicalRooms
}

// GetNoOfPhysicalRoomsOk returns a tuple with the NoOfPhysicalRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetNoOfPhysicalRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfPhysicalRooms) {
		return nil, false
	}
	return o.NoOfPhysicalRooms, true
}

// HasNoOfPhysicalRooms returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasNoOfPhysicalRooms() bool {
	if o != nil && !IsNil(o.NoOfPhysicalRooms) {
		return true
	}

	return false
}

// SetNoOfPhysicalRooms gets a reference to the given int32 and assigns it to the NoOfPhysicalRooms field.
func (o *RoomTypeAttributesType) SetNoOfPhysicalRooms(v int32) {
	o.NoOfPhysicalRooms = &v
}

// GetMinimumOccupancy returns the MinimumOccupancy field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetMinimumOccupancy() int32 {
	if o == nil || IsNil(o.MinimumOccupancy) {
		var ret int32
		return ret
	}
	return *o.MinimumOccupancy
}

// GetMinimumOccupancyOk returns a tuple with the MinimumOccupancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetMinimumOccupancyOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumOccupancy) {
		return nil, false
	}
	return o.MinimumOccupancy, true
}

// HasMinimumOccupancy returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasMinimumOccupancy() bool {
	if o != nil && !IsNil(o.MinimumOccupancy) {
		return true
	}

	return false
}

// SetMinimumOccupancy gets a reference to the given int32 and assigns it to the MinimumOccupancy field.
func (o *RoomTypeAttributesType) SetMinimumOccupancy(v int32) {
	o.MinimumOccupancy = &v
}

// GetMaximumAdults returns the MaximumAdults field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetMaximumAdults() int32 {
	if o == nil || IsNil(o.MaximumAdults) {
		var ret int32
		return ret
	}
	return *o.MaximumAdults
}

// GetMaximumAdultsOk returns a tuple with the MaximumAdults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetMaximumAdultsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumAdults) {
		return nil, false
	}
	return o.MaximumAdults, true
}

// HasMaximumAdults returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasMaximumAdults() bool {
	if o != nil && !IsNil(o.MaximumAdults) {
		return true
	}

	return false
}

// SetMaximumAdults gets a reference to the given int32 and assigns it to the MaximumAdults field.
func (o *RoomTypeAttributesType) SetMaximumAdults(v int32) {
	o.MaximumAdults = &v
}

// GetMaximumChildren returns the MaximumChildren field value if set, zero value otherwise.
func (o *RoomTypeAttributesType) GetMaximumChildren() int32 {
	if o == nil || IsNil(o.MaximumChildren) {
		var ret int32
		return ret
	}
	return *o.MaximumChildren
}

// GetMaximumChildrenOk returns a tuple with the MaximumChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeAttributesType) GetMaximumChildrenOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumChildren) {
		return nil, false
	}
	return o.MaximumChildren, true
}

// HasMaximumChildren returns a boolean if a field has been set.
func (o *RoomTypeAttributesType) HasMaximumChildren() bool {
	if o != nil && !IsNil(o.MaximumChildren) {
		return true
	}

	return false
}

// SetMaximumChildren gets a reference to the given int32 and assigns it to the MaximumChildren field.
func (o *RoomTypeAttributesType) SetMaximumChildren(v int32) {
	o.MaximumChildren = &v
}

func (o RoomTypeAttributesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomTypeAttributesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultOccupancy) {
		toSerialize["defaultOccupancy"] = o.DefaultOccupancy
	}
	if !IsNil(o.MaximumOccupancy) {
		toSerialize["maximumOccupancy"] = o.MaximumOccupancy
	}
	if !IsNil(o.NoOfPhysicalRooms) {
		toSerialize["noOfPhysicalRooms"] = o.NoOfPhysicalRooms
	}
	if !IsNil(o.MinimumOccupancy) {
		toSerialize["minimumOccupancy"] = o.MinimumOccupancy
	}
	if !IsNil(o.MaximumAdults) {
		toSerialize["maximumAdults"] = o.MaximumAdults
	}
	if !IsNil(o.MaximumChildren) {
		toSerialize["maximumChildren"] = o.MaximumChildren
	}
	return toSerialize, nil
}

type NullableRoomTypeAttributesType struct {
	value *RoomTypeAttributesType
	isSet bool
}

func (v NullableRoomTypeAttributesType) Get() *RoomTypeAttributesType {
	return v.value
}

func (v *NullableRoomTypeAttributesType) Set(val *RoomTypeAttributesType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomTypeAttributesType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomTypeAttributesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomTypeAttributesType(val *RoomTypeAttributesType) *NullableRoomTypeAttributesType {
	return &NullableRoomTypeAttributesType{value: val, isSet: true}
}

func (v NullableRoomTypeAttributesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomTypeAttributesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


