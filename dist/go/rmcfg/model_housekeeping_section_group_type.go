/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the HousekeepingSectionGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HousekeepingSectionGroupType{}

// HousekeepingSectionGroupType Detailed information of Housekeeping Section Group.
type HousekeepingSectionGroupType struct {
	// Property of the Housekeeping section group.
	HotelId *string `json:"hotelId,omitempty"`
	// Housekeeping Section Group Code.
	Code *string `json:"code,omitempty"`
	// Description of the Housekeeping Section Group.
	Description *string `json:"description,omitempty"`
	// Target Credit for each task Sheet when auto task assignment is broken out per Section Group.
	TargetCredits *int32 `json:"targetCredits,omitempty"`
	// Display sequence when task assignment is automatically broken out by Section Group.
	Sequence *int32 `json:"sequence,omitempty"`
	// Rooms count for this section group. This is auto populated while creating/fetching record.
	Rooms *int32 `json:"rooms,omitempty"`
	// Number of housekeeping credits. This is auto populated while creating/fetching record.
	RoomCredits *int32 `json:"roomCredits,omitempty"`
}

// NewHousekeepingSectionGroupType instantiates a new HousekeepingSectionGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHousekeepingSectionGroupType() *HousekeepingSectionGroupType {
	this := HousekeepingSectionGroupType{}
	return &this
}

// NewHousekeepingSectionGroupTypeWithDefaults instantiates a new HousekeepingSectionGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHousekeepingSectionGroupTypeWithDefaults() *HousekeepingSectionGroupType {
	this := HousekeepingSectionGroupType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *HousekeepingSectionGroupType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *HousekeepingSectionGroupType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HousekeepingSectionGroupType) SetDescription(v string) {
	o.Description = &v
}

// GetTargetCredits returns the TargetCredits field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetTargetCredits() int32 {
	if o == nil || IsNil(o.TargetCredits) {
		var ret int32
		return ret
	}
	return *o.TargetCredits
}

// GetTargetCreditsOk returns a tuple with the TargetCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetTargetCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetCredits) {
		return nil, false
	}
	return o.TargetCredits, true
}

// HasTargetCredits returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasTargetCredits() bool {
	if o != nil && !IsNil(o.TargetCredits) {
		return true
	}

	return false
}

// SetTargetCredits gets a reference to the given int32 and assigns it to the TargetCredits field.
func (o *HousekeepingSectionGroupType) SetTargetCredits(v int32) {
	o.TargetCredits = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *HousekeepingSectionGroupType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetRooms returns the Rooms field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetRooms() int32 {
	if o == nil || IsNil(o.Rooms) {
		var ret int32
		return ret
	}
	return *o.Rooms
}

// GetRoomsOk returns a tuple with the Rooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetRoomsOk() (*int32, bool) {
	if o == nil || IsNil(o.Rooms) {
		return nil, false
	}
	return o.Rooms, true
}

// HasRooms returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasRooms() bool {
	if o != nil && !IsNil(o.Rooms) {
		return true
	}

	return false
}

// SetRooms gets a reference to the given int32 and assigns it to the Rooms field.
func (o *HousekeepingSectionGroupType) SetRooms(v int32) {
	o.Rooms = &v
}

// GetRoomCredits returns the RoomCredits field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupType) GetRoomCredits() int32 {
	if o == nil || IsNil(o.RoomCredits) {
		var ret int32
		return ret
	}
	return *o.RoomCredits
}

// GetRoomCreditsOk returns a tuple with the RoomCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupType) GetRoomCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomCredits) {
		return nil, false
	}
	return o.RoomCredits, true
}

// HasRoomCredits returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupType) HasRoomCredits() bool {
	if o != nil && !IsNil(o.RoomCredits) {
		return true
	}

	return false
}

// SetRoomCredits gets a reference to the given int32 and assigns it to the RoomCredits field.
func (o *HousekeepingSectionGroupType) SetRoomCredits(v int32) {
	o.RoomCredits = &v
}

func (o HousekeepingSectionGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HousekeepingSectionGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TargetCredits) {
		toSerialize["targetCredits"] = o.TargetCredits
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Rooms) {
		toSerialize["rooms"] = o.Rooms
	}
	if !IsNil(o.RoomCredits) {
		toSerialize["roomCredits"] = o.RoomCredits
	}
	return toSerialize, nil
}

type NullableHousekeepingSectionGroupType struct {
	value *HousekeepingSectionGroupType
	isSet bool
}

func (v NullableHousekeepingSectionGroupType) Get() *HousekeepingSectionGroupType {
	return v.value
}

func (v *NullableHousekeepingSectionGroupType) Set(val *HousekeepingSectionGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableHousekeepingSectionGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableHousekeepingSectionGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHousekeepingSectionGroupType(val *HousekeepingSectionGroupType) *NullableHousekeepingSectionGroupType {
	return &NullableHousekeepingSectionGroupType{value: val, isSet: true}
}

func (v NullableHousekeepingSectionGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHousekeepingSectionGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


