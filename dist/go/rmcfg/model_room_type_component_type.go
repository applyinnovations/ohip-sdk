/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the RoomTypeComponentType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomTypeComponentType{}

// RoomTypeComponentType Room component and its quantity for the component room type.
type RoomTypeComponentType struct {
	// Description of room component.
	Description *string `json:"description,omitempty"`
	// Quantity of room component for the component room type.
	Qty *int32 `json:"qty,omitempty"`
	RoomType *string `json:"roomType,omitempty"`
}

// NewRoomTypeComponentType instantiates a new RoomTypeComponentType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomTypeComponentType() *RoomTypeComponentType {
	this := RoomTypeComponentType{}
	return &this
}

// NewRoomTypeComponentTypeWithDefaults instantiates a new RoomTypeComponentType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomTypeComponentTypeWithDefaults() *RoomTypeComponentType {
	this := RoomTypeComponentType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoomTypeComponentType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeComponentType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoomTypeComponentType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoomTypeComponentType) SetDescription(v string) {
	o.Description = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *RoomTypeComponentType) GetQty() int32 {
	if o == nil || IsNil(o.Qty) {
		var ret int32
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeComponentType) GetQtyOk() (*int32, bool) {
	if o == nil || IsNil(o.Qty) {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *RoomTypeComponentType) HasQty() bool {
	if o != nil && !IsNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given int32 and assigns it to the Qty field.
func (o *RoomTypeComponentType) SetQty(v int32) {
	o.Qty = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *RoomTypeComponentType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeComponentType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *RoomTypeComponentType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *RoomTypeComponentType) SetRoomType(v string) {
	o.RoomType = &v
}

func (o RoomTypeComponentType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomTypeComponentType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	return toSerialize, nil
}

type NullableRoomTypeComponentType struct {
	value *RoomTypeComponentType
	isSet bool
}

func (v NullableRoomTypeComponentType) Get() *RoomTypeComponentType {
	return v.value
}

func (v *NullableRoomTypeComponentType) Set(val *RoomTypeComponentType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomTypeComponentType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomTypeComponentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomTypeComponentType(val *RoomTypeComponentType) *NullableRoomTypeComponentType {
	return &NullableRoomTypeComponentType{value: val, isSet: true}
}

func (v NullableRoomTypeComponentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomTypeComponentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


