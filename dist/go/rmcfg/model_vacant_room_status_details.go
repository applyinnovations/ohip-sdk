/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the VacantRoomStatusDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VacantRoomStatusDetails{}

// VacantRoomStatusDetails The request element used to create a vacant room statuses.
type VacantRoomStatusDetails struct {
	// Room Type of the room.
	RoomTypes []string `json:"roomTypes,omitempty"`
	// The starting value of the date range. By default this would be the current business date.
	BeginDate *string `json:"beginDate,omitempty"`
	// The ending value of the date range. The time span between the endDate and the beginDate must not exceed two years.
	EndDate *string `json:"endDate,omitempty"`
	// Number of days to change room status of those rooms that are vacant from X number of days.
	NumberOfDays *float32 `json:"numberOfDays,omitempty"`
	HouseKeepingRoomStatus *HousekeepingRoomStatusType `json:"houseKeepingRoomStatus,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewVacantRoomStatusDetails instantiates a new VacantRoomStatusDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVacantRoomStatusDetails() *VacantRoomStatusDetails {
	this := VacantRoomStatusDetails{}
	return &this
}

// NewVacantRoomStatusDetailsWithDefaults instantiates a new VacantRoomStatusDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVacantRoomStatusDetailsWithDefaults() *VacantRoomStatusDetails {
	this := VacantRoomStatusDetails{}
	return &this
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetRoomTypes() []string {
	if o == nil || IsNil(o.RoomTypes) {
		var ret []string
		return ret
	}
	return o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetRoomTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given []string and assigns it to the RoomTypes field.
func (o *VacantRoomStatusDetails) SetRoomTypes(v []string) {
	o.RoomTypes = v
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetBeginDate() string {
	if o == nil || IsNil(o.BeginDate) {
		var ret string
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.BeginDate) {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasBeginDate() bool {
	if o != nil && !IsNil(o.BeginDate) {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given string and assigns it to the BeginDate field.
func (o *VacantRoomStatusDetails) SetBeginDate(v string) {
	o.BeginDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *VacantRoomStatusDetails) SetEndDate(v string) {
	o.EndDate = &v
}

// GetNumberOfDays returns the NumberOfDays field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetNumberOfDays() float32 {
	if o == nil || IsNil(o.NumberOfDays) {
		var ret float32
		return ret
	}
	return *o.NumberOfDays
}

// GetNumberOfDaysOk returns a tuple with the NumberOfDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetNumberOfDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.NumberOfDays) {
		return nil, false
	}
	return o.NumberOfDays, true
}

// HasNumberOfDays returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasNumberOfDays() bool {
	if o != nil && !IsNil(o.NumberOfDays) {
		return true
	}

	return false
}

// SetNumberOfDays gets a reference to the given float32 and assigns it to the NumberOfDays field.
func (o *VacantRoomStatusDetails) SetNumberOfDays(v float32) {
	o.NumberOfDays = &v
}

// GetHouseKeepingRoomStatus returns the HouseKeepingRoomStatus field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetHouseKeepingRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.HouseKeepingRoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.HouseKeepingRoomStatus
}

// GetHouseKeepingRoomStatusOk returns a tuple with the HouseKeepingRoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetHouseKeepingRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.HouseKeepingRoomStatus) {
		return nil, false
	}
	return o.HouseKeepingRoomStatus, true
}

// HasHouseKeepingRoomStatus returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasHouseKeepingRoomStatus() bool {
	if o != nil && !IsNil(o.HouseKeepingRoomStatus) {
		return true
	}

	return false
}

// SetHouseKeepingRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the HouseKeepingRoomStatus field.
func (o *VacantRoomStatusDetails) SetHouseKeepingRoomStatus(v HousekeepingRoomStatusType) {
	o.HouseKeepingRoomStatus = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *VacantRoomStatusDetails) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *VacantRoomStatusDetails) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusDetails) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *VacantRoomStatusDetails) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *VacantRoomStatusDetails) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o VacantRoomStatusDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VacantRoomStatusDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	if !IsNil(o.BeginDate) {
		toSerialize["beginDate"] = o.BeginDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.NumberOfDays) {
		toSerialize["numberOfDays"] = o.NumberOfDays
	}
	if !IsNil(o.HouseKeepingRoomStatus) {
		toSerialize["houseKeepingRoomStatus"] = o.HouseKeepingRoomStatus
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableVacantRoomStatusDetails struct {
	value *VacantRoomStatusDetails
	isSet bool
}

func (v NullableVacantRoomStatusDetails) Get() *VacantRoomStatusDetails {
	return v.value
}

func (v *NullableVacantRoomStatusDetails) Set(val *VacantRoomStatusDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableVacantRoomStatusDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableVacantRoomStatusDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVacantRoomStatusDetails(val *VacantRoomStatusDetails) *NullableVacantRoomStatusDetails {
	return &NullableVacantRoomStatusDetails{value: val, isSet: true}
}

func (v NullableVacantRoomStatusDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVacantRoomStatusDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


