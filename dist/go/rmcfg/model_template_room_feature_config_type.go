/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the TemplateRoomFeatureConfigType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateRoomFeatureConfigType{}

// TemplateRoomFeatureConfigType Common code type for code, description, seq and inactive
type TemplateRoomFeatureConfigType struct {
	Description *TranslationTextType50 `json:"description,omitempty"`
	// Display sequence for the code type.
	Sequence *int32 `json:"sequence,omitempty"`
	// Code for the code type.
	Code *string `json:"code,omitempty"`
	// Indicates the code type is inactive or not.
	Inactive *bool `json:"inactive,omitempty"`
	// Chain code for the code type.
	ChainCode *string `json:"chainCode,omitempty"`
	// Group code to which this code type belongs.
	GroupCode *string `json:"groupCode,omitempty"`
	// Specifies whether the room feature is to be available for selection at all hotels.
	Global *bool `json:"global,omitempty"`
	ManagedBy *ManagedByOptions `json:"managedBy,omitempty"`
}

// NewTemplateRoomFeatureConfigType instantiates a new TemplateRoomFeatureConfigType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateRoomFeatureConfigType() *TemplateRoomFeatureConfigType {
	this := TemplateRoomFeatureConfigType{}
	return &this
}

// NewTemplateRoomFeatureConfigTypeWithDefaults instantiates a new TemplateRoomFeatureConfigType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateRoomFeatureConfigTypeWithDefaults() *TemplateRoomFeatureConfigType {
	this := TemplateRoomFeatureConfigType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetDescription() TranslationTextType50 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType50
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetDescriptionOk() (*TranslationTextType50, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType50 and assigns it to the Description field.
func (o *TemplateRoomFeatureConfigType) SetDescription(v TranslationTextType50) {
	o.Description = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *TemplateRoomFeatureConfigType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TemplateRoomFeatureConfigType) SetCode(v string) {
	o.Code = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *TemplateRoomFeatureConfigType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetChainCode returns the ChainCode field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetChainCode() string {
	if o == nil || IsNil(o.ChainCode) {
		var ret string
		return ret
	}
	return *o.ChainCode
}

// GetChainCodeOk returns a tuple with the ChainCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetChainCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChainCode) {
		return nil, false
	}
	return o.ChainCode, true
}

// HasChainCode returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasChainCode() bool {
	if o != nil && !IsNil(o.ChainCode) {
		return true
	}

	return false
}

// SetChainCode gets a reference to the given string and assigns it to the ChainCode field.
func (o *TemplateRoomFeatureConfigType) SetChainCode(v string) {
	o.ChainCode = &v
}

// GetGroupCode returns the GroupCode field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetGroupCode() string {
	if o == nil || IsNil(o.GroupCode) {
		var ret string
		return ret
	}
	return *o.GroupCode
}

// GetGroupCodeOk returns a tuple with the GroupCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetGroupCodeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupCode) {
		return nil, false
	}
	return o.GroupCode, true
}

// HasGroupCode returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasGroupCode() bool {
	if o != nil && !IsNil(o.GroupCode) {
		return true
	}

	return false
}

// SetGroupCode gets a reference to the given string and assigns it to the GroupCode field.
func (o *TemplateRoomFeatureConfigType) SetGroupCode(v string) {
	o.GroupCode = &v
}

// GetGlobal returns the Global field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetGlobal() bool {
	if o == nil || IsNil(o.Global) {
		var ret bool
		return ret
	}
	return *o.Global
}

// GetGlobalOk returns a tuple with the Global field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetGlobalOk() (*bool, bool) {
	if o == nil || IsNil(o.Global) {
		return nil, false
	}
	return o.Global, true
}

// HasGlobal returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasGlobal() bool {
	if o != nil && !IsNil(o.Global) {
		return true
	}

	return false
}

// SetGlobal gets a reference to the given bool and assigns it to the Global field.
func (o *TemplateRoomFeatureConfigType) SetGlobal(v bool) {
	o.Global = &v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *TemplateRoomFeatureConfigType) GetManagedBy() ManagedByOptions {
	if o == nil || IsNil(o.ManagedBy) {
		var ret ManagedByOptions
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRoomFeatureConfigType) GetManagedByOk() (*ManagedByOptions, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *TemplateRoomFeatureConfigType) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given ManagedByOptions and assigns it to the ManagedBy field.
func (o *TemplateRoomFeatureConfigType) SetManagedBy(v ManagedByOptions) {
	o.ManagedBy = &v
}

func (o TemplateRoomFeatureConfigType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateRoomFeatureConfigType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.ChainCode) {
		toSerialize["chainCode"] = o.ChainCode
	}
	if !IsNil(o.GroupCode) {
		toSerialize["groupCode"] = o.GroupCode
	}
	if !IsNil(o.Global) {
		toSerialize["global"] = o.Global
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managedBy"] = o.ManagedBy
	}
	return toSerialize, nil
}

type NullableTemplateRoomFeatureConfigType struct {
	value *TemplateRoomFeatureConfigType
	isSet bool
}

func (v NullableTemplateRoomFeatureConfigType) Get() *TemplateRoomFeatureConfigType {
	return v.value
}

func (v *NullableTemplateRoomFeatureConfigType) Set(val *TemplateRoomFeatureConfigType) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateRoomFeatureConfigType) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateRoomFeatureConfigType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateRoomFeatureConfigType(val *TemplateRoomFeatureConfigType) *NullableTemplateRoomFeatureConfigType {
	return &NullableTemplateRoomFeatureConfigType{value: val, isSet: true}
}

func (v NullableTemplateRoomFeatureConfigType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateRoomFeatureConfigType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


