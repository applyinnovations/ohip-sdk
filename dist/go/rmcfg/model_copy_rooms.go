/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the CopyRooms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyRooms{}

// CopyRooms Request object for creating multiple rooms based on an existing room. New rooms may have different floor preferences, room features, housekeeping credits and room sections. The rest of the details except for attached connecting rooms will be copied from the base existing room. Component rooms are not allowed to be copied.
type CopyRooms struct {
	CopyRoom *CopyRoomType `json:"copyRoom,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCopyRooms instantiates a new CopyRooms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyRooms() *CopyRooms {
	this := CopyRooms{}
	return &this
}

// NewCopyRoomsWithDefaults instantiates a new CopyRooms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyRoomsWithDefaults() *CopyRooms {
	this := CopyRooms{}
	return &this
}

// GetCopyRoom returns the CopyRoom field value if set, zero value otherwise.
func (o *CopyRooms) GetCopyRoom() CopyRoomType {
	if o == nil || IsNil(o.CopyRoom) {
		var ret CopyRoomType
		return ret
	}
	return *o.CopyRoom
}

// GetCopyRoomOk returns a tuple with the CopyRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRooms) GetCopyRoomOk() (*CopyRoomType, bool) {
	if o == nil || IsNil(o.CopyRoom) {
		return nil, false
	}
	return o.CopyRoom, true
}

// HasCopyRoom returns a boolean if a field has been set.
func (o *CopyRooms) HasCopyRoom() bool {
	if o != nil && !IsNil(o.CopyRoom) {
		return true
	}

	return false
}

// SetCopyRoom gets a reference to the given CopyRoomType and assigns it to the CopyRoom field.
func (o *CopyRooms) SetCopyRoom(v CopyRoomType) {
	o.CopyRoom = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CopyRooms) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRooms) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CopyRooms) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CopyRooms) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CopyRooms) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRooms) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CopyRooms) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CopyRooms) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CopyRooms) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyRooms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyRoom) {
		toSerialize["copyRoom"] = o.CopyRoom
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCopyRooms struct {
	value *CopyRooms
	isSet bool
}

func (v NullableCopyRooms) Get() *CopyRooms {
	return v.value
}

func (v *NullableCopyRooms) Set(val *CopyRooms) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyRooms) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyRooms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyRooms(val *CopyRooms) *NullableCopyRooms {
	return &NullableCopyRooms{value: val, isSet: true}
}

func (v NullableCopyRooms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyRooms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


