/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the HousekeepingSectionGroupCopyInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HousekeepingSectionGroupCopyInfoType{}

// HousekeepingSectionGroupCopyInfoType Detailed information of Housekeeping Section Group to copy.
type HousekeepingSectionGroupCopyInfoType struct {
	CopyAs *CodeDescriptionType `json:"copyAs,omitempty"`
	// Source Housekeeping Section Group Code.
	SourceSectiongroup *string `json:"sourceSectiongroup,omitempty"`
	// Source property of the Housekeeping section group.
	TargetHotelCode *string `json:"targetHotelCode,omitempty"`
}

// NewHousekeepingSectionGroupCopyInfoType instantiates a new HousekeepingSectionGroupCopyInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHousekeepingSectionGroupCopyInfoType() *HousekeepingSectionGroupCopyInfoType {
	this := HousekeepingSectionGroupCopyInfoType{}
	return &this
}

// NewHousekeepingSectionGroupCopyInfoTypeWithDefaults instantiates a new HousekeepingSectionGroupCopyInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHousekeepingSectionGroupCopyInfoTypeWithDefaults() *HousekeepingSectionGroupCopyInfoType {
	this := HousekeepingSectionGroupCopyInfoType{}
	return &this
}

// GetCopyAs returns the CopyAs field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupCopyInfoType) GetCopyAs() CodeDescriptionType {
	if o == nil || IsNil(o.CopyAs) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.CopyAs
}

// GetCopyAsOk returns a tuple with the CopyAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupCopyInfoType) GetCopyAsOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.CopyAs) {
		return nil, false
	}
	return o.CopyAs, true
}

// HasCopyAs returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupCopyInfoType) HasCopyAs() bool {
	if o != nil && !IsNil(o.CopyAs) {
		return true
	}

	return false
}

// SetCopyAs gets a reference to the given CodeDescriptionType and assigns it to the CopyAs field.
func (o *HousekeepingSectionGroupCopyInfoType) SetCopyAs(v CodeDescriptionType) {
	o.CopyAs = &v
}

// GetSourceSectiongroup returns the SourceSectiongroup field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupCopyInfoType) GetSourceSectiongroup() string {
	if o == nil || IsNil(o.SourceSectiongroup) {
		var ret string
		return ret
	}
	return *o.SourceSectiongroup
}

// GetSourceSectiongroupOk returns a tuple with the SourceSectiongroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupCopyInfoType) GetSourceSectiongroupOk() (*string, bool) {
	if o == nil || IsNil(o.SourceSectiongroup) {
		return nil, false
	}
	return o.SourceSectiongroup, true
}

// HasSourceSectiongroup returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupCopyInfoType) HasSourceSectiongroup() bool {
	if o != nil && !IsNil(o.SourceSectiongroup) {
		return true
	}

	return false
}

// SetSourceSectiongroup gets a reference to the given string and assigns it to the SourceSectiongroup field.
func (o *HousekeepingSectionGroupCopyInfoType) SetSourceSectiongroup(v string) {
	o.SourceSectiongroup = &v
}

// GetTargetHotelCode returns the TargetHotelCode field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupCopyInfoType) GetTargetHotelCode() string {
	if o == nil || IsNil(o.TargetHotelCode) {
		var ret string
		return ret
	}
	return *o.TargetHotelCode
}

// GetTargetHotelCodeOk returns a tuple with the TargetHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupCopyInfoType) GetTargetHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetHotelCode) {
		return nil, false
	}
	return o.TargetHotelCode, true
}

// HasTargetHotelCode returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupCopyInfoType) HasTargetHotelCode() bool {
	if o != nil && !IsNil(o.TargetHotelCode) {
		return true
	}

	return false
}

// SetTargetHotelCode gets a reference to the given string and assigns it to the TargetHotelCode field.
func (o *HousekeepingSectionGroupCopyInfoType) SetTargetHotelCode(v string) {
	o.TargetHotelCode = &v
}

func (o HousekeepingSectionGroupCopyInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HousekeepingSectionGroupCopyInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyAs) {
		toSerialize["copyAs"] = o.CopyAs
	}
	if !IsNil(o.SourceSectiongroup) {
		toSerialize["sourceSectiongroup"] = o.SourceSectiongroup
	}
	if !IsNil(o.TargetHotelCode) {
		toSerialize["targetHotelCode"] = o.TargetHotelCode
	}
	return toSerialize, nil
}

type NullableHousekeepingSectionGroupCopyInfoType struct {
	value *HousekeepingSectionGroupCopyInfoType
	isSet bool
}

func (v NullableHousekeepingSectionGroupCopyInfoType) Get() *HousekeepingSectionGroupCopyInfoType {
	return v.value
}

func (v *NullableHousekeepingSectionGroupCopyInfoType) Set(val *HousekeepingSectionGroupCopyInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableHousekeepingSectionGroupCopyInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableHousekeepingSectionGroupCopyInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHousekeepingSectionGroupCopyInfoType(val *HousekeepingSectionGroupCopyInfoType) *NullableHousekeepingSectionGroupCopyInfoType {
	return &NullableHousekeepingSectionGroupCopyInfoType{value: val, isSet: true}
}

func (v NullableHousekeepingSectionGroupCopyInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHousekeepingSectionGroupCopyInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


