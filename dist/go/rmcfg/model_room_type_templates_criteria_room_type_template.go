/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the RoomTypeTemplatesCriteriaRoomTypeTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomTypeTemplatesCriteriaRoomTypeTemplate{}

// RoomTypeTemplatesCriteriaRoomTypeTemplate Room Type template details to be created.
type RoomTypeTemplatesCriteriaRoomTypeTemplate struct {
	RoomTypeTemplateDetails *RoomTypeType `json:"roomTypeTemplateDetails,omitempty"`
}

// NewRoomTypeTemplatesCriteriaRoomTypeTemplate instantiates a new RoomTypeTemplatesCriteriaRoomTypeTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomTypeTemplatesCriteriaRoomTypeTemplate() *RoomTypeTemplatesCriteriaRoomTypeTemplate {
	this := RoomTypeTemplatesCriteriaRoomTypeTemplate{}
	return &this
}

// NewRoomTypeTemplatesCriteriaRoomTypeTemplateWithDefaults instantiates a new RoomTypeTemplatesCriteriaRoomTypeTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomTypeTemplatesCriteriaRoomTypeTemplateWithDefaults() *RoomTypeTemplatesCriteriaRoomTypeTemplate {
	this := RoomTypeTemplatesCriteriaRoomTypeTemplate{}
	return &this
}

// GetRoomTypeTemplateDetails returns the RoomTypeTemplateDetails field value if set, zero value otherwise.
func (o *RoomTypeTemplatesCriteriaRoomTypeTemplate) GetRoomTypeTemplateDetails() RoomTypeType {
	if o == nil || IsNil(o.RoomTypeTemplateDetails) {
		var ret RoomTypeType
		return ret
	}
	return *o.RoomTypeTemplateDetails
}

// GetRoomTypeTemplateDetailsOk returns a tuple with the RoomTypeTemplateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomTypeTemplatesCriteriaRoomTypeTemplate) GetRoomTypeTemplateDetailsOk() (*RoomTypeType, bool) {
	if o == nil || IsNil(o.RoomTypeTemplateDetails) {
		return nil, false
	}
	return o.RoomTypeTemplateDetails, true
}

// HasRoomTypeTemplateDetails returns a boolean if a field has been set.
func (o *RoomTypeTemplatesCriteriaRoomTypeTemplate) HasRoomTypeTemplateDetails() bool {
	if o != nil && !IsNil(o.RoomTypeTemplateDetails) {
		return true
	}

	return false
}

// SetRoomTypeTemplateDetails gets a reference to the given RoomTypeType and assigns it to the RoomTypeTemplateDetails field.
func (o *RoomTypeTemplatesCriteriaRoomTypeTemplate) SetRoomTypeTemplateDetails(v RoomTypeType) {
	o.RoomTypeTemplateDetails = &v
}

func (o RoomTypeTemplatesCriteriaRoomTypeTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomTypeTemplatesCriteriaRoomTypeTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomTypeTemplateDetails) {
		toSerialize["roomTypeTemplateDetails"] = o.RoomTypeTemplateDetails
	}
	return toSerialize, nil
}

type NullableRoomTypeTemplatesCriteriaRoomTypeTemplate struct {
	value *RoomTypeTemplatesCriteriaRoomTypeTemplate
	isSet bool
}

func (v NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) Get() *RoomTypeTemplatesCriteriaRoomTypeTemplate {
	return v.value
}

func (v *NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) Set(val *RoomTypeTemplatesCriteriaRoomTypeTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomTypeTemplatesCriteriaRoomTypeTemplate(val *RoomTypeTemplatesCriteriaRoomTypeTemplate) *NullableRoomTypeTemplatesCriteriaRoomTypeTemplate {
	return &NullableRoomTypeTemplatesCriteriaRoomTypeTemplate{value: val, isSet: true}
}

func (v NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomTypeTemplatesCriteriaRoomTypeTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


