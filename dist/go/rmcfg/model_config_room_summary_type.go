/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the ConfigRoomSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigRoomSummaryType{}

// ConfigRoomSummaryType This type represents the primary room attributes.
type ConfigRoomSummaryType struct {
	// Indicates whether the room is accessibility compliant.
	Accessible *bool `json:"accessible,omitempty"`
	// Building associated with the room.
	Building *string `json:"building,omitempty"`
	// Collection of rooms.
	ConnectingRooms []RoomRoomType `json:"connectingRooms,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
	// Floor of the Room.
	Floor *string `json:"floor,omitempty"`
	// Description for the Floor of the Room.
	FloorDescription *string `json:"floorDescription,omitempty"`
	// Maximum occupancy for the room type.
	MaximumOccupancy *int32 `json:"maximumOccupancy,omitempty"`
	// Indicates whether the room is a Meeting Room
	MeetingRoom *bool `json:"meetingRoom,omitempty"`
	// This indicates if room is marked as a owner room. This information is used when Room Rotation OPERA control is active.
	OwnerRoom *bool `json:"ownerRoom,omitempty"`
	RoomAssignmentRating *RatePlanRatingType `json:"roomAssignmentRating,omitempty"`
	// Component of a room.
	RoomComponents []RoomComponentType `json:"roomComponents,omitempty"`
	// Detail Long Description Of The Room.
	RoomDescription *string `json:"roomDescription,omitempty"`
	// A recurring element that identifies the room features.
	RoomFeatures []RoomFeatureType `json:"roomFeatures,omitempty"`
	// Code of the room.
	RoomId *string `json:"roomId,omitempty"`
	RoomType *RoomTypeShortInfoType `json:"roomType,omitempty"`
	// Display sequence of a room.
	SellSequence *float32 `json:"sellSequence,omitempty"`
	// This indicates room smoking preference.
	SmokingPreference *string `json:"smokingPreference,omitempty"`
	// This indicates the description of the room smoking preference.
	SmokingPreferenceDescription *string `json:"smokingPreferenceDescription,omitempty"`
	// Square units of a room.
	SquareUnits *float32 `json:"squareUnits,omitempty"`
	// Square unit measurement of a room.
	SquareUnitsMeasurement *string `json:"squareUnitsMeasurement,omitempty"`
	// The Unit Grade Code attached to the room. This information is used when Room Rotation OPERA control is active.
	UnitGradeCode *string `json:"unitGradeCode,omitempty"`
	// The Unit Grade Code Description describes the unit grade code attached to the room. This information is used when Room Rotation OPERA control is active.
	UnitGradeCodeDescription *string `json:"unitGradeCodeDescription,omitempty"`
}

// NewConfigRoomSummaryType instantiates a new ConfigRoomSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigRoomSummaryType() *ConfigRoomSummaryType {
	this := ConfigRoomSummaryType{}
	return &this
}

// NewConfigRoomSummaryTypeWithDefaults instantiates a new ConfigRoomSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigRoomSummaryTypeWithDefaults() *ConfigRoomSummaryType {
	this := ConfigRoomSummaryType{}
	return &this
}

// GetAccessible returns the Accessible field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetAccessible() bool {
	if o == nil || IsNil(o.Accessible) {
		var ret bool
		return ret
	}
	return *o.Accessible
}

// GetAccessibleOk returns a tuple with the Accessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Accessible) {
		return nil, false
	}
	return o.Accessible, true
}

// HasAccessible returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasAccessible() bool {
	if o != nil && !IsNil(o.Accessible) {
		return true
	}

	return false
}

// SetAccessible gets a reference to the given bool and assigns it to the Accessible field.
func (o *ConfigRoomSummaryType) SetAccessible(v bool) {
	o.Accessible = &v
}

// GetBuilding returns the Building field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetBuilding() string {
	if o == nil || IsNil(o.Building) {
		var ret string
		return ret
	}
	return *o.Building
}

// GetBuildingOk returns a tuple with the Building field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetBuildingOk() (*string, bool) {
	if o == nil || IsNil(o.Building) {
		return nil, false
	}
	return o.Building, true
}

// HasBuilding returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasBuilding() bool {
	if o != nil && !IsNil(o.Building) {
		return true
	}

	return false
}

// SetBuilding gets a reference to the given string and assigns it to the Building field.
func (o *ConfigRoomSummaryType) SetBuilding(v string) {
	o.Building = &v
}

// GetConnectingRooms returns the ConnectingRooms field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetConnectingRooms() []RoomRoomType {
	if o == nil || IsNil(o.ConnectingRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ConnectingRooms
}

// GetConnectingRoomsOk returns a tuple with the ConnectingRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetConnectingRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ConnectingRooms) {
		return nil, false
	}
	return o.ConnectingRooms, true
}

// HasConnectingRooms returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasConnectingRooms() bool {
	if o != nil && !IsNil(o.ConnectingRooms) {
		return true
	}

	return false
}

// SetConnectingRooms gets a reference to the given []RoomRoomType and assigns it to the ConnectingRooms field.
func (o *ConfigRoomSummaryType) SetConnectingRooms(v []RoomRoomType) {
	o.ConnectingRooms = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *ConfigRoomSummaryType) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

// GetFloor returns the Floor field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetFloor() string {
	if o == nil || IsNil(o.Floor) {
		var ret string
		return ret
	}
	return *o.Floor
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetFloorOk() (*string, bool) {
	if o == nil || IsNil(o.Floor) {
		return nil, false
	}
	return o.Floor, true
}

// HasFloor returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasFloor() bool {
	if o != nil && !IsNil(o.Floor) {
		return true
	}

	return false
}

// SetFloor gets a reference to the given string and assigns it to the Floor field.
func (o *ConfigRoomSummaryType) SetFloor(v string) {
	o.Floor = &v
}

// GetFloorDescription returns the FloorDescription field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetFloorDescription() string {
	if o == nil || IsNil(o.FloorDescription) {
		var ret string
		return ret
	}
	return *o.FloorDescription
}

// GetFloorDescriptionOk returns a tuple with the FloorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetFloorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FloorDescription) {
		return nil, false
	}
	return o.FloorDescription, true
}

// HasFloorDescription returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasFloorDescription() bool {
	if o != nil && !IsNil(o.FloorDescription) {
		return true
	}

	return false
}

// SetFloorDescription gets a reference to the given string and assigns it to the FloorDescription field.
func (o *ConfigRoomSummaryType) SetFloorDescription(v string) {
	o.FloorDescription = &v
}

// GetMaximumOccupancy returns the MaximumOccupancy field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetMaximumOccupancy() int32 {
	if o == nil || IsNil(o.MaximumOccupancy) {
		var ret int32
		return ret
	}
	return *o.MaximumOccupancy
}

// GetMaximumOccupancyOk returns a tuple with the MaximumOccupancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetMaximumOccupancyOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumOccupancy) {
		return nil, false
	}
	return o.MaximumOccupancy, true
}

// HasMaximumOccupancy returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasMaximumOccupancy() bool {
	if o != nil && !IsNil(o.MaximumOccupancy) {
		return true
	}

	return false
}

// SetMaximumOccupancy gets a reference to the given int32 and assigns it to the MaximumOccupancy field.
func (o *ConfigRoomSummaryType) SetMaximumOccupancy(v int32) {
	o.MaximumOccupancy = &v
}

// GetMeetingRoom returns the MeetingRoom field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetMeetingRoom() bool {
	if o == nil || IsNil(o.MeetingRoom) {
		var ret bool
		return ret
	}
	return *o.MeetingRoom
}

// GetMeetingRoomOk returns a tuple with the MeetingRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetMeetingRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.MeetingRoom) {
		return nil, false
	}
	return o.MeetingRoom, true
}

// HasMeetingRoom returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasMeetingRoom() bool {
	if o != nil && !IsNil(o.MeetingRoom) {
		return true
	}

	return false
}

// SetMeetingRoom gets a reference to the given bool and assigns it to the MeetingRoom field.
func (o *ConfigRoomSummaryType) SetMeetingRoom(v bool) {
	o.MeetingRoom = &v
}

// GetOwnerRoom returns the OwnerRoom field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetOwnerRoom() bool {
	if o == nil || IsNil(o.OwnerRoom) {
		var ret bool
		return ret
	}
	return *o.OwnerRoom
}

// GetOwnerRoomOk returns a tuple with the OwnerRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetOwnerRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.OwnerRoom) {
		return nil, false
	}
	return o.OwnerRoom, true
}

// HasOwnerRoom returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasOwnerRoom() bool {
	if o != nil && !IsNil(o.OwnerRoom) {
		return true
	}

	return false
}

// SetOwnerRoom gets a reference to the given bool and assigns it to the OwnerRoom field.
func (o *ConfigRoomSummaryType) SetOwnerRoom(v bool) {
	o.OwnerRoom = &v
}

// GetRoomAssignmentRating returns the RoomAssignmentRating field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomAssignmentRating() RatePlanRatingType {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		var ret RatePlanRatingType
		return ret
	}
	return *o.RoomAssignmentRating
}

// GetRoomAssignmentRatingOk returns a tuple with the RoomAssignmentRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomAssignmentRatingOk() (*RatePlanRatingType, bool) {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		return nil, false
	}
	return o.RoomAssignmentRating, true
}

// HasRoomAssignmentRating returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomAssignmentRating() bool {
	if o != nil && !IsNil(o.RoomAssignmentRating) {
		return true
	}

	return false
}

// SetRoomAssignmentRating gets a reference to the given RatePlanRatingType and assigns it to the RoomAssignmentRating field.
func (o *ConfigRoomSummaryType) SetRoomAssignmentRating(v RatePlanRatingType) {
	o.RoomAssignmentRating = &v
}

// GetRoomComponents returns the RoomComponents field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomComponents() []RoomComponentType {
	if o == nil || IsNil(o.RoomComponents) {
		var ret []RoomComponentType
		return ret
	}
	return o.RoomComponents
}

// GetRoomComponentsOk returns a tuple with the RoomComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomComponentsOk() ([]RoomComponentType, bool) {
	if o == nil || IsNil(o.RoomComponents) {
		return nil, false
	}
	return o.RoomComponents, true
}

// HasRoomComponents returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomComponents() bool {
	if o != nil && !IsNil(o.RoomComponents) {
		return true
	}

	return false
}

// SetRoomComponents gets a reference to the given []RoomComponentType and assigns it to the RoomComponents field.
func (o *ConfigRoomSummaryType) SetRoomComponents(v []RoomComponentType) {
	o.RoomComponents = v
}

// GetRoomDescription returns the RoomDescription field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomDescription() string {
	if o == nil || IsNil(o.RoomDescription) {
		var ret string
		return ret
	}
	return *o.RoomDescription
}

// GetRoomDescriptionOk returns a tuple with the RoomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RoomDescription) {
		return nil, false
	}
	return o.RoomDescription, true
}

// HasRoomDescription returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomDescription() bool {
	if o != nil && !IsNil(o.RoomDescription) {
		return true
	}

	return false
}

// SetRoomDescription gets a reference to the given string and assigns it to the RoomDescription field.
func (o *ConfigRoomSummaryType) SetRoomDescription(v string) {
	o.RoomDescription = &v
}

// GetRoomFeatures returns the RoomFeatures field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomFeatures() []RoomFeatureType {
	if o == nil || IsNil(o.RoomFeatures) {
		var ret []RoomFeatureType
		return ret
	}
	return o.RoomFeatures
}

// GetRoomFeaturesOk returns a tuple with the RoomFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomFeaturesOk() ([]RoomFeatureType, bool) {
	if o == nil || IsNil(o.RoomFeatures) {
		return nil, false
	}
	return o.RoomFeatures, true
}

// HasRoomFeatures returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomFeatures() bool {
	if o != nil && !IsNil(o.RoomFeatures) {
		return true
	}

	return false
}

// SetRoomFeatures gets a reference to the given []RoomFeatureType and assigns it to the RoomFeatures field.
func (o *ConfigRoomSummaryType) SetRoomFeatures(v []RoomFeatureType) {
	o.RoomFeatures = v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ConfigRoomSummaryType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetRoomType() RoomTypeShortInfoType {
	if o == nil || IsNil(o.RoomType) {
		var ret RoomTypeShortInfoType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetRoomTypeOk() (*RoomTypeShortInfoType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given RoomTypeShortInfoType and assigns it to the RoomType field.
func (o *ConfigRoomSummaryType) SetRoomType(v RoomTypeShortInfoType) {
	o.RoomType = &v
}

// GetSellSequence returns the SellSequence field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetSellSequence() float32 {
	if o == nil || IsNil(o.SellSequence) {
		var ret float32
		return ret
	}
	return *o.SellSequence
}

// GetSellSequenceOk returns a tuple with the SellSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetSellSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.SellSequence) {
		return nil, false
	}
	return o.SellSequence, true
}

// HasSellSequence returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasSellSequence() bool {
	if o != nil && !IsNil(o.SellSequence) {
		return true
	}

	return false
}

// SetSellSequence gets a reference to the given float32 and assigns it to the SellSequence field.
func (o *ConfigRoomSummaryType) SetSellSequence(v float32) {
	o.SellSequence = &v
}

// GetSmokingPreference returns the SmokingPreference field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetSmokingPreference() string {
	if o == nil || IsNil(o.SmokingPreference) {
		var ret string
		return ret
	}
	return *o.SmokingPreference
}

// GetSmokingPreferenceOk returns a tuple with the SmokingPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetSmokingPreferenceOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreference) {
		return nil, false
	}
	return o.SmokingPreference, true
}

// HasSmokingPreference returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasSmokingPreference() bool {
	if o != nil && !IsNil(o.SmokingPreference) {
		return true
	}

	return false
}

// SetSmokingPreference gets a reference to the given string and assigns it to the SmokingPreference field.
func (o *ConfigRoomSummaryType) SetSmokingPreference(v string) {
	o.SmokingPreference = &v
}

// GetSmokingPreferenceDescription returns the SmokingPreferenceDescription field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetSmokingPreferenceDescription() string {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		var ret string
		return ret
	}
	return *o.SmokingPreferenceDescription
}

// GetSmokingPreferenceDescriptionOk returns a tuple with the SmokingPreferenceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetSmokingPreferenceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		return nil, false
	}
	return o.SmokingPreferenceDescription, true
}

// HasSmokingPreferenceDescription returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasSmokingPreferenceDescription() bool {
	if o != nil && !IsNil(o.SmokingPreferenceDescription) {
		return true
	}

	return false
}

// SetSmokingPreferenceDescription gets a reference to the given string and assigns it to the SmokingPreferenceDescription field.
func (o *ConfigRoomSummaryType) SetSmokingPreferenceDescription(v string) {
	o.SmokingPreferenceDescription = &v
}

// GetSquareUnits returns the SquareUnits field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetSquareUnits() float32 {
	if o == nil || IsNil(o.SquareUnits) {
		var ret float32
		return ret
	}
	return *o.SquareUnits
}

// GetSquareUnitsOk returns a tuple with the SquareUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetSquareUnitsOk() (*float32, bool) {
	if o == nil || IsNil(o.SquareUnits) {
		return nil, false
	}
	return o.SquareUnits, true
}

// HasSquareUnits returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasSquareUnits() bool {
	if o != nil && !IsNil(o.SquareUnits) {
		return true
	}

	return false
}

// SetSquareUnits gets a reference to the given float32 and assigns it to the SquareUnits field.
func (o *ConfigRoomSummaryType) SetSquareUnits(v float32) {
	o.SquareUnits = &v
}

// GetSquareUnitsMeasurement returns the SquareUnitsMeasurement field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetSquareUnitsMeasurement() string {
	if o == nil || IsNil(o.SquareUnitsMeasurement) {
		var ret string
		return ret
	}
	return *o.SquareUnitsMeasurement
}

// GetSquareUnitsMeasurementOk returns a tuple with the SquareUnitsMeasurement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetSquareUnitsMeasurementOk() (*string, bool) {
	if o == nil || IsNil(o.SquareUnitsMeasurement) {
		return nil, false
	}
	return o.SquareUnitsMeasurement, true
}

// HasSquareUnitsMeasurement returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasSquareUnitsMeasurement() bool {
	if o != nil && !IsNil(o.SquareUnitsMeasurement) {
		return true
	}

	return false
}

// SetSquareUnitsMeasurement gets a reference to the given string and assigns it to the SquareUnitsMeasurement field.
func (o *ConfigRoomSummaryType) SetSquareUnitsMeasurement(v string) {
	o.SquareUnitsMeasurement = &v
}

// GetUnitGradeCode returns the UnitGradeCode field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetUnitGradeCode() string {
	if o == nil || IsNil(o.UnitGradeCode) {
		var ret string
		return ret
	}
	return *o.UnitGradeCode
}

// GetUnitGradeCodeOk returns a tuple with the UnitGradeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetUnitGradeCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UnitGradeCode) {
		return nil, false
	}
	return o.UnitGradeCode, true
}

// HasUnitGradeCode returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasUnitGradeCode() bool {
	if o != nil && !IsNil(o.UnitGradeCode) {
		return true
	}

	return false
}

// SetUnitGradeCode gets a reference to the given string and assigns it to the UnitGradeCode field.
func (o *ConfigRoomSummaryType) SetUnitGradeCode(v string) {
	o.UnitGradeCode = &v
}

// GetUnitGradeCodeDescription returns the UnitGradeCodeDescription field value if set, zero value otherwise.
func (o *ConfigRoomSummaryType) GetUnitGradeCodeDescription() string {
	if o == nil || IsNil(o.UnitGradeCodeDescription) {
		var ret string
		return ret
	}
	return *o.UnitGradeCodeDescription
}

// GetUnitGradeCodeDescriptionOk returns a tuple with the UnitGradeCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomSummaryType) GetUnitGradeCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.UnitGradeCodeDescription) {
		return nil, false
	}
	return o.UnitGradeCodeDescription, true
}

// HasUnitGradeCodeDescription returns a boolean if a field has been set.
func (o *ConfigRoomSummaryType) HasUnitGradeCodeDescription() bool {
	if o != nil && !IsNil(o.UnitGradeCodeDescription) {
		return true
	}

	return false
}

// SetUnitGradeCodeDescription gets a reference to the given string and assigns it to the UnitGradeCodeDescription field.
func (o *ConfigRoomSummaryType) SetUnitGradeCodeDescription(v string) {
	o.UnitGradeCodeDescription = &v
}

func (o ConfigRoomSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigRoomSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accessible) {
		toSerialize["accessible"] = o.Accessible
	}
	if !IsNil(o.Building) {
		toSerialize["building"] = o.Building
	}
	if !IsNil(o.ConnectingRooms) {
		toSerialize["connectingRooms"] = o.ConnectingRooms
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Floor) {
		toSerialize["floor"] = o.Floor
	}
	if !IsNil(o.FloorDescription) {
		toSerialize["floorDescription"] = o.FloorDescription
	}
	if !IsNil(o.MaximumOccupancy) {
		toSerialize["maximumOccupancy"] = o.MaximumOccupancy
	}
	if !IsNil(o.MeetingRoom) {
		toSerialize["meetingRoom"] = o.MeetingRoom
	}
	if !IsNil(o.OwnerRoom) {
		toSerialize["ownerRoom"] = o.OwnerRoom
	}
	if !IsNil(o.RoomAssignmentRating) {
		toSerialize["roomAssignmentRating"] = o.RoomAssignmentRating
	}
	if !IsNil(o.RoomComponents) {
		toSerialize["roomComponents"] = o.RoomComponents
	}
	if !IsNil(o.RoomDescription) {
		toSerialize["roomDescription"] = o.RoomDescription
	}
	if !IsNil(o.RoomFeatures) {
		toSerialize["roomFeatures"] = o.RoomFeatures
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.SellSequence) {
		toSerialize["sellSequence"] = o.SellSequence
	}
	if !IsNil(o.SmokingPreference) {
		toSerialize["smokingPreference"] = o.SmokingPreference
	}
	if !IsNil(o.SmokingPreferenceDescription) {
		toSerialize["smokingPreferenceDescription"] = o.SmokingPreferenceDescription
	}
	if !IsNil(o.SquareUnits) {
		toSerialize["squareUnits"] = o.SquareUnits
	}
	if !IsNil(o.SquareUnitsMeasurement) {
		toSerialize["squareUnitsMeasurement"] = o.SquareUnitsMeasurement
	}
	if !IsNil(o.UnitGradeCode) {
		toSerialize["unitGradeCode"] = o.UnitGradeCode
	}
	if !IsNil(o.UnitGradeCodeDescription) {
		toSerialize["unitGradeCodeDescription"] = o.UnitGradeCodeDescription
	}
	return toSerialize, nil
}

type NullableConfigRoomSummaryType struct {
	value *ConfigRoomSummaryType
	isSet bool
}

func (v NullableConfigRoomSummaryType) Get() *ConfigRoomSummaryType {
	return v.value
}

func (v *NullableConfigRoomSummaryType) Set(val *ConfigRoomSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigRoomSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigRoomSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigRoomSummaryType(val *ConfigRoomSummaryType) *NullableConfigRoomSummaryType {
	return &NullableConfigRoomSummaryType{value: val, isSet: true}
}

func (v NullableConfigRoomSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigRoomSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


