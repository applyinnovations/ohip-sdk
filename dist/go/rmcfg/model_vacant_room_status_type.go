/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the VacantRoomStatusType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VacantRoomStatusType{}

// VacantRoomStatusType Information related to vacant room housekeeping status.
type VacantRoomStatusType struct {
	// Room types of the room.
	RoomTypes []CodeDescriptionType `json:"roomTypes,omitempty"`
	// The date from which the vacant room status will be updated during end of day.
	BeginDate *string `json:"beginDate,omitempty"`
	// The last date till which the vacant room status will be updated during end of day.
	EndDate *string `json:"endDate,omitempty"`
	HouseKeepingRoomStatus *HousekeepingRoomStatusType `json:"houseKeepingRoomStatus,omitempty"`
	// Number of days to change room status of those rooms that are vacant from X number of days.
	NumberOfDays *float32 `json:"numberOfDays,omitempty"`
	// The unique ID of the vacant room configuration to which this record applies.
	VacantRoomStatusId *float32 `json:"vacantRoomStatusId,omitempty"`
}

// NewVacantRoomStatusType instantiates a new VacantRoomStatusType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVacantRoomStatusType() *VacantRoomStatusType {
	this := VacantRoomStatusType{}
	return &this
}

// NewVacantRoomStatusTypeWithDefaults instantiates a new VacantRoomStatusType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVacantRoomStatusTypeWithDefaults() *VacantRoomStatusType {
	this := VacantRoomStatusType{}
	return &this
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetRoomTypes() []CodeDescriptionType {
	if o == nil || IsNil(o.RoomTypes) {
		var ret []CodeDescriptionType
		return ret
	}
	return o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetRoomTypesOk() ([]CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given []CodeDescriptionType and assigns it to the RoomTypes field.
func (o *VacantRoomStatusType) SetRoomTypes(v []CodeDescriptionType) {
	o.RoomTypes = v
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetBeginDate() string {
	if o == nil || IsNil(o.BeginDate) {
		var ret string
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.BeginDate) {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasBeginDate() bool {
	if o != nil && !IsNil(o.BeginDate) {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given string and assigns it to the BeginDate field.
func (o *VacantRoomStatusType) SetBeginDate(v string) {
	o.BeginDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *VacantRoomStatusType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetHouseKeepingRoomStatus returns the HouseKeepingRoomStatus field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetHouseKeepingRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.HouseKeepingRoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.HouseKeepingRoomStatus
}

// GetHouseKeepingRoomStatusOk returns a tuple with the HouseKeepingRoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetHouseKeepingRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.HouseKeepingRoomStatus) {
		return nil, false
	}
	return o.HouseKeepingRoomStatus, true
}

// HasHouseKeepingRoomStatus returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasHouseKeepingRoomStatus() bool {
	if o != nil && !IsNil(o.HouseKeepingRoomStatus) {
		return true
	}

	return false
}

// SetHouseKeepingRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the HouseKeepingRoomStatus field.
func (o *VacantRoomStatusType) SetHouseKeepingRoomStatus(v HousekeepingRoomStatusType) {
	o.HouseKeepingRoomStatus = &v
}

// GetNumberOfDays returns the NumberOfDays field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetNumberOfDays() float32 {
	if o == nil || IsNil(o.NumberOfDays) {
		var ret float32
		return ret
	}
	return *o.NumberOfDays
}

// GetNumberOfDaysOk returns a tuple with the NumberOfDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetNumberOfDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.NumberOfDays) {
		return nil, false
	}
	return o.NumberOfDays, true
}

// HasNumberOfDays returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasNumberOfDays() bool {
	if o != nil && !IsNil(o.NumberOfDays) {
		return true
	}

	return false
}

// SetNumberOfDays gets a reference to the given float32 and assigns it to the NumberOfDays field.
func (o *VacantRoomStatusType) SetNumberOfDays(v float32) {
	o.NumberOfDays = &v
}

// GetVacantRoomStatusId returns the VacantRoomStatusId field value if set, zero value otherwise.
func (o *VacantRoomStatusType) GetVacantRoomStatusId() float32 {
	if o == nil || IsNil(o.VacantRoomStatusId) {
		var ret float32
		return ret
	}
	return *o.VacantRoomStatusId
}

// GetVacantRoomStatusIdOk returns a tuple with the VacantRoomStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VacantRoomStatusType) GetVacantRoomStatusIdOk() (*float32, bool) {
	if o == nil || IsNil(o.VacantRoomStatusId) {
		return nil, false
	}
	return o.VacantRoomStatusId, true
}

// HasVacantRoomStatusId returns a boolean if a field has been set.
func (o *VacantRoomStatusType) HasVacantRoomStatusId() bool {
	if o != nil && !IsNil(o.VacantRoomStatusId) {
		return true
	}

	return false
}

// SetVacantRoomStatusId gets a reference to the given float32 and assigns it to the VacantRoomStatusId field.
func (o *VacantRoomStatusType) SetVacantRoomStatusId(v float32) {
	o.VacantRoomStatusId = &v
}

func (o VacantRoomStatusType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VacantRoomStatusType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	if !IsNil(o.BeginDate) {
		toSerialize["beginDate"] = o.BeginDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.HouseKeepingRoomStatus) {
		toSerialize["houseKeepingRoomStatus"] = o.HouseKeepingRoomStatus
	}
	if !IsNil(o.NumberOfDays) {
		toSerialize["numberOfDays"] = o.NumberOfDays
	}
	if !IsNil(o.VacantRoomStatusId) {
		toSerialize["vacantRoomStatusId"] = o.VacantRoomStatusId
	}
	return toSerialize, nil
}

type NullableVacantRoomStatusType struct {
	value *VacantRoomStatusType
	isSet bool
}

func (v NullableVacantRoomStatusType) Get() *VacantRoomStatusType {
	return v.value
}

func (v *NullableVacantRoomStatusType) Set(val *VacantRoomStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableVacantRoomStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableVacantRoomStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVacantRoomStatusType(val *VacantRoomStatusType) *NullableVacantRoomStatusType {
	return &NullableVacantRoomStatusType{value: val, isSet: true}
}

func (v NullableVacantRoomStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVacantRoomStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


