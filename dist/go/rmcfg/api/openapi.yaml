openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for room configuration, such as configuring room types,\
    \ room Classes, creating new room features, or updating housekeeping room maintenance\
    \ reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p>\
    \ This document and all content within is available under the Universal Permissive\
    \ License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024\
    \ Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Room Configuration API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /rm/config/v1
tags:
- description: "The ChainConfigService Web Service offers capability of creating,\
    \ managing, and retrieving of chain configuration."
  name: ChainConfig
- description: "The Hotel Config Service Web Service offers capability to configure\
    \ Master Data needed for Hotel Configuration such as managing Room Classes, Room\
    \ Types, Rooms, etc."
  name: HotelConfig
paths:
  /bedTypeRequests:
    get:
      description: "Use this API to return bed type requests based on search criteria\
        \ such as fetchInactive, codes, wildCard, description.  <p> Bed types are\
        \ referenced in room type configuration to identify the bed configuration\
        \ in the room. <p>  <p><strong>OperationId:</strong>getBedTypeRequests</p>"
      operationId: getBedTypeRequests
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bedTypeRequestsDetails'
          description: Response object for fetching Bed Type Requests.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BedTypeRequests not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Bed Type Requests
      tags:
      - ChainConfig
    post:
      description: Use this API to create bed type requests. <p>Bed types are referenced
        in room type configuration to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>postBedTypeRequests</p>
      operationId: postBedTypeRequests
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bedTypeRequestsCriteria'
        description: Request object for creating Bed Type Requests.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Bed Type Requests
      tags:
      - ChainConfig
      x-codegen-request-body-name: bedTypeRequestsCriteria
  /bedTypeRequests/{bedTypeRequestsId}:
    delete:
      description: "Use this API to delete bed type requests based on the bedTypeRequestsId,\
        \ bedTypeRequestsCodes. <p>Bed types are referenced in room type configuration\
        \ to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>deleteBedTypeRequests</p>"
      operationId: deleteBedTypeRequests
      parameters:
      - description: Unique ID of Bed Type Requests.
        in: path
        name: bedTypeRequestsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: bedTypeRequestsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Bed Type Requests
      tags:
      - ChainConfig
    put:
      description: "Use this API to update bed type requests based on the bedTypeRequestsId,\
        \ bedTypeRequestsToBeChanged. <p>Bed types are referenced in room type configuration\
        \ to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>putBedTypeRequests</p>"
      operationId: putBedTypeRequests
      parameters:
      - description: Unique ID of Bed Type Requests.
        in: path
        name: bedTypeRequestsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bedTypeRequestsToBeChanged'
        description: Request object for changing Bed Type Requests.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Bed Type Requests
      tags:
      - ChainConfig
      x-codegen-request-body-name: bedTypeRequestsToBeChanged
  /bedTypes:
    get:
      description: "Use this API to return bed types based on search criteria such\
        \ as fetchInactive, codes, wildCard, description.<p><strong>OperationId:</strong>getBedTypes</p>"
      operationId: getBedTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bedTypesDetails'
          description: Response object for fetching Bed Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BedTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get bed types
      tags:
      - ChainConfig
    post:
      description: Use this API to create a new Bed type. <p><strong>OperationId:</strong>postBedTypes</p>
      operationId: postBedTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bedTypesCriteria'
        description: Request object for creating a new Bed Type.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a new Bed type
      tags:
      - ChainConfig
      x-codegen-request-body-name: bedTypesCriteria
  /bedTypes/{bedTypesId}:
    delete:
      description: Use this API to delete an existing Bed type. <p><strong>OperationId:</strong>deleteBedTypes</p>
      operationId: deleteBedTypes
      parameters:
      - description: Unique ID of bed type
        in: path
        name: bedTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: bedTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete an existing Bed type
      tags:
      - ChainConfig
    put:
      description: Use this API to update an existing Bed type. <p><strong>OperationId:</strong>putBedTypes</p>
      operationId: putBedTypes
      parameters:
      - description: Unique ID of bed type
        in: path
        name: bedTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/bedTypesToBeChanged'
        description: Request object for changing an existing Bed Type.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change an existing Bed type
      tags:
      - ChainConfig
      x-codegen-request-body-name: bedTypesToBeChanged
  /buildingFloorMappings:
    get:
      description: Use this API to get Hotel level floor mappings to buildings. <p><strong>OperationId:</strong>getBuildingFloorMappings</p>
      operationId: getBuildingFloorMappings
      parameters:
      - description: Specifies the hotel code for which floor mappings have to be
          searched.
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: buildingsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/buildingFloorMappingsDetails'
          description: Response object for fetching floor mappings to buildings.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BuildingFloorMappings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Hotel level floor mappings to buildings
      tags:
      - HotelConfig
    put:
      description: You can use this API to set Hotel level floor mappings to buildings.
        <p><strong>OperationId:</strong>setBuildingFloorMappings</p>
      operationId: setBuildingFloorMappings
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/setBuildingFloorMappings'
        description: Request object for setting floor mappings to buildings.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Set Hotel level floor mappings to buildings
      tags:
      - HotelConfig
      x-codegen-request-body-name: setBuildingFloorMappings
  /buildingGroups:
    delete:
      description: "Use this API to delete housekeeping building groups based on hotelIds,\
        \ hotelId. <p>Building groups are used to group multiple building together\
        \ for the purpose of housekeeping task assignment; allowing task sheets to\
        \ be generated per building group.</p> <p><strong>OperationId:</strong>deleteBuildingGroups</p>"
      operationId: removeBuildingGroups
      parameters:
      - description: Configuration code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete  Housekeeping Building Group
      tags:
      - HotelConfig
    get:
      description: "Use this API to return housekeeping building groups based on search\
        \ criteria such as hotelId, codes, wildCard, descriptionWildCard. <p>Building\
        \ groups are used to group multiple building together for the purpose of housekeeping\
        \ task assignment; allowing task sheets to be generated per building group.</p>\
        \ <p><strong>OperationId:</strong>getBuildingGroups</p>"
      operationId: getBuildingGroups
      parameters:
      - description: Hotel associated with the Building/Building Group
        in: query
        name: hotelId
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: The description or a part of the description based on which results
          should be filtered.
        in: query
        name: descriptionWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/buildingGroupsDetails'
          description: Response object after fetching Building Groups of the Hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BuildingGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Housekeeping Building Group info '
      tags:
      - HotelConfig
    post:
      description: Use this API to create housekeeping building groups. <p>Building
        groups are used to group multiple building together for the purpose of housekeeping
        task assignment; allowing task sheets to be generated per building group.</p>
        <p><strong>OperationId:</strong>postBuildingGroups</p>
      operationId: postBuildingGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/buildingGroupsCriteria'
        description: Request object to create Building Group details of the Hotel.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create  Housekeeping Building Group
      tags:
      - HotelConfig
      x-codegen-request-body-name: buildingGroupsCriteria
    put:
      description: Use this API to update housekeeping building groups based on buildingGroupsToBeChanged.
        <p>Building groups are used to group multiple building together for the purpose
        of housekeeping task assignment; allowing task sheets to be generated per
        building group.</p> <p><strong>OperationId:</strong>changeBuildingGroups</p>
      operationId: changeBuildingGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/buildingGroupsToBeChanged'
        description: Request object to change the Building Group details of the Hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Building Group
      tags:
      - HotelConfig
      x-codegen-request-body-name: buildingGroupsToBeChanged
  /buildings:
    delete:
      description: "Use this API to delete buildings based on hotelIds, hotelId. Buildings\
        \ are used for the purpose of housekeeping task assignment; allowing task\
        \ sheets to be generated per building. <p><strong>OperationId:</strong>removeBuildings</p>"
      operationId: removeBuildings
      parameters:
      - description: Configuration code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Buildings
      tags:
      - HotelConfig
    get:
      description: "Use this API to return buildings based on search criteria such\
        \ as hotelId, codes, wildCard, descriptionWildCard, buildingGroupCodes, buildingGroupWildCard.\
        \ Buildings are used for the purpose of housekeeping task assignment; allowing\
        \ task sheets to be generated per building. <p><strong>OperationId:</strong>getBuildings</p>"
      operationId: getBuildings
      parameters:
      - description: Hotel associated with the Building/Building Group
        in: query
        name: hotelId
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: The description or a part of the description based on which results
          should be filtered.
        in: query
        name: descriptionWildCard
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: buildingGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: buildingGroupWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/buildingsDetails'
          description: Response object after fetching Building details of the Hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Buildings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Building information
      tags:
      - HotelConfig
    post:
      description: Use this API to create new buildings. Buildings are used for the
        purpose of housekeeping task assignment; allowing task sheets to be generated
        per building. <p><strong>OperationId:</strong>postBuildings</p>
      operationId: postBuildings
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/buildingsCriteria'
        description: Request object to create Building details of the Hotel.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create new Buildings
      tags:
      - HotelConfig
      x-codegen-request-body-name: buildingsCriteria
    put:
      description: Use this API to update buildings based on buildingsToBeChanged.
        Buildings are used for the purpose of housekeeping task assignment; allowing
        task sheets to be generated per building. <p><strong>OperationId:</strong>changeBuildings</p>
      operationId: changeBuildings
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/buildingsToBeChanged'
        description: Request object to change Building details of the Hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Buildings
      tags:
      - HotelConfig
      x-codegen-request-body-name: buildingsToBeChanged
  /floorTypes:
    get:
      description: "Use this API to return floor types based on search criteria such\
        \ as fetchInactive, codes, wildCard, description. <p><strong>OperationId:</strong>getFloorTypes</p>"
      operationId: getFloorTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/floorTypesDetails'
          description: Response object for fetching Floor Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FloorTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Floor Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create floor types. <p><strong>OperationId:</strong>postFloorTypes</p>
      operationId: postFloorTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/floorTypesCriteria'
        description: Request object for creating Floor Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Floor Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: floorTypesCriteria
  /floorTypes/{floorTypesId}:
    delete:
      description: "Use this API to delete floor types based on floorTypesId, floorTypesCodes.\
        \ <p><strong>OperationId:</strong>deleteFloorTypes</p>"
      operationId: deleteFloorTypes
      parameters:
      - description: Unique ID of Floor Types.
        in: path
        name: floorTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: floorTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Floor Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Floor Types. <p><strong>OperationId:</strong>putFloorTypes</p>
      operationId: putFloorTypes
      parameters:
      - description: Unique ID of Floor Types.
        in: path
        name: floorTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/floorTypesToBeChanged'
        description: Request object for changing Floor Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Floor Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: floorTypesToBeChanged
  /floors:
    get:
      description: "Use this API to return floors based on search criteria such as\
        \ hotelIds, floorCodes. Floor is referencing the story of a building that\
        \ hotel rooms are located on. <p><strong>OperationId:</strong>getFloors</p>"
      operationId: getFloors
      parameters:
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: floorCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/floorsDetails'
          description: Response object for fetching floors at the hotel level.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Floors not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get floors
      tags:
      - HotelConfig
    post:
      description: Use this API to create floors. Floor is referencing the story of
        a building that hotel rooms are located on. <p><strong>OperationId:</strong>postFloors</p>
      operationId: postFloors
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/floorsCriteria'
        description: Request object for creating floors at the hotel level.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create floors
      tags:
      - HotelConfig
      x-codegen-request-body-name: floorsCriteria
  /floors/{floorsId}:
    delete:
      description: "Use this API to delete floors based on floorsId, hotelId. Floor\
        \ is referencing the story of a building that hotel rooms are located on.\
        \ <p><strong>OperationId:</strong>deleteFloors</p>"
      operationId: removeFloors
      parameters:
      - description: Unique ID of floor.
        in: path
        name: floorsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete floors
      tags:
      - HotelConfig
    put:
      description: "Use this API to update floors based on floorsId, floorsToBeChanged.Floor\
        \ is referencing the story of a building that hotel rooms are located on.\
        \ <p><strong>OperationId:</strong>changeFloors</p>"
      operationId: changeFloors
      parameters:
      - description: Unique ID of floor.
        in: path
        name: floorsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/floorsToBeChanged'
        description: Request object for changing floors at the hotel level.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change floors
      tags:
      - HotelConfig
      x-codegen-request-body-name: floorsToBeChanged
  /hotels/{hotelId}/action/validate:
    put:
      description: "Use this API to validate room types room class is currently in\
        \ use for a specific hotel based on search criteria such as hotelId, validateRoomClassInUse.\
        \ <p><strong>OperationId:</strong>validateRoomClassInUse</p>"
      operationId: validateRoomClassInUse
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/validateRoomClassInUse'
        description: Request object to validate if room type's room class is currently
          in use.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Validate room types room class is currently in use
      tags:
      - HotelConfig
      x-codegen-request-body-name: validateRoomClassInUse
  /hotels/{hotelId}/creditRules:
    get:
      description: "Use this API to return housekeeping credit rules for a specific\
        \ hotel based on search criteria such as hotelId, ruleCodes, ruleType, includeInactive.\
        \ <p> Housekeeping credit rules are used to add additional credits to the\
        \ housekeeping tasks sheets depending on configured values i.e. travel credits\
        \ between buildings, or floors, or inventory items i.e. cribs, rollaways.</p>\
        \ <p><strong>OperationId:</strong>getHousekeepingCreditRules</p>"
      operationId: getHousekeepingCreditRules
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: ruleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A Facility Rule will add extra credit to a task assignment sheet\
          \ when certain task conditions exist. Multiple Facility Task Rules will\
          \ be applied on top of each other if the conditions are met. A Miscellaneous\
          \ Rule will add extra credit to a task assignment sheet when the attendants\
          \ are occupied with anything other than cleaning a room, for example a team\
          \ meeting. A Special Rule will add extra credit to a task assignment sheet\
          \ when the defined Specials are attached to a reservation. A Traveling Rule\
          \ will add extra credit to a task assignment sheet when rooms from multiple\
          \ Buildings, Section Groups, Sections and/or Floors are assigned. An Inventory\
          \ Item Rule will add extra credit to a task assignment sheet when the defined\
          \ Items are attached to a reservation."
        in: query
        name: ruleType
        schema:
          enum:
          - FacilityTask
          - Miscellaneous
          - Special
          - Travelling
          - ItemInventory
          type: string
      - description: Flag to indicate if inactive credit rules should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingCreditRulesDetails'
          description: Response object for fetching housekeeping credit rules.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingCreditRules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Credit Rules
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping credit rules for a specific\
        \ hotel. <p>Housekeeping credit rules are used to add additional credits to\
        \ the housekeeping tasks sheets depending on configured values i.e. travel\
        \ credits between buildings, or floors, or inventory items i.e. cribs, rollaways.\
        \ </P> <p><strong>OperationId:</strong>postHousekeepingCreditRules</p>"
      operationId: postHousekeepingCreditRules
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingCreditRulesCriteria'
        description: Request object for creating housekeeping credit rules.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Housekeeping Credit Rules
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingCreditRulesCriteria
  /hotels/{hotelId}/creditRules/{code}:
    delete:
      description: "Use this API to delete housekeeping credit rules for a specific\
        \ hotel based on code, hotelId. <p>Housekeeping credit rules are used to add\
        \ additional credits to the housekeeping tasks sheets depending on configured\
        \ values i.e. travel credits between buildings, or floors, or inventory items\
        \ i.e. cribs, rollaways.</P> <p><strong>OperationId:</strong>removeHousekeepingCreditRules</p>"
      operationId: removeHousekeepingCreditRules
      parameters:
      - description: Unique ID of Code.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Housekeeping Credit Rules
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping credit rules for a specific\
        \ hotel based on code, hotelId, housekeepingCreditRulesToBeChanged. <p>Housekeeping\
        \ credit rules are used to add additional credits to the housekeeping tasks\
        \ sheets depending on configured values i.e. travel credits between buildings,\
        \ or floors, or inventory items i.e. cribs, rollaways.</p> <p><strong>OperationId:</strong>changeHousekeepingCreditRules</p>"
      operationId: changeHousekeepingCreditRules
      parameters:
      - description: Unique ID of rule code.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingCreditRulesToBeChanged'
        description: Request object for changing housekeeping credit rules.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Credit Rules
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingCreditRulesToBeChanged
  /hotels/{hotelId}/housekeepingAttendants:
    get:
      description: "Use this API to return housekeeping attendants for a specific\
        \ hotel based on search criteria such as hotelId, name, attendantsCodes, wildCard,\
        \ includeInactive. OPERA Cloud enables you to store housekeeping attendant\
        \ information, daily assignments, and tracks credits or number of rooms cleaned\
        \ by each attendant. <p><strong>OperationId:</strong>getHousekeepingAttendants</p>"
      operationId: getHousekeepingAttendants
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Partial name of an attendant.
        in: query
        name: name
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: attendantsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Indicator that tells whether to include inactive in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingAttendantsDetails'
          description: Response object for fetching Housekeeping Attendants.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingAttendants not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Attendants
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping attendants for a specific\
        \ hotel. OPERA Cloud enables you to store housekeeping attendant information,\
        \ daily assignments, and tracks credits or number of rooms cleaned by each\
        \ attendant. <p><strong>OperationId:</strong>postHousekeepingAttendants</p>"
      operationId: postHousekeepingAttendants
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingAttendantsCriteria'
        description: Add housekeeping attendant(S).
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create new housekeeping attendants configuration
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingAttendantsCriteria
  /hotels/{hotelId}/housekeepingAttendants/{attendantId}:
    delete:
      description: "Use this API to delete housekeeping attendants for a specific\
        \ hotel based on attendantId, hotelId, inactive.OPERA Cloud enables you to\
        \ store housekeeping attendant information, daily assignments, and tracks\
        \ credits or number of rooms cleaned by each attendant.<p><strong>OperationId:</strong>removeHousekeepingAttendants</p>"
      operationId: removeHousekeepingAttendants
      parameters:
      - description: Unique ID of attendant.
        in: path
        name: attendantId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates whether the attendant is active or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: An attendant ID.
        explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An attendant's phone No.
        explode: true
        in: query
        name: phoneNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Section where the attendant is assigned.
        explode: true
        in: query
        name: section
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Floor where the attendant is assigned.
        explode: true
        in: query
        name: floor
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Job which the attendant is assigned.
        explode: true
        in: query
        name: job
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - description: Application User ID assigned for the attendant.
        explode: true
        in: query
        name: appUser
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete housekeeping attendants configuration
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping attendants for a specific\
        \ hotel based on attendantId, hotelId, housekeepingAttendantsToBeChanged.\
        \ <p>OPERA Cloud enables you to store housekeeping attendant information,\
        \ daily assignments, and tracks credits or number of rooms cleaned by each\
        \ attendant.</p> <p><strong>OperationId:</strong>changeHousekeepingAttendants</p>"
      operationId: changeHousekeepingAttendants
      parameters:
      - description: Unique ID of attendant.
        in: path
        name: attendantId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingAttendantsToBeChanged'
        description: Modify housekeeping attendants
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change housekeeping attendants configuration
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingAttendantsToBeChanged
  /hotels/{hotelId}/housekeepingRoomSchedules:
    get:
      description: "Use this API to return housekeeping room schedules for a specific\
        \ hotel based on search criteria such as hotelId, roomTypeCodes, housekeepingRoomScheduleCodes.\
        \ <p>Housekeeping room schedules reference housekeeping tasks and housekeeping\
        \ codes associated to a room type.</p> <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>"
      operationId: getHousekeepingRoomSchedules
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: housekeepingRoomScheduleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingRoomSchedulesDetails'
          description: Response object for fetching housekeeping tasks and housekeeping
            codes associated to a room type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingRoomSchedules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get housekeeping room schedules
      tags:
      - HotelConfig
    post:
      description: Use this API to create housekeeping room schedules for a specific
        hotel. Housekeeping room schedules reference housekeeping tasks and housekeeping
        codes associated to a room type. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>
      operationId: postHousekeepingRoomSchedules
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingRoomSchedulesCriteria'
        description: Request object for associating housekeeping tasks and housekeeping
          codes to a room type.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create housekeeping room schedules
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingRoomSchedulesCriteria
  /hotels/{hotelId}/housekeepingRoomSchedules/{roomScheduleId}:
    put:
      description: Use this API to update housekeeping room schedules for a specific
        hotel based on the roomScheduleId. Housekeeping room schedules reference housekeeping
        tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>
      operationId: changeHousekeepingRoomSchedules
      parameters:
      - description: Unique ID of room scheduled.
        in: path
        name: roomScheduleId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingRoomSchedulesToBeChanged'
        description: Request object for changing housekeeping tasks and housekeeping
          codes associated to a room type.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change housekeeping room schedules
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingRoomSchedulesToBeChanged
  /hotels/{hotelId}/housekeepingSectionGroups:
    get:
      description: "Use this API to return housekeeping section groups for a specific\
        \ hotel based on search criteria such as hotelId, housekeepingSectionGroupsCodes.\
        \ <p>Housekeeping section groups and sections can be used to group rooms into\
        \ sections or divisions meaningful to the housekeeping attendants with respect\
        \ to floor numbers, various buildings, and group of rooms typically cleaned\
        \ by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSectionGroups</p>"
      operationId: getHousekeepingSectionGroups
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: housekeepingSectionGroupsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingSectionGroupsDetails'
          description: Response object for fetching housekeeping section Groups.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingSectionGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Section Groups
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping section groups for a specific\
        \ hotel. <p>Housekeeping section groups and sections can be used to group\
        \ rooms into sections or divisions meaningful to the housekeeping attendants\
        \ with respect to floor numbers, various buildings, and group of rooms typically\
        \ cleaned by one attendant during the day or turndowns during the evening.</P>\
        \ <p><strong>OperationId:</strong>postHousekeepingSectionGroups</p>"
      operationId: postHousekeepingSectionGroups
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingSectionGroupsCriteria'
        description: Request object to create House Keeping Section Groups for resort.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Housekeeping Section Groups
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingSectionGroupsCriteria
  /hotels/{hotelId}/housekeepingSectionGroups/{code}:
    delete:
      description: "Use this API to delete housekeeping section groups for a specific\
        \ hotel based on hotelId, housekeepingSectionGroupsCode.<p> Housekeeping section\
        \ groups and sections can be used to group rooms into sections or divisions\
        \ meaningful to the housekeeping attendants with respect to floor numbers,\
        \ various buildings, and group of rooms typically cleaned by one attendant\
        \ during the day or turndowns during the evening.</p><p><strong>OperationId:</strong>removeHousekeepingSectionGroups</p>"
      operationId: removeHousekeepingSectionGroups
      parameters:
      - description: Unique Code of house keeping section group.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Configuration code.
        explode: true
        in: query
        name: housekeepingSectionGroupsCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Housekeeping Section Groups
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping section groups for a specific\
        \ hotel based on code, hotelId, housekeepingSectionGroupsToBeChanged.<p>Housekeeping\
        \ section groups and sections can be used to group rooms into sections or\
        \ divisions meaningful to the housekeeping attendants with respect to floor\
        \ numbers, various buildings, and group of rooms typically cleaned by one\
        \ attendant during the day or turndowns during the evening.</p><p><strong>OperationId:</strong>changeHousekeepingSectionGroups</p>"
      operationId: changeHousekeepingSectionGroups
      parameters:
      - description: Unique Code of house keeping section group.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingSectionGroupsToBeChanged'
        description: Request object for modifying housekeeping section groups in resort.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Section Groups
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingSectionGroupsToBeChanged
  /hotels/{hotelId}/housekeepingSections:
    get:
      description: "Use this API to return housekeeping sections for a specific hotel\
        \ based on search criteria such as hotelId, includeInactive, housekeepingSectionsCodes,\
        \ description. <p>Housekeeping section groups and sections can be used to\
        \ group rooms into sections or divisions meaningful to the housekeeping attendants\
        \ with respect to floor numbers, various buildings, and group of rooms typically\
        \ cleaned by one attendant during the day or turndowns during the evening.</p>\
        \ <p><strong>OperationId:</strong>getHousekeepingSections</p>"
      operationId: getHousekeepingSections
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the Section Code is active.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: housekeepingSectionsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Description of the Section.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingSectionsDetails'
          description: Response object for fetching housekeeping section codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingSections not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Sections
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping sections for a specific hotel.\
        \ Housekeeping section groups and sections can be used to group rooms into\
        \ sections or divisions meaningful to the housekeeping attendants with respect\
        \ to floor numbers, various buildings, and group of rooms typically cleaned\
        \ by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>postHousekeepingSections</p>"
      operationId: postHousekeepingSections
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingSectionsCriteria'
        description: Add housekeeping section codes configurations for resort.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Housekeeping Sections
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingSectionsCriteria
  /hotels/{hotelId}/housekeepingSections/{code}:
    delete:
      description: "Use this API to delete housekeeping sections for a specific hotel\
        \ based on the code. Housekeeping section groups and sections can be used\
        \ to group rooms into sections or divisions meaningful to the housekeeping\
        \ attendants with respect to floor numbers, various buildings, and group of\
        \ rooms typically cleaned by one attendant during the day or turndowns during\
        \ the evening. <p><strong>OperationId:</strong>removeHousekeepingSections</p>"
      operationId: removeHousekeepingSections
      parameters:
      - description: Unique Code of house keeping sections.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Housekeeping Sections
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping sections for a specific hotel\
        \ based on code, hotelId. Housekeeping section groups and sections can be\
        \ used to group rooms into sections or divisions meaningful to the housekeeping\
        \ attendants with respect to floor numbers, various buildings, and group of\
        \ rooms typically cleaned by one attendant during the day or turndowns during\
        \ the evening. <p><strong>OperationId:</strong>changeHousekeepingSections</p>"
      operationId: changeHousekeepingSections
      parameters:
      - description: Unique Code of house keeping sections.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingSectionsToBeChanged'
        description: Modify housekeeping section codes in resort configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Sections
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingSectionsToBeChanged
  /hotels/{hotelId}/housekeepingSupplyCodes:
    get:
      description: "Use this API to return housekeeping supply codes for a specific\
        \ hotel based on search criteria such as hotelId, codes, wildCard. Housekeeping\
        \ supplies such as pillow cases, hand towels, bath towels, shampoo can be\
        \ used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>getHouseKeepingSupplyCodes</p>"
      operationId: getHouseKeepingSupplyCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingCodesDetails'
          description: Response object for fetching housekeeping codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HouseKeepingSupplyCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Codes
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping supply codes for a specific\
        \ hotel. Housekeeping supplies such as pillow cases, hand towels, bath towels,\
        \ shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>postHousekeepingSupplyCodes</p>"
      operationId: postHousekeepingSupplyCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingCodesCriteria'
        description: Add housekeeping codes configurations for property.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Housekeeping Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingCodesCriteria
  /hotels/{hotelId}/housekeepingSupplyCodes/{code}:
    delete:
      description: "Use this API to delete housekeeping supply codes for a specific\
        \ hotel based on code, hotelId, housekeepingCodes, sequence. Housekeeping\
        \ supplies such as pillow cases, hand towels, bath towels, shampoo can be\
        \ used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>removeHousekeepingSupplyCodes</p>"
      operationId: removeHousekeepingSupplyCodes
      parameters:
      - description: Unique Code of house keeping.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Code for the code type.
        in: query
        name: housekeepingCodes
        schema:
          type: string
      - description: Display sequence for the housekeeping task.
        in: query
        name: sequence
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Housekeeping Codes
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping supply codes for a specific\
        \ hotel based on code, hotelId, housekeepingCodesToBeChanged. Housekeeping\
        \ supplies such as pillow cases, hand towels, bath towels, shampoo can be\
        \ used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>changeHousekeepingSupplyCodes</p>"
      operationId: changeHousekeepingSupplyCodes
      parameters:
      - description: Unique Code of house keeping.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingCodesToBeChanged'
        description: Modify housekeeping codes in resort configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingCodesToBeChanged
  /hotels/{hotelId}/housekeepingTaskSheetRooms:
    get:
      description: "Use this API to return information related to housekeeping tasksheet\
        \ rooms for a specific hotel based on search criteria such as hotelId, building,\
        \ floor, roomType, daySection, eveningSection, fromRoom, toRoom. Task Sheets\
        \ inform housekeeping room attendants about their daily work assignments;\
        \ providing a list of rooms assigned to attendants, any special instructions\
        \ about specific rooms, and related reservations details. <p><strong>OperationId:</strong>getHousekeepingTaskSheetRooms</p>"
      operationId: getHousekeepingTaskSheetRooms
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Building code for which the housekeeping rooms have to be searched.
          This criteria can be applied only if the BUILDINGS parameter is active.
        in: query
        name: building
        schema:
          type: string
      - description: Floor code for which the housekeeping rooms have to be searched
        in: query
        name: floor
        schema:
          type: string
      - description: Room type for which the housekeeping rooms have to be searched
        in: query
        name: roomType
        schema:
          type: string
      - description: Day section code for which the housekeeping rooms have to be
          searched. This criteria can be applied only if the HOUSEKEEPING_SECTIONS
          parameter is active.
        in: query
        name: daySection
        schema:
          type: string
      - description: Evening section code for which the housekeeping rooms have to
          be searched. This criteria can be applied only if the HOUSEKEEPING_SECTIONS
          parameter is active.
        in: query
        name: eveningSection
        schema:
          type: string
      - description: From Room code for which the housekeeping rooms have to be searched
        in: query
        name: fromRoom
        schema:
          type: string
      - description: To Room code for which the housekeeping rooms have to be searched
        in: query
        name: toRoom
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingTaskSheetRoomsDetails'
          description: Response object for fetching details about housekeeping tasksheet
            rooms.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingTaskSheetRooms not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get information related to housekeeping tasksheet rooms
      tags:
      - HotelConfig
    put:
      description: "Use this API to update information related to housekeeping tasksheet\
        \ rooms for a specific hotel based on hotelId, setHousekeepingTaskSheetRooms.Task\
        \ Sheets inform housekeeping room attendants about their daily work assignments;\
        \ providing a list of rooms assigned to attendants, any special instructions\
        \ about specific rooms, and related reservations details. <p><strong>OperationId:</strong>setHousekeepingTaskSheetRooms</p>"
      operationId: setHousekeepingTaskSheetRooms
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/setHousekeepingTaskSheetRooms'
        description: Request object for setting details about housekeeping tasksheet
          rooms.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' set information related to housekeeping tasksheet rooms'
      tags:
      - HotelConfig
      x-codegen-request-body-name: setHousekeepingTaskSheetRooms
  /hotels/{hotelId}/housekeepingTasks:
    get:
      description: "Use this API to return housekeeping tasks for a specific hotel\
        \ based on search criteria such as hotelId, taskCodes, wildCard, includeInactive.\
        \ Task codes enable you to create various housekeeping task sheets (for example,\
        \ daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>getHousekeepingTasks</p>"
      operationId: getHousekeepingTasks
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: taskCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Flag to indicate if inactive tasks should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/housekeepingTasksDetails'
          description: Response object for fetching housekeeping tasks.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingTasks not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Housekeeping Tasks
      tags:
      - HotelConfig
    post:
      description: "Use this API to create housekeeping tasks for a specific hotel.\
        \ Task codes enable you to create various housekeeping task sheets (for example,\
        \ daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>postHousekeepingTasks</p>"
      operationId: postHousekeepingTasks
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingTasksCriteria'
        description: Add housekeeping tasks configurations for resort.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Housekeeping Tasks
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingTasksCriteria
  /hotels/{hotelId}/housekeepingTasks/{code}:
    delete:
      description: "Use this API to delete housekeeping tasks for a specific hotel\
        \ based on code, hotelId, forceRemove. Task codes enable you to create various\
        \ housekeeping task sheets (for example, daily cleaning, mattress turning,\
        \ inspections, turndown, etc.). <p><strong>OperationId:</strong>removeHousekeepingTasks</p>"
      operationId: removeHousekeepingTasks
      parameters:
      - description: Unique Code of task.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to indicate if records that are marked as \"protected\"\
          \ can be removed. If false, any attempt to remove records that are protected\
          \ will return an error."
        in: query
        name: forceRemove
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Housekeeping Tasks
      tags:
      - HotelConfig
    put:
      description: "Use this API to update housekeeping tasks for a specific hotel\
        \ based on code, hotelId, housekeepingTasksToBeChanged. Task codes enable\
        \ you to create various housekeeping task sheets (for example, daily cleaning,\
        \ mattress turning, inspections, turndown, etc.).<p><strong>OperationId:</strong>changeHousekeepingTasks</p>"
      operationId: changeHousekeepingTasks
      parameters:
      - description: Unique Code of task.
        in: path
        name: code
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/housekeepingTasksToBeChanged'
        description: Modify housekeeping tasks in resort configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Housekeeping Tasks
      tags:
      - HotelConfig
      x-codegen-request-body-name: housekeepingTasksToBeChanged
  /hotels/{hotelId}/outOfOrderServiceReasons:
    get:
      description: "Use this API to return out of order service reasons for a specific\
        \ hotel based on search criteria such as hotelId, includeInactive, limit offset,\
        \ reasonCodes. Out of order (OO) and out of service (OS) are two additional\
        \ housekeeping statuses. These options are used when changing the status for\
        \ rooms that should not be sold due to damage, maintenance, low occupancy\
        \ wing, etc. <p><strong>OperationId:</strong>getOutOfOrderServiceReasons</p>\
        \ <p>The maximum allowable limit for this API is <strong>1000</strong>.</p>"
      operationId: getOutOfOrderServiceReasons
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicator that tells whether to include inactive out of order/service
          reasons in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: reasonCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/outOfOrderServiceReasonsDetails'
          description: Response object for fetching Out of Order/Service Reason(s).
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: OutOfOrderServiceReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Out Of Order Service Reasons
      tags:
      - HotelConfig
    post:
      description: "Use this API to create out of order service reasons for a specific\
        \ hotel. Out of order (OO) and out of service (OS) are two additional housekeeping\
        \ statuses. These options are used when changing the status for rooms that\
        \ should not be sold due to damage, maintenance, low occupancy wing, etc.\
        \ <p><strong>OperationId:</strong>postOutOfOrderServiceReasons</p>"
      operationId: postOutOfOrderServiceReasons
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/outOfOrderServiceReasonsCriteria'
        description: Request object for creating new out of order/service reasons
          for hotels.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Out Of Order Service Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: outOfOrderServiceReasonsCriteria
  /hotels/{hotelId}/outOfOrderServiceReasons/{reasonCode}:
    delete:
      description: "Use this API to delete out of order service reasons for a specific\
        \ hotel based on reasonCode, hotelId. Out of order (OO) and out of service\
        \ (OS) are two additional housekeeping statuses. These options are used when\
        \ changing the status for rooms that should not be sold due to damage, maintenance,\
        \ low occupancy wing, etc. <p><strong>OperationId:</strong>removeOutOfOrderServiceReasons</p>"
      operationId: removeOutOfOrderServiceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Out Of Order Service Reasons
      tags:
      - HotelConfig
    put:
      description: "Use this API to update out of order service reasons for a specific\
        \ hotel based on reasonCode, hotelId, outOfOrderServiceReasonsToBeChanged.Out\
        \ of order (OO) and out of service (OS) are two additional housekeeping statuses.\
        \ These options are used when changing the status for rooms that should not\
        \ be sold due to damage, maintenance, low occupancy wing, etc.<p><strong>OperationId:</strong>changeOutOfOrderServiceReasons</p>"
      operationId: changeOutOfOrderServiceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/outOfOrderServiceReasonsToBeChanged'
        description: Request object for modifying out of order/service reasons for
          hotels.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Out Of Order Service Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: outOfOrderServiceReasonsToBeChanged
  /hotels/{hotelId}/rateGroups:
    get:
      description: Use this API to get Room Groups. <p><strong>OperationId:</strong>getRoomGroups</p>
      operationId: getRoomGroups
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomGroupsDetails'
          description: Response object for fetching Room Groups.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Groups
      tags:
      - HotelConfig
    post:
      description: Use this API to create Room Groups. <p><strong>OperationId:</strong>postRoomGroups</p>
      operationId: postRoomGroups
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomGroupsCriteria'
        description: Request object for creating Room Groups.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Groups
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomGroupsCriteria
  /hotels/{hotelId}/rateGroups/{rateGroupCode}:
    delete:
      description: Use this API to delete Room Groups. <p><strong>OperationId:</strong>removeRoomGroups</p>
      operationId: removeRoomGroups
      parameters:
      - description: Unique Code of rate group.
        in: path
        name: rateGroupCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Configuration code.
        explode: true
        in: query
        name: roomGroupsCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Groups
      tags:
      - HotelConfig
    put:
      description: Use this API to update Room Groups. <p><strong>OperationId:</strong>changeRoomGroups</p>
      operationId: changeRoomGroups
      parameters:
      - description: Unique Code of rate group.
        in: path
        name: rateGroupCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomGroupsToBeChanged'
        description: Request object for changing Room Groups.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Groups
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomGroupsToBeChanged
  /hotels/{hotelId}/roomClasses:
    get:
      description: Retrieve a list of a properties Room Classes. <p><strong>OperationId:</strong>getRoomClasses</p>
      operationId: getRoomClasses
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomClassesDetails'
          description: Response object for fetching existing hotel level room classes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomClasses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Classes
      tags:
      - HotelConfig
    post:
      description: Use this API to create a new hotel level room class. <p><strong>OperationId:</strong>postRoomClass</p>
      operationId: postRoomClass
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomClassCriteria'
        description: Request object for creating a new hotel level room class.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Class
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomClassCriteria
  /hotels/{hotelId}/roomClasses/{roomClassId}:
    delete:
      description: Use this API to delete an existing properties Room Class. <p><strong>OperationId:</strong>deleteRoomClass</p>
      operationId: deleteRoomClass
      parameters:
      - description: Unique ID of room class.
        in: path
        name: roomClassId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomClass
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a Room Class
      tags:
      - HotelConfig
    put:
      description: Use this API to update an existing properties Room Class. <p><strong>OperationId:</strong>putRoomClass</p>
      operationId: putRoomClass
      parameters:
      - description: Unique ID of room class.
        in: path
        name: roomClassId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomClassToBeChanged'
        description: Request object for changing an existing hotel level room class.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a Room Class
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomClassToBeChanged
  /hotels/{hotelId}/roomConditions:
    get:
      description: Use this API to get room condition configuration . <p><strong>OperationId:</strong>getResortRoomConditions</p>
      operationId: getResortRoomConditions
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: roomConditionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - in: query
        name: inactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/resortRoomConditionsDetails'
          description: Response object for information regarding room condition configuration
            in a resort.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ResortRoomConditions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get room condition configuration '
      tags:
      - HotelConfig
    post:
      description: Use this API to create room condition configuration . <p><strong>OperationId:</strong>postResortRoomCondition</p>
      operationId: postResortRoomCondition
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/resortRoomConditionCriteria'
        description: Request object for Create Room Condition.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create room condition configuration '
      tags:
      - HotelConfig
      x-codegen-request-body-name: resortRoomConditionCriteria
  /hotels/{hotelId}/roomConditions/{roomConditionCode}:
    delete:
      description: Use this API to delete room condition configuration . <p><strong>OperationId:</strong>removeResortRoomCondition</p>
      operationId: removeResortRoomCondition
      parameters:
      - description: Unique Code of template.
        in: path
        name: roomConditionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete room condition configuration '
      tags:
      - HotelConfig
    put:
      description: Use this API to update room condition configuration . <p><strong>OperationId:</strong>changeResortRoomCondition</p>
      operationId: changeResortRoomCondition
      parameters:
      - description: Unique Code of template.
        in: path
        name: roomConditionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/resortRoomConditionToBeChanged'
        description: Request object for Modifying Room Condition configuration in
          a resort.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change room condition configuration '
      tags:
      - HotelConfig
      x-codegen-request-body-name: resortRoomConditionToBeChanged
  /hotels/{hotelId}/roomFeatures:
    delete:
      description: Use this API to delete Hotel Room Features. <p><strong>OperationId:</strong>removeRoomFeatures</p>
      operationId: removeRoomFeatures
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Specifies the code.
        explode: true
        in: query
        name: genericHotelParentCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the group.
        explode: true
        in: query
        name: genericHotelParentCodesGroup
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Hotel Room Features
      tags:
      - HotelConfig
    get:
      description: "Use this API to return room features for a specific property based\
        \ on search criteria such as codes, wildCard.<p><strong>OperationId:</strong>getRoomFeatures</p>"
      operationId: getRoomFeatures
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomFeaturesDetails'
          description: Response object to fetch room features of hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomFeatures not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel room features
      tags:
      - HotelConfig
    post:
      description: Use this API to create Hotel Room Features. <p><strong>OperationId:</strong>postRoomFeatures</p>
      operationId: postRoomFeatures
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomFeaturesCriteria'
        description: Request object for creating room features of hotel.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Hotel Room Features
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomFeaturesCriteria
    put:
      description: Use this API to update Hotel Room Features. <p><strong>OperationId:</strong>changeRoomFeatures</p>
      operationId: changeRoomFeatures
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomFeaturesToBeChanged'
        description: Request object for changing room features of hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Hotel Room Features
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomFeaturesToBeChanged
  /hotels/{hotelId}/roomMaintenanceReasons:
    get:
      description: Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p>
        <p>The maximum allowable limit for this API is <strong>1000</strong>.</p>
      operationId: getHotelRoomMaintenanceReasons
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Codes to be searched.
        explode: true
        in: query
        name: roomMaintenanceReasonCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Inactive flag - whether or not to display inactive records
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelRoomMaintenanceReasonsDetails'
          description: Response object for fetching room maintenance reasons for a
            hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelRoomMaintenanceReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Hotel Room Maintenance Reasons
      tags:
      - HotelConfig
    post:
      description: Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>
      operationId: postHotelRoomMaintenanceReasons
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelRoomMaintenanceReasonsCriteria'
        description: Request object for creating new room maintenance reasons for
          a hotel.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Hotel Room Maintenance Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: hotelRoomMaintenanceReasonsCriteria
  /hotels/{hotelId}/roomMaintenanceReasons/{reasonCode}:
    delete:
      description: Use this API to delete Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>
      operationId: removeHotelRoomMaintenanceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Hotel Room Maintenance Reasons
      tags:
      - HotelConfig
    put:
      description: Use this API to update Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>
      operationId: changeHotelRoomMaintenanceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelRoomMaintenanceReasonsToBeChanged'
        description: Request object for modifying room maintenance reasons for a hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Hotel Room Maintenance Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: hotelRoomMaintenanceReasonsToBeChanged
  /hotels/{hotelId}/roomSchedules/{sequenceId}:
    delete:
      description: Use this API to remove the housekeeping room schedule for a specific
        property based on hotleId and sequence number of task. <p><strong>OperationId:</strong>
        removeHousekeepinSchedule </p>
      operationId: removeHousekeepingSchedule
      parameters:
      - description: Unique sequence number of room scheduled.
        in: path
        name: sequenceId
        required: true
        schema:
          minimum: 1
          type: integer
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete housekeeping room schedules
      tags:
      - HotelConfig
  /hotels/{hotelId}/roomType/{roomTypeCode}:
    get:
      description: Use this API to get Room Type details of a Property. The search
        criteria can include a list of Room Types and the  Property (hotelID). <p><strong>OperationId:</strong>getRoomTypeInfo</p>
      operationId: getRoomTypeInfo
      parameters:
      - description: Unique Code of room type.
        in: path
        name: roomTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomTypeInfoDetails'
          description: Response object for fetching room type information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomTypeInfo not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Type Information
      tags:
      - HotelConfig
  /hotels/{hotelId}/roomTypeCodes/{roomTypeCode}/housekeepingRoomSchedules/{roomScheduleId}:
    delete:
      description: Use this API to delete housekeeping room schedules. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>
      operationId: removeHousekeepingRoomSchedules
      parameters:
      - description: Unique ID of room scheduled.
        in: path
        name: roomScheduleId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of room Type Code.
        in: path
        name: roomTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete housekeeping room schedules
      tags:
      - HotelConfig
  /hotels/{hotelId}/roomTypes:
    get:
      description: "Use this API to return room types for a specific property based\
        \ on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo,\
        \ etc.<p><strong>OperationId:</strong>getRoomTypes</p>"
      operationId: getRoomTypes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: List of Hotels.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if accessible room type should be fetched.
        in: query
        name: accessible
        schema:
          type: boolean
      - description: Flag to indicate if inactive room types should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Is it a physical sleep room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - description: Flag to indicate if summary or detailed information should be
          fetched.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomTypesDetails'
          description: Response object for Fetching existing Room Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel room types
      tags:
      - HotelConfig
    post:
      description: Use this API to create new room types for a property. A list of
        new room types can be passed as part of the request to Use this API to create
        multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>
      operationId: postRoomTypes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypesCriteria'
        description: Request object for Creating a new Room Type.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a new room type
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypesCriteria
  /hotels/{hotelId}/roomTypes/{roomTypeId}:
    delete:
      description: Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>
      operationId: deleteRoomTypes
      parameters:
      - description: Unique ID of room types.
        in: path
        name: roomTypeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Types
      tags:
      - HotelConfig
    put:
      description: Use this API to update a Room Type from a property. A list of room
        types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>
      operationId: putRoomTypes
      parameters:
      - description: Unique ID of room types.
        in: path
        name: roomTypeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypesToBeChanged'
        description: Request object for Modifying Room Type.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a Room Type
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypesToBeChanged
  /hotels/{hotelId}/rooms:
    get:
      description: "Use this API to return rooms for a specific property based on\
        \ search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>"
      operationId: getRooms
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Is it a physical room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room to be searched.
        in: query
        name: room
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomsDetails'
          description: Response object for fetching complete information of existing
            rooms.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Rooms not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel rooms
      tags:
      - HotelConfig
    post:
      description: Use this API to create a new room for a specific property.<p><strong>OperationId:</strong>postRooms</p>
      operationId: postRooms
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomCriteria'
        description: Request object for creating a new room.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Post a new room
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomCriteria
  /hotels/{hotelId}/rooms/{roomsId}:
    delete:
      description: Use this API to delete an existing room given hotel code and room.
        <p><strong>OperationId:</strong>deleteRooms</p>
      operationId: deleteRooms
      parameters:
      - description: Unique ID of room.
        in: path
        name: roomsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: room
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete an existing room given hotel code and room
      tags:
      - HotelConfig
    put:
      description: Use this API to update an existing room. <p><strong>OperationId:</strong>putRooms</p>
      operationId: putRooms
      parameters:
      - description: Unique ID of room.
        in: path
        name: roomsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomToBeChanged'
        description: Request object for changing details of an existing room.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change an existing room
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomToBeChanged
  /hotels/{hotelId}/rooms/{roomsId}/copy:
    put:
      description: Use this API to create new rooms based on an existing room. Component
        rooms are not allowed to be copied. <p><strong>OperationId:</strong>copyRooms</p>
      operationId: copyRooms
      parameters:
      - description: Unique ID of room.
        in: path
        name: roomsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyRooms'
        description: "Request object for creating multiple rooms based on an existing\
          \ room. New rooms may have different floor preferences, room features, housekeeping\
          \ credits and room sections. The rest of the details except for attached\
          \ connecting rooms will be copied from the base existing room. Component\
          \ rooms are not allowed to be copied."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Rooms
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyRooms
  /hotels/{hotelId}/vacantRoomStatus:
    get:
      description: Use this API to retrieve vacant room status configuration. <p><strong>OperationId:</strong>getVacantRoomStatus</p>
        <p>This API allows a time span of <strong>90</strong> days.</p>
      operationId: getVacantRoomStatus
      parameters:
      - description: Hotel Code for which vacant room status needs to be fetched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Room Type of the room.
        explode: true
        in: query
        name: roomTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The starting value of the date range. By default this would be
          the current business date.
        in: query
        name: beginDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/vacantRoomStatusesList'
          description: Response object for fetching Vacant Room Status.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ' Device Configuration List not found.'
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get vacant room status configuration.
      tags:
      - HotelConfig
    post:
      description: Create a new vacant room status for specific room type for a defined
        date range or number of days or both date range and number of days together.
        <p><strong>OperationId:</strong>postVacantRoomStatus</p>
      operationId: postVacantRoomStatus
      parameters:
      - description: Hotel Code for which vacant room status needs to be fetched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/vacantRoomStatusDetails'
        description: Request object for creating a vacant room housekeeping status
          details.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create vacant room status configuration.
      tags:
      - HotelConfig
      x-codegen-request-body-name: vacantRoomStatusDetails
  /hotels/{hotelId}/vacantRoomStatus/{vacantRoomStatusId}:
    delete:
      description: Delete vacant room status configuration. <p><strong>OperationId:</strong>deleteVacantRoomStatus</p>
      operationId: deleteVacantRoomStatus
      parameters:
      - description: Hotel Code for which vacant room status needs to be fetched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: The unique ID of the vacant room configuration to which this
          record applies.
        in: path
        name: vacantRoomStatusId
        required: true
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete vacant room status configuration.
      tags:
      - HotelConfig
    put:
      description: Update an existing vacant rooms status configuration. <p><strong>OperationId:</strong>putVacantRoomStatus</p>
      operationId: putVacantRoomStatus
      parameters:
      - description: Hotel Code for which vacant room status needs to be fetched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: The unique ID of the vacant room configuration to which this
          record applies.
        in: path
        name: vacantRoomStatusId
        required: true
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/vacantRoomStatusDetails'
        description: Request object for creating a vacant room housekeeping details.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update the vacant room status configuration.
      tags:
      - HotelConfig
      x-codegen-request-body-name: vacantRoomStatusDetails
  /hotels/{sourceHotelId}/buildingGroups/copy:
    put:
      description: You can use this API to copy existing Housekeeping Building Groups
        from the source property to the target properties. <p><strong>OperationId:</strong>copyBuildingGroups</p>
      operationId: copyBuildingGroups
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyBuildingGroups'
        description: Request object to copy Building Group details to hotel(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Building Groups
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyBuildingGroups
  /hotels/{sourceHotelId}/buildings/copy:
    put:
      description: Copy existing Building from source property to target properties.
        <p><strong>OperationId:</strong>copyBuildings</p>
      operationId: copyBuildings
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyBuildings'
        description: Request object for copying Building details to hotel(s).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' copy existing Building from source property to target properties'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyBuildings
  /hotels/{sourceHotelId}/housekeepingSectionGroups/copy:
    put:
      description: Copy Housekeeping Section Groups. <p><strong>OperationId:</strong>copyHousekeepingSectionGroups</p>
      operationId: copyHousekeepingSectionGroups
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyHousekeepingSectionGroups'
        description: Request object for copying housekeeping section groups in resort.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' copy Housekeeping Section Groups'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyHousekeepingSectionGroups
  /hotels/{sourceHotelId}/housekeepingSections/copy:
    put:
      description: Copy Housekeeping Sections. <p><strong>OperationId:</strong>copyHousekeepingSections</p>
      operationId: copyHousekeepingSections
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyHousekeepingSections'
        description: List of the housekeeping section code(s) to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' copy Housekeeping Sections'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyHousekeepingSections
  /hotels/{sourceHotelId}/housekeepingSupplyCodes/copy:
    put:
      description: Copy Housekeeping Codes. <p><strong>OperationId:</strong>copyHousekeepingSupplyCodes</p>
      operationId: copyHousekeepingSupplyCodes
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyHousekeepingCodes'
        description: List of the housekeeping code(s) to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' copy Housekeeping Codes'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyHousekeepingCodes
  /outOfOrderServiceReasons:
    get:
      description: ' Use this API to get template Out Of Order Service Reasons. <p><strong>OperationId:</strong>getTemplateOutOfOrderServiceReasons</p>'
      operationId: getTemplateOutOfOrderServiceReasons
      parameters:
      - description: Indicator that tells whether to include inactive out of order/service
          reasons in search results.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: reasonCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateOutOfOrderServiceReasonsDetails'
          description: Response object for fetching template Out of order/service
            reason(s).
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateOutOfOrderServiceReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' Get template Out Of Order Service Reasons'
      tags:
      - HotelConfig
    post:
      description: Use this API to create a template Out Of Order Service Reason Code.
        <p><strong>OperationId:</strong>postTemplateOutOfOrderServiceReasons</p>
      operationId: postTemplateOutOfOrderServiceReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateOutOfOrderServiceReasonsCriteria'
        description: Request object for creating new template out of order/service
          reasons.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a template Out Of Order Service Reason Code
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateOutOfOrderServiceReasonsCriteria
  /outOfOrderServiceReasons/{reasonCode}:
    delete:
      description: Use this API to delete a template Out Of Order Service Reason Code.
        <p><strong>OperationId:</strong>removeTemplateOutOfOrderServiceReasons</p>
      operationId: removeTemplateOutOfOrderServiceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a template Out Of Order Service Reason Code
      tags:
      - HotelConfig
    put:
      description: Use this API to update a template Out Of Order Service Reason Code.
        <p><strong>OperationId:</strong>changeTemplateOutOfOrderServiceReasons</p>
      operationId: changeTemplateOutOfOrderServiceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateOutOfOrderServiceReasonsToBeChanged'
        description: Request object for modifying template out of order/service reasons.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a template Out Of Order Service Reason Code
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateOutOfOrderServiceReasonsToBeChanged
  /roomClass:
    post:
      description: This API is used to create a new room class template. <p><strong>OperationId:</strong>postRoomClassTemplates</p>
      operationId: postRoomClassTemplates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomClassTemplateCriteria'
        description: Request object for creating a new room class template.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Class Template
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomClassTemplateCriteria
  /roomClasses:
    get:
      description: This API gets the room class templates that match the criteria
        in the request message. <p><strong>OperationId:</strong>getRoomClassTemplates</p>
      operationId: getRoomClassTemplates
      parameters:
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomClassTemplatesDetails'
          description: Response object for information regarding template room classes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomClassTemplates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Class Templates
      tags:
      - HotelConfig
  /roomClasses/{roomClassTemplateId}:
    delete:
      description: Use this API to delete an existing room class template. <p><strong>OperationId:</strong>deleteRoomClassTemplate</p>
      operationId: deleteRoomClassTemplate
      parameters:
      - description: Unique ID of room class template.
        in: path
        name: roomClassTemplateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomClass
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Class Template
      tags:
      - HotelConfig
    put:
      description: This API is used to update an existing room class template. <p><strong>OperationId:</strong>putRoomClassTemplate</p>
      operationId: putRoomClassTemplate
      parameters:
      - description: Unique ID of room class template.
        in: path
        name: roomClassTemplateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomClassTemplateToBeChanged'
        description: Request object for modifying an existing room class template.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Class Template
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomClassTemplateToBeChanged
  /roomConditions:
    get:
      description: Use this API to get room condition templates. <p><strong>OperationId:</strong>getRoomConditionTemplates</p>
      operationId: getRoomConditionTemplates
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: roomConditionCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - in: query
        name: inactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomConditionTemplatesDetails'
          description: Response object for information regarding room condition template
            of a property.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomConditionTemplates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get room condition templates
      tags:
      - HotelConfig
    post:
      description: Use this API to create new room condition template. <p><strong>OperationId:</strong>postRoomConditionTemplate</p>
      operationId: postRoomConditionTemplate
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomConditionTemplateCriteria'
        description: Request object for creating a new Room Condition Template.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create new room condition template
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomConditionTemplateCriteria
  /roomConditions/{templateCode}:
    delete:
      description: Use this API to delete room condition template. <p><strong>OperationId:</strong>removeRoomConditionTemplate</p>
      operationId: removeRoomConditionTemplate
      parameters:
      - description: Unique Code of template.
        in: path
        name: templateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomConditionTemplateCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete room condition template
      tags:
      - HotelConfig
    put:
      description: Use this API to update a room condition template. <p><strong>OperationId:</strong>changeRoomConditionTemplate</p>
      operationId: changeRoomConditionTemplate
      parameters:
      - description: Unique Code of template.
        in: path
        name: templateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomConditionTemplateToBeChanged'
        description: Request object for Modifying Room Condition Template.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change room condition template
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomConditionTemplateToBeChanged
  /roomFeatures:
    delete:
      description: Use this API to delete template Room Features. <p><strong>OperationId:</strong>removeTemplateRoomFeatures</p>
      operationId: removeTemplateRoomFeatures
      parameters:
      - description: Specifies the code.
        explode: true
        in: query
        name: genericTemplateParentCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the group.
        explode: true
        in: query
        name: genericTemplateParentGroups
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete template Room Features
      tags:
      - HotelConfig
    get:
      description: Use this API to get template Room Features. <p><strong>OperationId:</strong>getTemplateRoomFeatures</p>
      operationId: getTemplateRoomFeatures
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateRoomFeaturesDetails'
          description: Response object to fetch template room features.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateRoomFeatures not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get template Room Features
      tags:
      - HotelConfig
    post:
      description: Use this API to create template Room Features. <p><strong>OperationId:</strong>postTemplateRoomFeatures</p>
      operationId: postTemplateRoomFeatures
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateRoomFeaturesCriteria'
        description: Request object for creating template room features.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create template Room Features
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateRoomFeaturesCriteria
    put:
      description: Use this API to update template Room Features. <p><strong>OperationId:</strong>changeTemplateRoomFeatures</p>
      operationId: changeTemplateRoomFeatures
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateRoomFeaturesToBeChanged'
        description: Request object for changing template room features.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change template Room Features
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateRoomFeaturesToBeChanged
  /roomHierarchies:
    delete:
      description: Use this API to delete Room Hierarchies. <p><strong>OperationId:</strong>removeRoomHierarchies</p>
      operationId: removeRoomHierarchies
      parameters:
      - description: Provides the type of room hierarchy
        explode: true
        in: query
        name: roomHierarchyType
        schema:
          items:
            enum:
            - Type
            - Class
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Resort code in which the hierarchy should exist
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: From code to process
        explode: true
        in: query
        name: fromCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Hierarchies
      tags:
      - HotelConfig
    get:
      description: Use this API to get Room Hierarchies. <p><strong>OperationId:</strong>getRoomHierarchies</p>
      operationId: getRoomHierarchies
      parameters:
      - description: Provides the type of room hierarchy
        in: query
        name: roomHierarchyType
        schema:
          enum:
          - Type
          - Class
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: From code to process
        in: query
        name: fromCode
        schema:
          type: string
      - description: To code to process
        in: query
        name: toCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomHierarchiesDetails'
          description: Response for fetch room hierarchies
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomHierarchies not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Hierarchies
      tags:
      - HotelConfig
    post:
      description: Use this API to create Room Hierarchies. <p><strong>OperationId:</strong>postRoomHierarchies</p>
      operationId: postRoomHierarchies
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomHierarchiesCriteria'
        description: Request to create room hierarchies
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Hierarchies
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomHierarchiesCriteria
    put:
      description: Use this API to update Room Hierarchies. <p><strong>OperationId:</strong>changeRoomHierarchies</p>
      operationId: changeRoomHierarchies
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomHierarchiesToBeChanged'
        description: Request to change room hierarchies
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Hierarchies
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomHierarchiesToBeChanged
  /roomHierarchies/copy:
    put:
      description: You can use this API to copy Room Hierarchies. <p><strong>OperationId:</strong>copyRoomHierarchies</p>
      operationId: copyRoomHierarchies
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyRoomHierarchies'
        description: Request to copy room hierarchies
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ' copy Room Hierarchies'
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyRoomHierarchies
  /roomHierarchies/generate:
    post:
      description: Generate the room hierarchies. <p><strong>OperationId:</strong>generateRoomHierarchy</p>
      operationId: generateRoomHierarchy
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomHierarchiesToGenerate'
        description: Generates the room hierarchies based on the AI cost function
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomHierarchiesDetails'
          description: Response for Generate Room Hierarchy
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: generate the room hierarchies
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomHierarchiesToGenerate
  /roomMaintenanceReasons:
    get:
      description: Use this API to get Template Room Maintenance Reasons. <p><strong>OperationId:</strong>getTemplateRoomMaintenanceReasons</p>
      operationId: getTemplateRoomMaintenanceReasons
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: roomMaintenanceReasonCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Inactive flag - whether or not to display inactive records
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateRoomMaintenanceReasonsDetails'
          description: Response object for fetching template room maintenance reasons.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateRoomMaintenanceReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Template Room Maintenance Reasons
      tags:
      - HotelConfig
    post:
      description: Use this API to create Template Room Maintenance Reasons. <p><strong>OperationId:</strong>postTemplateRoomMaintenanceReasons</p>
      operationId: postTemplateRoomMaintenanceReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateRoomMaintenanceReasonsCriteria'
        description: Request object for creating new template room maintenance reasons.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Template Room Maintenance Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateRoomMaintenanceReasonsCriteria
  /roomMaintenanceReasons/{reasonCode}:
    delete:
      description: Use this API to delete Template Room Maintenance Reasons. <p><strong>OperationId:</strong>removeTemplateRoomMaintenanceReasons</p>
      operationId: removeTemplateRoomMaintenanceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Template Room Maintenance Reasons
      tags:
      - HotelConfig
    put:
      description: Use this API to update Template Room Maintenance Reasons. <p><strong>OperationId:</strong>changeTemplateRoomMaintenanceReasons</p>
      operationId: changeTemplateRoomMaintenanceReasons
      parameters:
      - description: Unique Code of reason.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateRoomMaintenanceReasonsToBeChanged'
        description: Request object for modifying template room maintenance reasons.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Template Room Maintenance Reasons
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateRoomMaintenanceReasonsToBeChanged
  /roomMoveReasons:
    get:
      description: Use this API to get Room Move Reasons. <p><strong>OperationId:</strong>getRoomMoveReasons</p>
      operationId: getRoomMoveReasons
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomMoveReasonsDetails'
          description: Response object for fetching Room Move Reasons.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomMoveReasons not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Move Reasons
      tags:
      - ChainConfig
    post:
      description: Use this API to create Room Move Reasons. <p><strong>OperationId:</strong>postRoomMoveReasons</p>
      operationId: postRoomMoveReasons
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomMoveReasonsCriteria'
        description: Request object for creating Room Move Reasons.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Move Reasons
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomMoveReasonsCriteria
  /roomMoveReasons/{reasonCode}:
    delete:
      description: Use this API to delete Room Move Reasons. <p><strong>OperationId:</strong>removeRoomMoveReasons</p>
      operationId: removeRoomMoveReasons
      parameters:
      - description: Unique Code of Reasons.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomMoveReasonsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Move Reasons
      tags:
      - ChainConfig
    put:
      description: Use this API to update Room Move Reasons. <p><strong>OperationId:</strong>changeRoomMoveReasons</p>
      operationId: changeRoomMoveReasons
      parameters:
      - description: Unique Code of Reasons.
        in: path
        name: reasonCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomMoveReasonsToBeChanged'
        description: Request object for changing Room Move Reasons.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Move Reasons
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomMoveReasonsToBeChanged
  /roomPotentials:
    get:
      description: Use this API to get Room Potentials. <p><strong>OperationId:</strong>getRoomPotentials</p>
      operationId: getRoomPotentials
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomPotentialsDetails'
          description: Response object for fetching Room Potentials.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomPotentials not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Potentials
      tags:
      - ChainConfig
    post:
      description: Use this API to create Room Potentials. <p><strong>OperationId:</strong>postRoomPotentials</p>
      operationId: postRoomPotentials
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomPotentialsCriteria'
        description: Request object for creating Room Potentials.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Potentials
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomPotentialsCriteria
  /roomPotentials/{roomPotentialsId}:
    delete:
      description: Use this API to delete Room Potentials. <p><strong>OperationId:</strong>deleteRoomPotentials</p>
      operationId: deleteRoomPotentials
      parameters:
      - description: Unique ID of Room Potentials.
        in: path
        name: roomPotentialsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomPotentialsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Potentials
      tags:
      - ChainConfig
    put:
      description: Use this API to update Room Potentials. <p><strong>OperationId:</strong>putRoomPotentials</p>
      operationId: putRoomPotentials
      parameters:
      - description: Unique ID of Room Potentials.
        in: path
        name: roomPotentialsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomPotentialsToBeChanged'
        description: Request object for changing Room Potentials.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Potentials
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomPotentialsToBeChanged
  /roomPreferencePriorities:
    get:
      description: Use this API to get Room Preference Priorities. <p><strong>OperationId:</strong>getRoomPreferencePriorities</p>
      operationId: getRoomPreferencePriorities
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomPreferencePrioritiesDetails'
          description: Response object for fetching Room Preference Priorities.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomPreferencePriorities not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Preference Priorities
      tags:
      - ChainConfig
    post:
      description: Use this API to create Room Preference Priorities. <p><strong>OperationId:</strong>postRoomPreferencePriorities</p>
      operationId: postRoomPreferencePriorities
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomPreferencePrioritiesCriteria'
        description: Request object for creating Room Preference Priorities.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Preference Priorities
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomPreferencePrioritiesCriteria
  /roomPreferencePriorities/{roomPreferencePrioritiesId}:
    delete:
      description: Use this API to delete Room Preference Priorities. <p><strong>OperationId:</strong>deleteRoomPreferencePriorities</p>
      operationId: deleteRoomPreferencePriorities
      parameters:
      - description: Unique ID of Room Preference Priorities.
        in: path
        name: roomPreferencePrioritiesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomPreferencePrioritiesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Room Preference Priorities
      tags:
      - ChainConfig
    put:
      description: Use this API to update Room Preference Priorities. <p><strong>OperationId:</strong>putRoomPreferencePriorities</p>
      operationId: putRoomPreferencePriorities
      parameters:
      - description: Unique ID of Room Preference Priorities.
        in: path
        name: roomPreferencePrioritiesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomPreferencePrioritiesToBeChanged'
        description: Request object for changing Room Preference Priorities.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Preference Priorities
      tags:
      - ChainConfig
      x-codegen-request-body-name: roomPreferencePrioritiesToBeChanged
  /roomSchedules/templates:
    get:
      description: "Use this API to fetch housekeeping room schedule configured at\
        \ template level for the given search criteria such Room Type, Housekeeping\
        \ Room Schedule Codes.<p><strong>OperationId:</strong>getTemplateHousekeepingRoomSchedules</p>"
      operationId: getTemplateHousekeepingRoomSchedules
      parameters:
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: housekeepingRoomScheduleCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateHousekeepingRoomSchedulesDetails'
          description: Response object of fetch template housekeeping tasks and its
            associated housekeeping codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Template HousekeepingRoomSchedules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get housekeeping room schedules configured at template level.
      tags:
      - HotelConfig
    post:
      description: "Use this API to create/configure housekeeping room schedule at\
        \ template level for a given data like task code,room type,priority,sequence\
        \ etc., and this operation is supported when either the Task Sheets or the\
        \ Advance Task Sheets OPERA Control is active.<p><strong>OperationId:</strong>postTemplateHousekeepingRoomSchedule</p>"
      operationId: postTemplateHousekeepingRoomSchedule
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateHousekeepingRoomSchedulesCriteria'
        description: Request object to create housekeeping room schedules at template
          level
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create housekeeping room schedules at template level
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateHousekeepingRoomSchedulesCriteria
  /roomSchedules/templates/{sequenceId}:
    delete:
      description: Use this API to delete the housekeeping room schedules configured
        at template level for a given unique sequence ID of the scheduled template
        task. <p><strong>OperationId:</strong> deleteTemplateHousekeepingRoomSchedule
        </p>
      operationId: deleteTemplateHousekeepingRoomSchedule
      parameters:
      - description: Unique sequence number of room scheduled.
        in: path
        name: sequenceId
        required: true
        schema:
          minimum: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete housekeeping room schedules configured at template level
      tags:
      - HotelConfig
    put:
      description: Use this API to update housekeeping room schedule configured at
        template level for a given unique sequence ID of the scheduled task and this
        operation is supported when either the Task Sheets or the Advance Task Sheets
        OPERA Control is active.<p><strong>OperationId:</strong>changeTemplateHousekeepingRoomSchedule</p>
      operationId: changeTemplateHousekeepingRoomSchedule
      parameters:
      - description: Unique sequence number of room scheduled.
        in: path
        name: sequenceId
        required: true
        schema:
          minimum: 1
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateHousekeepingRoomSchedulesToBeChanged'
        description: Request object for changing housekeeping task schedules configured
          at template level.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change housekeeping room schedules configured at template level
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateHousekeepingRoomSchedulesToBeChanged
  /roomTypes:
    get:
      description: This API accepts the room type template request search criteria
        and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>
      operationId: getRoomTypeTemplates
      parameters:
      - description: Include inactive Room type in search result?
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Is it a physical sleep room type.
        in: query
        name: physical
        schema:
          default: false
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          default: false
          type: boolean
      - in: query
        name: summaryInfo
        schema:
          type: boolean
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomTypeTemplatesDetails'
          description: Response object for information regarding room type template
            of a property.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomTypeTemplates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Room Type Templates
      tags:
      - HotelConfig
    post:
      description: This API is used to Use this API to create new Room Type templates.
        <p><strong>OperationId:</strong>postRoomTypeTemplates</p>
      operationId: postRoomTypeTemplates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypeTemplatesCriteria'
        description: Request object for creating a new Room Type Template.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Type Templates
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypeTemplatesCriteria
  /roomTypes/{roomTypeTemplatesId}:
    delete:
      description: Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>
      operationId: deleteRoomTypeTemplates
      parameters:
      - description: Unique ID of room type.
        in: path
        name: roomTypeTemplatesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete new Room Type templates '
      tags:
      - HotelConfig
    put:
      description: This API is used to update a Room Type template. Use this API to
        updates can be made concurrently to multiple templates by passing Collection
        of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>
      operationId: putRoomTypeTemplates
      parameters:
      - description: Unique ID of room type.
        in: path
        name: roomTypeTemplatesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypeTemplatesToBeChanged'
        description: Request object for Modifying existing Room Type Templates.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Room Type Templates
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypeTemplatesToBeChanged
  /roomsSummary:
    get:
      description: "Use this API to return room summary information based on search\
        \ criteria such as hotelId, roomClassCodes, roomTypeCodes, roomCodes, wildCard,\
        \ etc.<p><strong>OperationId:</strong>getRoomsSummary</p>"
      operationId: getRoomsSummary
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Is it a physical room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - description: Hotel code of room to be searched.
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: roomCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Building associated with room to be searched.
        in: query
        name: building
        schema:
          type: string
      - explode: true
        in: query
        name: ratingsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomsSummaryDetails'
          description: Response object for fetching summary information of existing
            rooms.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomsSummary not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get room summary
      tags:
      - HotelConfig
  /smokingTypes:
    get:
      description: Use this API to get Smoking Types. <p><strong>OperationId:</strong>getSmokingTypes</p>
      operationId: getSmokingTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/smokingTypesDetails'
          description: Response object for fetching Smoking Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SmokingTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Smoking Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Smoking Types. <p><strong>OperationId:</strong>postSmokingTypes</p>
      operationId: postSmokingTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/smokingTypesCriteria'
        description: Request object for creating Smoking Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Smoking Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: smokingTypesCriteria
  /smokingTypes/{smokingTypesId}:
    delete:
      description: Use this API to delete Smoking Types. <p><strong>OperationId:</strong>deleteSmokingTypes</p>
      operationId: deleteSmokingTypes
      parameters:
      - description: Unique ID of Smoking Types.
        in: path
        name: smokingTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: smokingTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Smoking Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Smoking Types. <p><strong>OperationId:</strong>putSmokingTypes</p>
      operationId: putSmokingTypes
      parameters:
      - description: Unique ID of Smoking Types.
        in: path
        name: smokingTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/smokingTypesToBeChanged'
        description: Request object for changing Smoking Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Smoking Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: smokingTypesToBeChanged
  /templateFloors:
    get:
      description: Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>
      operationId: getTemplateFloors
      parameters:
      - explode: true
        in: query
        name: floors
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateFloorsDetails'
          description: Response object for fetching floors at the template level.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateFloors not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get template floors
      tags:
      - HotelConfig
    post:
      description: Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>
      operationId: postTemplateFloors
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateFloorsCriteria'
        description: Request object for creating floors at the template level.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create template floors
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateFloorsCriteria
  /templateFloors/{templateFloorsId}:
    delete:
      description: Use this API to delete template floors. <p><strong>OperationId:</strong>removeTemplateFloors</p>
      operationId: removeTemplateFloors
      parameters:
      - description: Unique ID of template floors.
        in: path
        name: templateFloorsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete template floors
      tags:
      - HotelConfig
    put:
      description: Use this API to update template floors. <p><strong>OperationId:</strong>changeTemplateFloors</p>
      operationId: changeTemplateFloors
      parameters:
      - description: Unique ID of template floors.
        in: path
        name: templateFloorsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateFloorsToBeChanged'
        description: Request object for changing floors at the template level.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change template floors
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateFloorsToBeChanged
  /templateHousekeepingTasks:
    get:
      description: Use this API to get template Housekeeping Tasks.<p><strong>OperationId:</strong>getTemplateHousekeepingTasks</p>
      operationId: getTemplateHousekeepingTasks
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: taskCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if inactive tasks should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateHousekeepingTasksDetails'
          description: Response object for fetching housekeeping tasks.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HousekeepingTasks not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Template Housekeeping Tasks
      tags:
      - HotelConfig
    post:
      description: Use this API to create template Housekeeping Tasks. <p><strong>OperationId:</strong>postTemplateHousekeepingTasks</p>
      operationId: postTemplateHousekeepingTasks
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateHousekeepingTasksCriteria'
        description: Add housekeeping tasks configurations for resort.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Template Housekeeping Tasks
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateHousekeepingTasksCriteria
  /templateHousekeepingTasks/{templateId}:
    delete:
      description: Use this API to delete a template Housekeeping Task. <p><strong>OperationId:</strong>deleteTemplateHousekeepingTask</p>
      operationId: deleteTemplateHousekeepingTask
      parameters:
      - description: Unique id for template task.
        in: path
        name: templateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Flag to indicate if records that are marked as \"protected\"\
          \ can be removed. If false, any attempt to remove records that are protected\
          \ will return an error."
        in: query
        name: forceRemove
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a template Housekeeping Task
      tags:
      - HotelConfig
    put:
      description: Use this API to update a template Housekeeping Task. <p><strong>OperationId:</strong>putTemplateHousekeepingTask</p>
      operationId: putTemplateHousekeepingTask
      parameters:
      - description: Unique id for template task
        in: path
        name: templateId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateHousekeepingTaskToBeChanged'
        description: Modify housekeeping tasks in resort configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change a template Housekeeping Task
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateHousekeepingTaskToBeChanged
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    bedTypeRequestsDetails:
      description: Response object for fetching Bed Type Requests.
      properties:
        bedTypeRequests:
          description: List of Bed Type Requests.
          items:
            $ref: '#/components/schemas/bedTypeRequestType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bedTypeRequestsType:
      description: List of Bed Type Requests.
      items:
        $ref: '#/components/schemas/bedTypeRequestType'
      maxItems: 4000
      type: array
    bedTypeRequestType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    bedTypeRequestsCriteria:
      description: Request object for creating Bed Type Requests.
      properties:
        bedTypeRequests:
          description: List of Bed Type Requests.
          items:
            $ref: '#/components/schemas/bedTypeRequestType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    bedTypeRequestsToBeChanged:
      description: Request object for changing Bed Type Requests.
      properties:
        bedTypeRequests:
          description: List of Bed Type Requests.
          items:
            $ref: '#/components/schemas/bedTypeRequestType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bedTypesDetails:
      description: Response object for fetching Bed Types.
      properties:
        bedTypes:
          description: Bed Type Enumeration element.
          items:
            $ref: '#/components/schemas/bedTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bedTypesType:
      description: Bed Type Enumeration element.
      items:
        $ref: '#/components/schemas/bedTypeType'
      maxItems: 4000
      type: array
    bedTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    bedTypesCriteria:
      description: Request object for creating a new Bed Type.
      properties:
        bedTypes:
          description: Bed Type Enumeration element.
          items:
            $ref: '#/components/schemas/bedTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bedTypesToBeChanged:
      description: Request object for changing an existing Bed Type.
      properties:
        bedTypes:
          description: Bed Type Enumeration element.
          items:
            $ref: '#/components/schemas/bedTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingFloorMappingsDetails:
      description: Response object for fetching floor mappings to buildings.
      properties:
        buildingFloorMappings:
          description: Collection of Floor to Building mapping details.
          items:
            $ref: '#/components/schemas/buildingFloorMappingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingFloorMappingsType:
      description: Collection of Floor to Building mapping details.
      items:
        $ref: '#/components/schemas/buildingFloorMappingType'
      maxItems: 4000
      type: array
    buildingFloorMappingType:
      description: Building to Floor mapping details associated with the Hotel.
      properties:
        floorMappingId:
          $ref: '#/components/schemas/buildingFloorMappingIDType'
        description:
          description: The description of the house keeping building to floor mapping.
          maxLength: 80
          minLength: 0
          type: string
        targetCredits:
          description: Target Credit for each task sheet created for this floor when
            auto task assignment is broken out by floor.
          type: integer
        roomCount:
          description: Rooms associated with the floor in the building.
          type: integer
        credits:
          description: Total Credits for all the rooms that belong to this building
            group.
          type: integer
        sequence:
          description: Display sequence when auto task assignment is broken out by
            floor.
          type: integer
      type: object
    buildingFloorMappingIDType:
      description: Building to Floor mapping ID details.
      properties:
        hotelId:
          description: Hotel Identifier of the Building and Floor.
          maxLength: 20
          minLength: 0
          type: string
        floorCode:
          description: Floor Code Identifier of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        buildingCode:
          description: Building Code Identifier of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    setBuildingFloorMappings:
      description: Request object for setting floor mappings to buildings.
      properties:
        buildingFloorMappings:
          description: Collection of Floor to Building mapping details.
          items:
            $ref: '#/components/schemas/buildingFloorMappingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingGroupsDetails:
      description: Response object after fetching Building Groups of the Hotel.
      properties:
        buildingGroups:
          description: Collection of Building Group details.
          items:
            $ref: '#/components/schemas/buildingGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingGroupsType:
      description: Collection of Building Group details.
      items:
        $ref: '#/components/schemas/buildingGroupType'
      maxItems: 4000
      type: array
    buildingGroupType:
      description: Building or Building Group details associated with the Hotel.
      properties:
        hotelId:
          description: Hotel Identifier of the Building or Building Group.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Building Group or Building Code Identifier of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of the Building or Building Group.
          maxLength: 2000
          minLength: 0
          type: string
        targetCredits:
          description: Target Credit for each task sheet created for this building
            when auto task assignment is broken out by building.
          type: integer
        rooms:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        credits:
          description: Total Credits for all the rooms that belong to this building
            group.
          type: integer
        sequence:
          description: Building Sequence when task assignment is automatically generated
            by building.
          type: integer
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    buildingGroupsCriteria:
      description: Request object to create Building Group details of the Hotel.
      properties:
        buildingGroups:
          description: Collection of Building Group details.
          items:
            $ref: '#/components/schemas/buildingGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingGroupsToBeChanged:
      description: Request object to change the Building Group details of the Hotel.
      properties:
        buildingGroups:
          description: Collection of Building Group details.
          items:
            $ref: '#/components/schemas/buildingGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingsDetails:
      description: Response object after fetching Building details of the Hotel.
      properties:
        buildings:
          description: Collection of Building details associated with Hotel.
          items:
            $ref: '#/components/schemas/buildingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingsType:
      description: Collection of Building details associated with Hotel.
      items:
        $ref: '#/components/schemas/buildingType'
      maxItems: 4000
      type: array
    buildingType:
      description: Building or Building Group details associated with the Hotel.
      properties:
        hotelId:
          description: Hotel Identifier of the Building or Building Group.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Building Group or Building Code Identifier of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of the Building or Building Group.
          maxLength: 2000
          minLength: 0
          type: string
        targetCredits:
          description: Target Credit for each task sheet created for this building
            when auto task assignment is broken out by building.
          type: integer
        rooms:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        credits:
          description: Total Credits for all the rooms that belong to this building
            group.
          type: integer
        sequence:
          description: Building Sequence when task assignment is automatically generated
            by building.
          type: integer
        buildingGroupCode:
          description: Building Group to which building belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    buildingsToBeChanged:
      description: Request object to change Building details of the Hotel.
      properties:
        buildings:
          description: Collection of Building details associated with Hotel.
          items:
            $ref: '#/components/schemas/buildingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    buildingsCriteria:
      description: Request object to create Building details of the Hotel.
      properties:
        buildings:
          description: Collection of Building details associated with Hotel.
          items:
            $ref: '#/components/schemas/buildingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    floorTypesDetails:
      description: Response object for fetching Floor Types.
      properties:
        floorTypes:
          description: List of Floor Types.
          items:
            $ref: '#/components/schemas/floorTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    floorTypesType:
      description: List of Floor Types.
      items:
        $ref: '#/components/schemas/floorTypeType'
      maxItems: 4000
      type: array
    floorTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    floorTypesCriteria:
      description: Request object for creating Floor Types.
      properties:
        floorTypes:
          description: List of Floor Types.
          items:
            $ref: '#/components/schemas/floorTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    floorTypesToBeChanged:
      description: Request object for changing Floor Types.
      properties:
        floorTypes:
          description: List of Floor Types.
          items:
            $ref: '#/components/schemas/floorTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    floorsDetails:
      description: Response object for fetching floors at the hotel level.
      properties:
        hotelFloors:
          description: This type holds a collection of floors at the hotel level.
          items:
            $ref: '#/components/schemas/hotelFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelFloorsType:
      description: This type holds a collection of floors at the hotel level.
      items:
        $ref: '#/components/schemas/hotelFloorType'
      maxItems: 4000
      type: array
    hotelFloorType:
      description: Base details common between both template and hotel level floors.
      properties:
        floor:
          description: Specifies the floor code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the floor.
          maxLength: 2000
          minLength: 0
          type: string
        housekeeping:
          description: Flag to indicate if this floor should be available on the Task
            Sheet Workflow configuration.
          type: boolean
        sequence:
          description: Display sequence for the floor.
          type: integer
        hotelId:
          description: Specifies the hotel code for which the floor is specified.
          maxLength: 20
          minLength: 0
          type: string
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    floorsCriteria:
      description: Request object for creating floors at the hotel level.
      properties:
        hotelFloors:
          description: This type holds a collection of floors at the hotel level.
          items:
            $ref: '#/components/schemas/hotelFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    floorsToBeChanged:
      description: Request object for changing floors at the hotel level.
      properties:
        hotelFloors:
          description: This type holds a collection of floors at the hotel level.
          items:
            $ref: '#/components/schemas/hotelFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    validateRoomClassInUse:
      description: Request object to validate if room type's room class is currently
        in use.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    housekeepingCreditRulesDetails:
      description: Response object for fetching housekeeping credit rules.
      properties:
        creditRules:
          description: The information of housekeeping credit rule for configuration.
          items:
            $ref: '#/components/schemas/housekeepingCreditRuleType'
          maxItems: 4000
          type: array
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingCreditRulesType:
      description: The information of housekeeping credit rule for configuration.
      items:
        $ref: '#/components/schemas/housekeepingCreditRuleType'
      maxItems: 4000
      type: array
    housekeepingCreditRuleType:
      description: The information of housekeeping credit rule for configuration.
      properties:
        hotelId:
          description: Hotel Code where housekeeping credit rule belongs to.
          maxLength: 20
          minLength: 0
          type: string
        ruleCode:
          description: Rule Code of housekeeping credit rule.
          maxLength: 20
          minLength: 0
          type: string
        ruleType:
          $ref: '#/components/schemas/housekeepingCreditRuleTypeType'
        description:
          description: Description of housekeeping credit rule.
          maxLength: 2000
          minLength: 0
          type: string
        facilityTaskRule:
          $ref: '#/components/schemas/housekeepingCreditRuleType_facilityTaskRule'
        special:
          description: "When RuleType is set to Special, specifies which special makes\
            \ this credit rule applicable. For example, the credit value will be added\
            \ to the task assignment sheet when the assigned room has this specific\
            \ special applied to the reservation."
          maxLength: 20
          minLength: 0
          type: string
        travelType:
          $ref: '#/components/schemas/housekeepingCreditRuleTravelTypeType'
        creditValue:
          description: The additional credits which are applied to the task assignment
            sheet when the rule criteria has been met.
          type: number
        buildings:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        daysOfWeek:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        inactive:
          description: Indicates if the Housekeeping Credit Rule is inactive.
          type: boolean
        itemInventory:
          description: "When RuleType is set to Item Inventory, specifies which item\
            \ inventory makes this credit rule applicable. For example, the credit\
            \ value will be added to the task assignment sheet when the assigned room\
            \ has this specific item inventory applied to the reservation."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    housekeepingCreditRuleTypeType:
      description: "A Facility Rule will add extra credit to a task assignment sheet\
        \ when certain task conditions exist. Multiple Facility Task Rules will be\
        \ applied on top of each other if the conditions are met. A Miscellaneous\
        \ Rule will add extra credit to a task assignment sheet when the attendants\
        \ are occupied with anything other than cleaning a room, for example a team\
        \ meeting. A Special Rule will add extra credit to a task assignment sheet\
        \ when the defined Specials are attached to a reservation. A Traveling Rule\
        \ will add extra credit to a task assignment sheet when rooms from multiple\
        \ Buildings, Section Groups, Sections and/or Floors are assigned. An Inventory\
        \ Item Rule will add extra credit to a task assignment sheet when the defined\
        \ Items are attached to a reservation."
      enum:
      - FacilityTask
      - Miscellaneous
      - Special
      - Travelling
      - ItemInventory
      type: string
    housekeepingCreditRuleTravelTypeType:
      description: Applies to rooms across multiple section groups.
      enum:
      - Building
      - Floor
      - Section
      - SectionGroup
      type: string
    timeSpanDaysOfWeekType:
      description: Container for Time span with days of week.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    housekeepingCreditRulesCriteria:
      description: Request object for creating housekeeping credit rules.
      properties:
        creditRules:
          description: The information of housekeeping credit rule for configuration.
          items:
            $ref: '#/components/schemas/housekeepingCreditRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingCreditRulesToBeChanged:
      description: Request object for changing housekeeping credit rules.
      properties:
        creditRules:
          description: The information of housekeeping credit rule for configuration.
          items:
            $ref: '#/components/schemas/housekeepingCreditRuleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingAttendantsDetails:
      description: Response object for fetching Housekeeping Attendants.
      properties:
        housekeepingAttendants:
          description: Housekeeping Attendant Information.
          items:
            $ref: '#/components/schemas/housekeepingAttendantType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingAttendantsConfigType:
      description: Housekeeping Attendant Information.
      items:
        $ref: '#/components/schemas/housekeepingAttendantType'
      maxItems: 4000
      type: array
    housekeepingAttendantType:
      description: Housekeeping Attendant Information.
      properties:
        hotelId:
          description: Resort Code
          maxLength: 20
          minLength: 0
          type: string
        attendantId:
          description: An attendant ID.
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: An attendant ID.
          maxLength: 80
          minLength: 0
          type: string
        phoneNo:
          description: An attendant's phone No.
          maxLength: 200
          minLength: 0
          type: string
        section:
          description: Section where the attendant is assigned.
          maxLength: 20
          minLength: 0
          type: string
        floor:
          description: Floor where the attendant is assigned.
          maxLength: 20
          minLength: 0
          type: string
        job:
          description: Job which the attendant is assigned.
          maxLength: 20
          minLength: 0
          type: string
        workingDays:
          $ref: '#/components/schemas/daysOfWeekAttrType'
        appUser:
          description: Application User ID assigned for the attendant.
          maxLength: 60
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the attendant is active or not.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    daysOfWeekAttrType:
      properties:
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    housekeepingAttendantsCriteria:
      description: Add housekeeping attendant(S).
      properties:
        attendants:
          description: Housekeeping Attendant Information.
          items:
            $ref: '#/components/schemas/housekeepingAttendantType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingAttendantsToBeChanged:
      description: Modify housekeeping attendants
      properties:
        attendants:
          description: Housekeeping Attendant Information.
          items:
            $ref: '#/components/schemas/housekeepingAttendantType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingRoomSchedulesDetails:
      description: Response object for fetching housekeeping tasks and housekeeping
        codes associated to a room type.
      properties:
        housekeepingRoomSchedules:
          description: This type holds a collection of housekeeping tasks attached
            to a room type.
          items:
            $ref: '#/components/schemas/configHousekeepingRoomScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configHousekeepingRoomSchedulesType:
      description: This type holds a collection of housekeeping tasks attached to
        a room type.
      items:
        $ref: '#/components/schemas/configHousekeepingRoomScheduleType'
      maxItems: 4000
      type: array
    configHousekeepingRoomScheduleType:
      description: Facility Housekeeping task code and description.
      properties:
        description:
          description: Facility task description.
          maxLength: 80
          minLength: 0
          type: string
        priority:
          description: Signifies the priority of the task.
          type: integer
        code:
          description: Code of the housekeeping task.
          maxLength: 20
          minLength: 0
          type: string
        credits:
          description: Housekeeping credits associated with this housekeeping task.
          type: integer
        frequency:
          $ref: '#/components/schemas/frequencyTypeType'
        frequencyDays:
          description: "Specify how often in days following the guest's arrival date,\
            \ the housekeeping task is to be completed."
          type: integer
        specialRequests:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        vIPStatuses:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sequence:
          description: Used to store the housekeeping task sequence.
          type: integer
        daysOfWeek:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        rateCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        marketCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cycleStartDay:
          description: Signifies offset(in days) i.e. start on 3rd day from arrival.
          type: integer
        customizePromptText:
          description: The information that is entered into this text box.
          maxLength: 400
          minLength: 0
          type: string
        taskSupplies:
          description: This type holds a collection of housekeeping task supplies
            attached to a room type.
          items:
            $ref: '#/components/schemas/configHousekeepingRoomScheduleTaskSupplyType'
          maxItems: 4000
          type: array
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        guestRequested:
          description: Signifies whether housekeeping task is a guest requested task.
          type: boolean
        defaultDepartureTask:
          description: Signifies that task is a default task for the checked out room.
          type: boolean
        moveup:
          description: Automatically moves the task up one day if it falls on the
            day before the guest's departure. It will only be available when the schedule
            is set to every 3 days or more.
          type: boolean
        hotelId:
          description: Specifies the hotel code that the room type belongs to.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          description: Specify a Membership Type to associate to a specific housekeeping
            task code.
          maxLength: 20
          minLength: 0
          type: string
        membershipLevels:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    frequencyTypeType:
      description: Simple type for storing frequency type.
      enum:
      - Everyday
      - EveryXDays
      - CustomSchedule
      - DepartureDayOnly
      - ArrivalDayOnly
      - NotRequired
      - SpecificDays
      type: string
    configHousekeepingRoomScheduleTaskSuppliesType:
      description: This type holds a collection of housekeeping task supplies attached
        to a room type.
      items:
        $ref: '#/components/schemas/configHousekeepingRoomScheduleTaskSupplyType'
      maxItems: 4000
      type: array
    configHousekeepingRoomScheduleTaskSupplyType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Used to store the housekeeping room schedule sequence.
          type: integer
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        hotelId:
          description: Specifies the hotel code that the room type belongs to.
          maxLength: 20
          minLength: 0
          type: string
        housekeepingRoomScheduleCode:
          description: Specifies the housekeeping room schedule code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    housekeepingRoomSchedulesCriteria:
      description: Request object for associating housekeeping tasks and housekeeping
        codes to a room type.
      properties:
        housekeepingRoomSchedules:
          description: This type holds a collection of housekeeping tasks attached
            to a room type.
          items:
            $ref: '#/components/schemas/configHousekeepingRoomScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingRoomSchedulesToBeChanged:
      description: Request object for changing housekeeping tasks and housekeeping
        codes associated to a room type.
      properties:
        housekeepingRoomSchedules:
          description: This type holds a collection of housekeeping tasks attached
            to a room type.
          items:
            $ref: '#/components/schemas/configHousekeepingRoomScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionGroupsDetails:
      description: Response object for fetching housekeeping section Groups.
      properties:
        housekeepingSectionGroups:
          description: List of the housekeeping section groups to be configured or
            fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionGroupsType:
      description: List of the housekeeping section groups to be configured or fetched
      items:
        $ref: '#/components/schemas/housekeepingSectionGroupType'
      maxItems: 4000
      type: array
    housekeepingSectionGroupType:
      description: Detailed information of Housekeeping Section Group.
      properties:
        hotelId:
          description: Property of the Housekeeping section group.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Housekeeping Section Group Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Housekeeping Section Group.
          maxLength: 80
          minLength: 0
          type: string
        targetCredits:
          description: Target Credit for each task Sheet when auto task assignment
            is broken out per Section Group.
          type: integer
        sequence:
          description: Display sequence when task assignment is automatically broken
            out by Section Group.
          type: integer
        rooms:
          description: Rooms count for this section group. This is auto populated
            while creating/fetching record.
          type: integer
        roomCredits:
          description: Number of housekeeping credits. This is auto populated while
            creating/fetching record.
          type: integer
      type: object
    housekeepingSectionGroupsCriteria:
      description: Request object to create House Keeping Section Groups for resort.
      properties:
        housekeepingSectionGroups:
          description: List of the housekeeping section groups to be configured or
            fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionGroupsToBeChanged:
      description: Request object for modifying housekeeping section groups in resort.
      properties:
        housekeepingSectionGroups:
          description: List of the housekeeping section groups to be configured or
            fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionsDetails:
      description: Response object for fetching housekeeping section codes.
      properties:
        housekeepingSections:
          description: List of the housekeeping sections to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionsType:
      description: List of the housekeeping sections to be configured or fetched
      items:
        $ref: '#/components/schemas/housekeepingSectionType'
      maxItems: 4000
      type: array
    housekeepingSectionType:
      description: Information regarding Housekeeping Sections.
      properties:
        hotelId:
          description: Property where this section is defined.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: The Housekeeping Section Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Section.
          maxLength: 80
          minLength: 0
          type: string
        sectionGroup:
          description: Housekeeping Section Group.
          maxLength: 20
          minLength: 0
          type: string
        targetCredits:
          description: Target Credit for each task sheet created for this section
            when auto task assignment is broken out by section.
          type: integer
        rooms:
          description: Rooms count for this section code. This is auto populated while
            creating/fetching record.
          type: integer
        roomCredits:
          description: Number of housekeeping credits. This is auto populated while
            creating/fetching record.
          type: integer
        sequence:
          description: Display sequence when task assignment is automatically broken
            out by Section Group.
          type: integer
        inactive:
          description: Indicates if the Section Code is active.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    housekeepingSectionsCriteria:
      description: Add housekeeping section codes configurations for resort.
      properties:
        housekeepingSections:
          description: List of the housekeeping sections to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionsToBeChanged:
      description: Modify housekeeping section codes in resort configurations.
      properties:
        housekeepingSections:
          description: List of the housekeeping sections to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingSectionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingCodesDetails:
      description: Response object for fetching housekeeping codes.
      properties:
        codes:
          description: List of the housekeeping codes to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingCodeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingCodesConfigType:
      description: List of the housekeeping codes to be configured or fetched
      items:
        $ref: '#/components/schemas/housekeepingCodeConfigType'
      maxItems: 4000
      type: array
    housekeepingCodeConfigType:
      description: "Common code type for code, description"
      properties:
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the code type.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the housekeeping task.
          type: number
        hotelId:
          description: Hotel Code for a housekeeping task.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    housekeepingCodesCriteria:
      description: Add housekeeping codes configurations for property.
      properties:
        codes:
          description: List of the housekeeping codes to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingCodeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingCodesToBeChanged:
      description: Modify housekeeping codes in resort configurations.
      properties:
        codes:
          description: List of the housekeeping codes to be configured or fetched
          items:
            $ref: '#/components/schemas/housekeepingCodeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingTaskSheetRoomsDetails:
      description: Response object for fetching details about housekeeping tasksheet
        rooms.
      properties:
        housekeepingTaskSheetRooms:
          description: Collection of housekeeping room details
          items:
            $ref: '#/components/schemas/housekeepingTaskSheetRoomType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingTaskSheetRoomsType:
      description: Collection of housekeeping room details
      items:
        $ref: '#/components/schemas/housekeepingTaskSheetRoomType'
      maxItems: 4000
      type: array
    housekeepingTaskSheetRoomType:
      description: Details used for storing information about a housekeeping room
      properties:
        hotelId:
          description: Specifies the hotel code of the housekeeping room
          maxLength: 20
          minLength: 0
          type: string
        room:
          description: Specifies the housekeeping room code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Specifies the housekeeping room type
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Specifies the building to which the housekeeping room is mapped
            to. This element will be used only if the BUILDINGS parameter is active.
          maxLength: 20
          minLength: 0
          type: string
        floor:
          description: Specifies the floor to which the housekeeping room is mapped
            to
          maxLength: 20
          minLength: 0
          type: string
        daySectionCode:
          description: Specifies the day section code. This element will be used only
            if the HOUSEKEEPING_SECTIONS parameter is active.
          maxLength: 20
          minLength: 0
          type: string
        eveningSectionCode:
          description: Specifies the evening section code. This element will be used
            only if the HOUSEKEEPING_SECTIONS parameter is active.
          maxLength: 20
          minLength: 0
          type: string
        ruleCredit:
          $ref: '#/components/schemas/housekeepingTaskSheetRoomType_ruleCredit'
        roomCredit:
          description: "This element will be used only if the value of HOUSEKEEPING_CREDITS\
            \ setting is set to ROOM. Room credits can be defined for Stayover, Turndown,\
            \ Departure and Pickup. For Turndown Credits to be used, the TURNDOWN\
            \ parameter should be active and HOUSEKEEPING_CREDITS setting should be\
            \ set to a value other than NONE. For Pickup Credits to be used, the PICKUP_STATUS\
            \ parameter should be active."
          items:
            $ref: '#/components/schemas/housekeepingCreditsType'
          maxItems: 4
          type: array
        sequence:
          description: Specifies the sorting sequence number for the housekeeping
            room
          type: integer
      type: object
    housekeepingCreditsType:
      description: Information regarding the credits for housekeeping tasks/rooms.
      properties:
        type:
          $ref: '#/components/schemas/housekeepingCreditsDefinitionType'
        numberOfCredits:
          description: Total number of Credits for the Type.
          type: number
      type: object
    housekeepingCreditsDefinitionType:
      description: Type for the different kinds of Credits which will be used in Rooms
        Management.
      enum:
      - Departure
      - Pickup
      - Turndown
      - StayOver
      - FacilityTask
      - Travelling
      - Total
      type: string
    setHousekeepingTaskSheetRooms:
      description: Request object for setting details about housekeeping tasksheet
        rooms.
      properties:
        housekeepingTaskSheetRooms:
          description: Collection of housekeeping room details
          items:
            $ref: '#/components/schemas/housekeepingTaskSheetRoomType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingTasksDetails:
      description: Response object for fetching housekeeping tasks.
      properties:
        tasks:
          description: List of the housekeeping tasks to be configured
          items:
            $ref: '#/components/schemas/housekeepingTaskConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingTasksConfigType:
      description: List of the housekeeping tasks to be configured
      items:
        $ref: '#/components/schemas/housekeepingTaskConfigType'
      maxItems: 4000
      type: array
    housekeepingTaskConfigType:
      description: "Common code type for code, description"
      properties:
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the code type.
          maxLength: 2000
          minLength: 0
          type: string
        instructions:
          description: Instructions of the housekeeping task.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for the housekeeping task.
          type: number
        color:
          $ref: '#/components/schemas/colorType'
        linenChange:
          description: Signifies whether housekeeping task requires linen change.
          type: boolean
        guestRequested:
          description: Signifies whether housekeeping task is a guest requested task.
          type: boolean
        defaultDepartureTask:
          description: Signifies that task is a default task for the checked out room.
          type: boolean
        protected:
          description: Flag that determines whether this record is protected from
            removing or not
          type: boolean
        appliedCreditsPercentage:
          description: Percentage of Credits that will be used for this task. Used
            when the Housekeeping Credits functionality is set to use ROOM_TASK_RULE.
            The default value is 100.
          maximum: 100
          minimum: 0
          type: number
        inactive:
          description: Indicates if the task is inactive.
          type: boolean
        hotelId:
          description: Hotel Code for a housekeeping task.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    housekeepingTasksCriteria:
      description: Add housekeeping tasks configurations for resort.
      properties:
        tasks:
          description: List of the housekeeping tasks to be configured
          items:
            $ref: '#/components/schemas/housekeepingTaskConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingTasksToBeChanged:
      description: Modify housekeeping tasks in resort configurations.
      properties:
        tasks:
          description: List of the housekeeping tasks to be configured
          items:
            $ref: '#/components/schemas/housekeepingTaskConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    outOfOrderServiceReasonsDetails:
      description: Response object for fetching Out of Order/Service Reason(s).
      properties:
        outOfOrderServiceReasons:
          description: out of order/service reason details.
          items:
            $ref: '#/components/schemas/outOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    outOfOrderServiceReasonsType:
      description: out of order/service reason details.
      items:
        $ref: '#/components/schemas/outOfOrderServiceReasonType'
      maxItems: 4000
      type: array
    outOfOrderServiceReasonType:
      description: Base details of the Out of order/service reason.
      properties:
        description:
          description: Description for the out of order/service reason.
          maxLength: 80
          minLength: 0
          type: string
        sequence:
          description: Sequence number for displaying the out of order/service reason.
          type: integer
        reasonCode:
          description: Out of order/service reason code identifying the reason.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicator that tells whether the out of order/service reason
            in the hotel is active or not.
          type: boolean
        includeInStatisticsYn:
          description: "Indicator for RNA to use to decide whether to include this\
            \ room status in statistics, with no functional impact."
          type: boolean
        deductYn:
          description: "Indicator for room status display. Room status configured\
            \ with 'true' will be displayed as OOO, 'false' will be displayed as OOS."
          type: boolean
        returnTimeRequired:
          description: "Indicator for Return Time Required display. If configured\
            \ to true, then a time will be mandatory to determine when this unit (room)\
            \ will be back to the inventory of the available rooms."
          type: boolean
        hotelId:
          description: Hotel code the out of order/service reason belongs to.
          maxLength: 20
          minLength: 0
          type: string
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    outOfOrderServiceReasonsCriteria:
      description: Request object for creating new out of order/service reasons for
        hotels.
      properties:
        outOfOrderServiceReasons:
          description: out of order/service reason details.
          items:
            $ref: '#/components/schemas/outOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    outOfOrderServiceReasonsToBeChanged:
      description: Request object for modifying out of order/service reasons for hotels.
      properties:
        outOfOrderServiceReasons:
          description: out of order/service reason details.
          items:
            $ref: '#/components/schemas/outOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomGroupsDetails:
      description: Response object for fetching Room Groups.
      properties:
        roomGroups:
          description: List of Room Pools.
          items:
            $ref: '#/components/schemas/roomGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomGroupsType:
      description: List of Room Pools.
      items:
        $ref: '#/components/schemas/roomGroupType'
      maxItems: 4000
      type: array
    roomGroupType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        hotelId:
          description: Hotel of the record.
          maxLength: 20
          minLength: 0
          type: string
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomGroupsCriteria:
      description: Request object for creating Room Groups.
      properties:
        roomGroups:
          description: List of Room Pools.
          items:
            $ref: '#/components/schemas/roomGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomGroupsToBeChanged:
      description: Request object for changing Room Groups.
      properties:
        roomGroups:
          description: List of Room Pools.
          items:
            $ref: '#/components/schemas/roomGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassesDetails:
      description: Response object for fetching existing hotel level room classes.
      properties:
        roomClasses:
          description: Collection of hotel level room classes with attached room types.
          items:
            $ref: '#/components/schemas/roomClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassesType:
      description: Collection of hotel level room classes with attached room types.
      items:
        $ref: '#/components/schemas/roomClassType'
      maxItems: 4000
      type: array
    roomClassType:
      description: "Common code type for code, description, seq and inactive"
      properties:
        description:
          $ref: '#/components/schemas/translationTextType50'
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates the code type is inactive or not.
          type: boolean
        hotelId:
          description: Hotel code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        roomTypes:
          $ref: '#/components/schemas/roomTypesSummaryType'
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    translationTextType50:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 50.
          maxLength: 50
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    roomTypesSummaryType:
      description: This type holds collection of room type.
      properties:
        roomTypeSummary:
          items:
            $ref: '#/components/schemas/roomTypeSummaryType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomTypeSummaryType:
      description: This type represents the summary of room type attributes.
      properties:
        roomClass:
          description: Room class for the room type code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        activeDate:
          description: Active date of the room type.
          format: date
          type: string
        pseudo:
          description: Indicates if room type is pseudo.
          type: boolean
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        sendToInterface:
          description: Indicates if room type is sent to interface.
          type: boolean
        sellSequence:
          description: Indicates room types sell sequence.
          type: number
        suite:
          description: Indicates room type is a suite.
          type: boolean
        meetingRoom:
          description: Indicates room type is meeting room. This Can be Meeting room
            flag cannot be unmarked at the property level. Can only be marked for
            non pseudo room types.
          type: boolean
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Number of rooms for this room type.
          type: integer
        inactive:
          description: Indicates the room type is inactive or not.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomClassCriteria:
      description: Request object for creating a new hotel level room class.
      properties:
        roomClass:
          $ref: '#/components/schemas/roomClassType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassToBeChanged:
      description: Request object for changing an existing hotel level room class.
      properties:
        roomClass:
          $ref: '#/components/schemas/roomClassType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resortRoomConditionsDetails:
      description: Response object for information regarding room condition configuration
        in a resort.
      properties:
        roomConditions:
          description: Collection of Resort Room Condition Configuration Type
          items:
            $ref: '#/components/schemas/roomCondtionType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomCondtionsType:
      description: Collection of Resort Room Condition Configuration Type
      items:
        $ref: '#/components/schemas/roomCondtionType'
      maxItems: 4000
      type: array
    roomCondtionType:
      description: Resort Room Condition Configuration Type
      properties:
        description:
          description: Description for the room condition.
          maxLength: 2000
          minLength: 0
          type: string
        displayInRoomAssignment:
          description: Indicates types of assignment.
          type: boolean
        comments:
          description: Comments for the room condition.
          maxLength: 2000
          minLength: 0
          type: string
        displaySeq:
          type: integer
        inactive:
          type: boolean
        holdMinutes:
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resortRoomConditionCriteria:
      description: Request object for Create Room Condition.
      properties:
        roomCondition:
          $ref: '#/components/schemas/roomCondtionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    resortRoomConditionToBeChanged:
      description: Request object for Modifying Room Condition configuration in a
        resort.
      properties:
        roomCondition:
          $ref: '#/components/schemas/roomCondtionType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomFeaturesDetails:
      description: Response object to fetch room features of hotel.
      properties:
        roomFeatures:
          description: Room feature details.
          items:
            $ref: '#/components/schemas/roomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomFeaturesConfigType:
      description: Room feature details.
      items:
        $ref: '#/components/schemas/roomFeatureConfigType'
      maxItems: 4000
      type: array
    roomFeatureConfigType:
      description: "Common code type for code, description, seq and inactive"
      properties:
        description:
          $ref: '#/components/schemas/translationTextType50'
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates the code type is inactive or not.
          type: boolean
        hotelId:
          description: Hotel code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        groupCode:
          description: Group code to which this code type belongs.
          maxLength: 20
          minLength: 0
          type: string
        mappedPreferenceCodes:
          description: This type holds a collection of preferences at the property
            level.
          items:
            $ref: '#/components/schemas/configHotelPreferenceType'
          maxItems: 4000
          type: array
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    configHotelPreferencesType:
      description: This type holds a collection of preferences at the property level.
      items:
        $ref: '#/components/schemas/configHotelPreferenceType'
      maxItems: 4000
      type: array
    configHotelPreferenceType:
      description: Base details common between both template and property level preferences.
      properties:
        description:
          description: The description about the preference.
          maxLength: 2000
          minLength: 0
          type: string
        code:
          description: Specifies the preference code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceGroup:
          description: Specifies the preference group the preference belongs to.
          maxLength: 20
          minLength: 0
          type: string
        preferenceSubGroup:
          description: This is a placeholder element for future use. Functionality
            may not be available for the current implementation.
          maxLength: 20
          minLength: 0
          type: string
        housekeeping:
          description: Flag to indicate if this preference should be available on
            the Task Sheet Workflow configuration. It is only applicable for preference
            types FLOOR and SPECIALS.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        hotelId:
          description: Specifies the hotel code for which the preference is specified.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomFeaturesToBeChanged:
      description: Request object for changing room features of hotel.
      properties:
        roomFeatures:
          description: Room feature details.
          items:
            $ref: '#/components/schemas/roomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomFeaturesCriteria:
      description: Request object for creating room features of hotel.
      properties:
        roomFeatures:
          description: Room feature details.
          items:
            $ref: '#/components/schemas/roomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelRoomMaintenanceReasonsDetails:
      description: Response object for fetching room maintenance reasons for a hotel.
      properties:
        hotelRoomMaintenanceReasons:
          description: Details for room maintenance reason at hotel level.
          items:
            $ref: '#/components/schemas/hotelRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelRoomMaintenanceReasonsType:
      description: Details for room maintenance reason at hotel level.
      items:
        $ref: '#/components/schemas/hotelRoomMaintenanceReasonType'
      maxItems: 4000
      type: array
    hotelRoomMaintenanceReasonType:
      description: Base common structure for Room Maintenance at both hotel and template
        levels.
      properties:
        code:
          description: Identification code for a particular room maintenance reason.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of a particular room maintenance reason.
          maxLength: 2000
          minLength: 0
          type: string
        sellSequence:
          description: Indicates the sell sequence for a particular room maintenance
            reason.
          type: number
        inactive:
          description: Inactive flag for a particular room maintenance reason.
          type: boolean
        hotelId:
          description: Hotel code that a particular room maintenance reason belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    hotelRoomMaintenanceReasonsCriteria:
      description: Request object for creating new room maintenance reasons for a
        hotel.
      properties:
        hotelRoomMaintenanceReasons:
          description: Details for room maintenance reason at hotel level.
          items:
            $ref: '#/components/schemas/hotelRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelRoomMaintenanceReasonsToBeChanged:
      description: Request object for modifying room maintenance reasons for a hotel.
      properties:
        hotelRoomMaintenanceReasons:
          description: Details for room maintenance reason at hotel level.
          items:
            $ref: '#/components/schemas/hotelRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypeInfoDetails:
      description: Response object for fetching room type information.
      properties:
        roomTypeMasterInfoType:
          $ref: '#/components/schemas/roomTypeMasterInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypeMasterInfoType:
      description: The RoomType element is used to contain all the room type information
        for a single room type.
      properties:
        roomType:
          description: Room type information
          items:
            $ref: '#/components/schemas/roomTypeInfoType'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomTypeInfoType:
      properties:
        longDescription:
          description: Detail description of the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        webName:
          description: Name corresponding to a RoomType.
          maxLength: 80
          minLength: 0
          type: string
        webPage:
          description: URL providing more information about the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomTypeAttributes:
          $ref: '#/components/schemas/roomTypeAttributesType'
        bookingChannelMappings:
          description: Booking Channels mapping for the Room Type.
          items:
            $ref: '#/components/schemas/bookingChannelMappingType'
          maxItems: 4000
          type: array
        bedTypeCodes:
          description: Bed type code associated with room.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        bedType:
          $ref: '#/components/schemas/bedTypeInfoType'
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        suite:
          description: Indicates room type is a suite.
          type: boolean
        component:
          description: Indicates room type is a Component Room.
          type: boolean
        invBlockCode:
          description: Block code.
          maxLength: 40
          minLength: 0
          type: string
        roomViewCode:
          description: "Represents the room view code like City view, River view,\
            \ Ocean view etc."
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Represents the promotional code.
          maxLength: 40
          minLength: 0
          type: string
        roomQualifierCode:
          description: "Represents the room qualifier code like Deluxe,Economy,Suite\
            \ etc."
          maxLength: 40
          minLength: 0
          type: string
        roomQualifierMatchIndicator:
          description: Represents the match indicator of room qualifier code returned
            in the response with the requested room qualifier code.
          maxLength: 20
          minLength: 0
          type: string
        accessible:
          description: Indicates whether room type is accessible or not.
          type: boolean
      type: object
    roomFeaturesType:
      description: A recurring element that identifies the room features.
      items:
        $ref: '#/components/schemas/roomFeatureType'
      maxItems: 4000
      type: array
    roomFeatureType:
      description: Room Feature Information.
      properties:
        code:
          description: A code representing a room feature.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: A code representing a room feature.
          maxLength: 2000
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        quantity:
          description: Indicates quantity.
          type: integer
      type: object
    roomTypeAttributesType:
      description: Attributes of property room type.
      properties:
        defaultOccupancy:
          description: Default occupancy of property room type.
          type: integer
        maximumOccupancy:
          description: Max occupancy of property room type.
          type: integer
        noOfPhysicalRooms:
          description: Number of physical rooms of property room type.
          type: integer
        minimumOccupancy:
          description: Minimum occupancy of property room type.
          type: integer
        maximumAdults:
          description: Maximum adult occupancy of property room type.
          type: integer
        maximumChildren:
          description: Maximum children occupancy of property room type.
          type: integer
      type: object
    bookingChannelMappingType:
      properties:
        bookingChannelCode:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    bedTypeInfoType:
      description: Information representing Bed type associated with a room type.
      properties:
        code:
          description: Bed Type Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
      type: object
    roomTypesDetails:
      description: Response object for Fetching existing Room Types.
      properties:
        roomTypesSummary:
          description: Contains the results of a successful operation.
          items:
            $ref: '#/components/schemas/roomTypesSummaryType'
          type: array
        roomTypes:
          description: Collection of Room Type Templates and their information.
          items:
            $ref: '#/components/schemas/roomTypesType'
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypesType:
      description: This type holds collection of room type.
      properties:
        roomType:
          items:
            $ref: '#/components/schemas/roomTypeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomTypeType:
      description: This type represents the room type attributes.
      properties:
        newRoomType:
          description: New Room type code. (Used in change template room type operation)
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          description: Room class for the room type code.
          maxLength: 20
          minLength: 0
          type: string
        bedType:
          description: Bed type of room type.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          $ref: '#/components/schemas/translationTextType2000'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        smokingPreference:
          description: "Specifies the smoking preference for this room type. I.E.\
            \ SM, NS."
          maxLength: 20
          minLength: 0
          type: string
        activeDate:
          description: Active date of the room type.
          format: date
          type: string
        pseudo:
          description: Indicates if room type is pseudo.
          type: boolean
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        suite:
          $ref: '#/components/schemas/roomTypeType_suite'
        meetingRoom:
          description: Indicates room type is meeting room. This Can be Meeting room
            flag cannot be unmarked at the property level. Can only be marked for
            non pseudo room types.
          type: boolean
        sendToInterface:
          description: Indicates room type is sent to interface.
          type: boolean
        sellSequence:
          description: Indicates room types sell sequence.
          type: number
        generic:
          description: Indicates room type is generic.
          type: boolean
        maintenance:
          description: Indicates room type is available for maintenance request.
          type: boolean
        defaultOccupancy:
          description: Default occupancy for the room type.
          type: number
        minimumOccupancy:
          description: Minimum occupancy for the room type.
          type: integer
        maximumOccupancy:
          description: Maximum occupancy for the room type.
          type: integer
        maxAdults:
          description: Maximum Adults for the room type.
          type: integer
        maxChildren:
          description: Maximum Children for the room type.
          type: integer
        houseKeeping:
          description: Room type shows in house keeping.
          type: boolean
        infoURL:
          description: Room type info URL.
          maxLength: 200
          minLength: 0
          type: string
        autoPopulate:
          description: Room type is automatically attached when new rate codes are
            created.
          type: boolean
        autoRoomAssign:
          description: Room number is automatically assigned when a reservation is
            made for this Room Type.
          type: boolean
        autoCheckin:
          description: "Creates a new linked Reservation, and proceeds within check-in\
            \ of the new reservation."
          type: boolean
        rateFloor:
          description: This value will control the minimum amount that the selected
            room type can be sold
          type: number
        components:
          description: Contains room components of a component room type.
          items:
            $ref: '#/components/schemas/roomTypeComponentType'
          maxItems: 4000
          type: array
        features:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        yieldStatus:
          $ref: '#/components/schemas/roomTypeYieldableType'
        yieldCategory:
          description: Yield category for this room type (Available when a yield integration
            add-on license is active and when room type is Yieldable.)
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Number of rooms for this room type.
          type: integer
        inactive:
          description: Is Room type inactive?
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomTypeComponentsType:
      description: Contains room components of a component room type.
      items:
        $ref: '#/components/schemas/roomTypeComponentType'
      maxItems: 4000
      type: array
    roomTypeComponentType:
      description: Room component and its quantity for the component room type.
      properties:
        qty:
          description: Quantity of room component for the component room type.
          type: integer
        description:
          description: Description of room component.
          maxLength: 2000
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomTypeYieldableType:
      description: Simple type for Yieldable or Non Yieldable
      enum:
      - Yieldable
      - NonYieldable
      type: string
    roomTypesCriteria:
      description: Request object for Creating a new Room Type.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypesCriteria_roomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypesToBeChanged:
      description: Request object for Modifying Room Type.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypesToBeChanged_roomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomsDetails:
      description: Response object for fetching complete information of existing rooms.
      properties:
        rooms:
          description: Collection of rooms with detailed information.
          items:
            $ref: '#/components/schemas/configRoomsType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configRoomsType:
      description: This type holds collection of rooms with complete information.
      properties:
        room:
          items:
            $ref: '#/components/schemas/configRoomType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code of the rooms.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    configRoomType:
      description: This type represents the primary room attributes.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        floor:
          description: Floor of the Room.
          maxLength: 40
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        roomComponents:
          description: Component of a room.
          items:
            $ref: '#/components/schemas/roomComponentType'
          maxItems: 4000
          type: array
        connectingRooms:
          description: Collection of rooms.
          items:
            $ref: '#/components/schemas/roomRoomType'
          maxItems: 4000
          type: array
        rateCode:
          description: Published rate code of a room.
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        maximumOccupancy:
          description: Maximum occupancy of a room.
          type: integer
        sellSequence:
          description: Display sequence of a room.
          type: number
        ownerRoom:
          description: This indicates if room is marked as a owner room
          type: boolean
        unitGradeCode:
          description: The Unit Grade Code attached to the room
          maxLength: 20
          minLength: 0
          type: string
        smoking:
          description: This indicates if smoking is allowed in the room.
          type: boolean
        keyCode:
          description: Key code of a room.
          maxLength: 20
          minLength: 0
          type: string
        keyOptions:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        squareUnits:
          description: Square units of a room.
          type: number
        turndownService:
          description: Turndown service flag of a room.
          type: boolean
        squareUnitsMeasurement:
          description: Square unit measurement of a room.
          maxLength: 20
          minLength: 0
          type: string
        phoneNumber:
          description: Square unit measurement of a room.
          maxLength: 20
          minLength: 0
          type: string
        housekeepingCredit:
          description: "Housekeeping credits of the room. This may include stayover,\
            \ departure, pickup and turndown credits."
          items:
            $ref: '#/components/schemas/housekeepingCreditsType'
          maxItems: 4000
          type: array
        roomSection:
          $ref: '#/components/schemas/roomSectionType'
        noOfBeds:
          description: Number of beds of the room.
          type: integer
      type: object
    roomTypeShortInfoType:
      description: Basic information of room type.
      properties:
        pseudo:
          description: Indicates if room is a pseudo. This is read-only.
          type: boolean
        suite:
          description: Indicates if room is a suite. This is read-only.
          type: boolean
        roomClass:
          description: Room Class of the room. This is read-only.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        houseKeeping:
          description: Indicates if room type of the room is flagged as housekeeping.
            This is read-only.
          type: boolean
        smokingPreference:
          description: Specifies the smoking preference for room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        minimumOccupancy:
          description: Minimum occupancy for the room type.
          type: integer
        maximumOccupancy:
          description: Maximum occupancy for the room type.
          type: integer
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        roomType:
          description: Room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether function space can be meeting room.
          type: boolean
        roomStatus:
          description: Room Status of the room.
          type: string
        componentRoomsInfo:
          description: This type holds information of Component Rooms attached to
            the Component Suite.
          items:
            $ref: '#/components/schemas/componentRoomInfoType'
          maxItems: 4000
          type: array
        componentSuitesInfo:
          description: This type holds information of Component Suites to which the
            Component Room is attached.
          items:
            $ref: '#/components/schemas/componentSuiteInfoType'
          maxItems: 4000
          type: array
      type: object
    ratePlanRatingType:
      description: Possible Rate plan rating values.
      enum:
      - MostImportant
      - Important
      - SomewhatImportant
      - LessImportant
      - LeastImportant
      - NoValueSet
      type: string
    roomComponentsType:
      description: Component of a room.
      items:
        $ref: '#/components/schemas/roomComponentType'
      maxItems: 4000
      type: array
    roomComponentType:
      description: Room component and its quantity for the component room type.
      properties:
        qty:
          description: Quantity of room component for the component room type.
          type: integer
        description:
          description: Description of room component.
          maxLength: 2000
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        rooms:
          description: Collection of rooms.
          items:
            $ref: '#/components/schemas/roomRoomType'
          maxItems: 4000
          type: array
      type: object
    roomRoomsType:
      description: Collection of rooms.
      items:
        $ref: '#/components/schemas/roomRoomType'
      maxItems: 4000
      type: array
    roomRoomType:
      description: This type represents the primary room attributes.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        roomCondition:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    roomSectionType:
      properties:
        daySectionCode:
          maxLength: 20
          minLength: 0
          type: string
        eveningSectionCode:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomCriteria:
      description: Request object for creating a new room.
      properties:
        room:
          $ref: '#/components/schemas/roomCriteria_room'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomToBeChanged:
      description: Request object for changing details of an existing room.
      properties:
        room:
          $ref: '#/components/schemas/roomToBeChanged_room'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyRooms:
      description: "Request object for creating multiple rooms based on an existing\
        \ room. New rooms may have different floor preferences, room features, housekeeping\
        \ credits and room sections. The rest of the details except for attached connecting\
        \ rooms will be copied from the base existing room. Component rooms are not\
        \ allowed to be copied."
      properties:
        copyRoom:
          $ref: '#/components/schemas/copyRoomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyRoomType:
      description: Primary details of room to be copied and collection of rooms to
        be created from it.
      properties:
        newRooms:
          description: Room details that may differ from the base existing room.
          items:
            $ref: '#/components/schemas/copyNewRoomType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code of an existing room that will serve as the basis
            for the new rooms.
          type: object
        roomId:
          description: Room number of an existing room that will serve as the basis
            for the new rooms.
          type: object
      type: object
    copyNewRoomsType:
      description: Room details that may differ from the base existing room.
      items:
        $ref: '#/components/schemas/copyNewRoomType'
      maxItems: 4000
      type: array
    copyNewRoomType:
      description: "Room details that may differ from the base existing room. If any\
        \ of Floor, RoomFeatures, HousekeepingCredits and RoomSection types is not\
        \ passed together with this type, it means that it is expected to be empty\
        \ for the new room; otherwise, they will have the value of the base existing\
        \ room. Connecting rooms attached to the base existing room will not be created\
        \ for the new room."
      properties:
        floors:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        housekeepingCredits:
          description: "Housekeeping credits of the room. This may include stayover,\
            \ departure, pickup and turndown credits."
          items:
            $ref: '#/components/schemas/housekeepingCreditsType'
          maxItems: 4000
          type: array
        roomSection:
          $ref: '#/components/schemas/roomSectionType'
        roomId:
          description: Room number of the new room to be created.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyBuildingGroups:
      description: Request object to copy Building Group details to hotel(s).
      properties:
        copyInstructions:
          description: Information needed to copy configuration code from one property
            to the other.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyConfigurationCodesType:
      description: Information needed to copy configuration code from one property
        to the other.
      items:
        $ref: '#/components/schemas/copyConfigurationCodeType'
      maxItems: 4000
      type: array
    copyConfigurationCodeType:
      description: Information needed to copy configuration code from one property
        to the other.
      properties:
        targetHotelCode:
          description: Property to which configuration code type to be copied to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sourceHotelCode:
          description: Code that is to be copied.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Source hotel code from which code is to be copied from.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyBuildings:
      description: Request object for copying Building details to hotel(s).
      properties:
        copyInstructions:
          description: Information needed to copy configuration code from one property
            to the other.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyHousekeepingSectionGroups:
      description: Request object for copying housekeeping section groups in resort.
      properties:
        housekeepingSectionGroups:
          description: List of the housekeeping section groups to be copied
          items:
            $ref: '#/components/schemas/housekeepingSectionGroupCopyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionGroupsCopyType:
      description: List of the housekeeping section groups to be copied
      items:
        $ref: '#/components/schemas/housekeepingSectionGroupCopyType'
      maxItems: 4000
      type: array
    housekeepingSectionGroupCopyType:
      description: Detailed information of Housekeeping Section Group to copy.
      properties:
        sourceHotelCode:
          description: Source property of the Housekeeping section group.
          maxLength: 20
          minLength: 0
          type: string
        housekeepingSectionGroupCopyInfo:
          description: List of detailed information of Housekeeping section groups
            to copy.
          items:
            $ref: '#/components/schemas/housekeepingSectionGroupCopyInfoType'
          maxItems: 4000
          type: array
      type: object
    housekeepingSectionGroupCopyInfoType:
      description: Detailed information of Housekeeping Section Group to copy.
      properties:
        targetHotelCode:
          description: Source property of the Housekeeping section group.
          maxLength: 20
          minLength: 0
          type: string
        sourceSectiongroup:
          description: Source Housekeeping Section Group Code.
          maxLength: 20
          minLength: 0
          type: string
        copyAs:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    copyHousekeepingSections:
      properties:
        housekeepingSections:
          description: List of the housekeeping section code(s) to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyHousekeepingCodes:
      properties:
        housekeepingCodes:
          description: List of the housekeeping code(s) to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateOutOfOrderServiceReasonsDetails:
      description: Response object for fetching template Out of order/service reason(s).
      properties:
        outOfOrderServiceReasons:
          description: Template of out of order/service reason details.
          items:
            $ref: '#/components/schemas/templateOutOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateOutOfOrderServiceReasonsType:
      description: Template of out of order/service reason details.
      items:
        $ref: '#/components/schemas/templateOutOfOrderServiceReasonType'
      maxItems: 4000
      type: array
    templateOutOfOrderServiceReasonType:
      description: Base details of the out of order/service reason
      properties:
        description:
          description: Description for the out of order/service reason.
          maxLength: 80
          minLength: 0
          type: string
        sequence:
          description: Sequence number for displaying the out of order/service reason.
          type: integer
        reasonCode:
          description: Out of order/service reason code identifying the reason.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicator that tells whether the out of order/service reason
            in the hotel is active or not.
          type: boolean
        includeInStatisticsYn:
          description: "Indicator for RNA to use to decide whether to include this\
            \ room status in statistics, with no functional impact."
          type: boolean
        deductYn:
          description: "Indicator for room status display. Room status configured\
            \ with 'true' will be displayed as OOO, 'false' will be displayed as OOS."
          type: boolean
        returnTimeRequired:
          description: "Indicator for Return Time Required display. If configured\
            \ to true, then a time will be mandatory to determine when this unit (room)\
            \ will be back to the inventory of the available rooms."
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    templateOutOfOrderServiceReasonsCriteria:
      description: Request object for creating new template out of order/service reasons.
      properties:
        templateOutOfOrderServiceReasons:
          description: Template of out of order/service reason details.
          items:
            $ref: '#/components/schemas/templateOutOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateOutOfOrderServiceReasonsToBeChanged:
      description: Request object for modifying template out of order/service reasons.
      properties:
        templateOutOfOrderServiceReasons:
          description: Template of out of order/service reason details.
          items:
            $ref: '#/components/schemas/templateOutOfOrderServiceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassTemplateCriteria:
      description: Request object for creating a new room class template.
      properties:
        roomClassTemplate:
          $ref: '#/components/schemas/roomClassTemplateType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassTemplateType:
      description: "Common code type for code, description, seq and inactive"
      properties:
        description:
          $ref: '#/components/schemas/translationTextType50'
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates the code type is inactive or not.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomClassTemplatesDetails:
      description: Response object for information regarding template room classes.
      properties:
        roomClassTemplates:
          description: Collection of template room classes.
          items:
            $ref: '#/components/schemas/roomClassTemplateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomClassTemplatesType:
      description: Collection of template room classes.
      items:
        $ref: '#/components/schemas/roomClassTemplateType'
      maxItems: 4000
      type: array
    roomClassTemplateToBeChanged:
      description: Request object for modifying an existing room class template.
      properties:
        roomClassTemplate:
          $ref: '#/components/schemas/roomClassTemplateType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomConditionTemplatesDetails:
      description: Response object for information regarding room condition template
        of a property.
      properties:
        roomConditionTemplates:
          description: Collection of Room Condition Template Type
          items:
            $ref: '#/components/schemas/roomCondtionTemplateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomCondtionTemplatesType:
      description: Collection of Room Condition Template Type
      items:
        $ref: '#/components/schemas/roomCondtionTemplateType'
      maxItems: 4000
      type: array
    roomCondtionTemplateType:
      description: Room Condition Template Type
      properties:
        description:
          description: Description for the room condition.
          maxLength: 2000
          minLength: 0
          type: string
        displayInRoomAssignment:
          description: Indicates types of assignment.
          type: boolean
        comments:
          description: Comments for the room condition.
          maxLength: 2000
          minLength: 0
          type: string
        displaySeq:
          type: integer
        inactive:
          type: boolean
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomConditionTemplateCriteria:
      description: Request object for creating a new Room Condition Template.
      properties:
        roomConditionTemplate:
          $ref: '#/components/schemas/roomCondtionTemplateType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomConditionTemplateToBeChanged:
      description: Request object for Modifying Room Condition Template.
      properties:
        roomConditionTemplate:
          $ref: '#/components/schemas/roomCondtionTemplateType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateRoomFeaturesDetails:
      description: Response object to fetch template room features.
      properties:
        templateRoomFeatures:
          description: Template room feature details.
          items:
            $ref: '#/components/schemas/templateRoomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateRoomFeaturesConfigType:
      description: Template room feature details.
      items:
        $ref: '#/components/schemas/templateRoomFeatureConfigType'
      maxItems: 4000
      type: array
    templateRoomFeatureConfigType:
      description: "Common code type for code, description, seq and inactive"
      properties:
        description:
          $ref: '#/components/schemas/translationTextType50'
        sequence:
          description: Display sequence for the code type.
          type: integer
        code:
          description: Code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates the code type is inactive or not.
          type: boolean
        chainCode:
          description: Chain code for the code type.
          maxLength: 20
          minLength: 0
          type: string
        groupCode:
          description: Group code to which this code type belongs.
          maxLength: 20
          minLength: 0
          type: string
        global:
          description: Specifies whether the room feature is to be available for selection
            at all hotels.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    templateRoomFeaturesCriteria:
      description: Request object for creating template room features.
      properties:
        templateRoomFeatures:
          description: Template room feature details.
          items:
            $ref: '#/components/schemas/templateRoomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateRoomFeaturesToBeChanged:
      description: Request object for changing template room features.
      properties:
        templateRoomFeatures:
          description: Template room feature details.
          items:
            $ref: '#/components/schemas/templateRoomFeatureConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomHierarchiesDetails:
      description: Response for fetch room hierarchies
      properties:
        roomHierarchies:
          description: Holds collection of room hierarchies
          items:
            $ref: '#/components/schemas/roomHierarchyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomHierarchiesType:
      description: Holds collection of room hierarchies
      items:
        $ref: '#/components/schemas/roomHierarchyType'
      maxItems: 4000
      type: array
    roomHierarchyType:
      description: "Room Hierarchy id type for create, change and delete"
      properties:
        roomHierarchyType:
          $ref: '#/components/schemas/roomHierarchyTypeType'
        hotelId:
          description: Resort code in which the hierarchy should exist
          maxLength: 20
          minLength: 0
          type: string
        fromCode:
          description: From code to process
          maxLength: 20
          minLength: 0
          type: string
        toCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        displaySequence:
          description: Display Sequence
          type: integer
      type: object
    roomHierarchyTypeType:
      description: Provides the type of room hierarchy
      enum:
      - Type
      - Class
      type: string
    roomHierarchiesCriteria:
      description: Request to create room hierarchies
      properties:
        roomHierarchies:
          $ref: '#/components/schemas/createRoomHierarchiesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createRoomHierarchiesType:
      description: Holds collection of room hierarchies
      properties:
        roomHierarchy:
          items:
            $ref: '#/components/schemas/roomHierarchyType'
          maxItems: 4000
          type: array
        overwriteExisting:
          description: Setting this flag to true will overwrite all existing hierarchies.
          type: boolean
      type: object
    roomHierarchiesToBeChanged:
      description: Request to change room hierarchies
      properties:
        roomHierarchies:
          description: Holds collection of room hierarchies
          items:
            $ref: '#/components/schemas/roomHierarchyType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyRoomHierarchies:
      description: Request to copy room hierarchies
      properties:
        copyRoomHierarchies:
          $ref: '#/components/schemas/copyRoomHierarchies_copyRoomHierarchies'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomHierarchiesToGenerate:
      description: Generates the room hierarchies based on the AI cost function
      properties:
        criteria:
          $ref: '#/components/schemas/roomHierarchySearchType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomHierarchySearchType:
      description: Room hierarchy search type to fetch room hierarchies
      properties:
        roomHierarchyType:
          $ref: '#/components/schemas/roomHierarchyTypeType'
        hotelCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        fromCode:
          description: From code to process
          maxLength: 20
          minLength: 0
          type: string
        toCode:
          description: To code to process
          maxLength: 20
          minLength: 0
          type: string
      type: object
    templateRoomMaintenanceReasonsDetails:
      description: Response object for fetching template room maintenance reasons.
      properties:
        templateRoomMaintenanceReasons:
          description: Details for room maintenance reason at template level.
          items:
            $ref: '#/components/schemas/templateRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateRoomMaintenanceReasonsType:
      description: Details for room maintenance reason at template level.
      items:
        $ref: '#/components/schemas/templateRoomMaintenanceReasonType'
      maxItems: 4000
      type: array
    templateRoomMaintenanceReasonType:
      description: Base common structure for Room Maintenance at both hotel and template
        levels.
      properties:
        code:
          description: Identification code for a particular room maintenance reason.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of a particular room maintenance reason.
          maxLength: 2000
          minLength: 0
          type: string
        sellSequence:
          description: Indicates the sell sequence for a particular room maintenance
            reason.
          type: number
        inactive:
          description: Inactive flag for a particular room maintenance reason.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    templateRoomMaintenanceReasonsCriteria:
      description: Request object for creating new template room maintenance reasons.
      properties:
        templateRoomMaintenanceReasons:
          description: Details for room maintenance reason at template level.
          items:
            $ref: '#/components/schemas/templateRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateRoomMaintenanceReasonsToBeChanged:
      description: Request object for modifying template room maintenance reasons.
      properties:
        templateRoomMaintenanceReasons:
          description: Details for room maintenance reason at template level.
          items:
            $ref: '#/components/schemas/templateRoomMaintenanceReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomMoveReasonsDetails:
      description: Response object for fetching Room Move Reasons.
      properties:
        roomMoveReasons:
          description: List of Room Move Reasons.
          items:
            $ref: '#/components/schemas/roomMoveReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomMoveReasonsType:
      description: List of Room Move Reasons.
      items:
        $ref: '#/components/schemas/roomMoveReasonType'
      maxItems: 4000
      type: array
    roomMoveReasonType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomMoveReasonsCriteria:
      description: Request object for creating Room Move Reasons.
      properties:
        roomMoveReasons:
          description: List of Room Move Reasons.
          items:
            $ref: '#/components/schemas/roomMoveReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomMoveReasonsToBeChanged:
      description: Request object for changing Room Move Reasons.
      properties:
        roomMoveReasons:
          description: List of Room Move Reasons.
          items:
            $ref: '#/components/schemas/roomMoveReasonType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPotentialsDetails:
      description: Response object for fetching Room Potentials.
      properties:
        roomPotentials:
          description: List of Room Potentials.
          items:
            $ref: '#/components/schemas/roomPotentialType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPotentialsType:
      description: List of Room Potentials.
      items:
        $ref: '#/components/schemas/roomPotentialType'
      maxItems: 4000
      type: array
    roomPotentialType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        inactive:
          description: Determines whether this code is inactive or not.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomPotentialsCriteria:
      description: Request object for creating Room Potentials.
      properties:
        roomPotentials:
          description: List of Room Potentials.
          items:
            $ref: '#/components/schemas/roomPotentialType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPotentialsToBeChanged:
      description: Request object for changing Room Potentials.
      properties:
        roomPotentials:
          description: List of Room Potentials.
          items:
            $ref: '#/components/schemas/roomPotentialType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPreferencePrioritiesDetails:
      description: Response object for fetching Room Preference Priorities.
      properties:
        roomPreferencePriorities:
          description: List of Room Preference Priorities.
          items:
            $ref: '#/components/schemas/roomPreferencePriorityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPreferencePrioritiesType:
      description: List of Room Preference Priorities.
      items:
        $ref: '#/components/schemas/roomPreferencePriorityType'
      maxItems: 4000
      type: array
    roomPreferencePriorityType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    roomPreferencePrioritiesCriteria:
      description: Request object for creating Room Preference Priorities.
      properties:
        roomPreferencePriorities:
          description: List of Room Preference Priorities.
          items:
            $ref: '#/components/schemas/roomPreferencePriorityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomPreferencePrioritiesToBeChanged:
      description: Request object for changing Room Preference Priorities.
      properties:
        roomPreferencePriorities:
          description: List of Room Preference Priorities.
          items:
            $ref: '#/components/schemas/roomPreferencePriorityType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypeTemplatesDetails:
      description: Response object for information regarding room type template of
        a property.
      properties:
        roomTypeTemplatesSummary:
          description: This type holds collection of room type.
          items:
            $ref: '#/components/schemas/roomTypeSummaryType'
          maxItems: 4000
          type: array
        roomTypeTemplates:
          description: This type holds collection of room type.
          items:
            $ref: '#/components/schemas/roomTypeType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypeTemplateSummaryType:
      description: This type holds collection of room type.
      items:
        $ref: '#/components/schemas/roomTypeSummaryType'
      maxItems: 4000
      type: array
    roomTypeTemplateType:
      description: This type holds collection of room type.
      items:
        $ref: '#/components/schemas/roomTypeType'
      maxItems: 4000
      type: array
    roomTypeTemplatesCriteria:
      description: Request object for creating a new Room Type Template.
      properties:
        roomTypeTemplate:
          $ref: '#/components/schemas/roomTypeTemplatesCriteria_roomTypeTemplate'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypeTemplatesToBeChanged:
      description: Request object for Modifying existing Room Type Templates.
      properties:
        roomTypeTemplate:
          $ref: '#/components/schemas/roomTypeTemplatesToBeChanged_roomTypeTemplate'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomsSummaryDetails:
      description: Response object for fetching summary information of existing rooms.
      properties:
        rooms:
          $ref: '#/components/schemas/roomsSummaryDetails_rooms'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configRoomsSummaryType:
      description: This type holds collection of rooms summary.
      properties:
        roomSummary:
          items:
            $ref: '#/components/schemas/configRoomSummaryType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code of the rooms.
          maxLength: 20
          minLength: 0
          type: string
        noOfRooms:
          description: Current number of rooms.
          type: integer
      type: object
    configRoomSummaryType:
      description: This type represents the primary room attributes.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        ownerRoom:
          description: This indicates if room is marked as a owner room. This information
            is used when Room Rotation OPERA control is active.
          type: boolean
        unitGradeCode:
          description: The Unit Grade Code attached to the room. This information
            is used when Room Rotation OPERA control is active.
          maxLength: 20
          minLength: 0
          type: string
        unitGradeCodeDescription:
          description: The Unit Grade Code Description describes the unit grade code
            attached to the room. This information is used when Room Rotation OPERA
            control is active.
          maxLength: 2000
          minLength: 0
          type: string
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        maximumOccupancy:
          description: Maximum occupancy for the room type.
          type: integer
        squareUnits:
          description: Square units of a room.
          type: number
        squareUnitsMeasurement:
          description: Square unit measurement of a room.
          maxLength: 20
          minLength: 0
          type: string
        roomComponents:
          description: Component of a room.
          items:
            $ref: '#/components/schemas/roomComponentType'
          maxItems: 4000
          type: array
        connectingRooms:
          description: Collection of rooms.
          items:
            $ref: '#/components/schemas/roomRoomType'
          maxItems: 4000
          type: array
        sellSequence:
          description: Display sequence of a room.
          type: number
      type: object
    smokingTypesDetails:
      description: Response object for fetching Smoking Types.
      properties:
        smokingTypes:
          description: List of Smoking Types.
          items:
            $ref: '#/components/schemas/smokingTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    smokingTypesType:
      description: List of Smoking Types.
      items:
        $ref: '#/components/schemas/smokingTypeType'
      maxItems: 4000
      type: array
    smokingTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    smokingTypesCriteria:
      description: Request object for creating Smoking Types.
      properties:
        smokingTypes:
          description: List of Smoking Types.
          items:
            $ref: '#/components/schemas/smokingTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    smokingTypesToBeChanged:
      description: Request object for changing Smoking Types.
      properties:
        smokingTypes:
          description: List of Smoking Types.
          items:
            $ref: '#/components/schemas/smokingTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateFloorsDetails:
      description: Response object for fetching floors at the template level.
      properties:
        templateFloors:
          description: This type holds a collection of floors at the template level.
          items:
            $ref: '#/components/schemas/templateFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateFloorsType:
      description: This type holds a collection of floors at the template level.
      items:
        $ref: '#/components/schemas/templateFloorType'
      maxItems: 4000
      type: array
    templateFloorType:
      description: Base details common between both template and hotel level floors.
      properties:
        floor:
          description: Specifies the floor code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for the floor.
          maxLength: 2000
          minLength: 0
          type: string
        housekeeping:
          description: Flag to indicate if this floor should be available on the Task
            Sheet Workflow configuration.
          type: boolean
        sequence:
          description: Display sequence for the floor.
          type: integer
        global:
          description: Specifies whether the floor is to be available for selection
            at all hotels.
          type: boolean
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    templateFloorsCriteria:
      description: Request object for creating floors at the template level.
      properties:
        templateFloors:
          description: This type holds a collection of floors at the template level.
          items:
            $ref: '#/components/schemas/templateFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateFloorsToBeChanged:
      description: Request object for changing floors at the template level.
      properties:
        templateFloors:
          description: This type holds a collection of floors at the template level.
          items:
            $ref: '#/components/schemas/templateFloorType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateHousekeepingTaskConfigType:
      description: Common code type for template housekeeping task type.
      properties:
        code:
          description: Code for template housekeeping task.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description for template housekeeping task.
          maxLength: 2000
          minLength: 0
          type: string
        instructions:
          description: Instructions of template housekeeping task for the housekeeping
            to follow.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display sequence for template housekeeping task.
          maximum: 99999
          minimum: 1
          type: number
        color:
          $ref: '#/components/schemas/colorType'
        linenChange:
          description: Signifies whether template housekeeping task requires linen
            change.
          type: boolean
        guestRequested:
          description: Signifies whether template housekeeping task is a guest requested
            task.
          type: boolean
        defaultDepartureTask:
          description: Signifies that template task is a default task for the checked
            out room.
          type: boolean
        protected:
          description: Flag that determines whether this record is protected from
            removing or not
          type: boolean
        appliedCreditsPercentage:
          description: Percentage of Credits that will be used for this task. Used
            when the Housekeeping Credits functionality is set to use ROOM_TASK_RULE.
            The default value is 100.
          maximum: 100
          minimum: 0
          type: number
        inactive:
          description: Indicates if the template task is inactive.
          type: boolean
      type: object
    templateHousekeepingTasksDetails:
      description: Response object for fetching housekeeping tasks.
      properties:
        tasks:
          description: List of the housekeeping tasks to be configured
          items:
            $ref: '#/components/schemas/templateHousekeepingTaskConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateHousekeepingTasksCriteria:
      description: Add template housekeeping tasks configurations.
      properties:
        tasks:
          description: List of the housekeeping tasks to be configured
          items:
            $ref: '#/components/schemas/templateHousekeepingTaskConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateHousekeepingTaskToBeChanged:
      description: Modify housekeeping task.
      properties:
        task:
          $ref: '#/components/schemas/templateHousekeepingTaskConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configTemplateHousekeepingRoomScheduleType:
      description: Type contains configuration details of the task schedules configured
        at template level.
      properties:
        code:
          description: Code of the template housekeeping task.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of template housekeeping task.
          maxLength: 80
          minLength: 0
          type: string
        priority:
          description: Signifies the priority of the template task.
          type: integer
        credits:
          description: Housekeeping credits associated with this template housekeeping
            task.
          type: integer
        frequency:
          $ref: '#/components/schemas/frequencyTypeType'
        frequencyDays:
          description: "Specify how often in days following the guest's arrival date,\
            \ the template housekeeping task is to be completed."
          type: integer
        specialRequests:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        vIPStatuses:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sequence:
          description: Used to store the template housekeeping task sequence.
          type: integer
        daysOfWeek:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        rateCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        marketCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cycleStartDay:
          description: Signifies offset(in days) i.e. start on 3rd day from arrival.
          type: integer
        customizePromptText:
          description: Indicates information about task message.
          maxLength: 400
          minLength: 0
          type: string
        taskSupplies:
          description: This type holds a collection of template housekeeping task
            supply codes.
          items:
            $ref: '#/components/schemas/configTemplateHousekeepingRoomScheduleTaskSupplyType'
          maxItems: 4000
          type: array
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        guestRequested:
          description: Indicate this task is only available when requested by the
            Guest.
          type: boolean
        defaultDepartureTask:
          description: Signifies that template task is a default task for the checked
            out room.
          type: boolean
        moveup:
          description: Automatically moves the template task up one day if it falls
            on the day before the guest's departure. It will only be available when
            the schedule is set to every 3 days or more.
          type: boolean
        membershipType:
          description: Specify a Membership Type associated to a specific template
            housekeeping task code.
          maxLength: 20
          minLength: 0
          type: string
        membershipLevels:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    configTemplateHousekeepingRoomScheduleTaskSupplyType:
      description: Type to indicate associated supply codes for the template task
      properties:
        code:
          description: Supply code value.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the supply code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Number of the items to be provided for this task.
          type: integer
        sequence:
          description: Used to store the housekeeping room schedule sequence.
          type: integer
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        housekeepingRoomScheduleCode:
          description: Specifies the housekeeping room schedule code.
          maxLength: 20
          minLength: 0
          type: string
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    templateHousekeepingRoomSchedulesDetails:
      description: Response object of fetch template housekeeping tasks and its assoicated
        housekeeping codes.
      properties:
        templateHousekeepingRoomSchedules:
          description: This type holds a collection of housekeeping task schedules
            configured at template level.
          items:
            $ref: '#/components/schemas/configTemplateHousekeepingRoomScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateHousekeepingRoomSchedulesCriteria:
      description: Request Criteria to configure housekeeping task schedules at template
        level.
      properties:
        templateHousekeepingRoomSchedules:
          description: This type holds a collection of housekeeping task schedules
            configured at template level.
          items:
            $ref: '#/components/schemas/configTemplateHousekeepingRoomScheduleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateHousekeepingRoomSchedulesToBeChanged:
      description: Request object for changing housekeeping schedule tasks and it's
        associated codes configured at template level
      properties:
        templateHousekeepingRoomSchedule:
          $ref: '#/components/schemas/configTemplateHousekeepingRoomScheduleType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    vacantRoomStatusesList:
      description: Response object for fetching vacant room statuses.
      properties:
        vacantRoomStatus:
          description: Holds collection of vacant room housekeeping statuses.
          items:
            $ref: '#/components/schemas/vacantRoomStatusType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    vacantRoomStatusType:
      description: Information related to vacant room housekeeping status.
      properties:
        roomTypes:
          description: Room types of the room.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 400
          type: array
        beginDate:
          description: The date from which the vacant room status will be updated
            during end of day.
          format: date
          type: string
        endDate:
          description: The last date till which the vacant room status will be updated
            during end of day.
          format: date
          type: string
        houseKeepingRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        numberOfDays:
          description: Number of days to change room status of those rooms that are
            vacant from X number of days.
          type: number
        vacantRoomStatusId:
          description: The unique ID of the vacant room configuration to which this
            record applies.
          type: number
      type: object
    vacantRoomStatusDetails:
      description: The request element used to create a vacant room statuses.
      properties:
        roomTypes:
          description: Room Type of the room.
          items:
            type: string
          maxItems: 400
          type: array
        beginDate:
          description: The starting value of the date range. By default this would
            be the current business date.
          format: date
          type: string
        endDate:
          description: The ending value of the date range. The time span between the
            endDate and the beginDate must not exceed two years.
          format: date
          type: string
        numberOfDays:
          description: Number of days to change room status of those rooms that are
            vacant from X number of days.
          type: number
        houseKeepingRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      type: string
    componentRoomInfoType:
      description: This type holds information of a Component room attached to the
        Component Suite.
      properties:
        componentRoomNumber:
          description: Component Room Number attached to the Component Suite.
          type: string
        componentRoomType:
          description: Room type of the Component Room attached to the Component Suite.
          type: string
        componentRoomStatus:
          description: Room Status of the Component Room attached to the Component
            Suite.
          type: string
      type: object
    componentSuiteInfoType:
      description: This type holds information of the Component Suite to which the
        Component Room is attached.
      properties:
        componentSuiteNumber:
          description: Component Suite Number to which the Component Room is attached.
          type: string
        componentSuiteRoomType:
          description: Component Suite Room Type to which the Component Room is attached.
          type: string
        componentSuiteRoomStatus:
          description: Component Suite Room Status to which the Component Room is
            attached.
          type: string
      type: object
    managedByOptions:
      description: Describes of the Configuration is Managed by Enterprise or Property.
      enum:
      - EnterpriseManaged
      - PropertyManaged
      - EnterpriseEnforced
      - PropertyOverridden
      type: string
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    housekeepingCreditRuleType_facilityTaskRule:
      description: "When RuleType is set to FacilityTask, specifies task code and\
        \ minimum task count."
      properties:
        taskCode:
          description: "When RuleType is set to FacilityTask, specifies which task\
            \ code makes this credit rule applicable. For example, the credit value\
            \ will be added to the task assignment sheet when this specific task code\
            \ is assigned."
          maxLength: 20
          minLength: 0
          type: string
        minimumTaskCount:
          description: "When RuleType is set to FacilityTask, specifies the minimum\
            \ number of the facility task that must be assigned to a sheet before\
            \ the rule is applicable to that sheet."
          type: integer
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    housekeepingTaskSheetRoomType_ruleCredit:
      description: This element will be used only if the value of HOUSEKEEPING_CREDITS
        setting is set to ROOM_TASK_RULE or FACILITY.
      properties:
        credits:
          description: Specifies the base credits defined for each housekeeping room.
            This element will be used only if the value of HOUSEKEEPING_CREDITS setting
            is set to ROOM_TASK_RULE.
          type: integer
        turndownCredits:
          description: Specifies the turndown credits for each housekeeping room.
            This element will be used only if the TURNDOWN parameter is active and
            HOUSEKEEPING_CREDITS setting is set to a value other than NONE.
          type: integer
      type: object
    roomTypeType_suite:
      description: Indicates room type is a suite.
      properties:
        value:
          description: Property Value
          type: boolean
        editable:
          description: Indicates if room type Room Components may be changed.
          type: boolean
      type: object
    roomTypesCriteria_roomType:
      description: Room Type details to be created.
      properties:
        roomTypeDetails:
          $ref: '#/components/schemas/roomTypeType'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomTypesToBeChanged_roomType:
      description: Room Type details to be changed.
      properties:
        roomTypeDetails:
          $ref: '#/components/schemas/roomTypeType'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomCriteria_room:
      description: Room to be created.
      properties:
        roomDetails:
          $ref: '#/components/schemas/configRoomType'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomToBeChanged_room:
      description: Room to be changed.
      properties:
        roomDetails:
          $ref: '#/components/schemas/configRoomType'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyRoomHierarchies_copyRoomHierarchies:
      description: Takes either Type or Class
      properties:
        roomHierarchyType:
          $ref: '#/components/schemas/roomHierarchyTypeType'
        roomHierarchies:
          description: List of room hierarchies to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
      type: object
    roomTypeTemplatesCriteria_roomTypeTemplate:
      description: Room Type template details to be created.
      properties:
        roomTypeTemplateDetails:
          $ref: '#/components/schemas/roomTypeType'
      type: object
    roomTypeTemplatesToBeChanged_roomTypeTemplate:
      description: Room Type template details to be changed.
      properties:
        roomTypeTemplateDetails:
          $ref: '#/components/schemas/roomTypeType'
      type: object
    roomsSummaryDetails_rooms:
      description: Collection of rooms.
      properties:
        roomsSummary:
          description: Collection of rooms summary.
          items:
            $ref: '#/components/schemas/configRoomsSummaryType'
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
x-original-swagger-version: "2.0"
