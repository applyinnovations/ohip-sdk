/*
OPERA Cloud Room Configuration API

APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmcfg

import (
	"encoding/json"
)

// checks if the HousekeepingSectionGroupCopyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HousekeepingSectionGroupCopyType{}

// HousekeepingSectionGroupCopyType Detailed information of Housekeeping Section Group to copy.
type HousekeepingSectionGroupCopyType struct {
	// List of detailed information of Housekeeping section groups to copy.
	HousekeepingSectionGroupCopyInfo []HousekeepingSectionGroupCopyInfoType `json:"housekeepingSectionGroupCopyInfo,omitempty"`
	// Source property of the Housekeeping section group.
	SourceHotelCode *string `json:"sourceHotelCode,omitempty"`
}

// NewHousekeepingSectionGroupCopyType instantiates a new HousekeepingSectionGroupCopyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHousekeepingSectionGroupCopyType() *HousekeepingSectionGroupCopyType {
	this := HousekeepingSectionGroupCopyType{}
	return &this
}

// NewHousekeepingSectionGroupCopyTypeWithDefaults instantiates a new HousekeepingSectionGroupCopyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHousekeepingSectionGroupCopyTypeWithDefaults() *HousekeepingSectionGroupCopyType {
	this := HousekeepingSectionGroupCopyType{}
	return &this
}

// GetHousekeepingSectionGroupCopyInfo returns the HousekeepingSectionGroupCopyInfo field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupCopyType) GetHousekeepingSectionGroupCopyInfo() []HousekeepingSectionGroupCopyInfoType {
	if o == nil || IsNil(o.HousekeepingSectionGroupCopyInfo) {
		var ret []HousekeepingSectionGroupCopyInfoType
		return ret
	}
	return o.HousekeepingSectionGroupCopyInfo
}

// GetHousekeepingSectionGroupCopyInfoOk returns a tuple with the HousekeepingSectionGroupCopyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupCopyType) GetHousekeepingSectionGroupCopyInfoOk() ([]HousekeepingSectionGroupCopyInfoType, bool) {
	if o == nil || IsNil(o.HousekeepingSectionGroupCopyInfo) {
		return nil, false
	}
	return o.HousekeepingSectionGroupCopyInfo, true
}

// HasHousekeepingSectionGroupCopyInfo returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupCopyType) HasHousekeepingSectionGroupCopyInfo() bool {
	if o != nil && !IsNil(o.HousekeepingSectionGroupCopyInfo) {
		return true
	}

	return false
}

// SetHousekeepingSectionGroupCopyInfo gets a reference to the given []HousekeepingSectionGroupCopyInfoType and assigns it to the HousekeepingSectionGroupCopyInfo field.
func (o *HousekeepingSectionGroupCopyType) SetHousekeepingSectionGroupCopyInfo(v []HousekeepingSectionGroupCopyInfoType) {
	o.HousekeepingSectionGroupCopyInfo = v
}

// GetSourceHotelCode returns the SourceHotelCode field value if set, zero value otherwise.
func (o *HousekeepingSectionGroupCopyType) GetSourceHotelCode() string {
	if o == nil || IsNil(o.SourceHotelCode) {
		var ret string
		return ret
	}
	return *o.SourceHotelCode
}

// GetSourceHotelCodeOk returns a tuple with the SourceHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingSectionGroupCopyType) GetSourceHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceHotelCode) {
		return nil, false
	}
	return o.SourceHotelCode, true
}

// HasSourceHotelCode returns a boolean if a field has been set.
func (o *HousekeepingSectionGroupCopyType) HasSourceHotelCode() bool {
	if o != nil && !IsNil(o.SourceHotelCode) {
		return true
	}

	return false
}

// SetSourceHotelCode gets a reference to the given string and assigns it to the SourceHotelCode field.
func (o *HousekeepingSectionGroupCopyType) SetSourceHotelCode(v string) {
	o.SourceHotelCode = &v
}

func (o HousekeepingSectionGroupCopyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HousekeepingSectionGroupCopyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HousekeepingSectionGroupCopyInfo) {
		toSerialize["housekeepingSectionGroupCopyInfo"] = o.HousekeepingSectionGroupCopyInfo
	}
	if !IsNil(o.SourceHotelCode) {
		toSerialize["sourceHotelCode"] = o.SourceHotelCode
	}
	return toSerialize, nil
}

type NullableHousekeepingSectionGroupCopyType struct {
	value *HousekeepingSectionGroupCopyType
	isSet bool
}

func (v NullableHousekeepingSectionGroupCopyType) Get() *HousekeepingSectionGroupCopyType {
	return v.value
}

func (v *NullableHousekeepingSectionGroupCopyType) Set(val *HousekeepingSectionGroupCopyType) {
	v.value = val
	v.isSet = true
}

func (v NullableHousekeepingSectionGroupCopyType) IsSet() bool {
	return v.isSet
}

func (v *NullableHousekeepingSectionGroupCopyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHousekeepingSectionGroupCopyType(val *HousekeepingSectionGroupCopyType) *NullableHousekeepingSectionGroupCopyType {
	return &NullableHousekeepingSectionGroupCopyType{value: val, isSet: true}
}

func (v NullableHousekeepingSectionGroupCopyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHousekeepingSectionGroupCopyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


