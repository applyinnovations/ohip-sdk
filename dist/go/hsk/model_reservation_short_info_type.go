/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ReservationShortInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationShortInfoType{}

// ReservationShortInfoType struct for ReservationShortInfoType
type ReservationShortInfoType struct {
	// Guest name that is registered for the reservation.
	GuestName *string `json:"guestName,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	ReservationStatusInfo *HousekeepingRoomReservationStatusType `json:"reservationStatusInfo,omitempty"`
	StayDateInfo *StayDateInfoType `json:"stayDateInfo,omitempty"`
	VipStatus *VIPStatusType `json:"vipStatus,omitempty"`
	ProfileId *UniqueIDType `json:"profileId,omitempty"`
	// Indicates room number of the reservation.
	RoomId *string `json:"roomId,omitempty"`
	// Number of adults on the reservation.
	AdultCount *int32 `json:"adultCount,omitempty"`
	// Number of children on the reservation.
	ChildCount *int32 `json:"childCount,omitempty"`
	ScheduledRoomMoveInfo *ScheduledRoomMoveInfoType `json:"scheduledRoomMoveInfo,omitempty"`
	// Indicates the scheduled Move-In Room Number.
	ScheduledMoveInRoomId *string `json:"scheduledMoveInRoomId,omitempty"`
	// Indicates the scheduled Move-Out Room Number.
	ScheduledMoveOutRoomId *string `json:"scheduledMoveOutRoomId,omitempty"`
	// Nationality code identification.
	Nationality *string `json:"nationality,omitempty"`
	// Guest alternate given name, first name or any other names.
	AlternateGivenName *string `json:"alternateGivenName,omitempty"`
}

// NewReservationShortInfoType instantiates a new ReservationShortInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationShortInfoType() *ReservationShortInfoType {
	this := ReservationShortInfoType{}
	return &this
}

// NewReservationShortInfoTypeWithDefaults instantiates a new ReservationShortInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationShortInfoTypeWithDefaults() *ReservationShortInfoType {
	this := ReservationShortInfoType{}
	return &this
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *ReservationShortInfoType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationShortInfoType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetReservationStatusInfo returns the ReservationStatusInfo field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetReservationStatusInfo() HousekeepingRoomReservationStatusType {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		var ret HousekeepingRoomReservationStatusType
		return ret
	}
	return *o.ReservationStatusInfo
}

// GetReservationStatusInfoOk returns a tuple with the ReservationStatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetReservationStatusInfoOk() (*HousekeepingRoomReservationStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		return nil, false
	}
	return o.ReservationStatusInfo, true
}

// HasReservationStatusInfo returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasReservationStatusInfo() bool {
	if o != nil && !IsNil(o.ReservationStatusInfo) {
		return true
	}

	return false
}

// SetReservationStatusInfo gets a reference to the given HousekeepingRoomReservationStatusType and assigns it to the ReservationStatusInfo field.
func (o *ReservationShortInfoType) SetReservationStatusInfo(v HousekeepingRoomReservationStatusType) {
	o.ReservationStatusInfo = &v
}

// GetStayDateInfo returns the StayDateInfo field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetStayDateInfo() StayDateInfoType {
	if o == nil || IsNil(o.StayDateInfo) {
		var ret StayDateInfoType
		return ret
	}
	return *o.StayDateInfo
}

// GetStayDateInfoOk returns a tuple with the StayDateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetStayDateInfoOk() (*StayDateInfoType, bool) {
	if o == nil || IsNil(o.StayDateInfo) {
		return nil, false
	}
	return o.StayDateInfo, true
}

// HasStayDateInfo returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasStayDateInfo() bool {
	if o != nil && !IsNil(o.StayDateInfo) {
		return true
	}

	return false
}

// SetStayDateInfo gets a reference to the given StayDateInfoType and assigns it to the StayDateInfo field.
func (o *ReservationShortInfoType) SetStayDateInfo(v StayDateInfoType) {
	o.StayDateInfo = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetVipStatus() VIPStatusType {
	if o == nil || IsNil(o.VipStatus) {
		var ret VIPStatusType
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetVipStatusOk() (*VIPStatusType, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given VIPStatusType and assigns it to the VipStatus field.
func (o *ReservationShortInfoType) SetVipStatus(v VIPStatusType) {
	o.VipStatus = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetProfileId() UniqueIDType {
	if o == nil || IsNil(o.ProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given UniqueIDType and assigns it to the ProfileId field.
func (o *ReservationShortInfoType) SetProfileId(v UniqueIDType) {
	o.ProfileId = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *ReservationShortInfoType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetAdultCount returns the AdultCount field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetAdultCount() int32 {
	if o == nil || IsNil(o.AdultCount) {
		var ret int32
		return ret
	}
	return *o.AdultCount
}

// GetAdultCountOk returns a tuple with the AdultCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetAdultCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AdultCount) {
		return nil, false
	}
	return o.AdultCount, true
}

// HasAdultCount returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasAdultCount() bool {
	if o != nil && !IsNil(o.AdultCount) {
		return true
	}

	return false
}

// SetAdultCount gets a reference to the given int32 and assigns it to the AdultCount field.
func (o *ReservationShortInfoType) SetAdultCount(v int32) {
	o.AdultCount = &v
}

// GetChildCount returns the ChildCount field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetChildCount() int32 {
	if o == nil || IsNil(o.ChildCount) {
		var ret int32
		return ret
	}
	return *o.ChildCount
}

// GetChildCountOk returns a tuple with the ChildCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetChildCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ChildCount) {
		return nil, false
	}
	return o.ChildCount, true
}

// HasChildCount returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasChildCount() bool {
	if o != nil && !IsNil(o.ChildCount) {
		return true
	}

	return false
}

// SetChildCount gets a reference to the given int32 and assigns it to the ChildCount field.
func (o *ReservationShortInfoType) SetChildCount(v int32) {
	o.ChildCount = &v
}

// GetScheduledRoomMoveInfo returns the ScheduledRoomMoveInfo field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetScheduledRoomMoveInfo() ScheduledRoomMoveInfoType {
	if o == nil || IsNil(o.ScheduledRoomMoveInfo) {
		var ret ScheduledRoomMoveInfoType
		return ret
	}
	return *o.ScheduledRoomMoveInfo
}

// GetScheduledRoomMoveInfoOk returns a tuple with the ScheduledRoomMoveInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetScheduledRoomMoveInfoOk() (*ScheduledRoomMoveInfoType, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveInfo) {
		return nil, false
	}
	return o.ScheduledRoomMoveInfo, true
}

// HasScheduledRoomMoveInfo returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasScheduledRoomMoveInfo() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveInfo) {
		return true
	}

	return false
}

// SetScheduledRoomMoveInfo gets a reference to the given ScheduledRoomMoveInfoType and assigns it to the ScheduledRoomMoveInfo field.
func (o *ReservationShortInfoType) SetScheduledRoomMoveInfo(v ScheduledRoomMoveInfoType) {
	o.ScheduledRoomMoveInfo = &v
}

// GetScheduledMoveInRoomId returns the ScheduledMoveInRoomId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetScheduledMoveInRoomId() string {
	if o == nil || IsNil(o.ScheduledMoveInRoomId) {
		var ret string
		return ret
	}
	return *o.ScheduledMoveInRoomId
}

// GetScheduledMoveInRoomIdOk returns a tuple with the ScheduledMoveInRoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetScheduledMoveInRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledMoveInRoomId) {
		return nil, false
	}
	return o.ScheduledMoveInRoomId, true
}

// HasScheduledMoveInRoomId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasScheduledMoveInRoomId() bool {
	if o != nil && !IsNil(o.ScheduledMoveInRoomId) {
		return true
	}

	return false
}

// SetScheduledMoveInRoomId gets a reference to the given string and assigns it to the ScheduledMoveInRoomId field.
func (o *ReservationShortInfoType) SetScheduledMoveInRoomId(v string) {
	o.ScheduledMoveInRoomId = &v
}

// GetScheduledMoveOutRoomId returns the ScheduledMoveOutRoomId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetScheduledMoveOutRoomId() string {
	if o == nil || IsNil(o.ScheduledMoveOutRoomId) {
		var ret string
		return ret
	}
	return *o.ScheduledMoveOutRoomId
}

// GetScheduledMoveOutRoomIdOk returns a tuple with the ScheduledMoveOutRoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetScheduledMoveOutRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledMoveOutRoomId) {
		return nil, false
	}
	return o.ScheduledMoveOutRoomId, true
}

// HasScheduledMoveOutRoomId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasScheduledMoveOutRoomId() bool {
	if o != nil && !IsNil(o.ScheduledMoveOutRoomId) {
		return true
	}

	return false
}

// SetScheduledMoveOutRoomId gets a reference to the given string and assigns it to the ScheduledMoveOutRoomId field.
func (o *ReservationShortInfoType) SetScheduledMoveOutRoomId(v string) {
	o.ScheduledMoveOutRoomId = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *ReservationShortInfoType) SetNationality(v string) {
	o.Nationality = &v
}

// GetAlternateGivenName returns the AlternateGivenName field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetAlternateGivenName() string {
	if o == nil || IsNil(o.AlternateGivenName) {
		var ret string
		return ret
	}
	return *o.AlternateGivenName
}

// GetAlternateGivenNameOk returns a tuple with the AlternateGivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetAlternateGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlternateGivenName) {
		return nil, false
	}
	return o.AlternateGivenName, true
}

// HasAlternateGivenName returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasAlternateGivenName() bool {
	if o != nil && !IsNil(o.AlternateGivenName) {
		return true
	}

	return false
}

// SetAlternateGivenName gets a reference to the given string and assigns it to the AlternateGivenName field.
func (o *ReservationShortInfoType) SetAlternateGivenName(v string) {
	o.AlternateGivenName = &v
}

func (o ReservationShortInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationShortInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationStatusInfo) {
		toSerialize["reservationStatusInfo"] = o.ReservationStatusInfo
	}
	if !IsNil(o.StayDateInfo) {
		toSerialize["stayDateInfo"] = o.StayDateInfo
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.AdultCount) {
		toSerialize["adultCount"] = o.AdultCount
	}
	if !IsNil(o.ChildCount) {
		toSerialize["childCount"] = o.ChildCount
	}
	if !IsNil(o.ScheduledRoomMoveInfo) {
		toSerialize["scheduledRoomMoveInfo"] = o.ScheduledRoomMoveInfo
	}
	if !IsNil(o.ScheduledMoveInRoomId) {
		toSerialize["scheduledMoveInRoomId"] = o.ScheduledMoveInRoomId
	}
	if !IsNil(o.ScheduledMoveOutRoomId) {
		toSerialize["scheduledMoveOutRoomId"] = o.ScheduledMoveOutRoomId
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.AlternateGivenName) {
		toSerialize["alternateGivenName"] = o.AlternateGivenName
	}
	return toSerialize, nil
}

type NullableReservationShortInfoType struct {
	value *ReservationShortInfoType
	isSet bool
}

func (v NullableReservationShortInfoType) Get() *ReservationShortInfoType {
	return v.value
}

func (v *NullableReservationShortInfoType) Set(val *ReservationShortInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationShortInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationShortInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationShortInfoType(val *ReservationShortInfoType) *NullableReservationShortInfoType {
	return &NullableReservationShortInfoType{value: val, isSet: true}
}

func (v NullableReservationShortInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationShortInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


