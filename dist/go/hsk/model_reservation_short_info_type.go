/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ReservationShortInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationShortInfoType{}

// ReservationShortInfoType struct for ReservationShortInfoType
type ReservationShortInfoType struct {
	// Guest name that is registered for the reservation.
	GuestName *string `json:"guestName,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	ReservationStatusInfo *HousekeepingRoomReservationStatusType `json:"reservationStatusInfo,omitempty"`
	StayDateInfo *StayDateInfoType `json:"stayDateInfo,omitempty"`
	VipStatus *VIPStatusType `json:"vipStatus,omitempty"`
	ProfileId *UniqueIDType `json:"profileId,omitempty"`
}

// NewReservationShortInfoType instantiates a new ReservationShortInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationShortInfoType() *ReservationShortInfoType {
	this := ReservationShortInfoType{}
	return &this
}

// NewReservationShortInfoTypeWithDefaults instantiates a new ReservationShortInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationShortInfoTypeWithDefaults() *ReservationShortInfoType {
	this := ReservationShortInfoType{}
	return &this
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *ReservationShortInfoType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationShortInfoType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetReservationStatusInfo returns the ReservationStatusInfo field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetReservationStatusInfo() HousekeepingRoomReservationStatusType {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		var ret HousekeepingRoomReservationStatusType
		return ret
	}
	return *o.ReservationStatusInfo
}

// GetReservationStatusInfoOk returns a tuple with the ReservationStatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetReservationStatusInfoOk() (*HousekeepingRoomReservationStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		return nil, false
	}
	return o.ReservationStatusInfo, true
}

// HasReservationStatusInfo returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasReservationStatusInfo() bool {
	if o != nil && !IsNil(o.ReservationStatusInfo) {
		return true
	}

	return false
}

// SetReservationStatusInfo gets a reference to the given HousekeepingRoomReservationStatusType and assigns it to the ReservationStatusInfo field.
func (o *ReservationShortInfoType) SetReservationStatusInfo(v HousekeepingRoomReservationStatusType) {
	o.ReservationStatusInfo = &v
}

// GetStayDateInfo returns the StayDateInfo field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetStayDateInfo() StayDateInfoType {
	if o == nil || IsNil(o.StayDateInfo) {
		var ret StayDateInfoType
		return ret
	}
	return *o.StayDateInfo
}

// GetStayDateInfoOk returns a tuple with the StayDateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetStayDateInfoOk() (*StayDateInfoType, bool) {
	if o == nil || IsNil(o.StayDateInfo) {
		return nil, false
	}
	return o.StayDateInfo, true
}

// HasStayDateInfo returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasStayDateInfo() bool {
	if o != nil && !IsNil(o.StayDateInfo) {
		return true
	}

	return false
}

// SetStayDateInfo gets a reference to the given StayDateInfoType and assigns it to the StayDateInfo field.
func (o *ReservationShortInfoType) SetStayDateInfo(v StayDateInfoType) {
	o.StayDateInfo = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetVipStatus() VIPStatusType {
	if o == nil || IsNil(o.VipStatus) {
		var ret VIPStatusType
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetVipStatusOk() (*VIPStatusType, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given VIPStatusType and assigns it to the VipStatus field.
func (o *ReservationShortInfoType) SetVipStatus(v VIPStatusType) {
	o.VipStatus = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ReservationShortInfoType) GetProfileId() UniqueIDType {
	if o == nil || IsNil(o.ProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationShortInfoType) GetProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ReservationShortInfoType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given UniqueIDType and assigns it to the ProfileId field.
func (o *ReservationShortInfoType) SetProfileId(v UniqueIDType) {
	o.ProfileId = &v
}

func (o ReservationShortInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationShortInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationStatusInfo) {
		toSerialize["reservationStatusInfo"] = o.ReservationStatusInfo
	}
	if !IsNil(o.StayDateInfo) {
		toSerialize["stayDateInfo"] = o.StayDateInfo
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	return toSerialize, nil
}

type NullableReservationShortInfoType struct {
	value *ReservationShortInfoType
	isSet bool
}

func (v NullableReservationShortInfoType) Get() *ReservationShortInfoType {
	return v.value
}

func (v *NullableReservationShortInfoType) Set(val *ReservationShortInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationShortInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationShortInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationShortInfoType(val *ReservationShortInfoType) *NullableReservationShortInfoType {
	return &NullableReservationShortInfoType{value: val, isSet: true}
}

func (v NullableReservationShortInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationShortInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


