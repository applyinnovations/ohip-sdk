/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the FacilityTotalForecastType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FacilityTotalForecastType{}

// FacilityTotalForecastType The Total of the forecasts.
type FacilityTotalForecastType struct {
	// Collection of dates and their total quantities.
	Totals []ForecastTotalsQuantityType `json:"totals,omitempty"`
	// Collection of facility codes with their forecasts.
	TotalFacilityCodes []FacilityCodeForecastType `json:"totalFacilityCodes,omitempty"`
}

// NewFacilityTotalForecastType instantiates a new FacilityTotalForecastType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFacilityTotalForecastType() *FacilityTotalForecastType {
	this := FacilityTotalForecastType{}
	return &this
}

// NewFacilityTotalForecastTypeWithDefaults instantiates a new FacilityTotalForecastType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFacilityTotalForecastTypeWithDefaults() *FacilityTotalForecastType {
	this := FacilityTotalForecastType{}
	return &this
}

// GetTotals returns the Totals field value if set, zero value otherwise.
func (o *FacilityTotalForecastType) GetTotals() []ForecastTotalsQuantityType {
	if o == nil || IsNil(o.Totals) {
		var ret []ForecastTotalsQuantityType
		return ret
	}
	return o.Totals
}

// GetTotalsOk returns a tuple with the Totals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FacilityTotalForecastType) GetTotalsOk() ([]ForecastTotalsQuantityType, bool) {
	if o == nil || IsNil(o.Totals) {
		return nil, false
	}
	return o.Totals, true
}

// HasTotals returns a boolean if a field has been set.
func (o *FacilityTotalForecastType) HasTotals() bool {
	if o != nil && !IsNil(o.Totals) {
		return true
	}

	return false
}

// SetTotals gets a reference to the given []ForecastTotalsQuantityType and assigns it to the Totals field.
func (o *FacilityTotalForecastType) SetTotals(v []ForecastTotalsQuantityType) {
	o.Totals = v
}

// GetTotalFacilityCodes returns the TotalFacilityCodes field value if set, zero value otherwise.
func (o *FacilityTotalForecastType) GetTotalFacilityCodes() []FacilityCodeForecastType {
	if o == nil || IsNil(o.TotalFacilityCodes) {
		var ret []FacilityCodeForecastType
		return ret
	}
	return o.TotalFacilityCodes
}

// GetTotalFacilityCodesOk returns a tuple with the TotalFacilityCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FacilityTotalForecastType) GetTotalFacilityCodesOk() ([]FacilityCodeForecastType, bool) {
	if o == nil || IsNil(o.TotalFacilityCodes) {
		return nil, false
	}
	return o.TotalFacilityCodes, true
}

// HasTotalFacilityCodes returns a boolean if a field has been set.
func (o *FacilityTotalForecastType) HasTotalFacilityCodes() bool {
	if o != nil && !IsNil(o.TotalFacilityCodes) {
		return true
	}

	return false
}

// SetTotalFacilityCodes gets a reference to the given []FacilityCodeForecastType and assigns it to the TotalFacilityCodes field.
func (o *FacilityTotalForecastType) SetTotalFacilityCodes(v []FacilityCodeForecastType) {
	o.TotalFacilityCodes = v
}

func (o FacilityTotalForecastType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FacilityTotalForecastType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Totals) {
		toSerialize["totals"] = o.Totals
	}
	if !IsNil(o.TotalFacilityCodes) {
		toSerialize["totalFacilityCodes"] = o.TotalFacilityCodes
	}
	return toSerialize, nil
}

type NullableFacilityTotalForecastType struct {
	value *FacilityTotalForecastType
	isSet bool
}

func (v NullableFacilityTotalForecastType) Get() *FacilityTotalForecastType {
	return v.value
}

func (v *NullableFacilityTotalForecastType) Set(val *FacilityTotalForecastType) {
	v.value = val
	v.isSet = true
}

func (v NullableFacilityTotalForecastType) IsSet() bool {
	return v.isSet
}

func (v *NullableFacilityTotalForecastType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFacilityTotalForecastType(val *FacilityTotalForecastType) *NullableFacilityTotalForecastType {
	return &NullableFacilityTotalForecastType{value: val, isSet: true}
}

func (v NullableFacilityTotalForecastType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFacilityTotalForecastType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


