/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ReservationHousekeepingScheduleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationHousekeepingScheduleType{}

// ReservationHousekeepingScheduleType Criteria type for fetching reservation housekeeping schedule.
type ReservationHousekeepingScheduleType struct {
	// Signifies whether task has been customized or not.
	Customized *bool `json:"customized,omitempty"`
	// Signifies the shift of the housekeeping schedule.
	CycleStartDay *int32 `json:"cycleStartDay,omitempty"`
	// Date at which facility tasks stopped being retrieved.
	End *string `json:"end,omitempty"`
	// List of the facility tasks.
	FacilityHousekeepingTasks []FacilityHousekeepingTaskType `json:"facilityHousekeepingTasks,omitempty"`
	// Date at which facility tasks started being retrieved.
	Start *string `json:"start,omitempty"`
}

// NewReservationHousekeepingScheduleType instantiates a new ReservationHousekeepingScheduleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationHousekeepingScheduleType() *ReservationHousekeepingScheduleType {
	this := ReservationHousekeepingScheduleType{}
	return &this
}

// NewReservationHousekeepingScheduleTypeWithDefaults instantiates a new ReservationHousekeepingScheduleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationHousekeepingScheduleTypeWithDefaults() *ReservationHousekeepingScheduleType {
	this := ReservationHousekeepingScheduleType{}
	return &this
}

// GetCustomized returns the Customized field value if set, zero value otherwise.
func (o *ReservationHousekeepingScheduleType) GetCustomized() bool {
	if o == nil || IsNil(o.Customized) {
		var ret bool
		return ret
	}
	return *o.Customized
}

// GetCustomizedOk returns a tuple with the Customized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationHousekeepingScheduleType) GetCustomizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Customized) {
		return nil, false
	}
	return o.Customized, true
}

// HasCustomized returns a boolean if a field has been set.
func (o *ReservationHousekeepingScheduleType) HasCustomized() bool {
	if o != nil && !IsNil(o.Customized) {
		return true
	}

	return false
}

// SetCustomized gets a reference to the given bool and assigns it to the Customized field.
func (o *ReservationHousekeepingScheduleType) SetCustomized(v bool) {
	o.Customized = &v
}

// GetCycleStartDay returns the CycleStartDay field value if set, zero value otherwise.
func (o *ReservationHousekeepingScheduleType) GetCycleStartDay() int32 {
	if o == nil || IsNil(o.CycleStartDay) {
		var ret int32
		return ret
	}
	return *o.CycleStartDay
}

// GetCycleStartDayOk returns a tuple with the CycleStartDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationHousekeepingScheduleType) GetCycleStartDayOk() (*int32, bool) {
	if o == nil || IsNil(o.CycleStartDay) {
		return nil, false
	}
	return o.CycleStartDay, true
}

// HasCycleStartDay returns a boolean if a field has been set.
func (o *ReservationHousekeepingScheduleType) HasCycleStartDay() bool {
	if o != nil && !IsNil(o.CycleStartDay) {
		return true
	}

	return false
}

// SetCycleStartDay gets a reference to the given int32 and assigns it to the CycleStartDay field.
func (o *ReservationHousekeepingScheduleType) SetCycleStartDay(v int32) {
	o.CycleStartDay = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *ReservationHousekeepingScheduleType) GetEnd() string {
	if o == nil || IsNil(o.End) {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationHousekeepingScheduleType) GetEndOk() (*string, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *ReservationHousekeepingScheduleType) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *ReservationHousekeepingScheduleType) SetEnd(v string) {
	o.End = &v
}

// GetFacilityHousekeepingTasks returns the FacilityHousekeepingTasks field value if set, zero value otherwise.
func (o *ReservationHousekeepingScheduleType) GetFacilityHousekeepingTasks() []FacilityHousekeepingTaskType {
	if o == nil || IsNil(o.FacilityHousekeepingTasks) {
		var ret []FacilityHousekeepingTaskType
		return ret
	}
	return o.FacilityHousekeepingTasks
}

// GetFacilityHousekeepingTasksOk returns a tuple with the FacilityHousekeepingTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationHousekeepingScheduleType) GetFacilityHousekeepingTasksOk() ([]FacilityHousekeepingTaskType, bool) {
	if o == nil || IsNil(o.FacilityHousekeepingTasks) {
		return nil, false
	}
	return o.FacilityHousekeepingTasks, true
}

// HasFacilityHousekeepingTasks returns a boolean if a field has been set.
func (o *ReservationHousekeepingScheduleType) HasFacilityHousekeepingTasks() bool {
	if o != nil && !IsNil(o.FacilityHousekeepingTasks) {
		return true
	}

	return false
}

// SetFacilityHousekeepingTasks gets a reference to the given []FacilityHousekeepingTaskType and assigns it to the FacilityHousekeepingTasks field.
func (o *ReservationHousekeepingScheduleType) SetFacilityHousekeepingTasks(v []FacilityHousekeepingTaskType) {
	o.FacilityHousekeepingTasks = v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ReservationHousekeepingScheduleType) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationHousekeepingScheduleType) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ReservationHousekeepingScheduleType) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *ReservationHousekeepingScheduleType) SetStart(v string) {
	o.Start = &v
}

func (o ReservationHousekeepingScheduleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationHousekeepingScheduleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Customized) {
		toSerialize["customized"] = o.Customized
	}
	if !IsNil(o.CycleStartDay) {
		toSerialize["cycleStartDay"] = o.CycleStartDay
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.FacilityHousekeepingTasks) {
		toSerialize["facilityHousekeepingTasks"] = o.FacilityHousekeepingTasks
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	return toSerialize, nil
}

type NullableReservationHousekeepingScheduleType struct {
	value *ReservationHousekeepingScheduleType
	isSet bool
}

func (v NullableReservationHousekeepingScheduleType) Get() *ReservationHousekeepingScheduleType {
	return v.value
}

func (v *NullableReservationHousekeepingScheduleType) Set(val *ReservationHousekeepingScheduleType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationHousekeepingScheduleType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationHousekeepingScheduleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationHousekeepingScheduleType(val *ReservationHousekeepingScheduleType) *NullableReservationHousekeepingScheduleType {
	return &NullableReservationHousekeepingScheduleType{value: val, isSet: true}
}

func (v NullableReservationHousekeepingScheduleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationHousekeepingScheduleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


