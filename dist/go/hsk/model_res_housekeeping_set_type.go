/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ResHousekeepingSetType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResHousekeepingSetType{}

// ResHousekeepingSetType Search Criteria for retrieving guest housekeeping instructions.
type ResHousekeepingSetType struct {
	// Hotel Code.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Room to which housekeeping record belongs.
	Room *string `json:"room,omitempty"`
	// housekeeping instructions that should be used.
	HousekeepingInstruction []HousekeepingInstructionsType `json:"housekeepingInstruction,omitempty"`
	HousekeepingInstructions *ResHousekeepingType `json:"housekeepingInstructions,omitempty"`
}

// NewResHousekeepingSetType instantiates a new ResHousekeepingSetType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResHousekeepingSetType() *ResHousekeepingSetType {
	this := ResHousekeepingSetType{}
	return &this
}

// NewResHousekeepingSetTypeWithDefaults instantiates a new ResHousekeepingSetType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResHousekeepingSetTypeWithDefaults() *ResHousekeepingSetType {
	this := ResHousekeepingSetType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ResHousekeepingSetType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResHousekeepingSetType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ResHousekeepingSetType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ResHousekeepingSetType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ResHousekeepingSetType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResHousekeepingSetType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ResHousekeepingSetType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ResHousekeepingSetType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *ResHousekeepingSetType) GetRoom() string {
	if o == nil || IsNil(o.Room) {
		var ret string
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResHousekeepingSetType) GetRoomOk() (*string, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *ResHousekeepingSetType) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given string and assigns it to the Room field.
func (o *ResHousekeepingSetType) SetRoom(v string) {
	o.Room = &v
}

// GetHousekeepingInstruction returns the HousekeepingInstruction field value if set, zero value otherwise.
func (o *ResHousekeepingSetType) GetHousekeepingInstruction() []HousekeepingInstructionsType {
	if o == nil || IsNil(o.HousekeepingInstruction) {
		var ret []HousekeepingInstructionsType
		return ret
	}
	return o.HousekeepingInstruction
}

// GetHousekeepingInstructionOk returns a tuple with the HousekeepingInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResHousekeepingSetType) GetHousekeepingInstructionOk() ([]HousekeepingInstructionsType, bool) {
	if o == nil || IsNil(o.HousekeepingInstruction) {
		return nil, false
	}
	return o.HousekeepingInstruction, true
}

// HasHousekeepingInstruction returns a boolean if a field has been set.
func (o *ResHousekeepingSetType) HasHousekeepingInstruction() bool {
	if o != nil && !IsNil(o.HousekeepingInstruction) {
		return true
	}

	return false
}

// SetHousekeepingInstruction gets a reference to the given []HousekeepingInstructionsType and assigns it to the HousekeepingInstruction field.
func (o *ResHousekeepingSetType) SetHousekeepingInstruction(v []HousekeepingInstructionsType) {
	o.HousekeepingInstruction = v
}

// GetHousekeepingInstructions returns the HousekeepingInstructions field value if set, zero value otherwise.
func (o *ResHousekeepingSetType) GetHousekeepingInstructions() ResHousekeepingType {
	if o == nil || IsNil(o.HousekeepingInstructions) {
		var ret ResHousekeepingType
		return ret
	}
	return *o.HousekeepingInstructions
}

// GetHousekeepingInstructionsOk returns a tuple with the HousekeepingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResHousekeepingSetType) GetHousekeepingInstructionsOk() (*ResHousekeepingType, bool) {
	if o == nil || IsNil(o.HousekeepingInstructions) {
		return nil, false
	}
	return o.HousekeepingInstructions, true
}

// HasHousekeepingInstructions returns a boolean if a field has been set.
func (o *ResHousekeepingSetType) HasHousekeepingInstructions() bool {
	if o != nil && !IsNil(o.HousekeepingInstructions) {
		return true
	}

	return false
}

// SetHousekeepingInstructions gets a reference to the given ResHousekeepingType and assigns it to the HousekeepingInstructions field.
func (o *ResHousekeepingSetType) SetHousekeepingInstructions(v ResHousekeepingType) {
	o.HousekeepingInstructions = &v
}

func (o ResHousekeepingSetType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResHousekeepingSetType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	if !IsNil(o.HousekeepingInstruction) {
		toSerialize["housekeepingInstruction"] = o.HousekeepingInstruction
	}
	if !IsNil(o.HousekeepingInstructions) {
		toSerialize["housekeepingInstructions"] = o.HousekeepingInstructions
	}
	return toSerialize, nil
}

type NullableResHousekeepingSetType struct {
	value *ResHousekeepingSetType
	isSet bool
}

func (v NullableResHousekeepingSetType) Get() *ResHousekeepingSetType {
	return v.value
}

func (v *NullableResHousekeepingSetType) Set(val *ResHousekeepingSetType) {
	v.value = val
	v.isSet = true
}

func (v NullableResHousekeepingSetType) IsSet() bool {
	return v.isSet
}

func (v *NullableResHousekeepingSetType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResHousekeepingSetType(val *ResHousekeepingSetType) *NullableResHousekeepingSetType {
	return &NullableResHousekeepingSetType{value: val, isSet: true}
}

func (v NullableResHousekeepingSetType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResHousekeepingSetType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


