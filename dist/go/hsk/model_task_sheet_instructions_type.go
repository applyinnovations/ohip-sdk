/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the TaskSheetInstructionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskSheetInstructionsType{}

// TaskSheetInstructionsType Instructions which will added to the Task Sheets which are generated.
type TaskSheetInstructionsType struct {
	// Instructions for the attendant i.e for each attendant.
	AttendantInstructions *string `json:"attendantInstructions,omitempty"`
	// Instructions at the room level i.e for each room.
	RoomInstructions *string `json:"roomInstructions,omitempty"`
	// Instructions for the task sheets.
	TaskInstructions *string `json:"taskInstructions,omitempty"`
}

// NewTaskSheetInstructionsType instantiates a new TaskSheetInstructionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskSheetInstructionsType() *TaskSheetInstructionsType {
	this := TaskSheetInstructionsType{}
	return &this
}

// NewTaskSheetInstructionsTypeWithDefaults instantiates a new TaskSheetInstructionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskSheetInstructionsTypeWithDefaults() *TaskSheetInstructionsType {
	this := TaskSheetInstructionsType{}
	return &this
}

// GetAttendantInstructions returns the AttendantInstructions field value if set, zero value otherwise.
func (o *TaskSheetInstructionsType) GetAttendantInstructions() string {
	if o == nil || IsNil(o.AttendantInstructions) {
		var ret string
		return ret
	}
	return *o.AttendantInstructions
}

// GetAttendantInstructionsOk returns a tuple with the AttendantInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskSheetInstructionsType) GetAttendantInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.AttendantInstructions) {
		return nil, false
	}
	return o.AttendantInstructions, true
}

// HasAttendantInstructions returns a boolean if a field has been set.
func (o *TaskSheetInstructionsType) HasAttendantInstructions() bool {
	if o != nil && !IsNil(o.AttendantInstructions) {
		return true
	}

	return false
}

// SetAttendantInstructions gets a reference to the given string and assigns it to the AttendantInstructions field.
func (o *TaskSheetInstructionsType) SetAttendantInstructions(v string) {
	o.AttendantInstructions = &v
}

// GetRoomInstructions returns the RoomInstructions field value if set, zero value otherwise.
func (o *TaskSheetInstructionsType) GetRoomInstructions() string {
	if o == nil || IsNil(o.RoomInstructions) {
		var ret string
		return ret
	}
	return *o.RoomInstructions
}

// GetRoomInstructionsOk returns a tuple with the RoomInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskSheetInstructionsType) GetRoomInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.RoomInstructions) {
		return nil, false
	}
	return o.RoomInstructions, true
}

// HasRoomInstructions returns a boolean if a field has been set.
func (o *TaskSheetInstructionsType) HasRoomInstructions() bool {
	if o != nil && !IsNil(o.RoomInstructions) {
		return true
	}

	return false
}

// SetRoomInstructions gets a reference to the given string and assigns it to the RoomInstructions field.
func (o *TaskSheetInstructionsType) SetRoomInstructions(v string) {
	o.RoomInstructions = &v
}

// GetTaskInstructions returns the TaskInstructions field value if set, zero value otherwise.
func (o *TaskSheetInstructionsType) GetTaskInstructions() string {
	if o == nil || IsNil(o.TaskInstructions) {
		var ret string
		return ret
	}
	return *o.TaskInstructions
}

// GetTaskInstructionsOk returns a tuple with the TaskInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskSheetInstructionsType) GetTaskInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.TaskInstructions) {
		return nil, false
	}
	return o.TaskInstructions, true
}

// HasTaskInstructions returns a boolean if a field has been set.
func (o *TaskSheetInstructionsType) HasTaskInstructions() bool {
	if o != nil && !IsNil(o.TaskInstructions) {
		return true
	}

	return false
}

// SetTaskInstructions gets a reference to the given string and assigns it to the TaskInstructions field.
func (o *TaskSheetInstructionsType) SetTaskInstructions(v string) {
	o.TaskInstructions = &v
}

func (o TaskSheetInstructionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskSheetInstructionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttendantInstructions) {
		toSerialize["attendantInstructions"] = o.AttendantInstructions
	}
	if !IsNil(o.RoomInstructions) {
		toSerialize["roomInstructions"] = o.RoomInstructions
	}
	if !IsNil(o.TaskInstructions) {
		toSerialize["taskInstructions"] = o.TaskInstructions
	}
	return toSerialize, nil
}

type NullableTaskSheetInstructionsType struct {
	value *TaskSheetInstructionsType
	isSet bool
}

func (v NullableTaskSheetInstructionsType) Get() *TaskSheetInstructionsType {
	return v.value
}

func (v *NullableTaskSheetInstructionsType) Set(val *TaskSheetInstructionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskSheetInstructionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskSheetInstructionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskSheetInstructionsType(val *TaskSheetInstructionsType) *NullableTaskSheetInstructionsType {
	return &NullableTaskSheetInstructionsType{value: val, isSet: true}
}

func (v NullableTaskSheetInstructionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskSheetInstructionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


