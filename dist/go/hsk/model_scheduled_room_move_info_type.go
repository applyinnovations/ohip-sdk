/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the ScheduledRoomMoveInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledRoomMoveInfoType{}

// ScheduledRoomMoveInfoType Holds the scheduled room Move In/Out information.
type ScheduledRoomMoveInfoType struct {
	// Scheduled Room Move-In Time.
	ScheduledRoomMoveInTime *string `json:"scheduledRoomMoveInTime,omitempty"`
	// Scheduled Room Move-Out Time.
	ScheduledRoomMoveOutTime *string `json:"scheduledRoomMoveOutTime,omitempty"`
	// True indicates room is scheduled for move in.
	ScheduledRoomMoveIn *bool `json:"scheduledRoomMoveIn,omitempty"`
	// True indicates room is scheduled for move out.
	ScheduledRoomMoveOut *bool `json:"scheduledRoomMoveOut,omitempty"`
}

// NewScheduledRoomMoveInfoType instantiates a new ScheduledRoomMoveInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledRoomMoveInfoType() *ScheduledRoomMoveInfoType {
	this := ScheduledRoomMoveInfoType{}
	return &this
}

// NewScheduledRoomMoveInfoTypeWithDefaults instantiates a new ScheduledRoomMoveInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledRoomMoveInfoTypeWithDefaults() *ScheduledRoomMoveInfoType {
	this := ScheduledRoomMoveInfoType{}
	return &this
}

// GetScheduledRoomMoveInTime returns the ScheduledRoomMoveInTime field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveInTime() string {
	if o == nil || IsNil(o.ScheduledRoomMoveInTime) {
		var ret string
		return ret
	}
	return *o.ScheduledRoomMoveInTime
}

// GetScheduledRoomMoveInTimeOk returns a tuple with the ScheduledRoomMoveInTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveInTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveInTime) {
		return nil, false
	}
	return o.ScheduledRoomMoveInTime, true
}

// HasScheduledRoomMoveInTime returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasScheduledRoomMoveInTime() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveInTime) {
		return true
	}

	return false
}

// SetScheduledRoomMoveInTime gets a reference to the given string and assigns it to the ScheduledRoomMoveInTime field.
func (o *ScheduledRoomMoveInfoType) SetScheduledRoomMoveInTime(v string) {
	o.ScheduledRoomMoveInTime = &v
}

// GetScheduledRoomMoveOutTime returns the ScheduledRoomMoveOutTime field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveOutTime() string {
	if o == nil || IsNil(o.ScheduledRoomMoveOutTime) {
		var ret string
		return ret
	}
	return *o.ScheduledRoomMoveOutTime
}

// GetScheduledRoomMoveOutTimeOk returns a tuple with the ScheduledRoomMoveOutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveOutTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveOutTime) {
		return nil, false
	}
	return o.ScheduledRoomMoveOutTime, true
}

// HasScheduledRoomMoveOutTime returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasScheduledRoomMoveOutTime() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveOutTime) {
		return true
	}

	return false
}

// SetScheduledRoomMoveOutTime gets a reference to the given string and assigns it to the ScheduledRoomMoveOutTime field.
func (o *ScheduledRoomMoveInfoType) SetScheduledRoomMoveOutTime(v string) {
	o.ScheduledRoomMoveOutTime = &v
}

// GetScheduledRoomMoveIn returns the ScheduledRoomMoveIn field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveIn() bool {
	if o == nil || IsNil(o.ScheduledRoomMoveIn) {
		var ret bool
		return ret
	}
	return *o.ScheduledRoomMoveIn
}

// GetScheduledRoomMoveInOk returns a tuple with the ScheduledRoomMoveIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveInOk() (*bool, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveIn) {
		return nil, false
	}
	return o.ScheduledRoomMoveIn, true
}

// HasScheduledRoomMoveIn returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasScheduledRoomMoveIn() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveIn) {
		return true
	}

	return false
}

// SetScheduledRoomMoveIn gets a reference to the given bool and assigns it to the ScheduledRoomMoveIn field.
func (o *ScheduledRoomMoveInfoType) SetScheduledRoomMoveIn(v bool) {
	o.ScheduledRoomMoveIn = &v
}

// GetScheduledRoomMoveOut returns the ScheduledRoomMoveOut field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveOut() bool {
	if o == nil || IsNil(o.ScheduledRoomMoveOut) {
		var ret bool
		return ret
	}
	return *o.ScheduledRoomMoveOut
}

// GetScheduledRoomMoveOutOk returns a tuple with the ScheduledRoomMoveOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetScheduledRoomMoveOutOk() (*bool, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveOut) {
		return nil, false
	}
	return o.ScheduledRoomMoveOut, true
}

// HasScheduledRoomMoveOut returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasScheduledRoomMoveOut() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveOut) {
		return true
	}

	return false
}

// SetScheduledRoomMoveOut gets a reference to the given bool and assigns it to the ScheduledRoomMoveOut field.
func (o *ScheduledRoomMoveInfoType) SetScheduledRoomMoveOut(v bool) {
	o.ScheduledRoomMoveOut = &v
}

func (o ScheduledRoomMoveInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledRoomMoveInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScheduledRoomMoveInTime) {
		toSerialize["scheduledRoomMoveInTime"] = o.ScheduledRoomMoveInTime
	}
	if !IsNil(o.ScheduledRoomMoveOutTime) {
		toSerialize["scheduledRoomMoveOutTime"] = o.ScheduledRoomMoveOutTime
	}
	if !IsNil(o.ScheduledRoomMoveIn) {
		toSerialize["scheduledRoomMoveIn"] = o.ScheduledRoomMoveIn
	}
	if !IsNil(o.ScheduledRoomMoveOut) {
		toSerialize["scheduledRoomMoveOut"] = o.ScheduledRoomMoveOut
	}
	return toSerialize, nil
}

type NullableScheduledRoomMoveInfoType struct {
	value *ScheduledRoomMoveInfoType
	isSet bool
}

func (v NullableScheduledRoomMoveInfoType) Get() *ScheduledRoomMoveInfoType {
	return v.value
}

func (v *NullableScheduledRoomMoveInfoType) Set(val *ScheduledRoomMoveInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledRoomMoveInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledRoomMoveInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledRoomMoveInfoType(val *ScheduledRoomMoveInfoType) *NullableScheduledRoomMoveInfoType {
	return &NullableScheduledRoomMoveInfoType{value: val, isSet: true}
}

func (v NullableScheduledRoomMoveInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledRoomMoveInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


