/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the HousekeepingTaskTypeRoomsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HousekeepingTaskTypeRoomsInner{}

// HousekeepingTaskTypeRoomsInner This type represents the primary room attributes.
type HousekeepingTaskTypeRoomsInner struct {
	RoomType *RoomTypeShortInfoType `json:"roomType,omitempty"`
	// Floor of the Room.
	Floor *string `json:"floor,omitempty"`
	// Description for the Floor of the Room.
	FloorDescription *string `json:"floorDescription,omitempty"`
	// A recurring element that identifies the room features.
	RoomFeatures []RoomFeatureType `json:"roomFeatures,omitempty"`
	// Detail Long Description Of The Room.
	RoomDescription *string `json:"roomDescription,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
	// This indicates room smoking preference.
	SmokingPreference *string `json:"smokingPreference,omitempty"`
	// This indicates the description of the room smoking preference.
	SmokingPreferenceDescription *string `json:"smokingPreferenceDescription,omitempty"`
	// Building associated with the room.
	Building *string `json:"building,omitempty"`
	RoomAssignmentRating *RatePlanRatingType `json:"roomAssignmentRating,omitempty"`
	// Indicates whether the room is accessibility compliant.
	IsAccessible *bool `json:"isAccessible,omitempty"`
	// Code of the room.
	RoomId *string `json:"roomId,omitempty"`
	// Indicates whether the room is a Meeting Room
	MeetingRoom *bool `json:"meetingRoom,omitempty"`
	RoomSection *RoomSectionType `json:"roomSection,omitempty"`
	Housekeeping *HousekeepingType `json:"housekeeping,omitempty"`
	// Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).
	OutOfOrder []RoomOutOfOrderType `json:"outOfOrder,omitempty"`
	// Room Discrepancies between front office and housekeeping room status and number of persons in the room.
	Discrepancy []RoomDiscrepancyType `json:"discrepancy,omitempty"`
	SitePlanSection *SitePlanSectionType `json:"sitePlanSection,omitempty"`
	// This flag indicates component room.
	ComponentRoomNumber *string `json:"componentRoomNumber,omitempty"`
	// Collection of rooms.
	ConnectingRooms []RoomRoomType `json:"connectingRooms,omitempty"`
	// Collection of rooms.
	ComponentRooms []RoomRoomType `json:"componentRooms,omitempty"`
	Attendant []CurrentServicingAttendantType `json:"attendant,omitempty"`
	Hold *RoomHoldType `json:"hold,omitempty"`
	TurndownInfo *TurndownInfoType `json:"turndownInfo,omitempty"`
	ResvInfo []ReservationShortInfoType `json:"resvInfo,omitempty"`
	ScheduledRoomMoveResvInfo []ReservationShortInfoType `json:"scheduledRoomMoveResvInfo,omitempty"`
	// List of component room numbers.
	ComponentRoomNumbers []string `json:"componentRoomNumbers,omitempty"`
	ReservationInfo []ReservationInfoType `json:"reservationInfo,omitempty"`
	// Information regarding the current servicing of the room.
	ServicingInfo []CurrentServicingAttendantType `json:"servicingInfo,omitempty"`
	// Task Sheet instructions at the room level.
	Instructions *string `json:"instructions,omitempty"`
	// Total credits for this room.
	TotalCredits *int32 `json:"totalCredits,omitempty"`
	// The wake up time of the current date
	WakeUpTime *string `json:"wakeUpTime,omitempty"`
	// The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.
	CleaningSequence *int32 `json:"cleaningSequence,omitempty"`
	// The sequence for this room from configuration.
	DefaultSequence *int32 `json:"defaultSequence,omitempty"`
	// The sequence for this room from configuration.
	HasPriority *bool `json:"hasPriority,omitempty"`
	// Flag if the Room, and the OperaV5 version, allows Room Maintenance or not.
	MaintenanceAllowed *bool `json:"maintenanceAllowed,omitempty"`
}

// NewHousekeepingTaskTypeRoomsInner instantiates a new HousekeepingTaskTypeRoomsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHousekeepingTaskTypeRoomsInner() *HousekeepingTaskTypeRoomsInner {
	this := HousekeepingTaskTypeRoomsInner{}
	return &this
}

// NewHousekeepingTaskTypeRoomsInnerWithDefaults instantiates a new HousekeepingTaskTypeRoomsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHousekeepingTaskTypeRoomsInnerWithDefaults() *HousekeepingTaskTypeRoomsInner {
	this := HousekeepingTaskTypeRoomsInner{}
	return &this
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomType() RoomTypeShortInfoType {
	if o == nil || IsNil(o.RoomType) {
		var ret RoomTypeShortInfoType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomTypeOk() (*RoomTypeShortInfoType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given RoomTypeShortInfoType and assigns it to the RoomType field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomType(v RoomTypeShortInfoType) {
	o.RoomType = &v
}

// GetFloor returns the Floor field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetFloor() string {
	if o == nil || IsNil(o.Floor) {
		var ret string
		return ret
	}
	return *o.Floor
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetFloorOk() (*string, bool) {
	if o == nil || IsNil(o.Floor) {
		return nil, false
	}
	return o.Floor, true
}

// HasFloor returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasFloor() bool {
	if o != nil && !IsNil(o.Floor) {
		return true
	}

	return false
}

// SetFloor gets a reference to the given string and assigns it to the Floor field.
func (o *HousekeepingTaskTypeRoomsInner) SetFloor(v string) {
	o.Floor = &v
}

// GetFloorDescription returns the FloorDescription field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetFloorDescription() string {
	if o == nil || IsNil(o.FloorDescription) {
		var ret string
		return ret
	}
	return *o.FloorDescription
}

// GetFloorDescriptionOk returns a tuple with the FloorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetFloorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FloorDescription) {
		return nil, false
	}
	return o.FloorDescription, true
}

// HasFloorDescription returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasFloorDescription() bool {
	if o != nil && !IsNil(o.FloorDescription) {
		return true
	}

	return false
}

// SetFloorDescription gets a reference to the given string and assigns it to the FloorDescription field.
func (o *HousekeepingTaskTypeRoomsInner) SetFloorDescription(v string) {
	o.FloorDescription = &v
}

// GetRoomFeatures returns the RoomFeatures field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomFeatures() []RoomFeatureType {
	if o == nil || IsNil(o.RoomFeatures) {
		var ret []RoomFeatureType
		return ret
	}
	return o.RoomFeatures
}

// GetRoomFeaturesOk returns a tuple with the RoomFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomFeaturesOk() ([]RoomFeatureType, bool) {
	if o == nil || IsNil(o.RoomFeatures) {
		return nil, false
	}
	return o.RoomFeatures, true
}

// HasRoomFeatures returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomFeatures() bool {
	if o != nil && !IsNil(o.RoomFeatures) {
		return true
	}

	return false
}

// SetRoomFeatures gets a reference to the given []RoomFeatureType and assigns it to the RoomFeatures field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomFeatures(v []RoomFeatureType) {
	o.RoomFeatures = v
}

// GetRoomDescription returns the RoomDescription field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomDescription() string {
	if o == nil || IsNil(o.RoomDescription) {
		var ret string
		return ret
	}
	return *o.RoomDescription
}

// GetRoomDescriptionOk returns a tuple with the RoomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RoomDescription) {
		return nil, false
	}
	return o.RoomDescription, true
}

// HasRoomDescription returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomDescription() bool {
	if o != nil && !IsNil(o.RoomDescription) {
		return true
	}

	return false
}

// SetRoomDescription gets a reference to the given string and assigns it to the RoomDescription field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomDescription(v string) {
	o.RoomDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *HousekeepingTaskTypeRoomsInner) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

// GetSmokingPreference returns the SmokingPreference field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetSmokingPreference() string {
	if o == nil || IsNil(o.SmokingPreference) {
		var ret string
		return ret
	}
	return *o.SmokingPreference
}

// GetSmokingPreferenceOk returns a tuple with the SmokingPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetSmokingPreferenceOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreference) {
		return nil, false
	}
	return o.SmokingPreference, true
}

// HasSmokingPreference returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasSmokingPreference() bool {
	if o != nil && !IsNil(o.SmokingPreference) {
		return true
	}

	return false
}

// SetSmokingPreference gets a reference to the given string and assigns it to the SmokingPreference field.
func (o *HousekeepingTaskTypeRoomsInner) SetSmokingPreference(v string) {
	o.SmokingPreference = &v
}

// GetSmokingPreferenceDescription returns the SmokingPreferenceDescription field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetSmokingPreferenceDescription() string {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		var ret string
		return ret
	}
	return *o.SmokingPreferenceDescription
}

// GetSmokingPreferenceDescriptionOk returns a tuple with the SmokingPreferenceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetSmokingPreferenceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		return nil, false
	}
	return o.SmokingPreferenceDescription, true
}

// HasSmokingPreferenceDescription returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasSmokingPreferenceDescription() bool {
	if o != nil && !IsNil(o.SmokingPreferenceDescription) {
		return true
	}

	return false
}

// SetSmokingPreferenceDescription gets a reference to the given string and assigns it to the SmokingPreferenceDescription field.
func (o *HousekeepingTaskTypeRoomsInner) SetSmokingPreferenceDescription(v string) {
	o.SmokingPreferenceDescription = &v
}

// GetBuilding returns the Building field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetBuilding() string {
	if o == nil || IsNil(o.Building) {
		var ret string
		return ret
	}
	return *o.Building
}

// GetBuildingOk returns a tuple with the Building field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetBuildingOk() (*string, bool) {
	if o == nil || IsNil(o.Building) {
		return nil, false
	}
	return o.Building, true
}

// HasBuilding returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasBuilding() bool {
	if o != nil && !IsNil(o.Building) {
		return true
	}

	return false
}

// SetBuilding gets a reference to the given string and assigns it to the Building field.
func (o *HousekeepingTaskTypeRoomsInner) SetBuilding(v string) {
	o.Building = &v
}

// GetRoomAssignmentRating returns the RoomAssignmentRating field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomAssignmentRating() RatePlanRatingType {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		var ret RatePlanRatingType
		return ret
	}
	return *o.RoomAssignmentRating
}

// GetRoomAssignmentRatingOk returns a tuple with the RoomAssignmentRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomAssignmentRatingOk() (*RatePlanRatingType, bool) {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		return nil, false
	}
	return o.RoomAssignmentRating, true
}

// HasRoomAssignmentRating returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomAssignmentRating() bool {
	if o != nil && !IsNil(o.RoomAssignmentRating) {
		return true
	}

	return false
}

// SetRoomAssignmentRating gets a reference to the given RatePlanRatingType and assigns it to the RoomAssignmentRating field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomAssignmentRating(v RatePlanRatingType) {
	o.RoomAssignmentRating = &v
}

// GetIsAccessible returns the IsAccessible field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetIsAccessible() bool {
	if o == nil || IsNil(o.IsAccessible) {
		var ret bool
		return ret
	}
	return *o.IsAccessible
}

// GetIsAccessibleOk returns a tuple with the IsAccessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetIsAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAccessible) {
		return nil, false
	}
	return o.IsAccessible, true
}

// HasIsAccessible returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasIsAccessible() bool {
	if o != nil && !IsNil(o.IsAccessible) {
		return true
	}

	return false
}

// SetIsAccessible gets a reference to the given bool and assigns it to the IsAccessible field.
func (o *HousekeepingTaskTypeRoomsInner) SetIsAccessible(v bool) {
	o.IsAccessible = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomId(v string) {
	o.RoomId = &v
}

// GetMeetingRoom returns the MeetingRoom field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetMeetingRoom() bool {
	if o == nil || IsNil(o.MeetingRoom) {
		var ret bool
		return ret
	}
	return *o.MeetingRoom
}

// GetMeetingRoomOk returns a tuple with the MeetingRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetMeetingRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.MeetingRoom) {
		return nil, false
	}
	return o.MeetingRoom, true
}

// HasMeetingRoom returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasMeetingRoom() bool {
	if o != nil && !IsNil(o.MeetingRoom) {
		return true
	}

	return false
}

// SetMeetingRoom gets a reference to the given bool and assigns it to the MeetingRoom field.
func (o *HousekeepingTaskTypeRoomsInner) SetMeetingRoom(v bool) {
	o.MeetingRoom = &v
}

// GetRoomSection returns the RoomSection field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomSection() RoomSectionType {
	if o == nil || IsNil(o.RoomSection) {
		var ret RoomSectionType
		return ret
	}
	return *o.RoomSection
}

// GetRoomSectionOk returns a tuple with the RoomSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetRoomSectionOk() (*RoomSectionType, bool) {
	if o == nil || IsNil(o.RoomSection) {
		return nil, false
	}
	return o.RoomSection, true
}

// HasRoomSection returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasRoomSection() bool {
	if o != nil && !IsNil(o.RoomSection) {
		return true
	}

	return false
}

// SetRoomSection gets a reference to the given RoomSectionType and assigns it to the RoomSection field.
func (o *HousekeepingTaskTypeRoomsInner) SetRoomSection(v RoomSectionType) {
	o.RoomSection = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetHousekeeping() HousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret HousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetHousekeepingOk() (*HousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given HousekeepingType and assigns it to the Housekeeping field.
func (o *HousekeepingTaskTypeRoomsInner) SetHousekeeping(v HousekeepingType) {
	o.Housekeeping = &v
}

// GetOutOfOrder returns the OutOfOrder field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetOutOfOrder() []RoomOutOfOrderType {
	if o == nil || IsNil(o.OutOfOrder) {
		var ret []RoomOutOfOrderType
		return ret
	}
	return o.OutOfOrder
}

// GetOutOfOrderOk returns a tuple with the OutOfOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetOutOfOrderOk() ([]RoomOutOfOrderType, bool) {
	if o == nil || IsNil(o.OutOfOrder) {
		return nil, false
	}
	return o.OutOfOrder, true
}

// HasOutOfOrder returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasOutOfOrder() bool {
	if o != nil && !IsNil(o.OutOfOrder) {
		return true
	}

	return false
}

// SetOutOfOrder gets a reference to the given []RoomOutOfOrderType and assigns it to the OutOfOrder field.
func (o *HousekeepingTaskTypeRoomsInner) SetOutOfOrder(v []RoomOutOfOrderType) {
	o.OutOfOrder = v
}

// GetDiscrepancy returns the Discrepancy field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetDiscrepancy() []RoomDiscrepancyType {
	if o == nil || IsNil(o.Discrepancy) {
		var ret []RoomDiscrepancyType
		return ret
	}
	return o.Discrepancy
}

// GetDiscrepancyOk returns a tuple with the Discrepancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetDiscrepancyOk() ([]RoomDiscrepancyType, bool) {
	if o == nil || IsNil(o.Discrepancy) {
		return nil, false
	}
	return o.Discrepancy, true
}

// HasDiscrepancy returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasDiscrepancy() bool {
	if o != nil && !IsNil(o.Discrepancy) {
		return true
	}

	return false
}

// SetDiscrepancy gets a reference to the given []RoomDiscrepancyType and assigns it to the Discrepancy field.
func (o *HousekeepingTaskTypeRoomsInner) SetDiscrepancy(v []RoomDiscrepancyType) {
	o.Discrepancy = v
}

// GetSitePlanSection returns the SitePlanSection field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetSitePlanSection() SitePlanSectionType {
	if o == nil || IsNil(o.SitePlanSection) {
		var ret SitePlanSectionType
		return ret
	}
	return *o.SitePlanSection
}

// GetSitePlanSectionOk returns a tuple with the SitePlanSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetSitePlanSectionOk() (*SitePlanSectionType, bool) {
	if o == nil || IsNil(o.SitePlanSection) {
		return nil, false
	}
	return o.SitePlanSection, true
}

// HasSitePlanSection returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasSitePlanSection() bool {
	if o != nil && !IsNil(o.SitePlanSection) {
		return true
	}

	return false
}

// SetSitePlanSection gets a reference to the given SitePlanSectionType and assigns it to the SitePlanSection field.
func (o *HousekeepingTaskTypeRoomsInner) SetSitePlanSection(v SitePlanSectionType) {
	o.SitePlanSection = &v
}

// GetComponentRoomNumber returns the ComponentRoomNumber field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRoomNumber() string {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		var ret string
		return ret
	}
	return *o.ComponentRoomNumber
}

// GetComponentRoomNumberOk returns a tuple with the ComponentRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		return nil, false
	}
	return o.ComponentRoomNumber, true
}

// HasComponentRoomNumber returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasComponentRoomNumber() bool {
	if o != nil && !IsNil(o.ComponentRoomNumber) {
		return true
	}

	return false
}

// SetComponentRoomNumber gets a reference to the given string and assigns it to the ComponentRoomNumber field.
func (o *HousekeepingTaskTypeRoomsInner) SetComponentRoomNumber(v string) {
	o.ComponentRoomNumber = &v
}

// GetConnectingRooms returns the ConnectingRooms field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetConnectingRooms() []RoomRoomType {
	if o == nil || IsNil(o.ConnectingRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ConnectingRooms
}

// GetConnectingRoomsOk returns a tuple with the ConnectingRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetConnectingRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ConnectingRooms) {
		return nil, false
	}
	return o.ConnectingRooms, true
}

// HasConnectingRooms returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasConnectingRooms() bool {
	if o != nil && !IsNil(o.ConnectingRooms) {
		return true
	}

	return false
}

// SetConnectingRooms gets a reference to the given []RoomRoomType and assigns it to the ConnectingRooms field.
func (o *HousekeepingTaskTypeRoomsInner) SetConnectingRooms(v []RoomRoomType) {
	o.ConnectingRooms = v
}

// GetComponentRooms returns the ComponentRooms field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRooms() []RoomRoomType {
	if o == nil || IsNil(o.ComponentRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ComponentRooms
}

// GetComponentRoomsOk returns a tuple with the ComponentRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ComponentRooms) {
		return nil, false
	}
	return o.ComponentRooms, true
}

// HasComponentRooms returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasComponentRooms() bool {
	if o != nil && !IsNil(o.ComponentRooms) {
		return true
	}

	return false
}

// SetComponentRooms gets a reference to the given []RoomRoomType and assigns it to the ComponentRooms field.
func (o *HousekeepingTaskTypeRoomsInner) SetComponentRooms(v []RoomRoomType) {
	o.ComponentRooms = v
}

// GetAttendant returns the Attendant field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetAttendant() []CurrentServicingAttendantType {
	if o == nil || IsNil(o.Attendant) {
		var ret []CurrentServicingAttendantType
		return ret
	}
	return o.Attendant
}

// GetAttendantOk returns a tuple with the Attendant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetAttendantOk() ([]CurrentServicingAttendantType, bool) {
	if o == nil || IsNil(o.Attendant) {
		return nil, false
	}
	return o.Attendant, true
}

// HasAttendant returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasAttendant() bool {
	if o != nil && !IsNil(o.Attendant) {
		return true
	}

	return false
}

// SetAttendant gets a reference to the given []CurrentServicingAttendantType and assigns it to the Attendant field.
func (o *HousekeepingTaskTypeRoomsInner) SetAttendant(v []CurrentServicingAttendantType) {
	o.Attendant = v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetHold() RoomHoldType {
	if o == nil || IsNil(o.Hold) {
		var ret RoomHoldType
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetHoldOk() (*RoomHoldType, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given RoomHoldType and assigns it to the Hold field.
func (o *HousekeepingTaskTypeRoomsInner) SetHold(v RoomHoldType) {
	o.Hold = &v
}

// GetTurndownInfo returns the TurndownInfo field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetTurndownInfo() TurndownInfoType {
	if o == nil || IsNil(o.TurndownInfo) {
		var ret TurndownInfoType
		return ret
	}
	return *o.TurndownInfo
}

// GetTurndownInfoOk returns a tuple with the TurndownInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetTurndownInfoOk() (*TurndownInfoType, bool) {
	if o == nil || IsNil(o.TurndownInfo) {
		return nil, false
	}
	return o.TurndownInfo, true
}

// HasTurndownInfo returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasTurndownInfo() bool {
	if o != nil && !IsNil(o.TurndownInfo) {
		return true
	}

	return false
}

// SetTurndownInfo gets a reference to the given TurndownInfoType and assigns it to the TurndownInfo field.
func (o *HousekeepingTaskTypeRoomsInner) SetTurndownInfo(v TurndownInfoType) {
	o.TurndownInfo = &v
}

// GetResvInfo returns the ResvInfo field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetResvInfo() []ReservationShortInfoType {
	if o == nil || IsNil(o.ResvInfo) {
		var ret []ReservationShortInfoType
		return ret
	}
	return o.ResvInfo
}

// GetResvInfoOk returns a tuple with the ResvInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetResvInfoOk() ([]ReservationShortInfoType, bool) {
	if o == nil || IsNil(o.ResvInfo) {
		return nil, false
	}
	return o.ResvInfo, true
}

// HasResvInfo returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasResvInfo() bool {
	if o != nil && !IsNil(o.ResvInfo) {
		return true
	}

	return false
}

// SetResvInfo gets a reference to the given []ReservationShortInfoType and assigns it to the ResvInfo field.
func (o *HousekeepingTaskTypeRoomsInner) SetResvInfo(v []ReservationShortInfoType) {
	o.ResvInfo = v
}

// GetScheduledRoomMoveResvInfo returns the ScheduledRoomMoveResvInfo field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetScheduledRoomMoveResvInfo() []ReservationShortInfoType {
	if o == nil || IsNil(o.ScheduledRoomMoveResvInfo) {
		var ret []ReservationShortInfoType
		return ret
	}
	return o.ScheduledRoomMoveResvInfo
}

// GetScheduledRoomMoveResvInfoOk returns a tuple with the ScheduledRoomMoveResvInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetScheduledRoomMoveResvInfoOk() ([]ReservationShortInfoType, bool) {
	if o == nil || IsNil(o.ScheduledRoomMoveResvInfo) {
		return nil, false
	}
	return o.ScheduledRoomMoveResvInfo, true
}

// HasScheduledRoomMoveResvInfo returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasScheduledRoomMoveResvInfo() bool {
	if o != nil && !IsNil(o.ScheduledRoomMoveResvInfo) {
		return true
	}

	return false
}

// SetScheduledRoomMoveResvInfo gets a reference to the given []ReservationShortInfoType and assigns it to the ScheduledRoomMoveResvInfo field.
func (o *HousekeepingTaskTypeRoomsInner) SetScheduledRoomMoveResvInfo(v []ReservationShortInfoType) {
	o.ScheduledRoomMoveResvInfo = v
}

// GetComponentRoomNumbers returns the ComponentRoomNumbers field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRoomNumbers() []string {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		var ret []string
		return ret
	}
	return o.ComponentRoomNumbers
}

// GetComponentRoomNumbersOk returns a tuple with the ComponentRoomNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetComponentRoomNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		return nil, false
	}
	return o.ComponentRoomNumbers, true
}

// HasComponentRoomNumbers returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasComponentRoomNumbers() bool {
	if o != nil && !IsNil(o.ComponentRoomNumbers) {
		return true
	}

	return false
}

// SetComponentRoomNumbers gets a reference to the given []string and assigns it to the ComponentRoomNumbers field.
func (o *HousekeepingTaskTypeRoomsInner) SetComponentRoomNumbers(v []string) {
	o.ComponentRoomNumbers = v
}

// GetReservationInfo returns the ReservationInfo field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetReservationInfo() []ReservationInfoType {
	if o == nil || IsNil(o.ReservationInfo) {
		var ret []ReservationInfoType
		return ret
	}
	return o.ReservationInfo
}

// GetReservationInfoOk returns a tuple with the ReservationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetReservationInfoOk() ([]ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfo) {
		return nil, false
	}
	return o.ReservationInfo, true
}

// HasReservationInfo returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasReservationInfo() bool {
	if o != nil && !IsNil(o.ReservationInfo) {
		return true
	}

	return false
}

// SetReservationInfo gets a reference to the given []ReservationInfoType and assigns it to the ReservationInfo field.
func (o *HousekeepingTaskTypeRoomsInner) SetReservationInfo(v []ReservationInfoType) {
	o.ReservationInfo = v
}

// GetServicingInfo returns the ServicingInfo field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetServicingInfo() []CurrentServicingAttendantType {
	if o == nil || IsNil(o.ServicingInfo) {
		var ret []CurrentServicingAttendantType
		return ret
	}
	return o.ServicingInfo
}

// GetServicingInfoOk returns a tuple with the ServicingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetServicingInfoOk() ([]CurrentServicingAttendantType, bool) {
	if o == nil || IsNil(o.ServicingInfo) {
		return nil, false
	}
	return o.ServicingInfo, true
}

// HasServicingInfo returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasServicingInfo() bool {
	if o != nil && !IsNil(o.ServicingInfo) {
		return true
	}

	return false
}

// SetServicingInfo gets a reference to the given []CurrentServicingAttendantType and assigns it to the ServicingInfo field.
func (o *HousekeepingTaskTypeRoomsInner) SetServicingInfo(v []CurrentServicingAttendantType) {
	o.ServicingInfo = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *HousekeepingTaskTypeRoomsInner) SetInstructions(v string) {
	o.Instructions = &v
}

// GetTotalCredits returns the TotalCredits field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetTotalCredits() int32 {
	if o == nil || IsNil(o.TotalCredits) {
		var ret int32
		return ret
	}
	return *o.TotalCredits
}

// GetTotalCreditsOk returns a tuple with the TotalCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetTotalCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCredits) {
		return nil, false
	}
	return o.TotalCredits, true
}

// HasTotalCredits returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasTotalCredits() bool {
	if o != nil && !IsNil(o.TotalCredits) {
		return true
	}

	return false
}

// SetTotalCredits gets a reference to the given int32 and assigns it to the TotalCredits field.
func (o *HousekeepingTaskTypeRoomsInner) SetTotalCredits(v int32) {
	o.TotalCredits = &v
}

// GetWakeUpTime returns the WakeUpTime field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetWakeUpTime() string {
	if o == nil || IsNil(o.WakeUpTime) {
		var ret string
		return ret
	}
	return *o.WakeUpTime
}

// GetWakeUpTimeOk returns a tuple with the WakeUpTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetWakeUpTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WakeUpTime) {
		return nil, false
	}
	return o.WakeUpTime, true
}

// HasWakeUpTime returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasWakeUpTime() bool {
	if o != nil && !IsNil(o.WakeUpTime) {
		return true
	}

	return false
}

// SetWakeUpTime gets a reference to the given string and assigns it to the WakeUpTime field.
func (o *HousekeepingTaskTypeRoomsInner) SetWakeUpTime(v string) {
	o.WakeUpTime = &v
}

// GetCleaningSequence returns the CleaningSequence field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetCleaningSequence() int32 {
	if o == nil || IsNil(o.CleaningSequence) {
		var ret int32
		return ret
	}
	return *o.CleaningSequence
}

// GetCleaningSequenceOk returns a tuple with the CleaningSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetCleaningSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.CleaningSequence) {
		return nil, false
	}
	return o.CleaningSequence, true
}

// HasCleaningSequence returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasCleaningSequence() bool {
	if o != nil && !IsNil(o.CleaningSequence) {
		return true
	}

	return false
}

// SetCleaningSequence gets a reference to the given int32 and assigns it to the CleaningSequence field.
func (o *HousekeepingTaskTypeRoomsInner) SetCleaningSequence(v int32) {
	o.CleaningSequence = &v
}

// GetDefaultSequence returns the DefaultSequence field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetDefaultSequence() int32 {
	if o == nil || IsNil(o.DefaultSequence) {
		var ret int32
		return ret
	}
	return *o.DefaultSequence
}

// GetDefaultSequenceOk returns a tuple with the DefaultSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetDefaultSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultSequence) {
		return nil, false
	}
	return o.DefaultSequence, true
}

// HasDefaultSequence returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasDefaultSequence() bool {
	if o != nil && !IsNil(o.DefaultSequence) {
		return true
	}

	return false
}

// SetDefaultSequence gets a reference to the given int32 and assigns it to the DefaultSequence field.
func (o *HousekeepingTaskTypeRoomsInner) SetDefaultSequence(v int32) {
	o.DefaultSequence = &v
}

// GetHasPriority returns the HasPriority field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetHasPriority() bool {
	if o == nil || IsNil(o.HasPriority) {
		var ret bool
		return ret
	}
	return *o.HasPriority
}

// GetHasPriorityOk returns a tuple with the HasPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetHasPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPriority) {
		return nil, false
	}
	return o.HasPriority, true
}

// HasHasPriority returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasHasPriority() bool {
	if o != nil && !IsNil(o.HasPriority) {
		return true
	}

	return false
}

// SetHasPriority gets a reference to the given bool and assigns it to the HasPriority field.
func (o *HousekeepingTaskTypeRoomsInner) SetHasPriority(v bool) {
	o.HasPriority = &v
}

// GetMaintenanceAllowed returns the MaintenanceAllowed field value if set, zero value otherwise.
func (o *HousekeepingTaskTypeRoomsInner) GetMaintenanceAllowed() bool {
	if o == nil || IsNil(o.MaintenanceAllowed) {
		var ret bool
		return ret
	}
	return *o.MaintenanceAllowed
}

// GetMaintenanceAllowedOk returns a tuple with the MaintenanceAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HousekeepingTaskTypeRoomsInner) GetMaintenanceAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.MaintenanceAllowed) {
		return nil, false
	}
	return o.MaintenanceAllowed, true
}

// HasMaintenanceAllowed returns a boolean if a field has been set.
func (o *HousekeepingTaskTypeRoomsInner) HasMaintenanceAllowed() bool {
	if o != nil && !IsNil(o.MaintenanceAllowed) {
		return true
	}

	return false
}

// SetMaintenanceAllowed gets a reference to the given bool and assigns it to the MaintenanceAllowed field.
func (o *HousekeepingTaskTypeRoomsInner) SetMaintenanceAllowed(v bool) {
	o.MaintenanceAllowed = &v
}

func (o HousekeepingTaskTypeRoomsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HousekeepingTaskTypeRoomsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.Floor) {
		toSerialize["floor"] = o.Floor
	}
	if !IsNil(o.FloorDescription) {
		toSerialize["floorDescription"] = o.FloorDescription
	}
	if !IsNil(o.RoomFeatures) {
		toSerialize["roomFeatures"] = o.RoomFeatures
	}
	if !IsNil(o.RoomDescription) {
		toSerialize["roomDescription"] = o.RoomDescription
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SmokingPreference) {
		toSerialize["smokingPreference"] = o.SmokingPreference
	}
	if !IsNil(o.SmokingPreferenceDescription) {
		toSerialize["smokingPreferenceDescription"] = o.SmokingPreferenceDescription
	}
	if !IsNil(o.Building) {
		toSerialize["building"] = o.Building
	}
	if !IsNil(o.RoomAssignmentRating) {
		toSerialize["roomAssignmentRating"] = o.RoomAssignmentRating
	}
	if !IsNil(o.IsAccessible) {
		toSerialize["isAccessible"] = o.IsAccessible
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.MeetingRoom) {
		toSerialize["meetingRoom"] = o.MeetingRoom
	}
	if !IsNil(o.RoomSection) {
		toSerialize["roomSection"] = o.RoomSection
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.OutOfOrder) {
		toSerialize["outOfOrder"] = o.OutOfOrder
	}
	if !IsNil(o.Discrepancy) {
		toSerialize["discrepancy"] = o.Discrepancy
	}
	if !IsNil(o.SitePlanSection) {
		toSerialize["sitePlanSection"] = o.SitePlanSection
	}
	if !IsNil(o.ComponentRoomNumber) {
		toSerialize["componentRoomNumber"] = o.ComponentRoomNumber
	}
	if !IsNil(o.ConnectingRooms) {
		toSerialize["connectingRooms"] = o.ConnectingRooms
	}
	if !IsNil(o.ComponentRooms) {
		toSerialize["componentRooms"] = o.ComponentRooms
	}
	if !IsNil(o.Attendant) {
		toSerialize["attendant"] = o.Attendant
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.TurndownInfo) {
		toSerialize["turndownInfo"] = o.TurndownInfo
	}
	if !IsNil(o.ResvInfo) {
		toSerialize["resvInfo"] = o.ResvInfo
	}
	if !IsNil(o.ScheduledRoomMoveResvInfo) {
		toSerialize["scheduledRoomMoveResvInfo"] = o.ScheduledRoomMoveResvInfo
	}
	if !IsNil(o.ComponentRoomNumbers) {
		toSerialize["componentRoomNumbers"] = o.ComponentRoomNumbers
	}
	if !IsNil(o.ReservationInfo) {
		toSerialize["reservationInfo"] = o.ReservationInfo
	}
	if !IsNil(o.ServicingInfo) {
		toSerialize["servicingInfo"] = o.ServicingInfo
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.TotalCredits) {
		toSerialize["totalCredits"] = o.TotalCredits
	}
	if !IsNil(o.WakeUpTime) {
		toSerialize["wakeUpTime"] = o.WakeUpTime
	}
	if !IsNil(o.CleaningSequence) {
		toSerialize["cleaningSequence"] = o.CleaningSequence
	}
	if !IsNil(o.DefaultSequence) {
		toSerialize["defaultSequence"] = o.DefaultSequence
	}
	if !IsNil(o.HasPriority) {
		toSerialize["hasPriority"] = o.HasPriority
	}
	if !IsNil(o.MaintenanceAllowed) {
		toSerialize["maintenanceAllowed"] = o.MaintenanceAllowed
	}
	return toSerialize, nil
}

type NullableHousekeepingTaskTypeRoomsInner struct {
	value *HousekeepingTaskTypeRoomsInner
	isSet bool
}

func (v NullableHousekeepingTaskTypeRoomsInner) Get() *HousekeepingTaskTypeRoomsInner {
	return v.value
}

func (v *NullableHousekeepingTaskTypeRoomsInner) Set(val *HousekeepingTaskTypeRoomsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHousekeepingTaskTypeRoomsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHousekeepingTaskTypeRoomsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHousekeepingTaskTypeRoomsInner(val *HousekeepingTaskTypeRoomsInner) *NullableHousekeepingTaskTypeRoomsInner {
	return &NullableHousekeepingTaskTypeRoomsInner{value: val, isSet: true}
}

func (v NullableHousekeepingTaskTypeRoomsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHousekeepingTaskTypeRoomsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


