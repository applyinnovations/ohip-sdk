/*
OPERA Cloud Housekeeping Service API

APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hsk

import (
	"encoding/json"
)

// checks if the RoomMaintenanceRequestType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomMaintenanceRequestType{}

// RoomMaintenanceRequestType Base maintenance type
type RoomMaintenanceRequestType struct {
	AssignedUserInfo *AssignedUserType `json:"assignedUserInfo,omitempty"`
	// Hotel code
	HotelId *string `json:"hotelId,omitempty"`
	// Maintenance Code
	MaintenanceCode *string `json:"maintenanceCode,omitempty"`
	// Maintenance remarks
	Remarks *string `json:"remarks,omitempty"`
	// Collection of room numbers to be process.
	RoomIds []string `json:"roomIds,omitempty"`
}

// NewRoomMaintenanceRequestType instantiates a new RoomMaintenanceRequestType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomMaintenanceRequestType() *RoomMaintenanceRequestType {
	this := RoomMaintenanceRequestType{}
	return &this
}

// NewRoomMaintenanceRequestTypeWithDefaults instantiates a new RoomMaintenanceRequestType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomMaintenanceRequestTypeWithDefaults() *RoomMaintenanceRequestType {
	this := RoomMaintenanceRequestType{}
	return &this
}

// GetAssignedUserInfo returns the AssignedUserInfo field value if set, zero value otherwise.
func (o *RoomMaintenanceRequestType) GetAssignedUserInfo() AssignedUserType {
	if o == nil || IsNil(o.AssignedUserInfo) {
		var ret AssignedUserType
		return ret
	}
	return *o.AssignedUserInfo
}

// GetAssignedUserInfoOk returns a tuple with the AssignedUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMaintenanceRequestType) GetAssignedUserInfoOk() (*AssignedUserType, bool) {
	if o == nil || IsNil(o.AssignedUserInfo) {
		return nil, false
	}
	return o.AssignedUserInfo, true
}

// HasAssignedUserInfo returns a boolean if a field has been set.
func (o *RoomMaintenanceRequestType) HasAssignedUserInfo() bool {
	if o != nil && !IsNil(o.AssignedUserInfo) {
		return true
	}

	return false
}

// SetAssignedUserInfo gets a reference to the given AssignedUserType and assigns it to the AssignedUserInfo field.
func (o *RoomMaintenanceRequestType) SetAssignedUserInfo(v AssignedUserType) {
	o.AssignedUserInfo = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RoomMaintenanceRequestType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMaintenanceRequestType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RoomMaintenanceRequestType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RoomMaintenanceRequestType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetMaintenanceCode returns the MaintenanceCode field value if set, zero value otherwise.
func (o *RoomMaintenanceRequestType) GetMaintenanceCode() string {
	if o == nil || IsNil(o.MaintenanceCode) {
		var ret string
		return ret
	}
	return *o.MaintenanceCode
}

// GetMaintenanceCodeOk returns a tuple with the MaintenanceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMaintenanceRequestType) GetMaintenanceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceCode) {
		return nil, false
	}
	return o.MaintenanceCode, true
}

// HasMaintenanceCode returns a boolean if a field has been set.
func (o *RoomMaintenanceRequestType) HasMaintenanceCode() bool {
	if o != nil && !IsNil(o.MaintenanceCode) {
		return true
	}

	return false
}

// SetMaintenanceCode gets a reference to the given string and assigns it to the MaintenanceCode field.
func (o *RoomMaintenanceRequestType) SetMaintenanceCode(v string) {
	o.MaintenanceCode = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *RoomMaintenanceRequestType) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMaintenanceRequestType) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *RoomMaintenanceRequestType) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *RoomMaintenanceRequestType) SetRemarks(v string) {
	o.Remarks = &v
}

// GetRoomIds returns the RoomIds field value if set, zero value otherwise.
func (o *RoomMaintenanceRequestType) GetRoomIds() []string {
	if o == nil || IsNil(o.RoomIds) {
		var ret []string
		return ret
	}
	return o.RoomIds
}

// GetRoomIdsOk returns a tuple with the RoomIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMaintenanceRequestType) GetRoomIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoomIds) {
		return nil, false
	}
	return o.RoomIds, true
}

// HasRoomIds returns a boolean if a field has been set.
func (o *RoomMaintenanceRequestType) HasRoomIds() bool {
	if o != nil && !IsNil(o.RoomIds) {
		return true
	}

	return false
}

// SetRoomIds gets a reference to the given []string and assigns it to the RoomIds field.
func (o *RoomMaintenanceRequestType) SetRoomIds(v []string) {
	o.RoomIds = v
}

func (o RoomMaintenanceRequestType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomMaintenanceRequestType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedUserInfo) {
		toSerialize["assignedUserInfo"] = o.AssignedUserInfo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.MaintenanceCode) {
		toSerialize["maintenanceCode"] = o.MaintenanceCode
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.RoomIds) {
		toSerialize["roomIds"] = o.RoomIds
	}
	return toSerialize, nil
}

type NullableRoomMaintenanceRequestType struct {
	value *RoomMaintenanceRequestType
	isSet bool
}

func (v NullableRoomMaintenanceRequestType) Get() *RoomMaintenanceRequestType {
	return v.value
}

func (v *NullableRoomMaintenanceRequestType) Set(val *RoomMaintenanceRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomMaintenanceRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomMaintenanceRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomMaintenanceRequestType(val *RoomMaintenanceRequestType) *NullableRoomMaintenanceRequestType {
	return &NullableRoomMaintenanceRequestType{value: val, isSet: true}
}

func (v NullableRoomMaintenanceRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomMaintenanceRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


