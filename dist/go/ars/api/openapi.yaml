openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Accounts Receivables functionality in OPERA Cloud.\
    \ <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors'\
    \ accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud\
    \ release 24.4.<br /><br /><p> This document and all content within is available\
    \ under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl).\
    \ Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Accounts Receivables API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /ars/v1
tags:
- description: "The REST API's will allow you to create, manage, or delete accounts,\
    \ add comments, traces, reminders, create or close invoices for example."
  name: AccountsReceivables
paths:
  /accountReminders:
    get:
      description: "Use this API to get AR account holders' reminder letter that includes\
        \ detail of payment due, their current account balance, or for other purposes.\
        \ <p><strong>OperationId:</strong>getReminders</p>"
      operationId: getReminders
      parameters:
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: accounts
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profiles
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account Number for the AR Account.
        explode: true
        in: query
        name: accountNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account Name for the AR Account.
        explode: true
        in: query
        name: accountName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reminders'
          description: Response to the request to fetch pending Reminders for Accounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Reminders not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable's reminder statements
      tags:
      - AccountsReceivables
    post:
      description: "Use this API to generate a reminder statement which includes payment\
        \ due,  current account balance, and etc. of account receivable account holder.\
        \ <p><strong>OperationId:</strong>postReminders</p>"
      operationId: postReminders
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reminders'
        description: "Request to update the reminder information on an Account. After\
          \ the letter has been generated and sent, the account and the invoices will\
          \ be updated with the Reminder Cycle information. This is done so that the\
          \ next cycle of Reminder Letters c can be generated correctly."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Generate reminders
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: reminders
  /accounts:
    get:
      description: Use this API to search for AR Accounts for a given OPERA Profile
        id. API returns contain a list of AR Accounts and their AR information. <p><strong>OperationId:</strong>getAccounts</p>
        <p>The maximum allowable limit for this API is <strong>20</strong>.</p>
      operationId: getAccounts
      parameters:
      - description: "Search By Balance. Search will be done for 'All', 'Open Balance'\
          \ or 'Zero Balance' Accounts."
        in: query
        name: balance
        schema:
          enum:
          - All
          - Open
          - Zero
          type: string
      - description: Search criteria for batch processing
        in: query
        name: batchStatement
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Property where the Accounts exist.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Search by Account Type.
        in: query
        name: type
        schema:
          type: string
      - description: Account Number .
        explode: true
        in: query
        name: accountNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wild Card Search by Account Name. Search will be done for any
          Accounts whose name starts with this value.
        in: query
        name: accountName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: accountId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: accountIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: accountType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Return statement history indicator in result. This flag included
          for performance reason to populate history flag only for Statements Mode.
        in: query
        name: includeStatementHistoryIndicator
        schema:
          type: boolean
      - description: Return reminder history indicator in result. This flag included
          for performance reason to populate history flag only for Statements Mode.
        in: query
        name: includeReminderHistoryIndicator
        schema:
          type: boolean
      - description: Free form text field for searching all reservation fields
        in: query
        name: superSearch
        schema:
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: searchHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: attributeName
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: orderType
        schema:
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Search AR Accounts with a minimum balance filter.
        in: query
        name: minimumBalance
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/accountsInfo'
          description: "Response for the request to search for AR Accounts. Based\
            \ on the criteria, the response can contain a list of AR Accounts and\
            \ their AR information."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Accounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's account receivable detail
      tags:
      - AccountsReceivables
  /accounts/{accountId}/remindersHistory:
    get:
      description: Use this API to get history of reminder letters prepared for AR
        account. <p><strong>OperationId:</strong>getRemindersHistory</p>
      operationId: getRemindersHistory
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: Account Number for the AR Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Account Name for the AR Account.
        in: query
        name: accountName
        schema:
          type: string
      - description: History Date filter.
        in: query
        name: dateSent
        schema:
          format: date
          type: string
      - description: Report Name wild card.
        in: query
        name: reportFileNameWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/remindersHistory'
          description: Reminders History.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RemindersHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get history of reminder letters for a given account receivable
      tags:
      - AccountsReceivables
  /accounts/{accountId}/statements:
    get:
      deprecated: true
      description: Use this API to prepare statement for an AR account holders. It
        is typically prepared for billing purposes.<br><p><strong><mark>This API is
        deprecated. Please use getARStatements instead</mark></strong></p> <p><strong>OperationId:</strong>getStatements</p>
      operationId: getStatements
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Account Number for the AR Account.
        explode: true
        in: query
        name: accountNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account Name for the AR Account.
        explode: true
        in: query
        name: accountName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if postings or adjustments can be made to the
          invoice.
        explode: true
        in: query
        name: canBeModified
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Close date of the invoice.
        explode: true
        in: query
        name: closeDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: The Fiscal Bill number of this posting
        explode: true
        in: query
        name: fiscalBillNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Date of Folio Generation.
        explode: true
        in: query
        name: folioDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Folio Number.
        explode: true
        in: query
        name: folioNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        explode: true
        in: query
        name: folioStatus
        schema:
          items:
            enum:
            - Deposit
            - Void
            - Ok
            - Zero
            - Compress
            - Converted
            - Internal
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The name of the Folio Type used for the Folio Number sequence.
        explode: true
        in: query
        name: folioTypeName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        explode: true
        in: query
        name: internalFolioWindowID
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        explode: true
        in: query
        name: invoiceNo
        schema:
          items:
            type: number
          type: array
        style: form
      - explode: true
        in: query
        name: invoiceType
        schema:
          items:
            enum:
            - Normal
            - Credit
            - OldBalance
            - PasserBy
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Posting date of the invoice.
        explode: true
        in: query
        name: postingDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Revenue date ID of the invoice.
        explode: true
        in: query
        name: revenueDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Statementno of the invoice.
        explode: true
        in: query
        name: statementNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Status of the invoice.
        explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transfer date of the invoice.
        explode: true
        in: query
        name: transferDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Transaction code of the invoice.
        explode: true
        in: query
        name: invoiceTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction Date of the invoice.
        explode: true
        in: query
        name: transactionDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Unique Transaction Identifier of the Invoice.
        explode: true
        in: query
        name: transactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: invoiceHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: guestProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: guestProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: guestProfileType
        schema:
          type: string
      - description: The Aging age of the invoice
        explode: true
        in: query
        name: age
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Name of the Guest who consumed these transactions.
        explode: true
        in: query
        name: guestName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: originalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: originalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: paymentsAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: paymentsCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: User-defined posting reference.
        explode: true
        in: query
        name: reference
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined posting remark.
        explode: true
        in: query
        name: remark
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: adjusted
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: parentInvoiceNo
        schema:
          items:
            type: number
          type: array
        style: form
      - explode: true
        in: query
        name: compressed
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: compressedDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transferredOut
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: transferredIn
        schema:
          items:
            type: boolean
          type: array
        style: form
      - in: query
        name: marketDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: marketHotelId
        schema:
          type: string
      - in: query
        name: marketCode
        schema:
          type: string
      - in: query
        name: marketGroup
        schema:
          type: string
      - in: query
        name: roomClassDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: roomClassHotelId
        schema:
          type: string
      - in: query
        name: roomClassCode
        schema:
          type: string
      - in: query
        name: sourceDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: sourceHotelId
        schema:
          type: string
      - in: query
        name: sourceCode
        schema:
          type: string
      - in: query
        name: sourceGroup
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - description: Cashier Name.
        in: query
        name: cashierName
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: transactionHotelId
        schema:
          type: string
      - description: Print receipt flag that tells whether the transaction receipt
          is to be printed or not. This is based on the transaction code.
        in: query
        name: printTrxReceipt
        schema:
          type: boolean
      - description: Unique identifier for the Transaction code.
        in: query
        name: accountInvoiceTransactionCode
        schema:
          type: string
      - description: Transaction codes info.
        in: query
        name: transactionDescription
        schema:
          type: string
      - description: Category of the transaction code.
        in: query
        name: transactionGroup
        schema:
          type: string
      - description: Sub category of the transaction code.
        in: query
        name: transactionSubGroup
        schema:
          type: string
      - description: Unique Universal product code of the transaction code.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        in: query
        name: routingInstructionsId
        schema:
          type: number
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: articleHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: articleDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: articleAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: articleCurrencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: articleUniversalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: invoicePaymentCardId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: invoicePaymentCardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: invoicePaymentCardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: Defines the type of Linked profiles for a block.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: addresseeProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: addresseeProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: addresseeProfileType
        schema:
          type: string
      - description: Name for the profile attached to the block.
        in: query
        name: name
        schema:
          type: string
      - description: City for the profile attached to the block.
        in: query
        name: city
        schema:
          type: string
      - description: Phone for the profile attached to the block.
        in: query
        name: phone
        schema:
          type: string
      - description: Flag to check Partail Transfer Allowed.
        explode: true
        in: query
        name: allowPartialTransferYn
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Flag to check Invoice Statement is Printed.
        explode: true
        in: query
        name: printed
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Invoice Statement Printed Date.
        explode: true
        in: query
        name: printedDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedFolioType
        schema:
          type: string
      - description: Name of the Stored Folio.
        explode: true
        in: query
        name: storedFolioName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedDebitFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedDebitFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedDebitFolioType
        schema:
          type: string
      - description: Name of the Stored Debit Folio.
        explode: true
        in: query
        name: storedDebitFolioName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The date specified in this field determines the balance forward\
          \ date and balance forward total that is printed on the statement. (A balance\
          \ forward shows the net amount for all invoices and payments (debits and\
          \ credits) prior to the balance forward date as a single total, rather than\
          \ itemizing them individually on the statement.)"
        in: query
        name: balanceForwardDate
        schema:
          format: date
          type: string
      - description: Flag to indicate if the associated Folios for the Invoices are
          to be included along with the the Statement.
        in: query
        name: inclFolios
        schema:
          default: false
          type: boolean
      - description: Flag to indicate if Previousely Printed Invoices are to be included
          in the Statement. This is based on the Functionality for AR PRINTED INVOICES.
        in: query
        name: inclPrinted
        schema:
          default: false
          type: boolean
      - description: Flag to indicate if Zero Balances Invoices are to be included
          in the Statement.
        in: query
        name: inclZero
        schema:
          default: false
          type: boolean
      - description: The ending value of the date range.
        in: query
        name: filterEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: filterStartDate
        schema:
          format: date
          type: string
      - description: Text which will be printed on the Invoice.
        in: query
        name: statementText
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/statements'
          description: Details of the Statement to generate.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Statements not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's account receivable statements
      tags:
      - AccountsReceivables
  /arTransactions:
    get:
      description: Use this API to get list of transaction data for a given account
        receivable account number and list of hotels <p><strong>OperationId:</strong>getARTransactions</p>
        <p>This API allows a time span of <strong>30</strong> days.</p>
      operationId: getARTransactions
      parameters:
      - description: Property where the Accounts exist.
        explode: true
        in: query
        name: hotelIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account number of this transaction.
        in: query
        name: accounts
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: A monetary amount.
        in: query
        name: fromAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: fromCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: toAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: toCurrencyCode
        schema:
          type: string
      - description: Display Name for the guest.
        in: query
        name: guestName
        schema:
          type: string
      - description: invoice Number .
        explode: true
        in: query
        name: invoices
        schema:
          items:
            type: number
          type: array
        style: form
      - description: folio Number .
        explode: true
        in: query
        name: folios
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fiscal bill number of this transaction.
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Account number of this transaction.
        in: query
        name: accountName
        schema:
          type: string
      - description: Addressee Name filter. Works with the Addressee Functionality.
        in: query
        name: addresseName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arTransactions'
          description: Response after fetching AR transaction details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARTransactions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get AR transactions.
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/accounts:
    post:
      description: "Use this API to create a new account receivable type account for\
        \ given OPERA profile id. Prior creating account, need to use getProfile to\
        \ find OPERA profile's id.  <p><strong>OperationId:</strong>postAccount</p>"
      operationId: postAccount
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountCriteria'
        description: Request to create a new AR Account
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an account receivable account
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountCriteria
  /hotels/{hotelId}/accounts/invoicesOnHold:
    get:
      description: Use this API to get list of account receivable invoices which are
        put on hold. <p><strong>OperationId:</strong>getInvoicesOnHold</p> <p>This
        API allows a time span of <strong>30</strong> days.</p>
      operationId: getInvoicesOnHold
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: Account Number for the AR Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Account Name for the AR Account.
        in: query
        name: accountName
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: Folio Number for the invoice.
        in: query
        name: folios
        schema:
          type: string
      - description: Invoice number for the invoice.
        in: query
        name: invoices
        schema:
          type: number
      - description: Fiscal Bill number for the invoice.
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Guest Name set for the invoice.
        in: query
        name: guestName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoicesOnHold'
          description: Response after fetching on-hold invoices.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InvoicesOnHold not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get list of hold invoices for account receivable
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/accounts/{accountId}:
    delete:
      description: Use this API to delete account detail for given unique account
        id. Use get accounts to find account id. <p><strong>OperationId:</strong>deleteAccount</p>
      operationId: deleteAccount
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete Account '
      tags:
      - AccountsReceivables
    get:
      description: Use this API to search for account receivable type account's  detail
        for given account id. <p><strong>OperationId:</strong>getAccount</p>
      operationId: getAccount
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Account Number for the Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Instructions to fetch AR Account details.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Account
            - Aging
            - FixedCharges
            - Invoices
            - Payments
            - Summary
            - Comments
            - Traces
            - Reminder
            - Statement
            - Indicators
            - YearView
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/account'
          description: Response for the request to fetch details for an AR Account.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Account not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account
      tags:
      - AccountsReceivables
    put:
      description: Use this API to update existing account using account id and further
        detail. Use get account to get account detail prior updating. <p><strong>OperationId:</strong>putAccount</p>
      operationId: putAccount
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/account'
        description: "Request to change and existing AR Account. The Account No, Credit\
          \ Limit, Address, Email, Telephone information, Permanent Flag, Primary\
          \ Account Flag, Contact Name are the details that can be changed on an existing\
          \ account."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update a account receivable account
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: account
  /hotels/{hotelId}/accounts/{accountId}/applyCreditToInvoices:
    post:
      description: Use this API to add credits to account receivable invoices. <p><strong>OperationId:</strong>postCreditToInvoices</p>
      operationId: postCreditToInvoices
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/creditToInvoices'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add credits to AR invoices
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: creditToInvoices
  /hotels/{hotelId}/accounts/{accountId}/arCreditCard/transfer:
    post:
      description: Use this API to transfer credit card payment transactions to Accounts
        Receivable. <p><strong>OperationId:</strong>transferARCreditCardPayments</p>
      operationId: transferARCreditCardPayments
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arCreditCardPaymentsToTransfer'
        description: Request to transfer AR Credit Card payments.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Move credit card payment to account receivable
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arCreditCardPaymentsToTransfer
  /hotels/{hotelId}/accounts/{accountId}/charges:
    post:
      description: Use this API to post charges to account receivable account. <p><strong>OperationId:</strong>postChargesToAR</p>
      operationId: postChargesToAR
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arChargesPostingCriteria'
        description: "Request to post charges to an existing invoice, when the functionality\
          \ is available. If the invoice should not be modified or if the folio should\
          \ not be modified,based on other functionalities, then the charges cannot\
          \ be posted to the invoice."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add charges to account receivable
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arChargesPostingCriteria
  /hotels/{hotelId}/accounts/{accountId}/comments:
    delete:
      description: Use this API to delete notes from a given account id. Use get account
        with an instruction to get note id. <p><strong>OperationId:</strong>deleteAccountComment</p>
      operationId: deleteAccountComment
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Property Value
        in: query
        name: value
        schema:
          type: string
      - description: "If specified comment belongs to the Hotel, otherwise it is a\
          \ global comment."
        in: query
        name: hotel
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Account Comment
      tags:
      - AccountsReceivables
    post:
      description: Use this API to add a note for a given account id. Use get accounts
        to find account id. <p><strong>OperationId:</strong>postAccountComment</p>
      operationId: postAccountComment
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountComment'
        description: Request to create a Comment for an Account.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Account Comment
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountComment
    put:
      description: Use this API to update existing account note. Use get account to
        find noteid <p><strong>OperationId:</strong>putAccountComment</p>
      operationId: putAccountComment
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountComment'
        description: Request to Change the Comment on an Account.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Account Comment
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountComment
  /hotels/{hotelId}/accounts/{accountId}/compressInvoices:
    put:
      description: Use this API to combine two or more invoices into one invoice <p><strong>OperationId:</strong>compressARInvoices</p>
      operationId: compressARInvoices
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arCompressInvoices'
        description: Request to compress two or more invoices for an Account
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/compressedARInvoices'
          description: Response for the request to compress two or more invoices.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Combines Account receivable invoices
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arCompressInvoices
  /hotels/{hotelId}/accounts/{accountId}/copyAccount:
    post:
      description: Use this API to create account receivable to multiple hotels by
        copying from source hotel. <p><strong>OperationId:</strong>copyARAccount</p>
      operationId: copyARAccount
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arAccountCopy'
        description: Request to copy AR Account
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Copy account receivable account '
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arAccountCopy
  /hotels/{hotelId}/accounts/{accountId}/fixedCharges:
    post:
      description: Use this API to create fixed charges for a given account id of
        account receivable. Use get accounts to find an account id. <p><strong>OperationId:</strong>postAccountFixedCharge</p>
      operationId: postAccountFixedCharge
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountFixedCharge'
        description: Request to create a Fixed Charge for an Account.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create fixed charges '
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountFixedCharge
  /hotels/{hotelId}/accounts/{accountId}/fixedCharges/{fixedChargeId}:
    delete:
      description: Use this API to delete fixed charges for a given account receivable
        id. Use getaccounts to find an account id. <p><strong>OperationId:</strong>deleteAccountFixedCharge</p>
      operationId: deleteAccountFixedCharge
      parameters:
      - description: ID of the fixed charge
        in: path
        name: fixedChargeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete fixed charges '
      tags:
      - AccountsReceivables
    put:
      description: Use this API to update existing fixed charges for a given account
        receivable. <p><strong>OperationId:</strong>putAccountFixedCharge</p>
      operationId: putAccountFixedCharge
      parameters:
      - description: ID of the fixed charge
        in: path
        name: fixedChargeId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountFixedCharge'
        description: Request to Change the Fixed Charge on an Account.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Update fixed charge detail '
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountFixedCharge
  /hotels/{hotelId}/accounts/{accountId}/folioPrinters:
    get:
      description: Use this API to find account receivable folio printers <p><strong>OperationId:</strong>getARFolioPrinters</p>
      operationId: getARFolioPrinters
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: balance
        schema:
          type: number
      - in: query
        name: overrideCreditHoldCheck
        schema:
          type: boolean
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: Account Number for the AR Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Account Name for the AR Account.
        in: query
        name: accountName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: guestProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: guestProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: guestProfileType
        schema:
          type: string
      - explode: true
        in: query
        name: folioWindowNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        explode: true
        in: query
        name: chargeCashierId
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Transaction Code to post.
        explode: true
        in: query
        name: chargeTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Article ID.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Quantity to post to the folio.
        explode: true
        in: query
        name: postingQuantity
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: User-defined posting reference.
        explode: true
        in: query
        name: postingReference
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined posting remark.
        explode: true
        in: query
        name: postingRemark
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates the Cheque number.
        explode: true
        in: query
        name: checkNumber
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Corrected arrangement code from the package associated to this
          transaction.
        explode: true
        in: query
        name: arrangementCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Apply room routing when making this posting.
        explode: true
        in: query
        name: applyRoutingInstructions
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Use the applicable package allowance when making this posting.
        explode: true
        in: query
        name: usePackageAllowance
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: True indicates the Transaction Code is allowed to be posted automatically.
        explode: true
        in: query
        name: autoPosting
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: financialTransactionId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: financialTransactionIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: financialTransactionType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined invoice reference.
        in: query
        name: reference
        schema:
          type: string
      - description: User-defined invoice remark.
        in: query
        name: remark
        schema:
          type: string
      - description: Folio Type to be assigned to generated folio. This is a country
          requirement.
        in: query
        name: folioType
        schema:
          type: string
      - description: Fiscal folio flag to call fiscal folio web service after folio
          generation.
        in: query
        name: generateFiscalFolio
        schema:
          type: boolean
      - description: Folio Queue name.
        in: query
        name: queueName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arFolioPrinters'
          description: "Response to the request to fetch the Folio Printers applicable\
            \ for a Folio, based on the"
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARFolioPrinters not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get list of account receivable folio printers
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/accounts/{accountId}/invoices:
    post:
      description: Use this API to create a new invoice for an AR account. <p><strong>OperationId:</strong>postInvoice</p>
      operationId: postInvoice
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arInvoice'
        description: Request to create a new Invoice for an Account.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arInvoiceDetails'
          description: Response to the request to create an invoice for an Account.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create account receivable invoices
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arInvoice
  /hotels/{hotelId}/accounts/{accountId}/statements:
    post:
      description: "Use this API to generate statement for a given account receivable\
        \ id. It includes the account balance as of the current business date, an\
        \ aging summary that shows how long outstanding balances have been \"on the\
        \ books\" for each aging level set up for given property. <p><strong>OperationId:</strong>postStatements</p>"
      operationId: postStatements
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/statementsToBeGenerated'
        description: "Operation to generate AR Statements. This will validate and\
          \ check if there exists any invoices to be included in the Statement based\
          \ on the criteria used. If Statement Numbering is used, this will return\
          \ a statement number to use in report as well as report sequence id to identify\
          \ statement's invoices."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Generate a statement for a given account receivable
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: statementsToBeGenerated
  /hotels/{hotelId}/accounts/{accountId}/traces:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteAccountTrace</p>'
      operationId: deleteAccountTrace
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: traceID
        schema:
          type: string
      - description: Date of the trace.
        in: query
        name: traceOn
        schema:
          format: date-time
          type: string
      - description: The information this trace contains.
        in: query
        name: traceText
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates deletion of account traces.
      tags:
      - AccountsReceivables
    post:
      description: Use this API to add a trace for a given account id. Use getaccounts
        to find account id. <p><strong>OperationId:</strong>postAccountTrace</p>
      operationId: postAccountTrace
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountTrace'
        description: Request to create a Trace for an Account.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add a trace to an account receivable account
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountTrace
    put:
      description: ' <p><strong>OperationId:</strong>putAccountTrace</p>'
      operationId: putAccountTrace
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/accountTrace'
        description: Request to Change the Trace on an Account.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: This API facilitates modification of account traces.
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: accountTrace
  /hotels/{hotelId}/accounts/{accountId}/transactions/{transactionId}/invoicePaymentDetails:
    get:
      description: "Use this API to get AR account's invoice and payment details including\
        \ credit, debit, amount due date, etc. <p><strong>OperationId:</strong>getInvoicePaymentDetail</p>"
      operationId: getInvoicePaymentDetail
      parameters:
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: Account Number for the AR Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Account Name for the AR Account.
        in: query
        name: accountName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoicePayment'
          description: Response for the fetch invoice and payments details request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InvoicePaymentDetail not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable invoice and payment details
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/accounts/{accountId}/uncompressInvoices:
    post:
      description: Use this API to reverse compressing account receivable invoices
        and break single combined invoice into individual invoices. <p><strong>OperationId:</strong>uncompressARInvoices</p>
      operationId: uncompressARInvoices
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoice'
        description: Request to uncompress a compressed(Parent) Invoice
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reverse the compressing invoice process
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoice
  /hotels/{hotelId}/agingCycles:
    get:
      description: "Use this API to get account receivable profile's aging summary\
        \ including account name, summary, credit limit, total outstanding balance,\
        \ etc. per aging bucket. <p><strong>OperationId:</strong>getARAgingCycles</p>"
      operationId: getARAgingCycles
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arAgingCycles'
          description: Response for Fetch AR Aging Cycles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARAgingCycles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given AR account's aging detail
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/batchCharges:
    post:
      description: Use this API to create a batch process for simultaneously post
        a one-time charge to multiple account receivable accounts. <p><strong>OperationId:</strong>postBatchCharges</p>
      operationId: postBatchCharges
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/batchChargesToPost'
        description: Request for posting a charge in a batch to list of accounts.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create process to charge on multiple account receivables
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: batchChargesToPost
  /hotels/{hotelId}/directBillsToAR:
    put:
      description: Use this API to transfer direct bills to account receivable account
        <p><strong>OperationId:</strong>transferDirectBillsToAr</p>
      operationId: transferDirectBillsToAr
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transferDirectBillsToAr'
        description: Request for Transfer Directs bill to AR.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Move direct bills to account receivable
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: transferDirectBillsToAr
  /hotels/{hotelId}/invoices:
    put:
      description: "Use this API to update or transfer invoice detail such as amount,\
        \ transaction code, etc. <p><strong>OperationId:</strong>putInvoiceDetails</p>"
      operationId: putInvoiceDetails
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoice'
        description: Response to the request to change invoice
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update invoice detail.
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoice
  /hotels/{hotelId}/invoices/{invoiceId}:
    put:
      deprecated: true
      description: "Use this API to update or transfer invoice detail such as amount,\
        \ transaction code, etc.<br><p><strong><mark>This API is deprecated. Please\
        \ use putInvoiceDetails instead</mark></strong></p> <p><strong>OperationId:</strong>putInvoice</p>"
      operationId: putInvoice
      parameters:
      - description: Unique ID of the invoice
        in: path
        name: invoiceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoice'
        description: Response to the request to change invoice
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update invoice detail.
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoice
  /hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments:
    get:
      deprecated: true
      description: Use this API to get applied payment details for AR invoices.<br><p><strong><mark>This
        API is deprecated. Please use getAppliedInvoicePayments instead</mark></strong></p>
        <p><strong>OperationId:</strong>getInvoiceAppliedPayments</p>
      operationId: getInvoiceAppliedPayments
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the invoice
        in: path
        name: invoiceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoiceAppliedPayments'
          description: "Response to the applied payment details,Contains errors or\
            \ warnings if any."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InvoiceAppliedPayments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable invoice's payment history
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/paymentsFromInvoice:
    delete:
      deprecated: true
      description: Delete payments from invoice.<br><p><strong><mark>This API is deprecated.
        Please use removePaymentsFromInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>deletePaymentsFromInvoice</p>
      operationId: deletePaymentsFromInvoice
      parameters:
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the invoice
        in: path
        name: invoiceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Transaction Identifier of the Payment.
        explode: true
        in: query
        name: trxNo
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        required: true
        schema:
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierID
        schema:
          type: number
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete payments from invoice
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/charges:
    post:
      deprecated: true
      description: Use this API to post charges to account receivable account.<br><p><strong><mark>This
        API is deprecated. Please use postChargesToAR instead</mark></strong></p>
        <p><strong>OperationId:</strong>postARCharges</p>
      operationId: postARCharges
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arChargesPostingCriteria'
        description: "Request to post charges to an existing invoice, when the functionality\
          \ is available. If the invoice should not be modified or if the folio should\
          \ not be modified,based on other functionalities, then the charges cannot\
          \ be posted to the invoice."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add charges to account receivable
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arChargesPostingCriteria
  /hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/payments:
    post:
      description: Use this API to make payment to AR accounts for a list of reservations.
        <p><strong>OperationId:</strong>postARPayments</p>
      operationId: postARPayments
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arPaymentsToBeCreated'
        description: Request to post a payment to an AR Account and apply the payment
          to Invoices..
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arPayments'
          description: Response notifying if the posting of a payment to an AR Account.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add payment to an account receivable account for a list of reservations
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arPaymentsToBeCreated
  /hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/statementsHistory:
    get:
      description: Use this API to find the history of statements prepared for AR
        accounts. <p><strong>OperationId:</strong>getStatementsHistory</p>
      operationId: getStatementsHistory
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Account Number for the AR Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: Account Name for the AR Account.
        in: query
        name: accountName
        schema:
          type: string
      - description: History Date filter.
        in: query
        name: dateSent
        schema:
          format: date
          type: string
      - description: Report Name wild card.
        in: query
        name: reportFileNameWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/statementHistory'
          description: Statement History.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: StatementsHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's account receivable statements history
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/transactions/{transactionId}/reversePayment:
    post:
      description: Use this API to reverse payment that occurred accidently or via
        user error. <p><strong>OperationId:</strong>postReversePayment</p>
      operationId: postReversePayment
      parameters:
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/reversePayment'
        description: Request for reverse AR payment
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reverse Payment
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: reversePayment
  /hotels/{hotelId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments:
    get:
      description: Use this API to get applied payment details for AR invoices. <p><strong>OperationId:</strong>getAppliedInvoicePayments</p>
      operationId: getAppliedInvoicePayments
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoiceAppliedPayments'
          description: "Response to the applied payment details,Contains errors or\
            \ warnings if any."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: AppliedInvoicePayments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable invoice's payment history
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/transactions/{transactionId}/creditcard/payments:
    get:
      description: Use this API to get lists of folios for guests who checked out
        using a credit card payment transaction code that has an account receivable
        associated with it. It also lists payments made prior to check out if the
        payment was made using a credit card transaction code that has a an account
        receivable associated with it. <p><strong>OperationId:</strong>getARCreditCardPayments</p>
        <p>The maximum allowable limit for this API is <strong>50</strong>.</p> <p>This
        API allows a time span of <strong>30</strong> days.</p>
      operationId: getARCreditCardPayments
      parameters:
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The ending value of the date range.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/arCreditCardPayments'
          description: Response after fetching AR credit card payments.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARCreditCardPayments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable folios which are paid using credit cards
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/transactions/{transactionId}/paymentsFromInvoice:
    delete:
      description: Delete payments from invoice. <p><strong>OperationId:</strong>removePaymentsFromInvoice</p>
      operationId: removePaymentsFromInvoice
      parameters:
      - description: Unique ID of the transaction
        in: path
        name: transactionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Transaction Identifier of the Payment.
        explode: true
        in: query
        name: trxNo
        required: true
        schema:
          items:
            type: number
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        required: true
        schema:
          type: string
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierID
        schema:
          type: number
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete payments from invoice
      tags:
      - AccountsReceivables
  /hotels/{hotelId}/unlink/invoiceFromStatement:
    put:
      description: Use this API to remove the invoice from the statement before that
        invoice can be included in a different statement. <p><strong>OperationId:</strong>unlinkInvoiceFromStatement</p>
      operationId: unlinkInvoiceFromStatement
      parameters:
      - description: Unique ID of the hotel
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/unlinkInvoiceFromStatement'
        description: Request to unlink invoice from statement
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Unlink invoices from a statement
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: unlinkInvoiceFromStatement
  /invoicePayments/accounts/{accountId}:
    get:
      description: Use this API to get payment data for account receivable invoices.
        <p><strong>OperationId:</strong>getInvoicesPayments</p> <p>The maximum allowable
        limit for this API is <strong>50</strong>.</p>
      operationId: getInvoicesPayments
      parameters:
      - description: Unique ID of the account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to indicate if Invoice Details are required.
        in: query
        name: inclDetails
        schema:
          default: true
          type: boolean
      - description: Flag to indicate if Zero Balance Invoices are to be included.
        in: query
        name: inclZeroBalance
        schema:
          default: true
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Property where the Accounts exist.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Display Name for the guest.
        in: query
        name: guestDisplayName
        schema:
          type: string
      - description: "Filter for User-defined Invoice Supplement. The search is case-insensitive\
          \ and supports % as wildcard character with right-side wildcard search by\
          \ default. Examples: ABC or ABC% finds records that start with ABC, such\
          \ as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC,\
          \ such as ABC, ABC123, MYABC, and MYABC123."
        in: query
        name: remark
        schema:
          type: string
      - description: "Filter for User-defined Invoice Reference. The search is case-insensitive\
          \ and supports % as wildcard character with right-side wildcard search by\
          \ default. Examples: ABC or ABC% finds records that start with ABC, such\
          \ as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC,\
          \ such as ABC, ABC123, MYABC, and MYABC123."
        in: query
        name: reference
        schema:
          type: string
      - description: invoice Number .
        explode: true
        in: query
        name: invoiceNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Addressee Name filter. Works with the Addressee Functionality.
        in: query
        name: addresseeName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationType
        schema:
          type: string
      - description: Flag to check Invoice Statement is Printed.
        in: query
        name: printed
        schema:
          default: true
          type: boolean
      - description: Flag to check Invoice is billed
        in: query
        name: unBilled
        schema:
          default: false
          type: boolean
      - description: folio Number .
        explode: true
        in: query
        name: folioNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fiscal bill number of this transaction.
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: The Statement number of this invoice.
        in: query
        name: statementNo
        schema:
          type: number
      - description: Type of AR Invoice information to fetch the invoices or payments
          data.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Invoices
            - Payments
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Custom number
        in: query
        name: customNumber
        schema:
          type: string
      - description: This represents which information the data will be ordered.
        in: query
        name: orderBy
        schema:
          enum:
          - OpenBalance
          - TransactionDate
          type: string
      - description: This represents how the invoice payments will be ordered
        in: query
        name: sortOrder
        schema:
          enum:
          - Asc
          - Desc
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoicesPayments'
          description: Response for the fetch invoice and payments details request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InvoicesPayments not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get payment detail for account's invoices
      tags:
      - AccountsReceivables
  /invoicePostings:
    get:
      description: Use this API to get account receivable postings. <p><strong>OperationId:</strong>getInvoicePostings</p>
        <p>This API allows a time span of <strong>30</strong> days.</p>
      operationId: getInvoicePostings
      parameters:
      - description: Flag to indicate if postings or adjustments can be made to the
          invoice.
        in: query
        name: canBeModified
        schema:
          type: boolean
      - description: Close date of the invoice.
        in: query
        name: closeDate
        schema:
          format: date
          type: string
      - description: The Fiscal Bill number of this posting
        in: query
        name: fiscalBillNo
        schema:
          type: string
      - description: Date of Folio Generation.
        in: query
        name: folioDate
        schema:
          format: date
          type: string
      - description: Folio Number.
        in: query
        name: folioNo
        schema:
          type: number
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        in: query
        name: folioStatus
        schema:
          enum:
          - Deposit
          - Void
          - Ok
          - Zero
          - Compress
          - Converted
          - Internal
          type: string
      - description: The name of the Folio Type used for the Folio Number sequence.
        in: query
        name: folioTypeName
        schema:
          type: string
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        in: query
        name: internalFolioWindowID
        schema:
          type: string
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        in: query
        name: invoiceNo
        schema:
          type: number
      - in: query
        name: invoiceType
        schema:
          enum:
          - Normal
          - Credit
          - OldBalance
          - PasserBy
          type: string
      - description: Posting date of the invoice.
        in: query
        name: postingDate
        schema:
          format: date
          type: string
      - description: Revenue date ID of the invoice.
        in: query
        name: revenueDate
        schema:
          format: date
          type: string
      - description: Statementno of the invoice.
        in: query
        name: statementNo
        schema:
          type: integer
      - description: Status of the invoice.
        in: query
        name: status
        schema:
          type: string
      - description: Transfer date of the invoice.
        in: query
        name: transferDate
        schema:
          format: date
          type: string
      - description: Transaction code of the invoice.
        in: query
        name: postingTransactionCode
        schema:
          type: string
      - description: Transaction Date of the invoice.
        in: query
        name: transactionDate
        schema:
          format: date
          type: string
      - description: Unique Transaction Identifier of the Invoice.
        in: query
        name: transactionNo
        schema:
          type: number
      - description: The Cashier ID of the Cashier who is currently processing the
          transaction(s).
        in: query
        name: cashierId
        schema:
          type: number
      - description: Property where the invoice exists.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: guestProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: guestProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: guestProfileType
        schema:
          type: string
      - description: The Aging age of the invoice
        in: query
        name: age
        schema:
          type: integer
      - description: Name of the Guest who consumed these transactions.
        in: query
        name: guestName
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: originalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: originalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: paymentsAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: paymentsCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: User-defined posting reference.
        in: query
        name: reference
        schema:
          type: string
      - description: User-defined posting remark.
        in: query
        name: remark
        schema:
          type: string
      - in: query
        name: adjusted
        schema:
          type: boolean
      - in: query
        name: parentInvoiceNo
        schema:
          type: number
      - in: query
        name: compressed
        schema:
          type: boolean
      - in: query
        name: compressedDate
        schema:
          format: date
          type: string
      - in: query
        name: transferredOut
        schema:
          type: boolean
      - in: query
        name: transferredIn
        schema:
          type: boolean
      - in: query
        name: marketDescription
        schema:
          type: string
      - in: query
        name: marketHotelId
        schema:
          type: string
      - in: query
        name: marketCode
        schema:
          type: string
      - in: query
        name: marketGroup
        schema:
          type: string
      - in: query
        name: roomClassDescription
        schema:
          type: string
      - in: query
        name: roomClassHotelId
        schema:
          type: string
      - in: query
        name: roomClassCode
        schema:
          type: string
      - in: query
        name: sourceDescription
        schema:
          type: string
      - in: query
        name: sourceHotelId
        schema:
          type: string
      - in: query
        name: sourceCode
        schema:
          type: string
      - in: query
        name: sourceGroup
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierInfoCashierId
        schema:
          type: number
      - description: Cashier Name.
        in: query
        name: cashierName
        schema:
          type: string
      - description: Hotel context of the Transaction code.
        in: query
        name: transactionHotelId
        schema:
          type: string
      - description: Print receipt flag that tells whether the transaction receipt
          is to be printed or not. This is based on the transaction code.
        in: query
        name: printTrxReceipt
        schema:
          type: boolean
      - description: Unique identifier for the Transaction code.
        in: query
        name: invoicePostingsTransactionCode
        schema:
          type: string
      - description: Transaction codes info.
        in: query
        name: transactionDescription
        schema:
          type: string
      - description: Category of the transaction code.
        in: query
        name: transactionGroup
        schema:
          type: string
      - description: Sub category of the transaction code.
        in: query
        name: transactionSubGroup
        schema:
          type: string
      - description: Unique Universal product code of the transaction code.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        in: query
        name: routingInstructionsId
        schema:
          type: number
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Hotel code to which the article belongs.
        explode: true
        in: query
        name: articleHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: articleDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: articleAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: articleCurrencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: articleUniversalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: cardId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: PaymentCardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: paymentCardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: Defines the type of Linked profiles for a block.
        in: query
        name: addresseeType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: addressProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: addressProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: addressProfileIdType
        schema:
          type: string
      - description: Name for the profile attached to the block.
        in: query
        name: name
        schema:
          type: string
      - description: City for the profile attached to the block.
        in: query
        name: city
        schema:
          type: string
      - description: Phone for the profile attached to the block.
        in: query
        name: phone
        schema:
          type: string
      - description: Flag to check Partail Transfer Allowed.
        in: query
        name: allowPartialTransferYn
        schema:
          type: boolean
      - description: Flag to check Invoice Statement is Printed.
        in: query
        name: printed
        schema:
          type: boolean
      - description: Invoice Statement Printed Date.
        in: query
        name: printedDate
        schema:
          format: date
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedFolioType
        schema:
          type: string
      - description: Name of the Stored Folio.
        in: query
        name: storedFolioName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedDebitFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedDebitFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedDebitFolioType
        schema:
          type: string
      - description: Name of the Stored Debit Folio.
        in: query
        name: storedDebitFolioName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: accountId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: accountIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: accountType
        schema:
          type: string
      - description: The Account Number for the Account.
        in: query
        name: accountNo
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: additionalFilterCashierId
        schema:
          type: number
      - explode: true
        in: query
        name: additionalFilterTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: additionalFilterTransactionSubGroupCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Filters the results for reference.
        in: query
        name: referenceWildCard
        schema:
          type: string
      - description: Filter the results for supplement.
        in: query
        name: supplementWildCard
        schema:
          type: string
      - description: Lookup string which will try to match an existing Cheque number's.
        in: query
        name: checkNumberWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/invoicePostings'
          description: Response to the request to fetch postings for an invoice
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InvoicePostings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get account receivable invoice postings
      tags:
      - AccountsReceivables
  /invoices/close:
    put:
      description: "Use this API to close (\"freeze\") one or more selected invoices\
        \ at any point after they have been created. When an invoice has been closed,\
        \ no new postings to the invoice can be made, transaction reference or supplemental\
        \ information can be edited, or adjustments to transaction codes can be made.\
        \ However, payments can be posted to an invoice after it has been closed.\
        \ <p><strong>OperationId:</strong>putInvoices</p>"
      operationId: putInvoices
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoices'
        description: Request to close invoice(s)
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Close account receivable invoices
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoices
  /invoicesAccount:
    put:
      description: Use this API to update existing AR invoice for a given profile
        and/or a reservation. <p><strong>OperationId:</strong>putARInvoicesAccount</p>
      operationId: putARInvoicesAccount
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arInvoicesAccount'
        description: Request to change AR invoice(s) account in AR.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Account receivable invoice for an AR account
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arInvoicesAccount
  /oldBalances:
    post:
      description: Use this API to add old balances from external accounting systems
        into OPERA Accounts Receivable. <p><strong>OperationId:</strong>postAROldBalances</p>
      operationId: postAROldBalances
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/arOldBalances'
        description: Request to Post AR Old Balances
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add old balances from external accounting systems
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: arOldBalances
  /profiles/{profileId}/aging:
    get:
      description: "Use this API to get profile's account receivable summary including\
        \ fixed charges, account balance, statements, reminder history, etc. <p><strong>OperationId:</strong>getProfileAging</p>"
      operationId: getProfileAging
      parameters:
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Currency of the aging amounts.
        in: query
        name: currency
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileAging'
          description: Response to the request to fetch the total Aging information
            for a Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileAging not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's aging detail
      tags:
      - AccountsReceivables
  /profiles/{profileId}/yearViews:
    get:
      description: "Use this API to get a month-by-month total of accrued debits,\
        \ accrued credits, and a net total for the selected account data. <p><strong>OperationId:</strong>getProfileYearView</p>"
      operationId: getProfileYearView
      parameters:
      - description: Unique ID of the profile
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Currency of the Year View amounts.
        in: query
        name: currency
        schema:
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/profileYearView'
          description: Response to the request to fetch the total Year View information
            for a Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ProfileYearView not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's yearly account receivable detail
      tags:
      - AccountsReceivables
  /reopenInvoices:
    put:
      description: Use this API to unfreeze or reopen invoice for account receivable.
        <p><strong>OperationId:</strong>reopenInvoices</p>
      operationId: reopenInvoices
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoices'
        description: Request to re-open closed invoice(s)
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Reopen account receivable closed invoice
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoices
  /statements:
    get:
      description: Use this API to prepare statement for an AR account holders. It
        is typically prepared for billing purposes. <p><strong>OperationId:</strong>getARStatements</p>
      operationId: getARStatements
      parameters:
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: profileId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: accountID
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account Number for the AR Account.
        explode: true
        in: query
        name: accountNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Account Name for the AR Account.
        explode: true
        in: query
        name: accountName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate if postings or adjustments can be made to the
          invoice.
        explode: true
        in: query
        name: canBeModified
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Close date of the invoice.
        explode: true
        in: query
        name: closeDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: The Fiscal Bill number of this posting
        explode: true
        in: query
        name: fiscalBillNo
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Date of Folio Generation.
        explode: true
        in: query
        name: folioDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Folio Number.
        explode: true
        in: query
        name: folioNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
          \ OK folio status."
        explode: true
        in: query
        name: folioStatus
        schema:
          items:
            enum:
            - Deposit
            - Void
            - Ok
            - Zero
            - Compress
            - Converted
            - Internal
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The name of the Folio Type used for the Folio Number sequence.
        explode: true
        in: query
        name: folioTypeName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Internal window ID which is unique to the reservation. This ID
          can only be used for reference.
        explode: true
        in: query
        name: internalFolioWindowID
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Invoice No after the folio is generated. Same invoice number
          may be referred in multiple folios
        explode: true
        in: query
        name: invoiceNo
        schema:
          items:
            type: number
          type: array
        style: form
      - explode: true
        in: query
        name: invoiceType
        schema:
          items:
            enum:
            - Normal
            - Credit
            - OldBalance
            - PasserBy
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Posting date of the invoice.
        explode: true
        in: query
        name: postingDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Revenue date ID of the invoice.
        explode: true
        in: query
        name: revenueDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Statementno of the invoice.
        explode: true
        in: query
        name: statementNo
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Status of the invoice.
        explode: true
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transfer date of the invoice.
        explode: true
        in: query
        name: transferDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Transaction code of the invoice.
        explode: true
        in: query
        name: invoiceTransactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction Date of the invoice.
        explode: true
        in: query
        name: transactionDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Unique Transaction Identifier of the Invoice.
        explode: true
        in: query
        name: transactionNo
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: invoiceHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: guestProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: guestProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: guestProfileType
        schema:
          type: string
      - description: The Aging age of the invoice
        explode: true
        in: query
        name: age
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Name of the Guest who consumed these transactions.
        explode: true
        in: query
        name: guestName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: originalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: originalAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: paymentsAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: paymentsCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: balanceAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: balanceCurrencyCode
        schema:
          type: string
      - description: User-defined posting reference.
        explode: true
        in: query
        name: reference
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User-defined posting remark.
        explode: true
        in: query
        name: remark
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: adjusted
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: parentInvoiceNo
        schema:
          items:
            type: number
          type: array
        style: form
      - explode: true
        in: query
        name: compressed
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: compressedDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: transferredOut
        schema:
          items:
            type: boolean
          type: array
        style: form
      - explode: true
        in: query
        name: transferredIn
        schema:
          items:
            type: boolean
          type: array
        style: form
      - in: query
        name: marketDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: marketHotelId
        schema:
          type: string
      - in: query
        name: marketCode
        schema:
          type: string
      - in: query
        name: marketGroup
        schema:
          type: string
      - in: query
        name: roomClassDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: roomClassHotelId
        schema:
          type: string
      - in: query
        name: roomClassCode
        schema:
          type: string
      - in: query
        name: sourceDescription
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: sourceHotelId
        schema:
          type: string
      - in: query
        name: sourceCode
        schema:
          type: string
      - in: query
        name: sourceGroup
        schema:
          type: string
      - description: Cashier Id of the Cashier.
        in: query
        name: cashierId
        schema:
          type: number
      - description: Cashier Name.
        in: query
        name: cashierName
        schema:
          type: string
      - description: Property where the AR Account exists. This is required.
        in: query
        name: transactionHotelId
        schema:
          type: string
      - description: Print receipt flag that tells whether the transaction receipt
          is to be printed or not. This is based on the transaction code.
        in: query
        name: printTrxReceipt
        schema:
          type: boolean
      - description: Unique identifier for the Transaction code.
        in: query
        name: accountInvoiceTransactionCode
        schema:
          type: string
      - description: Transaction codes info.
        in: query
        name: transactionDescription
        schema:
          type: string
      - description: Category of the transaction code.
        in: query
        name: transactionGroup
        schema:
          type: string
      - description: Sub category of the transaction code.
        in: query
        name: transactionSubGroup
        schema:
          type: string
      - description: Unique Universal product code of the transaction code.
        in: query
        name: universalProductCode
        schema:
          type: string
      - description: This is the Routing Instruction Id attached with Reservation.
          It is only used for internal purpose. It should not be used by external
          vendor or consumer.
        in: query
        name: routingInstructionsId
        schema:
          type: number
      - description: Unique code of the article.
        explode: true
        in: query
        name: articleCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Property where the AR Account exists. This is required.
        explode: true
        in: query
        name: articleHotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether the article is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Description of the article.
        explode: true
        in: query
        name: articleDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Transaction code to which the article belongs.
        explode: true
        in: query
        name: transactionCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A monetary amount.
        in: query
        name: articleAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: articleCurrencyCode
        schema:
          type: string
      - description: Indicates whether the article is available for post it.
        in: query
        name: availableForPostIt
        schema:
          type: boolean
      - description: Color configuration type. This color configuration provides a
          visual category of entities.
        in: query
        name: color
        schema:
          enum:
          - Red
          - DarkRed
          - Green
          - DarkGreen
          - LightGreen
          - Orange
          - White
          - Yellow
          - DarkYellow
          - Purple
          - Brown
          - Gray
          - Aqua
          - Chocolate
          - Blue
          - LightBlue
          - DarkBlue
          - Cyan
          - DarkCyan
          - Magenta
          - DarkMagenta
          - Black
          type: string
      - description: Unique Universal product code of the article.
        explode: true
        in: query
        name: articleUniversalProductCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attach the credit card to profile.
        in: query
        name: attachCreditCardToProfile
        schema:
          type: boolean
      - in: query
        name: cardHolderName
        schema:
          type: string
      - in: query
        name: cardNumber
        schema:
          type: string
      - in: query
        name: cardNumberLast4Digits
        schema:
          type: string
      - in: query
        name: cardNumberMasked
        schema:
          type: string
      - description: Simple type for indicating if credit card number is tokenized.
        in: query
        name: cardOrToken
        schema:
          enum:
          - CardNumber
          - Token
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        in: query
        name: cardType
        schema:
          enum:
          - Ab
          - Am
          - Ax
          - Cb
          - Dc
          - Ds
          - Dt
          - Ec
          - Er
          - Jc
          - Jl
          - Mc
          - Nb
          - So
          - St
          - Sw
          - Va
          - Xy
          - Zz
          - Cp
          - Cu
          type: string
      - description: Expiration date of the credit card
        in: query
        name: expirationDate
        schema:
          format: date
          type: string
      - in: query
        name: expirationDateExpired
        schema:
          type: boolean
      - description: Masked Expiration date of the credit card
        in: query
        name: expirationDateMasked
        schema:
          type: string
      - in: query
        name: processing
        schema:
          enum:
          - Eft
          - Manual
          type: string
      - in: query
        name: swiped
        schema:
          type: boolean
      - description: Indicates the user defined credit card type if credit card type
          from a defined list is not provided
        in: query
        name: userDefinedCardType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: invoicePaymentCardId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: invoicePaymentCardIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: invoicePaymentCardIdType
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: currentAuthorizedAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currentAuthorizedAmountCurrencyCode
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: approvalAmount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: approvalAmountCurrencyCode
        schema:
          type: string
      - description: Defines the type of Linked profiles for a block.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: addresseeProfileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: addresseeProfileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: addresseeProfileType
        schema:
          type: string
      - description: Name for the profile attached to the block.
        in: query
        name: name
        schema:
          type: string
      - description: City for the profile attached to the block.
        in: query
        name: city
        schema:
          type: string
      - description: Phone for the profile attached to the block.
        in: query
        name: phone
        schema:
          type: string
      - description: Flag to check Partail Transfer Allowed.
        explode: true
        in: query
        name: allowPartialTransferYn
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Flag to check Invoice Statement is Printed.
        explode: true
        in: query
        name: printed
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Invoice Statement Printed Date.
        explode: true
        in: query
        name: printedDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedFolioType
        schema:
          type: string
      - description: Name of the Stored Folio.
        explode: true
        in: query
        name: storedFolioName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: storedDebitFolioId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: storedDebitFolioIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: storedDebitFolioType
        schema:
          type: string
      - description: Name of the Stored Debit Folio.
        explode: true
        in: query
        name: storedDebitFolioName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The date specified in this field determines the balance forward\
          \ date and balance forward total that is printed on the statement. (A balance\
          \ forward shows the net amount for all invoices and payments (debits and\
          \ credits) prior to the balance forward date as a single total, rather than\
          \ itemizing them individually on the statement.)"
        in: query
        name: balanceForwardDate
        schema:
          format: date
          type: string
      - description: Flag to indicate if the associated Folios for the Invoices are
          to be included along with the the Statement.
        in: query
        name: inclFolios
        schema:
          default: false
          type: boolean
      - description: Flag to indicate if Previousely Printed Invoices are to be included
          in the Statement. This is based on the Functionality for AR PRINTED INVOICES.
        in: query
        name: inclPrinted
        schema:
          default: false
          type: boolean
      - description: Flag to indicate if Zero Balances Invoices are to be included
          in the Statement.
        in: query
        name: inclZero
        schema:
          default: false
          type: boolean
      - description: The ending value of the date range.
        in: query
        name: filterEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: filterStartDate
        schema:
          format: date
          type: string
      - description: Text which will be printed on the Invoice.
        in: query
        name: statementText
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/statements'
          description: Details of the Statement to generate.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ARStatements not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get given profile's account receivable statements
      tags:
      - AccountsReceivables
  /transferInvoicesAndPayments:
    put:
      description: Use this API to move all or a portion of an invoice or a payment
        from one AR account to another AR account <p><strong>OperationId:</strong>transferInvoicesAndPayments</p>
      operationId: transferInvoicesAndPayments
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/invoicesAndPaymentsToTransfer'
        description: Request for transferring invoice(s) in AR.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Move an invoice or a payment to another AR account
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: invoicesAndPaymentsToTransfer
  /transferPostings:
    put:
      description: Use this API to transfer postings from one account receivable invoice
        to another account receivable invoice. <p><strong>OperationId:</strong>transferPostings</p>
      operationId: transferPostings
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/transferPostings'
        description: Request for transferring invoice posting(s)in AR.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Transfer postings
      tags:
      - AccountsReceivables
      x-codegen-request-body-name: transferPostings
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    reminders:
      description: Response to the request to fetch pending Reminders for Accounts.
      properties:
        remindersDetails:
          description: Information about a Reminder.
          items:
            $ref: '#/components/schemas/aRReminderType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRRemindersType:
      description: Information about a Reminder.
      items:
        $ref: '#/components/schemas/aRReminderType'
      maxItems: 4000
      type: array
    aRReminderType:
      description: AR Reminder Information Type.
      properties:
        hotelId:
          description: Property where the Account belongs.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        maxAge:
          description: The maximum Age(days) of the invoices in the Reminder. This
            would be available when Simple Reminder functionality is OFF.
          type: integer
        cycleUsed:
          $ref: '#/components/schemas/reminderCycleType'
        letterName:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          maxLength: 2000
          minLength: 0
          type: string
        cycle:
          description: The current Reminder Cycle number for this reminder. This would
            be available when Simple Reminder functionality is ON.
          type: integer
        lastCycle:
          description: The Last Reminder Cycle used for this Account. This would be
            available when Simple Reminder functionality is ON.
          type: integer
        lastReminderSent:
          description: The date of the Last Reminder Sent.
          format: date
          type: string
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
        currencyCode:
          description: Reminder summary currency code.
          maxLength: 3
          minLength: 3
          type: string
        reportFileName:
          description: The Reminder report file name Letter name which is to be used
            for reprint.
          maxLength: 2000
          minLength: 0
          type: string
        isHistoryExists:
          description: Indicates that reminders history exists.
          type: boolean
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reminderCycleType:
      description: The different types of Reminder Cycle calculation rules.
      enum:
      - Days
      - EndOfMonth
      type: string
    aRInvoicesType:
      description: A collection of AR Invoices.
      items:
        $ref: '#/components/schemas/aRInvoiceType'
      maxItems: 4000
      type: array
    aRInvoiceType:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    marketCodeInfoType:
      properties:
        marketCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        marketGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    roomClassCodeInfoType:
      description: Code of the room class type.
      properties:
        roomClassCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceCodeInfoType:
      properties:
        sourceCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        sourceGroup:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        reservationIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        sharedGuests:
          description: Collection of shared guest reservations.
          items:
            $ref: '#/components/schemas/resSharedGuestInfoType'
          maxItems: 4000
          type: array
        attachedProfiles:
          items:
            $ref: '#/components/schemas/resAttachedProfileType'
          maxItems: 4000
          type: array
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationFolioWindows:
          description: Collection of reservation folio windows.
          items:
            $ref: '#/components/schemas/reservationFolioWindowType'
          maxItems: 4000
          type: array
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        reservationIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        allowedActions:
          description: Allowed action.
          items:
            $ref: '#/components/schemas/reservationAllowedActionType'
          maxItems: 11
          type: array
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        numberOfRooms:
          description: Room Id
          type: integer
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        points:
          $ref: '#/components/schemas/pointsType'
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          format: date-time
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          format: date-time
          type: string
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
      type: object
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        fullName:
          description: Full display name
          type: string
        alternateFullName:
          description: Altername full display name
          type: string
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        birthDate:
          description: Date of birth
          format: date
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          $ref: '#/components/schemas/countryNameType'
        vip:
          $ref: '#/components/schemas/vIPType'
        address:
          $ref: '#/components/schemas/addressSearchType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        accompanyGuests:
          description: Collection of accompany guests
          items:
            $ref: '#/components/schemas/resAccompanyGuestInfoType'
          maxItems: 4000
          type: array
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    surnameType:
      description: "Family name, last name."
      maxLength: 40
      minLength: 0
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
      type: object
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          format: date-time
          type: string
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        firstName:
          description: "Given name, first name or names"
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        fullName:
          description: String representation of the full name
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    reservationPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        expirationDateExpired:
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        code:
          description: The authorization rule code.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    payeeInfoType:
      description: Payee information.
      properties:
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
      type: object
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentTime:
          description: Time the text was last sent to the user.
          format: date-time
          type: string
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        instructions:
          description: Turndown instructions for the room.
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
      type: object
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
        supplies:
          description: List of the facility codes.
          items:
            $ref: '#/components/schemas/facilityCodeType'
          maxItems: 4000
          type: array
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
      type: object
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
      type: object
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
      type: object
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountRequired:
          description: Deposit Amount Required.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
      type: object
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfaceType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    interfaceRightsStatusType:
      properties:
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
      type: object
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        telephones:
          $ref: '#/components/schemas/resCommunicationType_telephones'
        emails:
          $ref: '#/components/schemas/resCommunicationType_emails'
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        telephone:
          $ref: '#/components/schemas/telephoneType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        expectedReturnTime:
          description: Expected Return Time
          format: date-time
          type: string
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    cashierInfoType:
      description: Cashier information. Contains Id and Name details of the cashier.
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        cashierName:
          description: Cashier Name.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    profileInfoType:
      description: Provides information about attached profiles to the block.
      properties:
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        name:
          description: Name for the profile attached to the block.
          maxLength: 200
          minLength: 0
          type: string
        city:
          description: City for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        phone:
          description: Phone for the profile attached to the block.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: Defines the type of Linked profiles for a block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    customNumberType:
      description: Custom number
      maxLength: 200
      minLength: 0
      type: string
    fiscalResponseType:
      description: Provides information which is used for fiscal response processing.
      properties:
        folioSeqId:
          description: Fiscal Folio sequence ID stored in queue table.
          type: integer
        retryFiscalPrinting:
          description: Flag to do the retrieval process of fiscal printing or not.
          type: boolean
      type: object
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    aRInvoiceCategory:
      enum:
      - Normal
      - Credit
      - OldBalance
      - PasserBy
      type: string
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    accountsInfo:
      description: "Response for the request to search for AR Accounts. Based on the\
        \ criteria, the response can contain a list of AR Accounts and their AR information."
      properties:
        accountsDetails:
          description: Information regarding the AR Account.
          items:
            $ref: '#/components/schemas/aRAccountType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountsType:
      description: Information regarding the AR Account.
      items:
        $ref: '#/components/schemas/aRAccountType'
      maxItems: 4000
      type: array
    aRAccountType:
      description: Accounts Receivabales Account details type.
      properties:
        hotelId:
          description: Property where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        creditLimit:
          $ref: '#/components/schemas/currencyAmountType'
        contactName:
          description: The person to contact for this Account.
          maxLength: 200
          minLength: 0
          type: string
        paymentDueDays:
          description: Number of days on which person can make payment.
          maxLength: 20
          minLength: 0
          type: string
        monthEndCalcYN:
          description: Month End Calculation.
          type: boolean
        address:
          $ref: '#/components/schemas/addressInfoType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        telephones:
          description: The Telephone and Fax details attached to the Account.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        lastReminderInfo:
          $ref: '#/components/schemas/aRAccountType_lastReminderInfo'
        lastStatementInfo:
          $ref: '#/components/schemas/aRAccountType_lastStatementInfo'
        notes:
          description: The Note details attached to the Account.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        traces:
          description: The Trace details attached to the Account.
          items:
            $ref: '#/components/schemas/traceType'
          maxItems: 4000
          type: array
        fixedCharges:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/fixedChargeType'
          maxItems: 4000
          type: array
        accountIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        agingInfo:
          $ref: '#/components/schemas/aRAgingInfoType'
        yearViewInfo:
          $ref: '#/components/schemas/aRYearViewInfoType'
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        summary:
          $ref: '#/components/schemas/aRBalanceType'
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
        batchStatement:
          description: Include In Batch Statement
          type: boolean
        printFoliosWithStatement:
          description: Indicates if associated folios should be printed by default
            with the statement.
          type: boolean
        emailStatementsReminders:
          description: Indicates if the Account has opted to send the statements and
            reminders to the Account email address by default.
          type: boolean
        searchMatches:
          description: List of Generic Name-Value-Pair Parameters used for super search
            matches.
          items:
            $ref: '#/components/schemas/searchMatchType'
          maxItems: 4000
          type: array
        primary:
          description: Indicates if this Account is the Primary Account for this Guest/Company.
          type: boolean
        type:
          description: The type of Account.
          maxLength: 20
          minLength: 0
          type: string
        accountTypeDescription:
          description: The description of the Account Type.
          maxLength: 2000
          minLength: 0
          type: string
        permanent:
          description: Indicates if this is a Permanent Account. Permanent Accounts
            cannot be deleted.
          type: boolean
      type: object
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        image:
          description: An image for this paragraph.
          type: string
        url:
          description: A URL for this paragraph.
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        value:
          description: Property Value
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    traceType:
      properties:
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        traceText:
          description: The information this trace contains.
          type: string
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        traceOn:
          description: Date of the trace.
          format: date-time
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
        enteredBy:
          description: User that entered this trace.
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
      type: object
    traceResolveType:
      properties:
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
        resolvedBy:
          description: User that resolved the trace
          type: string
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          description: Quantity of the product.
          type: integer
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    aRAgingInfoType:
      description: Information regarding the aging balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        aging:
          description: The debit and credit balance per Aging bucket.
          items:
            $ref: '#/components/schemas/aRAgingType'
          maxItems: 4000
          type: array
      type: object
    aRBalanceType:
      description: Balance information for AR.
      properties:
        debit:
          $ref: '#/components/schemas/currencyAmountType'
        credit:
          $ref: '#/components/schemas/currencyAmountType'
        total:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRAgingType:
      description: Aging information for an Aging Bucket.
      properties:
        agingBucketRange:
          description: "The bucket description in terms of days. Example : 0-31 days"
          maxLength: 20
          minLength: 0
          type: string
        agingDate:
          $ref: '#/components/schemas/dateRangeType'
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        agingStartDay:
          description: "The start number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 31."
          type: integer
        agingEndDay:
          description: "The end number of days for this Aging bucket. Example: For\
            \ the range 31-60 days, this would be 60."
          type: integer
        sequence:
          description: The sequence for display.
          type: integer
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    aRYearViewInfoType:
      description: Information regarding Year View balances for an account.
      properties:
        totalOutstanding:
          $ref: '#/components/schemas/aRBalanceType'
        yearView:
          description: The debit and credit balance per account.
          items:
            $ref: '#/components/schemas/aRYearViewType'
          maxItems: 4000
          type: array
      type: object
    aRYearViewType:
      description: Year information for an Year View.
      properties:
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        balanceInfo:
          $ref: '#/components/schemas/aRBalanceType'
        runningTotal:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRPaymentsType:
      description: A collection of AR Payments.
      items:
        $ref: '#/components/schemas/aRPaymentType'
      maxItems: 4000
      type: array
    aRPaymentType:
      description: Details of an AR Payment.
      properties:
        age:
          description: The Aging age of the payment.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountUsed:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique Transaction Identifier of the Payment.
          type: number
        transactionDate:
          description: Date of the Payment.
          format: date
          type: string
        transactionCode:
          description: Transaction code of the Payment.
          maxLength: 20
          minLength: 0
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer of the invoice.
          format: date
          type: string
        sequenceNo:
          description: "When this PostingType is used to return the postings generated\
            \ by a batch request, the sequence number is used to relate to the Request's\
            \ sequence number."
          type: integer
      type: object
    remindersHistory:
      description: Reminders History.
      properties:
        aRReminderHistory:
          items:
            $ref: '#/components/schemas/aRReminderHistoryType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRReminderHistoryType:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
      type: object
    statements:
      description: Details of the Statement to generate.
      properties:
        aRStatements:
          items:
            $ref: '#/components/schemas/aRStatementType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRStatementType:
      description: Details about an AR Statement.
      properties:
        hotelId:
          description: Property where the Account belongs.
          maxLength: 20
          minLength: 0
          type: string
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        statementNo:
          description: "Statement Number for the Statement, when the functionality\
            \ for Numbering is ON."
          type: integer
        reportSeqNo:
          description: Internal Report Sequence Number for the which is used to mark
            statement invoices
          type: integer
        inclFolios:
          description: Flag to indicate if Folios are to be printed along with the
            Statement.
          type: boolean
        statementName:
          description: The Statement Report name which should be used for printing.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/statementType'
        reportFileName:
          description: The Statement Report name which should be used for printing.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    statementType:
      description: The Types of Statements that can be used on an Account Type.
      enum:
      - BalanceForward
      - IndividualOpenItems
      type: string
    arTransactions:
      description: Response after fetching AR transaction details.
      properties:
        transactions:
          $ref: '#/components/schemas/aRTransactionType'
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRTransactionType:
      description: Transaction Information.
      properties:
        invoices:
          description: Account Invoice Info.
          items:
            $ref: '#/components/schemas/accountInvoiceInfoType'
          maxItems: 4000
          type: array
        payments:
          description: Account Payments info .
          items:
            $ref: '#/components/schemas/accountPaymentInfoType'
          maxItems: 4000
          type: array
      type: object
    accountInvoicesInfoType:
      description: Account Invoice Info.
      items:
        $ref: '#/components/schemas/accountInvoiceInfoType'
      maxItems: 4000
      type: array
    accountInvoiceInfoType:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        accountName:
          description: Name of the AR Account.
          maxLength: 1000
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    accountPaymentsInfoType:
      description: Account Payments info .
      items:
        $ref: '#/components/schemas/accountPaymentInfoType'
      maxItems: 4000
      type: array
    accountPaymentInfoType:
      description: Details of an AR Payment.
      properties:
        age:
          description: The Aging age of the payment.
          type: integer
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountUsed:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        transactionNo:
          description: Unique Transaction Identifier of the Payment.
          type: number
        transactionDate:
          description: Date of the Payment.
          format: date
          type: string
        transactionCode:
          description: Transaction code of the Payment.
          maxLength: 20
          minLength: 0
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer of the invoice.
          format: date
          type: string
        sequenceNo:
          description: "When this PostingType is used to return the postings generated\
            \ by a batch request, the sequence number is used to relate to the Request's\
            \ sequence number."
          type: integer
        accountName:
          description: Name of the AR Account.
          maxLength: 1000
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    accountCriteria:
      description: Request to create a new AR Account
      properties:
        criteria:
          $ref: '#/components/schemas/aRAccountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    invoicesOnHold:
      description: Response after fetching on-hold invoices.
      properties:
        details:
          description: Account Invoice information.
          items:
            $ref: '#/components/schemas/aRAccountInvoicesPaymentsType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountsInvoicesPaymentsType:
      description: Account Invoice information.
      items:
        $ref: '#/components/schemas/aRAccountInvoicesPaymentsType'
      maxItems: 4000
      type: array
    aRAccountInvoicesPaymentsType:
      description: AR Account Invoices Information.
      properties:
        hotelId:
          description: Property where the Account exists.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        paymentDueDays:
          description: Number of days on which person can make payment.
          maxLength: 20
          minLength: 0
          type: string
        monthEndCalcYN:
          description: Month End Calculation.
          type: boolean
        summary:
          $ref: '#/components/schemas/aRBalanceType'
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
      type: object
    account:
      description: Response for the request to fetch details for an AR Account.
      properties:
        accountDetails:
          $ref: '#/components/schemas/aRAccountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    creditToInvoices:
      properties:
        criteria:
          $ref: '#/components/schemas/aRApplyPaymentCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRApplyPaymentCriteriaType:
      description: Criteria type for apply credits to Invoices. Requires a list of
        invoices to apply the credit.
      properties:
        account:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        invoices:
          description: AR Invoice to which the payment will be applied.
          items:
            $ref: '#/components/schemas/aRPaymentInvoicesType_inner'
          maxItems: 4000
          type: array
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        applyType:
          $ref: '#/components/schemas/aRApplyType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    aRAccountCriteriaType:
      description: Criteria type for an AR Account.
      properties:
        hotelId:
          description: Property where the AR Account exists. This is required.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: Account Number for the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountName:
          description: Account Name for the AR Account.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    aRPaymentInvoicesType:
      description: AR Invoice to which the payment will be applied.
      items:
        $ref: '#/components/schemas/aRPaymentInvoicesType_inner'
      maxItems: 4000
      type: array
    aRApplyType:
      description: Apply payment Selectively to the Invoices included.
      enum:
      - Default
      - OldestInvoice
      - ApplyToInvoices
      - ApplySelectivelyToInvoices
      type: string
    cashierId:
      description: The Cashier ID of the Cashier who is currently processing the transaction(s).
      type: number
    arCreditCardPaymentsToTransfer:
      description: Request to transfer AR Credit Card payments.
      properties:
        criteria:
          $ref: '#/components/schemas/transferARCreditCardPaymentsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transferARCreditCardPaymentsType:
      description: Transfer AR Credit Card payment information.
      properties:
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: Reference Text for the payment.
          maxLength: 2000
          minLength: 0
          type: string
        transactionNo:
          description: Transaction number of the payments to be transfered.
          items:
            type: number
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    arChargesPostingCriteria:
      description: "Request to post charges to an existing invoice, when the functionality\
        \ is available. If the invoice should not be modified or if the folio should\
        \ not be modified,based on other functionalities, then the charges cannot\
        \ be posted to the invoice."
      properties:
        criteria:
          $ref: '#/components/schemas/aRChargesPostingCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRChargesPostingCriteriaType:
      description: The charges which have to be posted.
      properties:
        hotelId:
          description: Property where the charges are to be posted.
          maxLength: 20
          minLength: 0
          type: string
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        account:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        invoice:
          $ref: '#/components/schemas/aRInvoiceType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        overrideCreditHoldCheck:
          type: boolean
      type: object
    chargesCriteriaType:
      description: Collection of Charges to be posted.
      items:
        $ref: '#/components/schemas/chargeCriteriaType'
      maxItems: 4000
      type: array
    chargeCriteriaType:
      description: Criteria information for posting a charge.
      properties:
        transactionCode:
          description: Transaction Code to post.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Article ID.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postingQuantity:
          description: Quantity to post to the folio.
          type: integer
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        checkNumber:
          description: Indicates the Cheque number.
          maxLength: 200
          minLength: 0
          type: string
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        applyRoutingInstructions:
          description: Apply room routing when making this posting.
          type: boolean
        usePackageAllowance:
          description: Use the applicable package allowance when making this posting.
          type: boolean
        autoPosting:
          description: True indicates the Transaction Code is allowed to be posted
            automatically.
          type: boolean
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        covers:
          description: POS covers.Api will only accept numeric values for Covers and
            if decimal values are passed will be ignored and rounded
          maxLength: 10
          minLength: 0
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    accountComment:
      description: Request to create a Comment for an Account.
      properties:
        commentInfo:
          $ref: '#/components/schemas/aRAccountCommentCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountCommentCriteriaType:
      description: The comments on the AR Account.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        hotelId:
          description: The resort where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: Account Number for the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    arCompressInvoices:
      description: Request to compress two or more invoices for an Account
      properties:
        criteria:
          $ref: '#/components/schemas/aRCompressInvoicesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRCompressInvoicesType:
      description: "Criteria type compressing invoices i.e grouping multiple invoices\
        \ into one,for an Account."
      properties:
        account:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        invoices:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        reference:
          description: Reference Text for the Master Invoice which will be created.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: Remarks for the Master Invoice which will be created.
          maxLength: 2000
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        folioTypeName:
          description: Folio Type for the Master Invoice which will be created.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    compressedARInvoices:
      description: Response for the request to compress two or more invoices.
      properties:
        invoice:
          $ref: '#/components/schemas/aRInvoiceType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    arAccountCopy:
      description: Request to copy AR Account
      properties:
        criteria:
          $ref: '#/components/schemas/copyARAccountCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyARAccountCriteriaType:
      description: Criteria for copying AR account.
      properties:
        targetHotels:
          description: Hotel code.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sourceAccount:
          $ref: '#/components/schemas/aRAccountCriteriaType'
      type: object
    accountFixedCharge:
      description: Request to create a Fixed Charge for an Account.
      properties:
        fixedChargeInfo:
          $ref: '#/components/schemas/aRAccountFixedChargeCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountFixedChargeCriteriaType:
      description: The traces on the AR Account.
      properties:
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        hotelId:
          description: The resort where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    arFolioPrinters:
      description: "Response to the request to fetch the Folio Printers applicable\
        \ for a Folio, based on the"
      properties:
        printers:
          $ref: '#/components/schemas/folioPrintersType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    folioPrintersType:
      description: List of Folio Printers.
      properties:
        folioTypeName:
          description: Name of the Folio Type.
          maxLength: 200
          minLength: 0
          type: string
        printer:
          description: Folio Printer Information.
          items:
            $ref: '#/components/schemas/folioPrinterType'
          maxItems: 4000
          type: array
      type: object
    folioPrinterType:
      description: Information about a Printer which can be used to print a Folio.
      properties:
        printerName:
          description: Description of the Printer
          maxLength: 2000
          minLength: 0
          type: string
        device:
          description: The Printer Device name.
          maxLength: 200
          minLength: 0
          type: string
        folioType:
          description: The Folio Type for which this printer is being used.
          maxLength: 2000
          minLength: 0
          type: string
        folioQueueName:
          description: Folio Queue name for which this printer is being used.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    arInvoice:
      description: Request to create a new Invoice for an Account.
      properties:
        invoice:
          $ref: '#/components/schemas/createARInvoiceCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createARInvoiceCriteriaType:
      description: Criteria to Create a new AR Invoice.
      properties:
        folioNameValue:
          description: Custom Folio Name Value Information to be saved
          items:
            $ref: '#/components/schemas/nameValueHeaderDetailType'
          maxItems: 4000
          type: array
        account:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        charges:
          description: Collection of Charges to be posted.
          items:
            $ref: '#/components/schemas/chargeCriteriaType'
          maxItems: 4000
          type: array
        reference:
          description: User-defined invoice reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined invoice remark.
          maxLength: 2000
          minLength: 0
          type: string
        market:
          description: Invoice market code.
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          description: Invoice room class code.
          maxLength: 20
          minLength: 0
          type: string
        source:
          description: Invoice source code.
          maxLength: 20
          minLength: 0
          type: string
        fiscalFolioInfo:
          $ref: '#/components/schemas/fiscalServiceType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        overrideCreditHoldCheck:
          type: boolean
        reason:
          $ref: '#/components/schemas/folioReasonType'
      type: object
    nameValueHeaderDetailType:
      description: Name value details collected before Folio Settlement
      properties:
        nameValueHeader:
          $ref: '#/components/schemas/nameValueBaseSearchType'
        nameValueDetails:
          $ref: '#/components/schemas/nameValueDetailType'
      type: object
    nameValueBaseSearchType:
      description: Contains name value information search criteria.
      properties:
        hotelId:
          description: Specifies the hotel code.
          maxLength: 20
          minLength: 0
          type: string
        moduleName:
          $ref: '#/components/schemas/nameValueModuleType'
        nameValueType:
          $ref: '#/components/schemas/nameValueTypeType'
        sequence:
          $ref: '#/components/schemas/uniqueID_Type'
        configName:
          $ref: '#/components/schemas/customNameValueConfigType'
      type: object
    nameValueModuleType:
      enum:
      - Reservation
      - Folio
      - Profile
      - Fintrix
      type: string
    nameValueTypeType:
      enum:
      - ReservationOptions
      - AfterSettlement
      - BeforeSettlement
      - AfterPayment
      - ProfileOptions
      type: string
    customNameValueConfigType:
      description: Italian Lottery Number.
      enum:
      - ItalianFattura
      - Folio
      - FinancialTransaction
      - TaiwanInvoice
      - SaudiCustomerType
      - ItalianLotteryNumber
      type: string
    nameValueDetailType:
      description: Detailed information returned during name value search.
      properties:
        nameValues:
          description: List of name value pairs.
          items:
            $ref: '#/components/schemas/nameValueType'
          maxItems: 4000
          type: array
      type: object
    nameValuesType:
      description: List of name value pairs.
      items:
        $ref: '#/components/schemas/nameValueType'
      maxItems: 4000
      type: array
    nameValueType:
      description: Contains name value pair.
      properties:
        name:
          description: Contains unique key which represents for record field.
          maxLength: 100
          minLength: 0
          type: string
        value:
          description: Contains value for the record/column.
          maxLength: 4000
          minLength: 0
          type: string
        formatString:
          description: Contains format string for values.
          maxLength: 100
          minLength: 0
          type: string
        dataType:
          $ref: '#/components/schemas/nameValueDataTypeType'
        origin:
          $ref: '#/components/schemas/nameValueOriginType'
        usageInstruction:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    nameValueDataTypeType:
      enum:
      - String
      - Number
      - Date
      - Datetime
      - Time
      - Integer
      type: string
    nameValueOriginType:
      description: Contains origin details.
      properties:
        originName:
          $ref: '#/components/schemas/nameValueModuleType'
        destination:
          description: Contains destination column for Origin.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    fiscalServiceType:
      description: Generate Fiscal Folio Criteria type to be used for fiscal folio
        generation
      properties:
        fiscalTerminal:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          maxLength: 40
          minLength: 0
          type: string
        invoiceCurrencyCode:
          description: Fiscal Invoicing Currency code to be used by the Fiscal Service.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          $ref: '#/components/schemas/fiscalFolioInstruction'
        folioQueueName:
          $ref: '#/components/schemas/folioQueueType'
        folioSeqId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    fiscalFolioInstruction:
      description: Action to generate Offline folio when no reponse is received from
        fiscal service.
      enum:
      - Retry
      - New
      - Void
      - Offline
      type: string
    folioQueueType:
      description: List of charges that will be posted against the transaction code
        based from the test criteria.
      properties:
        folioType:
          description: Folio Type to be assigned to generated folio. This is a country
            requirement.
          maxLength: 100
          minLength: 0
          type: string
        queueName:
          description: Folio Queue name.
          maxLength: 2000
          minLength: 0
          type: string
        generateFiscalFolio:
          description: Fiscal folio flag to call fiscal folio web service after folio
            generation.
          type: boolean
      type: object
    arInvoiceDetails:
      description: Response to the request to create an invoice for an Account.
      properties:
        invoice:
          description: A collection of AR Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    statementsToBeGenerated:
      description: "Operation to generate AR Statements. This will validate and check\
        \ if there exists any invoices to be included in the Statement based on the\
        \ criteria used. If Statement Numbering is used, this will return a statement\
        \ number to use in report as well as report sequence id to identify statement's\
        \ invoices."
      properties:
        criteria:
          $ref: '#/components/schemas/aRGenerateStatementCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRGenerateStatementCriteriaType:
      description: Criteria to process AR Printed Statements - create history and
        update invoices.
      properties:
        statements:
          description: Details of printed Statements received by Fetch Operation and
            sent to be printed. Statements type includes report sequence number and
            report file name.
          items:
            $ref: '#/components/schemas/aRStatementType'
          maxItems: 4000
          type: array
        statementCriteria:
          $ref: '#/components/schemas/aRStatementCriteriaType'
      type: object
    aRStatementCriteriaType:
      description: Statements criteria for AR Accounts.
      properties:
        filterDate:
          $ref: '#/components/schemas/dateRangeType'
        statementText:
          description: Text which will be printed on the Invoice.
          maxLength: 2000
          minLength: 0
          type: string
        inclZero:
          description: Flag to indicate if Zero Balances Invoices are to be included
            in the Statement.
          type: boolean
        inclPrinted:
          description: Flag to indicate if Previousely Printed Invoices are to be
            included in the Statement. This is based on the Functionality for AR PRINTED
            INVOICES.
          type: boolean
        balanceForwardDate:
          description: "The date specified in this field determines the balance forward\
            \ date and balance forward total that is printed on the statement. (A\
            \ balance forward shows the net amount for all invoices and payments (debits\
            \ and credits) prior to the balance forward date as a single total, rather\
            \ than itemizing them individually on the statement.)"
          format: date
          type: string
        inclFolios:
          description: Flag to indicate if the associated Folios for the Invoices
            are to be included along with the the Statement.
          type: boolean
      type: object
    accountTrace:
      description: Request to create a Trace for an Account.
      properties:
        traceInfo:
          $ref: '#/components/schemas/aRAccountTraceCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAccountTraceCriteriaType:
      description: The traces on the AR Account.
      properties:
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        traceText:
          description: The information this trace contains.
          type: string
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        hotelId:
          description: The resort where the AR Account exists.
          maxLength: 20
          minLength: 0
          type: string
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    invoicePayment:
      properties:
        details:
          description: Account Invoice information.
          items:
            $ref: '#/components/schemas/aRAccountInvoicesPaymentsType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    invoice:
      description: Response to the request to change invoice
      properties:
        invoiceDetails:
          $ref: '#/components/schemas/aRInvoiceCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRInvoiceCriteriaType:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        additionalFilter:
          $ref: '#/components/schemas/aRInvoiceCriteriaType_additionalFilter'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    arAgingCycles:
      description: Response for Fetch AR Aging Cycles.
      properties:
        agingCycles:
          description: Collections of AR Aging Cycles.
          items:
            $ref: '#/components/schemas/aRAgingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAgingCyclesType:
      description: Collections of AR Aging Cycles.
      items:
        $ref: '#/components/schemas/aRAgingType'
      maxItems: 4000
      type: array
    batchChargesToPost:
      description: Request for posting a charge in a batch to list of accounts.
      properties:
        criteria:
          $ref: '#/components/schemas/aRPostChargesInBatchCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRPostChargesInBatchCriteriaType:
      description: Criteria for posting a charge to list of accounts.
      properties:
        accountIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        chargeInfo:
          $ref: '#/components/schemas/chargeCriteriaType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    transferDirectBillsToAr:
      description: Request for Transfer Directs bill to AR.
      properties:
        criteria:
          $ref: '#/components/schemas/transferDirectBillsToArCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transferDirectBillsToArCriteriaType:
      description: Provides information about Transfer Direct Bills To Ar Criteria
        Type.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        invoiceNo:
          description: List of Invoice Numbers.
          items:
            type: number
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    invoiceAppliedPayments:
      description: "Response to the applied payment details,Contains errors or warnings\
        \ if any."
      properties:
        details:
          description: Applied Payment record.
          items:
            $ref: '#/components/schemas/aRAppliedPaymentType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRAppliedPaymentsType:
      description: Applied Payment record.
      items:
        $ref: '#/components/schemas/aRAppliedPaymentType'
      maxItems: 4000
      type: array
    aRAppliedPaymentType:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        appliedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        paymentTrxNo:
          description: Transaction no of the Payment.
          type: number
      type: object
    arPaymentsToBeCreated:
      description: Request to post a payment to an AR Account and apply the payment
        to Invoices..
      properties:
        criteria:
          $ref: '#/components/schemas/aRPaymentsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRPaymentsCriteriaType:
      properties:
        payment:
          items:
            $ref: '#/components/schemas/aRPaymentCriteria'
          maxItems: 4000
          type: array
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    aRPaymentCriteria:
      description: Criteria for applying payments to invoices or posting an unallocated
        payment to an AR Account.
      properties:
        hotelId:
          description: Property code.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/cashieringPaymentMethodType'
        postingAmount:
          $ref: '#/components/schemas/currencyAmountType'
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        comments:
          description: User Defined Comments. Used for Deposit Payment postings.
          maxLength: 2000
          minLength: 0
          type: string
        applyCCSurcharge:
          description: "Flag to indicate if Credit Card Surcharge has to be applied\
            \ to this payment, when the functionality for Credit Card Surcharge is\
            \ available."
          type: boolean
        manualPaymentTaxInfo:
          $ref: '#/components/schemas/paymentTaxType'
        creditablePaymentTaxes:
          description: Payment Tax record.
          items:
            $ref: '#/components/schemas/paymentTaxType'
          maxItems: 4000
          type: array
        terminalId:
          description: Applicable for chip and pin. The ID of the terminal where the
            chip and pin device is connected and where the payment is made.
          type: string
        overrideInsufficientCC:
          description: Flag to allow a rebate by Credit Card
          type: boolean
        changeDueAmount:
          $ref: '#/components/schemas/currencyAmountType'
        compRedemptions:
          description: Information regarding Complimentary Bucket Redemption object.
          items:
            $ref: '#/components/schemas/redemptionType'
          maxItems: 4000
          type: array
        overrideARCreditLimit:
          description: Flag to override account receivable credit limit
          type: boolean
        applyCurrencyTaxes:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        vATOffset:
          description: "Flag to indidcate if currency taxes need to be applied or\
            \ not. For ex, in case of Chile, it depends upon nationality of the guest."
          type: boolean
        action:
          $ref: '#/components/schemas/postPaymentActionType'
        prepaidCardRedemptions:
          description: A prepaid redemption info object to be used for posting a payment.
          items:
            $ref: '#/components/schemas/prepaidCardRedemptionType'
          maxItems: 1000
          type: array
        folioWindowNo:
          type: integer
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
        account:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        invoices:
          description: AR Invoice to which the payment will be applied.
          items:
            $ref: '#/components/schemas/aRPaymentInvoicesType_inner'
          maxItems: 4000
          type: array
        applyType:
          $ref: '#/components/schemas/aRApplyType'
        sequenceNo:
          description: Sequence of the payment in a batch request.
          type: integer
        generateFiscalPayload:
          description: Flag to indicate if a fiscal payload should be generated for
            the Payment.
          type: boolean
        fiscalTerminalId:
          description: Applicable for Fiscal Terminal. The ID of the terminal where
            the fiscal device is connected.
          type: string
      type: object
    cashieringPaymentMethodType:
      properties:
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        folioView:
          type: integer
        authorizationApproval:
          $ref: '#/components/schemas/authorizationInfoType'
        track2Data:
          description: Track2 data for the card which would be sent to the CC vendor
            as part of the authorization.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    authorizationInfoType:
      properties:
        approvalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: The approval code authenticates the authorization.
          maxLength: 20
          minLength: 0
          type: string
        originalAuthSequence:
          description: Unique Authorization Sequence for the authorization and settlement.
          type: integer
        vendorTranId:
          description: Vendor transaction id for the authorization.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    paymentTaxType:
      description: Information regarding payments made which have Payment Tax.
      properties:
        taxInvoiceNo:
          description: The Tax Invoice for this payment.
          maxLength: 20
          minLength: 0
          type: string
        paymentType:
          $ref: '#/components/schemas/paymentTax'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        taxableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        nonTaxableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        availableCredit:
          $ref: '#/components/schemas/currencyAmountType'
        paymentDate:
          description: The Payment Invoice date
          format: date
          type: string
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date of the Payment.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code of the Payment.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
      type: object
    paymentTax:
      description: The types of Payment Tax transactions.
      enum:
      - Deposit
      - FrontOffice
      - CreditNote
      - CityLedger
      - AccountsReceivables
      - NonVat
      type: string
    paymentTaxesType:
      description: Payment Tax record.
      items:
        $ref: '#/components/schemas/paymentTaxType'
      maxItems: 4000
      type: array
    compRedemptionsType:
      description: Information regarding Complimentary Bucket Redemption object.
      items:
        $ref: '#/components/schemas/redemptionType'
      maxItems: 4000
      type: array
    redemptionType:
      description: Redemption information.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        code:
          description: The associated redemption code.
          maxLength: 20
          minLength: 0
          type: string
        supplement:
          description: Additional information regarding the redemption.
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description of the Complimentary Bucket Redemption.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the Complimentary Bucket Redemption.
          maxLength: 20
          minLength: 0
          type: string
        availableAmount:
          $ref: '#/components/schemas/currencyAmountType'
        transactionNo:
          description: Transaction Number of the Complimentary Bucket Redemption.
          type: number
        approvalCode:
          description: Approval Code of the Complimentary Bucket Redemption.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    postPaymentActionType:
      description: Prepaid Card Redemption Action.
      enum:
      - Billing
      - Settlefolio
      - Deposit
      - Compredemption
      - Prepaidcardredemption
      type: string
    prepaidCardRedemptionsType:
      description: A prepaid redemption info object to be used for posting a payment.
      items:
        $ref: '#/components/schemas/prepaidCardRedemptionType'
      maxItems: 1000
      type: array
    prepaidCardRedemptionType:
      description: Redemption information.
      properties:
        cardNo:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        pin:
          description: Prepaid card number.
          maxLength: 80
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: The associated redemption transaction code.
          maxLength: 20
          minLength: 0
          type: string
        reference:
          description: Additional information regarding the redemption.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    arPayments:
      description: Response notifying if the posting of a payment to an AR Account.
      properties:
        payments:
          description: A collection of AR Payments.
          items:
            $ref: '#/components/schemas/aRPaymentType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    statementHistory:
      description: Statement History.
      properties:
        aRStatementHistory:
          items:
            $ref: '#/components/schemas/aRStatementHistoryType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRStatementHistoryType:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        statementNo:
          description: "When using Statement Numbering, a unique number is associated\
            \ to the Statement."
          type: integer
      type: object
    reversePayment:
      description: Request for reverse AR payment
      properties:
        arPayment:
          $ref: '#/components/schemas/reversePaymentCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    reversePaymentCriteriaType:
      description: Criteria type for an AR Account.
      properties:
        hotelId:
          description: Property where the AR Account exists. This is required.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountNo:
          description: Account Number for the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountName:
          description: Account Name for the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        transactionNo:
          type: number
      type: object
    arCreditCardPayments:
      description: Response after fetching AR credit card payments.
      properties:
        aRCreditCardPaymentsDetails:
          $ref: '#/components/schemas/aRCreditCardPaymentsInfoType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRCreditCardPaymentsInfoType:
      description: Collection of AR Credit Card payments Details.
      properties:
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        aRCreditCardPayments:
          description: AR Credit Card Payments info .
          items:
            $ref: '#/components/schemas/aRCreditCardPaymentInfoType'
          maxItems: 4000
          type: array
      type: object
    aRCreditCardPaymentInfoType:
      description: AR Credit Card payment information.
      properties:
        guestName:
          description: Guest Name .
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        postingDate:
          description: Date of posting.
          format: date
          type: string
        reference:
          description: Reference Text for the payment.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: Remarks for payment.
          maxLength: 2000
          minLength: 0
          type: string
        folioNo:
          description: "The Folio number of this posting, if there was a Folio already\
            \ generated."
          type: number
        fiscalFolioNo:
          description: Bill Number returned by the Fiscal Printer.
          type: number
        transactionNo:
          description: Transaction number of the payment.
          type: number
        transactionDate:
          description: Transaction Date of the payment.
          format: date
          type: string
      type: object
    unlinkInvoiceFromStatement:
      description: Request to unlink invoice from statement
      properties:
        criteria:
          $ref: '#/components/schemas/unlinkStatementCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    unlinkStatementCriteriaType:
      description: Criteria for unlinking invoice from statement.
      properties:
        invoiceTrxNoList:
          description: Transaction Number .
          items:
            type: number
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    invoiceTrxNoList:
      description: Transaction Number .
      items:
        type: number
      maxItems: 4000
      type: array
    invoicesPayments:
      description: Response for the fetch invoice and payments details request.
      properties:
        details:
          description: Account Invoice information.
          items:
            $ref: '#/components/schemas/aRAccountInvoicesPaymentsType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    invoicePostings:
      description: Response to the request to fetch postings for an invoice
      properties:
        invoicePostingsDetails:
          description: Invoice posting detail.
          items:
            $ref: '#/components/schemas/aRInvoicePostingType'
          maxItems: 4000
          type: array
        trxCodesInfo:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRInvoicePostingsType:
      description: Invoice posting detail.
      items:
        $ref: '#/components/schemas/aRInvoicePostingType'
      maxItems: 4000
      type: array
    aRInvoicePostingType:
      description: Posting details.
      properties:
        referenceTransactionNo:
          description: Generate transaction number for the Posting.
          type: number
        remark:
          description: Posting remarks.
          maxLength: 2000
          minLength: 0
          type: string
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        checkCount:
          description: Check number count for the posting.
          maxLength: 2000
          minLength: 0
          type: string
        postedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        quantity:
          description: Indicates Quantity.
          type: number
        transactionType:
          $ref: '#/components/schemas/cashieringTransactionTypeType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        articleCode:
          description: Information regarding the Article(Using Articles Functionality)
            of this transaction.
          maxLength: 20
          minLength: 0
          type: string
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        paidOut:
          description: Indicates if this transaction is a paid out transaction.
          type: boolean
        arrangementCode:
          description: Corrected arrangement code from the package associated to this
            transaction.
          maxLength: 20
          minLength: 0
          type: string
        groupTypeInfo:
          $ref: '#/components/schemas/postingGroupType'
        rateCode:
          description: Rate code associated to this transaction.
          maxLength: 20
          minLength: 0
          type: string
        compRedemptionCode:
          description: Comp redemption code assiciated to the transaction.
          maxLength: 20
          minLength: 0
          type: string
        updateInfo:
          $ref: '#/components/schemas/aRInvoicePostingType_updateInfo'
        fbaCertificate:
          description: Flag indicates that the posting is Flexible Benefits Awards
            Certificate
          type: boolean
        taxInvoiceNo:
          description: Tax invoice number generated by payment tax.
          maxLength: 20
          minLength: 0
          type: string
        serviceRecovery:
          description: Flag to indicates service recovery
          type: boolean
        compPostingsInfo:
          $ref: '#/components/schemas/compPostingsType'
        financialTransactionIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        exchange:
          $ref: '#/components/schemas/exchangeAmounts'
        approvalCode:
          description: Approval code of the posting.
          maxLength: 20
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the posting.
          maxLength: 20
          minLength: 0
          type: string
        stampDuty:
          description: Flag to identify a Stamp Duty Transaction.
          type: boolean
        transactionNo:
          description: Unique Transaction Identifier.
          type: number
        transactionDate:
          description: Transaction Date.
          format: date
          type: string
        transactionCode:
          description: Billing Transaction Code.
          maxLength: 200
          minLength: 0
          type: string
        transactionDescription:
          description: Billing Transaction Description.
          maxLength: 2000
          minLength: 0
          type: string
        transactionAmount:
          description: The amount of the transaction.
          type: number
        postingDate:
          description: Date and time of posting.
          format: date
          type: string
        revenueDate:
          description: The date on which the transaction has its revenue effect.
          format: date
          type: string
        receiptNo:
          description: "The receipt number of the transaction, if there is a receipt\
            \ generated."
          type: number
        roundingDifferenceTrx:
          description: Indicator to determine if the posting was a posting for the
            Rounding Difference.
          type: boolean
        commissionable:
          description: Indicator to determine if the transaction is commissionable.
          type: boolean
        reversePaymentTransactionNo:
          description: Reverse payment transaction unique identifier.
          type: number
        canAdjustInvoice:
          description: Indicator to determine if the transaction can be adjusted.
          type: boolean
        depositTransactionId:
          description: Tax Service Accounting Codes used.
          maxLength: 40
          minLength: 0
          type: string
        groupByCount:
          description: "When some SummaryPostingsGroupBy element is send as request\
            \ ,then this element will represent how many transactions rolled up into\
            \ this Summary Posting Type."
          type: number
        creditInvoiceGuestName:
          description: "Guest Name of the Credit Invoice. For other invoices, this\
            \ element will be empty."
          maxLength: 80
          minLength: 0
          type: string
      type: object
    cashieringTransactionTypeType:
      description: Wrapper Transaction Type.
      enum:
      - Revenue
      - Payment
      - Wrapper
      type: string
    postingGroupType:
      description: "Transaction group information. Ever posting could represent a.\
        \ Regular transaction b. Group header - has Group Id, Count, Descripton and\
        \ Includes Group Memebers elements c. Group transaction - has SubGroupId element\
        \ pointing to Group Header Id"
      properties:
        groupId:
          description: Group Id.
          maxLength: 20
          minLength: 0
          type: string
        groupCount:
          description: Number of transactions in group.
          type: integer
        groupDescription:
          description: Group Description.
          maxLength: 2000
          minLength: 0
          type: string
        subGroupId:
          description: Indicates to which group transaction belongs.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    compPostingsType:
      description: Collection of comp postings.
      properties:
        authorizer:
          description: Authorizer name of the Comp Account.
          maxLength: 200
          minLength: 0
          type: string
        approvalStatus:
          description: Approval status of the comp account.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    exchangeAmounts:
      description: Converted values for the Exchange Currency requested.
      properties:
        debitAmount:
          $ref: '#/components/schemas/currencyAmountType'
        creditAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    invoices:
      description: Request to close invoice(s)
      properties:
        invoices:
          description: Criteria for searching Invoices.
          items:
            $ref: '#/components/schemas/aRInvoiceCriteriaType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRInvoicesCriteriaType:
      description: Criteria for searching Invoices.
      items:
        $ref: '#/components/schemas/aRInvoiceCriteriaType'
      maxItems: 4000
      type: array
    arInvoicesAccount:
      description: Request to change AR invoice(s) account in AR.
      properties:
        criteria:
          $ref: '#/components/schemas/changeARInvoicesAccountCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeARInvoicesAccountCriteriaType:
      description: Criteria for changing AR invoice(s) account.
      properties:
        invoices:
          description: AR Invoice(s) to be changed.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        toAccount:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    arOldBalances:
      description: Request to Post AR Old Balances
      properties:
        oldBalances:
          description: Collections of Old Balance Postings
          items:
            $ref: '#/components/schemas/aROldBalancePostingType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aROldBalancePostingsType:
      description: Collections of Old Balance Postings
      items:
        $ref: '#/components/schemas/aROldBalancePostingType'
      maxItems: 4000
      type: array
    aROldBalancePostingType:
      description: AR Old Balances Base Posting Type.
      properties:
        accountId:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        posting:
          $ref: '#/components/schemas/aROldBalanceChargeType'
        aging:
          $ref: '#/components/schemas/aRAgingInfoType'
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    aROldBalanceChargeType:
      description: AR Old Balances Single Posting Type.
      properties:
        postingReference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        postingRemark:
          description: User-defined Supplement.
          maxLength: 2000
          minLength: 0
          type: string
        date:
          description: Date of the Posting.
          format: date
          type: string
        folioNo:
          description: "The Folio number of this posting, if there was a Folio entered."
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        taxCodes:
          description: Values of atmost 20 Taxes entered.
          items:
            $ref: '#/components/schemas/aRTaxCodeType'
          maxItems: 20
          type: array
        paid:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRTaxCodesType:
      description: Values of atmost 20 Taxes entered.
      items:
        $ref: '#/components/schemas/aRTaxCodeType'
      maxItems: 20
      type: array
    aRTaxCodeType:
      description: AR Old Balances Single Posting Type - Tax and Transaction Code
        details.
      properties:
        taxCode:
          description: Tax Code number
          maximum: 20
          minimum: 1
          type: integer
        transactionCode:
          description: Transaction Code Value
          maxLength: 20
          minLength: 0
          type: string
        taxAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    profileAging:
      description: Response to the request to fetch the total Aging information for
        a Profile.
      properties:
        aging:
          $ref: '#/components/schemas/aRProfileAgingInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRProfileAgingInfoType:
      description: Aging information for a profile. Includes information for the profile
        for all accounts across properties.
      properties:
        totalProfileAging:
          $ref: '#/components/schemas/aRAgingInfoType'
        hotel:
          description: "Aging bucket information for the Property, based on the criteria\
            \ selected."
          items:
            $ref: '#/components/schemas/aRProfileAgingInfoType_hotel_inner'
          maxItems: 4000
          type: array
      type: object
    profileYearView:
      description: Response to the request to fetch the total Year View information
        for a Profile.
      properties:
        aRProfileYearView:
          $ref: '#/components/schemas/aRProfileYearViewInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRProfileYearViewInfoType:
      description: Year View information for a profile. Includes information for the
        profile for all accounts across properties.
      properties:
        totalProfileYearView:
          $ref: '#/components/schemas/aRYearViewInfoType'
        hotel:
          description: "Year View information for the Property, based on the criteria\
            \ selected."
          items:
            $ref: '#/components/schemas/aRProfileYearViewInfoType_hotel_inner'
          maxItems: 4000
          type: array
      type: object
    invoicesAndPaymentsToTransfer:
      description: Request for transferring invoice(s) in AR.
      properties:
        criteria:
          $ref: '#/components/schemas/transferARInvoicesCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    transferARInvoicesCriteriaType:
      description: Criteria for transferring invoice(s) to another account.
      properties:
        invoicesTransferType:
          description: AR Invoice(s) to be transferred.
          items:
            $ref: '#/components/schemas/aRInvoiceType'
          maxItems: 4000
          type: array
        fromAccount:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        toAccount:
          $ref: '#/components/schemas/aRAccountCriteriaType'
        transferAmount:
          $ref: '#/components/schemas/currencyAmountType'
        remarks:
          description: User defined Remarks for this transfer
          maxLength: 200
          minLength: 0
          type: string
        overrideCreditHoldCheck:
          type: boolean
        cashierId:
          description: The Cashier ID of the Cashier who is currently processing the
            transaction(s).
          type: number
      type: object
    transferPostings:
      description: Request for transferring invoice posting(s)in AR.
      properties:
        criteria:
          $ref: '#/components/schemas/aRTransferPostingsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    aRTransferPostingsCriteriaType:
      description: ""
      properties:
        fromInvoice:
          $ref: '#/components/schemas/aRTransferPostingsCriteriaType_fromInvoice'
        toInvoice:
          $ref: '#/components/schemas/aRTransferPostingsCriteriaType_toInvoice'
      type: object
    folioReasonType:
      description: Type for Folio Reason and Text.
      properties:
        code:
          description: The Folio Reason Code.Currently Applicable only for Credit
            Bills.
          maxLength: 20
          minLength: 0
          type: string
        text:
          description: The Folio Reason Text.Currently Applicable only for Credit
            Bills.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
      type: object
    folioTextsType_inner:
      properties:
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
        row:
          description: Row number of the additional text.
          type: integer
      type: object
    resCommunicationType_telephones:
      description: List of Telephone Number Information
      properties:
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    resCommunicationType_emails:
      description: List of email address for the customer.
      properties:
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    aRAccountType_lastReminderInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        age:
          description: The minimum age(days) of the invoices to be included in the
            Reminder
          type: integer
        historyExists:
          description: Indicates that reminders history exists.
          type: boolean
      type: object
    aRAccountType_lastStatementInfo:
      description: Report History Type used as based type for Remiders and Statements
        History types.
      properties:
        reportName:
          description: Report Name.
          maxLength: 2000
          minLength: 0
          type: string
        reportFileName:
          description: Report file name when exists to allow report re-printing.
          maxLength: 2000
          minLength: 0
          type: string
        dateSent:
          description: The Reminder Letter name which is to be used for this Reminder
            based on the setup on the Account Type.
          format: date
          type: string
        statementNo:
          description: "When using Statement Numbering, a unique number is associated\
            \ to the Statement."
          type: integer
        historyExists:
          description: Indicates that statement history exists.
          type: boolean
      type: object
    aRPaymentInvoicesType_inner:
      description: Details of an AR Invoice.
      properties:
        hotelId:
          description: Property where the invoice exists.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        guestProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        age:
          description: The Aging age of the invoice
          type: integer
        guestName:
          description: Name of the Guest who consumed these transactions.
          maxLength: 200
          minLength: 0
          type: string
        originalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        payments:
          $ref: '#/components/schemas/currencyAmountType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        reference:
          description: User-defined posting reference.
          maxLength: 2000
          minLength: 0
          type: string
        remark:
          description: User-defined posting remark.
          maxLength: 2000
          minLength: 0
          type: string
        adjusted:
          type: boolean
        parentInvoiceNo:
          type: number
        compressed:
          type: boolean
        compressedDate:
          format: date
          type: string
        transferredOut:
          type: boolean
        transferredIn:
          type: boolean
        market:
          $ref: '#/components/schemas/marketCodeInfoType'
        roomClass:
          $ref: '#/components/schemas/roomClassCodeInfoType'
        source:
          $ref: '#/components/schemas/sourceCodeInfoType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        cashierInfo:
          $ref: '#/components/schemas/cashierInfoType'
        transactionInfo:
          $ref: '#/components/schemas/trxInfoType'
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        addresseeInfo:
          $ref: '#/components/schemas/profileInfoType'
        allowPartialTransferYn:
          description: Flag to check Partail Transfer Allowed.
          type: boolean
        printed:
          description: Flag to check Invoice Statement is Printed.
          type: boolean
        printedDate:
          description: Invoice Statement Printed Date.
          format: date
          type: string
        storedFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedFolioName:
          description: Name of the Stored Folio.
          maxLength: 2000
          minLength: 0
          type: string
        storedDebitFolioId:
          $ref: '#/components/schemas/uniqueID_Type'
        storedDebitFolioName:
          description: Name of the Stored Debit Folio.
          maxLength: 2000
          minLength: 0
          type: string
        folioTexts:
          description: "This stores the description for the type of tax calculation\
            \ especially with tax exemption, etc."
          items:
            $ref: '#/components/schemas/folioTextsType_inner'
          maxItems: 2
          type: array
        customNumbers:
          description: Unique Custom Numbers associated with this record.
          items:
            $ref: '#/components/schemas/customNumberType'
          maxItems: 5
          type: array
        fiscalResponseType:
          $ref: '#/components/schemas/fiscalResponseType'
        transactionNo:
          description: Unique Transaction Identifier of the Invoice.
          type: number
        transactionDate:
          description: Transaction Date of the invoice.
          format: date
          type: string
        status:
          description: Status of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of the invoice.
          maxLength: 20
          minLength: 0
          type: string
        folioNo:
          description: Folio Number.
          type: number
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
        fiscalBillNo:
          description: The Fiscal Bill number of this posting
          maxLength: 2000
          minLength: 0
          type: string
        folioTypeName:
          description: The name of the Folio Type used for the Folio Number sequence.
          maxLength: 100
          minLength: 0
          type: string
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioNoWithPrefix:
          description: The folio number with prefix value.
          maxLength: 200
          minLength: 0
          type: string
        invoiceType:
          $ref: '#/components/schemas/aRInvoiceCategory'
        statementNo:
          description: Statementno of the invoice.
          type: integer
        revenueDate:
          description: Revenue date ID of the invoice.
          format: date
          type: string
        closeDate:
          description: Close date of the invoice.
          format: date
          type: string
        postingDate:
          description: Posting date of the invoice.
          format: date
          type: string
        transferDate:
          description: Transfer date of the invoice.
          format: date
          type: string
        canBeModified:
          description: Flag to indicate if postings or adjustments can be made to
            the invoice.
          type: boolean
        amountToApply:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    aRInvoiceCriteriaType_additionalFilter:
      description: To apply additional filter on the posting of an invoice
      properties:
        cashierId:
          description: Cashier Id of the Cashier.
          type: number
        transactionCode:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        transactionSubGroup:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        referenceWildCard:
          description: Filters the results for reference.
          maxLength: 2000
          minLength: 0
          type: string
        supplementWildCard:
          description: Filter the results for supplement.
          maxLength: 200
          minLength: 0
          type: string
        checkNumberWildCard:
          description: Lookup string which will try to match an existing Cheque number's.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    aRInvoicePostingType_updateInfo:
      description: Update info associated to this transaction.
      properties:
        updateDate:
          format: date
          type: string
        updateBy:
          type: string
      type: object
    aRProfileAgingInfoType_hotel_inner:
      properties:
        totalHotelAging:
          $ref: '#/components/schemas/aRAgingInfoType'
        accountAging:
          description: Information regarding the AR Account.
          items:
            $ref: '#/components/schemas/aRAccountType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property Code for the Aging information.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRProfileYearViewInfoType_hotel_inner:
      properties:
        totalHotelYearView:
          $ref: '#/components/schemas/aRYearViewInfoType'
        account:
          description: Information regarding the AR Account.
          items:
            $ref: '#/components/schemas/aRAccountType'
          maxItems: 4000
          type: array
        hotelId:
          description: Property Code for the Year Veiw information.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    aRTransferPostingsCriteriaType_fromInvoice:
      description: From Invoice and Invoice posting detail.
      properties:
        invoice:
          $ref: '#/components/schemas/aRInvoiceCriteriaType'
        invoicePostings:
          description: Invoice posting detail.
          items:
            $ref: '#/components/schemas/aRInvoicePostingType'
          maxItems: 4000
          type: array
      type: object
    aRTransferPostingsCriteriaType_toInvoice:
      description: To Invoice detail.
      properties:
        invoice:
          $ref: '#/components/schemas/aRInvoiceCriteriaType'
      type: object
x-original-swagger-version: "2.0"
