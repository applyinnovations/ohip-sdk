/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the AROldBalancePostingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AROldBalancePostingType{}

// AROldBalancePostingType AR Old Balances Base Posting Type.
type AROldBalancePostingType struct {
	AccountId *ARAccountCriteriaType `json:"accountId,omitempty"`
	Posting *AROldBalanceChargeType `json:"posting,omitempty"`
	Aging *ARAgingInfoType `json:"aging,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
}

// NewAROldBalancePostingType instantiates a new AROldBalancePostingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAROldBalancePostingType() *AROldBalancePostingType {
	this := AROldBalancePostingType{}
	return &this
}

// NewAROldBalancePostingTypeWithDefaults instantiates a new AROldBalancePostingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAROldBalancePostingTypeWithDefaults() *AROldBalancePostingType {
	this := AROldBalancePostingType{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AROldBalancePostingType) GetAccountId() ARAccountCriteriaType {
	if o == nil || IsNil(o.AccountId) {
		var ret ARAccountCriteriaType
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AROldBalancePostingType) GetAccountIdOk() (*ARAccountCriteriaType, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AROldBalancePostingType) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given ARAccountCriteriaType and assigns it to the AccountId field.
func (o *AROldBalancePostingType) SetAccountId(v ARAccountCriteriaType) {
	o.AccountId = &v
}

// GetPosting returns the Posting field value if set, zero value otherwise.
func (o *AROldBalancePostingType) GetPosting() AROldBalanceChargeType {
	if o == nil || IsNil(o.Posting) {
		var ret AROldBalanceChargeType
		return ret
	}
	return *o.Posting
}

// GetPostingOk returns a tuple with the Posting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AROldBalancePostingType) GetPostingOk() (*AROldBalanceChargeType, bool) {
	if o == nil || IsNil(o.Posting) {
		return nil, false
	}
	return o.Posting, true
}

// HasPosting returns a boolean if a field has been set.
func (o *AROldBalancePostingType) HasPosting() bool {
	if o != nil && !IsNil(o.Posting) {
		return true
	}

	return false
}

// SetPosting gets a reference to the given AROldBalanceChargeType and assigns it to the Posting field.
func (o *AROldBalancePostingType) SetPosting(v AROldBalanceChargeType) {
	o.Posting = &v
}

// GetAging returns the Aging field value if set, zero value otherwise.
func (o *AROldBalancePostingType) GetAging() ARAgingInfoType {
	if o == nil || IsNil(o.Aging) {
		var ret ARAgingInfoType
		return ret
	}
	return *o.Aging
}

// GetAgingOk returns a tuple with the Aging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AROldBalancePostingType) GetAgingOk() (*ARAgingInfoType, bool) {
	if o == nil || IsNil(o.Aging) {
		return nil, false
	}
	return o.Aging, true
}

// HasAging returns a boolean if a field has been set.
func (o *AROldBalancePostingType) HasAging() bool {
	if o != nil && !IsNil(o.Aging) {
		return true
	}

	return false
}

// SetAging gets a reference to the given ARAgingInfoType and assigns it to the Aging field.
func (o *AROldBalancePostingType) SetAging(v ARAgingInfoType) {
	o.Aging = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *AROldBalancePostingType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AROldBalancePostingType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *AROldBalancePostingType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *AROldBalancePostingType) SetCashierId(v float32) {
	o.CashierId = &v
}

func (o AROldBalancePostingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AROldBalancePostingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.Posting) {
		toSerialize["posting"] = o.Posting
	}
	if !IsNil(o.Aging) {
		toSerialize["aging"] = o.Aging
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	return toSerialize, nil
}

type NullableAROldBalancePostingType struct {
	value *AROldBalancePostingType
	isSet bool
}

func (v NullableAROldBalancePostingType) Get() *AROldBalancePostingType {
	return v.value
}

func (v *NullableAROldBalancePostingType) Set(val *AROldBalancePostingType) {
	v.value = val
	v.isSet = true
}

func (v NullableAROldBalancePostingType) IsSet() bool {
	return v.isSet
}

func (v *NullableAROldBalancePostingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAROldBalancePostingType(val *AROldBalancePostingType) *NullableAROldBalancePostingType {
	return &NullableAROldBalancePostingType{value: val, isSet: true}
}

func (v NullableAROldBalancePostingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAROldBalancePostingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


