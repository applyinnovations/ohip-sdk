/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARInvoicePostingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARInvoicePostingType{}

// ARInvoicePostingType Posting details.
type ARInvoicePostingType struct {
	// Approval code of the posting.
	ApprovalCode *string `json:"approvalCode,omitempty"`
	// Approval status of the posting.
	ApprovalStatus *string `json:"approvalStatus,omitempty"`
	// Corrected arrangement code from the package associated to this transaction.
	ArrangementCode *string `json:"arrangementCode,omitempty"`
	// Information regarding the Article(Using Articles Functionality) of this transaction.
	ArticleCode *string `json:"articleCode,omitempty"`
	// Indicator to determine if the transaction can be adjusted.
	CanAdjustInvoice *bool `json:"canAdjustInvoice,omitempty"`
	CashierInfo *CashierInfoType `json:"cashierInfo,omitempty"`
	// Check number count for the posting.
	CheckCount *string `json:"checkCount,omitempty"`
	// Check number for the posting.
	CheckNo *string `json:"checkNo,omitempty"`
	// Indicator to determine if the transaction is commissionable.
	Commissionable *bool `json:"commissionable,omitempty"`
	CompPostingsInfo *CompPostingsType `json:"compPostingsInfo,omitempty"`
	// Comp redemption code assiciated to the transaction.
	CompRedemptionCode *string `json:"compRedemptionCode,omitempty"`
	CreditAmount *CurrencyAmountType `json:"creditAmount,omitempty"`
	// Guest Name of the Credit Invoice. For other invoices, this element will be empty.
	CreditInvoiceGuestName *string `json:"creditInvoiceGuestName,omitempty"`
	DebitAmount *CurrencyAmountType `json:"debitAmount,omitempty"`
	// Tax Service Accounting Codes used.
	DepositTransactionId *string `json:"depositTransactionId,omitempty"`
	Exchange *ExchangeAmounts `json:"exchange,omitempty"`
	// Flag indicates that the posting is Flexible Benefits Awards Certificate
	FbaCertificate *bool `json:"fbaCertificate,omitempty"`
	// Unique Id that references an object uniquely in the system.
	FinancialTransactionIdList []UniqueIDType `json:"financialTransactionIdList,omitempty"`
	// When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.
	GroupByCount *float32 `json:"groupByCount,omitempty"`
	GroupTypeInfo *PostingGroupType `json:"groupTypeInfo,omitempty"`
	// Indicates if this transaction is a paid out transaction.
	PaidOut *bool `json:"paidOut,omitempty"`
	PostedAmount *CurrencyAmountType `json:"postedAmount,omitempty"`
	// Date and time of posting.
	PostingDate *string `json:"postingDate,omitempty"`
	Price *CurrencyAmountType `json:"price,omitempty"`
	// Indicates Quantity.
	Quantity *float32 `json:"quantity,omitempty"`
	// Rate code associated to this transaction.
	RateCode *string `json:"rateCode,omitempty"`
	// The receipt number of the transaction, if there is a receipt generated.
	ReceiptNo *float32 `json:"receiptNo,omitempty"`
	// User-defined posting reference.
	Reference *string `json:"reference,omitempty"`
	// Generate transaction number for the Posting.
	ReferenceTransactionNo *float32 `json:"referenceTransactionNo,omitempty"`
	// Posting remarks.
	Remark *string `json:"remark,omitempty"`
	// The date on which the transaction has its revenue effect.
	RevenueDate *string `json:"revenueDate,omitempty"`
	// Reverse payment transaction unique identifier.
	ReversePaymentTransactionNo *float32 `json:"reversePaymentTransactionNo,omitempty"`
	// Indicator to determine if the posting was a posting for the Rounding Difference.
	RoundingDifferenceTrx *bool `json:"roundingDifferenceTrx,omitempty"`
	// Flag to indicates service recovery
	ServiceRecovery *bool `json:"serviceRecovery,omitempty"`
	// Flag to identify a Stamp Duty Transaction.
	StampDuty *bool `json:"stampDuty,omitempty"`
	// Tax invoice number generated by payment tax.
	TaxInvoiceNo *string `json:"taxInvoiceNo,omitempty"`
	// The amount of the transaction.
	TransactionAmount *float32 `json:"transactionAmount,omitempty"`
	// Billing Transaction Code.
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Transaction Date.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Billing Transaction Description.
	TransactionDescription *string `json:"transactionDescription,omitempty"`
	// Unique Transaction Identifier.
	TransactionNo *float32 `json:"transactionNo,omitempty"`
	TransactionType *CashieringTransactionTypeType `json:"transactionType,omitempty"`
	UpdateInfo *ARInvoicePostingTypeUpdateInfo `json:"updateInfo,omitempty"`
}

// NewARInvoicePostingType instantiates a new ARInvoicePostingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARInvoicePostingType() *ARInvoicePostingType {
	this := ARInvoicePostingType{}
	return &this
}

// NewARInvoicePostingTypeWithDefaults instantiates a new ARInvoicePostingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARInvoicePostingTypeWithDefaults() *ARInvoicePostingType {
	this := ARInvoicePostingType{}
	return &this
}

// GetApprovalCode returns the ApprovalCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetApprovalCode() string {
	if o == nil || IsNil(o.ApprovalCode) {
		var ret string
		return ret
	}
	return *o.ApprovalCode
}

// GetApprovalCodeOk returns a tuple with the ApprovalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetApprovalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalCode) {
		return nil, false
	}
	return o.ApprovalCode, true
}

// HasApprovalCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasApprovalCode() bool {
	if o != nil && !IsNil(o.ApprovalCode) {
		return true
	}

	return false
}

// SetApprovalCode gets a reference to the given string and assigns it to the ApprovalCode field.
func (o *ARInvoicePostingType) SetApprovalCode(v string) {
	o.ApprovalCode = &v
}

// GetApprovalStatus returns the ApprovalStatus field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetApprovalStatus() string {
	if o == nil || IsNil(o.ApprovalStatus) {
		var ret string
		return ret
	}
	return *o.ApprovalStatus
}

// GetApprovalStatusOk returns a tuple with the ApprovalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetApprovalStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalStatus) {
		return nil, false
	}
	return o.ApprovalStatus, true
}

// HasApprovalStatus returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasApprovalStatus() bool {
	if o != nil && !IsNil(o.ApprovalStatus) {
		return true
	}

	return false
}

// SetApprovalStatus gets a reference to the given string and assigns it to the ApprovalStatus field.
func (o *ARInvoicePostingType) SetApprovalStatus(v string) {
	o.ApprovalStatus = &v
}

// GetArrangementCode returns the ArrangementCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetArrangementCode() string {
	if o == nil || IsNil(o.ArrangementCode) {
		var ret string
		return ret
	}
	return *o.ArrangementCode
}

// GetArrangementCodeOk returns a tuple with the ArrangementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetArrangementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ArrangementCode) {
		return nil, false
	}
	return o.ArrangementCode, true
}

// HasArrangementCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasArrangementCode() bool {
	if o != nil && !IsNil(o.ArrangementCode) {
		return true
	}

	return false
}

// SetArrangementCode gets a reference to the given string and assigns it to the ArrangementCode field.
func (o *ARInvoicePostingType) SetArrangementCode(v string) {
	o.ArrangementCode = &v
}

// GetArticleCode returns the ArticleCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetArticleCode() string {
	if o == nil || IsNil(o.ArticleCode) {
		var ret string
		return ret
	}
	return *o.ArticleCode
}

// GetArticleCodeOk returns a tuple with the ArticleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetArticleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleCode) {
		return nil, false
	}
	return o.ArticleCode, true
}

// HasArticleCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasArticleCode() bool {
	if o != nil && !IsNil(o.ArticleCode) {
		return true
	}

	return false
}

// SetArticleCode gets a reference to the given string and assigns it to the ArticleCode field.
func (o *ARInvoicePostingType) SetArticleCode(v string) {
	o.ArticleCode = &v
}

// GetCanAdjustInvoice returns the CanAdjustInvoice field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCanAdjustInvoice() bool {
	if o == nil || IsNil(o.CanAdjustInvoice) {
		var ret bool
		return ret
	}
	return *o.CanAdjustInvoice
}

// GetCanAdjustInvoiceOk returns a tuple with the CanAdjustInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCanAdjustInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.CanAdjustInvoice) {
		return nil, false
	}
	return o.CanAdjustInvoice, true
}

// HasCanAdjustInvoice returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCanAdjustInvoice() bool {
	if o != nil && !IsNil(o.CanAdjustInvoice) {
		return true
	}

	return false
}

// SetCanAdjustInvoice gets a reference to the given bool and assigns it to the CanAdjustInvoice field.
func (o *ARInvoicePostingType) SetCanAdjustInvoice(v bool) {
	o.CanAdjustInvoice = &v
}

// GetCashierInfo returns the CashierInfo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCashierInfo() CashierInfoType {
	if o == nil || IsNil(o.CashierInfo) {
		var ret CashierInfoType
		return ret
	}
	return *o.CashierInfo
}

// GetCashierInfoOk returns a tuple with the CashierInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCashierInfoOk() (*CashierInfoType, bool) {
	if o == nil || IsNil(o.CashierInfo) {
		return nil, false
	}
	return o.CashierInfo, true
}

// HasCashierInfo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCashierInfo() bool {
	if o != nil && !IsNil(o.CashierInfo) {
		return true
	}

	return false
}

// SetCashierInfo gets a reference to the given CashierInfoType and assigns it to the CashierInfo field.
func (o *ARInvoicePostingType) SetCashierInfo(v CashierInfoType) {
	o.CashierInfo = &v
}

// GetCheckCount returns the CheckCount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCheckCount() string {
	if o == nil || IsNil(o.CheckCount) {
		var ret string
		return ret
	}
	return *o.CheckCount
}

// GetCheckCountOk returns a tuple with the CheckCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCheckCountOk() (*string, bool) {
	if o == nil || IsNil(o.CheckCount) {
		return nil, false
	}
	return o.CheckCount, true
}

// HasCheckCount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCheckCount() bool {
	if o != nil && !IsNil(o.CheckCount) {
		return true
	}

	return false
}

// SetCheckCount gets a reference to the given string and assigns it to the CheckCount field.
func (o *ARInvoicePostingType) SetCheckCount(v string) {
	o.CheckCount = &v
}

// GetCheckNo returns the CheckNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCheckNo() string {
	if o == nil || IsNil(o.CheckNo) {
		var ret string
		return ret
	}
	return *o.CheckNo
}

// GetCheckNoOk returns a tuple with the CheckNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCheckNoOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNo) {
		return nil, false
	}
	return o.CheckNo, true
}

// HasCheckNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCheckNo() bool {
	if o != nil && !IsNil(o.CheckNo) {
		return true
	}

	return false
}

// SetCheckNo gets a reference to the given string and assigns it to the CheckNo field.
func (o *ARInvoicePostingType) SetCheckNo(v string) {
	o.CheckNo = &v
}

// GetCommissionable returns the Commissionable field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCommissionable() bool {
	if o == nil || IsNil(o.Commissionable) {
		var ret bool
		return ret
	}
	return *o.Commissionable
}

// GetCommissionableOk returns a tuple with the Commissionable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCommissionableOk() (*bool, bool) {
	if o == nil || IsNil(o.Commissionable) {
		return nil, false
	}
	return o.Commissionable, true
}

// HasCommissionable returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCommissionable() bool {
	if o != nil && !IsNil(o.Commissionable) {
		return true
	}

	return false
}

// SetCommissionable gets a reference to the given bool and assigns it to the Commissionable field.
func (o *ARInvoicePostingType) SetCommissionable(v bool) {
	o.Commissionable = &v
}

// GetCompPostingsInfo returns the CompPostingsInfo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCompPostingsInfo() CompPostingsType {
	if o == nil || IsNil(o.CompPostingsInfo) {
		var ret CompPostingsType
		return ret
	}
	return *o.CompPostingsInfo
}

// GetCompPostingsInfoOk returns a tuple with the CompPostingsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCompPostingsInfoOk() (*CompPostingsType, bool) {
	if o == nil || IsNil(o.CompPostingsInfo) {
		return nil, false
	}
	return o.CompPostingsInfo, true
}

// HasCompPostingsInfo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCompPostingsInfo() bool {
	if o != nil && !IsNil(o.CompPostingsInfo) {
		return true
	}

	return false
}

// SetCompPostingsInfo gets a reference to the given CompPostingsType and assigns it to the CompPostingsInfo field.
func (o *ARInvoicePostingType) SetCompPostingsInfo(v CompPostingsType) {
	o.CompPostingsInfo = &v
}

// GetCompRedemptionCode returns the CompRedemptionCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCompRedemptionCode() string {
	if o == nil || IsNil(o.CompRedemptionCode) {
		var ret string
		return ret
	}
	return *o.CompRedemptionCode
}

// GetCompRedemptionCodeOk returns a tuple with the CompRedemptionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCompRedemptionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CompRedemptionCode) {
		return nil, false
	}
	return o.CompRedemptionCode, true
}

// HasCompRedemptionCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCompRedemptionCode() bool {
	if o != nil && !IsNil(o.CompRedemptionCode) {
		return true
	}

	return false
}

// SetCompRedemptionCode gets a reference to the given string and assigns it to the CompRedemptionCode field.
func (o *ARInvoicePostingType) SetCompRedemptionCode(v string) {
	o.CompRedemptionCode = &v
}

// GetCreditAmount returns the CreditAmount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCreditAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CreditAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CreditAmount
}

// GetCreditAmountOk returns a tuple with the CreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCreditAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CreditAmount) {
		return nil, false
	}
	return o.CreditAmount, true
}

// HasCreditAmount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCreditAmount() bool {
	if o != nil && !IsNil(o.CreditAmount) {
		return true
	}

	return false
}

// SetCreditAmount gets a reference to the given CurrencyAmountType and assigns it to the CreditAmount field.
func (o *ARInvoicePostingType) SetCreditAmount(v CurrencyAmountType) {
	o.CreditAmount = &v
}

// GetCreditInvoiceGuestName returns the CreditInvoiceGuestName field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetCreditInvoiceGuestName() string {
	if o == nil || IsNil(o.CreditInvoiceGuestName) {
		var ret string
		return ret
	}
	return *o.CreditInvoiceGuestName
}

// GetCreditInvoiceGuestNameOk returns a tuple with the CreditInvoiceGuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetCreditInvoiceGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreditInvoiceGuestName) {
		return nil, false
	}
	return o.CreditInvoiceGuestName, true
}

// HasCreditInvoiceGuestName returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasCreditInvoiceGuestName() bool {
	if o != nil && !IsNil(o.CreditInvoiceGuestName) {
		return true
	}

	return false
}

// SetCreditInvoiceGuestName gets a reference to the given string and assigns it to the CreditInvoiceGuestName field.
func (o *ARInvoicePostingType) SetCreditInvoiceGuestName(v string) {
	o.CreditInvoiceGuestName = &v
}

// GetDebitAmount returns the DebitAmount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetDebitAmount() CurrencyAmountType {
	if o == nil || IsNil(o.DebitAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.DebitAmount
}

// GetDebitAmountOk returns a tuple with the DebitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetDebitAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.DebitAmount) {
		return nil, false
	}
	return o.DebitAmount, true
}

// HasDebitAmount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasDebitAmount() bool {
	if o != nil && !IsNil(o.DebitAmount) {
		return true
	}

	return false
}

// SetDebitAmount gets a reference to the given CurrencyAmountType and assigns it to the DebitAmount field.
func (o *ARInvoicePostingType) SetDebitAmount(v CurrencyAmountType) {
	o.DebitAmount = &v
}

// GetDepositTransactionId returns the DepositTransactionId field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetDepositTransactionId() string {
	if o == nil || IsNil(o.DepositTransactionId) {
		var ret string
		return ret
	}
	return *o.DepositTransactionId
}

// GetDepositTransactionIdOk returns a tuple with the DepositTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetDepositTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.DepositTransactionId) {
		return nil, false
	}
	return o.DepositTransactionId, true
}

// HasDepositTransactionId returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasDepositTransactionId() bool {
	if o != nil && !IsNil(o.DepositTransactionId) {
		return true
	}

	return false
}

// SetDepositTransactionId gets a reference to the given string and assigns it to the DepositTransactionId field.
func (o *ARInvoicePostingType) SetDepositTransactionId(v string) {
	o.DepositTransactionId = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetExchange() ExchangeAmounts {
	if o == nil || IsNil(o.Exchange) {
		var ret ExchangeAmounts
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetExchangeOk() (*ExchangeAmounts, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given ExchangeAmounts and assigns it to the Exchange field.
func (o *ARInvoicePostingType) SetExchange(v ExchangeAmounts) {
	o.Exchange = &v
}

// GetFbaCertificate returns the FbaCertificate field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetFbaCertificate() bool {
	if o == nil || IsNil(o.FbaCertificate) {
		var ret bool
		return ret
	}
	return *o.FbaCertificate
}

// GetFbaCertificateOk returns a tuple with the FbaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetFbaCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.FbaCertificate) {
		return nil, false
	}
	return o.FbaCertificate, true
}

// HasFbaCertificate returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasFbaCertificate() bool {
	if o != nil && !IsNil(o.FbaCertificate) {
		return true
	}

	return false
}

// SetFbaCertificate gets a reference to the given bool and assigns it to the FbaCertificate field.
func (o *ARInvoicePostingType) SetFbaCertificate(v bool) {
	o.FbaCertificate = &v
}

// GetFinancialTransactionIdList returns the FinancialTransactionIdList field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetFinancialTransactionIdList() []UniqueIDType {
	if o == nil || IsNil(o.FinancialTransactionIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.FinancialTransactionIdList
}

// GetFinancialTransactionIdListOk returns a tuple with the FinancialTransactionIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetFinancialTransactionIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.FinancialTransactionIdList) {
		return nil, false
	}
	return o.FinancialTransactionIdList, true
}

// HasFinancialTransactionIdList returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasFinancialTransactionIdList() bool {
	if o != nil && !IsNil(o.FinancialTransactionIdList) {
		return true
	}

	return false
}

// SetFinancialTransactionIdList gets a reference to the given []UniqueIDType and assigns it to the FinancialTransactionIdList field.
func (o *ARInvoicePostingType) SetFinancialTransactionIdList(v []UniqueIDType) {
	o.FinancialTransactionIdList = v
}

// GetGroupByCount returns the GroupByCount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetGroupByCount() float32 {
	if o == nil || IsNil(o.GroupByCount) {
		var ret float32
		return ret
	}
	return *o.GroupByCount
}

// GetGroupByCountOk returns a tuple with the GroupByCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetGroupByCountOk() (*float32, bool) {
	if o == nil || IsNil(o.GroupByCount) {
		return nil, false
	}
	return o.GroupByCount, true
}

// HasGroupByCount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasGroupByCount() bool {
	if o != nil && !IsNil(o.GroupByCount) {
		return true
	}

	return false
}

// SetGroupByCount gets a reference to the given float32 and assigns it to the GroupByCount field.
func (o *ARInvoicePostingType) SetGroupByCount(v float32) {
	o.GroupByCount = &v
}

// GetGroupTypeInfo returns the GroupTypeInfo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetGroupTypeInfo() PostingGroupType {
	if o == nil || IsNil(o.GroupTypeInfo) {
		var ret PostingGroupType
		return ret
	}
	return *o.GroupTypeInfo
}

// GetGroupTypeInfoOk returns a tuple with the GroupTypeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetGroupTypeInfoOk() (*PostingGroupType, bool) {
	if o == nil || IsNil(o.GroupTypeInfo) {
		return nil, false
	}
	return o.GroupTypeInfo, true
}

// HasGroupTypeInfo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasGroupTypeInfo() bool {
	if o != nil && !IsNil(o.GroupTypeInfo) {
		return true
	}

	return false
}

// SetGroupTypeInfo gets a reference to the given PostingGroupType and assigns it to the GroupTypeInfo field.
func (o *ARInvoicePostingType) SetGroupTypeInfo(v PostingGroupType) {
	o.GroupTypeInfo = &v
}

// GetPaidOut returns the PaidOut field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetPaidOut() bool {
	if o == nil || IsNil(o.PaidOut) {
		var ret bool
		return ret
	}
	return *o.PaidOut
}

// GetPaidOutOk returns a tuple with the PaidOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetPaidOutOk() (*bool, bool) {
	if o == nil || IsNil(o.PaidOut) {
		return nil, false
	}
	return o.PaidOut, true
}

// HasPaidOut returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasPaidOut() bool {
	if o != nil && !IsNil(o.PaidOut) {
		return true
	}

	return false
}

// SetPaidOut gets a reference to the given bool and assigns it to the PaidOut field.
func (o *ARInvoicePostingType) SetPaidOut(v bool) {
	o.PaidOut = &v
}

// GetPostedAmount returns the PostedAmount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetPostedAmount() CurrencyAmountType {
	if o == nil || IsNil(o.PostedAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PostedAmount
}

// GetPostedAmountOk returns a tuple with the PostedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetPostedAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PostedAmount) {
		return nil, false
	}
	return o.PostedAmount, true
}

// HasPostedAmount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasPostedAmount() bool {
	if o != nil && !IsNil(o.PostedAmount) {
		return true
	}

	return false
}

// SetPostedAmount gets a reference to the given CurrencyAmountType and assigns it to the PostedAmount field.
func (o *ARInvoicePostingType) SetPostedAmount(v CurrencyAmountType) {
	o.PostedAmount = &v
}

// GetPostingDate returns the PostingDate field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetPostingDate() string {
	if o == nil || IsNil(o.PostingDate) {
		var ret string
		return ret
	}
	return *o.PostingDate
}

// GetPostingDateOk returns a tuple with the PostingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetPostingDateOk() (*string, bool) {
	if o == nil || IsNil(o.PostingDate) {
		return nil, false
	}
	return o.PostingDate, true
}

// HasPostingDate returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasPostingDate() bool {
	if o != nil && !IsNil(o.PostingDate) {
		return true
	}

	return false
}

// SetPostingDate gets a reference to the given string and assigns it to the PostingDate field.
func (o *ARInvoicePostingType) SetPostingDate(v string) {
	o.PostingDate = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetPrice() CurrencyAmountType {
	if o == nil || IsNil(o.Price) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CurrencyAmountType and assigns it to the Price field.
func (o *ARInvoicePostingType) SetPrice(v CurrencyAmountType) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *ARInvoicePostingType) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetRateCode() string {
	if o == nil || IsNil(o.RateCode) {
		var ret string
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given string and assigns it to the RateCode field.
func (o *ARInvoicePostingType) SetRateCode(v string) {
	o.RateCode = &v
}

// GetReceiptNo returns the ReceiptNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetReceiptNo() float32 {
	if o == nil || IsNil(o.ReceiptNo) {
		var ret float32
		return ret
	}
	return *o.ReceiptNo
}

// GetReceiptNoOk returns a tuple with the ReceiptNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetReceiptNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReceiptNo) {
		return nil, false
	}
	return o.ReceiptNo, true
}

// HasReceiptNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasReceiptNo() bool {
	if o != nil && !IsNil(o.ReceiptNo) {
		return true
	}

	return false
}

// SetReceiptNo gets a reference to the given float32 and assigns it to the ReceiptNo field.
func (o *ARInvoicePostingType) SetReceiptNo(v float32) {
	o.ReceiptNo = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *ARInvoicePostingType) SetReference(v string) {
	o.Reference = &v
}

// GetReferenceTransactionNo returns the ReferenceTransactionNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetReferenceTransactionNo() float32 {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		var ret float32
		return ret
	}
	return *o.ReferenceTransactionNo
}

// GetReferenceTransactionNoOk returns a tuple with the ReferenceTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetReferenceTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReferenceTransactionNo) {
		return nil, false
	}
	return o.ReferenceTransactionNo, true
}

// HasReferenceTransactionNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasReferenceTransactionNo() bool {
	if o != nil && !IsNil(o.ReferenceTransactionNo) {
		return true
	}

	return false
}

// SetReferenceTransactionNo gets a reference to the given float32 and assigns it to the ReferenceTransactionNo field.
func (o *ARInvoicePostingType) SetReferenceTransactionNo(v float32) {
	o.ReferenceTransactionNo = &v
}

// GetRemark returns the Remark field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetRemark() string {
	if o == nil || IsNil(o.Remark) {
		var ret string
		return ret
	}
	return *o.Remark
}

// GetRemarkOk returns a tuple with the Remark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.Remark) {
		return nil, false
	}
	return o.Remark, true
}

// HasRemark returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasRemark() bool {
	if o != nil && !IsNil(o.Remark) {
		return true
	}

	return false
}

// SetRemark gets a reference to the given string and assigns it to the Remark field.
func (o *ARInvoicePostingType) SetRemark(v string) {
	o.Remark = &v
}

// GetRevenueDate returns the RevenueDate field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetRevenueDate() string {
	if o == nil || IsNil(o.RevenueDate) {
		var ret string
		return ret
	}
	return *o.RevenueDate
}

// GetRevenueDateOk returns a tuple with the RevenueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetRevenueDateOk() (*string, bool) {
	if o == nil || IsNil(o.RevenueDate) {
		return nil, false
	}
	return o.RevenueDate, true
}

// HasRevenueDate returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasRevenueDate() bool {
	if o != nil && !IsNil(o.RevenueDate) {
		return true
	}

	return false
}

// SetRevenueDate gets a reference to the given string and assigns it to the RevenueDate field.
func (o *ARInvoicePostingType) SetRevenueDate(v string) {
	o.RevenueDate = &v
}

// GetReversePaymentTransactionNo returns the ReversePaymentTransactionNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetReversePaymentTransactionNo() float32 {
	if o == nil || IsNil(o.ReversePaymentTransactionNo) {
		var ret float32
		return ret
	}
	return *o.ReversePaymentTransactionNo
}

// GetReversePaymentTransactionNoOk returns a tuple with the ReversePaymentTransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetReversePaymentTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.ReversePaymentTransactionNo) {
		return nil, false
	}
	return o.ReversePaymentTransactionNo, true
}

// HasReversePaymentTransactionNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasReversePaymentTransactionNo() bool {
	if o != nil && !IsNil(o.ReversePaymentTransactionNo) {
		return true
	}

	return false
}

// SetReversePaymentTransactionNo gets a reference to the given float32 and assigns it to the ReversePaymentTransactionNo field.
func (o *ARInvoicePostingType) SetReversePaymentTransactionNo(v float32) {
	o.ReversePaymentTransactionNo = &v
}

// GetRoundingDifferenceTrx returns the RoundingDifferenceTrx field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetRoundingDifferenceTrx() bool {
	if o == nil || IsNil(o.RoundingDifferenceTrx) {
		var ret bool
		return ret
	}
	return *o.RoundingDifferenceTrx
}

// GetRoundingDifferenceTrxOk returns a tuple with the RoundingDifferenceTrx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetRoundingDifferenceTrxOk() (*bool, bool) {
	if o == nil || IsNil(o.RoundingDifferenceTrx) {
		return nil, false
	}
	return o.RoundingDifferenceTrx, true
}

// HasRoundingDifferenceTrx returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasRoundingDifferenceTrx() bool {
	if o != nil && !IsNil(o.RoundingDifferenceTrx) {
		return true
	}

	return false
}

// SetRoundingDifferenceTrx gets a reference to the given bool and assigns it to the RoundingDifferenceTrx field.
func (o *ARInvoicePostingType) SetRoundingDifferenceTrx(v bool) {
	o.RoundingDifferenceTrx = &v
}

// GetServiceRecovery returns the ServiceRecovery field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetServiceRecovery() bool {
	if o == nil || IsNil(o.ServiceRecovery) {
		var ret bool
		return ret
	}
	return *o.ServiceRecovery
}

// GetServiceRecoveryOk returns a tuple with the ServiceRecovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetServiceRecoveryOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceRecovery) {
		return nil, false
	}
	return o.ServiceRecovery, true
}

// HasServiceRecovery returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasServiceRecovery() bool {
	if o != nil && !IsNil(o.ServiceRecovery) {
		return true
	}

	return false
}

// SetServiceRecovery gets a reference to the given bool and assigns it to the ServiceRecovery field.
func (o *ARInvoicePostingType) SetServiceRecovery(v bool) {
	o.ServiceRecovery = &v
}

// GetStampDuty returns the StampDuty field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetStampDuty() bool {
	if o == nil || IsNil(o.StampDuty) {
		var ret bool
		return ret
	}
	return *o.StampDuty
}

// GetStampDutyOk returns a tuple with the StampDuty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetStampDutyOk() (*bool, bool) {
	if o == nil || IsNil(o.StampDuty) {
		return nil, false
	}
	return o.StampDuty, true
}

// HasStampDuty returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasStampDuty() bool {
	if o != nil && !IsNil(o.StampDuty) {
		return true
	}

	return false
}

// SetStampDuty gets a reference to the given bool and assigns it to the StampDuty field.
func (o *ARInvoicePostingType) SetStampDuty(v bool) {
	o.StampDuty = &v
}

// GetTaxInvoiceNo returns the TaxInvoiceNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTaxInvoiceNo() string {
	if o == nil || IsNil(o.TaxInvoiceNo) {
		var ret string
		return ret
	}
	return *o.TaxInvoiceNo
}

// GetTaxInvoiceNoOk returns a tuple with the TaxInvoiceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTaxInvoiceNoOk() (*string, bool) {
	if o == nil || IsNil(o.TaxInvoiceNo) {
		return nil, false
	}
	return o.TaxInvoiceNo, true
}

// HasTaxInvoiceNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTaxInvoiceNo() bool {
	if o != nil && !IsNil(o.TaxInvoiceNo) {
		return true
	}

	return false
}

// SetTaxInvoiceNo gets a reference to the given string and assigns it to the TaxInvoiceNo field.
func (o *ARInvoicePostingType) SetTaxInvoiceNo(v string) {
	o.TaxInvoiceNo = &v
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionAmount() float32 {
	if o == nil || IsNil(o.TransactionAmount) {
		var ret float32
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionAmount) {
		return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionAmount() bool {
	if o != nil && !IsNil(o.TransactionAmount) {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given float32 and assigns it to the TransactionAmount field.
func (o *ARInvoicePostingType) SetTransactionAmount(v float32) {
	o.TransactionAmount = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *ARInvoicePostingType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *ARInvoicePostingType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionDescription returns the TransactionDescription field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionDescription() string {
	if o == nil || IsNil(o.TransactionDescription) {
		var ret string
		return ret
	}
	return *o.TransactionDescription
}

// GetTransactionDescriptionOk returns a tuple with the TransactionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDescription) {
		return nil, false
	}
	return o.TransactionDescription, true
}

// HasTransactionDescription returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionDescription() bool {
	if o != nil && !IsNil(o.TransactionDescription) {
		return true
	}

	return false
}

// SetTransactionDescription gets a reference to the given string and assigns it to the TransactionDescription field.
func (o *ARInvoicePostingType) SetTransactionDescription(v string) {
	o.TransactionDescription = &v
}

// GetTransactionNo returns the TransactionNo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionNo() float32 {
	if o == nil || IsNil(o.TransactionNo) {
		var ret float32
		return ret
	}
	return *o.TransactionNo
}

// GetTransactionNoOk returns a tuple with the TransactionNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionNoOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionNo) {
		return nil, false
	}
	return o.TransactionNo, true
}

// HasTransactionNo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionNo() bool {
	if o != nil && !IsNil(o.TransactionNo) {
		return true
	}

	return false
}

// SetTransactionNo gets a reference to the given float32 and assigns it to the TransactionNo field.
func (o *ARInvoicePostingType) SetTransactionNo(v float32) {
	o.TransactionNo = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetTransactionType() CashieringTransactionTypeType {
	if o == nil || IsNil(o.TransactionType) {
		var ret CashieringTransactionTypeType
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetTransactionTypeOk() (*CashieringTransactionTypeType, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given CashieringTransactionTypeType and assigns it to the TransactionType field.
func (o *ARInvoicePostingType) SetTransactionType(v CashieringTransactionTypeType) {
	o.TransactionType = &v
}

// GetUpdateInfo returns the UpdateInfo field value if set, zero value otherwise.
func (o *ARInvoicePostingType) GetUpdateInfo() ARInvoicePostingTypeUpdateInfo {
	if o == nil || IsNil(o.UpdateInfo) {
		var ret ARInvoicePostingTypeUpdateInfo
		return ret
	}
	return *o.UpdateInfo
}

// GetUpdateInfoOk returns a tuple with the UpdateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoicePostingType) GetUpdateInfoOk() (*ARInvoicePostingTypeUpdateInfo, bool) {
	if o == nil || IsNil(o.UpdateInfo) {
		return nil, false
	}
	return o.UpdateInfo, true
}

// HasUpdateInfo returns a boolean if a field has been set.
func (o *ARInvoicePostingType) HasUpdateInfo() bool {
	if o != nil && !IsNil(o.UpdateInfo) {
		return true
	}

	return false
}

// SetUpdateInfo gets a reference to the given ARInvoicePostingTypeUpdateInfo and assigns it to the UpdateInfo field.
func (o *ARInvoicePostingType) SetUpdateInfo(v ARInvoicePostingTypeUpdateInfo) {
	o.UpdateInfo = &v
}

func (o ARInvoicePostingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARInvoicePostingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovalCode) {
		toSerialize["approvalCode"] = o.ApprovalCode
	}
	if !IsNil(o.ApprovalStatus) {
		toSerialize["approvalStatus"] = o.ApprovalStatus
	}
	if !IsNil(o.ArrangementCode) {
		toSerialize["arrangementCode"] = o.ArrangementCode
	}
	if !IsNil(o.ArticleCode) {
		toSerialize["articleCode"] = o.ArticleCode
	}
	if !IsNil(o.CanAdjustInvoice) {
		toSerialize["canAdjustInvoice"] = o.CanAdjustInvoice
	}
	if !IsNil(o.CashierInfo) {
		toSerialize["cashierInfo"] = o.CashierInfo
	}
	if !IsNil(o.CheckCount) {
		toSerialize["checkCount"] = o.CheckCount
	}
	if !IsNil(o.CheckNo) {
		toSerialize["checkNo"] = o.CheckNo
	}
	if !IsNil(o.Commissionable) {
		toSerialize["commissionable"] = o.Commissionable
	}
	if !IsNil(o.CompPostingsInfo) {
		toSerialize["compPostingsInfo"] = o.CompPostingsInfo
	}
	if !IsNil(o.CompRedemptionCode) {
		toSerialize["compRedemptionCode"] = o.CompRedemptionCode
	}
	if !IsNil(o.CreditAmount) {
		toSerialize["creditAmount"] = o.CreditAmount
	}
	if !IsNil(o.CreditInvoiceGuestName) {
		toSerialize["creditInvoiceGuestName"] = o.CreditInvoiceGuestName
	}
	if !IsNil(o.DebitAmount) {
		toSerialize["debitAmount"] = o.DebitAmount
	}
	if !IsNil(o.DepositTransactionId) {
		toSerialize["depositTransactionId"] = o.DepositTransactionId
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.FbaCertificate) {
		toSerialize["fbaCertificate"] = o.FbaCertificate
	}
	if !IsNil(o.FinancialTransactionIdList) {
		toSerialize["financialTransactionIdList"] = o.FinancialTransactionIdList
	}
	if !IsNil(o.GroupByCount) {
		toSerialize["groupByCount"] = o.GroupByCount
	}
	if !IsNil(o.GroupTypeInfo) {
		toSerialize["groupTypeInfo"] = o.GroupTypeInfo
	}
	if !IsNil(o.PaidOut) {
		toSerialize["paidOut"] = o.PaidOut
	}
	if !IsNil(o.PostedAmount) {
		toSerialize["postedAmount"] = o.PostedAmount
	}
	if !IsNil(o.PostingDate) {
		toSerialize["postingDate"] = o.PostingDate
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.ReceiptNo) {
		toSerialize["receiptNo"] = o.ReceiptNo
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.ReferenceTransactionNo) {
		toSerialize["referenceTransactionNo"] = o.ReferenceTransactionNo
	}
	if !IsNil(o.Remark) {
		toSerialize["remark"] = o.Remark
	}
	if !IsNil(o.RevenueDate) {
		toSerialize["revenueDate"] = o.RevenueDate
	}
	if !IsNil(o.ReversePaymentTransactionNo) {
		toSerialize["reversePaymentTransactionNo"] = o.ReversePaymentTransactionNo
	}
	if !IsNil(o.RoundingDifferenceTrx) {
		toSerialize["roundingDifferenceTrx"] = o.RoundingDifferenceTrx
	}
	if !IsNil(o.ServiceRecovery) {
		toSerialize["serviceRecovery"] = o.ServiceRecovery
	}
	if !IsNil(o.StampDuty) {
		toSerialize["stampDuty"] = o.StampDuty
	}
	if !IsNil(o.TaxInvoiceNo) {
		toSerialize["taxInvoiceNo"] = o.TaxInvoiceNo
	}
	if !IsNil(o.TransactionAmount) {
		toSerialize["transactionAmount"] = o.TransactionAmount
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.TransactionDescription) {
		toSerialize["transactionDescription"] = o.TransactionDescription
	}
	if !IsNil(o.TransactionNo) {
		toSerialize["transactionNo"] = o.TransactionNo
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	if !IsNil(o.UpdateInfo) {
		toSerialize["updateInfo"] = o.UpdateInfo
	}
	return toSerialize, nil
}

type NullableARInvoicePostingType struct {
	value *ARInvoicePostingType
	isSet bool
}

func (v NullableARInvoicePostingType) Get() *ARInvoicePostingType {
	return v.value
}

func (v *NullableARInvoicePostingType) Set(val *ARInvoicePostingType) {
	v.value = val
	v.isSet = true
}

func (v NullableARInvoicePostingType) IsSet() bool {
	return v.isSet
}

func (v *NullableARInvoicePostingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARInvoicePostingType(val *ARInvoicePostingType) *NullableARInvoicePostingType {
	return &NullableARInvoicePostingType{value: val, isSet: true}
}

func (v NullableARInvoicePostingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARInvoicePostingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


