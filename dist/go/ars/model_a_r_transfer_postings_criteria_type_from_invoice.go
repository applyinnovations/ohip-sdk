/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARTransferPostingsCriteriaTypeFromInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARTransferPostingsCriteriaTypeFromInvoice{}

// ARTransferPostingsCriteriaTypeFromInvoice From Invoice and Invoice posting detail.
type ARTransferPostingsCriteriaTypeFromInvoice struct {
	Invoice *ARInvoiceCriteriaType `json:"invoice,omitempty"`
	// Invoice posting detail.
	InvoicePostings []ARInvoicePostingType `json:"invoicePostings,omitempty"`
}

// NewARTransferPostingsCriteriaTypeFromInvoice instantiates a new ARTransferPostingsCriteriaTypeFromInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARTransferPostingsCriteriaTypeFromInvoice() *ARTransferPostingsCriteriaTypeFromInvoice {
	this := ARTransferPostingsCriteriaTypeFromInvoice{}
	return &this
}

// NewARTransferPostingsCriteriaTypeFromInvoiceWithDefaults instantiates a new ARTransferPostingsCriteriaTypeFromInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARTransferPostingsCriteriaTypeFromInvoiceWithDefaults() *ARTransferPostingsCriteriaTypeFromInvoice {
	this := ARTransferPostingsCriteriaTypeFromInvoice{}
	return &this
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) GetInvoice() ARInvoiceCriteriaType {
	if o == nil || IsNil(o.Invoice) {
		var ret ARInvoiceCriteriaType
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) GetInvoiceOk() (*ARInvoiceCriteriaType, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given ARInvoiceCriteriaType and assigns it to the Invoice field.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) SetInvoice(v ARInvoiceCriteriaType) {
	o.Invoice = &v
}

// GetInvoicePostings returns the InvoicePostings field value if set, zero value otherwise.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) GetInvoicePostings() []ARInvoicePostingType {
	if o == nil || IsNil(o.InvoicePostings) {
		var ret []ARInvoicePostingType
		return ret
	}
	return o.InvoicePostings
}

// GetInvoicePostingsOk returns a tuple with the InvoicePostings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) GetInvoicePostingsOk() ([]ARInvoicePostingType, bool) {
	if o == nil || IsNil(o.InvoicePostings) {
		return nil, false
	}
	return o.InvoicePostings, true
}

// HasInvoicePostings returns a boolean if a field has been set.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) HasInvoicePostings() bool {
	if o != nil && !IsNil(o.InvoicePostings) {
		return true
	}

	return false
}

// SetInvoicePostings gets a reference to the given []ARInvoicePostingType and assigns it to the InvoicePostings field.
func (o *ARTransferPostingsCriteriaTypeFromInvoice) SetInvoicePostings(v []ARInvoicePostingType) {
	o.InvoicePostings = v
}

func (o ARTransferPostingsCriteriaTypeFromInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARTransferPostingsCriteriaTypeFromInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	if !IsNil(o.InvoicePostings) {
		toSerialize["invoicePostings"] = o.InvoicePostings
	}
	return toSerialize, nil
}

type NullableARTransferPostingsCriteriaTypeFromInvoice struct {
	value *ARTransferPostingsCriteriaTypeFromInvoice
	isSet bool
}

func (v NullableARTransferPostingsCriteriaTypeFromInvoice) Get() *ARTransferPostingsCriteriaTypeFromInvoice {
	return v.value
}

func (v *NullableARTransferPostingsCriteriaTypeFromInvoice) Set(val *ARTransferPostingsCriteriaTypeFromInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableARTransferPostingsCriteriaTypeFromInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableARTransferPostingsCriteriaTypeFromInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARTransferPostingsCriteriaTypeFromInvoice(val *ARTransferPostingsCriteriaTypeFromInvoice) *NullableARTransferPostingsCriteriaTypeFromInvoice {
	return &NullableARTransferPostingsCriteriaTypeFromInvoice{value: val, isSet: true}
}

func (v NullableARTransferPostingsCriteriaTypeFromInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARTransferPostingsCriteriaTypeFromInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


