/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARPaymentCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARPaymentCriteria{}

// ARPaymentCriteria Criteria for applying payments to invoices or posting an unallocated payment to an AR Account.
type ARPaymentCriteria struct {
	Account *ARAccountCriteriaType `json:"account,omitempty"`
	Action *PostPaymentActionType `json:"action,omitempty"`
	// Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.
	ApplyCCSurcharge *bool `json:"applyCCSurcharge,omitempty"`
	// Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.
	ApplyCurrencyTaxes *bool `json:"applyCurrencyTaxes,omitempty"`
	ApplyType *ARApplyType `json:"applyType,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	ChangeDueAmount *CurrencyAmountType `json:"changeDueAmount,omitempty"`
	// User Defined Comments. Used for Deposit Payment postings.
	Comments *string `json:"comments,omitempty"`
	// Information regarding Complimentary Bucket Redemption object.
	CompRedemptions []RedemptionType `json:"compRedemptions,omitempty"`
	// Payment Tax record.
	CreditablePaymentTaxes []PaymentTaxType `json:"creditablePaymentTaxes,omitempty"`
	FolioWindowNo *int32 `json:"folioWindowNo,omitempty"`
	// Property code.
	HotelId *string `json:"hotelId,omitempty"`
	// AR Invoice to which the payment will be applied.
	Invoices []ARPaymentInvoicesTypeInner `json:"invoices,omitempty"`
	ManualPaymentTaxInfo *PaymentTaxType `json:"manualPaymentTaxInfo,omitempty"`
	// Flag to override account receivable credit limit
	OverrideARCreditLimit *bool `json:"overrideARCreditLimit,omitempty"`
	// Flag to allow a rebate by Credit Card
	OverrideInsufficientCC *bool `json:"overrideInsufficientCC,omitempty"`
	PaymentMethod *CashieringPaymentMethodType `json:"paymentMethod,omitempty"`
	PostingAmount *CurrencyAmountType `json:"postingAmount,omitempty"`
	// User-defined posting reference.
	PostingReference *string `json:"postingReference,omitempty"`
	// User-defined posting remark.
	PostingRemark *string `json:"postingRemark,omitempty"`
	// A prepaid redemption info object to be used for posting a payment.
	PrepaidCardRedemptions []PrepaidCardRedemptionType `json:"prepaidCardRedemptions,omitempty"`
	// Sequence of the payment in a batch request.
	SequenceNo *int32 `json:"sequenceNo,omitempty"`
	// Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.
	TerminalId *string `json:"terminalId,omitempty"`
	// Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.
	VATOffset *bool `json:"vATOffset,omitempty"`
}

// NewARPaymentCriteria instantiates a new ARPaymentCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARPaymentCriteria() *ARPaymentCriteria {
	this := ARPaymentCriteria{}
	return &this
}

// NewARPaymentCriteriaWithDefaults instantiates a new ARPaymentCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARPaymentCriteriaWithDefaults() *ARPaymentCriteria {
	this := ARPaymentCriteria{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetAccount() ARAccountCriteriaType {
	if o == nil || IsNil(o.Account) {
		var ret ARAccountCriteriaType
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetAccountOk() (*ARAccountCriteriaType, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ARAccountCriteriaType and assigns it to the Account field.
func (o *ARPaymentCriteria) SetAccount(v ARAccountCriteriaType) {
	o.Account = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetAction() PostPaymentActionType {
	if o == nil || IsNil(o.Action) {
		var ret PostPaymentActionType
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetActionOk() (*PostPaymentActionType, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given PostPaymentActionType and assigns it to the Action field.
func (o *ARPaymentCriteria) SetAction(v PostPaymentActionType) {
	o.Action = &v
}

// GetApplyCCSurcharge returns the ApplyCCSurcharge field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetApplyCCSurcharge() bool {
	if o == nil || IsNil(o.ApplyCCSurcharge) {
		var ret bool
		return ret
	}
	return *o.ApplyCCSurcharge
}

// GetApplyCCSurchargeOk returns a tuple with the ApplyCCSurcharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetApplyCCSurchargeOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyCCSurcharge) {
		return nil, false
	}
	return o.ApplyCCSurcharge, true
}

// HasApplyCCSurcharge returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasApplyCCSurcharge() bool {
	if o != nil && !IsNil(o.ApplyCCSurcharge) {
		return true
	}

	return false
}

// SetApplyCCSurcharge gets a reference to the given bool and assigns it to the ApplyCCSurcharge field.
func (o *ARPaymentCriteria) SetApplyCCSurcharge(v bool) {
	o.ApplyCCSurcharge = &v
}

// GetApplyCurrencyTaxes returns the ApplyCurrencyTaxes field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetApplyCurrencyTaxes() bool {
	if o == nil || IsNil(o.ApplyCurrencyTaxes) {
		var ret bool
		return ret
	}
	return *o.ApplyCurrencyTaxes
}

// GetApplyCurrencyTaxesOk returns a tuple with the ApplyCurrencyTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetApplyCurrencyTaxesOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyCurrencyTaxes) {
		return nil, false
	}
	return o.ApplyCurrencyTaxes, true
}

// HasApplyCurrencyTaxes returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasApplyCurrencyTaxes() bool {
	if o != nil && !IsNil(o.ApplyCurrencyTaxes) {
		return true
	}

	return false
}

// SetApplyCurrencyTaxes gets a reference to the given bool and assigns it to the ApplyCurrencyTaxes field.
func (o *ARPaymentCriteria) SetApplyCurrencyTaxes(v bool) {
	o.ApplyCurrencyTaxes = &v
}

// GetApplyType returns the ApplyType field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetApplyType() ARApplyType {
	if o == nil || IsNil(o.ApplyType) {
		var ret ARApplyType
		return ret
	}
	return *o.ApplyType
}

// GetApplyTypeOk returns a tuple with the ApplyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetApplyTypeOk() (*ARApplyType, bool) {
	if o == nil || IsNil(o.ApplyType) {
		return nil, false
	}
	return o.ApplyType, true
}

// HasApplyType returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasApplyType() bool {
	if o != nil && !IsNil(o.ApplyType) {
		return true
	}

	return false
}

// SetApplyType gets a reference to the given ARApplyType and assigns it to the ApplyType field.
func (o *ARPaymentCriteria) SetApplyType(v ARApplyType) {
	o.ApplyType = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *ARPaymentCriteria) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetChangeDueAmount returns the ChangeDueAmount field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetChangeDueAmount() CurrencyAmountType {
	if o == nil || IsNil(o.ChangeDueAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.ChangeDueAmount
}

// GetChangeDueAmountOk returns a tuple with the ChangeDueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetChangeDueAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.ChangeDueAmount) {
		return nil, false
	}
	return o.ChangeDueAmount, true
}

// HasChangeDueAmount returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasChangeDueAmount() bool {
	if o != nil && !IsNil(o.ChangeDueAmount) {
		return true
	}

	return false
}

// SetChangeDueAmount gets a reference to the given CurrencyAmountType and assigns it to the ChangeDueAmount field.
func (o *ARPaymentCriteria) SetChangeDueAmount(v CurrencyAmountType) {
	o.ChangeDueAmount = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ARPaymentCriteria) SetComments(v string) {
	o.Comments = &v
}

// GetCompRedemptions returns the CompRedemptions field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetCompRedemptions() []RedemptionType {
	if o == nil || IsNil(o.CompRedemptions) {
		var ret []RedemptionType
		return ret
	}
	return o.CompRedemptions
}

// GetCompRedemptionsOk returns a tuple with the CompRedemptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetCompRedemptionsOk() ([]RedemptionType, bool) {
	if o == nil || IsNil(o.CompRedemptions) {
		return nil, false
	}
	return o.CompRedemptions, true
}

// HasCompRedemptions returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasCompRedemptions() bool {
	if o != nil && !IsNil(o.CompRedemptions) {
		return true
	}

	return false
}

// SetCompRedemptions gets a reference to the given []RedemptionType and assigns it to the CompRedemptions field.
func (o *ARPaymentCriteria) SetCompRedemptions(v []RedemptionType) {
	o.CompRedemptions = v
}

// GetCreditablePaymentTaxes returns the CreditablePaymentTaxes field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetCreditablePaymentTaxes() []PaymentTaxType {
	if o == nil || IsNil(o.CreditablePaymentTaxes) {
		var ret []PaymentTaxType
		return ret
	}
	return o.CreditablePaymentTaxes
}

// GetCreditablePaymentTaxesOk returns a tuple with the CreditablePaymentTaxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetCreditablePaymentTaxesOk() ([]PaymentTaxType, bool) {
	if o == nil || IsNil(o.CreditablePaymentTaxes) {
		return nil, false
	}
	return o.CreditablePaymentTaxes, true
}

// HasCreditablePaymentTaxes returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasCreditablePaymentTaxes() bool {
	if o != nil && !IsNil(o.CreditablePaymentTaxes) {
		return true
	}

	return false
}

// SetCreditablePaymentTaxes gets a reference to the given []PaymentTaxType and assigns it to the CreditablePaymentTaxes field.
func (o *ARPaymentCriteria) SetCreditablePaymentTaxes(v []PaymentTaxType) {
	o.CreditablePaymentTaxes = v
}

// GetFolioWindowNo returns the FolioWindowNo field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetFolioWindowNo() int32 {
	if o == nil || IsNil(o.FolioWindowNo) {
		var ret int32
		return ret
	}
	return *o.FolioWindowNo
}

// GetFolioWindowNoOk returns a tuple with the FolioWindowNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetFolioWindowNoOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioWindowNo) {
		return nil, false
	}
	return o.FolioWindowNo, true
}

// HasFolioWindowNo returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasFolioWindowNo() bool {
	if o != nil && !IsNil(o.FolioWindowNo) {
		return true
	}

	return false
}

// SetFolioWindowNo gets a reference to the given int32 and assigns it to the FolioWindowNo field.
func (o *ARPaymentCriteria) SetFolioWindowNo(v int32) {
	o.FolioWindowNo = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARPaymentCriteria) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInvoices returns the Invoices field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetInvoices() []ARPaymentInvoicesTypeInner {
	if o == nil || IsNil(o.Invoices) {
		var ret []ARPaymentInvoicesTypeInner
		return ret
	}
	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetInvoicesOk() ([]ARPaymentInvoicesTypeInner, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return o.Invoices, true
}

// HasInvoices returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasInvoices() bool {
	if o != nil && !IsNil(o.Invoices) {
		return true
	}

	return false
}

// SetInvoices gets a reference to the given []ARPaymentInvoicesTypeInner and assigns it to the Invoices field.
func (o *ARPaymentCriteria) SetInvoices(v []ARPaymentInvoicesTypeInner) {
	o.Invoices = v
}

// GetManualPaymentTaxInfo returns the ManualPaymentTaxInfo field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetManualPaymentTaxInfo() PaymentTaxType {
	if o == nil || IsNil(o.ManualPaymentTaxInfo) {
		var ret PaymentTaxType
		return ret
	}
	return *o.ManualPaymentTaxInfo
}

// GetManualPaymentTaxInfoOk returns a tuple with the ManualPaymentTaxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetManualPaymentTaxInfoOk() (*PaymentTaxType, bool) {
	if o == nil || IsNil(o.ManualPaymentTaxInfo) {
		return nil, false
	}
	return o.ManualPaymentTaxInfo, true
}

// HasManualPaymentTaxInfo returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasManualPaymentTaxInfo() bool {
	if o != nil && !IsNil(o.ManualPaymentTaxInfo) {
		return true
	}

	return false
}

// SetManualPaymentTaxInfo gets a reference to the given PaymentTaxType and assigns it to the ManualPaymentTaxInfo field.
func (o *ARPaymentCriteria) SetManualPaymentTaxInfo(v PaymentTaxType) {
	o.ManualPaymentTaxInfo = &v
}

// GetOverrideARCreditLimit returns the OverrideARCreditLimit field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetOverrideARCreditLimit() bool {
	if o == nil || IsNil(o.OverrideARCreditLimit) {
		var ret bool
		return ret
	}
	return *o.OverrideARCreditLimit
}

// GetOverrideARCreditLimitOk returns a tuple with the OverrideARCreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetOverrideARCreditLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideARCreditLimit) {
		return nil, false
	}
	return o.OverrideARCreditLimit, true
}

// HasOverrideARCreditLimit returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasOverrideARCreditLimit() bool {
	if o != nil && !IsNil(o.OverrideARCreditLimit) {
		return true
	}

	return false
}

// SetOverrideARCreditLimit gets a reference to the given bool and assigns it to the OverrideARCreditLimit field.
func (o *ARPaymentCriteria) SetOverrideARCreditLimit(v bool) {
	o.OverrideARCreditLimit = &v
}

// GetOverrideInsufficientCC returns the OverrideInsufficientCC field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetOverrideInsufficientCC() bool {
	if o == nil || IsNil(o.OverrideInsufficientCC) {
		var ret bool
		return ret
	}
	return *o.OverrideInsufficientCC
}

// GetOverrideInsufficientCCOk returns a tuple with the OverrideInsufficientCC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetOverrideInsufficientCCOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideInsufficientCC) {
		return nil, false
	}
	return o.OverrideInsufficientCC, true
}

// HasOverrideInsufficientCC returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasOverrideInsufficientCC() bool {
	if o != nil && !IsNil(o.OverrideInsufficientCC) {
		return true
	}

	return false
}

// SetOverrideInsufficientCC gets a reference to the given bool and assigns it to the OverrideInsufficientCC field.
func (o *ARPaymentCriteria) SetOverrideInsufficientCC(v bool) {
	o.OverrideInsufficientCC = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetPaymentMethod() CashieringPaymentMethodType {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret CashieringPaymentMethodType
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetPaymentMethodOk() (*CashieringPaymentMethodType, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given CashieringPaymentMethodType and assigns it to the PaymentMethod field.
func (o *ARPaymentCriteria) SetPaymentMethod(v CashieringPaymentMethodType) {
	o.PaymentMethod = &v
}

// GetPostingAmount returns the PostingAmount field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetPostingAmount() CurrencyAmountType {
	if o == nil || IsNil(o.PostingAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PostingAmount
}

// GetPostingAmountOk returns a tuple with the PostingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetPostingAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PostingAmount) {
		return nil, false
	}
	return o.PostingAmount, true
}

// HasPostingAmount returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasPostingAmount() bool {
	if o != nil && !IsNil(o.PostingAmount) {
		return true
	}

	return false
}

// SetPostingAmount gets a reference to the given CurrencyAmountType and assigns it to the PostingAmount field.
func (o *ARPaymentCriteria) SetPostingAmount(v CurrencyAmountType) {
	o.PostingAmount = &v
}

// GetPostingReference returns the PostingReference field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetPostingReference() string {
	if o == nil || IsNil(o.PostingReference) {
		var ret string
		return ret
	}
	return *o.PostingReference
}

// GetPostingReferenceOk returns a tuple with the PostingReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetPostingReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.PostingReference) {
		return nil, false
	}
	return o.PostingReference, true
}

// HasPostingReference returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasPostingReference() bool {
	if o != nil && !IsNil(o.PostingReference) {
		return true
	}

	return false
}

// SetPostingReference gets a reference to the given string and assigns it to the PostingReference field.
func (o *ARPaymentCriteria) SetPostingReference(v string) {
	o.PostingReference = &v
}

// GetPostingRemark returns the PostingRemark field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetPostingRemark() string {
	if o == nil || IsNil(o.PostingRemark) {
		var ret string
		return ret
	}
	return *o.PostingRemark
}

// GetPostingRemarkOk returns a tuple with the PostingRemark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetPostingRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.PostingRemark) {
		return nil, false
	}
	return o.PostingRemark, true
}

// HasPostingRemark returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasPostingRemark() bool {
	if o != nil && !IsNil(o.PostingRemark) {
		return true
	}

	return false
}

// SetPostingRemark gets a reference to the given string and assigns it to the PostingRemark field.
func (o *ARPaymentCriteria) SetPostingRemark(v string) {
	o.PostingRemark = &v
}

// GetPrepaidCardRedemptions returns the PrepaidCardRedemptions field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetPrepaidCardRedemptions() []PrepaidCardRedemptionType {
	if o == nil || IsNil(o.PrepaidCardRedemptions) {
		var ret []PrepaidCardRedemptionType
		return ret
	}
	return o.PrepaidCardRedemptions
}

// GetPrepaidCardRedemptionsOk returns a tuple with the PrepaidCardRedemptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetPrepaidCardRedemptionsOk() ([]PrepaidCardRedemptionType, bool) {
	if o == nil || IsNil(o.PrepaidCardRedemptions) {
		return nil, false
	}
	return o.PrepaidCardRedemptions, true
}

// HasPrepaidCardRedemptions returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasPrepaidCardRedemptions() bool {
	if o != nil && !IsNil(o.PrepaidCardRedemptions) {
		return true
	}

	return false
}

// SetPrepaidCardRedemptions gets a reference to the given []PrepaidCardRedemptionType and assigns it to the PrepaidCardRedemptions field.
func (o *ARPaymentCriteria) SetPrepaidCardRedemptions(v []PrepaidCardRedemptionType) {
	o.PrepaidCardRedemptions = v
}

// GetSequenceNo returns the SequenceNo field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetSequenceNo() int32 {
	if o == nil || IsNil(o.SequenceNo) {
		var ret int32
		return ret
	}
	return *o.SequenceNo
}

// GetSequenceNoOk returns a tuple with the SequenceNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetSequenceNoOk() (*int32, bool) {
	if o == nil || IsNil(o.SequenceNo) {
		return nil, false
	}
	return o.SequenceNo, true
}

// HasSequenceNo returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasSequenceNo() bool {
	if o != nil && !IsNil(o.SequenceNo) {
		return true
	}

	return false
}

// SetSequenceNo gets a reference to the given int32 and assigns it to the SequenceNo field.
func (o *ARPaymentCriteria) SetSequenceNo(v int32) {
	o.SequenceNo = &v
}

// GetTerminalId returns the TerminalId field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetTerminalId() string {
	if o == nil || IsNil(o.TerminalId) {
		var ret string
		return ret
	}
	return *o.TerminalId
}

// GetTerminalIdOk returns a tuple with the TerminalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetTerminalIdOk() (*string, bool) {
	if o == nil || IsNil(o.TerminalId) {
		return nil, false
	}
	return o.TerminalId, true
}

// HasTerminalId returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasTerminalId() bool {
	if o != nil && !IsNil(o.TerminalId) {
		return true
	}

	return false
}

// SetTerminalId gets a reference to the given string and assigns it to the TerminalId field.
func (o *ARPaymentCriteria) SetTerminalId(v string) {
	o.TerminalId = &v
}

// GetVATOffset returns the VATOffset field value if set, zero value otherwise.
func (o *ARPaymentCriteria) GetVATOffset() bool {
	if o == nil || IsNil(o.VATOffset) {
		var ret bool
		return ret
	}
	return *o.VATOffset
}

// GetVATOffsetOk returns a tuple with the VATOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentCriteria) GetVATOffsetOk() (*bool, bool) {
	if o == nil || IsNil(o.VATOffset) {
		return nil, false
	}
	return o.VATOffset, true
}

// HasVATOffset returns a boolean if a field has been set.
func (o *ARPaymentCriteria) HasVATOffset() bool {
	if o != nil && !IsNil(o.VATOffset) {
		return true
	}

	return false
}

// SetVATOffset gets a reference to the given bool and assigns it to the VATOffset field.
func (o *ARPaymentCriteria) SetVATOffset(v bool) {
	o.VATOffset = &v
}

func (o ARPaymentCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARPaymentCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ApplyCCSurcharge) {
		toSerialize["applyCCSurcharge"] = o.ApplyCCSurcharge
	}
	if !IsNil(o.ApplyCurrencyTaxes) {
		toSerialize["applyCurrencyTaxes"] = o.ApplyCurrencyTaxes
	}
	if !IsNil(o.ApplyType) {
		toSerialize["applyType"] = o.ApplyType
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.ChangeDueAmount) {
		toSerialize["changeDueAmount"] = o.ChangeDueAmount
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.CompRedemptions) {
		toSerialize["compRedemptions"] = o.CompRedemptions
	}
	if !IsNil(o.CreditablePaymentTaxes) {
		toSerialize["creditablePaymentTaxes"] = o.CreditablePaymentTaxes
	}
	if !IsNil(o.FolioWindowNo) {
		toSerialize["folioWindowNo"] = o.FolioWindowNo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Invoices) {
		toSerialize["invoices"] = o.Invoices
	}
	if !IsNil(o.ManualPaymentTaxInfo) {
		toSerialize["manualPaymentTaxInfo"] = o.ManualPaymentTaxInfo
	}
	if !IsNil(o.OverrideARCreditLimit) {
		toSerialize["overrideARCreditLimit"] = o.OverrideARCreditLimit
	}
	if !IsNil(o.OverrideInsufficientCC) {
		toSerialize["overrideInsufficientCC"] = o.OverrideInsufficientCC
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PostingAmount) {
		toSerialize["postingAmount"] = o.PostingAmount
	}
	if !IsNil(o.PostingReference) {
		toSerialize["postingReference"] = o.PostingReference
	}
	if !IsNil(o.PostingRemark) {
		toSerialize["postingRemark"] = o.PostingRemark
	}
	if !IsNil(o.PrepaidCardRedemptions) {
		toSerialize["prepaidCardRedemptions"] = o.PrepaidCardRedemptions
	}
	if !IsNil(o.SequenceNo) {
		toSerialize["sequenceNo"] = o.SequenceNo
	}
	if !IsNil(o.TerminalId) {
		toSerialize["terminalId"] = o.TerminalId
	}
	if !IsNil(o.VATOffset) {
		toSerialize["vATOffset"] = o.VATOffset
	}
	return toSerialize, nil
}

type NullableARPaymentCriteria struct {
	value *ARPaymentCriteria
	isSet bool
}

func (v NullableARPaymentCriteria) Get() *ARPaymentCriteria {
	return v.value
}

func (v *NullableARPaymentCriteria) Set(val *ARPaymentCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableARPaymentCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableARPaymentCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARPaymentCriteria(val *ARPaymentCriteria) *NullableARPaymentCriteria {
	return &NullableARPaymentCriteria{value: val, isSet: true}
}

func (v NullableARPaymentCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARPaymentCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


