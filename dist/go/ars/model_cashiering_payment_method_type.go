/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the CashieringPaymentMethodType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CashieringPaymentMethodType{}

// CashieringPaymentMethodType struct for CashieringPaymentMethodType
type CashieringPaymentMethodType struct {
	PaymentCard *ResPaymentCardType `json:"paymentCard,omitempty"`
	Balance *CurrencyAmountType `json:"balance,omitempty"`
	AuthorizationRule *AuthorizationRuleType `json:"authorizationRule,omitempty"`
	EmailFolioInfo *ReservationPaymentMethodTypeEmailFolioInfo `json:"emailFolioInfo,omitempty"`
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	Description *string `json:"description,omitempty"`
	FolioView *int32 `json:"folioView,omitempty"`
	AuthorizationApproval *AuthorizationInfoType `json:"authorizationApproval,omitempty"`
	// Track2 data for the card which would be sent to the CC vendor as part of the authorization.
	Track2Data *string `json:"track2Data,omitempty"`
}

// NewCashieringPaymentMethodType instantiates a new CashieringPaymentMethodType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashieringPaymentMethodType() *CashieringPaymentMethodType {
	this := CashieringPaymentMethodType{}
	return &this
}

// NewCashieringPaymentMethodTypeWithDefaults instantiates a new CashieringPaymentMethodType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashieringPaymentMethodTypeWithDefaults() *CashieringPaymentMethodType {
	this := CashieringPaymentMethodType{}
	return &this
}

// GetPaymentCard returns the PaymentCard field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetPaymentCard() ResPaymentCardType {
	if o == nil || IsNil(o.PaymentCard) {
		var ret ResPaymentCardType
		return ret
	}
	return *o.PaymentCard
}

// GetPaymentCardOk returns a tuple with the PaymentCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetPaymentCardOk() (*ResPaymentCardType, bool) {
	if o == nil || IsNil(o.PaymentCard) {
		return nil, false
	}
	return o.PaymentCard, true
}

// HasPaymentCard returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasPaymentCard() bool {
	if o != nil && !IsNil(o.PaymentCard) {
		return true
	}

	return false
}

// SetPaymentCard gets a reference to the given ResPaymentCardType and assigns it to the PaymentCard field.
func (o *CashieringPaymentMethodType) SetPaymentCard(v ResPaymentCardType) {
	o.PaymentCard = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetBalance() CurrencyAmountType {
	if o == nil || IsNil(o.Balance) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetBalanceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given CurrencyAmountType and assigns it to the Balance field.
func (o *CashieringPaymentMethodType) SetBalance(v CurrencyAmountType) {
	o.Balance = &v
}

// GetAuthorizationRule returns the AuthorizationRule field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetAuthorizationRule() AuthorizationRuleType {
	if o == nil || IsNil(o.AuthorizationRule) {
		var ret AuthorizationRuleType
		return ret
	}
	return *o.AuthorizationRule
}

// GetAuthorizationRuleOk returns a tuple with the AuthorizationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetAuthorizationRuleOk() (*AuthorizationRuleType, bool) {
	if o == nil || IsNil(o.AuthorizationRule) {
		return nil, false
	}
	return o.AuthorizationRule, true
}

// HasAuthorizationRule returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasAuthorizationRule() bool {
	if o != nil && !IsNil(o.AuthorizationRule) {
		return true
	}

	return false
}

// SetAuthorizationRule gets a reference to the given AuthorizationRuleType and assigns it to the AuthorizationRule field.
func (o *CashieringPaymentMethodType) SetAuthorizationRule(v AuthorizationRuleType) {
	o.AuthorizationRule = &v
}

// GetEmailFolioInfo returns the EmailFolioInfo field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetEmailFolioInfo() ReservationPaymentMethodTypeEmailFolioInfo {
	if o == nil || IsNil(o.EmailFolioInfo) {
		var ret ReservationPaymentMethodTypeEmailFolioInfo
		return ret
	}
	return *o.EmailFolioInfo
}

// GetEmailFolioInfoOk returns a tuple with the EmailFolioInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetEmailFolioInfoOk() (*ReservationPaymentMethodTypeEmailFolioInfo, bool) {
	if o == nil || IsNil(o.EmailFolioInfo) {
		return nil, false
	}
	return o.EmailFolioInfo, true
}

// HasEmailFolioInfo returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasEmailFolioInfo() bool {
	if o != nil && !IsNil(o.EmailFolioInfo) {
		return true
	}

	return false
}

// SetEmailFolioInfo gets a reference to the given ReservationPaymentMethodTypeEmailFolioInfo and assigns it to the EmailFolioInfo field.
func (o *CashieringPaymentMethodType) SetEmailFolioInfo(v ReservationPaymentMethodTypeEmailFolioInfo) {
	o.EmailFolioInfo = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *CashieringPaymentMethodType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CashieringPaymentMethodType) SetDescription(v string) {
	o.Description = &v
}

// GetFolioView returns the FolioView field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetFolioView() int32 {
	if o == nil || IsNil(o.FolioView) {
		var ret int32
		return ret
	}
	return *o.FolioView
}

// GetFolioViewOk returns a tuple with the FolioView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetFolioViewOk() (*int32, bool) {
	if o == nil || IsNil(o.FolioView) {
		return nil, false
	}
	return o.FolioView, true
}

// HasFolioView returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasFolioView() bool {
	if o != nil && !IsNil(o.FolioView) {
		return true
	}

	return false
}

// SetFolioView gets a reference to the given int32 and assigns it to the FolioView field.
func (o *CashieringPaymentMethodType) SetFolioView(v int32) {
	o.FolioView = &v
}

// GetAuthorizationApproval returns the AuthorizationApproval field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetAuthorizationApproval() AuthorizationInfoType {
	if o == nil || IsNil(o.AuthorizationApproval) {
		var ret AuthorizationInfoType
		return ret
	}
	return *o.AuthorizationApproval
}

// GetAuthorizationApprovalOk returns a tuple with the AuthorizationApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetAuthorizationApprovalOk() (*AuthorizationInfoType, bool) {
	if o == nil || IsNil(o.AuthorizationApproval) {
		return nil, false
	}
	return o.AuthorizationApproval, true
}

// HasAuthorizationApproval returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasAuthorizationApproval() bool {
	if o != nil && !IsNil(o.AuthorizationApproval) {
		return true
	}

	return false
}

// SetAuthorizationApproval gets a reference to the given AuthorizationInfoType and assigns it to the AuthorizationApproval field.
func (o *CashieringPaymentMethodType) SetAuthorizationApproval(v AuthorizationInfoType) {
	o.AuthorizationApproval = &v
}

// GetTrack2Data returns the Track2Data field value if set, zero value otherwise.
func (o *CashieringPaymentMethodType) GetTrack2Data() string {
	if o == nil || IsNil(o.Track2Data) {
		var ret string
		return ret
	}
	return *o.Track2Data
}

// GetTrack2DataOk returns a tuple with the Track2Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashieringPaymentMethodType) GetTrack2DataOk() (*string, bool) {
	if o == nil || IsNil(o.Track2Data) {
		return nil, false
	}
	return o.Track2Data, true
}

// HasTrack2Data returns a boolean if a field has been set.
func (o *CashieringPaymentMethodType) HasTrack2Data() bool {
	if o != nil && !IsNil(o.Track2Data) {
		return true
	}

	return false
}

// SetTrack2Data gets a reference to the given string and assigns it to the Track2Data field.
func (o *CashieringPaymentMethodType) SetTrack2Data(v string) {
	o.Track2Data = &v
}

func (o CashieringPaymentMethodType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CashieringPaymentMethodType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentCard) {
		toSerialize["paymentCard"] = o.PaymentCard
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.AuthorizationRule) {
		toSerialize["authorizationRule"] = o.AuthorizationRule
	}
	if !IsNil(o.EmailFolioInfo) {
		toSerialize["emailFolioInfo"] = o.EmailFolioInfo
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FolioView) {
		toSerialize["folioView"] = o.FolioView
	}
	if !IsNil(o.AuthorizationApproval) {
		toSerialize["authorizationApproval"] = o.AuthorizationApproval
	}
	if !IsNil(o.Track2Data) {
		toSerialize["track2Data"] = o.Track2Data
	}
	return toSerialize, nil
}

type NullableCashieringPaymentMethodType struct {
	value *CashieringPaymentMethodType
	isSet bool
}

func (v NullableCashieringPaymentMethodType) Get() *CashieringPaymentMethodType {
	return v.value
}

func (v *NullableCashieringPaymentMethodType) Set(val *CashieringPaymentMethodType) {
	v.value = val
	v.isSet = true
}

func (v NullableCashieringPaymentMethodType) IsSet() bool {
	return v.isSet
}

func (v *NullableCashieringPaymentMethodType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashieringPaymentMethodType(val *CashieringPaymentMethodType) *NullableCashieringPaymentMethodType {
	return &NullableCashieringPaymentMethodType{value: val, isSet: true}
}

func (v NullableCashieringPaymentMethodType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashieringPaymentMethodType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


