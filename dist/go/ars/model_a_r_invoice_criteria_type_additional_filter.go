/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARInvoiceCriteriaTypeAdditionalFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARInvoiceCriteriaTypeAdditionalFilter{}

// ARInvoiceCriteriaTypeAdditionalFilter To apply additional filter on the posting of an invoice
type ARInvoiceCriteriaTypeAdditionalFilter struct {
	// Cashier Id of the Cashier.
	CashierId *float32 `json:"cashierId,omitempty"`
	// Lookup string which will try to match an existing Cheque number's.
	CheckNumberWildCard *string `json:"checkNumberWildCard,omitempty"`
	DateRange *DateRangeType `json:"dateRange,omitempty"`
	// Filters the results for reference.
	ReferenceWildCard *string `json:"referenceWildCard,omitempty"`
	// Filter the results for supplement.
	SupplementWildCard *string `json:"supplementWildCard,omitempty"`
	TransactionCode []string `json:"transactionCode,omitempty"`
	TransactionSubGroup []string `json:"transactionSubGroup,omitempty"`
}

// NewARInvoiceCriteriaTypeAdditionalFilter instantiates a new ARInvoiceCriteriaTypeAdditionalFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARInvoiceCriteriaTypeAdditionalFilter() *ARInvoiceCriteriaTypeAdditionalFilter {
	this := ARInvoiceCriteriaTypeAdditionalFilter{}
	return &this
}

// NewARInvoiceCriteriaTypeAdditionalFilterWithDefaults instantiates a new ARInvoiceCriteriaTypeAdditionalFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARInvoiceCriteriaTypeAdditionalFilterWithDefaults() *ARInvoiceCriteriaTypeAdditionalFilter {
	this := ARInvoiceCriteriaTypeAdditionalFilter{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetCheckNumberWildCard returns the CheckNumberWildCard field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetCheckNumberWildCard() string {
	if o == nil || IsNil(o.CheckNumberWildCard) {
		var ret string
		return ret
	}
	return *o.CheckNumberWildCard
}

// GetCheckNumberWildCardOk returns a tuple with the CheckNumberWildCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetCheckNumberWildCardOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNumberWildCard) {
		return nil, false
	}
	return o.CheckNumberWildCard, true
}

// HasCheckNumberWildCard returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasCheckNumberWildCard() bool {
	if o != nil && !IsNil(o.CheckNumberWildCard) {
		return true
	}

	return false
}

// SetCheckNumberWildCard gets a reference to the given string and assigns it to the CheckNumberWildCard field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetCheckNumberWildCard(v string) {
	o.CheckNumberWildCard = &v
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetDateRange() DateRangeType {
	if o == nil || IsNil(o.DateRange) {
		var ret DateRangeType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetDateRangeOk() (*DateRangeType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given DateRangeType and assigns it to the DateRange field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetDateRange(v DateRangeType) {
	o.DateRange = &v
}

// GetReferenceWildCard returns the ReferenceWildCard field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetReferenceWildCard() string {
	if o == nil || IsNil(o.ReferenceWildCard) {
		var ret string
		return ret
	}
	return *o.ReferenceWildCard
}

// GetReferenceWildCardOk returns a tuple with the ReferenceWildCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetReferenceWildCardOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceWildCard) {
		return nil, false
	}
	return o.ReferenceWildCard, true
}

// HasReferenceWildCard returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasReferenceWildCard() bool {
	if o != nil && !IsNil(o.ReferenceWildCard) {
		return true
	}

	return false
}

// SetReferenceWildCard gets a reference to the given string and assigns it to the ReferenceWildCard field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetReferenceWildCard(v string) {
	o.ReferenceWildCard = &v
}

// GetSupplementWildCard returns the SupplementWildCard field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetSupplementWildCard() string {
	if o == nil || IsNil(o.SupplementWildCard) {
		var ret string
		return ret
	}
	return *o.SupplementWildCard
}

// GetSupplementWildCardOk returns a tuple with the SupplementWildCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetSupplementWildCardOk() (*string, bool) {
	if o == nil || IsNil(o.SupplementWildCard) {
		return nil, false
	}
	return o.SupplementWildCard, true
}

// HasSupplementWildCard returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasSupplementWildCard() bool {
	if o != nil && !IsNil(o.SupplementWildCard) {
		return true
	}

	return false
}

// SetSupplementWildCard gets a reference to the given string and assigns it to the SupplementWildCard field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetSupplementWildCard(v string) {
	o.SupplementWildCard = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetTransactionCode() []string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret []string
		return ret
	}
	return o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetTransactionCodeOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given []string and assigns it to the TransactionCode field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetTransactionCode(v []string) {
	o.TransactionCode = v
}

// GetTransactionSubGroup returns the TransactionSubGroup field value if set, zero value otherwise.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetTransactionSubGroup() []string {
	if o == nil || IsNil(o.TransactionSubGroup) {
		var ret []string
		return ret
	}
	return o.TransactionSubGroup
}

// GetTransactionSubGroupOk returns a tuple with the TransactionSubGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) GetTransactionSubGroupOk() ([]string, bool) {
	if o == nil || IsNil(o.TransactionSubGroup) {
		return nil, false
	}
	return o.TransactionSubGroup, true
}

// HasTransactionSubGroup returns a boolean if a field has been set.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) HasTransactionSubGroup() bool {
	if o != nil && !IsNil(o.TransactionSubGroup) {
		return true
	}

	return false
}

// SetTransactionSubGroup gets a reference to the given []string and assigns it to the TransactionSubGroup field.
func (o *ARInvoiceCriteriaTypeAdditionalFilter) SetTransactionSubGroup(v []string) {
	o.TransactionSubGroup = v
}

func (o ARInvoiceCriteriaTypeAdditionalFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARInvoiceCriteriaTypeAdditionalFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.CheckNumberWildCard) {
		toSerialize["checkNumberWildCard"] = o.CheckNumberWildCard
	}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.ReferenceWildCard) {
		toSerialize["referenceWildCard"] = o.ReferenceWildCard
	}
	if !IsNil(o.SupplementWildCard) {
		toSerialize["supplementWildCard"] = o.SupplementWildCard
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.TransactionSubGroup) {
		toSerialize["transactionSubGroup"] = o.TransactionSubGroup
	}
	return toSerialize, nil
}

type NullableARInvoiceCriteriaTypeAdditionalFilter struct {
	value *ARInvoiceCriteriaTypeAdditionalFilter
	isSet bool
}

func (v NullableARInvoiceCriteriaTypeAdditionalFilter) Get() *ARInvoiceCriteriaTypeAdditionalFilter {
	return v.value
}

func (v *NullableARInvoiceCriteriaTypeAdditionalFilter) Set(val *ARInvoiceCriteriaTypeAdditionalFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableARInvoiceCriteriaTypeAdditionalFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableARInvoiceCriteriaTypeAdditionalFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARInvoiceCriteriaTypeAdditionalFilter(val *ARInvoiceCriteriaTypeAdditionalFilter) *NullableARInvoiceCriteriaTypeAdditionalFilter {
	return &NullableARInvoiceCriteriaTypeAdditionalFilter{value: val, isSet: true}
}

func (v NullableARInvoiceCriteriaTypeAdditionalFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARInvoiceCriteriaTypeAdditionalFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


