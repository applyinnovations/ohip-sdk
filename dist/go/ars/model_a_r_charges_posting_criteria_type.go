/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARChargesPostingCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARChargesPostingCriteriaType{}

// ARChargesPostingCriteriaType The charges which have to be posted.
type ARChargesPostingCriteriaType struct {
	Account *ARAccountCriteriaType `json:"account,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	// Collection of Charges to be posted.
	Charges []ChargeCriteriaType `json:"charges,omitempty"`
	// Property where the charges are to be posted.
	HotelId *string `json:"hotelId,omitempty"`
	Invoice *ARInvoiceType `json:"invoice,omitempty"`
	OverrideCreditHoldCheck *bool `json:"overrideCreditHoldCheck,omitempty"`
}

// NewARChargesPostingCriteriaType instantiates a new ARChargesPostingCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARChargesPostingCriteriaType() *ARChargesPostingCriteriaType {
	this := ARChargesPostingCriteriaType{}
	return &this
}

// NewARChargesPostingCriteriaTypeWithDefaults instantiates a new ARChargesPostingCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARChargesPostingCriteriaTypeWithDefaults() *ARChargesPostingCriteriaType {
	this := ARChargesPostingCriteriaType{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetAccount() ARAccountCriteriaType {
	if o == nil || IsNil(o.Account) {
		var ret ARAccountCriteriaType
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetAccountOk() (*ARAccountCriteriaType, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ARAccountCriteriaType and assigns it to the Account field.
func (o *ARChargesPostingCriteriaType) SetAccount(v ARAccountCriteriaType) {
	o.Account = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *ARChargesPostingCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetCharges returns the Charges field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetCharges() []ChargeCriteriaType {
	if o == nil || IsNil(o.Charges) {
		var ret []ChargeCriteriaType
		return ret
	}
	return o.Charges
}

// GetChargesOk returns a tuple with the Charges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetChargesOk() ([]ChargeCriteriaType, bool) {
	if o == nil || IsNil(o.Charges) {
		return nil, false
	}
	return o.Charges, true
}

// HasCharges returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasCharges() bool {
	if o != nil && !IsNil(o.Charges) {
		return true
	}

	return false
}

// SetCharges gets a reference to the given []ChargeCriteriaType and assigns it to the Charges field.
func (o *ARChargesPostingCriteriaType) SetCharges(v []ChargeCriteriaType) {
	o.Charges = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARChargesPostingCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInvoice returns the Invoice field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetInvoice() ARInvoiceType {
	if o == nil || IsNil(o.Invoice) {
		var ret ARInvoiceType
		return ret
	}
	return *o.Invoice
}

// GetInvoiceOk returns a tuple with the Invoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetInvoiceOk() (*ARInvoiceType, bool) {
	if o == nil || IsNil(o.Invoice) {
		return nil, false
	}
	return o.Invoice, true
}

// HasInvoice returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasInvoice() bool {
	if o != nil && !IsNil(o.Invoice) {
		return true
	}

	return false
}

// SetInvoice gets a reference to the given ARInvoiceType and assigns it to the Invoice field.
func (o *ARChargesPostingCriteriaType) SetInvoice(v ARInvoiceType) {
	o.Invoice = &v
}

// GetOverrideCreditHoldCheck returns the OverrideCreditHoldCheck field value if set, zero value otherwise.
func (o *ARChargesPostingCriteriaType) GetOverrideCreditHoldCheck() bool {
	if o == nil || IsNil(o.OverrideCreditHoldCheck) {
		var ret bool
		return ret
	}
	return *o.OverrideCreditHoldCheck
}

// GetOverrideCreditHoldCheckOk returns a tuple with the OverrideCreditHoldCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARChargesPostingCriteriaType) GetOverrideCreditHoldCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideCreditHoldCheck) {
		return nil, false
	}
	return o.OverrideCreditHoldCheck, true
}

// HasOverrideCreditHoldCheck returns a boolean if a field has been set.
func (o *ARChargesPostingCriteriaType) HasOverrideCreditHoldCheck() bool {
	if o != nil && !IsNil(o.OverrideCreditHoldCheck) {
		return true
	}

	return false
}

// SetOverrideCreditHoldCheck gets a reference to the given bool and assigns it to the OverrideCreditHoldCheck field.
func (o *ARChargesPostingCriteriaType) SetOverrideCreditHoldCheck(v bool) {
	o.OverrideCreditHoldCheck = &v
}

func (o ARChargesPostingCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARChargesPostingCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.Charges) {
		toSerialize["charges"] = o.Charges
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Invoice) {
		toSerialize["invoice"] = o.Invoice
	}
	if !IsNil(o.OverrideCreditHoldCheck) {
		toSerialize["overrideCreditHoldCheck"] = o.OverrideCreditHoldCheck
	}
	return toSerialize, nil
}

type NullableARChargesPostingCriteriaType struct {
	value *ARChargesPostingCriteriaType
	isSet bool
}

func (v NullableARChargesPostingCriteriaType) Get() *ARChargesPostingCriteriaType {
	return v.value
}

func (v *NullableARChargesPostingCriteriaType) Set(val *ARChargesPostingCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableARChargesPostingCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableARChargesPostingCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARChargesPostingCriteriaType(val *ARChargesPostingCriteriaType) *NullableARChargesPostingCriteriaType {
	return &NullableARChargesPostingCriteriaType{value: val, isSet: true}
}

func (v NullableARChargesPostingCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARChargesPostingCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


