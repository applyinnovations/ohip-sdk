/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARPaymentsCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARPaymentsCriteriaType{}

// ARPaymentsCriteriaType struct for ARPaymentsCriteriaType
type ARPaymentsCriteriaType struct {
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
	Payment []ARPaymentCriteria `json:"payment,omitempty"`
}

// NewARPaymentsCriteriaType instantiates a new ARPaymentsCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARPaymentsCriteriaType() *ARPaymentsCriteriaType {
	this := ARPaymentsCriteriaType{}
	return &this
}

// NewARPaymentsCriteriaTypeWithDefaults instantiates a new ARPaymentsCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARPaymentsCriteriaTypeWithDefaults() *ARPaymentsCriteriaType {
	this := ARPaymentsCriteriaType{}
	return &this
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *ARPaymentsCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentsCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *ARPaymentsCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *ARPaymentsCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *ARPaymentsCriteriaType) GetPayment() []ARPaymentCriteria {
	if o == nil || IsNil(o.Payment) {
		var ret []ARPaymentCriteria
		return ret
	}
	return o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARPaymentsCriteriaType) GetPaymentOk() ([]ARPaymentCriteria, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *ARPaymentsCriteriaType) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given []ARPaymentCriteria and assigns it to the Payment field.
func (o *ARPaymentsCriteriaType) SetPayment(v []ARPaymentCriteria) {
	o.Payment = v
}

func (o ARPaymentsCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARPaymentsCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	return toSerialize, nil
}

type NullableARPaymentsCriteriaType struct {
	value *ARPaymentsCriteriaType
	isSet bool
}

func (v NullableARPaymentsCriteriaType) Get() *ARPaymentsCriteriaType {
	return v.value
}

func (v *NullableARPaymentsCriteriaType) Set(val *ARPaymentsCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableARPaymentsCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableARPaymentsCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARPaymentsCriteriaType(val *ARPaymentsCriteriaType) *NullableARPaymentsCriteriaType {
	return &NullableARPaymentsCriteriaType{value: val, isSet: true}
}

func (v NullableARPaymentsCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARPaymentsCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


