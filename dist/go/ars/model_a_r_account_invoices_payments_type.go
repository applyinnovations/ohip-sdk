/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARAccountInvoicesPaymentsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARAccountInvoicesPaymentsType{}

// ARAccountInvoicesPaymentsType AR Account Invoices Information.
type ARAccountInvoicesPaymentsType struct {
	AccountId *UniqueIDType `json:"accountId,omitempty"`
	// Name of the AR Account.
	AccountName *string `json:"accountName,omitempty"`
	// The Account Number for the Account.
	AccountNo *string `json:"accountNo,omitempty"`
	// Property where the Account exists.
	HotelId *string `json:"hotelId,omitempty"`
	// A collection of AR Invoices.
	Invoices []ARInvoiceType `json:"invoices,omitempty"`
	// Month End Calculation.
	MonthEndCalcYN *bool `json:"monthEndCalcYN,omitempty"`
	// Number of days on which person can make payment.
	PaymentDueDays *string `json:"paymentDueDays,omitempty"`
	// A collection of AR Payments.
	Payments []ARPaymentType `json:"payments,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
	Summary *ARBalanceType `json:"summary,omitempty"`
}

// NewARAccountInvoicesPaymentsType instantiates a new ARAccountInvoicesPaymentsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARAccountInvoicesPaymentsType() *ARAccountInvoicesPaymentsType {
	this := ARAccountInvoicesPaymentsType{}
	return &this
}

// NewARAccountInvoicesPaymentsTypeWithDefaults instantiates a new ARAccountInvoicesPaymentsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARAccountInvoicesPaymentsTypeWithDefaults() *ARAccountInvoicesPaymentsType {
	this := ARAccountInvoicesPaymentsType{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetAccountId() UniqueIDType {
	if o == nil || IsNil(o.AccountId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetAccountIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given UniqueIDType and assigns it to the AccountId field.
func (o *ARAccountInvoicesPaymentsType) SetAccountId(v UniqueIDType) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *ARAccountInvoicesPaymentsType) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNo returns the AccountNo field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetAccountNo() string {
	if o == nil || IsNil(o.AccountNo) {
		var ret string
		return ret
	}
	return *o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetAccountNoOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNo) {
		return nil, false
	}
	return o.AccountNo, true
}

// HasAccountNo returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasAccountNo() bool {
	if o != nil && !IsNil(o.AccountNo) {
		return true
	}

	return false
}

// SetAccountNo gets a reference to the given string and assigns it to the AccountNo field.
func (o *ARAccountInvoicesPaymentsType) SetAccountNo(v string) {
	o.AccountNo = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARAccountInvoicesPaymentsType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInvoices returns the Invoices field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetInvoices() []ARInvoiceType {
	if o == nil || IsNil(o.Invoices) {
		var ret []ARInvoiceType
		return ret
	}
	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetInvoicesOk() ([]ARInvoiceType, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return o.Invoices, true
}

// HasInvoices returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasInvoices() bool {
	if o != nil && !IsNil(o.Invoices) {
		return true
	}

	return false
}

// SetInvoices gets a reference to the given []ARInvoiceType and assigns it to the Invoices field.
func (o *ARAccountInvoicesPaymentsType) SetInvoices(v []ARInvoiceType) {
	o.Invoices = v
}

// GetMonthEndCalcYN returns the MonthEndCalcYN field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetMonthEndCalcYN() bool {
	if o == nil || IsNil(o.MonthEndCalcYN) {
		var ret bool
		return ret
	}
	return *o.MonthEndCalcYN
}

// GetMonthEndCalcYNOk returns a tuple with the MonthEndCalcYN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetMonthEndCalcYNOk() (*bool, bool) {
	if o == nil || IsNil(o.MonthEndCalcYN) {
		return nil, false
	}
	return o.MonthEndCalcYN, true
}

// HasMonthEndCalcYN returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasMonthEndCalcYN() bool {
	if o != nil && !IsNil(o.MonthEndCalcYN) {
		return true
	}

	return false
}

// SetMonthEndCalcYN gets a reference to the given bool and assigns it to the MonthEndCalcYN field.
func (o *ARAccountInvoicesPaymentsType) SetMonthEndCalcYN(v bool) {
	o.MonthEndCalcYN = &v
}

// GetPaymentDueDays returns the PaymentDueDays field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetPaymentDueDays() string {
	if o == nil || IsNil(o.PaymentDueDays) {
		var ret string
		return ret
	}
	return *o.PaymentDueDays
}

// GetPaymentDueDaysOk returns a tuple with the PaymentDueDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetPaymentDueDaysOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentDueDays) {
		return nil, false
	}
	return o.PaymentDueDays, true
}

// HasPaymentDueDays returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasPaymentDueDays() bool {
	if o != nil && !IsNil(o.PaymentDueDays) {
		return true
	}

	return false
}

// SetPaymentDueDays gets a reference to the given string and assigns it to the PaymentDueDays field.
func (o *ARAccountInvoicesPaymentsType) SetPaymentDueDays(v string) {
	o.PaymentDueDays = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetPayments() []ARPaymentType {
	if o == nil || IsNil(o.Payments) {
		var ret []ARPaymentType
		return ret
	}
	return o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetPaymentsOk() ([]ARPaymentType, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasPayments() bool {
	if o != nil && !IsNil(o.Payments) {
		return true
	}

	return false
}

// SetPayments gets a reference to the given []ARPaymentType and assigns it to the Payments field.
func (o *ARAccountInvoicesPaymentsType) SetPayments(v []ARPaymentType) {
	o.Payments = v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *ARAccountInvoicesPaymentsType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *ARAccountInvoicesPaymentsType) GetSummary() ARBalanceType {
	if o == nil || IsNil(o.Summary) {
		var ret ARBalanceType
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARAccountInvoicesPaymentsType) GetSummaryOk() (*ARBalanceType, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *ARAccountInvoicesPaymentsType) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given ARBalanceType and assigns it to the Summary field.
func (o *ARAccountInvoicesPaymentsType) SetSummary(v ARBalanceType) {
	o.Summary = &v
}

func (o ARAccountInvoicesPaymentsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARAccountInvoicesPaymentsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.AccountNo) {
		toSerialize["accountNo"] = o.AccountNo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Invoices) {
		toSerialize["invoices"] = o.Invoices
	}
	if !IsNil(o.MonthEndCalcYN) {
		toSerialize["monthEndCalcYN"] = o.MonthEndCalcYN
	}
	if !IsNil(o.PaymentDueDays) {
		toSerialize["paymentDueDays"] = o.PaymentDueDays
	}
	if !IsNil(o.Payments) {
		toSerialize["payments"] = o.Payments
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	return toSerialize, nil
}

type NullableARAccountInvoicesPaymentsType struct {
	value *ARAccountInvoicesPaymentsType
	isSet bool
}

func (v NullableARAccountInvoicesPaymentsType) Get() *ARAccountInvoicesPaymentsType {
	return v.value
}

func (v *NullableARAccountInvoicesPaymentsType) Set(val *ARAccountInvoicesPaymentsType) {
	v.value = val
	v.isSet = true
}

func (v NullableARAccountInvoicesPaymentsType) IsSet() bool {
	return v.isSet
}

func (v *NullableARAccountInvoicesPaymentsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARAccountInvoicesPaymentsType(val *ARAccountInvoicesPaymentsType) *NullableARAccountInvoicesPaymentsType {
	return &NullableARAccountInvoicesPaymentsType{value: val, isSet: true}
}

func (v NullableARAccountInvoicesPaymentsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARAccountInvoicesPaymentsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


