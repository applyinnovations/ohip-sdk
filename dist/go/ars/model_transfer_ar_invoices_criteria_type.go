/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the TransferARInvoicesCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferARInvoicesCriteriaType{}

// TransferARInvoicesCriteriaType Criteria for transferring invoice(s) to another account.
type TransferARInvoicesCriteriaType struct {
	// AR Invoice(s) to be transferred.
	InvoicesTransferType []ARInvoiceType `json:"invoicesTransferType,omitempty"`
	FromAccount *ARAccountCriteriaType `json:"fromAccount,omitempty"`
	ToAccount *ARAccountCriteriaType `json:"toAccount,omitempty"`
	TransferAmount *CurrencyAmountType `json:"transferAmount,omitempty"`
	// User defined Remarks for this transfer
	Remarks *string `json:"remarks,omitempty"`
	OverrideCreditHoldCheck *bool `json:"overrideCreditHoldCheck,omitempty"`
	// The Cashier ID of the Cashier who is currently processing the transaction(s).
	CashierId *float32 `json:"cashierId,omitempty"`
}

// NewTransferARInvoicesCriteriaType instantiates a new TransferARInvoicesCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferARInvoicesCriteriaType() *TransferARInvoicesCriteriaType {
	this := TransferARInvoicesCriteriaType{}
	return &this
}

// NewTransferARInvoicesCriteriaTypeWithDefaults instantiates a new TransferARInvoicesCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferARInvoicesCriteriaTypeWithDefaults() *TransferARInvoicesCriteriaType {
	this := TransferARInvoicesCriteriaType{}
	return &this
}

// GetInvoicesTransferType returns the InvoicesTransferType field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetInvoicesTransferType() []ARInvoiceType {
	if o == nil || IsNil(o.InvoicesTransferType) {
		var ret []ARInvoiceType
		return ret
	}
	return o.InvoicesTransferType
}

// GetInvoicesTransferTypeOk returns a tuple with the InvoicesTransferType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetInvoicesTransferTypeOk() ([]ARInvoiceType, bool) {
	if o == nil || IsNil(o.InvoicesTransferType) {
		return nil, false
	}
	return o.InvoicesTransferType, true
}

// HasInvoicesTransferType returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasInvoicesTransferType() bool {
	if o != nil && !IsNil(o.InvoicesTransferType) {
		return true
	}

	return false
}

// SetInvoicesTransferType gets a reference to the given []ARInvoiceType and assigns it to the InvoicesTransferType field.
func (o *TransferARInvoicesCriteriaType) SetInvoicesTransferType(v []ARInvoiceType) {
	o.InvoicesTransferType = v
}

// GetFromAccount returns the FromAccount field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetFromAccount() ARAccountCriteriaType {
	if o == nil || IsNil(o.FromAccount) {
		var ret ARAccountCriteriaType
		return ret
	}
	return *o.FromAccount
}

// GetFromAccountOk returns a tuple with the FromAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetFromAccountOk() (*ARAccountCriteriaType, bool) {
	if o == nil || IsNil(o.FromAccount) {
		return nil, false
	}
	return o.FromAccount, true
}

// HasFromAccount returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasFromAccount() bool {
	if o != nil && !IsNil(o.FromAccount) {
		return true
	}

	return false
}

// SetFromAccount gets a reference to the given ARAccountCriteriaType and assigns it to the FromAccount field.
func (o *TransferARInvoicesCriteriaType) SetFromAccount(v ARAccountCriteriaType) {
	o.FromAccount = &v
}

// GetToAccount returns the ToAccount field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetToAccount() ARAccountCriteriaType {
	if o == nil || IsNil(o.ToAccount) {
		var ret ARAccountCriteriaType
		return ret
	}
	return *o.ToAccount
}

// GetToAccountOk returns a tuple with the ToAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetToAccountOk() (*ARAccountCriteriaType, bool) {
	if o == nil || IsNil(o.ToAccount) {
		return nil, false
	}
	return o.ToAccount, true
}

// HasToAccount returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasToAccount() bool {
	if o != nil && !IsNil(o.ToAccount) {
		return true
	}

	return false
}

// SetToAccount gets a reference to the given ARAccountCriteriaType and assigns it to the ToAccount field.
func (o *TransferARInvoicesCriteriaType) SetToAccount(v ARAccountCriteriaType) {
	o.ToAccount = &v
}

// GetTransferAmount returns the TransferAmount field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetTransferAmount() CurrencyAmountType {
	if o == nil || IsNil(o.TransferAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TransferAmount
}

// GetTransferAmountOk returns a tuple with the TransferAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetTransferAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TransferAmount) {
		return nil, false
	}
	return o.TransferAmount, true
}

// HasTransferAmount returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasTransferAmount() bool {
	if o != nil && !IsNil(o.TransferAmount) {
		return true
	}

	return false
}

// SetTransferAmount gets a reference to the given CurrencyAmountType and assigns it to the TransferAmount field.
func (o *TransferARInvoicesCriteriaType) SetTransferAmount(v CurrencyAmountType) {
	o.TransferAmount = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *TransferARInvoicesCriteriaType) SetRemarks(v string) {
	o.Remarks = &v
}

// GetOverrideCreditHoldCheck returns the OverrideCreditHoldCheck field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetOverrideCreditHoldCheck() bool {
	if o == nil || IsNil(o.OverrideCreditHoldCheck) {
		var ret bool
		return ret
	}
	return *o.OverrideCreditHoldCheck
}

// GetOverrideCreditHoldCheckOk returns a tuple with the OverrideCreditHoldCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetOverrideCreditHoldCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideCreditHoldCheck) {
		return nil, false
	}
	return o.OverrideCreditHoldCheck, true
}

// HasOverrideCreditHoldCheck returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasOverrideCreditHoldCheck() bool {
	if o != nil && !IsNil(o.OverrideCreditHoldCheck) {
		return true
	}

	return false
}

// SetOverrideCreditHoldCheck gets a reference to the given bool and assigns it to the OverrideCreditHoldCheck field.
func (o *TransferARInvoicesCriteriaType) SetOverrideCreditHoldCheck(v bool) {
	o.OverrideCreditHoldCheck = &v
}

// GetCashierId returns the CashierId field value if set, zero value otherwise.
func (o *TransferARInvoicesCriteriaType) GetCashierId() float32 {
	if o == nil || IsNil(o.CashierId) {
		var ret float32
		return ret
	}
	return *o.CashierId
}

// GetCashierIdOk returns a tuple with the CashierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferARInvoicesCriteriaType) GetCashierIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CashierId) {
		return nil, false
	}
	return o.CashierId, true
}

// HasCashierId returns a boolean if a field has been set.
func (o *TransferARInvoicesCriteriaType) HasCashierId() bool {
	if o != nil && !IsNil(o.CashierId) {
		return true
	}

	return false
}

// SetCashierId gets a reference to the given float32 and assigns it to the CashierId field.
func (o *TransferARInvoicesCriteriaType) SetCashierId(v float32) {
	o.CashierId = &v
}

func (o TransferARInvoicesCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferARInvoicesCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InvoicesTransferType) {
		toSerialize["invoicesTransferType"] = o.InvoicesTransferType
	}
	if !IsNil(o.FromAccount) {
		toSerialize["fromAccount"] = o.FromAccount
	}
	if !IsNil(o.ToAccount) {
		toSerialize["toAccount"] = o.ToAccount
	}
	if !IsNil(o.TransferAmount) {
		toSerialize["transferAmount"] = o.TransferAmount
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.OverrideCreditHoldCheck) {
		toSerialize["overrideCreditHoldCheck"] = o.OverrideCreditHoldCheck
	}
	if !IsNil(o.CashierId) {
		toSerialize["cashierId"] = o.CashierId
	}
	return toSerialize, nil
}

type NullableTransferARInvoicesCriteriaType struct {
	value *TransferARInvoicesCriteriaType
	isSet bool
}

func (v NullableTransferARInvoicesCriteriaType) Get() *TransferARInvoicesCriteriaType {
	return v.value
}

func (v *NullableTransferARInvoicesCriteriaType) Set(val *TransferARInvoicesCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferARInvoicesCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferARInvoicesCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferARInvoicesCriteriaType(val *TransferARInvoicesCriteriaType) *NullableTransferARInvoicesCriteriaType {
	return &NullableTransferARInvoicesCriteriaType{value: val, isSet: true}
}

func (v NullableTransferARInvoicesCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferARInvoicesCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


