/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARProfileAgingInfoTypeHotelInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARProfileAgingInfoTypeHotelInner{}

// ARProfileAgingInfoTypeHotelInner struct for ARProfileAgingInfoTypeHotelInner
type ARProfileAgingInfoTypeHotelInner struct {
	TotalHotelAging *ARAgingInfoType `json:"totalHotelAging,omitempty"`
	// Information regarding the AR Account.
	AccountAging []ARAccountType `json:"accountAging,omitempty"`
	// Property Code for the Aging information.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewARProfileAgingInfoTypeHotelInner instantiates a new ARProfileAgingInfoTypeHotelInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARProfileAgingInfoTypeHotelInner() *ARProfileAgingInfoTypeHotelInner {
	this := ARProfileAgingInfoTypeHotelInner{}
	return &this
}

// NewARProfileAgingInfoTypeHotelInnerWithDefaults instantiates a new ARProfileAgingInfoTypeHotelInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARProfileAgingInfoTypeHotelInnerWithDefaults() *ARProfileAgingInfoTypeHotelInner {
	this := ARProfileAgingInfoTypeHotelInner{}
	return &this
}

// GetTotalHotelAging returns the TotalHotelAging field value if set, zero value otherwise.
func (o *ARProfileAgingInfoTypeHotelInner) GetTotalHotelAging() ARAgingInfoType {
	if o == nil || IsNil(o.TotalHotelAging) {
		var ret ARAgingInfoType
		return ret
	}
	return *o.TotalHotelAging
}

// GetTotalHotelAgingOk returns a tuple with the TotalHotelAging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARProfileAgingInfoTypeHotelInner) GetTotalHotelAgingOk() (*ARAgingInfoType, bool) {
	if o == nil || IsNil(o.TotalHotelAging) {
		return nil, false
	}
	return o.TotalHotelAging, true
}

// HasTotalHotelAging returns a boolean if a field has been set.
func (o *ARProfileAgingInfoTypeHotelInner) HasTotalHotelAging() bool {
	if o != nil && !IsNil(o.TotalHotelAging) {
		return true
	}

	return false
}

// SetTotalHotelAging gets a reference to the given ARAgingInfoType and assigns it to the TotalHotelAging field.
func (o *ARProfileAgingInfoTypeHotelInner) SetTotalHotelAging(v ARAgingInfoType) {
	o.TotalHotelAging = &v
}

// GetAccountAging returns the AccountAging field value if set, zero value otherwise.
func (o *ARProfileAgingInfoTypeHotelInner) GetAccountAging() []ARAccountType {
	if o == nil || IsNil(o.AccountAging) {
		var ret []ARAccountType
		return ret
	}
	return o.AccountAging
}

// GetAccountAgingOk returns a tuple with the AccountAging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARProfileAgingInfoTypeHotelInner) GetAccountAgingOk() ([]ARAccountType, bool) {
	if o == nil || IsNil(o.AccountAging) {
		return nil, false
	}
	return o.AccountAging, true
}

// HasAccountAging returns a boolean if a field has been set.
func (o *ARProfileAgingInfoTypeHotelInner) HasAccountAging() bool {
	if o != nil && !IsNil(o.AccountAging) {
		return true
	}

	return false
}

// SetAccountAging gets a reference to the given []ARAccountType and assigns it to the AccountAging field.
func (o *ARProfileAgingInfoTypeHotelInner) SetAccountAging(v []ARAccountType) {
	o.AccountAging = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ARProfileAgingInfoTypeHotelInner) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARProfileAgingInfoTypeHotelInner) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ARProfileAgingInfoTypeHotelInner) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ARProfileAgingInfoTypeHotelInner) SetHotelId(v string) {
	o.HotelId = &v
}

func (o ARProfileAgingInfoTypeHotelInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARProfileAgingInfoTypeHotelInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalHotelAging) {
		toSerialize["totalHotelAging"] = o.TotalHotelAging
	}
	if !IsNil(o.AccountAging) {
		toSerialize["accountAging"] = o.AccountAging
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableARProfileAgingInfoTypeHotelInner struct {
	value *ARProfileAgingInfoTypeHotelInner
	isSet bool
}

func (v NullableARProfileAgingInfoTypeHotelInner) Get() *ARProfileAgingInfoTypeHotelInner {
	return v.value
}

func (v *NullableARProfileAgingInfoTypeHotelInner) Set(val *ARProfileAgingInfoTypeHotelInner) {
	v.value = val
	v.isSet = true
}

func (v NullableARProfileAgingInfoTypeHotelInner) IsSet() bool {
	return v.isSet
}

func (v *NullableARProfileAgingInfoTypeHotelInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARProfileAgingInfoTypeHotelInner(val *ARProfileAgingInfoTypeHotelInner) *NullableARProfileAgingInfoTypeHotelInner {
	return &NullableARProfileAgingInfoTypeHotelInner{value: val, isSet: true}
}

func (v NullableARProfileAgingInfoTypeHotelInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARProfileAgingInfoTypeHotelInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


