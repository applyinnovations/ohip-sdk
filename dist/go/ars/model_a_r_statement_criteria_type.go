/*
OPERA Cloud Accounts Receivables API

APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ars

import (
	"encoding/json"
)

// checks if the ARStatementCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ARStatementCriteriaType{}

// ARStatementCriteriaType Statements criteria for AR Accounts.
type ARStatementCriteriaType struct {
	FilterDate *DateRangeType `json:"filterDate,omitempty"`
	// Text which will be printed on the Invoice.
	StatementText *string `json:"statementText,omitempty"`
	// Flag to indicate if Zero Balances Invoices are to be included in the Statement.
	InclZero *bool `json:"inclZero,omitempty"`
	// Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.
	InclPrinted *bool `json:"inclPrinted,omitempty"`
	// The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)
	BalanceForwardDate *string `json:"balanceForwardDate,omitempty"`
	// Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.
	InclFolios *bool `json:"inclFolios,omitempty"`
}

// NewARStatementCriteriaType instantiates a new ARStatementCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewARStatementCriteriaType() *ARStatementCriteriaType {
	this := ARStatementCriteriaType{}
	return &this
}

// NewARStatementCriteriaTypeWithDefaults instantiates a new ARStatementCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewARStatementCriteriaTypeWithDefaults() *ARStatementCriteriaType {
	this := ARStatementCriteriaType{}
	return &this
}

// GetFilterDate returns the FilterDate field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetFilterDate() DateRangeType {
	if o == nil || IsNil(o.FilterDate) {
		var ret DateRangeType
		return ret
	}
	return *o.FilterDate
}

// GetFilterDateOk returns a tuple with the FilterDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetFilterDateOk() (*DateRangeType, bool) {
	if o == nil || IsNil(o.FilterDate) {
		return nil, false
	}
	return o.FilterDate, true
}

// HasFilterDate returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasFilterDate() bool {
	if o != nil && !IsNil(o.FilterDate) {
		return true
	}

	return false
}

// SetFilterDate gets a reference to the given DateRangeType and assigns it to the FilterDate field.
func (o *ARStatementCriteriaType) SetFilterDate(v DateRangeType) {
	o.FilterDate = &v
}

// GetStatementText returns the StatementText field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetStatementText() string {
	if o == nil || IsNil(o.StatementText) {
		var ret string
		return ret
	}
	return *o.StatementText
}

// GetStatementTextOk returns a tuple with the StatementText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetStatementTextOk() (*string, bool) {
	if o == nil || IsNil(o.StatementText) {
		return nil, false
	}
	return o.StatementText, true
}

// HasStatementText returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasStatementText() bool {
	if o != nil && !IsNil(o.StatementText) {
		return true
	}

	return false
}

// SetStatementText gets a reference to the given string and assigns it to the StatementText field.
func (o *ARStatementCriteriaType) SetStatementText(v string) {
	o.StatementText = &v
}

// GetInclZero returns the InclZero field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetInclZero() bool {
	if o == nil || IsNil(o.InclZero) {
		var ret bool
		return ret
	}
	return *o.InclZero
}

// GetInclZeroOk returns a tuple with the InclZero field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetInclZeroOk() (*bool, bool) {
	if o == nil || IsNil(o.InclZero) {
		return nil, false
	}
	return o.InclZero, true
}

// HasInclZero returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasInclZero() bool {
	if o != nil && !IsNil(o.InclZero) {
		return true
	}

	return false
}

// SetInclZero gets a reference to the given bool and assigns it to the InclZero field.
func (o *ARStatementCriteriaType) SetInclZero(v bool) {
	o.InclZero = &v
}

// GetInclPrinted returns the InclPrinted field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetInclPrinted() bool {
	if o == nil || IsNil(o.InclPrinted) {
		var ret bool
		return ret
	}
	return *o.InclPrinted
}

// GetInclPrintedOk returns a tuple with the InclPrinted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetInclPrintedOk() (*bool, bool) {
	if o == nil || IsNil(o.InclPrinted) {
		return nil, false
	}
	return o.InclPrinted, true
}

// HasInclPrinted returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasInclPrinted() bool {
	if o != nil && !IsNil(o.InclPrinted) {
		return true
	}

	return false
}

// SetInclPrinted gets a reference to the given bool and assigns it to the InclPrinted field.
func (o *ARStatementCriteriaType) SetInclPrinted(v bool) {
	o.InclPrinted = &v
}

// GetBalanceForwardDate returns the BalanceForwardDate field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetBalanceForwardDate() string {
	if o == nil || IsNil(o.BalanceForwardDate) {
		var ret string
		return ret
	}
	return *o.BalanceForwardDate
}

// GetBalanceForwardDateOk returns a tuple with the BalanceForwardDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetBalanceForwardDateOk() (*string, bool) {
	if o == nil || IsNil(o.BalanceForwardDate) {
		return nil, false
	}
	return o.BalanceForwardDate, true
}

// HasBalanceForwardDate returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasBalanceForwardDate() bool {
	if o != nil && !IsNil(o.BalanceForwardDate) {
		return true
	}

	return false
}

// SetBalanceForwardDate gets a reference to the given string and assigns it to the BalanceForwardDate field.
func (o *ARStatementCriteriaType) SetBalanceForwardDate(v string) {
	o.BalanceForwardDate = &v
}

// GetInclFolios returns the InclFolios field value if set, zero value otherwise.
func (o *ARStatementCriteriaType) GetInclFolios() bool {
	if o == nil || IsNil(o.InclFolios) {
		var ret bool
		return ret
	}
	return *o.InclFolios
}

// GetInclFoliosOk returns a tuple with the InclFolios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ARStatementCriteriaType) GetInclFoliosOk() (*bool, bool) {
	if o == nil || IsNil(o.InclFolios) {
		return nil, false
	}
	return o.InclFolios, true
}

// HasInclFolios returns a boolean if a field has been set.
func (o *ARStatementCriteriaType) HasInclFolios() bool {
	if o != nil && !IsNil(o.InclFolios) {
		return true
	}

	return false
}

// SetInclFolios gets a reference to the given bool and assigns it to the InclFolios field.
func (o *ARStatementCriteriaType) SetInclFolios(v bool) {
	o.InclFolios = &v
}

func (o ARStatementCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ARStatementCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterDate) {
		toSerialize["filterDate"] = o.FilterDate
	}
	if !IsNil(o.StatementText) {
		toSerialize["statementText"] = o.StatementText
	}
	if !IsNil(o.InclZero) {
		toSerialize["inclZero"] = o.InclZero
	}
	if !IsNil(o.InclPrinted) {
		toSerialize["inclPrinted"] = o.InclPrinted
	}
	if !IsNil(o.BalanceForwardDate) {
		toSerialize["balanceForwardDate"] = o.BalanceForwardDate
	}
	if !IsNil(o.InclFolios) {
		toSerialize["inclFolios"] = o.InclFolios
	}
	return toSerialize, nil
}

type NullableARStatementCriteriaType struct {
	value *ARStatementCriteriaType
	isSet bool
}

func (v NullableARStatementCriteriaType) Get() *ARStatementCriteriaType {
	return v.value
}

func (v *NullableARStatementCriteriaType) Set(val *ARStatementCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableARStatementCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableARStatementCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableARStatementCriteriaType(val *ARStatementCriteriaType) *NullableARStatementCriteriaType {
	return &NullableARStatementCriteriaType{value: val, isSet: true}
}

func (v NullableARStatementCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableARStatementCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


