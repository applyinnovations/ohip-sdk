/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the TrackItReservationInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackItReservationInfoType{}

// TrackItReservationInfoType Reservation info associated with a Track It item.
type TrackItReservationInfoType struct {
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	BlockDates *TimeSpanType `json:"blockDates,omitempty"`
	GuestInfo *ResGuestInfoType `json:"guestInfo,omitempty"`
	RoomType *string `json:"roomType,omitempty"`
	RoomId *string `json:"roomId,omitempty"`
	RoomStatus *HousekeepingRoomStatusType `json:"roomStatus,omitempty"`
	Guarantee *ResGuaranteeType `json:"guarantee,omitempty"`
	ReservationStatus *PMSResStatusType `json:"reservationStatus,omitempty"`
	ComputedReservationStatus *PMSResStatusType `json:"computedReservationStatus,omitempty"`
}

// NewTrackItReservationInfoType instantiates a new TrackItReservationInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackItReservationInfoType() *TrackItReservationInfoType {
	this := TrackItReservationInfoType{}
	return &this
}

// NewTrackItReservationInfoTypeWithDefaults instantiates a new TrackItReservationInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackItReservationInfoTypeWithDefaults() *TrackItReservationInfoType {
	this := TrackItReservationInfoType{}
	return &this
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *TrackItReservationInfoType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetBlockDates returns the BlockDates field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetBlockDates() TimeSpanType {
	if o == nil || IsNil(o.BlockDates) {
		var ret TimeSpanType
		return ret
	}
	return *o.BlockDates
}

// GetBlockDatesOk returns a tuple with the BlockDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetBlockDatesOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.BlockDates) {
		return nil, false
	}
	return o.BlockDates, true
}

// HasBlockDates returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasBlockDates() bool {
	if o != nil && !IsNil(o.BlockDates) {
		return true
	}

	return false
}

// SetBlockDates gets a reference to the given TimeSpanType and assigns it to the BlockDates field.
func (o *TrackItReservationInfoType) SetBlockDates(v TimeSpanType) {
	o.BlockDates = &v
}

// GetGuestInfo returns the GuestInfo field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetGuestInfo() ResGuestInfoType {
	if o == nil || IsNil(o.GuestInfo) {
		var ret ResGuestInfoType
		return ret
	}
	return *o.GuestInfo
}

// GetGuestInfoOk returns a tuple with the GuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetGuestInfoOk() (*ResGuestInfoType, bool) {
	if o == nil || IsNil(o.GuestInfo) {
		return nil, false
	}
	return o.GuestInfo, true
}

// HasGuestInfo returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasGuestInfo() bool {
	if o != nil && !IsNil(o.GuestInfo) {
		return true
	}

	return false
}

// SetGuestInfo gets a reference to the given ResGuestInfoType and assigns it to the GuestInfo field.
func (o *TrackItReservationInfoType) SetGuestInfo(v ResGuestInfoType) {
	o.GuestInfo = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *TrackItReservationInfoType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *TrackItReservationInfoType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomStatus returns the RoomStatus field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetRoomStatus() HousekeepingRoomStatusType {
	if o == nil || IsNil(o.RoomStatus) {
		var ret HousekeepingRoomStatusType
		return ret
	}
	return *o.RoomStatus
}

// GetRoomStatusOk returns a tuple with the RoomStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetRoomStatusOk() (*HousekeepingRoomStatusType, bool) {
	if o == nil || IsNil(o.RoomStatus) {
		return nil, false
	}
	return o.RoomStatus, true
}

// HasRoomStatus returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasRoomStatus() bool {
	if o != nil && !IsNil(o.RoomStatus) {
		return true
	}

	return false
}

// SetRoomStatus gets a reference to the given HousekeepingRoomStatusType and assigns it to the RoomStatus field.
func (o *TrackItReservationInfoType) SetRoomStatus(v HousekeepingRoomStatusType) {
	o.RoomStatus = &v
}

// GetGuarantee returns the Guarantee field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetGuarantee() ResGuaranteeType {
	if o == nil || IsNil(o.Guarantee) {
		var ret ResGuaranteeType
		return ret
	}
	return *o.Guarantee
}

// GetGuaranteeOk returns a tuple with the Guarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetGuaranteeOk() (*ResGuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantee) {
		return nil, false
	}
	return o.Guarantee, true
}

// HasGuarantee returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasGuarantee() bool {
	if o != nil && !IsNil(o.Guarantee) {
		return true
	}

	return false
}

// SetGuarantee gets a reference to the given ResGuaranteeType and assigns it to the Guarantee field.
func (o *TrackItReservationInfoType) SetGuarantee(v ResGuaranteeType) {
	o.Guarantee = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ReservationStatus field.
func (o *TrackItReservationInfoType) SetReservationStatus(v PMSResStatusType) {
	o.ReservationStatus = &v
}

// GetComputedReservationStatus returns the ComputedReservationStatus field value if set, zero value otherwise.
func (o *TrackItReservationInfoType) GetComputedReservationStatus() PMSResStatusType {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		var ret PMSResStatusType
		return ret
	}
	return *o.ComputedReservationStatus
}

// GetComputedReservationStatusOk returns a tuple with the ComputedReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackItReservationInfoType) GetComputedReservationStatusOk() (*PMSResStatusType, bool) {
	if o == nil || IsNil(o.ComputedReservationStatus) {
		return nil, false
	}
	return o.ComputedReservationStatus, true
}

// HasComputedReservationStatus returns a boolean if a field has been set.
func (o *TrackItReservationInfoType) HasComputedReservationStatus() bool {
	if o != nil && !IsNil(o.ComputedReservationStatus) {
		return true
	}

	return false
}

// SetComputedReservationStatus gets a reference to the given PMSResStatusType and assigns it to the ComputedReservationStatus field.
func (o *TrackItReservationInfoType) SetComputedReservationStatus(v PMSResStatusType) {
	o.ComputedReservationStatus = &v
}

func (o TrackItReservationInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackItReservationInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.BlockDates) {
		toSerialize["blockDates"] = o.BlockDates
	}
	if !IsNil(o.GuestInfo) {
		toSerialize["guestInfo"] = o.GuestInfo
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomStatus) {
		toSerialize["roomStatus"] = o.RoomStatus
	}
	if !IsNil(o.Guarantee) {
		toSerialize["guarantee"] = o.Guarantee
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.ComputedReservationStatus) {
		toSerialize["computedReservationStatus"] = o.ComputedReservationStatus
	}
	return toSerialize, nil
}

type NullableTrackItReservationInfoType struct {
	value *TrackItReservationInfoType
	isSet bool
}

func (v NullableTrackItReservationInfoType) Get() *TrackItReservationInfoType {
	return v.value
}

func (v *NullableTrackItReservationInfoType) Set(val *TrackItReservationInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackItReservationInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackItReservationInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackItReservationInfoType(val *TrackItReservationInfoType) *NullableTrackItReservationInfoType {
	return &NullableTrackItReservationInfoType{value: val, isSet: true}
}

func (v NullableTrackItReservationInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackItReservationInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


