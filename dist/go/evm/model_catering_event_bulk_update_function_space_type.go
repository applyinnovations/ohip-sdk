/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the CateringEventBulkUpdateFunctionSpaceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CateringEventBulkUpdateFunctionSpaceType{}

// CateringEventBulkUpdateFunctionSpaceType Function Space info type.
type CateringEventBulkUpdateFunctionSpaceType struct {
	// Function Space code.
	FunctionSpaceCode *string `json:"functionSpaceCode,omitempty"`
	// Setup style code.
	SetupCode *string `json:"setupCode,omitempty"`
	// Setup time in minutes.
	SetupTime *int32 `json:"setupTime,omitempty"`
	// Setdown time in minutes.
	SetdownTime *int32 `json:"setdownTime,omitempty"`
	// Rate Code for function space.
	RentalCode *string `json:"rentalCode,omitempty"`
	RentalAmount *CurrencyAmountType `json:"rentalAmount,omitempty"`
	// Discount Percentage applied to Rent Amount.
	DiscountPercentage *float32 `json:"discountPercentage,omitempty"`
}

// NewCateringEventBulkUpdateFunctionSpaceType instantiates a new CateringEventBulkUpdateFunctionSpaceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCateringEventBulkUpdateFunctionSpaceType() *CateringEventBulkUpdateFunctionSpaceType {
	this := CateringEventBulkUpdateFunctionSpaceType{}
	return &this
}

// NewCateringEventBulkUpdateFunctionSpaceTypeWithDefaults instantiates a new CateringEventBulkUpdateFunctionSpaceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCateringEventBulkUpdateFunctionSpaceTypeWithDefaults() *CateringEventBulkUpdateFunctionSpaceType {
	this := CateringEventBulkUpdateFunctionSpaceType{}
	return &this
}

// GetFunctionSpaceCode returns the FunctionSpaceCode field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetFunctionSpaceCode() string {
	if o == nil || IsNil(o.FunctionSpaceCode) {
		var ret string
		return ret
	}
	return *o.FunctionSpaceCode
}

// GetFunctionSpaceCodeOk returns a tuple with the FunctionSpaceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetFunctionSpaceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionSpaceCode) {
		return nil, false
	}
	return o.FunctionSpaceCode, true
}

// HasFunctionSpaceCode returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasFunctionSpaceCode() bool {
	if o != nil && !IsNil(o.FunctionSpaceCode) {
		return true
	}

	return false
}

// SetFunctionSpaceCode gets a reference to the given string and assigns it to the FunctionSpaceCode field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetFunctionSpaceCode(v string) {
	o.FunctionSpaceCode = &v
}

// GetSetupCode returns the SetupCode field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetupCode() string {
	if o == nil || IsNil(o.SetupCode) {
		var ret string
		return ret
	}
	return *o.SetupCode
}

// GetSetupCodeOk returns a tuple with the SetupCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetupCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SetupCode) {
		return nil, false
	}
	return o.SetupCode, true
}

// HasSetupCode returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasSetupCode() bool {
	if o != nil && !IsNil(o.SetupCode) {
		return true
	}

	return false
}

// SetSetupCode gets a reference to the given string and assigns it to the SetupCode field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetSetupCode(v string) {
	o.SetupCode = &v
}

// GetSetupTime returns the SetupTime field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetupTime() int32 {
	if o == nil || IsNil(o.SetupTime) {
		var ret int32
		return ret
	}
	return *o.SetupTime
}

// GetSetupTimeOk returns a tuple with the SetupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetupTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SetupTime) {
		return nil, false
	}
	return o.SetupTime, true
}

// HasSetupTime returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasSetupTime() bool {
	if o != nil && !IsNil(o.SetupTime) {
		return true
	}

	return false
}

// SetSetupTime gets a reference to the given int32 and assigns it to the SetupTime field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetSetupTime(v int32) {
	o.SetupTime = &v
}

// GetSetdownTime returns the SetdownTime field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetdownTime() int32 {
	if o == nil || IsNil(o.SetdownTime) {
		var ret int32
		return ret
	}
	return *o.SetdownTime
}

// GetSetdownTimeOk returns a tuple with the SetdownTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetSetdownTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.SetdownTime) {
		return nil, false
	}
	return o.SetdownTime, true
}

// HasSetdownTime returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasSetdownTime() bool {
	if o != nil && !IsNil(o.SetdownTime) {
		return true
	}

	return false
}

// SetSetdownTime gets a reference to the given int32 and assigns it to the SetdownTime field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetSetdownTime(v int32) {
	o.SetdownTime = &v
}

// GetRentalCode returns the RentalCode field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetRentalCode() string {
	if o == nil || IsNil(o.RentalCode) {
		var ret string
		return ret
	}
	return *o.RentalCode
}

// GetRentalCodeOk returns a tuple with the RentalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetRentalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RentalCode) {
		return nil, false
	}
	return o.RentalCode, true
}

// HasRentalCode returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasRentalCode() bool {
	if o != nil && !IsNil(o.RentalCode) {
		return true
	}

	return false
}

// SetRentalCode gets a reference to the given string and assigns it to the RentalCode field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetRentalCode(v string) {
	o.RentalCode = &v
}

// GetRentalAmount returns the RentalAmount field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetRentalAmount() CurrencyAmountType {
	if o == nil || IsNil(o.RentalAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.RentalAmount
}

// GetRentalAmountOk returns a tuple with the RentalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetRentalAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.RentalAmount) {
		return nil, false
	}
	return o.RentalAmount, true
}

// HasRentalAmount returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasRentalAmount() bool {
	if o != nil && !IsNil(o.RentalAmount) {
		return true
	}

	return false
}

// SetRentalAmount gets a reference to the given CurrencyAmountType and assigns it to the RentalAmount field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetRentalAmount(v CurrencyAmountType) {
	o.RentalAmount = &v
}

// GetDiscountPercentage returns the DiscountPercentage field value if set, zero value otherwise.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetDiscountPercentage() float32 {
	if o == nil || IsNil(o.DiscountPercentage) {
		var ret float32
		return ret
	}
	return *o.DiscountPercentage
}

// GetDiscountPercentageOk returns a tuple with the DiscountPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) GetDiscountPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountPercentage) {
		return nil, false
	}
	return o.DiscountPercentage, true
}

// HasDiscountPercentage returns a boolean if a field has been set.
func (o *CateringEventBulkUpdateFunctionSpaceType) HasDiscountPercentage() bool {
	if o != nil && !IsNil(o.DiscountPercentage) {
		return true
	}

	return false
}

// SetDiscountPercentage gets a reference to the given float32 and assigns it to the DiscountPercentage field.
func (o *CateringEventBulkUpdateFunctionSpaceType) SetDiscountPercentage(v float32) {
	o.DiscountPercentage = &v
}

func (o CateringEventBulkUpdateFunctionSpaceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CateringEventBulkUpdateFunctionSpaceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FunctionSpaceCode) {
		toSerialize["functionSpaceCode"] = o.FunctionSpaceCode
	}
	if !IsNil(o.SetupCode) {
		toSerialize["setupCode"] = o.SetupCode
	}
	if !IsNil(o.SetupTime) {
		toSerialize["setupTime"] = o.SetupTime
	}
	if !IsNil(o.SetdownTime) {
		toSerialize["setdownTime"] = o.SetdownTime
	}
	if !IsNil(o.RentalCode) {
		toSerialize["rentalCode"] = o.RentalCode
	}
	if !IsNil(o.RentalAmount) {
		toSerialize["rentalAmount"] = o.RentalAmount
	}
	if !IsNil(o.DiscountPercentage) {
		toSerialize["discountPercentage"] = o.DiscountPercentage
	}
	return toSerialize, nil
}

type NullableCateringEventBulkUpdateFunctionSpaceType struct {
	value *CateringEventBulkUpdateFunctionSpaceType
	isSet bool
}

func (v NullableCateringEventBulkUpdateFunctionSpaceType) Get() *CateringEventBulkUpdateFunctionSpaceType {
	return v.value
}

func (v *NullableCateringEventBulkUpdateFunctionSpaceType) Set(val *CateringEventBulkUpdateFunctionSpaceType) {
	v.value = val
	v.isSet = true
}

func (v NullableCateringEventBulkUpdateFunctionSpaceType) IsSet() bool {
	return v.isSet
}

func (v *NullableCateringEventBulkUpdateFunctionSpaceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCateringEventBulkUpdateFunctionSpaceType(val *CateringEventBulkUpdateFunctionSpaceType) *NullableCateringEventBulkUpdateFunctionSpaceType {
	return &NullableCateringEventBulkUpdateFunctionSpaceType{value: val, isSet: true}
}

func (v NullableCateringEventBulkUpdateFunctionSpaceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCateringEventBulkUpdateFunctionSpaceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


