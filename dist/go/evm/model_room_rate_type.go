/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the RoomRateType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomRateType{}

// RoomRateType struct for RoomRateType
type RoomRateType struct {
	Availability *RoomRateAvailReasonType `json:"availability,omitempty"`
	Awards *ResAwardsType `json:"awards,omitempty"`
	// Best Available rates ranking.
	BarRanking *int32 `json:"barRanking,omitempty"`
	// Indicates if the Rate Code has BOGO(Bye one Get one) indicator.
	BogoDiscount *bool `json:"bogoDiscount,omitempty"`
	// Indicates commission amount used by the rate plan.
	CommissionAmount *int32 `json:"commissionAmount,omitempty"`
	// Commission Code applicable for commission calculation for Travel Agent/Company.
	CommissionCode *string `json:"commissionCode,omitempty"`
	// Indicates commission percentage used by the rate plan.
	CommissionPercentage *int32 `json:"commissionPercentage,omitempty"`
	// Indicates Commission is applicable for commission calculation for Travel Agent/Company.
	Commissionable *bool `json:"commissionable,omitempty"`
	// Indicates this reservation rate is complimentary.
	Complimentary *bool `json:"complimentary,omitempty"`
	// If true, indicates that credentials is required to sell the rate code.
	CredentialsRequired *bool `json:"credentialsRequired,omitempty"`
	// Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.
	DiscountAllowed *bool `json:"discountAllowed,omitempty"`
	// The ending value of the date range.
	EventEndDate *string `json:"eventEndDate,omitempty"`
	// The starting value of the date range.
	EventStartDate *string `json:"eventStartDate,omitempty"`
	// Fixed Rate Indicator.
	FixedRate *bool `json:"fixedRate,omitempty"`
	ForeignExchange *ForeignExchangeType `json:"foreignExchange,omitempty"`
	GuestCounts *GuestCountsType `json:"guestCounts,omitempty"`
	// Indicates this reservation is for House use.
	HouseUseOnly *bool `json:"houseUseOnly,omitempty"`
	// Indicates whether the functionSpaceDetails type inventory was taken from the allotment or House availability.
	InventoryLender *string `json:"inventoryLender,omitempty"`
	// The code that relates to the market being sold to (e.g., the corporate market, packages).
	MarketCode *string `json:"marketCode,omitempty"`
	// Description of the market code.
	MarketCodeDescription *string `json:"marketCodeDescription,omitempty"`
	// Meal plan codes associated with the rate codes.
	MealPlans []MealPlanCodeType `json:"mealPlans,omitempty"`
	// The number of rooms.
	NumberOfUnits *int32 `json:"numberOfUnits,omitempty"`
	Packages []PackageElementType `json:"packages,omitempty"`
	PromotionCode *string `json:"promotionCode,omitempty"`
	// True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.
	PseudoRoom *bool `json:"pseudoRoom,omitempty"`
	// Rate code description.
	RateDescription *string `json:"rateDescription,omitempty"`
	// For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the elementSpace provides the rate group for the rate plan code.
	RateGroup *string `json:"rateGroup,omitempty"`
	// Rate plan type like Corporate,Regular,Military,Weekend etc.
	RateLevel *string `json:"rateLevel,omitempty"`
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	Rates *RatesType `json:"rates,omitempty"`
	ReservationBlock *ReservationBlockType `json:"reservationBlock,omitempty"`
	// A string value representing the unique identification of a functionSpaceDetails.
	RoomId *string `json:"roomId,omitempty"`
	// Information about the Room Rate Combination.
	RoomRateInfo *string `json:"roomRateInfo,omitempty"`
	RoomType *string `json:"roomType,omitempty"`
	// Room Type used for the Rate calculation.
	RoomTypeCharged *string `json:"roomTypeCharged,omitempty"`
	// To specify where the business came from e.g. radio, newspaper ad, etc.
	SourceCode *string `json:"sourceCode,omitempty"`
	// Description of the source of business.
	SourceCodeDescription *string `json:"sourceCodeDescription,omitempty"`
	// Profile associated with the functionSpaceDetails Stay.
	StayProfiles []ReservationProfileType `json:"stayProfiles,omitempty"`
	SuppressRate *bool `json:"suppressRate,omitempty"`
	TaxFreeGuestCounts *GuestCountsType `json:"taxFreeGuestCounts,omitempty"`
	// If true, indicates if tax is included in the rate code.
	TaxIncluded *bool `json:"taxIncluded,omitempty"`
	Total *TotalType `json:"total,omitempty"`
	TotalPoints *PointsType `json:"totalPoints,omitempty"`
}

// NewRoomRateType instantiates a new RoomRateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomRateType() *RoomRateType {
	this := RoomRateType{}
	return &this
}

// NewRoomRateTypeWithDefaults instantiates a new RoomRateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomRateTypeWithDefaults() *RoomRateType {
	this := RoomRateType{}
	return &this
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *RoomRateType) GetAvailability() RoomRateAvailReasonType {
	if o == nil || IsNil(o.Availability) {
		var ret RoomRateAvailReasonType
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetAvailabilityOk() (*RoomRateAvailReasonType, bool) {
	if o == nil || IsNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *RoomRateType) HasAvailability() bool {
	if o != nil && !IsNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given RoomRateAvailReasonType and assigns it to the Availability field.
func (o *RoomRateType) SetAvailability(v RoomRateAvailReasonType) {
	o.Availability = &v
}

// GetAwards returns the Awards field value if set, zero value otherwise.
func (o *RoomRateType) GetAwards() ResAwardsType {
	if o == nil || IsNil(o.Awards) {
		var ret ResAwardsType
		return ret
	}
	return *o.Awards
}

// GetAwardsOk returns a tuple with the Awards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetAwardsOk() (*ResAwardsType, bool) {
	if o == nil || IsNil(o.Awards) {
		return nil, false
	}
	return o.Awards, true
}

// HasAwards returns a boolean if a field has been set.
func (o *RoomRateType) HasAwards() bool {
	if o != nil && !IsNil(o.Awards) {
		return true
	}

	return false
}

// SetAwards gets a reference to the given ResAwardsType and assigns it to the Awards field.
func (o *RoomRateType) SetAwards(v ResAwardsType) {
	o.Awards = &v
}

// GetBarRanking returns the BarRanking field value if set, zero value otherwise.
func (o *RoomRateType) GetBarRanking() int32 {
	if o == nil || IsNil(o.BarRanking) {
		var ret int32
		return ret
	}
	return *o.BarRanking
}

// GetBarRankingOk returns a tuple with the BarRanking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetBarRankingOk() (*int32, bool) {
	if o == nil || IsNil(o.BarRanking) {
		return nil, false
	}
	return o.BarRanking, true
}

// HasBarRanking returns a boolean if a field has been set.
func (o *RoomRateType) HasBarRanking() bool {
	if o != nil && !IsNil(o.BarRanking) {
		return true
	}

	return false
}

// SetBarRanking gets a reference to the given int32 and assigns it to the BarRanking field.
func (o *RoomRateType) SetBarRanking(v int32) {
	o.BarRanking = &v
}

// GetBogoDiscount returns the BogoDiscount field value if set, zero value otherwise.
func (o *RoomRateType) GetBogoDiscount() bool {
	if o == nil || IsNil(o.BogoDiscount) {
		var ret bool
		return ret
	}
	return *o.BogoDiscount
}

// GetBogoDiscountOk returns a tuple with the BogoDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetBogoDiscountOk() (*bool, bool) {
	if o == nil || IsNil(o.BogoDiscount) {
		return nil, false
	}
	return o.BogoDiscount, true
}

// HasBogoDiscount returns a boolean if a field has been set.
func (o *RoomRateType) HasBogoDiscount() bool {
	if o != nil && !IsNil(o.BogoDiscount) {
		return true
	}

	return false
}

// SetBogoDiscount gets a reference to the given bool and assigns it to the BogoDiscount field.
func (o *RoomRateType) SetBogoDiscount(v bool) {
	o.BogoDiscount = &v
}

// GetCommissionAmount returns the CommissionAmount field value if set, zero value otherwise.
func (o *RoomRateType) GetCommissionAmount() int32 {
	if o == nil || IsNil(o.CommissionAmount) {
		var ret int32
		return ret
	}
	return *o.CommissionAmount
}

// GetCommissionAmountOk returns a tuple with the CommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetCommissionAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.CommissionAmount) {
		return nil, false
	}
	return o.CommissionAmount, true
}

// HasCommissionAmount returns a boolean if a field has been set.
func (o *RoomRateType) HasCommissionAmount() bool {
	if o != nil && !IsNil(o.CommissionAmount) {
		return true
	}

	return false
}

// SetCommissionAmount gets a reference to the given int32 and assigns it to the CommissionAmount field.
func (o *RoomRateType) SetCommissionAmount(v int32) {
	o.CommissionAmount = &v
}

// GetCommissionCode returns the CommissionCode field value if set, zero value otherwise.
func (o *RoomRateType) GetCommissionCode() string {
	if o == nil || IsNil(o.CommissionCode) {
		var ret string
		return ret
	}
	return *o.CommissionCode
}

// GetCommissionCodeOk returns a tuple with the CommissionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetCommissionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CommissionCode) {
		return nil, false
	}
	return o.CommissionCode, true
}

// HasCommissionCode returns a boolean if a field has been set.
func (o *RoomRateType) HasCommissionCode() bool {
	if o != nil && !IsNil(o.CommissionCode) {
		return true
	}

	return false
}

// SetCommissionCode gets a reference to the given string and assigns it to the CommissionCode field.
func (o *RoomRateType) SetCommissionCode(v string) {
	o.CommissionCode = &v
}

// GetCommissionPercentage returns the CommissionPercentage field value if set, zero value otherwise.
func (o *RoomRateType) GetCommissionPercentage() int32 {
	if o == nil || IsNil(o.CommissionPercentage) {
		var ret int32
		return ret
	}
	return *o.CommissionPercentage
}

// GetCommissionPercentageOk returns a tuple with the CommissionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetCommissionPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.CommissionPercentage) {
		return nil, false
	}
	return o.CommissionPercentage, true
}

// HasCommissionPercentage returns a boolean if a field has been set.
func (o *RoomRateType) HasCommissionPercentage() bool {
	if o != nil && !IsNil(o.CommissionPercentage) {
		return true
	}

	return false
}

// SetCommissionPercentage gets a reference to the given int32 and assigns it to the CommissionPercentage field.
func (o *RoomRateType) SetCommissionPercentage(v int32) {
	o.CommissionPercentage = &v
}

// GetCommissionable returns the Commissionable field value if set, zero value otherwise.
func (o *RoomRateType) GetCommissionable() bool {
	if o == nil || IsNil(o.Commissionable) {
		var ret bool
		return ret
	}
	return *o.Commissionable
}

// GetCommissionableOk returns a tuple with the Commissionable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetCommissionableOk() (*bool, bool) {
	if o == nil || IsNil(o.Commissionable) {
		return nil, false
	}
	return o.Commissionable, true
}

// HasCommissionable returns a boolean if a field has been set.
func (o *RoomRateType) HasCommissionable() bool {
	if o != nil && !IsNil(o.Commissionable) {
		return true
	}

	return false
}

// SetCommissionable gets a reference to the given bool and assigns it to the Commissionable field.
func (o *RoomRateType) SetCommissionable(v bool) {
	o.Commissionable = &v
}

// GetComplimentary returns the Complimentary field value if set, zero value otherwise.
func (o *RoomRateType) GetComplimentary() bool {
	if o == nil || IsNil(o.Complimentary) {
		var ret bool
		return ret
	}
	return *o.Complimentary
}

// GetComplimentaryOk returns a tuple with the Complimentary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetComplimentaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Complimentary) {
		return nil, false
	}
	return o.Complimentary, true
}

// HasComplimentary returns a boolean if a field has been set.
func (o *RoomRateType) HasComplimentary() bool {
	if o != nil && !IsNil(o.Complimentary) {
		return true
	}

	return false
}

// SetComplimentary gets a reference to the given bool and assigns it to the Complimentary field.
func (o *RoomRateType) SetComplimentary(v bool) {
	o.Complimentary = &v
}

// GetCredentialsRequired returns the CredentialsRequired field value if set, zero value otherwise.
func (o *RoomRateType) GetCredentialsRequired() bool {
	if o == nil || IsNil(o.CredentialsRequired) {
		var ret bool
		return ret
	}
	return *o.CredentialsRequired
}

// GetCredentialsRequiredOk returns a tuple with the CredentialsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetCredentialsRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.CredentialsRequired) {
		return nil, false
	}
	return o.CredentialsRequired, true
}

// HasCredentialsRequired returns a boolean if a field has been set.
func (o *RoomRateType) HasCredentialsRequired() bool {
	if o != nil && !IsNil(o.CredentialsRequired) {
		return true
	}

	return false
}

// SetCredentialsRequired gets a reference to the given bool and assigns it to the CredentialsRequired field.
func (o *RoomRateType) SetCredentialsRequired(v bool) {
	o.CredentialsRequired = &v
}

// GetDiscountAllowed returns the DiscountAllowed field value if set, zero value otherwise.
func (o *RoomRateType) GetDiscountAllowed() bool {
	if o == nil || IsNil(o.DiscountAllowed) {
		var ret bool
		return ret
	}
	return *o.DiscountAllowed
}

// GetDiscountAllowedOk returns a tuple with the DiscountAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetDiscountAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscountAllowed) {
		return nil, false
	}
	return o.DiscountAllowed, true
}

// HasDiscountAllowed returns a boolean if a field has been set.
func (o *RoomRateType) HasDiscountAllowed() bool {
	if o != nil && !IsNil(o.DiscountAllowed) {
		return true
	}

	return false
}

// SetDiscountAllowed gets a reference to the given bool and assigns it to the DiscountAllowed field.
func (o *RoomRateType) SetDiscountAllowed(v bool) {
	o.DiscountAllowed = &v
}

// GetEventEndDate returns the EventEndDate field value if set, zero value otherwise.
func (o *RoomRateType) GetEventEndDate() string {
	if o == nil || IsNil(o.EventEndDate) {
		var ret string
		return ret
	}
	return *o.EventEndDate
}

// GetEventEndDateOk returns a tuple with the EventEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetEventEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EventEndDate) {
		return nil, false
	}
	return o.EventEndDate, true
}

// HasEventEndDate returns a boolean if a field has been set.
func (o *RoomRateType) HasEventEndDate() bool {
	if o != nil && !IsNil(o.EventEndDate) {
		return true
	}

	return false
}

// SetEventEndDate gets a reference to the given string and assigns it to the EventEndDate field.
func (o *RoomRateType) SetEventEndDate(v string) {
	o.EventEndDate = &v
}

// GetEventStartDate returns the EventStartDate field value if set, zero value otherwise.
func (o *RoomRateType) GetEventStartDate() string {
	if o == nil || IsNil(o.EventStartDate) {
		var ret string
		return ret
	}
	return *o.EventStartDate
}

// GetEventStartDateOk returns a tuple with the EventStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetEventStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.EventStartDate) {
		return nil, false
	}
	return o.EventStartDate, true
}

// HasEventStartDate returns a boolean if a field has been set.
func (o *RoomRateType) HasEventStartDate() bool {
	if o != nil && !IsNil(o.EventStartDate) {
		return true
	}

	return false
}

// SetEventStartDate gets a reference to the given string and assigns it to the EventStartDate field.
func (o *RoomRateType) SetEventStartDate(v string) {
	o.EventStartDate = &v
}

// GetFixedRate returns the FixedRate field value if set, zero value otherwise.
func (o *RoomRateType) GetFixedRate() bool {
	if o == nil || IsNil(o.FixedRate) {
		var ret bool
		return ret
	}
	return *o.FixedRate
}

// GetFixedRateOk returns a tuple with the FixedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetFixedRateOk() (*bool, bool) {
	if o == nil || IsNil(o.FixedRate) {
		return nil, false
	}
	return o.FixedRate, true
}

// HasFixedRate returns a boolean if a field has been set.
func (o *RoomRateType) HasFixedRate() bool {
	if o != nil && !IsNil(o.FixedRate) {
		return true
	}

	return false
}

// SetFixedRate gets a reference to the given bool and assigns it to the FixedRate field.
func (o *RoomRateType) SetFixedRate(v bool) {
	o.FixedRate = &v
}

// GetForeignExchange returns the ForeignExchange field value if set, zero value otherwise.
func (o *RoomRateType) GetForeignExchange() ForeignExchangeType {
	if o == nil || IsNil(o.ForeignExchange) {
		var ret ForeignExchangeType
		return ret
	}
	return *o.ForeignExchange
}

// GetForeignExchangeOk returns a tuple with the ForeignExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetForeignExchangeOk() (*ForeignExchangeType, bool) {
	if o == nil || IsNil(o.ForeignExchange) {
		return nil, false
	}
	return o.ForeignExchange, true
}

// HasForeignExchange returns a boolean if a field has been set.
func (o *RoomRateType) HasForeignExchange() bool {
	if o != nil && !IsNil(o.ForeignExchange) {
		return true
	}

	return false
}

// SetForeignExchange gets a reference to the given ForeignExchangeType and assigns it to the ForeignExchange field.
func (o *RoomRateType) SetForeignExchange(v ForeignExchangeType) {
	o.ForeignExchange = &v
}

// GetGuestCounts returns the GuestCounts field value if set, zero value otherwise.
func (o *RoomRateType) GetGuestCounts() GuestCountsType {
	if o == nil || IsNil(o.GuestCounts) {
		var ret GuestCountsType
		return ret
	}
	return *o.GuestCounts
}

// GetGuestCountsOk returns a tuple with the GuestCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetGuestCountsOk() (*GuestCountsType, bool) {
	if o == nil || IsNil(o.GuestCounts) {
		return nil, false
	}
	return o.GuestCounts, true
}

// HasGuestCounts returns a boolean if a field has been set.
func (o *RoomRateType) HasGuestCounts() bool {
	if o != nil && !IsNil(o.GuestCounts) {
		return true
	}

	return false
}

// SetGuestCounts gets a reference to the given GuestCountsType and assigns it to the GuestCounts field.
func (o *RoomRateType) SetGuestCounts(v GuestCountsType) {
	o.GuestCounts = &v
}

// GetHouseUseOnly returns the HouseUseOnly field value if set, zero value otherwise.
func (o *RoomRateType) GetHouseUseOnly() bool {
	if o == nil || IsNil(o.HouseUseOnly) {
		var ret bool
		return ret
	}
	return *o.HouseUseOnly
}

// GetHouseUseOnlyOk returns a tuple with the HouseUseOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetHouseUseOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.HouseUseOnly) {
		return nil, false
	}
	return o.HouseUseOnly, true
}

// HasHouseUseOnly returns a boolean if a field has been set.
func (o *RoomRateType) HasHouseUseOnly() bool {
	if o != nil && !IsNil(o.HouseUseOnly) {
		return true
	}

	return false
}

// SetHouseUseOnly gets a reference to the given bool and assigns it to the HouseUseOnly field.
func (o *RoomRateType) SetHouseUseOnly(v bool) {
	o.HouseUseOnly = &v
}

// GetInventoryLender returns the InventoryLender field value if set, zero value otherwise.
func (o *RoomRateType) GetInventoryLender() string {
	if o == nil || IsNil(o.InventoryLender) {
		var ret string
		return ret
	}
	return *o.InventoryLender
}

// GetInventoryLenderOk returns a tuple with the InventoryLender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetInventoryLenderOk() (*string, bool) {
	if o == nil || IsNil(o.InventoryLender) {
		return nil, false
	}
	return o.InventoryLender, true
}

// HasInventoryLender returns a boolean if a field has been set.
func (o *RoomRateType) HasInventoryLender() bool {
	if o != nil && !IsNil(o.InventoryLender) {
		return true
	}

	return false
}

// SetInventoryLender gets a reference to the given string and assigns it to the InventoryLender field.
func (o *RoomRateType) SetInventoryLender(v string) {
	o.InventoryLender = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *RoomRateType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *RoomRateType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *RoomRateType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetMarketCodeDescription returns the MarketCodeDescription field value if set, zero value otherwise.
func (o *RoomRateType) GetMarketCodeDescription() string {
	if o == nil || IsNil(o.MarketCodeDescription) {
		var ret string
		return ret
	}
	return *o.MarketCodeDescription
}

// GetMarketCodeDescriptionOk returns a tuple with the MarketCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetMarketCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCodeDescription) {
		return nil, false
	}
	return o.MarketCodeDescription, true
}

// HasMarketCodeDescription returns a boolean if a field has been set.
func (o *RoomRateType) HasMarketCodeDescription() bool {
	if o != nil && !IsNil(o.MarketCodeDescription) {
		return true
	}

	return false
}

// SetMarketCodeDescription gets a reference to the given string and assigns it to the MarketCodeDescription field.
func (o *RoomRateType) SetMarketCodeDescription(v string) {
	o.MarketCodeDescription = &v
}

// GetMealPlans returns the MealPlans field value if set, zero value otherwise.
func (o *RoomRateType) GetMealPlans() []MealPlanCodeType {
	if o == nil || IsNil(o.MealPlans) {
		var ret []MealPlanCodeType
		return ret
	}
	return o.MealPlans
}

// GetMealPlansOk returns a tuple with the MealPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetMealPlansOk() ([]MealPlanCodeType, bool) {
	if o == nil || IsNil(o.MealPlans) {
		return nil, false
	}
	return o.MealPlans, true
}

// HasMealPlans returns a boolean if a field has been set.
func (o *RoomRateType) HasMealPlans() bool {
	if o != nil && !IsNil(o.MealPlans) {
		return true
	}

	return false
}

// SetMealPlans gets a reference to the given []MealPlanCodeType and assigns it to the MealPlans field.
func (o *RoomRateType) SetMealPlans(v []MealPlanCodeType) {
	o.MealPlans = v
}

// GetNumberOfUnits returns the NumberOfUnits field value if set, zero value otherwise.
func (o *RoomRateType) GetNumberOfUnits() int32 {
	if o == nil || IsNil(o.NumberOfUnits) {
		var ret int32
		return ret
	}
	return *o.NumberOfUnits
}

// GetNumberOfUnitsOk returns a tuple with the NumberOfUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetNumberOfUnitsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfUnits) {
		return nil, false
	}
	return o.NumberOfUnits, true
}

// HasNumberOfUnits returns a boolean if a field has been set.
func (o *RoomRateType) HasNumberOfUnits() bool {
	if o != nil && !IsNil(o.NumberOfUnits) {
		return true
	}

	return false
}

// SetNumberOfUnits gets a reference to the given int32 and assigns it to the NumberOfUnits field.
func (o *RoomRateType) SetNumberOfUnits(v int32) {
	o.NumberOfUnits = &v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *RoomRateType) GetPackages() []PackageElementType {
	if o == nil || IsNil(o.Packages) {
		var ret []PackageElementType
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetPackagesOk() ([]PackageElementType, bool) {
	if o == nil || IsNil(o.Packages) {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *RoomRateType) HasPackages() bool {
	if o != nil && !IsNil(o.Packages) {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []PackageElementType and assigns it to the Packages field.
func (o *RoomRateType) SetPackages(v []PackageElementType) {
	o.Packages = v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *RoomRateType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *RoomRateType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *RoomRateType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetPseudoRoom returns the PseudoRoom field value if set, zero value otherwise.
func (o *RoomRateType) GetPseudoRoom() bool {
	if o == nil || IsNil(o.PseudoRoom) {
		var ret bool
		return ret
	}
	return *o.PseudoRoom
}

// GetPseudoRoomOk returns a tuple with the PseudoRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetPseudoRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.PseudoRoom) {
		return nil, false
	}
	return o.PseudoRoom, true
}

// HasPseudoRoom returns a boolean if a field has been set.
func (o *RoomRateType) HasPseudoRoom() bool {
	if o != nil && !IsNil(o.PseudoRoom) {
		return true
	}

	return false
}

// SetPseudoRoom gets a reference to the given bool and assigns it to the PseudoRoom field.
func (o *RoomRateType) SetPseudoRoom(v bool) {
	o.PseudoRoom = &v
}

// GetRateDescription returns the RateDescription field value if set, zero value otherwise.
func (o *RoomRateType) GetRateDescription() string {
	if o == nil || IsNil(o.RateDescription) {
		var ret string
		return ret
	}
	return *o.RateDescription
}

// GetRateDescriptionOk returns a tuple with the RateDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRateDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RateDescription) {
		return nil, false
	}
	return o.RateDescription, true
}

// HasRateDescription returns a boolean if a field has been set.
func (o *RoomRateType) HasRateDescription() bool {
	if o != nil && !IsNil(o.RateDescription) {
		return true
	}

	return false
}

// SetRateDescription gets a reference to the given string and assigns it to the RateDescription field.
func (o *RoomRateType) SetRateDescription(v string) {
	o.RateDescription = &v
}

// GetRateGroup returns the RateGroup field value if set, zero value otherwise.
func (o *RoomRateType) GetRateGroup() string {
	if o == nil || IsNil(o.RateGroup) {
		var ret string
		return ret
	}
	return *o.RateGroup
}

// GetRateGroupOk returns a tuple with the RateGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRateGroupOk() (*string, bool) {
	if o == nil || IsNil(o.RateGroup) {
		return nil, false
	}
	return o.RateGroup, true
}

// HasRateGroup returns a boolean if a field has been set.
func (o *RoomRateType) HasRateGroup() bool {
	if o != nil && !IsNil(o.RateGroup) {
		return true
	}

	return false
}

// SetRateGroup gets a reference to the given string and assigns it to the RateGroup field.
func (o *RoomRateType) SetRateGroup(v string) {
	o.RateGroup = &v
}

// GetRateLevel returns the RateLevel field value if set, zero value otherwise.
func (o *RoomRateType) GetRateLevel() string {
	if o == nil || IsNil(o.RateLevel) {
		var ret string
		return ret
	}
	return *o.RateLevel
}

// GetRateLevelOk returns a tuple with the RateLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRateLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RateLevel) {
		return nil, false
	}
	return o.RateLevel, true
}

// HasRateLevel returns a boolean if a field has been set.
func (o *RoomRateType) HasRateLevel() bool {
	if o != nil && !IsNil(o.RateLevel) {
		return true
	}

	return false
}

// SetRateLevel gets a reference to the given string and assigns it to the RateLevel field.
func (o *RoomRateType) SetRateLevel(v string) {
	o.RateLevel = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *RoomRateType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *RoomRateType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *RoomRateType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *RoomRateType) GetRates() RatesType {
	if o == nil || IsNil(o.Rates) {
		var ret RatesType
		return ret
	}
	return *o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRatesOk() (*RatesType, bool) {
	if o == nil || IsNil(o.Rates) {
		return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *RoomRateType) HasRates() bool {
	if o != nil && !IsNil(o.Rates) {
		return true
	}

	return false
}

// SetRates gets a reference to the given RatesType and assigns it to the Rates field.
func (o *RoomRateType) SetRates(v RatesType) {
	o.Rates = &v
}

// GetReservationBlock returns the ReservationBlock field value if set, zero value otherwise.
func (o *RoomRateType) GetReservationBlock() ReservationBlockType {
	if o == nil || IsNil(o.ReservationBlock) {
		var ret ReservationBlockType
		return ret
	}
	return *o.ReservationBlock
}

// GetReservationBlockOk returns a tuple with the ReservationBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetReservationBlockOk() (*ReservationBlockType, bool) {
	if o == nil || IsNil(o.ReservationBlock) {
		return nil, false
	}
	return o.ReservationBlock, true
}

// HasReservationBlock returns a boolean if a field has been set.
func (o *RoomRateType) HasReservationBlock() bool {
	if o != nil && !IsNil(o.ReservationBlock) {
		return true
	}

	return false
}

// SetReservationBlock gets a reference to the given ReservationBlockType and assigns it to the ReservationBlock field.
func (o *RoomRateType) SetReservationBlock(v ReservationBlockType) {
	o.ReservationBlock = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *RoomRateType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *RoomRateType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *RoomRateType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomRateInfo returns the RoomRateInfo field value if set, zero value otherwise.
func (o *RoomRateType) GetRoomRateInfo() string {
	if o == nil || IsNil(o.RoomRateInfo) {
		var ret string
		return ret
	}
	return *o.RoomRateInfo
}

// GetRoomRateInfoOk returns a tuple with the RoomRateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRoomRateInfoOk() (*string, bool) {
	if o == nil || IsNil(o.RoomRateInfo) {
		return nil, false
	}
	return o.RoomRateInfo, true
}

// HasRoomRateInfo returns a boolean if a field has been set.
func (o *RoomRateType) HasRoomRateInfo() bool {
	if o != nil && !IsNil(o.RoomRateInfo) {
		return true
	}

	return false
}

// SetRoomRateInfo gets a reference to the given string and assigns it to the RoomRateInfo field.
func (o *RoomRateType) SetRoomRateInfo(v string) {
	o.RoomRateInfo = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *RoomRateType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *RoomRateType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *RoomRateType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetRoomTypeCharged returns the RoomTypeCharged field value if set, zero value otherwise.
func (o *RoomRateType) GetRoomTypeCharged() string {
	if o == nil || IsNil(o.RoomTypeCharged) {
		var ret string
		return ret
	}
	return *o.RoomTypeCharged
}

// GetRoomTypeChargedOk returns a tuple with the RoomTypeCharged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetRoomTypeChargedOk() (*string, bool) {
	if o == nil || IsNil(o.RoomTypeCharged) {
		return nil, false
	}
	return o.RoomTypeCharged, true
}

// HasRoomTypeCharged returns a boolean if a field has been set.
func (o *RoomRateType) HasRoomTypeCharged() bool {
	if o != nil && !IsNil(o.RoomTypeCharged) {
		return true
	}

	return false
}

// SetRoomTypeCharged gets a reference to the given string and assigns it to the RoomTypeCharged field.
func (o *RoomRateType) SetRoomTypeCharged(v string) {
	o.RoomTypeCharged = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *RoomRateType) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *RoomRateType) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *RoomRateType) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetSourceCodeDescription returns the SourceCodeDescription field value if set, zero value otherwise.
func (o *RoomRateType) GetSourceCodeDescription() string {
	if o == nil || IsNil(o.SourceCodeDescription) {
		var ret string
		return ret
	}
	return *o.SourceCodeDescription
}

// GetSourceCodeDescriptionOk returns a tuple with the SourceCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetSourceCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCodeDescription) {
		return nil, false
	}
	return o.SourceCodeDescription, true
}

// HasSourceCodeDescription returns a boolean if a field has been set.
func (o *RoomRateType) HasSourceCodeDescription() bool {
	if o != nil && !IsNil(o.SourceCodeDescription) {
		return true
	}

	return false
}

// SetSourceCodeDescription gets a reference to the given string and assigns it to the SourceCodeDescription field.
func (o *RoomRateType) SetSourceCodeDescription(v string) {
	o.SourceCodeDescription = &v
}

// GetStayProfiles returns the StayProfiles field value if set, zero value otherwise.
func (o *RoomRateType) GetStayProfiles() []ReservationProfileType {
	if o == nil || IsNil(o.StayProfiles) {
		var ret []ReservationProfileType
		return ret
	}
	return o.StayProfiles
}

// GetStayProfilesOk returns a tuple with the StayProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetStayProfilesOk() ([]ReservationProfileType, bool) {
	if o == nil || IsNil(o.StayProfiles) {
		return nil, false
	}
	return o.StayProfiles, true
}

// HasStayProfiles returns a boolean if a field has been set.
func (o *RoomRateType) HasStayProfiles() bool {
	if o != nil && !IsNil(o.StayProfiles) {
		return true
	}

	return false
}

// SetStayProfiles gets a reference to the given []ReservationProfileType and assigns it to the StayProfiles field.
func (o *RoomRateType) SetStayProfiles(v []ReservationProfileType) {
	o.StayProfiles = v
}

// GetSuppressRate returns the SuppressRate field value if set, zero value otherwise.
func (o *RoomRateType) GetSuppressRate() bool {
	if o == nil || IsNil(o.SuppressRate) {
		var ret bool
		return ret
	}
	return *o.SuppressRate
}

// GetSuppressRateOk returns a tuple with the SuppressRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetSuppressRateOk() (*bool, bool) {
	if o == nil || IsNil(o.SuppressRate) {
		return nil, false
	}
	return o.SuppressRate, true
}

// HasSuppressRate returns a boolean if a field has been set.
func (o *RoomRateType) HasSuppressRate() bool {
	if o != nil && !IsNil(o.SuppressRate) {
		return true
	}

	return false
}

// SetSuppressRate gets a reference to the given bool and assigns it to the SuppressRate field.
func (o *RoomRateType) SetSuppressRate(v bool) {
	o.SuppressRate = &v
}

// GetTaxFreeGuestCounts returns the TaxFreeGuestCounts field value if set, zero value otherwise.
func (o *RoomRateType) GetTaxFreeGuestCounts() GuestCountsType {
	if o == nil || IsNil(o.TaxFreeGuestCounts) {
		var ret GuestCountsType
		return ret
	}
	return *o.TaxFreeGuestCounts
}

// GetTaxFreeGuestCountsOk returns a tuple with the TaxFreeGuestCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetTaxFreeGuestCountsOk() (*GuestCountsType, bool) {
	if o == nil || IsNil(o.TaxFreeGuestCounts) {
		return nil, false
	}
	return o.TaxFreeGuestCounts, true
}

// HasTaxFreeGuestCounts returns a boolean if a field has been set.
func (o *RoomRateType) HasTaxFreeGuestCounts() bool {
	if o != nil && !IsNil(o.TaxFreeGuestCounts) {
		return true
	}

	return false
}

// SetTaxFreeGuestCounts gets a reference to the given GuestCountsType and assigns it to the TaxFreeGuestCounts field.
func (o *RoomRateType) SetTaxFreeGuestCounts(v GuestCountsType) {
	o.TaxFreeGuestCounts = &v
}

// GetTaxIncluded returns the TaxIncluded field value if set, zero value otherwise.
func (o *RoomRateType) GetTaxIncluded() bool {
	if o == nil || IsNil(o.TaxIncluded) {
		var ret bool
		return ret
	}
	return *o.TaxIncluded
}

// GetTaxIncludedOk returns a tuple with the TaxIncluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetTaxIncludedOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxIncluded) {
		return nil, false
	}
	return o.TaxIncluded, true
}

// HasTaxIncluded returns a boolean if a field has been set.
func (o *RoomRateType) HasTaxIncluded() bool {
	if o != nil && !IsNil(o.TaxIncluded) {
		return true
	}

	return false
}

// SetTaxIncluded gets a reference to the given bool and assigns it to the TaxIncluded field.
func (o *RoomRateType) SetTaxIncluded(v bool) {
	o.TaxIncluded = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *RoomRateType) GetTotal() TotalType {
	if o == nil || IsNil(o.Total) {
		var ret TotalType
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetTotalOk() (*TotalType, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *RoomRateType) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given TotalType and assigns it to the Total field.
func (o *RoomRateType) SetTotal(v TotalType) {
	o.Total = &v
}

// GetTotalPoints returns the TotalPoints field value if set, zero value otherwise.
func (o *RoomRateType) GetTotalPoints() PointsType {
	if o == nil || IsNil(o.TotalPoints) {
		var ret PointsType
		return ret
	}
	return *o.TotalPoints
}

// GetTotalPointsOk returns a tuple with the TotalPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRateType) GetTotalPointsOk() (*PointsType, bool) {
	if o == nil || IsNil(o.TotalPoints) {
		return nil, false
	}
	return o.TotalPoints, true
}

// HasTotalPoints returns a boolean if a field has been set.
func (o *RoomRateType) HasTotalPoints() bool {
	if o != nil && !IsNil(o.TotalPoints) {
		return true
	}

	return false
}

// SetTotalPoints gets a reference to the given PointsType and assigns it to the TotalPoints field.
func (o *RoomRateType) SetTotalPoints(v PointsType) {
	o.TotalPoints = &v
}

func (o RoomRateType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomRateType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	if !IsNil(o.Awards) {
		toSerialize["awards"] = o.Awards
	}
	if !IsNil(o.BarRanking) {
		toSerialize["barRanking"] = o.BarRanking
	}
	if !IsNil(o.BogoDiscount) {
		toSerialize["bogoDiscount"] = o.BogoDiscount
	}
	if !IsNil(o.CommissionAmount) {
		toSerialize["commissionAmount"] = o.CommissionAmount
	}
	if !IsNil(o.CommissionCode) {
		toSerialize["commissionCode"] = o.CommissionCode
	}
	if !IsNil(o.CommissionPercentage) {
		toSerialize["commissionPercentage"] = o.CommissionPercentage
	}
	if !IsNil(o.Commissionable) {
		toSerialize["commissionable"] = o.Commissionable
	}
	if !IsNil(o.Complimentary) {
		toSerialize["complimentary"] = o.Complimentary
	}
	if !IsNil(o.CredentialsRequired) {
		toSerialize["credentialsRequired"] = o.CredentialsRequired
	}
	if !IsNil(o.DiscountAllowed) {
		toSerialize["discountAllowed"] = o.DiscountAllowed
	}
	if !IsNil(o.EventEndDate) {
		toSerialize["eventEndDate"] = o.EventEndDate
	}
	if !IsNil(o.EventStartDate) {
		toSerialize["eventStartDate"] = o.EventStartDate
	}
	if !IsNil(o.FixedRate) {
		toSerialize["fixedRate"] = o.FixedRate
	}
	if !IsNil(o.ForeignExchange) {
		toSerialize["foreignExchange"] = o.ForeignExchange
	}
	if !IsNil(o.GuestCounts) {
		toSerialize["guestCounts"] = o.GuestCounts
	}
	if !IsNil(o.HouseUseOnly) {
		toSerialize["houseUseOnly"] = o.HouseUseOnly
	}
	if !IsNil(o.InventoryLender) {
		toSerialize["inventoryLender"] = o.InventoryLender
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.MarketCodeDescription) {
		toSerialize["marketCodeDescription"] = o.MarketCodeDescription
	}
	if !IsNil(o.MealPlans) {
		toSerialize["mealPlans"] = o.MealPlans
	}
	if !IsNil(o.NumberOfUnits) {
		toSerialize["numberOfUnits"] = o.NumberOfUnits
	}
	if !IsNil(o.Packages) {
		toSerialize["packages"] = o.Packages
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.PseudoRoom) {
		toSerialize["pseudoRoom"] = o.PseudoRoom
	}
	if !IsNil(o.RateDescription) {
		toSerialize["rateDescription"] = o.RateDescription
	}
	if !IsNil(o.RateGroup) {
		toSerialize["rateGroup"] = o.RateGroup
	}
	if !IsNil(o.RateLevel) {
		toSerialize["rateLevel"] = o.RateLevel
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.Rates) {
		toSerialize["rates"] = o.Rates
	}
	if !IsNil(o.ReservationBlock) {
		toSerialize["reservationBlock"] = o.ReservationBlock
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomRateInfo) {
		toSerialize["roomRateInfo"] = o.RoomRateInfo
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.RoomTypeCharged) {
		toSerialize["roomTypeCharged"] = o.RoomTypeCharged
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.SourceCodeDescription) {
		toSerialize["sourceCodeDescription"] = o.SourceCodeDescription
	}
	if !IsNil(o.StayProfiles) {
		toSerialize["stayProfiles"] = o.StayProfiles
	}
	if !IsNil(o.SuppressRate) {
		toSerialize["suppressRate"] = o.SuppressRate
	}
	if !IsNil(o.TaxFreeGuestCounts) {
		toSerialize["taxFreeGuestCounts"] = o.TaxFreeGuestCounts
	}
	if !IsNil(o.TaxIncluded) {
		toSerialize["taxIncluded"] = o.TaxIncluded
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TotalPoints) {
		toSerialize["totalPoints"] = o.TotalPoints
	}
	return toSerialize, nil
}

type NullableRoomRateType struct {
	value *RoomRateType
	isSet bool
}

func (v NullableRoomRateType) Get() *RoomRateType {
	return v.value
}

func (v *NullableRoomRateType) Set(val *RoomRateType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomRateType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomRateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomRateType(val *RoomRateType) *NullableRoomRateType {
	return &NullableRoomRateType{value: val, isSet: true}
}

func (v NullableRoomRateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomRateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


