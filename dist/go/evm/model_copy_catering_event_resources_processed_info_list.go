/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the CopyCateringEventResourcesProcessedInfoList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyCateringEventResourcesProcessedInfoList{}

// CopyCateringEventResourcesProcessedInfoList Status/Info list of the processed event resources.
type CopyCateringEventResourcesProcessedInfoList struct {
	// Status/Info of the processed event menus.
	MenusProcessedInfo []CateringEventsProcessedInfoType `json:"menusProcessedInfo,omitempty"`
	// Status/Info of the processed event items.
	ItemsProcessedInfo []CateringEventItemsProcessedInfoType `json:"itemsProcessedInfo,omitempty"`
}

// NewCopyCateringEventResourcesProcessedInfoList instantiates a new CopyCateringEventResourcesProcessedInfoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyCateringEventResourcesProcessedInfoList() *CopyCateringEventResourcesProcessedInfoList {
	this := CopyCateringEventResourcesProcessedInfoList{}
	return &this
}

// NewCopyCateringEventResourcesProcessedInfoListWithDefaults instantiates a new CopyCateringEventResourcesProcessedInfoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyCateringEventResourcesProcessedInfoListWithDefaults() *CopyCateringEventResourcesProcessedInfoList {
	this := CopyCateringEventResourcesProcessedInfoList{}
	return &this
}

// GetMenusProcessedInfo returns the MenusProcessedInfo field value if set, zero value otherwise.
func (o *CopyCateringEventResourcesProcessedInfoList) GetMenusProcessedInfo() []CateringEventsProcessedInfoType {
	if o == nil || IsNil(o.MenusProcessedInfo) {
		var ret []CateringEventsProcessedInfoType
		return ret
	}
	return o.MenusProcessedInfo
}

// GetMenusProcessedInfoOk returns a tuple with the MenusProcessedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyCateringEventResourcesProcessedInfoList) GetMenusProcessedInfoOk() ([]CateringEventsProcessedInfoType, bool) {
	if o == nil || IsNil(o.MenusProcessedInfo) {
		return nil, false
	}
	return o.MenusProcessedInfo, true
}

// HasMenusProcessedInfo returns a boolean if a field has been set.
func (o *CopyCateringEventResourcesProcessedInfoList) HasMenusProcessedInfo() bool {
	if o != nil && !IsNil(o.MenusProcessedInfo) {
		return true
	}

	return false
}

// SetMenusProcessedInfo gets a reference to the given []CateringEventsProcessedInfoType and assigns it to the MenusProcessedInfo field.
func (o *CopyCateringEventResourcesProcessedInfoList) SetMenusProcessedInfo(v []CateringEventsProcessedInfoType) {
	o.MenusProcessedInfo = v
}

// GetItemsProcessedInfo returns the ItemsProcessedInfo field value if set, zero value otherwise.
func (o *CopyCateringEventResourcesProcessedInfoList) GetItemsProcessedInfo() []CateringEventItemsProcessedInfoType {
	if o == nil || IsNil(o.ItemsProcessedInfo) {
		var ret []CateringEventItemsProcessedInfoType
		return ret
	}
	return o.ItemsProcessedInfo
}

// GetItemsProcessedInfoOk returns a tuple with the ItemsProcessedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyCateringEventResourcesProcessedInfoList) GetItemsProcessedInfoOk() ([]CateringEventItemsProcessedInfoType, bool) {
	if o == nil || IsNil(o.ItemsProcessedInfo) {
		return nil, false
	}
	return o.ItemsProcessedInfo, true
}

// HasItemsProcessedInfo returns a boolean if a field has been set.
func (o *CopyCateringEventResourcesProcessedInfoList) HasItemsProcessedInfo() bool {
	if o != nil && !IsNil(o.ItemsProcessedInfo) {
		return true
	}

	return false
}

// SetItemsProcessedInfo gets a reference to the given []CateringEventItemsProcessedInfoType and assigns it to the ItemsProcessedInfo field.
func (o *CopyCateringEventResourcesProcessedInfoList) SetItemsProcessedInfo(v []CateringEventItemsProcessedInfoType) {
	o.ItemsProcessedInfo = v
}

func (o CopyCateringEventResourcesProcessedInfoList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyCateringEventResourcesProcessedInfoList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MenusProcessedInfo) {
		toSerialize["menusProcessedInfo"] = o.MenusProcessedInfo
	}
	if !IsNil(o.ItemsProcessedInfo) {
		toSerialize["itemsProcessedInfo"] = o.ItemsProcessedInfo
	}
	return toSerialize, nil
}

type NullableCopyCateringEventResourcesProcessedInfoList struct {
	value *CopyCateringEventResourcesProcessedInfoList
	isSet bool
}

func (v NullableCopyCateringEventResourcesProcessedInfoList) Get() *CopyCateringEventResourcesProcessedInfoList {
	return v.value
}

func (v *NullableCopyCateringEventResourcesProcessedInfoList) Set(val *CopyCateringEventResourcesProcessedInfoList) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyCateringEventResourcesProcessedInfoList) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyCateringEventResourcesProcessedInfoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyCateringEventResourcesProcessedInfoList(val *CopyCateringEventResourcesProcessedInfoList) *NullableCopyCateringEventResourcesProcessedInfoList {
	return &NullableCopyCateringEventResourcesProcessedInfoList{value: val, isSet: true}
}

func (v NullableCopyCateringEventResourcesProcessedInfoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyCateringEventResourcesProcessedInfoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


