/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the BlockPostingReservationsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockPostingReservationsType{}

// BlockPostingReservationsType Contains the block's posting account reservation information.
type BlockPostingReservationsType struct {
	// Arrival date.
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	BlockId *UniqueIDType `json:"blockId,omitempty"`
	// Confirmation Number of the Posting Account Reservation.
	ConfirmationNumber *int32 `json:"confirmationNumber,omitempty"`
	DefaultPostingAccount *UniqueIDType `json:"defaultPostingAccount,omitempty"`
	// Departure date.
	DepartureDate *string `json:"departureDate,omitempty"`
	EventId *UniqueIDType `json:"eventId,omitempty"`
	// Posting Account guest's first name..
	GuestFirstName *string `json:"guestFirstName,omitempty"`
	// Posting Account guest name.
	GuestName *string `json:"guestName,omitempty"`
	// Hotel Code of the Block.
	HotelId *string `json:"hotelId,omitempty"`
	// Flag to indicate whether posting charges is allowed.
	NoPost *bool `json:"noPost,omitempty"`
	ReservationNameId *UniqueIDType `json:"reservationNameId,omitempty"`
	ReservationStatus *BookingStatusType `json:"reservationStatus,omitempty"`
	// Hotel Code of the Room.
	RoomHotelCode *string `json:"roomHotelCode,omitempty"`
	// Room Number.
	RoomId *string `json:"roomId,omitempty"`
	// Number of Posting account reservations per block.
	Size *int32 `json:"size,omitempty"`
}

// NewBlockPostingReservationsType instantiates a new BlockPostingReservationsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockPostingReservationsType() *BlockPostingReservationsType {
	this := BlockPostingReservationsType{}
	return &this
}

// NewBlockPostingReservationsTypeWithDefaults instantiates a new BlockPostingReservationsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockPostingReservationsTypeWithDefaults() *BlockPostingReservationsType {
	this := BlockPostingReservationsType{}
	return &this
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *BlockPostingReservationsType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetBlockId returns the BlockId field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetBlockId() UniqueIDType {
	if o == nil || IsNil(o.BlockId) {
		var ret UniqueIDType
		return ret
	}
	return *o.BlockId
}

// GetBlockIdOk returns a tuple with the BlockId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetBlockIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.BlockId) {
		return nil, false
	}
	return o.BlockId, true
}

// HasBlockId returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasBlockId() bool {
	if o != nil && !IsNil(o.BlockId) {
		return true
	}

	return false
}

// SetBlockId gets a reference to the given UniqueIDType and assigns it to the BlockId field.
func (o *BlockPostingReservationsType) SetBlockId(v UniqueIDType) {
	o.BlockId = &v
}

// GetConfirmationNumber returns the ConfirmationNumber field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetConfirmationNumber() int32 {
	if o == nil || IsNil(o.ConfirmationNumber) {
		var ret int32
		return ret
	}
	return *o.ConfirmationNumber
}

// GetConfirmationNumberOk returns a tuple with the ConfirmationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetConfirmationNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfirmationNumber) {
		return nil, false
	}
	return o.ConfirmationNumber, true
}

// HasConfirmationNumber returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasConfirmationNumber() bool {
	if o != nil && !IsNil(o.ConfirmationNumber) {
		return true
	}

	return false
}

// SetConfirmationNumber gets a reference to the given int32 and assigns it to the ConfirmationNumber field.
func (o *BlockPostingReservationsType) SetConfirmationNumber(v int32) {
	o.ConfirmationNumber = &v
}

// GetDefaultPostingAccount returns the DefaultPostingAccount field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetDefaultPostingAccount() UniqueIDType {
	if o == nil || IsNil(o.DefaultPostingAccount) {
		var ret UniqueIDType
		return ret
	}
	return *o.DefaultPostingAccount
}

// GetDefaultPostingAccountOk returns a tuple with the DefaultPostingAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetDefaultPostingAccountOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.DefaultPostingAccount) {
		return nil, false
	}
	return o.DefaultPostingAccount, true
}

// HasDefaultPostingAccount returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasDefaultPostingAccount() bool {
	if o != nil && !IsNil(o.DefaultPostingAccount) {
		return true
	}

	return false
}

// SetDefaultPostingAccount gets a reference to the given UniqueIDType and assigns it to the DefaultPostingAccount field.
func (o *BlockPostingReservationsType) SetDefaultPostingAccount(v UniqueIDType) {
	o.DefaultPostingAccount = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *BlockPostingReservationsType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetEventId() UniqueIDType {
	if o == nil || IsNil(o.EventId) {
		var ret UniqueIDType
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetEventIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given UniqueIDType and assigns it to the EventId field.
func (o *BlockPostingReservationsType) SetEventId(v UniqueIDType) {
	o.EventId = &v
}

// GetGuestFirstName returns the GuestFirstName field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetGuestFirstName() string {
	if o == nil || IsNil(o.GuestFirstName) {
		var ret string
		return ret
	}
	return *o.GuestFirstName
}

// GetGuestFirstNameOk returns a tuple with the GuestFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetGuestFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFirstName) {
		return nil, false
	}
	return o.GuestFirstName, true
}

// HasGuestFirstName returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasGuestFirstName() bool {
	if o != nil && !IsNil(o.GuestFirstName) {
		return true
	}

	return false
}

// SetGuestFirstName gets a reference to the given string and assigns it to the GuestFirstName field.
func (o *BlockPostingReservationsType) SetGuestFirstName(v string) {
	o.GuestFirstName = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *BlockPostingReservationsType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BlockPostingReservationsType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetNoPost returns the NoPost field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetNoPost() bool {
	if o == nil || IsNil(o.NoPost) {
		var ret bool
		return ret
	}
	return *o.NoPost
}

// GetNoPostOk returns a tuple with the NoPost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetNoPostOk() (*bool, bool) {
	if o == nil || IsNil(o.NoPost) {
		return nil, false
	}
	return o.NoPost, true
}

// HasNoPost returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasNoPost() bool {
	if o != nil && !IsNil(o.NoPost) {
		return true
	}

	return false
}

// SetNoPost gets a reference to the given bool and assigns it to the NoPost field.
func (o *BlockPostingReservationsType) SetNoPost(v bool) {
	o.NoPost = &v
}

// GetReservationNameId returns the ReservationNameId field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetReservationNameId() UniqueIDType {
	if o == nil || IsNil(o.ReservationNameId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ReservationNameId
}

// GetReservationNameIdOk returns a tuple with the ReservationNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetReservationNameIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationNameId) {
		return nil, false
	}
	return o.ReservationNameId, true
}

// HasReservationNameId returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasReservationNameId() bool {
	if o != nil && !IsNil(o.ReservationNameId) {
		return true
	}

	return false
}

// SetReservationNameId gets a reference to the given UniqueIDType and assigns it to the ReservationNameId field.
func (o *BlockPostingReservationsType) SetReservationNameId(v UniqueIDType) {
	o.ReservationNameId = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetReservationStatus() BookingStatusType {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret BookingStatusType
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetReservationStatusOk() (*BookingStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given BookingStatusType and assigns it to the ReservationStatus field.
func (o *BlockPostingReservationsType) SetReservationStatus(v BookingStatusType) {
	o.ReservationStatus = &v
}

// GetRoomHotelCode returns the RoomHotelCode field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetRoomHotelCode() string {
	if o == nil || IsNil(o.RoomHotelCode) {
		var ret string
		return ret
	}
	return *o.RoomHotelCode
}

// GetRoomHotelCodeOk returns a tuple with the RoomHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetRoomHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomHotelCode) {
		return nil, false
	}
	return o.RoomHotelCode, true
}

// HasRoomHotelCode returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasRoomHotelCode() bool {
	if o != nil && !IsNil(o.RoomHotelCode) {
		return true
	}

	return false
}

// SetRoomHotelCode gets a reference to the given string and assigns it to the RoomHotelCode field.
func (o *BlockPostingReservationsType) SetRoomHotelCode(v string) {
	o.RoomHotelCode = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *BlockPostingReservationsType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *BlockPostingReservationsType) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPostingReservationsType) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *BlockPostingReservationsType) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *BlockPostingReservationsType) SetSize(v int32) {
	o.Size = &v
}

func (o BlockPostingReservationsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockPostingReservationsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.BlockId) {
		toSerialize["blockId"] = o.BlockId
	}
	if !IsNil(o.ConfirmationNumber) {
		toSerialize["confirmationNumber"] = o.ConfirmationNumber
	}
	if !IsNil(o.DefaultPostingAccount) {
		toSerialize["defaultPostingAccount"] = o.DefaultPostingAccount
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.GuestFirstName) {
		toSerialize["guestFirstName"] = o.GuestFirstName
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.NoPost) {
		toSerialize["noPost"] = o.NoPost
	}
	if !IsNil(o.ReservationNameId) {
		toSerialize["reservationNameId"] = o.ReservationNameId
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RoomHotelCode) {
		toSerialize["roomHotelCode"] = o.RoomHotelCode
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableBlockPostingReservationsType struct {
	value *BlockPostingReservationsType
	isSet bool
}

func (v NullableBlockPostingReservationsType) Get() *BlockPostingReservationsType {
	return v.value
}

func (v *NullableBlockPostingReservationsType) Set(val *BlockPostingReservationsType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockPostingReservationsType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockPostingReservationsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockPostingReservationsType(val *BlockPostingReservationsType) *NullableBlockPostingReservationsType {
	return &NullableBlockPostingReservationsType{value: val, isSet: true}
}

func (v NullableBlockPostingReservationsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockPostingReservationsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


