/*
OPERA Cloud Sales Event Management API

APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evm

import (
	"encoding/json"
)

// checks if the HotelReservationTypeReservationProfiles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelReservationTypeReservationProfiles{}

// HotelReservationTypeReservationProfiles Collection of guests associated with the reservation.
type HotelReservationTypeReservationProfiles struct {
	CommissionPayoutTo *CommissionPayoutToType `json:"commissionPayoutTo,omitempty"`
	ReservationProfile []ReservationProfileType `json:"reservationProfile,omitempty"`
}

// NewHotelReservationTypeReservationProfiles instantiates a new HotelReservationTypeReservationProfiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelReservationTypeReservationProfiles() *HotelReservationTypeReservationProfiles {
	this := HotelReservationTypeReservationProfiles{}
	return &this
}

// NewHotelReservationTypeReservationProfilesWithDefaults instantiates a new HotelReservationTypeReservationProfiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelReservationTypeReservationProfilesWithDefaults() *HotelReservationTypeReservationProfiles {
	this := HotelReservationTypeReservationProfiles{}
	return &this
}

// GetCommissionPayoutTo returns the CommissionPayoutTo field value if set, zero value otherwise.
func (o *HotelReservationTypeReservationProfiles) GetCommissionPayoutTo() CommissionPayoutToType {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		var ret CommissionPayoutToType
		return ret
	}
	return *o.CommissionPayoutTo
}

// GetCommissionPayoutToOk returns a tuple with the CommissionPayoutTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationTypeReservationProfiles) GetCommissionPayoutToOk() (*CommissionPayoutToType, bool) {
	if o == nil || IsNil(o.CommissionPayoutTo) {
		return nil, false
	}
	return o.CommissionPayoutTo, true
}

// HasCommissionPayoutTo returns a boolean if a field has been set.
func (o *HotelReservationTypeReservationProfiles) HasCommissionPayoutTo() bool {
	if o != nil && !IsNil(o.CommissionPayoutTo) {
		return true
	}

	return false
}

// SetCommissionPayoutTo gets a reference to the given CommissionPayoutToType and assigns it to the CommissionPayoutTo field.
func (o *HotelReservationTypeReservationProfiles) SetCommissionPayoutTo(v CommissionPayoutToType) {
	o.CommissionPayoutTo = &v
}

// GetReservationProfile returns the ReservationProfile field value if set, zero value otherwise.
func (o *HotelReservationTypeReservationProfiles) GetReservationProfile() []ReservationProfileType {
	if o == nil || IsNil(o.ReservationProfile) {
		var ret []ReservationProfileType
		return ret
	}
	return o.ReservationProfile
}

// GetReservationProfileOk returns a tuple with the ReservationProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelReservationTypeReservationProfiles) GetReservationProfileOk() ([]ReservationProfileType, bool) {
	if o == nil || IsNil(o.ReservationProfile) {
		return nil, false
	}
	return o.ReservationProfile, true
}

// HasReservationProfile returns a boolean if a field has been set.
func (o *HotelReservationTypeReservationProfiles) HasReservationProfile() bool {
	if o != nil && !IsNil(o.ReservationProfile) {
		return true
	}

	return false
}

// SetReservationProfile gets a reference to the given []ReservationProfileType and assigns it to the ReservationProfile field.
func (o *HotelReservationTypeReservationProfiles) SetReservationProfile(v []ReservationProfileType) {
	o.ReservationProfile = v
}

func (o HotelReservationTypeReservationProfiles) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelReservationTypeReservationProfiles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommissionPayoutTo) {
		toSerialize["commissionPayoutTo"] = o.CommissionPayoutTo
	}
	if !IsNil(o.ReservationProfile) {
		toSerialize["reservationProfile"] = o.ReservationProfile
	}
	return toSerialize, nil
}

type NullableHotelReservationTypeReservationProfiles struct {
	value *HotelReservationTypeReservationProfiles
	isSet bool
}

func (v NullableHotelReservationTypeReservationProfiles) Get() *HotelReservationTypeReservationProfiles {
	return v.value
}

func (v *NullableHotelReservationTypeReservationProfiles) Set(val *HotelReservationTypeReservationProfiles) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelReservationTypeReservationProfiles) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelReservationTypeReservationProfiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelReservationTypeReservationProfiles(val *HotelReservationTypeReservationProfiles) *NullableHotelReservationTypeReservationProfiles {
	return &NullableHotelReservationTypeReservationProfiles{value: val, isSet: true}
}

func (v NullableHotelReservationTypeReservationProfiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelReservationTypeReservationProfiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


