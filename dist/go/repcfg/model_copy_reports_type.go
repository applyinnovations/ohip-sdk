/*
OPERA Cloud Report Master Data Management API

APIs catering to the managing export master data configuration in a hotel.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.4
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package repcfg

import (
	"encoding/json"
)

// checks if the CopyReportsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyReportsType{}

// CopyReportsType Copy report configuration code from one property to the other.
type CopyReportsType struct {
	Codes []string `json:"codes,omitempty"`
	TargetHotelCodes []string `json:"targetHotelCodes,omitempty"`
	SourceHotelCode *string `json:"sourceHotelCode,omitempty"`
}

// NewCopyReportsType instantiates a new CopyReportsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyReportsType() *CopyReportsType {
	this := CopyReportsType{}
	return &this
}

// NewCopyReportsTypeWithDefaults instantiates a new CopyReportsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyReportsTypeWithDefaults() *CopyReportsType {
	this := CopyReportsType{}
	return &this
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *CopyReportsType) GetCodes() []string {
	if o == nil || IsNil(o.Codes) {
		var ret []string
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyReportsType) GetCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *CopyReportsType) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []string and assigns it to the Codes field.
func (o *CopyReportsType) SetCodes(v []string) {
	o.Codes = v
}

// GetTargetHotelCodes returns the TargetHotelCodes field value if set, zero value otherwise.
func (o *CopyReportsType) GetTargetHotelCodes() []string {
	if o == nil || IsNil(o.TargetHotelCodes) {
		var ret []string
		return ret
	}
	return o.TargetHotelCodes
}

// GetTargetHotelCodesOk returns a tuple with the TargetHotelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyReportsType) GetTargetHotelCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetHotelCodes) {
		return nil, false
	}
	return o.TargetHotelCodes, true
}

// HasTargetHotelCodes returns a boolean if a field has been set.
func (o *CopyReportsType) HasTargetHotelCodes() bool {
	if o != nil && !IsNil(o.TargetHotelCodes) {
		return true
	}

	return false
}

// SetTargetHotelCodes gets a reference to the given []string and assigns it to the TargetHotelCodes field.
func (o *CopyReportsType) SetTargetHotelCodes(v []string) {
	o.TargetHotelCodes = v
}

// GetSourceHotelCode returns the SourceHotelCode field value if set, zero value otherwise.
func (o *CopyReportsType) GetSourceHotelCode() string {
	if o == nil || IsNil(o.SourceHotelCode) {
		var ret string
		return ret
	}
	return *o.SourceHotelCode
}

// GetSourceHotelCodeOk returns a tuple with the SourceHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyReportsType) GetSourceHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceHotelCode) {
		return nil, false
	}
	return o.SourceHotelCode, true
}

// HasSourceHotelCode returns a boolean if a field has been set.
func (o *CopyReportsType) HasSourceHotelCode() bool {
	if o != nil && !IsNil(o.SourceHotelCode) {
		return true
	}

	return false
}

// SetSourceHotelCode gets a reference to the given string and assigns it to the SourceHotelCode field.
func (o *CopyReportsType) SetSourceHotelCode(v string) {
	o.SourceHotelCode = &v
}

func (o CopyReportsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyReportsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	if !IsNil(o.TargetHotelCodes) {
		toSerialize["targetHotelCodes"] = o.TargetHotelCodes
	}
	if !IsNil(o.SourceHotelCode) {
		toSerialize["sourceHotelCode"] = o.SourceHotelCode
	}
	return toSerialize, nil
}

type NullableCopyReportsType struct {
	value *CopyReportsType
	isSet bool
}

func (v NullableCopyReportsType) Get() *CopyReportsType {
	return v.value
}

func (v *NullableCopyReportsType) Set(val *CopyReportsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyReportsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyReportsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyReportsType(val *CopyReportsType) *NullableCopyReportsType {
	return &NullableCopyReportsType{value: val, isSet: true}
}

func (v NullableCopyReportsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyReportsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


