/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the YieldMarketInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &YieldMarketInfoType{}

// YieldMarketInfoType Type provides the Yield Market Type information.
type YieldMarketInfoType struct {
	// Yield Market Type FlexValues.
	FlexValues []string `json:"flexValues,omitempty"`
	// Hotel Code.
	HotelId *string `json:"hotelId,omitempty"`
	// Membership Card Number.
	MembershipId *string `json:"membershipId,omitempty"`
	// Yield Market Type.
	YieldMarketType *string `json:"yieldMarketType,omitempty"`
}

// NewYieldMarketInfoType instantiates a new YieldMarketInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYieldMarketInfoType() *YieldMarketInfoType {
	this := YieldMarketInfoType{}
	return &this
}

// NewYieldMarketInfoTypeWithDefaults instantiates a new YieldMarketInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYieldMarketInfoTypeWithDefaults() *YieldMarketInfoType {
	this := YieldMarketInfoType{}
	return &this
}

// GetFlexValues returns the FlexValues field value if set, zero value otherwise.
func (o *YieldMarketInfoType) GetFlexValues() []string {
	if o == nil || IsNil(o.FlexValues) {
		var ret []string
		return ret
	}
	return o.FlexValues
}

// GetFlexValuesOk returns a tuple with the FlexValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YieldMarketInfoType) GetFlexValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.FlexValues) {
		return nil, false
	}
	return o.FlexValues, true
}

// HasFlexValues returns a boolean if a field has been set.
func (o *YieldMarketInfoType) HasFlexValues() bool {
	if o != nil && !IsNil(o.FlexValues) {
		return true
	}

	return false
}

// SetFlexValues gets a reference to the given []string and assigns it to the FlexValues field.
func (o *YieldMarketInfoType) SetFlexValues(v []string) {
	o.FlexValues = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *YieldMarketInfoType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YieldMarketInfoType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *YieldMarketInfoType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *YieldMarketInfoType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *YieldMarketInfoType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YieldMarketInfoType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *YieldMarketInfoType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *YieldMarketInfoType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetYieldMarketType returns the YieldMarketType field value if set, zero value otherwise.
func (o *YieldMarketInfoType) GetYieldMarketType() string {
	if o == nil || IsNil(o.YieldMarketType) {
		var ret string
		return ret
	}
	return *o.YieldMarketType
}

// GetYieldMarketTypeOk returns a tuple with the YieldMarketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YieldMarketInfoType) GetYieldMarketTypeOk() (*string, bool) {
	if o == nil || IsNil(o.YieldMarketType) {
		return nil, false
	}
	return o.YieldMarketType, true
}

// HasYieldMarketType returns a boolean if a field has been set.
func (o *YieldMarketInfoType) HasYieldMarketType() bool {
	if o != nil && !IsNil(o.YieldMarketType) {
		return true
	}

	return false
}

// SetYieldMarketType gets a reference to the given string and assigns it to the YieldMarketType field.
func (o *YieldMarketInfoType) SetYieldMarketType(v string) {
	o.YieldMarketType = &v
}

func (o YieldMarketInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o YieldMarketInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlexValues) {
		toSerialize["flexValues"] = o.FlexValues
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.YieldMarketType) {
		toSerialize["yieldMarketType"] = o.YieldMarketType
	}
	return toSerialize, nil
}

type NullableYieldMarketInfoType struct {
	value *YieldMarketInfoType
	isSet bool
}

func (v NullableYieldMarketInfoType) Get() *YieldMarketInfoType {
	return v.value
}

func (v *NullableYieldMarketInfoType) Set(val *YieldMarketInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableYieldMarketInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableYieldMarketInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYieldMarketInfoType(val *YieldMarketInfoType) *NullableYieldMarketInfoType {
	return &NullableYieldMarketInfoType{value: val, isSet: true}
}

func (v NullableYieldMarketInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYieldMarketInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


