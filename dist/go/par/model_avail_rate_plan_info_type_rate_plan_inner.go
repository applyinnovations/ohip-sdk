/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the AvailRatePlanInfoTypeRatePlanInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailRatePlanInfoTypeRatePlanInner{}

// AvailRatePlanInfoTypeRatePlanInner struct for AvailRatePlanInfoTypeRatePlanInner
type AvailRatePlanInfoTypeRatePlanInner struct {
	// Booking Channel mapping for the Rate Plan Code.
	BookingChannelMappings []BookingChannelMappingType `json:"bookingChannelMappings,omitempty"`
	CancelPenalty *CancelPenaltyType `json:"cancelPenalty,omitempty"`
	// If true, indicates that credentials is required to sell the rate code.
	CredentialsRequired *bool `json:"credentialsRequired,omitempty"`
	// Currency Code of the rate code.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Description of the Rate Code.
	Description *string `json:"description,omitempty"`
	// If true, indicates additional discount could be applied on the Rate.
	DiscountAllowed *bool `json:"discountAllowed,omitempty"`
	Guarantee *GuaranteeType `json:"guarantee,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	// If true, indicates this rates is not allowed to be sold by CRO. For CRO this is information only.
	HotelUseOnly *bool `json:"hotelUseOnly,omitempty"`
	// Detail Information of the Rate Code.
	LongInfo *string `json:"longInfo,omitempty"`
	// Holds the market code.
	MarketCode *string `json:"marketCode,omitempty"`
	// Meal plan codes associated with the rate codes.
	MealPlans []MealPlanCodeType `json:"mealPlans,omitempty"`
	NegotiatedBy *ProfileTypeType `json:"negotiatedBy,omitempty"`
	RateCommission *RatePlanCommissionType `json:"rateCommission,omitempty"`
	RatePlanCategory *string `json:"ratePlanCategory,omitempty"`
	RatePlanChannelInfo *RatePlanChannelInfoType `json:"ratePlanChannelInfo,omitempty"`
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	// All rate codes are associated with rate plan level ( or rate category )for Channels. So if rate plans are given in the request, get all rate codes associated with the rate plan level.
	RatePlanLevel *string `json:"ratePlanLevel,omitempty"`
	// Guarantee Code information with cancellation penalty and deposit policy information.
	ResGuarantees []GuaranteePolicyType `json:"resGuarantees,omitempty"`
	// Indicates if service fee is included in the rate code amount.
	ServiceFeeInclusive *bool `json:"serviceFeeInclusive,omitempty"`
	// Brief Information of the Rate Code.
	ShortInfo *string `json:"shortInfo,omitempty"`
	// Holds the source code.
	SourceCode *string `json:"sourceCode,omitempty"`
	// Indicates if tax is included in the rate code amount.
	TaxInclusive *bool `json:"taxInclusive,omitempty"`
	// URL providing more information about the Rate Code.
	WebPage *string `json:"webPage,omitempty"`
}

// NewAvailRatePlanInfoTypeRatePlanInner instantiates a new AvailRatePlanInfoTypeRatePlanInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailRatePlanInfoTypeRatePlanInner() *AvailRatePlanInfoTypeRatePlanInner {
	this := AvailRatePlanInfoTypeRatePlanInner{}
	return &this
}

// NewAvailRatePlanInfoTypeRatePlanInnerWithDefaults instantiates a new AvailRatePlanInfoTypeRatePlanInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailRatePlanInfoTypeRatePlanInnerWithDefaults() *AvailRatePlanInfoTypeRatePlanInner {
	this := AvailRatePlanInfoTypeRatePlanInner{}
	return &this
}

// GetBookingChannelMappings returns the BookingChannelMappings field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetBookingChannelMappings() []BookingChannelMappingType {
	if o == nil || IsNil(o.BookingChannelMappings) {
		var ret []BookingChannelMappingType
		return ret
	}
	return o.BookingChannelMappings
}

// GetBookingChannelMappingsOk returns a tuple with the BookingChannelMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetBookingChannelMappingsOk() ([]BookingChannelMappingType, bool) {
	if o == nil || IsNil(o.BookingChannelMappings) {
		return nil, false
	}
	return o.BookingChannelMappings, true
}

// HasBookingChannelMappings returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasBookingChannelMappings() bool {
	if o != nil && !IsNil(o.BookingChannelMappings) {
		return true
	}

	return false
}

// SetBookingChannelMappings gets a reference to the given []BookingChannelMappingType and assigns it to the BookingChannelMappings field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetBookingChannelMappings(v []BookingChannelMappingType) {
	o.BookingChannelMappings = v
}

// GetCancelPenalty returns the CancelPenalty field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCancelPenalty() CancelPenaltyType {
	if o == nil || IsNil(o.CancelPenalty) {
		var ret CancelPenaltyType
		return ret
	}
	return *o.CancelPenalty
}

// GetCancelPenaltyOk returns a tuple with the CancelPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCancelPenaltyOk() (*CancelPenaltyType, bool) {
	if o == nil || IsNil(o.CancelPenalty) {
		return nil, false
	}
	return o.CancelPenalty, true
}

// HasCancelPenalty returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasCancelPenalty() bool {
	if o != nil && !IsNil(o.CancelPenalty) {
		return true
	}

	return false
}

// SetCancelPenalty gets a reference to the given CancelPenaltyType and assigns it to the CancelPenalty field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetCancelPenalty(v CancelPenaltyType) {
	o.CancelPenalty = &v
}

// GetCredentialsRequired returns the CredentialsRequired field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCredentialsRequired() bool {
	if o == nil || IsNil(o.CredentialsRequired) {
		var ret bool
		return ret
	}
	return *o.CredentialsRequired
}

// GetCredentialsRequiredOk returns a tuple with the CredentialsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCredentialsRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.CredentialsRequired) {
		return nil, false
	}
	return o.CredentialsRequired, true
}

// HasCredentialsRequired returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasCredentialsRequired() bool {
	if o != nil && !IsNil(o.CredentialsRequired) {
		return true
	}

	return false
}

// SetCredentialsRequired gets a reference to the given bool and assigns it to the CredentialsRequired field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetCredentialsRequired(v bool) {
	o.CredentialsRequired = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetDescription(v string) {
	o.Description = &v
}

// GetDiscountAllowed returns the DiscountAllowed field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetDiscountAllowed() bool {
	if o == nil || IsNil(o.DiscountAllowed) {
		var ret bool
		return ret
	}
	return *o.DiscountAllowed
}

// GetDiscountAllowedOk returns a tuple with the DiscountAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetDiscountAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscountAllowed) {
		return nil, false
	}
	return o.DiscountAllowed, true
}

// HasDiscountAllowed returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasDiscountAllowed() bool {
	if o != nil && !IsNil(o.DiscountAllowed) {
		return true
	}

	return false
}

// SetDiscountAllowed gets a reference to the given bool and assigns it to the DiscountAllowed field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetDiscountAllowed(v bool) {
	o.DiscountAllowed = &v
}

// GetGuarantee returns the Guarantee field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetGuarantee() GuaranteeType {
	if o == nil || IsNil(o.Guarantee) {
		var ret GuaranteeType
		return ret
	}
	return *o.Guarantee
}

// GetGuaranteeOk returns a tuple with the Guarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetGuaranteeOk() (*GuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantee) {
		return nil, false
	}
	return o.Guarantee, true
}

// HasGuarantee returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasGuarantee() bool {
	if o != nil && !IsNil(o.Guarantee) {
		return true
	}

	return false
}

// SetGuarantee gets a reference to the given GuaranteeType and assigns it to the Guarantee field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetGuarantee(v GuaranteeType) {
	o.Guarantee = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetHotelId(v string) {
	o.HotelId = &v
}

// GetHotelUseOnly returns the HotelUseOnly field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetHotelUseOnly() bool {
	if o == nil || IsNil(o.HotelUseOnly) {
		var ret bool
		return ret
	}
	return *o.HotelUseOnly
}

// GetHotelUseOnlyOk returns a tuple with the HotelUseOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetHotelUseOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.HotelUseOnly) {
		return nil, false
	}
	return o.HotelUseOnly, true
}

// HasHotelUseOnly returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasHotelUseOnly() bool {
	if o != nil && !IsNil(o.HotelUseOnly) {
		return true
	}

	return false
}

// SetHotelUseOnly gets a reference to the given bool and assigns it to the HotelUseOnly field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetHotelUseOnly(v bool) {
	o.HotelUseOnly = &v
}

// GetLongInfo returns the LongInfo field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetLongInfo() string {
	if o == nil || IsNil(o.LongInfo) {
		var ret string
		return ret
	}
	return *o.LongInfo
}

// GetLongInfoOk returns a tuple with the LongInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetLongInfoOk() (*string, bool) {
	if o == nil || IsNil(o.LongInfo) {
		return nil, false
	}
	return o.LongInfo, true
}

// HasLongInfo returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasLongInfo() bool {
	if o != nil && !IsNil(o.LongInfo) {
		return true
	}

	return false
}

// SetLongInfo gets a reference to the given string and assigns it to the LongInfo field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetLongInfo(v string) {
	o.LongInfo = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetMealPlans returns the MealPlans field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetMealPlans() []MealPlanCodeType {
	if o == nil || IsNil(o.MealPlans) {
		var ret []MealPlanCodeType
		return ret
	}
	return o.MealPlans
}

// GetMealPlansOk returns a tuple with the MealPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetMealPlansOk() ([]MealPlanCodeType, bool) {
	if o == nil || IsNil(o.MealPlans) {
		return nil, false
	}
	return o.MealPlans, true
}

// HasMealPlans returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasMealPlans() bool {
	if o != nil && !IsNil(o.MealPlans) {
		return true
	}

	return false
}

// SetMealPlans gets a reference to the given []MealPlanCodeType and assigns it to the MealPlans field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetMealPlans(v []MealPlanCodeType) {
	o.MealPlans = v
}

// GetNegotiatedBy returns the NegotiatedBy field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetNegotiatedBy() ProfileTypeType {
	if o == nil || IsNil(o.NegotiatedBy) {
		var ret ProfileTypeType
		return ret
	}
	return *o.NegotiatedBy
}

// GetNegotiatedByOk returns a tuple with the NegotiatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetNegotiatedByOk() (*ProfileTypeType, bool) {
	if o == nil || IsNil(o.NegotiatedBy) {
		return nil, false
	}
	return o.NegotiatedBy, true
}

// HasNegotiatedBy returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasNegotiatedBy() bool {
	if o != nil && !IsNil(o.NegotiatedBy) {
		return true
	}

	return false
}

// SetNegotiatedBy gets a reference to the given ProfileTypeType and assigns it to the NegotiatedBy field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetNegotiatedBy(v ProfileTypeType) {
	o.NegotiatedBy = &v
}

// GetRateCommission returns the RateCommission field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRateCommission() RatePlanCommissionType {
	if o == nil || IsNil(o.RateCommission) {
		var ret RatePlanCommissionType
		return ret
	}
	return *o.RateCommission
}

// GetRateCommissionOk returns a tuple with the RateCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRateCommissionOk() (*RatePlanCommissionType, bool) {
	if o == nil || IsNil(o.RateCommission) {
		return nil, false
	}
	return o.RateCommission, true
}

// HasRateCommission returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasRateCommission() bool {
	if o != nil && !IsNil(o.RateCommission) {
		return true
	}

	return false
}

// SetRateCommission gets a reference to the given RatePlanCommissionType and assigns it to the RateCommission field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetRateCommission(v RatePlanCommissionType) {
	o.RateCommission = &v
}

// GetRatePlanCategory returns the RatePlanCategory field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanCategory() string {
	if o == nil || IsNil(o.RatePlanCategory) {
		var ret string
		return ret
	}
	return *o.RatePlanCategory
}

// GetRatePlanCategoryOk returns a tuple with the RatePlanCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCategory) {
		return nil, false
	}
	return o.RatePlanCategory, true
}

// HasRatePlanCategory returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasRatePlanCategory() bool {
	if o != nil && !IsNil(o.RatePlanCategory) {
		return true
	}

	return false
}

// SetRatePlanCategory gets a reference to the given string and assigns it to the RatePlanCategory field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetRatePlanCategory(v string) {
	o.RatePlanCategory = &v
}

// GetRatePlanChannelInfo returns the RatePlanChannelInfo field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanChannelInfo() RatePlanChannelInfoType {
	if o == nil || IsNil(o.RatePlanChannelInfo) {
		var ret RatePlanChannelInfoType
		return ret
	}
	return *o.RatePlanChannelInfo
}

// GetRatePlanChannelInfoOk returns a tuple with the RatePlanChannelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanChannelInfoOk() (*RatePlanChannelInfoType, bool) {
	if o == nil || IsNil(o.RatePlanChannelInfo) {
		return nil, false
	}
	return o.RatePlanChannelInfo, true
}

// HasRatePlanChannelInfo returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasRatePlanChannelInfo() bool {
	if o != nil && !IsNil(o.RatePlanChannelInfo) {
		return true
	}

	return false
}

// SetRatePlanChannelInfo gets a reference to the given RatePlanChannelInfoType and assigns it to the RatePlanChannelInfo field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetRatePlanChannelInfo(v RatePlanChannelInfoType) {
	o.RatePlanChannelInfo = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetRatePlanLevel returns the RatePlanLevel field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanLevel() string {
	if o == nil || IsNil(o.RatePlanLevel) {
		var ret string
		return ret
	}
	return *o.RatePlanLevel
}

// GetRatePlanLevelOk returns a tuple with the RatePlanLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetRatePlanLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanLevel) {
		return nil, false
	}
	return o.RatePlanLevel, true
}

// HasRatePlanLevel returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasRatePlanLevel() bool {
	if o != nil && !IsNil(o.RatePlanLevel) {
		return true
	}

	return false
}

// SetRatePlanLevel gets a reference to the given string and assigns it to the RatePlanLevel field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetRatePlanLevel(v string) {
	o.RatePlanLevel = &v
}

// GetResGuarantees returns the ResGuarantees field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetResGuarantees() []GuaranteePolicyType {
	if o == nil || IsNil(o.ResGuarantees) {
		var ret []GuaranteePolicyType
		return ret
	}
	return o.ResGuarantees
}

// GetResGuaranteesOk returns a tuple with the ResGuarantees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetResGuaranteesOk() ([]GuaranteePolicyType, bool) {
	if o == nil || IsNil(o.ResGuarantees) {
		return nil, false
	}
	return o.ResGuarantees, true
}

// HasResGuarantees returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasResGuarantees() bool {
	if o != nil && !IsNil(o.ResGuarantees) {
		return true
	}

	return false
}

// SetResGuarantees gets a reference to the given []GuaranteePolicyType and assigns it to the ResGuarantees field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetResGuarantees(v []GuaranteePolicyType) {
	o.ResGuarantees = v
}

// GetServiceFeeInclusive returns the ServiceFeeInclusive field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetServiceFeeInclusive() bool {
	if o == nil || IsNil(o.ServiceFeeInclusive) {
		var ret bool
		return ret
	}
	return *o.ServiceFeeInclusive
}

// GetServiceFeeInclusiveOk returns a tuple with the ServiceFeeInclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetServiceFeeInclusiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceFeeInclusive) {
		return nil, false
	}
	return o.ServiceFeeInclusive, true
}

// HasServiceFeeInclusive returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasServiceFeeInclusive() bool {
	if o != nil && !IsNil(o.ServiceFeeInclusive) {
		return true
	}

	return false
}

// SetServiceFeeInclusive gets a reference to the given bool and assigns it to the ServiceFeeInclusive field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetServiceFeeInclusive(v bool) {
	o.ServiceFeeInclusive = &v
}

// GetShortInfo returns the ShortInfo field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetShortInfo() string {
	if o == nil || IsNil(o.ShortInfo) {
		var ret string
		return ret
	}
	return *o.ShortInfo
}

// GetShortInfoOk returns a tuple with the ShortInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetShortInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ShortInfo) {
		return nil, false
	}
	return o.ShortInfo, true
}

// HasShortInfo returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasShortInfo() bool {
	if o != nil && !IsNil(o.ShortInfo) {
		return true
	}

	return false
}

// SetShortInfo gets a reference to the given string and assigns it to the ShortInfo field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetShortInfo(v string) {
	o.ShortInfo = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetTaxInclusive returns the TaxInclusive field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetTaxInclusive() bool {
	if o == nil || IsNil(o.TaxInclusive) {
		var ret bool
		return ret
	}
	return *o.TaxInclusive
}

// GetTaxInclusiveOk returns a tuple with the TaxInclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetTaxInclusiveOk() (*bool, bool) {
	if o == nil || IsNil(o.TaxInclusive) {
		return nil, false
	}
	return o.TaxInclusive, true
}

// HasTaxInclusive returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasTaxInclusive() bool {
	if o != nil && !IsNil(o.TaxInclusive) {
		return true
	}

	return false
}

// SetTaxInclusive gets a reference to the given bool and assigns it to the TaxInclusive field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetTaxInclusive(v bool) {
	o.TaxInclusive = &v
}

// GetWebPage returns the WebPage field value if set, zero value otherwise.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetWebPage() string {
	if o == nil || IsNil(o.WebPage) {
		var ret string
		return ret
	}
	return *o.WebPage
}

// GetWebPageOk returns a tuple with the WebPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) GetWebPageOk() (*string, bool) {
	if o == nil || IsNil(o.WebPage) {
		return nil, false
	}
	return o.WebPage, true
}

// HasWebPage returns a boolean if a field has been set.
func (o *AvailRatePlanInfoTypeRatePlanInner) HasWebPage() bool {
	if o != nil && !IsNil(o.WebPage) {
		return true
	}

	return false
}

// SetWebPage gets a reference to the given string and assigns it to the WebPage field.
func (o *AvailRatePlanInfoTypeRatePlanInner) SetWebPage(v string) {
	o.WebPage = &v
}

func (o AvailRatePlanInfoTypeRatePlanInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailRatePlanInfoTypeRatePlanInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingChannelMappings) {
		toSerialize["bookingChannelMappings"] = o.BookingChannelMappings
	}
	if !IsNil(o.CancelPenalty) {
		toSerialize["cancelPenalty"] = o.CancelPenalty
	}
	if !IsNil(o.CredentialsRequired) {
		toSerialize["credentialsRequired"] = o.CredentialsRequired
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DiscountAllowed) {
		toSerialize["discountAllowed"] = o.DiscountAllowed
	}
	if !IsNil(o.Guarantee) {
		toSerialize["guarantee"] = o.Guarantee
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.HotelUseOnly) {
		toSerialize["hotelUseOnly"] = o.HotelUseOnly
	}
	if !IsNil(o.LongInfo) {
		toSerialize["longInfo"] = o.LongInfo
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.MealPlans) {
		toSerialize["mealPlans"] = o.MealPlans
	}
	if !IsNil(o.NegotiatedBy) {
		toSerialize["negotiatedBy"] = o.NegotiatedBy
	}
	if !IsNil(o.RateCommission) {
		toSerialize["rateCommission"] = o.RateCommission
	}
	if !IsNil(o.RatePlanCategory) {
		toSerialize["ratePlanCategory"] = o.RatePlanCategory
	}
	if !IsNil(o.RatePlanChannelInfo) {
		toSerialize["ratePlanChannelInfo"] = o.RatePlanChannelInfo
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.RatePlanLevel) {
		toSerialize["ratePlanLevel"] = o.RatePlanLevel
	}
	if !IsNil(o.ResGuarantees) {
		toSerialize["resGuarantees"] = o.ResGuarantees
	}
	if !IsNil(o.ServiceFeeInclusive) {
		toSerialize["serviceFeeInclusive"] = o.ServiceFeeInclusive
	}
	if !IsNil(o.ShortInfo) {
		toSerialize["shortInfo"] = o.ShortInfo
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.TaxInclusive) {
		toSerialize["taxInclusive"] = o.TaxInclusive
	}
	if !IsNil(o.WebPage) {
		toSerialize["webPage"] = o.WebPage
	}
	return toSerialize, nil
}

type NullableAvailRatePlanInfoTypeRatePlanInner struct {
	value *AvailRatePlanInfoTypeRatePlanInner
	isSet bool
}

func (v NullableAvailRatePlanInfoTypeRatePlanInner) Get() *AvailRatePlanInfoTypeRatePlanInner {
	return v.value
}

func (v *NullableAvailRatePlanInfoTypeRatePlanInner) Set(val *AvailRatePlanInfoTypeRatePlanInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailRatePlanInfoTypeRatePlanInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailRatePlanInfoTypeRatePlanInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailRatePlanInfoTypeRatePlanInner(val *AvailRatePlanInfoTypeRatePlanInner) *NullableAvailRatePlanInfoTypeRatePlanInner {
	return &NullableAvailRatePlanInfoTypeRatePlanInner{value: val, isSet: true}
}

func (v NullableAvailRatePlanInfoTypeRatePlanInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailRatePlanInfoTypeRatePlanInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


