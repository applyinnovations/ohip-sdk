/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the ProfileTypeGdsNegotiatedRates type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileTypeGdsNegotiatedRates{}

// ProfileTypeGdsNegotiatedRates List of channel negotiated rates that this profile has been assigned to.
type ProfileTypeGdsNegotiatedRates struct {
	// Collection of Detailed information on channel negotiated rates for the profile.
	GdsNegotiatedRate []GdsNegotiatedType `json:"gdsNegotiatedRate,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
}

// NewProfileTypeGdsNegotiatedRates instantiates a new ProfileTypeGdsNegotiatedRates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileTypeGdsNegotiatedRates() *ProfileTypeGdsNegotiatedRates {
	this := ProfileTypeGdsNegotiatedRates{}
	return &this
}

// NewProfileTypeGdsNegotiatedRatesWithDefaults instantiates a new ProfileTypeGdsNegotiatedRates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileTypeGdsNegotiatedRatesWithDefaults() *ProfileTypeGdsNegotiatedRates {
	this := ProfileTypeGdsNegotiatedRates{}
	return &this
}

// GetGdsNegotiatedRate returns the GdsNegotiatedRate field value if set, zero value otherwise.
func (o *ProfileTypeGdsNegotiatedRates) GetGdsNegotiatedRate() []GdsNegotiatedType {
	if o == nil || IsNil(o.GdsNegotiatedRate) {
		var ret []GdsNegotiatedType
		return ret
	}
	return o.GdsNegotiatedRate
}

// GetGdsNegotiatedRateOk returns a tuple with the GdsNegotiatedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTypeGdsNegotiatedRates) GetGdsNegotiatedRateOk() ([]GdsNegotiatedType, bool) {
	if o == nil || IsNil(o.GdsNegotiatedRate) {
		return nil, false
	}
	return o.GdsNegotiatedRate, true
}

// HasGdsNegotiatedRate returns a boolean if a field has been set.
func (o *ProfileTypeGdsNegotiatedRates) HasGdsNegotiatedRate() bool {
	if o != nil && !IsNil(o.GdsNegotiatedRate) {
		return true
	}

	return false
}

// SetGdsNegotiatedRate gets a reference to the given []GdsNegotiatedType and assigns it to the GdsNegotiatedRate field.
func (o *ProfileTypeGdsNegotiatedRates) SetGdsNegotiatedRate(v []GdsNegotiatedType) {
	o.GdsNegotiatedRate = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *ProfileTypeGdsNegotiatedRates) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTypeGdsNegotiatedRates) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *ProfileTypeGdsNegotiatedRates) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *ProfileTypeGdsNegotiatedRates) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *ProfileTypeGdsNegotiatedRates) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTypeGdsNegotiatedRates) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *ProfileTypeGdsNegotiatedRates) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *ProfileTypeGdsNegotiatedRates) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ProfileTypeGdsNegotiatedRates) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileTypeGdsNegotiatedRates) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ProfileTypeGdsNegotiatedRates) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ProfileTypeGdsNegotiatedRates) SetCount(v int32) {
	o.Count = &v
}

func (o ProfileTypeGdsNegotiatedRates) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileTypeGdsNegotiatedRates) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GdsNegotiatedRate) {
		toSerialize["gdsNegotiatedRate"] = o.GdsNegotiatedRate
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableProfileTypeGdsNegotiatedRates struct {
	value *ProfileTypeGdsNegotiatedRates
	isSet bool
}

func (v NullableProfileTypeGdsNegotiatedRates) Get() *ProfileTypeGdsNegotiatedRates {
	return v.value
}

func (v *NullableProfileTypeGdsNegotiatedRates) Set(val *ProfileTypeGdsNegotiatedRates) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileTypeGdsNegotiatedRates) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileTypeGdsNegotiatedRates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileTypeGdsNegotiatedRates(val *ProfileTypeGdsNegotiatedRates) *NullableProfileTypeGdsNegotiatedRates {
	return &NullableProfileTypeGdsNegotiatedRates{value: val, isSet: true}
}

func (v NullableProfileTypeGdsNegotiatedRates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileTypeGdsNegotiatedRates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


