/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the BookingChannelType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookingChannelType{}

// BookingChannelType struct for BookingChannelType
type BookingChannelType struct {
	ChannelCode *string `json:"channelCode,omitempty"`
	ChannelName *string `json:"channelName,omitempty"`
	ChannelType *string `json:"channelType,omitempty"`
}

// NewBookingChannelType instantiates a new BookingChannelType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingChannelType() *BookingChannelType {
	this := BookingChannelType{}
	return &this
}

// NewBookingChannelTypeWithDefaults instantiates a new BookingChannelType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingChannelTypeWithDefaults() *BookingChannelType {
	this := BookingChannelType{}
	return &this
}

// GetChannelCode returns the ChannelCode field value if set, zero value otherwise.
func (o *BookingChannelType) GetChannelCode() string {
	if o == nil || IsNil(o.ChannelCode) {
		var ret string
		return ret
	}
	return *o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelType) GetChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelCode) {
		return nil, false
	}
	return o.ChannelCode, true
}

// HasChannelCode returns a boolean if a field has been set.
func (o *BookingChannelType) HasChannelCode() bool {
	if o != nil && !IsNil(o.ChannelCode) {
		return true
	}

	return false
}

// SetChannelCode gets a reference to the given string and assigns it to the ChannelCode field.
func (o *BookingChannelType) SetChannelCode(v string) {
	o.ChannelCode = &v
}

// GetChannelName returns the ChannelName field value if set, zero value otherwise.
func (o *BookingChannelType) GetChannelName() string {
	if o == nil || IsNil(o.ChannelName) {
		var ret string
		return ret
	}
	return *o.ChannelName
}

// GetChannelNameOk returns a tuple with the ChannelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelType) GetChannelNameOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelName) {
		return nil, false
	}
	return o.ChannelName, true
}

// HasChannelName returns a boolean if a field has been set.
func (o *BookingChannelType) HasChannelName() bool {
	if o != nil && !IsNil(o.ChannelName) {
		return true
	}

	return false
}

// SetChannelName gets a reference to the given string and assigns it to the ChannelName field.
func (o *BookingChannelType) SetChannelName(v string) {
	o.ChannelName = &v
}

// GetChannelType returns the ChannelType field value if set, zero value otherwise.
func (o *BookingChannelType) GetChannelType() string {
	if o == nil || IsNil(o.ChannelType) {
		var ret string
		return ret
	}
	return *o.ChannelType
}

// GetChannelTypeOk returns a tuple with the ChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelType) GetChannelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelType) {
		return nil, false
	}
	return o.ChannelType, true
}

// HasChannelType returns a boolean if a field has been set.
func (o *BookingChannelType) HasChannelType() bool {
	if o != nil && !IsNil(o.ChannelType) {
		return true
	}

	return false
}

// SetChannelType gets a reference to the given string and assigns it to the ChannelType field.
func (o *BookingChannelType) SetChannelType(v string) {
	o.ChannelType = &v
}

func (o BookingChannelType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingChannelType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelCode) {
		toSerialize["channelCode"] = o.ChannelCode
	}
	if !IsNil(o.ChannelName) {
		toSerialize["channelName"] = o.ChannelName
	}
	if !IsNil(o.ChannelType) {
		toSerialize["channelType"] = o.ChannelType
	}
	return toSerialize, nil
}

type NullableBookingChannelType struct {
	value *BookingChannelType
	isSet bool
}

func (v NullableBookingChannelType) Get() *BookingChannelType {
	return v.value
}

func (v *NullableBookingChannelType) Set(val *BookingChannelType) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingChannelType) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingChannelType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingChannelType(val *BookingChannelType) *NullableBookingChannelType {
	return &NullableBookingChannelType{value: val, isSet: true}
}

func (v NullableBookingChannelType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingChannelType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


