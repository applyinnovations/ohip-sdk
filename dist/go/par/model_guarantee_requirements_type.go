/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the GuaranteeRequirementsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuaranteeRequirementsType{}

// GuaranteeRequirementsType Specifies various requirement for the guarantee code.
type GuaranteeRequirementsType struct {
	// Requirement Code.
	RequirementCode *string `json:"requirementCode,omitempty"`
	// When true indicates cancellation on the reservation is required for this guarantee code.
	Cancellation *bool `json:"cancellation,omitempty"`
	// When true indicates phone number on the reservation is required for this guarantee code.
	PhoneNumber *bool `json:"phoneNumber,omitempty"`
	// When true indicates address on the reservation is required for this guarantee code.
	Address *bool `json:"address,omitempty"`
	// When true indicates Credit Card on the reservation is required for this guarantee code.
	CreditCard *bool `json:"creditCard,omitempty"`
	// When true indicates arrival Time on the reservation is required for this guarantee code.
	ArrivalTime *bool `json:"arrivalTime,omitempty"`
	// When true indicates deposit is required for this guarantee code.
	Deposit *bool `json:"deposit,omitempty"`
}

// NewGuaranteeRequirementsType instantiates a new GuaranteeRequirementsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuaranteeRequirementsType() *GuaranteeRequirementsType {
	this := GuaranteeRequirementsType{}
	return &this
}

// NewGuaranteeRequirementsTypeWithDefaults instantiates a new GuaranteeRequirementsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuaranteeRequirementsTypeWithDefaults() *GuaranteeRequirementsType {
	this := GuaranteeRequirementsType{}
	return &this
}

// GetRequirementCode returns the RequirementCode field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetRequirementCode() string {
	if o == nil || IsNil(o.RequirementCode) {
		var ret string
		return ret
	}
	return *o.RequirementCode
}

// GetRequirementCodeOk returns a tuple with the RequirementCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetRequirementCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RequirementCode) {
		return nil, false
	}
	return o.RequirementCode, true
}

// HasRequirementCode returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasRequirementCode() bool {
	if o != nil && !IsNil(o.RequirementCode) {
		return true
	}

	return false
}

// SetRequirementCode gets a reference to the given string and assigns it to the RequirementCode field.
func (o *GuaranteeRequirementsType) SetRequirementCode(v string) {
	o.RequirementCode = &v
}

// GetCancellation returns the Cancellation field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetCancellation() bool {
	if o == nil || IsNil(o.Cancellation) {
		var ret bool
		return ret
	}
	return *o.Cancellation
}

// GetCancellationOk returns a tuple with the Cancellation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetCancellationOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancellation) {
		return nil, false
	}
	return o.Cancellation, true
}

// HasCancellation returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasCancellation() bool {
	if o != nil && !IsNil(o.Cancellation) {
		return true
	}

	return false
}

// SetCancellation gets a reference to the given bool and assigns it to the Cancellation field.
func (o *GuaranteeRequirementsType) SetCancellation(v bool) {
	o.Cancellation = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetPhoneNumber() bool {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret bool
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetPhoneNumberOk() (*bool, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given bool and assigns it to the PhoneNumber field.
func (o *GuaranteeRequirementsType) SetPhoneNumber(v bool) {
	o.PhoneNumber = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetAddress() bool {
	if o == nil || IsNil(o.Address) {
		var ret bool
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given bool and assigns it to the Address field.
func (o *GuaranteeRequirementsType) SetAddress(v bool) {
	o.Address = &v
}

// GetCreditCard returns the CreditCard field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetCreditCard() bool {
	if o == nil || IsNil(o.CreditCard) {
		var ret bool
		return ret
	}
	return *o.CreditCard
}

// GetCreditCardOk returns a tuple with the CreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetCreditCardOk() (*bool, bool) {
	if o == nil || IsNil(o.CreditCard) {
		return nil, false
	}
	return o.CreditCard, true
}

// HasCreditCard returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasCreditCard() bool {
	if o != nil && !IsNil(o.CreditCard) {
		return true
	}

	return false
}

// SetCreditCard gets a reference to the given bool and assigns it to the CreditCard field.
func (o *GuaranteeRequirementsType) SetCreditCard(v bool) {
	o.CreditCard = &v
}

// GetArrivalTime returns the ArrivalTime field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetArrivalTime() bool {
	if o == nil || IsNil(o.ArrivalTime) {
		var ret bool
		return ret
	}
	return *o.ArrivalTime
}

// GetArrivalTimeOk returns a tuple with the ArrivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetArrivalTimeOk() (*bool, bool) {
	if o == nil || IsNil(o.ArrivalTime) {
		return nil, false
	}
	return o.ArrivalTime, true
}

// HasArrivalTime returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasArrivalTime() bool {
	if o != nil && !IsNil(o.ArrivalTime) {
		return true
	}

	return false
}

// SetArrivalTime gets a reference to the given bool and assigns it to the ArrivalTime field.
func (o *GuaranteeRequirementsType) SetArrivalTime(v bool) {
	o.ArrivalTime = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *GuaranteeRequirementsType) GetDeposit() bool {
	if o == nil || IsNil(o.Deposit) {
		var ret bool
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuaranteeRequirementsType) GetDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.Deposit) {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *GuaranteeRequirementsType) HasDeposit() bool {
	if o != nil && !IsNil(o.Deposit) {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given bool and assigns it to the Deposit field.
func (o *GuaranteeRequirementsType) SetDeposit(v bool) {
	o.Deposit = &v
}

func (o GuaranteeRequirementsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuaranteeRequirementsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequirementCode) {
		toSerialize["requirementCode"] = o.RequirementCode
	}
	if !IsNil(o.Cancellation) {
		toSerialize["cancellation"] = o.Cancellation
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CreditCard) {
		toSerialize["creditCard"] = o.CreditCard
	}
	if !IsNil(o.ArrivalTime) {
		toSerialize["arrivalTime"] = o.ArrivalTime
	}
	if !IsNil(o.Deposit) {
		toSerialize["deposit"] = o.Deposit
	}
	return toSerialize, nil
}

type NullableGuaranteeRequirementsType struct {
	value *GuaranteeRequirementsType
	isSet bool
}

func (v NullableGuaranteeRequirementsType) Get() *GuaranteeRequirementsType {
	return v.value
}

func (v *NullableGuaranteeRequirementsType) Set(val *GuaranteeRequirementsType) {
	v.value = val
	v.isSet = true
}

func (v NullableGuaranteeRequirementsType) IsSet() bool {
	return v.isSet
}

func (v *NullableGuaranteeRequirementsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuaranteeRequirementsType(val *GuaranteeRequirementsType) *NullableGuaranteeRequirementsType {
	return &NullableGuaranteeRequirementsType{value: val, isSet: true}
}

func (v NullableGuaranteeRequirementsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuaranteeRequirementsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


