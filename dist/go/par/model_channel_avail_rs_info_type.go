/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the ChannelAvailRSInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAvailRSInfoType{}

// ChannelAvailRSInfoType Channel specific information to be returned in availability response.
type ChannelAvailRSInfoType struct {
	ChannelSummaryInfo *ChannelSummaryInfoType `json:"channelSummaryInfo,omitempty"`
	// Marketing Text like cancel policy, deposit policy etc.
	ChannelMarketingInfo []ChannelMarketingInfoTypeInner `json:"channelMarketingInfo,omitempty"`
}

// NewChannelAvailRSInfoType instantiates a new ChannelAvailRSInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAvailRSInfoType() *ChannelAvailRSInfoType {
	this := ChannelAvailRSInfoType{}
	return &this
}

// NewChannelAvailRSInfoTypeWithDefaults instantiates a new ChannelAvailRSInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAvailRSInfoTypeWithDefaults() *ChannelAvailRSInfoType {
	this := ChannelAvailRSInfoType{}
	return &this
}

// GetChannelSummaryInfo returns the ChannelSummaryInfo field value if set, zero value otherwise.
func (o *ChannelAvailRSInfoType) GetChannelSummaryInfo() ChannelSummaryInfoType {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		var ret ChannelSummaryInfoType
		return ret
	}
	return *o.ChannelSummaryInfo
}

// GetChannelSummaryInfoOk returns a tuple with the ChannelSummaryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAvailRSInfoType) GetChannelSummaryInfoOk() (*ChannelSummaryInfoType, bool) {
	if o == nil || IsNil(o.ChannelSummaryInfo) {
		return nil, false
	}
	return o.ChannelSummaryInfo, true
}

// HasChannelSummaryInfo returns a boolean if a field has been set.
func (o *ChannelAvailRSInfoType) HasChannelSummaryInfo() bool {
	if o != nil && !IsNil(o.ChannelSummaryInfo) {
		return true
	}

	return false
}

// SetChannelSummaryInfo gets a reference to the given ChannelSummaryInfoType and assigns it to the ChannelSummaryInfo field.
func (o *ChannelAvailRSInfoType) SetChannelSummaryInfo(v ChannelSummaryInfoType) {
	o.ChannelSummaryInfo = &v
}

// GetChannelMarketingInfo returns the ChannelMarketingInfo field value if set, zero value otherwise.
func (o *ChannelAvailRSInfoType) GetChannelMarketingInfo() []ChannelMarketingInfoTypeInner {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		var ret []ChannelMarketingInfoTypeInner
		return ret
	}
	return o.ChannelMarketingInfo
}

// GetChannelMarketingInfoOk returns a tuple with the ChannelMarketingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAvailRSInfoType) GetChannelMarketingInfoOk() ([]ChannelMarketingInfoTypeInner, bool) {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		return nil, false
	}
	return o.ChannelMarketingInfo, true
}

// HasChannelMarketingInfo returns a boolean if a field has been set.
func (o *ChannelAvailRSInfoType) HasChannelMarketingInfo() bool {
	if o != nil && !IsNil(o.ChannelMarketingInfo) {
		return true
	}

	return false
}

// SetChannelMarketingInfo gets a reference to the given []ChannelMarketingInfoTypeInner and assigns it to the ChannelMarketingInfo field.
func (o *ChannelAvailRSInfoType) SetChannelMarketingInfo(v []ChannelMarketingInfoTypeInner) {
	o.ChannelMarketingInfo = v
}

func (o ChannelAvailRSInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAvailRSInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelSummaryInfo) {
		toSerialize["channelSummaryInfo"] = o.ChannelSummaryInfo
	}
	if !IsNil(o.ChannelMarketingInfo) {
		toSerialize["channelMarketingInfo"] = o.ChannelMarketingInfo
	}
	return toSerialize, nil
}

type NullableChannelAvailRSInfoType struct {
	value *ChannelAvailRSInfoType
	isSet bool
}

func (v NullableChannelAvailRSInfoType) Get() *ChannelAvailRSInfoType {
	return v.value
}

func (v *NullableChannelAvailRSInfoType) Set(val *ChannelAvailRSInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAvailRSInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAvailRSInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAvailRSInfoType(val *ChannelAvailRSInfoType) *NullableChannelAvailRSInfoType {
	return &NullableChannelAvailRSInfoType{value: val, isSet: true}
}

func (v NullableChannelAvailRSInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAvailRSInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


