/*
OPERA Cloud Price Availability Rate API

APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package par

import (
	"encoding/json"
)

// checks if the ResGuaranteeFetchInstructionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResGuaranteeFetchInstructionsType{}

// ResGuaranteeFetchInstructionsType 
type ResGuaranteeFetchInstructionsType struct {
	// Determines whether estimated amount to be calculated or not
	CalculateEstimateAmount *bool `json:"calculateEstimateAmount,omitempty"`
}

// NewResGuaranteeFetchInstructionsType instantiates a new ResGuaranteeFetchInstructionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResGuaranteeFetchInstructionsType() *ResGuaranteeFetchInstructionsType {
	this := ResGuaranteeFetchInstructionsType{}
	return &this
}

// NewResGuaranteeFetchInstructionsTypeWithDefaults instantiates a new ResGuaranteeFetchInstructionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResGuaranteeFetchInstructionsTypeWithDefaults() *ResGuaranteeFetchInstructionsType {
	this := ResGuaranteeFetchInstructionsType{}
	return &this
}

// GetCalculateEstimateAmount returns the CalculateEstimateAmount field value if set, zero value otherwise.
func (o *ResGuaranteeFetchInstructionsType) GetCalculateEstimateAmount() bool {
	if o == nil || IsNil(o.CalculateEstimateAmount) {
		var ret bool
		return ret
	}
	return *o.CalculateEstimateAmount
}

// GetCalculateEstimateAmountOk returns a tuple with the CalculateEstimateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuaranteeFetchInstructionsType) GetCalculateEstimateAmountOk() (*bool, bool) {
	if o == nil || IsNil(o.CalculateEstimateAmount) {
		return nil, false
	}
	return o.CalculateEstimateAmount, true
}

// HasCalculateEstimateAmount returns a boolean if a field has been set.
func (o *ResGuaranteeFetchInstructionsType) HasCalculateEstimateAmount() bool {
	if o != nil && !IsNil(o.CalculateEstimateAmount) {
		return true
	}

	return false
}

// SetCalculateEstimateAmount gets a reference to the given bool and assigns it to the CalculateEstimateAmount field.
func (o *ResGuaranteeFetchInstructionsType) SetCalculateEstimateAmount(v bool) {
	o.CalculateEstimateAmount = &v
}

func (o ResGuaranteeFetchInstructionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResGuaranteeFetchInstructionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CalculateEstimateAmount) {
		toSerialize["calculateEstimateAmount"] = o.CalculateEstimateAmount
	}
	return toSerialize, nil
}

type NullableResGuaranteeFetchInstructionsType struct {
	value *ResGuaranteeFetchInstructionsType
	isSet bool
}

func (v NullableResGuaranteeFetchInstructionsType) Get() *ResGuaranteeFetchInstructionsType {
	return v.value
}

func (v *NullableResGuaranteeFetchInstructionsType) Set(val *ResGuaranteeFetchInstructionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableResGuaranteeFetchInstructionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableResGuaranteeFetchInstructionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResGuaranteeFetchInstructionsType(val *ResGuaranteeFetchInstructionsType) *NullableResGuaranteeFetchInstructionsType {
	return &NullableResGuaranteeFetchInstructionsType{value: val, isSet: true}
}

func (v NullableResGuaranteeFetchInstructionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResGuaranteeFetchInstructionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


