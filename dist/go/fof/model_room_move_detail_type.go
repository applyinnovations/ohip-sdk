/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomMoveDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomMoveDetailType{}

// RoomMoveDetailType Room move history information.
type RoomMoveDetailType struct {
	// Identifies the hotel code under which room is moved.
	HotelId *string `json:"hotelId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Business date on which room is moved.
	Date *string `json:"date,omitempty"`
	// Identifies the room move reason code.
	ReasonCode *string `json:"reasonCode,omitempty"`
	// Description of why room is moved.
	Description *string `json:"description,omitempty"`
	// Room from which guest is moved.
	FromRoom *string `json:"fromRoom,omitempty"`
	// Room to which guest is moved.
	ToRoom *string `json:"toRoom,omitempty"`
	// The user who moved the guest.
	MovedBy *string `json:"movedBy,omitempty"`
}

// NewRoomMoveDetailType instantiates a new RoomMoveDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomMoveDetailType() *RoomMoveDetailType {
	this := RoomMoveDetailType{}
	return &this
}

// NewRoomMoveDetailTypeWithDefaults instantiates a new RoomMoveDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomMoveDetailTypeWithDefaults() *RoomMoveDetailType {
	this := RoomMoveDetailType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *RoomMoveDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *RoomMoveDetailType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *RoomMoveDetailType) SetDate(v string) {
	o.Date = &v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *RoomMoveDetailType) SetReasonCode(v string) {
	o.ReasonCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoomMoveDetailType) SetDescription(v string) {
	o.Description = &v
}

// GetFromRoom returns the FromRoom field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetFromRoom() string {
	if o == nil || IsNil(o.FromRoom) {
		var ret string
		return ret
	}
	return *o.FromRoom
}

// GetFromRoomOk returns a tuple with the FromRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetFromRoomOk() (*string, bool) {
	if o == nil || IsNil(o.FromRoom) {
		return nil, false
	}
	return o.FromRoom, true
}

// HasFromRoom returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasFromRoom() bool {
	if o != nil && !IsNil(o.FromRoom) {
		return true
	}

	return false
}

// SetFromRoom gets a reference to the given string and assigns it to the FromRoom field.
func (o *RoomMoveDetailType) SetFromRoom(v string) {
	o.FromRoom = &v
}

// GetToRoom returns the ToRoom field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetToRoom() string {
	if o == nil || IsNil(o.ToRoom) {
		var ret string
		return ret
	}
	return *o.ToRoom
}

// GetToRoomOk returns a tuple with the ToRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetToRoomOk() (*string, bool) {
	if o == nil || IsNil(o.ToRoom) {
		return nil, false
	}
	return o.ToRoom, true
}

// HasToRoom returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasToRoom() bool {
	if o != nil && !IsNil(o.ToRoom) {
		return true
	}

	return false
}

// SetToRoom gets a reference to the given string and assigns it to the ToRoom field.
func (o *RoomMoveDetailType) SetToRoom(v string) {
	o.ToRoom = &v
}

// GetMovedBy returns the MovedBy field value if set, zero value otherwise.
func (o *RoomMoveDetailType) GetMovedBy() string {
	if o == nil || IsNil(o.MovedBy) {
		var ret string
		return ret
	}
	return *o.MovedBy
}

// GetMovedByOk returns a tuple with the MovedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomMoveDetailType) GetMovedByOk() (*string, bool) {
	if o == nil || IsNil(o.MovedBy) {
		return nil, false
	}
	return o.MovedBy, true
}

// HasMovedBy returns a boolean if a field has been set.
func (o *RoomMoveDetailType) HasMovedBy() bool {
	if o != nil && !IsNil(o.MovedBy) {
		return true
	}

	return false
}

// SetMovedBy gets a reference to the given string and assigns it to the MovedBy field.
func (o *RoomMoveDetailType) SetMovedBy(v string) {
	o.MovedBy = &v
}

func (o RoomMoveDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomMoveDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["reasonCode"] = o.ReasonCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FromRoom) {
		toSerialize["fromRoom"] = o.FromRoom
	}
	if !IsNil(o.ToRoom) {
		toSerialize["toRoom"] = o.ToRoom
	}
	if !IsNil(o.MovedBy) {
		toSerialize["movedBy"] = o.MovedBy
	}
	return toSerialize, nil
}

type NullableRoomMoveDetailType struct {
	value *RoomMoveDetailType
	isSet bool
}

func (v NullableRoomMoveDetailType) Get() *RoomMoveDetailType {
	return v.value
}

func (v *NullableRoomMoveDetailType) Set(val *RoomMoveDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomMoveDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomMoveDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomMoveDetailType(val *RoomMoveDetailType) *NullableRoomMoveDetailType {
	return &NullableRoomMoveDetailType{value: val, isSet: true}
}

func (v NullableRoomMoveDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomMoveDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


