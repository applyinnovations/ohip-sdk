/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the PaymentMethodsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentMethodsSummaryType{}

// PaymentMethodsSummaryType struct for PaymentMethodsSummaryType
type PaymentMethodsSummaryType struct {
	// Reservations count with payment method established.
	EstablishedCount *string `json:"establishedCount,omitempty"`
	// Reservations count with no payment method established.
	UnestablishedCount *string `json:"unestablishedCount,omitempty"`
}

// NewPaymentMethodsSummaryType instantiates a new PaymentMethodsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodsSummaryType() *PaymentMethodsSummaryType {
	this := PaymentMethodsSummaryType{}
	return &this
}

// NewPaymentMethodsSummaryTypeWithDefaults instantiates a new PaymentMethodsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodsSummaryTypeWithDefaults() *PaymentMethodsSummaryType {
	this := PaymentMethodsSummaryType{}
	return &this
}

// GetEstablishedCount returns the EstablishedCount field value if set, zero value otherwise.
func (o *PaymentMethodsSummaryType) GetEstablishedCount() string {
	if o == nil || IsNil(o.EstablishedCount) {
		var ret string
		return ret
	}
	return *o.EstablishedCount
}

// GetEstablishedCountOk returns a tuple with the EstablishedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodsSummaryType) GetEstablishedCountOk() (*string, bool) {
	if o == nil || IsNil(o.EstablishedCount) {
		return nil, false
	}
	return o.EstablishedCount, true
}

// HasEstablishedCount returns a boolean if a field has been set.
func (o *PaymentMethodsSummaryType) HasEstablishedCount() bool {
	if o != nil && !IsNil(o.EstablishedCount) {
		return true
	}

	return false
}

// SetEstablishedCount gets a reference to the given string and assigns it to the EstablishedCount field.
func (o *PaymentMethodsSummaryType) SetEstablishedCount(v string) {
	o.EstablishedCount = &v
}

// GetUnestablishedCount returns the UnestablishedCount field value if set, zero value otherwise.
func (o *PaymentMethodsSummaryType) GetUnestablishedCount() string {
	if o == nil || IsNil(o.UnestablishedCount) {
		var ret string
		return ret
	}
	return *o.UnestablishedCount
}

// GetUnestablishedCountOk returns a tuple with the UnestablishedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodsSummaryType) GetUnestablishedCountOk() (*string, bool) {
	if o == nil || IsNil(o.UnestablishedCount) {
		return nil, false
	}
	return o.UnestablishedCount, true
}

// HasUnestablishedCount returns a boolean if a field has been set.
func (o *PaymentMethodsSummaryType) HasUnestablishedCount() bool {
	if o != nil && !IsNil(o.UnestablishedCount) {
		return true
	}

	return false
}

// SetUnestablishedCount gets a reference to the given string and assigns it to the UnestablishedCount field.
func (o *PaymentMethodsSummaryType) SetUnestablishedCount(v string) {
	o.UnestablishedCount = &v
}

func (o PaymentMethodsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentMethodsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EstablishedCount) {
		toSerialize["establishedCount"] = o.EstablishedCount
	}
	if !IsNil(o.UnestablishedCount) {
		toSerialize["unestablishedCount"] = o.UnestablishedCount
	}
	return toSerialize, nil
}

type NullablePaymentMethodsSummaryType struct {
	value *PaymentMethodsSummaryType
	isSet bool
}

func (v NullablePaymentMethodsSummaryType) Get() *PaymentMethodsSummaryType {
	return v.value
}

func (v *NullablePaymentMethodsSummaryType) Set(val *PaymentMethodsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodsSummaryType(val *PaymentMethodsSummaryType) *NullablePaymentMethodsSummaryType {
	return &NullablePaymentMethodsSummaryType{value: val, isSet: true}
}

func (v NullablePaymentMethodsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


