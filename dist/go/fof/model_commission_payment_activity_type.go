/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the CommissionPaymentActivityType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionPaymentActivityType{}

// CommissionPaymentActivityType Base type for payment activity information
type CommissionPaymentActivityType struct {
	// Property of the commission record.
	HotelId *string `json:"hotelId,omitempty"`
	BankAccountId *UniqueIDType `json:"bankAccountId,omitempty"`
	BatchId *UniqueIDType `json:"batchId,omitempty"`
	PaymentId *UniqueIDType `json:"paymentId,omitempty"`
	AgentId *UniqueIDType `json:"agentId,omitempty"`
	// Payment date of commission
	PaymentDate *string `json:"paymentDate,omitempty"`
	// Check no of payment.
	CheckNo *float32 `json:"checkNo,omitempty"`
	// File name if payment method is EFT.
	FileName *string `json:"fileName,omitempty"`
	Status *CommissionPaymentActivityStatusType `json:"status,omitempty"`
	// Payee of commission
	Payee *string `json:"payee,omitempty"`
	CommissionAmount *CurrencyAmountType `json:"commissionAmount,omitempty"`
	// Status date of payment activity
	StatusDate *string `json:"statusDate,omitempty"`
	// Whether this payment batch has related commission records. Commission records could be unlinked for check payments when it is reprinted.
	OnCommission *bool `json:"onCommission,omitempty"`
}

// NewCommissionPaymentActivityType instantiates a new CommissionPaymentActivityType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionPaymentActivityType() *CommissionPaymentActivityType {
	this := CommissionPaymentActivityType{}
	return &this
}

// NewCommissionPaymentActivityTypeWithDefaults instantiates a new CommissionPaymentActivityType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionPaymentActivityTypeWithDefaults() *CommissionPaymentActivityType {
	this := CommissionPaymentActivityType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CommissionPaymentActivityType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetBankAccountId() UniqueIDType {
	if o == nil || IsNil(o.BankAccountId) {
		var ret UniqueIDType
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetBankAccountIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given UniqueIDType and assigns it to the BankAccountId field.
func (o *CommissionPaymentActivityType) SetBankAccountId(v UniqueIDType) {
	o.BankAccountId = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetBatchId() UniqueIDType {
	if o == nil || IsNil(o.BatchId) {
		var ret UniqueIDType
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetBatchIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given UniqueIDType and assigns it to the BatchId field.
func (o *CommissionPaymentActivityType) SetBatchId(v UniqueIDType) {
	o.BatchId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetPaymentId() UniqueIDType {
	if o == nil || IsNil(o.PaymentId) {
		var ret UniqueIDType
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetPaymentIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given UniqueIDType and assigns it to the PaymentId field.
func (o *CommissionPaymentActivityType) SetPaymentId(v UniqueIDType) {
	o.PaymentId = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetAgentId() UniqueIDType {
	if o == nil || IsNil(o.AgentId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetAgentIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given UniqueIDType and assigns it to the AgentId field.
func (o *CommissionPaymentActivityType) SetAgentId(v UniqueIDType) {
	o.AgentId = &v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetPaymentDate() string {
	if o == nil || IsNil(o.PaymentDate) {
		var ret string
		return ret
	}
	return *o.PaymentDate
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetPaymentDateOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentDate) {
		return nil, false
	}
	return o.PaymentDate, true
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasPaymentDate() bool {
	if o != nil && !IsNil(o.PaymentDate) {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given string and assigns it to the PaymentDate field.
func (o *CommissionPaymentActivityType) SetPaymentDate(v string) {
	o.PaymentDate = &v
}

// GetCheckNo returns the CheckNo field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetCheckNo() float32 {
	if o == nil || IsNil(o.CheckNo) {
		var ret float32
		return ret
	}
	return *o.CheckNo
}

// GetCheckNoOk returns a tuple with the CheckNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetCheckNoOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckNo) {
		return nil, false
	}
	return o.CheckNo, true
}

// HasCheckNo returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasCheckNo() bool {
	if o != nil && !IsNil(o.CheckNo) {
		return true
	}

	return false
}

// SetCheckNo gets a reference to the given float32 and assigns it to the CheckNo field.
func (o *CommissionPaymentActivityType) SetCheckNo(v float32) {
	o.CheckNo = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *CommissionPaymentActivityType) SetFileName(v string) {
	o.FileName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetStatus() CommissionPaymentActivityStatusType {
	if o == nil || IsNil(o.Status) {
		var ret CommissionPaymentActivityStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetStatusOk() (*CommissionPaymentActivityStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CommissionPaymentActivityStatusType and assigns it to the Status field.
func (o *CommissionPaymentActivityType) SetStatus(v CommissionPaymentActivityStatusType) {
	o.Status = &v
}

// GetPayee returns the Payee field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetPayee() string {
	if o == nil || IsNil(o.Payee) {
		var ret string
		return ret
	}
	return *o.Payee
}

// GetPayeeOk returns a tuple with the Payee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetPayeeOk() (*string, bool) {
	if o == nil || IsNil(o.Payee) {
		return nil, false
	}
	return o.Payee, true
}

// HasPayee returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasPayee() bool {
	if o != nil && !IsNil(o.Payee) {
		return true
	}

	return false
}

// SetPayee gets a reference to the given string and assigns it to the Payee field.
func (o *CommissionPaymentActivityType) SetPayee(v string) {
	o.Payee = &v
}

// GetCommissionAmount returns the CommissionAmount field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetCommissionAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CommissionAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CommissionAmount
}

// GetCommissionAmountOk returns a tuple with the CommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetCommissionAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CommissionAmount) {
		return nil, false
	}
	return o.CommissionAmount, true
}

// HasCommissionAmount returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasCommissionAmount() bool {
	if o != nil && !IsNil(o.CommissionAmount) {
		return true
	}

	return false
}

// SetCommissionAmount gets a reference to the given CurrencyAmountType and assigns it to the CommissionAmount field.
func (o *CommissionPaymentActivityType) SetCommissionAmount(v CurrencyAmountType) {
	o.CommissionAmount = &v
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetStatusDate() string {
	if o == nil || IsNil(o.StatusDate) {
		var ret string
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetStatusDateOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDate) {
		return nil, false
	}
	return o.StatusDate, true
}

// HasStatusDate returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasStatusDate() bool {
	if o != nil && !IsNil(o.StatusDate) {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given string and assigns it to the StatusDate field.
func (o *CommissionPaymentActivityType) SetStatusDate(v string) {
	o.StatusDate = &v
}

// GetOnCommission returns the OnCommission field value if set, zero value otherwise.
func (o *CommissionPaymentActivityType) GetOnCommission() bool {
	if o == nil || IsNil(o.OnCommission) {
		var ret bool
		return ret
	}
	return *o.OnCommission
}

// GetOnCommissionOk returns a tuple with the OnCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionPaymentActivityType) GetOnCommissionOk() (*bool, bool) {
	if o == nil || IsNil(o.OnCommission) {
		return nil, false
	}
	return o.OnCommission, true
}

// HasOnCommission returns a boolean if a field has been set.
func (o *CommissionPaymentActivityType) HasOnCommission() bool {
	if o != nil && !IsNil(o.OnCommission) {
		return true
	}

	return false
}

// SetOnCommission gets a reference to the given bool and assigns it to the OnCommission field.
func (o *CommissionPaymentActivityType) SetOnCommission(v bool) {
	o.OnCommission = &v
}

func (o CommissionPaymentActivityType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionPaymentActivityType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.BankAccountId) {
		toSerialize["bankAccountId"] = o.BankAccountId
	}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	if !IsNil(o.AgentId) {
		toSerialize["agentId"] = o.AgentId
	}
	if !IsNil(o.PaymentDate) {
		toSerialize["paymentDate"] = o.PaymentDate
	}
	if !IsNil(o.CheckNo) {
		toSerialize["checkNo"] = o.CheckNo
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Payee) {
		toSerialize["payee"] = o.Payee
	}
	if !IsNil(o.CommissionAmount) {
		toSerialize["commissionAmount"] = o.CommissionAmount
	}
	if !IsNil(o.StatusDate) {
		toSerialize["statusDate"] = o.StatusDate
	}
	if !IsNil(o.OnCommission) {
		toSerialize["onCommission"] = o.OnCommission
	}
	return toSerialize, nil
}

type NullableCommissionPaymentActivityType struct {
	value *CommissionPaymentActivityType
	isSet bool
}

func (v NullableCommissionPaymentActivityType) Get() *CommissionPaymentActivityType {
	return v.value
}

func (v *NullableCommissionPaymentActivityType) Set(val *CommissionPaymentActivityType) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionPaymentActivityType) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionPaymentActivityType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionPaymentActivityType(val *CommissionPaymentActivityType) *NullableCommissionPaymentActivityType {
	return &NullableCommissionPaymentActivityType{value: val, isSet: true}
}

func (v NullableCommissionPaymentActivityType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionPaymentActivityType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


