/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the WakeUpCallType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WakeUpCallType{}

// WakeUpCallType Criteria to search and retrieve wake up calls.
type WakeUpCallType struct {
	ReservationInfo *WakeUpCallResvInfoType `json:"reservationInfo,omitempty"`
	// Time on which wake up call is set.
	CallTime *string `json:"callTime,omitempty"`
	// Follow up call time.
	FollowUpCallTime *string `json:"followUpCallTime,omitempty"`
	// Is the call type follow up.
	IsFollowUpCall *bool `json:"isFollowUpCall,omitempty"`
	Status *WakeUpCallStatusType `json:"status,omitempty"`
	// Date on which wake up call was processed.
	ProcessedDate *string `json:"processedDate,omitempty"`
	// Time on which wake up call was processed.
	ProcessedTime *string `json:"processedTime,omitempty"`
	// Special instructions for the wake up call.
	Instructions *string `json:"instructions,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
	// New Time on which wake up call is set. Used to change the Followup Call time
	NewCallTime *string `json:"newCallTime,omitempty"`
	// New Follow up call time.Used to change the Followup Call time.
	NewFollowUpCallTime *string `json:"newFollowUpCallTime,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Date an item will be purged from a database (e.g., from a live database to an archive).
	PurgeDate *string `json:"purgeDate,omitempty"`
}

// NewWakeUpCallType instantiates a new WakeUpCallType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWakeUpCallType() *WakeUpCallType {
	this := WakeUpCallType{}
	return &this
}

// NewWakeUpCallTypeWithDefaults instantiates a new WakeUpCallType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWakeUpCallTypeWithDefaults() *WakeUpCallType {
	this := WakeUpCallType{}
	return &this
}

// GetReservationInfo returns the ReservationInfo field value if set, zero value otherwise.
func (o *WakeUpCallType) GetReservationInfo() WakeUpCallResvInfoType {
	if o == nil || IsNil(o.ReservationInfo) {
		var ret WakeUpCallResvInfoType
		return ret
	}
	return *o.ReservationInfo
}

// GetReservationInfoOk returns a tuple with the ReservationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetReservationInfoOk() (*WakeUpCallResvInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfo) {
		return nil, false
	}
	return o.ReservationInfo, true
}

// HasReservationInfo returns a boolean if a field has been set.
func (o *WakeUpCallType) HasReservationInfo() bool {
	if o != nil && !IsNil(o.ReservationInfo) {
		return true
	}

	return false
}

// SetReservationInfo gets a reference to the given WakeUpCallResvInfoType and assigns it to the ReservationInfo field.
func (o *WakeUpCallType) SetReservationInfo(v WakeUpCallResvInfoType) {
	o.ReservationInfo = &v
}

// GetCallTime returns the CallTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetCallTime() string {
	if o == nil || IsNil(o.CallTime) {
		var ret string
		return ret
	}
	return *o.CallTime
}

// GetCallTimeOk returns a tuple with the CallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetCallTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CallTime) {
		return nil, false
	}
	return o.CallTime, true
}

// HasCallTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasCallTime() bool {
	if o != nil && !IsNil(o.CallTime) {
		return true
	}

	return false
}

// SetCallTime gets a reference to the given string and assigns it to the CallTime field.
func (o *WakeUpCallType) SetCallTime(v string) {
	o.CallTime = &v
}

// GetFollowUpCallTime returns the FollowUpCallTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetFollowUpCallTime() string {
	if o == nil || IsNil(o.FollowUpCallTime) {
		var ret string
		return ret
	}
	return *o.FollowUpCallTime
}

// GetFollowUpCallTimeOk returns a tuple with the FollowUpCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetFollowUpCallTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FollowUpCallTime) {
		return nil, false
	}
	return o.FollowUpCallTime, true
}

// HasFollowUpCallTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasFollowUpCallTime() bool {
	if o != nil && !IsNil(o.FollowUpCallTime) {
		return true
	}

	return false
}

// SetFollowUpCallTime gets a reference to the given string and assigns it to the FollowUpCallTime field.
func (o *WakeUpCallType) SetFollowUpCallTime(v string) {
	o.FollowUpCallTime = &v
}

// GetIsFollowUpCall returns the IsFollowUpCall field value if set, zero value otherwise.
func (o *WakeUpCallType) GetIsFollowUpCall() bool {
	if o == nil || IsNil(o.IsFollowUpCall) {
		var ret bool
		return ret
	}
	return *o.IsFollowUpCall
}

// GetIsFollowUpCallOk returns a tuple with the IsFollowUpCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetIsFollowUpCallOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFollowUpCall) {
		return nil, false
	}
	return o.IsFollowUpCall, true
}

// HasIsFollowUpCall returns a boolean if a field has been set.
func (o *WakeUpCallType) HasIsFollowUpCall() bool {
	if o != nil && !IsNil(o.IsFollowUpCall) {
		return true
	}

	return false
}

// SetIsFollowUpCall gets a reference to the given bool and assigns it to the IsFollowUpCall field.
func (o *WakeUpCallType) SetIsFollowUpCall(v bool) {
	o.IsFollowUpCall = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WakeUpCallType) GetStatus() WakeUpCallStatusType {
	if o == nil || IsNil(o.Status) {
		var ret WakeUpCallStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetStatusOk() (*WakeUpCallStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WakeUpCallType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WakeUpCallStatusType and assigns it to the Status field.
func (o *WakeUpCallType) SetStatus(v WakeUpCallStatusType) {
	o.Status = &v
}

// GetProcessedDate returns the ProcessedDate field value if set, zero value otherwise.
func (o *WakeUpCallType) GetProcessedDate() string {
	if o == nil || IsNil(o.ProcessedDate) {
		var ret string
		return ret
	}
	return *o.ProcessedDate
}

// GetProcessedDateOk returns a tuple with the ProcessedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetProcessedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessedDate) {
		return nil, false
	}
	return o.ProcessedDate, true
}

// HasProcessedDate returns a boolean if a field has been set.
func (o *WakeUpCallType) HasProcessedDate() bool {
	if o != nil && !IsNil(o.ProcessedDate) {
		return true
	}

	return false
}

// SetProcessedDate gets a reference to the given string and assigns it to the ProcessedDate field.
func (o *WakeUpCallType) SetProcessedDate(v string) {
	o.ProcessedDate = &v
}

// GetProcessedTime returns the ProcessedTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetProcessedTime() string {
	if o == nil || IsNil(o.ProcessedTime) {
		var ret string
		return ret
	}
	return *o.ProcessedTime
}

// GetProcessedTimeOk returns a tuple with the ProcessedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetProcessedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessedTime) {
		return nil, false
	}
	return o.ProcessedTime, true
}

// HasProcessedTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasProcessedTime() bool {
	if o != nil && !IsNil(o.ProcessedTime) {
		return true
	}

	return false
}

// SetProcessedTime gets a reference to the given string and assigns it to the ProcessedTime field.
func (o *WakeUpCallType) SetProcessedTime(v string) {
	o.ProcessedTime = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *WakeUpCallType) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *WakeUpCallType) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *WakeUpCallType) SetInstructions(v string) {
	o.Instructions = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *WakeUpCallType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *WakeUpCallType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *WakeUpCallType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

// GetNewCallTime returns the NewCallTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetNewCallTime() string {
	if o == nil || IsNil(o.NewCallTime) {
		var ret string
		return ret
	}
	return *o.NewCallTime
}

// GetNewCallTimeOk returns a tuple with the NewCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetNewCallTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NewCallTime) {
		return nil, false
	}
	return o.NewCallTime, true
}

// HasNewCallTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasNewCallTime() bool {
	if o != nil && !IsNil(o.NewCallTime) {
		return true
	}

	return false
}

// SetNewCallTime gets a reference to the given string and assigns it to the NewCallTime field.
func (o *WakeUpCallType) SetNewCallTime(v string) {
	o.NewCallTime = &v
}

// GetNewFollowUpCallTime returns the NewFollowUpCallTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetNewFollowUpCallTime() string {
	if o == nil || IsNil(o.NewFollowUpCallTime) {
		var ret string
		return ret
	}
	return *o.NewFollowUpCallTime
}

// GetNewFollowUpCallTimeOk returns a tuple with the NewFollowUpCallTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetNewFollowUpCallTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NewFollowUpCallTime) {
		return nil, false
	}
	return o.NewFollowUpCallTime, true
}

// HasNewFollowUpCallTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasNewFollowUpCallTime() bool {
	if o != nil && !IsNil(o.NewFollowUpCallTime) {
		return true
	}

	return false
}

// SetNewFollowUpCallTime gets a reference to the given string and assigns it to the NewFollowUpCallTime field.
func (o *WakeUpCallType) SetNewFollowUpCallTime(v string) {
	o.NewFollowUpCallTime = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *WakeUpCallType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *WakeUpCallType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *WakeUpCallType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *WakeUpCallType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *WakeUpCallType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *WakeUpCallType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *WakeUpCallType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *WakeUpCallType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *WakeUpCallType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *WakeUpCallType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetPurgeDate returns the PurgeDate field value if set, zero value otherwise.
func (o *WakeUpCallType) GetPurgeDate() string {
	if o == nil || IsNil(o.PurgeDate) {
		var ret string
		return ret
	}
	return *o.PurgeDate
}

// GetPurgeDateOk returns a tuple with the PurgeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WakeUpCallType) GetPurgeDateOk() (*string, bool) {
	if o == nil || IsNil(o.PurgeDate) {
		return nil, false
	}
	return o.PurgeDate, true
}

// HasPurgeDate returns a boolean if a field has been set.
func (o *WakeUpCallType) HasPurgeDate() bool {
	if o != nil && !IsNil(o.PurgeDate) {
		return true
	}

	return false
}

// SetPurgeDate gets a reference to the given string and assigns it to the PurgeDate field.
func (o *WakeUpCallType) SetPurgeDate(v string) {
	o.PurgeDate = &v
}

func (o WakeUpCallType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WakeUpCallType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationInfo) {
		toSerialize["reservationInfo"] = o.ReservationInfo
	}
	if !IsNil(o.CallTime) {
		toSerialize["callTime"] = o.CallTime
	}
	if !IsNil(o.FollowUpCallTime) {
		toSerialize["followUpCallTime"] = o.FollowUpCallTime
	}
	if !IsNil(o.IsFollowUpCall) {
		toSerialize["isFollowUpCall"] = o.IsFollowUpCall
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ProcessedDate) {
		toSerialize["processedDate"] = o.ProcessedDate
	}
	if !IsNil(o.ProcessedTime) {
		toSerialize["processedTime"] = o.ProcessedTime
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if !IsNil(o.NewCallTime) {
		toSerialize["newCallTime"] = o.NewCallTime
	}
	if !IsNil(o.NewFollowUpCallTime) {
		toSerialize["newFollowUpCallTime"] = o.NewFollowUpCallTime
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.PurgeDate) {
		toSerialize["purgeDate"] = o.PurgeDate
	}
	return toSerialize, nil
}

type NullableWakeUpCallType struct {
	value *WakeUpCallType
	isSet bool
}

func (v NullableWakeUpCallType) Get() *WakeUpCallType {
	return v.value
}

func (v *NullableWakeUpCallType) Set(val *WakeUpCallType) {
	v.value = val
	v.isSet = true
}

func (v NullableWakeUpCallType) IsSet() bool {
	return v.isSet
}

func (v *NullableWakeUpCallType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWakeUpCallType(val *WakeUpCallType) *NullableWakeUpCallType {
	return &NullableWakeUpCallType{value: val, isSet: true}
}

func (v NullableWakeUpCallType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWakeUpCallType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


