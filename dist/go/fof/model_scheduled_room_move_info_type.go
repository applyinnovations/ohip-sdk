/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ScheduledRoomMoveInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledRoomMoveInfoType{}

// ScheduledRoomMoveInfoType Scheduled Room Move information.
type ScheduledRoomMoveInfoType struct {
	MoveStatus *ScheduledRoomMoveStatusType `json:"moveStatus,omitempty"`
	// Comments about scheduled room move.
	MoveComments *string `json:"moveComments,omitempty"`
	MoveInRoomOccupancyInfo *RoomOccupancyType `json:"moveInRoomOccupancyInfo,omitempty"`
	// Estimated Move Time.
	EstimatedMoveTime *string `json:"estimatedMoveTime,omitempty"`
	// Scheduled Move Out Room Id.
	MoveOutRoomId *string `json:"moveOutRoomId,omitempty"`
	// Scheduled Move Out Room Type.
	MoveOutRoomType *string `json:"moveOutRoomType,omitempty"`
}

// NewScheduledRoomMoveInfoType instantiates a new ScheduledRoomMoveInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledRoomMoveInfoType() *ScheduledRoomMoveInfoType {
	this := ScheduledRoomMoveInfoType{}
	return &this
}

// NewScheduledRoomMoveInfoTypeWithDefaults instantiates a new ScheduledRoomMoveInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledRoomMoveInfoTypeWithDefaults() *ScheduledRoomMoveInfoType {
	this := ScheduledRoomMoveInfoType{}
	return &this
}

// GetMoveStatus returns the MoveStatus field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetMoveStatus() ScheduledRoomMoveStatusType {
	if o == nil || IsNil(o.MoveStatus) {
		var ret ScheduledRoomMoveStatusType
		return ret
	}
	return *o.MoveStatus
}

// GetMoveStatusOk returns a tuple with the MoveStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetMoveStatusOk() (*ScheduledRoomMoveStatusType, bool) {
	if o == nil || IsNil(o.MoveStatus) {
		return nil, false
	}
	return o.MoveStatus, true
}

// HasMoveStatus returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasMoveStatus() bool {
	if o != nil && !IsNil(o.MoveStatus) {
		return true
	}

	return false
}

// SetMoveStatus gets a reference to the given ScheduledRoomMoveStatusType and assigns it to the MoveStatus field.
func (o *ScheduledRoomMoveInfoType) SetMoveStatus(v ScheduledRoomMoveStatusType) {
	o.MoveStatus = &v
}

// GetMoveComments returns the MoveComments field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetMoveComments() string {
	if o == nil || IsNil(o.MoveComments) {
		var ret string
		return ret
	}
	return *o.MoveComments
}

// GetMoveCommentsOk returns a tuple with the MoveComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetMoveCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.MoveComments) {
		return nil, false
	}
	return o.MoveComments, true
}

// HasMoveComments returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasMoveComments() bool {
	if o != nil && !IsNil(o.MoveComments) {
		return true
	}

	return false
}

// SetMoveComments gets a reference to the given string and assigns it to the MoveComments field.
func (o *ScheduledRoomMoveInfoType) SetMoveComments(v string) {
	o.MoveComments = &v
}

// GetMoveInRoomOccupancyInfo returns the MoveInRoomOccupancyInfo field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetMoveInRoomOccupancyInfo() RoomOccupancyType {
	if o == nil || IsNil(o.MoveInRoomOccupancyInfo) {
		var ret RoomOccupancyType
		return ret
	}
	return *o.MoveInRoomOccupancyInfo
}

// GetMoveInRoomOccupancyInfoOk returns a tuple with the MoveInRoomOccupancyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetMoveInRoomOccupancyInfoOk() (*RoomOccupancyType, bool) {
	if o == nil || IsNil(o.MoveInRoomOccupancyInfo) {
		return nil, false
	}
	return o.MoveInRoomOccupancyInfo, true
}

// HasMoveInRoomOccupancyInfo returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasMoveInRoomOccupancyInfo() bool {
	if o != nil && !IsNil(o.MoveInRoomOccupancyInfo) {
		return true
	}

	return false
}

// SetMoveInRoomOccupancyInfo gets a reference to the given RoomOccupancyType and assigns it to the MoveInRoomOccupancyInfo field.
func (o *ScheduledRoomMoveInfoType) SetMoveInRoomOccupancyInfo(v RoomOccupancyType) {
	o.MoveInRoomOccupancyInfo = &v
}

// GetEstimatedMoveTime returns the EstimatedMoveTime field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetEstimatedMoveTime() string {
	if o == nil || IsNil(o.EstimatedMoveTime) {
		var ret string
		return ret
	}
	return *o.EstimatedMoveTime
}

// GetEstimatedMoveTimeOk returns a tuple with the EstimatedMoveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetEstimatedMoveTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EstimatedMoveTime) {
		return nil, false
	}
	return o.EstimatedMoveTime, true
}

// HasEstimatedMoveTime returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasEstimatedMoveTime() bool {
	if o != nil && !IsNil(o.EstimatedMoveTime) {
		return true
	}

	return false
}

// SetEstimatedMoveTime gets a reference to the given string and assigns it to the EstimatedMoveTime field.
func (o *ScheduledRoomMoveInfoType) SetEstimatedMoveTime(v string) {
	o.EstimatedMoveTime = &v
}

// GetMoveOutRoomId returns the MoveOutRoomId field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetMoveOutRoomId() string {
	if o == nil || IsNil(o.MoveOutRoomId) {
		var ret string
		return ret
	}
	return *o.MoveOutRoomId
}

// GetMoveOutRoomIdOk returns a tuple with the MoveOutRoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetMoveOutRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.MoveOutRoomId) {
		return nil, false
	}
	return o.MoveOutRoomId, true
}

// HasMoveOutRoomId returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasMoveOutRoomId() bool {
	if o != nil && !IsNil(o.MoveOutRoomId) {
		return true
	}

	return false
}

// SetMoveOutRoomId gets a reference to the given string and assigns it to the MoveOutRoomId field.
func (o *ScheduledRoomMoveInfoType) SetMoveOutRoomId(v string) {
	o.MoveOutRoomId = &v
}

// GetMoveOutRoomType returns the MoveOutRoomType field value if set, zero value otherwise.
func (o *ScheduledRoomMoveInfoType) GetMoveOutRoomType() string {
	if o == nil || IsNil(o.MoveOutRoomType) {
		var ret string
		return ret
	}
	return *o.MoveOutRoomType
}

// GetMoveOutRoomTypeOk returns a tuple with the MoveOutRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRoomMoveInfoType) GetMoveOutRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MoveOutRoomType) {
		return nil, false
	}
	return o.MoveOutRoomType, true
}

// HasMoveOutRoomType returns a boolean if a field has been set.
func (o *ScheduledRoomMoveInfoType) HasMoveOutRoomType() bool {
	if o != nil && !IsNil(o.MoveOutRoomType) {
		return true
	}

	return false
}

// SetMoveOutRoomType gets a reference to the given string and assigns it to the MoveOutRoomType field.
func (o *ScheduledRoomMoveInfoType) SetMoveOutRoomType(v string) {
	o.MoveOutRoomType = &v
}

func (o ScheduledRoomMoveInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledRoomMoveInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MoveStatus) {
		toSerialize["moveStatus"] = o.MoveStatus
	}
	if !IsNil(o.MoveComments) {
		toSerialize["moveComments"] = o.MoveComments
	}
	if !IsNil(o.MoveInRoomOccupancyInfo) {
		toSerialize["moveInRoomOccupancyInfo"] = o.MoveInRoomOccupancyInfo
	}
	if !IsNil(o.EstimatedMoveTime) {
		toSerialize["estimatedMoveTime"] = o.EstimatedMoveTime
	}
	if !IsNil(o.MoveOutRoomId) {
		toSerialize["moveOutRoomId"] = o.MoveOutRoomId
	}
	if !IsNil(o.MoveOutRoomType) {
		toSerialize["moveOutRoomType"] = o.MoveOutRoomType
	}
	return toSerialize, nil
}

type NullableScheduledRoomMoveInfoType struct {
	value *ScheduledRoomMoveInfoType
	isSet bool
}

func (v NullableScheduledRoomMoveInfoType) Get() *ScheduledRoomMoveInfoType {
	return v.value
}

func (v *NullableScheduledRoomMoveInfoType) Set(val *ScheduledRoomMoveInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledRoomMoveInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledRoomMoveInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledRoomMoveInfoType(val *ScheduledRoomMoveInfoType) *NullableScheduledRoomMoveInfoType {
	return &NullableScheduledRoomMoveInfoType{value: val, isSet: true}
}

func (v NullableScheduledRoomMoveInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledRoomMoveInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


