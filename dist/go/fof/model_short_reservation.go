/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ShortReservation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShortReservation{}

// ShortReservation struct for ShortReservation
type ShortReservation struct {
	// Short reservation information response.
	ReservationInfoList []ReservationInfoType `json:"reservationInfoList,omitempty"`
	ReservationsSummary *ReservationsSummaryType `json:"reservationsSummary,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewShortReservation instantiates a new ShortReservation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShortReservation() *ShortReservation {
	this := ShortReservation{}
	return &this
}

// NewShortReservationWithDefaults instantiates a new ShortReservation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShortReservationWithDefaults() *ShortReservation {
	this := ShortReservation{}
	return &this
}

// GetReservationInfoList returns the ReservationInfoList field value if set, zero value otherwise.
func (o *ShortReservation) GetReservationInfoList() []ReservationInfoType {
	if o == nil || IsNil(o.ReservationInfoList) {
		var ret []ReservationInfoType
		return ret
	}
	return o.ReservationInfoList
}

// GetReservationInfoListOk returns a tuple with the ReservationInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortReservation) GetReservationInfoListOk() ([]ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfoList) {
		return nil, false
	}
	return o.ReservationInfoList, true
}

// HasReservationInfoList returns a boolean if a field has been set.
func (o *ShortReservation) HasReservationInfoList() bool {
	if o != nil && !IsNil(o.ReservationInfoList) {
		return true
	}

	return false
}

// SetReservationInfoList gets a reference to the given []ReservationInfoType and assigns it to the ReservationInfoList field.
func (o *ShortReservation) SetReservationInfoList(v []ReservationInfoType) {
	o.ReservationInfoList = v
}

// GetReservationsSummary returns the ReservationsSummary field value if set, zero value otherwise.
func (o *ShortReservation) GetReservationsSummary() ReservationsSummaryType {
	if o == nil || IsNil(o.ReservationsSummary) {
		var ret ReservationsSummaryType
		return ret
	}
	return *o.ReservationsSummary
}

// GetReservationsSummaryOk returns a tuple with the ReservationsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortReservation) GetReservationsSummaryOk() (*ReservationsSummaryType, bool) {
	if o == nil || IsNil(o.ReservationsSummary) {
		return nil, false
	}
	return o.ReservationsSummary, true
}

// HasReservationsSummary returns a boolean if a field has been set.
func (o *ShortReservation) HasReservationsSummary() bool {
	if o != nil && !IsNil(o.ReservationsSummary) {
		return true
	}

	return false
}

// SetReservationsSummary gets a reference to the given ReservationsSummaryType and assigns it to the ReservationsSummary field.
func (o *ShortReservation) SetReservationsSummary(v ReservationsSummaryType) {
	o.ReservationsSummary = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ShortReservation) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortReservation) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ShortReservation) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *ShortReservation) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ShortReservation) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortReservation) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ShortReservation) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ShortReservation) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ShortReservation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShortReservation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationInfoList) {
		toSerialize["reservationInfoList"] = o.ReservationInfoList
	}
	if !IsNil(o.ReservationsSummary) {
		toSerialize["reservationsSummary"] = o.ReservationsSummary
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableShortReservation struct {
	value *ShortReservation
	isSet bool
}

func (v NullableShortReservation) Get() *ShortReservation {
	return v.value
}

func (v *NullableShortReservation) Set(val *ShortReservation) {
	v.value = val
	v.isSet = true
}

func (v NullableShortReservation) IsSet() bool {
	return v.isSet
}

func (v *NullableShortReservation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShortReservation(val *ShortReservation) *NullableShortReservation {
	return &NullableShortReservation{value: val, isSet: true}
}

func (v NullableShortReservation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShortReservation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


