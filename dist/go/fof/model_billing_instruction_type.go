/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the BillingInstructionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingInstructionType{}

// BillingInstructionType Configured Billing Instruction which represents a set of Transaction Codes.
type BillingInstructionType struct {
	// Unique identifier for the Billing Instruction.
	BillingCode *string `json:"billingCode,omitempty"`
	// Billing Instruction code description.
	Desc *string `json:"desc,omitempty"`
	// Hotel context of the Billing Instruction.
	HotelId *string `json:"hotelId,omitempty"`
	// This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.
	RoutingInstructionsId *float32 `json:"routingInstructionsId,omitempty"`
}

// NewBillingInstructionType instantiates a new BillingInstructionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingInstructionType() *BillingInstructionType {
	this := BillingInstructionType{}
	return &this
}

// NewBillingInstructionTypeWithDefaults instantiates a new BillingInstructionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingInstructionTypeWithDefaults() *BillingInstructionType {
	this := BillingInstructionType{}
	return &this
}

// GetBillingCode returns the BillingCode field value if set, zero value otherwise.
func (o *BillingInstructionType) GetBillingCode() string {
	if o == nil || IsNil(o.BillingCode) {
		var ret string
		return ret
	}
	return *o.BillingCode
}

// GetBillingCodeOk returns a tuple with the BillingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInstructionType) GetBillingCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BillingCode) {
		return nil, false
	}
	return o.BillingCode, true
}

// HasBillingCode returns a boolean if a field has been set.
func (o *BillingInstructionType) HasBillingCode() bool {
	if o != nil && !IsNil(o.BillingCode) {
		return true
	}

	return false
}

// SetBillingCode gets a reference to the given string and assigns it to the BillingCode field.
func (o *BillingInstructionType) SetBillingCode(v string) {
	o.BillingCode = &v
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *BillingInstructionType) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInstructionType) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *BillingInstructionType) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *BillingInstructionType) SetDesc(v string) {
	o.Desc = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *BillingInstructionType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInstructionType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *BillingInstructionType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *BillingInstructionType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRoutingInstructionsId returns the RoutingInstructionsId field value if set, zero value otherwise.
func (o *BillingInstructionType) GetRoutingInstructionsId() float32 {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		var ret float32
		return ret
	}
	return *o.RoutingInstructionsId
}

// GetRoutingInstructionsIdOk returns a tuple with the RoutingInstructionsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInstructionType) GetRoutingInstructionsIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		return nil, false
	}
	return o.RoutingInstructionsId, true
}

// HasRoutingInstructionsId returns a boolean if a field has been set.
func (o *BillingInstructionType) HasRoutingInstructionsId() bool {
	if o != nil && !IsNil(o.RoutingInstructionsId) {
		return true
	}

	return false
}

// SetRoutingInstructionsId gets a reference to the given float32 and assigns it to the RoutingInstructionsId field.
func (o *BillingInstructionType) SetRoutingInstructionsId(v float32) {
	o.RoutingInstructionsId = &v
}

func (o BillingInstructionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingInstructionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingCode) {
		toSerialize["billingCode"] = o.BillingCode
	}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RoutingInstructionsId) {
		toSerialize["routingInstructionsId"] = o.RoutingInstructionsId
	}
	return toSerialize, nil
}

type NullableBillingInstructionType struct {
	value *BillingInstructionType
	isSet bool
}

func (v NullableBillingInstructionType) Get() *BillingInstructionType {
	return v.value
}

func (v *NullableBillingInstructionType) Set(val *BillingInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingInstructionType(val *BillingInstructionType) *NullableBillingInstructionType {
	return &NullableBillingInstructionType{value: val, isSet: true}
}

func (v NullableBillingInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


