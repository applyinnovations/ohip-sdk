/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the CommissionProcessingInstructionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionProcessingInstructionsType{}

// CommissionProcessingInstructionsType Type for commission process instruction. Possible instruction types are on hold and offset AR.
type CommissionProcessingInstructionsType struct {
	OnHold *CodeDescriptionType `json:"onHold,omitempty"`
	// When set to true, commission agent and/or its associated reservation will be released from commission processing.
	Release *bool `json:"release,omitempty"`
	// When set to true, commission agent and/or its associated reservation will be flagged to offset Account Receivable.
	OffsetAR *bool `json:"offsetAR,omitempty"`
}

// NewCommissionProcessingInstructionsType instantiates a new CommissionProcessingInstructionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionProcessingInstructionsType() *CommissionProcessingInstructionsType {
	this := CommissionProcessingInstructionsType{}
	return &this
}

// NewCommissionProcessingInstructionsTypeWithDefaults instantiates a new CommissionProcessingInstructionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionProcessingInstructionsTypeWithDefaults() *CommissionProcessingInstructionsType {
	this := CommissionProcessingInstructionsType{}
	return &this
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *CommissionProcessingInstructionsType) GetOnHold() CodeDescriptionType {
	if o == nil || IsNil(o.OnHold) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionProcessingInstructionsType) GetOnHoldOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *CommissionProcessingInstructionsType) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given CodeDescriptionType and assigns it to the OnHold field.
func (o *CommissionProcessingInstructionsType) SetOnHold(v CodeDescriptionType) {
	o.OnHold = &v
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *CommissionProcessingInstructionsType) GetRelease() bool {
	if o == nil || IsNil(o.Release) {
		var ret bool
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionProcessingInstructionsType) GetReleaseOk() (*bool, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *CommissionProcessingInstructionsType) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given bool and assigns it to the Release field.
func (o *CommissionProcessingInstructionsType) SetRelease(v bool) {
	o.Release = &v
}

// GetOffsetAR returns the OffsetAR field value if set, zero value otherwise.
func (o *CommissionProcessingInstructionsType) GetOffsetAR() bool {
	if o == nil || IsNil(o.OffsetAR) {
		var ret bool
		return ret
	}
	return *o.OffsetAR
}

// GetOffsetAROk returns a tuple with the OffsetAR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionProcessingInstructionsType) GetOffsetAROk() (*bool, bool) {
	if o == nil || IsNil(o.OffsetAR) {
		return nil, false
	}
	return o.OffsetAR, true
}

// HasOffsetAR returns a boolean if a field has been set.
func (o *CommissionProcessingInstructionsType) HasOffsetAR() bool {
	if o != nil && !IsNil(o.OffsetAR) {
		return true
	}

	return false
}

// SetOffsetAR gets a reference to the given bool and assigns it to the OffsetAR field.
func (o *CommissionProcessingInstructionsType) SetOffsetAR(v bool) {
	o.OffsetAR = &v
}

func (o CommissionProcessingInstructionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionProcessingInstructionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnHold) {
		toSerialize["onHold"] = o.OnHold
	}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.OffsetAR) {
		toSerialize["offsetAR"] = o.OffsetAR
	}
	return toSerialize, nil
}

type NullableCommissionProcessingInstructionsType struct {
	value *CommissionProcessingInstructionsType
	isSet bool
}

func (v NullableCommissionProcessingInstructionsType) Get() *CommissionProcessingInstructionsType {
	return v.value
}

func (v *NullableCommissionProcessingInstructionsType) Set(val *CommissionProcessingInstructionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionProcessingInstructionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionProcessingInstructionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionProcessingInstructionsType(val *CommissionProcessingInstructionsType) *NullableCommissionProcessingInstructionsType {
	return &NullableCommissionProcessingInstructionsType{value: val, isSet: true}
}

func (v NullableCommissionProcessingInstructionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionProcessingInstructionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


