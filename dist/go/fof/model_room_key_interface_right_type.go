/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomKeyInterfaceRightType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomKeyInterfaceRightType{}

// RoomKeyInterfaceRightType struct for RoomKeyInterfaceRightType
type RoomKeyInterfaceRightType struct {
	Description *string `json:"description,omitempty"`
	Right *int32 `json:"right,omitempty"`
	RightsCode *string `json:"rightsCode,omitempty"`
}

// NewRoomKeyInterfaceRightType instantiates a new RoomKeyInterfaceRightType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomKeyInterfaceRightType() *RoomKeyInterfaceRightType {
	this := RoomKeyInterfaceRightType{}
	return &this
}

// NewRoomKeyInterfaceRightTypeWithDefaults instantiates a new RoomKeyInterfaceRightType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomKeyInterfaceRightTypeWithDefaults() *RoomKeyInterfaceRightType {
	this := RoomKeyInterfaceRightType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoomKeyInterfaceRightType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyInterfaceRightType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoomKeyInterfaceRightType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoomKeyInterfaceRightType) SetDescription(v string) {
	o.Description = &v
}

// GetRight returns the Right field value if set, zero value otherwise.
func (o *RoomKeyInterfaceRightType) GetRight() int32 {
	if o == nil || IsNil(o.Right) {
		var ret int32
		return ret
	}
	return *o.Right
}

// GetRightOk returns a tuple with the Right field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyInterfaceRightType) GetRightOk() (*int32, bool) {
	if o == nil || IsNil(o.Right) {
		return nil, false
	}
	return o.Right, true
}

// HasRight returns a boolean if a field has been set.
func (o *RoomKeyInterfaceRightType) HasRight() bool {
	if o != nil && !IsNil(o.Right) {
		return true
	}

	return false
}

// SetRight gets a reference to the given int32 and assigns it to the Right field.
func (o *RoomKeyInterfaceRightType) SetRight(v int32) {
	o.Right = &v
}

// GetRightsCode returns the RightsCode field value if set, zero value otherwise.
func (o *RoomKeyInterfaceRightType) GetRightsCode() string {
	if o == nil || IsNil(o.RightsCode) {
		var ret string
		return ret
	}
	return *o.RightsCode
}

// GetRightsCodeOk returns a tuple with the RightsCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyInterfaceRightType) GetRightsCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RightsCode) {
		return nil, false
	}
	return o.RightsCode, true
}

// HasRightsCode returns a boolean if a field has been set.
func (o *RoomKeyInterfaceRightType) HasRightsCode() bool {
	if o != nil && !IsNil(o.RightsCode) {
		return true
	}

	return false
}

// SetRightsCode gets a reference to the given string and assigns it to the RightsCode field.
func (o *RoomKeyInterfaceRightType) SetRightsCode(v string) {
	o.RightsCode = &v
}

func (o RoomKeyInterfaceRightType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomKeyInterfaceRightType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Right) {
		toSerialize["right"] = o.Right
	}
	if !IsNil(o.RightsCode) {
		toSerialize["rightsCode"] = o.RightsCode
	}
	return toSerialize, nil
}

type NullableRoomKeyInterfaceRightType struct {
	value *RoomKeyInterfaceRightType
	isSet bool
}

func (v NullableRoomKeyInterfaceRightType) Get() *RoomKeyInterfaceRightType {
	return v.value
}

func (v *NullableRoomKeyInterfaceRightType) Set(val *RoomKeyInterfaceRightType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomKeyInterfaceRightType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomKeyInterfaceRightType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomKeyInterfaceRightType(val *RoomKeyInterfaceRightType) *NullableRoomKeyInterfaceRightType {
	return &NullableRoomKeyInterfaceRightType{value: val, isSet: true}
}

func (v NullableRoomKeyInterfaceRightType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomKeyInterfaceRightType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


