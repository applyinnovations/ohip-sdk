/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomKeyStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomKeyStatus{}

// RoomKeyStatus Respose for the reading of room key.
type RoomKeyStatus struct {
	GuestDepartureDate *DateRangeType `json:"guestDepartureDate,omitempty"`
	GuestDepartureTime *DateTimeRangeType `json:"guestDepartureTime,omitempty"`
	GuestFirstName *string `json:"guestFirstName,omitempty"`
	GuestLastName *string `json:"guestLastName,omitempty"`
	KeyOptions *string `json:"keyOptions,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	Room *string `json:"room,omitempty"`
	ValidUntil *string `json:"validUntil,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewRoomKeyStatus instantiates a new RoomKeyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomKeyStatus() *RoomKeyStatus {
	this := RoomKeyStatus{}
	return &this
}

// NewRoomKeyStatusWithDefaults instantiates a new RoomKeyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomKeyStatusWithDefaults() *RoomKeyStatus {
	this := RoomKeyStatus{}
	return &this
}

// GetGuestDepartureDate returns the GuestDepartureDate field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetGuestDepartureDate() DateRangeType {
	if o == nil || IsNil(o.GuestDepartureDate) {
		var ret DateRangeType
		return ret
	}
	return *o.GuestDepartureDate
}

// GetGuestDepartureDateOk returns a tuple with the GuestDepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetGuestDepartureDateOk() (*DateRangeType, bool) {
	if o == nil || IsNil(o.GuestDepartureDate) {
		return nil, false
	}
	return o.GuestDepartureDate, true
}

// HasGuestDepartureDate returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasGuestDepartureDate() bool {
	if o != nil && !IsNil(o.GuestDepartureDate) {
		return true
	}

	return false
}

// SetGuestDepartureDate gets a reference to the given DateRangeType and assigns it to the GuestDepartureDate field.
func (o *RoomKeyStatus) SetGuestDepartureDate(v DateRangeType) {
	o.GuestDepartureDate = &v
}

// GetGuestDepartureTime returns the GuestDepartureTime field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetGuestDepartureTime() DateTimeRangeType {
	if o == nil || IsNil(o.GuestDepartureTime) {
		var ret DateTimeRangeType
		return ret
	}
	return *o.GuestDepartureTime
}

// GetGuestDepartureTimeOk returns a tuple with the GuestDepartureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetGuestDepartureTimeOk() (*DateTimeRangeType, bool) {
	if o == nil || IsNil(o.GuestDepartureTime) {
		return nil, false
	}
	return o.GuestDepartureTime, true
}

// HasGuestDepartureTime returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasGuestDepartureTime() bool {
	if o != nil && !IsNil(o.GuestDepartureTime) {
		return true
	}

	return false
}

// SetGuestDepartureTime gets a reference to the given DateTimeRangeType and assigns it to the GuestDepartureTime field.
func (o *RoomKeyStatus) SetGuestDepartureTime(v DateTimeRangeType) {
	o.GuestDepartureTime = &v
}

// GetGuestFirstName returns the GuestFirstName field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetGuestFirstName() string {
	if o == nil || IsNil(o.GuestFirstName) {
		var ret string
		return ret
	}
	return *o.GuestFirstName
}

// GetGuestFirstNameOk returns a tuple with the GuestFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetGuestFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFirstName) {
		return nil, false
	}
	return o.GuestFirstName, true
}

// HasGuestFirstName returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasGuestFirstName() bool {
	if o != nil && !IsNil(o.GuestFirstName) {
		return true
	}

	return false
}

// SetGuestFirstName gets a reference to the given string and assigns it to the GuestFirstName field.
func (o *RoomKeyStatus) SetGuestFirstName(v string) {
	o.GuestFirstName = &v
}

// GetGuestLastName returns the GuestLastName field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetGuestLastName() string {
	if o == nil || IsNil(o.GuestLastName) {
		var ret string
		return ret
	}
	return *o.GuestLastName
}

// GetGuestLastNameOk returns a tuple with the GuestLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetGuestLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestLastName) {
		return nil, false
	}
	return o.GuestLastName, true
}

// HasGuestLastName returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasGuestLastName() bool {
	if o != nil && !IsNil(o.GuestLastName) {
		return true
	}

	return false
}

// SetGuestLastName gets a reference to the given string and assigns it to the GuestLastName field.
func (o *RoomKeyStatus) SetGuestLastName(v string) {
	o.GuestLastName = &v
}

// GetKeyOptions returns the KeyOptions field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetKeyOptions() string {
	if o == nil || IsNil(o.KeyOptions) {
		var ret string
		return ret
	}
	return *o.KeyOptions
}

// GetKeyOptionsOk returns a tuple with the KeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetKeyOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.KeyOptions) {
		return nil, false
	}
	return o.KeyOptions, true
}

// HasKeyOptions returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasKeyOptions() bool {
	if o != nil && !IsNil(o.KeyOptions) {
		return true
	}

	return false
}

// SetKeyOptions gets a reference to the given string and assigns it to the KeyOptions field.
func (o *RoomKeyStatus) SetKeyOptions(v string) {
	o.KeyOptions = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *RoomKeyStatus) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetRoom() string {
	if o == nil || IsNil(o.Room) {
		var ret string
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetRoomOk() (*string, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given string and assigns it to the Room field.
func (o *RoomKeyStatus) SetRoom(v string) {
	o.Room = &v
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetValidUntil() string {
	if o == nil || IsNil(o.ValidUntil) {
		var ret string
		return ret
	}
	return *o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetValidUntilOk() (*string, bool) {
	if o == nil || IsNil(o.ValidUntil) {
		return nil, false
	}
	return o.ValidUntil, true
}

// HasValidUntil returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasValidUntil() bool {
	if o != nil && !IsNil(o.ValidUntil) {
		return true
	}

	return false
}

// SetValidUntil gets a reference to the given string and assigns it to the ValidUntil field.
func (o *RoomKeyStatus) SetValidUntil(v string) {
	o.ValidUntil = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *RoomKeyStatus) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyStatus) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *RoomKeyStatus) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *RoomKeyStatus) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o RoomKeyStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomKeyStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuestDepartureDate) {
		toSerialize["guestDepartureDate"] = o.GuestDepartureDate
	}
	if !IsNil(o.GuestDepartureTime) {
		toSerialize["guestDepartureTime"] = o.GuestDepartureTime
	}
	if !IsNil(o.GuestFirstName) {
		toSerialize["guestFirstName"] = o.GuestFirstName
	}
	if !IsNil(o.GuestLastName) {
		toSerialize["guestLastName"] = o.GuestLastName
	}
	if !IsNil(o.KeyOptions) {
		toSerialize["keyOptions"] = o.KeyOptions
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	if !IsNil(o.ValidUntil) {
		toSerialize["validUntil"] = o.ValidUntil
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableRoomKeyStatus struct {
	value *RoomKeyStatus
	isSet bool
}

func (v NullableRoomKeyStatus) Get() *RoomKeyStatus {
	return v.value
}

func (v *NullableRoomKeyStatus) Set(val *RoomKeyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomKeyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomKeyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomKeyStatus(val *RoomKeyStatus) *NullableRoomKeyStatus {
	return &NullableRoomKeyStatus{value: val, isSet: true}
}

func (v NullableRoomKeyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomKeyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


