/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the KeyOptionsInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyOptionsInfoType{}

// KeyOptionsInfoType Response of fetch keyOptions operation.
type KeyOptionsInfoType struct {
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	// Key option preferences currently attached to a profile associated with the reservation.
	ProfileKeyOptions []ProfileKeyOptionsType `json:"profileKeyOptions,omitempty"`
	// Key option preferences currently attached to the reservation.
	ReservationKeyOptions *string `json:"reservationKeyOptions,omitempty"`
	// Key option preferences currently attached to the room assigned to the reservation.
	RoomKeyOptions *string `json:"roomKeyOptions,omitempty"`
}

// NewKeyOptionsInfoType instantiates a new KeyOptionsInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyOptionsInfoType() *KeyOptionsInfoType {
	this := KeyOptionsInfoType{}
	return &this
}

// NewKeyOptionsInfoTypeWithDefaults instantiates a new KeyOptionsInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyOptionsInfoTypeWithDefaults() *KeyOptionsInfoType {
	this := KeyOptionsInfoType{}
	return &this
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *KeyOptionsInfoType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyOptionsInfoType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *KeyOptionsInfoType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *KeyOptionsInfoType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetProfileKeyOptions returns the ProfileKeyOptions field value if set, zero value otherwise.
func (o *KeyOptionsInfoType) GetProfileKeyOptions() []ProfileKeyOptionsType {
	if o == nil || IsNil(o.ProfileKeyOptions) {
		var ret []ProfileKeyOptionsType
		return ret
	}
	return o.ProfileKeyOptions
}

// GetProfileKeyOptionsOk returns a tuple with the ProfileKeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyOptionsInfoType) GetProfileKeyOptionsOk() ([]ProfileKeyOptionsType, bool) {
	if o == nil || IsNil(o.ProfileKeyOptions) {
		return nil, false
	}
	return o.ProfileKeyOptions, true
}

// HasProfileKeyOptions returns a boolean if a field has been set.
func (o *KeyOptionsInfoType) HasProfileKeyOptions() bool {
	if o != nil && !IsNil(o.ProfileKeyOptions) {
		return true
	}

	return false
}

// SetProfileKeyOptions gets a reference to the given []ProfileKeyOptionsType and assigns it to the ProfileKeyOptions field.
func (o *KeyOptionsInfoType) SetProfileKeyOptions(v []ProfileKeyOptionsType) {
	o.ProfileKeyOptions = v
}

// GetReservationKeyOptions returns the ReservationKeyOptions field value if set, zero value otherwise.
func (o *KeyOptionsInfoType) GetReservationKeyOptions() string {
	if o == nil || IsNil(o.ReservationKeyOptions) {
		var ret string
		return ret
	}
	return *o.ReservationKeyOptions
}

// GetReservationKeyOptionsOk returns a tuple with the ReservationKeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyOptionsInfoType) GetReservationKeyOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationKeyOptions) {
		return nil, false
	}
	return o.ReservationKeyOptions, true
}

// HasReservationKeyOptions returns a boolean if a field has been set.
func (o *KeyOptionsInfoType) HasReservationKeyOptions() bool {
	if o != nil && !IsNil(o.ReservationKeyOptions) {
		return true
	}

	return false
}

// SetReservationKeyOptions gets a reference to the given string and assigns it to the ReservationKeyOptions field.
func (o *KeyOptionsInfoType) SetReservationKeyOptions(v string) {
	o.ReservationKeyOptions = &v
}

// GetRoomKeyOptions returns the RoomKeyOptions field value if set, zero value otherwise.
func (o *KeyOptionsInfoType) GetRoomKeyOptions() string {
	if o == nil || IsNil(o.RoomKeyOptions) {
		var ret string
		return ret
	}
	return *o.RoomKeyOptions
}

// GetRoomKeyOptionsOk returns a tuple with the RoomKeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyOptionsInfoType) GetRoomKeyOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.RoomKeyOptions) {
		return nil, false
	}
	return o.RoomKeyOptions, true
}

// HasRoomKeyOptions returns a boolean if a field has been set.
func (o *KeyOptionsInfoType) HasRoomKeyOptions() bool {
	if o != nil && !IsNil(o.RoomKeyOptions) {
		return true
	}

	return false
}

// SetRoomKeyOptions gets a reference to the given string and assigns it to the RoomKeyOptions field.
func (o *KeyOptionsInfoType) SetRoomKeyOptions(v string) {
	o.RoomKeyOptions = &v
}

func (o KeyOptionsInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyOptionsInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ProfileKeyOptions) {
		toSerialize["profileKeyOptions"] = o.ProfileKeyOptions
	}
	if !IsNil(o.ReservationKeyOptions) {
		toSerialize["reservationKeyOptions"] = o.ReservationKeyOptions
	}
	if !IsNil(o.RoomKeyOptions) {
		toSerialize["roomKeyOptions"] = o.RoomKeyOptions
	}
	return toSerialize, nil
}

type NullableKeyOptionsInfoType struct {
	value *KeyOptionsInfoType
	isSet bool
}

func (v NullableKeyOptionsInfoType) Get() *KeyOptionsInfoType {
	return v.value
}

func (v *NullableKeyOptionsInfoType) Set(val *KeyOptionsInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyOptionsInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyOptionsInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyOptionsInfoType(val *KeyOptionsInfoType) *NullableKeyOptionsInfoType {
	return &NullableKeyOptionsInfoType{value: val, isSet: true}
}

func (v NullableKeyOptionsInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyOptionsInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


