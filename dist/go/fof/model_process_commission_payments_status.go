/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ProcessCommissionPaymentsStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessCommissionPaymentsStatus{}

// ProcessCommissionPaymentsStatus Response type for processing commission payments.
type ProcessCommissionPaymentsStatus struct {
	Links []InstanceLink `json:"links,omitempty"`
	PaymentReport *CommissionPaymentReportType `json:"paymentReport,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewProcessCommissionPaymentsStatus instantiates a new ProcessCommissionPaymentsStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessCommissionPaymentsStatus() *ProcessCommissionPaymentsStatus {
	this := ProcessCommissionPaymentsStatus{}
	return &this
}

// NewProcessCommissionPaymentsStatusWithDefaults instantiates a new ProcessCommissionPaymentsStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessCommissionPaymentsStatusWithDefaults() *ProcessCommissionPaymentsStatus {
	this := ProcessCommissionPaymentsStatus{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ProcessCommissionPaymentsStatus) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessCommissionPaymentsStatus) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ProcessCommissionPaymentsStatus) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *ProcessCommissionPaymentsStatus) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetPaymentReport returns the PaymentReport field value if set, zero value otherwise.
func (o *ProcessCommissionPaymentsStatus) GetPaymentReport() CommissionPaymentReportType {
	if o == nil || IsNil(o.PaymentReport) {
		var ret CommissionPaymentReportType
		return ret
	}
	return *o.PaymentReport
}

// GetPaymentReportOk returns a tuple with the PaymentReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessCommissionPaymentsStatus) GetPaymentReportOk() (*CommissionPaymentReportType, bool) {
	if o == nil || IsNil(o.PaymentReport) {
		return nil, false
	}
	return o.PaymentReport, true
}

// HasPaymentReport returns a boolean if a field has been set.
func (o *ProcessCommissionPaymentsStatus) HasPaymentReport() bool {
	if o != nil && !IsNil(o.PaymentReport) {
		return true
	}

	return false
}

// SetPaymentReport gets a reference to the given CommissionPaymentReportType and assigns it to the PaymentReport field.
func (o *ProcessCommissionPaymentsStatus) SetPaymentReport(v CommissionPaymentReportType) {
	o.PaymentReport = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ProcessCommissionPaymentsStatus) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessCommissionPaymentsStatus) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ProcessCommissionPaymentsStatus) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *ProcessCommissionPaymentsStatus) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o ProcessCommissionPaymentsStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessCommissionPaymentsStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.PaymentReport) {
		toSerialize["paymentReport"] = o.PaymentReport
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableProcessCommissionPaymentsStatus struct {
	value *ProcessCommissionPaymentsStatus
	isSet bool
}

func (v NullableProcessCommissionPaymentsStatus) Get() *ProcessCommissionPaymentsStatus {
	return v.value
}

func (v *NullableProcessCommissionPaymentsStatus) Set(val *ProcessCommissionPaymentsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessCommissionPaymentsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessCommissionPaymentsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessCommissionPaymentsStatus(val *ProcessCommissionPaymentsStatus) *NullableProcessCommissionPaymentsStatus {
	return &NullableProcessCommissionPaymentsStatus{value: val, isSet: true}
}

func (v NullableProcessCommissionPaymentsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessCommissionPaymentsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


