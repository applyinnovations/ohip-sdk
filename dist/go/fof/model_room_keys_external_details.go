/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
	"fmt"
)

// checks if the RoomKeysExternalDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomKeysExternalDetails{}

// RoomKeysExternalDetails Response for the key request made to DLS from OPERA Cloud.
type RoomKeysExternalDetails struct {
	// Unique Id as defined by Door Lock System.
	EncoderId *string `json:"encoderId,omitempty"`
	// The Unique PMS encoder name linked with the encoderId
	EncoderTerminal string `json:"encoderTerminal"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// The PMS room number to generate a key for.
	RoomId string `json:"roomId"`
	// KeyTrack Data.
	KeyTrack []KeyTrackType `json:"keyTrack,omitempty"`
	// Date/Time Key is valid from - only send in response for keyType: 'Read' request
	KeyValidityStart string `json:"keyValidityStart"`
	// Date/Time Key is valid to - only send in response for keyType: 'Read' request
	KeyValidityEnd string `json:"keyValidityEnd"`
	// Number of keys to be created.The value is always 1
	NoOfKeys *int32 `json:"noOfKeys,omitempty"`
	// A user-friendly text with information on why a request is not successful
	ResponseText *string `json:"responseText,omitempty"`
	ResponseCode RoomKeyResponseCodeType `json:"responseCode"`
	// Collection of additional rooms to be included in key creation of reservation room.
	AdditionalRooms []string `json:"additionalRooms,omitempty"`
	// Lists all PMS access areas.
	KeyOptions []KeyOptionsResponseType `json:"keyOptions,omitempty"`
	// Unique identifier for the PMS user.
	UserId *string `json:"userId,omitempty"`
	// Base64 format of Mobile Key data provided by DLS System which the external system requested - only send in response for roomKeyType: 'MobileKey'
	DigitalKeyData *string `json:"digitalKeyData,omitempty"`
	// Image of the created key - only send in response for roomKeyType: 'KeyPayload'
	KeyImage *string `json:"keyImage,omitempty"`
	// Unique identifier of RFID card used for KeyPayload generation - only send in response for roomKeyType: 'KeyPayload'.
	CardSerialNumber *string `json:"cardSerialNumber,omitempty"`
	// Date/Time the key has been generated by Door Locking system.
	KeyCreationTime string `json:"keyCreationTime"`
	RoomKeyType ExternalRoomKeyType `json:"roomKeyType"`
	KeyUserType KeyUserType `json:"keyUserType"`
}

type _RoomKeysExternalDetails RoomKeysExternalDetails

// NewRoomKeysExternalDetails instantiates a new RoomKeysExternalDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomKeysExternalDetails(encoderTerminal string, roomId string, keyValidityStart string, keyValidityEnd string, responseCode RoomKeyResponseCodeType, keyCreationTime string, roomKeyType ExternalRoomKeyType, keyUserType KeyUserType) *RoomKeysExternalDetails {
	this := RoomKeysExternalDetails{}
	this.EncoderTerminal = encoderTerminal
	this.RoomId = roomId
	this.KeyValidityStart = keyValidityStart
	this.KeyValidityEnd = keyValidityEnd
	this.ResponseCode = responseCode
	this.KeyCreationTime = keyCreationTime
	this.RoomKeyType = roomKeyType
	this.KeyUserType = keyUserType
	return &this
}

// NewRoomKeysExternalDetailsWithDefaults instantiates a new RoomKeysExternalDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomKeysExternalDetailsWithDefaults() *RoomKeysExternalDetails {
	this := RoomKeysExternalDetails{}
	return &this
}

// GetEncoderId returns the EncoderId field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetEncoderId() string {
	if o == nil || IsNil(o.EncoderId) {
		var ret string
		return ret
	}
	return *o.EncoderId
}

// GetEncoderIdOk returns a tuple with the EncoderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetEncoderIdOk() (*string, bool) {
	if o == nil || IsNil(o.EncoderId) {
		return nil, false
	}
	return o.EncoderId, true
}

// HasEncoderId returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasEncoderId() bool {
	if o != nil && !IsNil(o.EncoderId) {
		return true
	}

	return false
}

// SetEncoderId gets a reference to the given string and assigns it to the EncoderId field.
func (o *RoomKeysExternalDetails) SetEncoderId(v string) {
	o.EncoderId = &v
}

// GetEncoderTerminal returns the EncoderTerminal field value
func (o *RoomKeysExternalDetails) GetEncoderTerminal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncoderTerminal
}

// GetEncoderTerminalOk returns a tuple with the EncoderTerminal field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetEncoderTerminalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncoderTerminal, true
}

// SetEncoderTerminal sets field value
func (o *RoomKeysExternalDetails) SetEncoderTerminal(v string) {
	o.EncoderTerminal = v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *RoomKeysExternalDetails) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetRoomId returns the RoomId field value
func (o *RoomKeysExternalDetails) GetRoomId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetRoomIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomId, true
}

// SetRoomId sets field value
func (o *RoomKeysExternalDetails) SetRoomId(v string) {
	o.RoomId = v
}

// GetKeyTrack returns the KeyTrack field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetKeyTrack() []KeyTrackType {
	if o == nil || IsNil(o.KeyTrack) {
		var ret []KeyTrackType
		return ret
	}
	return o.KeyTrack
}

// GetKeyTrackOk returns a tuple with the KeyTrack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyTrackOk() ([]KeyTrackType, bool) {
	if o == nil || IsNil(o.KeyTrack) {
		return nil, false
	}
	return o.KeyTrack, true
}

// HasKeyTrack returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasKeyTrack() bool {
	if o != nil && !IsNil(o.KeyTrack) {
		return true
	}

	return false
}

// SetKeyTrack gets a reference to the given []KeyTrackType and assigns it to the KeyTrack field.
func (o *RoomKeysExternalDetails) SetKeyTrack(v []KeyTrackType) {
	o.KeyTrack = v
}

// GetKeyValidityStart returns the KeyValidityStart field value
func (o *RoomKeysExternalDetails) GetKeyValidityStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyValidityStart
}

// GetKeyValidityStartOk returns a tuple with the KeyValidityStart field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyValidityStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyValidityStart, true
}

// SetKeyValidityStart sets field value
func (o *RoomKeysExternalDetails) SetKeyValidityStart(v string) {
	o.KeyValidityStart = v
}

// GetKeyValidityEnd returns the KeyValidityEnd field value
func (o *RoomKeysExternalDetails) GetKeyValidityEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyValidityEnd
}

// GetKeyValidityEndOk returns a tuple with the KeyValidityEnd field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyValidityEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyValidityEnd, true
}

// SetKeyValidityEnd sets field value
func (o *RoomKeysExternalDetails) SetKeyValidityEnd(v string) {
	o.KeyValidityEnd = v
}

// GetNoOfKeys returns the NoOfKeys field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetNoOfKeys() int32 {
	if o == nil || IsNil(o.NoOfKeys) {
		var ret int32
		return ret
	}
	return *o.NoOfKeys
}

// GetNoOfKeysOk returns a tuple with the NoOfKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetNoOfKeysOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfKeys) {
		return nil, false
	}
	return o.NoOfKeys, true
}

// HasNoOfKeys returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasNoOfKeys() bool {
	if o != nil && !IsNil(o.NoOfKeys) {
		return true
	}

	return false
}

// SetNoOfKeys gets a reference to the given int32 and assigns it to the NoOfKeys field.
func (o *RoomKeysExternalDetails) SetNoOfKeys(v int32) {
	o.NoOfKeys = &v
}

// GetResponseText returns the ResponseText field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetResponseText() string {
	if o == nil || IsNil(o.ResponseText) {
		var ret string
		return ret
	}
	return *o.ResponseText
}

// GetResponseTextOk returns a tuple with the ResponseText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetResponseTextOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseText) {
		return nil, false
	}
	return o.ResponseText, true
}

// HasResponseText returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasResponseText() bool {
	if o != nil && !IsNil(o.ResponseText) {
		return true
	}

	return false
}

// SetResponseText gets a reference to the given string and assigns it to the ResponseText field.
func (o *RoomKeysExternalDetails) SetResponseText(v string) {
	o.ResponseText = &v
}

// GetResponseCode returns the ResponseCode field value
func (o *RoomKeysExternalDetails) GetResponseCode() RoomKeyResponseCodeType {
	if o == nil {
		var ret RoomKeyResponseCodeType
		return ret
	}

	return o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetResponseCodeOk() (*RoomKeyResponseCodeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseCode, true
}

// SetResponseCode sets field value
func (o *RoomKeysExternalDetails) SetResponseCode(v RoomKeyResponseCodeType) {
	o.ResponseCode = v
}

// GetAdditionalRooms returns the AdditionalRooms field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetAdditionalRooms() []string {
	if o == nil || IsNil(o.AdditionalRooms) {
		var ret []string
		return ret
	}
	return o.AdditionalRooms
}

// GetAdditionalRoomsOk returns a tuple with the AdditionalRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetAdditionalRoomsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalRooms) {
		return nil, false
	}
	return o.AdditionalRooms, true
}

// HasAdditionalRooms returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasAdditionalRooms() bool {
	if o != nil && !IsNil(o.AdditionalRooms) {
		return true
	}

	return false
}

// SetAdditionalRooms gets a reference to the given []string and assigns it to the AdditionalRooms field.
func (o *RoomKeysExternalDetails) SetAdditionalRooms(v []string) {
	o.AdditionalRooms = v
}

// GetKeyOptions returns the KeyOptions field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetKeyOptions() []KeyOptionsResponseType {
	if o == nil || IsNil(o.KeyOptions) {
		var ret []KeyOptionsResponseType
		return ret
	}
	return o.KeyOptions
}

// GetKeyOptionsOk returns a tuple with the KeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyOptionsOk() ([]KeyOptionsResponseType, bool) {
	if o == nil || IsNil(o.KeyOptions) {
		return nil, false
	}
	return o.KeyOptions, true
}

// HasKeyOptions returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasKeyOptions() bool {
	if o != nil && !IsNil(o.KeyOptions) {
		return true
	}

	return false
}

// SetKeyOptions gets a reference to the given []KeyOptionsResponseType and assigns it to the KeyOptions field.
func (o *RoomKeysExternalDetails) SetKeyOptions(v []KeyOptionsResponseType) {
	o.KeyOptions = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RoomKeysExternalDetails) SetUserId(v string) {
	o.UserId = &v
}

// GetDigitalKeyData returns the DigitalKeyData field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetDigitalKeyData() string {
	if o == nil || IsNil(o.DigitalKeyData) {
		var ret string
		return ret
	}
	return *o.DigitalKeyData
}

// GetDigitalKeyDataOk returns a tuple with the DigitalKeyData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetDigitalKeyDataOk() (*string, bool) {
	if o == nil || IsNil(o.DigitalKeyData) {
		return nil, false
	}
	return o.DigitalKeyData, true
}

// HasDigitalKeyData returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasDigitalKeyData() bool {
	if o != nil && !IsNil(o.DigitalKeyData) {
		return true
	}

	return false
}

// SetDigitalKeyData gets a reference to the given string and assigns it to the DigitalKeyData field.
func (o *RoomKeysExternalDetails) SetDigitalKeyData(v string) {
	o.DigitalKeyData = &v
}

// GetKeyImage returns the KeyImage field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetKeyImage() string {
	if o == nil || IsNil(o.KeyImage) {
		var ret string
		return ret
	}
	return *o.KeyImage
}

// GetKeyImageOk returns a tuple with the KeyImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyImageOk() (*string, bool) {
	if o == nil || IsNil(o.KeyImage) {
		return nil, false
	}
	return o.KeyImage, true
}

// HasKeyImage returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasKeyImage() bool {
	if o != nil && !IsNil(o.KeyImage) {
		return true
	}

	return false
}

// SetKeyImage gets a reference to the given string and assigns it to the KeyImage field.
func (o *RoomKeysExternalDetails) SetKeyImage(v string) {
	o.KeyImage = &v
}

// GetCardSerialNumber returns the CardSerialNumber field value if set, zero value otherwise.
func (o *RoomKeysExternalDetails) GetCardSerialNumber() string {
	if o == nil || IsNil(o.CardSerialNumber) {
		var ret string
		return ret
	}
	return *o.CardSerialNumber
}

// GetCardSerialNumberOk returns a tuple with the CardSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetCardSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardSerialNumber) {
		return nil, false
	}
	return o.CardSerialNumber, true
}

// HasCardSerialNumber returns a boolean if a field has been set.
func (o *RoomKeysExternalDetails) HasCardSerialNumber() bool {
	if o != nil && !IsNil(o.CardSerialNumber) {
		return true
	}

	return false
}

// SetCardSerialNumber gets a reference to the given string and assigns it to the CardSerialNumber field.
func (o *RoomKeysExternalDetails) SetCardSerialNumber(v string) {
	o.CardSerialNumber = &v
}

// GetKeyCreationTime returns the KeyCreationTime field value
func (o *RoomKeysExternalDetails) GetKeyCreationTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyCreationTime
}

// GetKeyCreationTimeOk returns a tuple with the KeyCreationTime field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyCreationTime, true
}

// SetKeyCreationTime sets field value
func (o *RoomKeysExternalDetails) SetKeyCreationTime(v string) {
	o.KeyCreationTime = v
}

// GetRoomKeyType returns the RoomKeyType field value
func (o *RoomKeysExternalDetails) GetRoomKeyType() ExternalRoomKeyType {
	if o == nil {
		var ret ExternalRoomKeyType
		return ret
	}

	return o.RoomKeyType
}

// GetRoomKeyTypeOk returns a tuple with the RoomKeyType field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetRoomKeyTypeOk() (*ExternalRoomKeyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomKeyType, true
}

// SetRoomKeyType sets field value
func (o *RoomKeysExternalDetails) SetRoomKeyType(v ExternalRoomKeyType) {
	o.RoomKeyType = v
}

// GetKeyUserType returns the KeyUserType field value
func (o *RoomKeysExternalDetails) GetKeyUserType() KeyUserType {
	if o == nil {
		var ret KeyUserType
		return ret
	}

	return o.KeyUserType
}

// GetKeyUserTypeOk returns a tuple with the KeyUserType field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternalDetails) GetKeyUserTypeOk() (*KeyUserType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyUserType, true
}

// SetKeyUserType sets field value
func (o *RoomKeysExternalDetails) SetKeyUserType(v KeyUserType) {
	o.KeyUserType = v
}

func (o RoomKeysExternalDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomKeysExternalDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EncoderId) {
		toSerialize["encoderId"] = o.EncoderId
	}
	toSerialize["encoderTerminal"] = o.EncoderTerminal
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	toSerialize["roomId"] = o.RoomId
	if !IsNil(o.KeyTrack) {
		toSerialize["keyTrack"] = o.KeyTrack
	}
	toSerialize["keyValidityStart"] = o.KeyValidityStart
	toSerialize["keyValidityEnd"] = o.KeyValidityEnd
	if !IsNil(o.NoOfKeys) {
		toSerialize["noOfKeys"] = o.NoOfKeys
	}
	if !IsNil(o.ResponseText) {
		toSerialize["responseText"] = o.ResponseText
	}
	toSerialize["responseCode"] = o.ResponseCode
	if !IsNil(o.AdditionalRooms) {
		toSerialize["additionalRooms"] = o.AdditionalRooms
	}
	if !IsNil(o.KeyOptions) {
		toSerialize["keyOptions"] = o.KeyOptions
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.DigitalKeyData) {
		toSerialize["digitalKeyData"] = o.DigitalKeyData
	}
	if !IsNil(o.KeyImage) {
		toSerialize["keyImage"] = o.KeyImage
	}
	if !IsNil(o.CardSerialNumber) {
		toSerialize["cardSerialNumber"] = o.CardSerialNumber
	}
	toSerialize["keyCreationTime"] = o.KeyCreationTime
	toSerialize["roomKeyType"] = o.RoomKeyType
	toSerialize["keyUserType"] = o.KeyUserType
	return toSerialize, nil
}

func (o *RoomKeysExternalDetails) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"encoderTerminal",
		"roomId",
		"keyValidityStart",
		"keyValidityEnd",
		"responseCode",
		"keyCreationTime",
		"roomKeyType",
		"keyUserType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoomKeysExternalDetails := _RoomKeysExternalDetails{}

	err = json.Unmarshal(bytes, &varRoomKeysExternalDetails)

	if err != nil {
		return err
	}

	*o = RoomKeysExternalDetails(varRoomKeysExternalDetails)

	return err
}

type NullableRoomKeysExternalDetails struct {
	value *RoomKeysExternalDetails
	isSet bool
}

func (v NullableRoomKeysExternalDetails) Get() *RoomKeysExternalDetails {
	return v.value
}

func (v *NullableRoomKeysExternalDetails) Set(val *RoomKeysExternalDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomKeysExternalDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomKeysExternalDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomKeysExternalDetails(val *RoomKeysExternalDetails) *NullableRoomKeysExternalDetails {
	return &NullableRoomKeysExternalDetails{value: val, isSet: true}
}

func (v NullableRoomKeysExternalDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomKeysExternalDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


