/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomStatusStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomStatusStatisticsType{}

// RoomStatusStatisticsType struct for RoomStatusStatisticsType
type RoomStatusStatisticsType struct {
	RoomClass *string `json:"roomClass,omitempty"`
	RoomType *string `json:"roomType,omitempty"`
	FrontOfficeStatus *string `json:"frontOfficeStatus,omitempty"`
	RoomStats []RoomStatusStatisticsCountType `json:"roomStats,omitempty"`
}

// NewRoomStatusStatisticsType instantiates a new RoomStatusStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomStatusStatisticsType() *RoomStatusStatisticsType {
	this := RoomStatusStatisticsType{}
	return &this
}

// NewRoomStatusStatisticsTypeWithDefaults instantiates a new RoomStatusStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomStatusStatisticsTypeWithDefaults() *RoomStatusStatisticsType {
	this := RoomStatusStatisticsType{}
	return &this
}

// GetRoomClass returns the RoomClass field value if set, zero value otherwise.
func (o *RoomStatusStatisticsType) GetRoomClass() string {
	if o == nil || IsNil(o.RoomClass) {
		var ret string
		return ret
	}
	return *o.RoomClass
}

// GetRoomClassOk returns a tuple with the RoomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomStatusStatisticsType) GetRoomClassOk() (*string, bool) {
	if o == nil || IsNil(o.RoomClass) {
		return nil, false
	}
	return o.RoomClass, true
}

// HasRoomClass returns a boolean if a field has been set.
func (o *RoomStatusStatisticsType) HasRoomClass() bool {
	if o != nil && !IsNil(o.RoomClass) {
		return true
	}

	return false
}

// SetRoomClass gets a reference to the given string and assigns it to the RoomClass field.
func (o *RoomStatusStatisticsType) SetRoomClass(v string) {
	o.RoomClass = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *RoomStatusStatisticsType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomStatusStatisticsType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *RoomStatusStatisticsType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *RoomStatusStatisticsType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetFrontOfficeStatus returns the FrontOfficeStatus field value if set, zero value otherwise.
func (o *RoomStatusStatisticsType) GetFrontOfficeStatus() string {
	if o == nil || IsNil(o.FrontOfficeStatus) {
		var ret string
		return ret
	}
	return *o.FrontOfficeStatus
}

// GetFrontOfficeStatusOk returns a tuple with the FrontOfficeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomStatusStatisticsType) GetFrontOfficeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FrontOfficeStatus) {
		return nil, false
	}
	return o.FrontOfficeStatus, true
}

// HasFrontOfficeStatus returns a boolean if a field has been set.
func (o *RoomStatusStatisticsType) HasFrontOfficeStatus() bool {
	if o != nil && !IsNil(o.FrontOfficeStatus) {
		return true
	}

	return false
}

// SetFrontOfficeStatus gets a reference to the given string and assigns it to the FrontOfficeStatus field.
func (o *RoomStatusStatisticsType) SetFrontOfficeStatus(v string) {
	o.FrontOfficeStatus = &v
}

// GetRoomStats returns the RoomStats field value if set, zero value otherwise.
func (o *RoomStatusStatisticsType) GetRoomStats() []RoomStatusStatisticsCountType {
	if o == nil || IsNil(o.RoomStats) {
		var ret []RoomStatusStatisticsCountType
		return ret
	}
	return o.RoomStats
}

// GetRoomStatsOk returns a tuple with the RoomStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomStatusStatisticsType) GetRoomStatsOk() ([]RoomStatusStatisticsCountType, bool) {
	if o == nil || IsNil(o.RoomStats) {
		return nil, false
	}
	return o.RoomStats, true
}

// HasRoomStats returns a boolean if a field has been set.
func (o *RoomStatusStatisticsType) HasRoomStats() bool {
	if o != nil && !IsNil(o.RoomStats) {
		return true
	}

	return false
}

// SetRoomStats gets a reference to the given []RoomStatusStatisticsCountType and assigns it to the RoomStats field.
func (o *RoomStatusStatisticsType) SetRoomStats(v []RoomStatusStatisticsCountType) {
	o.RoomStats = v
}

func (o RoomStatusStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomStatusStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomClass) {
		toSerialize["roomClass"] = o.RoomClass
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.FrontOfficeStatus) {
		toSerialize["frontOfficeStatus"] = o.FrontOfficeStatus
	}
	if !IsNil(o.RoomStats) {
		toSerialize["roomStats"] = o.RoomStats
	}
	return toSerialize, nil
}

type NullableRoomStatusStatisticsType struct {
	value *RoomStatusStatisticsType
	isSet bool
}

func (v NullableRoomStatusStatisticsType) Get() *RoomStatusStatisticsType {
	return v.value
}

func (v *NullableRoomStatusStatisticsType) Set(val *RoomStatusStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomStatusStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomStatusStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomStatusStatisticsType(val *RoomStatusStatisticsType) *NullableRoomStatusStatisticsType {
	return &NullableRoomStatusStatisticsType{value: val, isSet: true}
}

func (v NullableRoomStatusStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomStatusStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


