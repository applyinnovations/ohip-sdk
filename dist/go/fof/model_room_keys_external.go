/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
	"fmt"
)

// checks if the RoomKeysExternal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomKeysExternal{}

// RoomKeysExternal Request for generation of room key used for OutBound.
type RoomKeysExternal struct {
	// Unique Id as defined by Door Lock System.
	EncoderId string `json:"encoderId"`
	// The Unique PMS encoder name linked with the encoderId
	EncoderTerminal string `json:"encoderTerminal"`
	// The PMS room number to generate a key for.
	RoomId *string `json:"roomId,omitempty"`
	// Old Room Number is used when a room move (keyType RoomMove) is performed.
	OldRoomId *string `json:"oldRoomId,omitempty"`
	// Number of keys to be created.
	NoOfKeys *int32 `json:"noOfKeys,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// Indicates if Guest is a sharer or not
	GuestShareFlag *bool `json:"guestShareFlag,omitempty"`
	// Indicates if old Guest room is a sharer or not when a room move (keyType RoomMove) is performed.
	OldGuestShareFlag *bool `json:"OldGuestShareFlag,omitempty"`
	// The date/time the room key is valid from.
	KeyValidityStart *string `json:"keyValidityStart,omitempty"`
	// The date/time the room key is valid to.
	KeyValidityEnd *string `json:"keyValidityEnd,omitempty"`
	KeyType RoomKeyOutBoundType `json:"keyType"`
	KeyTrack *KeyTrackType `json:"keyTrack,omitempty"`
	// OutBound Code of the Door Lock System (DLS).
	OutBoundCode *string `json:"outBoundCode,omitempty"`
	// Collection of additional rooms to be included in key creation of reservation room.
	AdditionalRooms []string `json:"additionalRooms,omitempty"`
	// Collection of old additional rooms in key creation of reservation room when a room move (keyType RoomMove) is performed.
	OldAdditionalRooms []string `json:"oldAdditionalRooms,omitempty"`
	// Unique identifier for the PMS user.
	UserId *string `json:"userId,omitempty"`
	// Collection of of Room key guests for multiple guest room key functionality.
	RoomKeyGuests []RoomKeyGuest `json:"roomKeyGuests,omitempty"`
	// Lists the access areas defined in PMS valid for the room key.
	KeyOptions []KeyOptionsType `json:"keyOptions,omitempty"`
	// The date/time the room key is requested.
	KeyRequestTime string `json:"keyRequestTime"`
	RoomKeyType ExternalRoomKeyType `json:"roomKeyType"`
	KeyUserType KeyUserType `json:"keyUserType"`
	// Unique identifier of RFID card used for KeyPayload generation. Required when roomKeyType is KeyPayload.
	CardSerialNumber *string `json:"cardSerialNumber,omitempty"`
	PrintData *PrintDataType `json:"printData,omitempty"`
}

type _RoomKeysExternal RoomKeysExternal

// NewRoomKeysExternal instantiates a new RoomKeysExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomKeysExternal(encoderId string, encoderTerminal string, keyType RoomKeyOutBoundType, keyRequestTime string, roomKeyType ExternalRoomKeyType, keyUserType KeyUserType) *RoomKeysExternal {
	this := RoomKeysExternal{}
	this.EncoderId = encoderId
	this.EncoderTerminal = encoderTerminal
	this.KeyType = keyType
	this.KeyRequestTime = keyRequestTime
	this.RoomKeyType = roomKeyType
	this.KeyUserType = keyUserType
	return &this
}

// NewRoomKeysExternalWithDefaults instantiates a new RoomKeysExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomKeysExternalWithDefaults() *RoomKeysExternal {
	this := RoomKeysExternal{}
	return &this
}

// GetEncoderId returns the EncoderId field value
func (o *RoomKeysExternal) GetEncoderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncoderId
}

// GetEncoderIdOk returns a tuple with the EncoderId field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetEncoderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncoderId, true
}

// SetEncoderId sets field value
func (o *RoomKeysExternal) SetEncoderId(v string) {
	o.EncoderId = v
}

// GetEncoderTerminal returns the EncoderTerminal field value
func (o *RoomKeysExternal) GetEncoderTerminal() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncoderTerminal
}

// GetEncoderTerminalOk returns a tuple with the EncoderTerminal field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetEncoderTerminalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncoderTerminal, true
}

// SetEncoderTerminal sets field value
func (o *RoomKeysExternal) SetEncoderTerminal(v string) {
	o.EncoderTerminal = v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *RoomKeysExternal) SetRoomId(v string) {
	o.RoomId = &v
}

// GetOldRoomId returns the OldRoomId field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetOldRoomId() string {
	if o == nil || IsNil(o.OldRoomId) {
		var ret string
		return ret
	}
	return *o.OldRoomId
}

// GetOldRoomIdOk returns a tuple with the OldRoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetOldRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.OldRoomId) {
		return nil, false
	}
	return o.OldRoomId, true
}

// HasOldRoomId returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasOldRoomId() bool {
	if o != nil && !IsNil(o.OldRoomId) {
		return true
	}

	return false
}

// SetOldRoomId gets a reference to the given string and assigns it to the OldRoomId field.
func (o *RoomKeysExternal) SetOldRoomId(v string) {
	o.OldRoomId = &v
}

// GetNoOfKeys returns the NoOfKeys field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetNoOfKeys() int32 {
	if o == nil || IsNil(o.NoOfKeys) {
		var ret int32
		return ret
	}
	return *o.NoOfKeys
}

// GetNoOfKeysOk returns a tuple with the NoOfKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetNoOfKeysOk() (*int32, bool) {
	if o == nil || IsNil(o.NoOfKeys) {
		return nil, false
	}
	return o.NoOfKeys, true
}

// HasNoOfKeys returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasNoOfKeys() bool {
	if o != nil && !IsNil(o.NoOfKeys) {
		return true
	}

	return false
}

// SetNoOfKeys gets a reference to the given int32 and assigns it to the NoOfKeys field.
func (o *RoomKeysExternal) SetNoOfKeys(v int32) {
	o.NoOfKeys = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *RoomKeysExternal) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetGuestShareFlag returns the GuestShareFlag field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetGuestShareFlag() bool {
	if o == nil || IsNil(o.GuestShareFlag) {
		var ret bool
		return ret
	}
	return *o.GuestShareFlag
}

// GetGuestShareFlagOk returns a tuple with the GuestShareFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetGuestShareFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.GuestShareFlag) {
		return nil, false
	}
	return o.GuestShareFlag, true
}

// HasGuestShareFlag returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasGuestShareFlag() bool {
	if o != nil && !IsNil(o.GuestShareFlag) {
		return true
	}

	return false
}

// SetGuestShareFlag gets a reference to the given bool and assigns it to the GuestShareFlag field.
func (o *RoomKeysExternal) SetGuestShareFlag(v bool) {
	o.GuestShareFlag = &v
}

// GetOldGuestShareFlag returns the OldGuestShareFlag field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetOldGuestShareFlag() bool {
	if o == nil || IsNil(o.OldGuestShareFlag) {
		var ret bool
		return ret
	}
	return *o.OldGuestShareFlag
}

// GetOldGuestShareFlagOk returns a tuple with the OldGuestShareFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetOldGuestShareFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.OldGuestShareFlag) {
		return nil, false
	}
	return o.OldGuestShareFlag, true
}

// HasOldGuestShareFlag returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasOldGuestShareFlag() bool {
	if o != nil && !IsNil(o.OldGuestShareFlag) {
		return true
	}

	return false
}

// SetOldGuestShareFlag gets a reference to the given bool and assigns it to the OldGuestShareFlag field.
func (o *RoomKeysExternal) SetOldGuestShareFlag(v bool) {
	o.OldGuestShareFlag = &v
}

// GetKeyValidityStart returns the KeyValidityStart field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetKeyValidityStart() string {
	if o == nil || IsNil(o.KeyValidityStart) {
		var ret string
		return ret
	}
	return *o.KeyValidityStart
}

// GetKeyValidityStartOk returns a tuple with the KeyValidityStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyValidityStartOk() (*string, bool) {
	if o == nil || IsNil(o.KeyValidityStart) {
		return nil, false
	}
	return o.KeyValidityStart, true
}

// HasKeyValidityStart returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasKeyValidityStart() bool {
	if o != nil && !IsNil(o.KeyValidityStart) {
		return true
	}

	return false
}

// SetKeyValidityStart gets a reference to the given string and assigns it to the KeyValidityStart field.
func (o *RoomKeysExternal) SetKeyValidityStart(v string) {
	o.KeyValidityStart = &v
}

// GetKeyValidityEnd returns the KeyValidityEnd field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetKeyValidityEnd() string {
	if o == nil || IsNil(o.KeyValidityEnd) {
		var ret string
		return ret
	}
	return *o.KeyValidityEnd
}

// GetKeyValidityEndOk returns a tuple with the KeyValidityEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyValidityEndOk() (*string, bool) {
	if o == nil || IsNil(o.KeyValidityEnd) {
		return nil, false
	}
	return o.KeyValidityEnd, true
}

// HasKeyValidityEnd returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasKeyValidityEnd() bool {
	if o != nil && !IsNil(o.KeyValidityEnd) {
		return true
	}

	return false
}

// SetKeyValidityEnd gets a reference to the given string and assigns it to the KeyValidityEnd field.
func (o *RoomKeysExternal) SetKeyValidityEnd(v string) {
	o.KeyValidityEnd = &v
}

// GetKeyType returns the KeyType field value
func (o *RoomKeysExternal) GetKeyType() RoomKeyOutBoundType {
	if o == nil {
		var ret RoomKeyOutBoundType
		return ret
	}

	return o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyTypeOk() (*RoomKeyOutBoundType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyType, true
}

// SetKeyType sets field value
func (o *RoomKeysExternal) SetKeyType(v RoomKeyOutBoundType) {
	o.KeyType = v
}

// GetKeyTrack returns the KeyTrack field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetKeyTrack() KeyTrackType {
	if o == nil || IsNil(o.KeyTrack) {
		var ret KeyTrackType
		return ret
	}
	return *o.KeyTrack
}

// GetKeyTrackOk returns a tuple with the KeyTrack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyTrackOk() (*KeyTrackType, bool) {
	if o == nil || IsNil(o.KeyTrack) {
		return nil, false
	}
	return o.KeyTrack, true
}

// HasKeyTrack returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasKeyTrack() bool {
	if o != nil && !IsNil(o.KeyTrack) {
		return true
	}

	return false
}

// SetKeyTrack gets a reference to the given KeyTrackType and assigns it to the KeyTrack field.
func (o *RoomKeysExternal) SetKeyTrack(v KeyTrackType) {
	o.KeyTrack = &v
}

// GetOutBoundCode returns the OutBoundCode field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetOutBoundCode() string {
	if o == nil || IsNil(o.OutBoundCode) {
		var ret string
		return ret
	}
	return *o.OutBoundCode
}

// GetOutBoundCodeOk returns a tuple with the OutBoundCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetOutBoundCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OutBoundCode) {
		return nil, false
	}
	return o.OutBoundCode, true
}

// HasOutBoundCode returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasOutBoundCode() bool {
	if o != nil && !IsNil(o.OutBoundCode) {
		return true
	}

	return false
}

// SetOutBoundCode gets a reference to the given string and assigns it to the OutBoundCode field.
func (o *RoomKeysExternal) SetOutBoundCode(v string) {
	o.OutBoundCode = &v
}

// GetAdditionalRooms returns the AdditionalRooms field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetAdditionalRooms() []string {
	if o == nil || IsNil(o.AdditionalRooms) {
		var ret []string
		return ret
	}
	return o.AdditionalRooms
}

// GetAdditionalRoomsOk returns a tuple with the AdditionalRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetAdditionalRoomsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalRooms) {
		return nil, false
	}
	return o.AdditionalRooms, true
}

// HasAdditionalRooms returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasAdditionalRooms() bool {
	if o != nil && !IsNil(o.AdditionalRooms) {
		return true
	}

	return false
}

// SetAdditionalRooms gets a reference to the given []string and assigns it to the AdditionalRooms field.
func (o *RoomKeysExternal) SetAdditionalRooms(v []string) {
	o.AdditionalRooms = v
}

// GetOldAdditionalRooms returns the OldAdditionalRooms field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetOldAdditionalRooms() []string {
	if o == nil || IsNil(o.OldAdditionalRooms) {
		var ret []string
		return ret
	}
	return o.OldAdditionalRooms
}

// GetOldAdditionalRoomsOk returns a tuple with the OldAdditionalRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetOldAdditionalRoomsOk() ([]string, bool) {
	if o == nil || IsNil(o.OldAdditionalRooms) {
		return nil, false
	}
	return o.OldAdditionalRooms, true
}

// HasOldAdditionalRooms returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasOldAdditionalRooms() bool {
	if o != nil && !IsNil(o.OldAdditionalRooms) {
		return true
	}

	return false
}

// SetOldAdditionalRooms gets a reference to the given []string and assigns it to the OldAdditionalRooms field.
func (o *RoomKeysExternal) SetOldAdditionalRooms(v []string) {
	o.OldAdditionalRooms = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *RoomKeysExternal) SetUserId(v string) {
	o.UserId = &v
}

// GetRoomKeyGuests returns the RoomKeyGuests field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetRoomKeyGuests() []RoomKeyGuest {
	if o == nil || IsNil(o.RoomKeyGuests) {
		var ret []RoomKeyGuest
		return ret
	}
	return o.RoomKeyGuests
}

// GetRoomKeyGuestsOk returns a tuple with the RoomKeyGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetRoomKeyGuestsOk() ([]RoomKeyGuest, bool) {
	if o == nil || IsNil(o.RoomKeyGuests) {
		return nil, false
	}
	return o.RoomKeyGuests, true
}

// HasRoomKeyGuests returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasRoomKeyGuests() bool {
	if o != nil && !IsNil(o.RoomKeyGuests) {
		return true
	}

	return false
}

// SetRoomKeyGuests gets a reference to the given []RoomKeyGuest and assigns it to the RoomKeyGuests field.
func (o *RoomKeysExternal) SetRoomKeyGuests(v []RoomKeyGuest) {
	o.RoomKeyGuests = v
}

// GetKeyOptions returns the KeyOptions field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetKeyOptions() []KeyOptionsType {
	if o == nil || IsNil(o.KeyOptions) {
		var ret []KeyOptionsType
		return ret
	}
	return o.KeyOptions
}

// GetKeyOptionsOk returns a tuple with the KeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyOptionsOk() ([]KeyOptionsType, bool) {
	if o == nil || IsNil(o.KeyOptions) {
		return nil, false
	}
	return o.KeyOptions, true
}

// HasKeyOptions returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasKeyOptions() bool {
	if o != nil && !IsNil(o.KeyOptions) {
		return true
	}

	return false
}

// SetKeyOptions gets a reference to the given []KeyOptionsType and assigns it to the KeyOptions field.
func (o *RoomKeysExternal) SetKeyOptions(v []KeyOptionsType) {
	o.KeyOptions = v
}

// GetKeyRequestTime returns the KeyRequestTime field value
func (o *RoomKeysExternal) GetKeyRequestTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyRequestTime
}

// GetKeyRequestTimeOk returns a tuple with the KeyRequestTime field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyRequestTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyRequestTime, true
}

// SetKeyRequestTime sets field value
func (o *RoomKeysExternal) SetKeyRequestTime(v string) {
	o.KeyRequestTime = v
}

// GetRoomKeyType returns the RoomKeyType field value
func (o *RoomKeysExternal) GetRoomKeyType() ExternalRoomKeyType {
	if o == nil {
		var ret ExternalRoomKeyType
		return ret
	}

	return o.RoomKeyType
}

// GetRoomKeyTypeOk returns a tuple with the RoomKeyType field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetRoomKeyTypeOk() (*ExternalRoomKeyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoomKeyType, true
}

// SetRoomKeyType sets field value
func (o *RoomKeysExternal) SetRoomKeyType(v ExternalRoomKeyType) {
	o.RoomKeyType = v
}

// GetKeyUserType returns the KeyUserType field value
func (o *RoomKeysExternal) GetKeyUserType() KeyUserType {
	if o == nil {
		var ret KeyUserType
		return ret
	}

	return o.KeyUserType
}

// GetKeyUserTypeOk returns a tuple with the KeyUserType field value
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetKeyUserTypeOk() (*KeyUserType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyUserType, true
}

// SetKeyUserType sets field value
func (o *RoomKeysExternal) SetKeyUserType(v KeyUserType) {
	o.KeyUserType = v
}

// GetCardSerialNumber returns the CardSerialNumber field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetCardSerialNumber() string {
	if o == nil || IsNil(o.CardSerialNumber) {
		var ret string
		return ret
	}
	return *o.CardSerialNumber
}

// GetCardSerialNumberOk returns a tuple with the CardSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetCardSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardSerialNumber) {
		return nil, false
	}
	return o.CardSerialNumber, true
}

// HasCardSerialNumber returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasCardSerialNumber() bool {
	if o != nil && !IsNil(o.CardSerialNumber) {
		return true
	}

	return false
}

// SetCardSerialNumber gets a reference to the given string and assigns it to the CardSerialNumber field.
func (o *RoomKeysExternal) SetCardSerialNumber(v string) {
	o.CardSerialNumber = &v
}

// GetPrintData returns the PrintData field value if set, zero value otherwise.
func (o *RoomKeysExternal) GetPrintData() PrintDataType {
	if o == nil || IsNil(o.PrintData) {
		var ret PrintDataType
		return ret
	}
	return *o.PrintData
}

// GetPrintDataOk returns a tuple with the PrintData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeysExternal) GetPrintDataOk() (*PrintDataType, bool) {
	if o == nil || IsNil(o.PrintData) {
		return nil, false
	}
	return o.PrintData, true
}

// HasPrintData returns a boolean if a field has been set.
func (o *RoomKeysExternal) HasPrintData() bool {
	if o != nil && !IsNil(o.PrintData) {
		return true
	}

	return false
}

// SetPrintData gets a reference to the given PrintDataType and assigns it to the PrintData field.
func (o *RoomKeysExternal) SetPrintData(v PrintDataType) {
	o.PrintData = &v
}

func (o RoomKeysExternal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomKeysExternal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encoderId"] = o.EncoderId
	toSerialize["encoderTerminal"] = o.EncoderTerminal
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.OldRoomId) {
		toSerialize["oldRoomId"] = o.OldRoomId
	}
	if !IsNil(o.NoOfKeys) {
		toSerialize["noOfKeys"] = o.NoOfKeys
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.GuestShareFlag) {
		toSerialize["guestShareFlag"] = o.GuestShareFlag
	}
	if !IsNil(o.OldGuestShareFlag) {
		toSerialize["OldGuestShareFlag"] = o.OldGuestShareFlag
	}
	if !IsNil(o.KeyValidityStart) {
		toSerialize["keyValidityStart"] = o.KeyValidityStart
	}
	if !IsNil(o.KeyValidityEnd) {
		toSerialize["keyValidityEnd"] = o.KeyValidityEnd
	}
	toSerialize["keyType"] = o.KeyType
	if !IsNil(o.KeyTrack) {
		toSerialize["keyTrack"] = o.KeyTrack
	}
	if !IsNil(o.OutBoundCode) {
		toSerialize["outBoundCode"] = o.OutBoundCode
	}
	if !IsNil(o.AdditionalRooms) {
		toSerialize["additionalRooms"] = o.AdditionalRooms
	}
	if !IsNil(o.OldAdditionalRooms) {
		toSerialize["oldAdditionalRooms"] = o.OldAdditionalRooms
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.RoomKeyGuests) {
		toSerialize["roomKeyGuests"] = o.RoomKeyGuests
	}
	if !IsNil(o.KeyOptions) {
		toSerialize["keyOptions"] = o.KeyOptions
	}
	toSerialize["keyRequestTime"] = o.KeyRequestTime
	toSerialize["roomKeyType"] = o.RoomKeyType
	toSerialize["keyUserType"] = o.KeyUserType
	if !IsNil(o.CardSerialNumber) {
		toSerialize["cardSerialNumber"] = o.CardSerialNumber
	}
	if !IsNil(o.PrintData) {
		toSerialize["printData"] = o.PrintData
	}
	return toSerialize, nil
}

func (o *RoomKeysExternal) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"encoderId",
		"encoderTerminal",
		"keyType",
		"keyRequestTime",
		"roomKeyType",
		"keyUserType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoomKeysExternal := _RoomKeysExternal{}

	err = json.Unmarshal(bytes, &varRoomKeysExternal)

	if err != nil {
		return err
	}

	*o = RoomKeysExternal(varRoomKeysExternal)

	return err
}

type NullableRoomKeysExternal struct {
	value *RoomKeysExternal
	isSet bool
}

func (v NullableRoomKeysExternal) Get() *RoomKeysExternal {
	return v.value
}

func (v *NullableRoomKeysExternal) Set(val *RoomKeysExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomKeysExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomKeysExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomKeysExternal(val *RoomKeysExternal) *NullableRoomKeysExternal {
	return &NullableRoomKeysExternal{value: val, isSet: true}
}

func (v NullableRoomKeysExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomKeysExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


