/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ChangeCommissionCheckCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeCommissionCheckCriteriaType{}

// ChangeCommissionCheckCriteriaType Base type for payment activity information
type ChangeCommissionCheckCriteriaType struct {
	// Property of the commission record.
	HotelId *string `json:"hotelId,omitempty"`
	BankAccountId *UniqueIDType `json:"bankAccountId,omitempty"`
	BatchId *UniqueIDType `json:"batchId,omitempty"`
	// New check no of commission check.
	CheckNo *float32 `json:"checkNo,omitempty"`
	PaymentId *UniqueIDType `json:"paymentId,omitempty"`
}

// NewChangeCommissionCheckCriteriaType instantiates a new ChangeCommissionCheckCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeCommissionCheckCriteriaType() *ChangeCommissionCheckCriteriaType {
	this := ChangeCommissionCheckCriteriaType{}
	return &this
}

// NewChangeCommissionCheckCriteriaTypeWithDefaults instantiates a new ChangeCommissionCheckCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeCommissionCheckCriteriaTypeWithDefaults() *ChangeCommissionCheckCriteriaType {
	this := ChangeCommissionCheckCriteriaType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChangeCommissionCheckCriteriaType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeCommissionCheckCriteriaType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChangeCommissionCheckCriteriaType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChangeCommissionCheckCriteriaType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *ChangeCommissionCheckCriteriaType) GetBankAccountId() UniqueIDType {
	if o == nil || IsNil(o.BankAccountId) {
		var ret UniqueIDType
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeCommissionCheckCriteriaType) GetBankAccountIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *ChangeCommissionCheckCriteriaType) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given UniqueIDType and assigns it to the BankAccountId field.
func (o *ChangeCommissionCheckCriteriaType) SetBankAccountId(v UniqueIDType) {
	o.BankAccountId = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *ChangeCommissionCheckCriteriaType) GetBatchId() UniqueIDType {
	if o == nil || IsNil(o.BatchId) {
		var ret UniqueIDType
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeCommissionCheckCriteriaType) GetBatchIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *ChangeCommissionCheckCriteriaType) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given UniqueIDType and assigns it to the BatchId field.
func (o *ChangeCommissionCheckCriteriaType) SetBatchId(v UniqueIDType) {
	o.BatchId = &v
}

// GetCheckNo returns the CheckNo field value if set, zero value otherwise.
func (o *ChangeCommissionCheckCriteriaType) GetCheckNo() float32 {
	if o == nil || IsNil(o.CheckNo) {
		var ret float32
		return ret
	}
	return *o.CheckNo
}

// GetCheckNoOk returns a tuple with the CheckNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeCommissionCheckCriteriaType) GetCheckNoOk() (*float32, bool) {
	if o == nil || IsNil(o.CheckNo) {
		return nil, false
	}
	return o.CheckNo, true
}

// HasCheckNo returns a boolean if a field has been set.
func (o *ChangeCommissionCheckCriteriaType) HasCheckNo() bool {
	if o != nil && !IsNil(o.CheckNo) {
		return true
	}

	return false
}

// SetCheckNo gets a reference to the given float32 and assigns it to the CheckNo field.
func (o *ChangeCommissionCheckCriteriaType) SetCheckNo(v float32) {
	o.CheckNo = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *ChangeCommissionCheckCriteriaType) GetPaymentId() UniqueIDType {
	if o == nil || IsNil(o.PaymentId) {
		var ret UniqueIDType
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeCommissionCheckCriteriaType) GetPaymentIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *ChangeCommissionCheckCriteriaType) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given UniqueIDType and assigns it to the PaymentId field.
func (o *ChangeCommissionCheckCriteriaType) SetPaymentId(v UniqueIDType) {
	o.PaymentId = &v
}

func (o ChangeCommissionCheckCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeCommissionCheckCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.BankAccountId) {
		toSerialize["bankAccountId"] = o.BankAccountId
	}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.CheckNo) {
		toSerialize["checkNo"] = o.CheckNo
	}
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	return toSerialize, nil
}

type NullableChangeCommissionCheckCriteriaType struct {
	value *ChangeCommissionCheckCriteriaType
	isSet bool
}

func (v NullableChangeCommissionCheckCriteriaType) Get() *ChangeCommissionCheckCriteriaType {
	return v.value
}

func (v *NullableChangeCommissionCheckCriteriaType) Set(val *ChangeCommissionCheckCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeCommissionCheckCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeCommissionCheckCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeCommissionCheckCriteriaType(val *ChangeCommissionCheckCriteriaType) *NullableChangeCommissionCheckCriteriaType {
	return &NullableChangeCommissionCheckCriteriaType{value: val, isSet: true}
}

func (v NullableChangeCommissionCheckCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeCommissionCheckCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


