/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ReservationKeyInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationKeyInfoType{}

// ReservationKeyInfoType Holds the room key information provided by the Door Lock System.
type ReservationKeyInfoType struct {
	// PIN provided in keyTrack3 from the Door Lock System that is used to unlock a room. This is supported when Key Pin handling is active for the property and the Door Lock System in use.
	KeyPin *string `json:"keyPin,omitempty"`
}

// NewReservationKeyInfoType instantiates a new ReservationKeyInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationKeyInfoType() *ReservationKeyInfoType {
	this := ReservationKeyInfoType{}
	return &this
}

// NewReservationKeyInfoTypeWithDefaults instantiates a new ReservationKeyInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationKeyInfoTypeWithDefaults() *ReservationKeyInfoType {
	this := ReservationKeyInfoType{}
	return &this
}

// GetKeyPin returns the KeyPin field value if set, zero value otherwise.
func (o *ReservationKeyInfoType) GetKeyPin() string {
	if o == nil || IsNil(o.KeyPin) {
		var ret string
		return ret
	}
	return *o.KeyPin
}

// GetKeyPinOk returns a tuple with the KeyPin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationKeyInfoType) GetKeyPinOk() (*string, bool) {
	if o == nil || IsNil(o.KeyPin) {
		return nil, false
	}
	return o.KeyPin, true
}

// HasKeyPin returns a boolean if a field has been set.
func (o *ReservationKeyInfoType) HasKeyPin() bool {
	if o != nil && !IsNil(o.KeyPin) {
		return true
	}

	return false
}

// SetKeyPin gets a reference to the given string and assigns it to the KeyPin field.
func (o *ReservationKeyInfoType) SetKeyPin(v string) {
	o.KeyPin = &v
}

func (o ReservationKeyInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationKeyInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyPin) {
		toSerialize["keyPin"] = o.KeyPin
	}
	return toSerialize, nil
}

type NullableReservationKeyInfoType struct {
	value *ReservationKeyInfoType
	isSet bool
}

func (v NullableReservationKeyInfoType) Get() *ReservationKeyInfoType {
	return v.value
}

func (v *NullableReservationKeyInfoType) Set(val *ReservationKeyInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationKeyInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationKeyInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationKeyInfoType(val *ReservationKeyInfoType) *NullableReservationKeyInfoType {
	return &NullableReservationKeyInfoType{value: val, isSet: true}
}

func (v NullableReservationKeyInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationKeyInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


