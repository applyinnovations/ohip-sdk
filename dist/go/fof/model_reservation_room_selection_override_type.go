/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ReservationRoomSelectionOverrideType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationRoomSelectionOverrideType{}

// ReservationRoomSelectionOverrideType Define the override flag which will be used when configuring a room to a reservation.
type ReservationRoomSelectionOverrideType struct {
	// If the current reservation is a Day Use, then check on Reserved rooms can be overridden when assigning rooms.
	DayUseReserved *bool `json:"dayUseReserved,omitempty"`
	// Override the room selection even if the selected room has a \"dirty\" state.
	DirtyRoom *bool `json:"dirtyRoom,omitempty"`
	// Override the Hold Room flag in the database and use the value passed.
	HoldRoom *bool `json:"holdRoom,omitempty"`
	// Override the room selection even when there is no inventory.
	InventoryRestriction *bool `json:"inventoryRestriction,omitempty"`
	// Override the room selection even when room occupancy is exceeded.
	OccupancyRestriction *bool `json:"occupancyRestriction,omitempty"`
	// Override the room selection even if the selected room has an \"out-of-service\" state.
	OutOfServiceRoom *bool `json:"outOfServiceRoom,omitempty"`
	// Forcefully override update. For real-time CRS interfaces, this element is used as force selling indicator.
	OverrideExternalChecks *bool `json:"overrideExternalChecks,omitempty"`
	OverrideInstruction *OverrideInstructionType `json:"overrideInstruction,omitempty"`
	// Override the room ownership indicator in the reservation when assigning rooms. This is applicable when Room Rotation OPERA Control is active.
	OverrideRoomOwnership *bool `json:"overrideRoomOwnership,omitempty"`
	// Override the rotation room with the selected room when assigning rooms.
	OverrideRotationRoom *bool `json:"overrideRotationRoom,omitempty"`
	RateChange *RateChangeInstructionType `json:"rateChange,omitempty"`
	// Override the room selection even when there is rate restriction present for this room type.
	RateRestriction *bool `json:"rateRestriction,omitempty"`
	// Override the room number locked flag in the database and use the value passed.
	RoomNumberLocked *bool `json:"roomNumberLocked,omitempty"`
	RoomOwnershipType *ReservationRoomOwnershipType `json:"roomOwnershipType,omitempty"`
	// Override the room selection even when HouseKeeping configured the room to still be occupied.
	SleepDiscrepantRoom *bool `json:"sleepDiscrepantRoom,omitempty"`
}

// NewReservationRoomSelectionOverrideType instantiates a new ReservationRoomSelectionOverrideType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationRoomSelectionOverrideType() *ReservationRoomSelectionOverrideType {
	this := ReservationRoomSelectionOverrideType{}
	return &this
}

// NewReservationRoomSelectionOverrideTypeWithDefaults instantiates a new ReservationRoomSelectionOverrideType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationRoomSelectionOverrideTypeWithDefaults() *ReservationRoomSelectionOverrideType {
	this := ReservationRoomSelectionOverrideType{}
	return &this
}

// GetDayUseReserved returns the DayUseReserved field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetDayUseReserved() bool {
	if o == nil || IsNil(o.DayUseReserved) {
		var ret bool
		return ret
	}
	return *o.DayUseReserved
}

// GetDayUseReservedOk returns a tuple with the DayUseReserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetDayUseReservedOk() (*bool, bool) {
	if o == nil || IsNil(o.DayUseReserved) {
		return nil, false
	}
	return o.DayUseReserved, true
}

// HasDayUseReserved returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasDayUseReserved() bool {
	if o != nil && !IsNil(o.DayUseReserved) {
		return true
	}

	return false
}

// SetDayUseReserved gets a reference to the given bool and assigns it to the DayUseReserved field.
func (o *ReservationRoomSelectionOverrideType) SetDayUseReserved(v bool) {
	o.DayUseReserved = &v
}

// GetDirtyRoom returns the DirtyRoom field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetDirtyRoom() bool {
	if o == nil || IsNil(o.DirtyRoom) {
		var ret bool
		return ret
	}
	return *o.DirtyRoom
}

// GetDirtyRoomOk returns a tuple with the DirtyRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetDirtyRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.DirtyRoom) {
		return nil, false
	}
	return o.DirtyRoom, true
}

// HasDirtyRoom returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasDirtyRoom() bool {
	if o != nil && !IsNil(o.DirtyRoom) {
		return true
	}

	return false
}

// SetDirtyRoom gets a reference to the given bool and assigns it to the DirtyRoom field.
func (o *ReservationRoomSelectionOverrideType) SetDirtyRoom(v bool) {
	o.DirtyRoom = &v
}

// GetHoldRoom returns the HoldRoom field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetHoldRoom() bool {
	if o == nil || IsNil(o.HoldRoom) {
		var ret bool
		return ret
	}
	return *o.HoldRoom
}

// GetHoldRoomOk returns a tuple with the HoldRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetHoldRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.HoldRoom) {
		return nil, false
	}
	return o.HoldRoom, true
}

// HasHoldRoom returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasHoldRoom() bool {
	if o != nil && !IsNil(o.HoldRoom) {
		return true
	}

	return false
}

// SetHoldRoom gets a reference to the given bool and assigns it to the HoldRoom field.
func (o *ReservationRoomSelectionOverrideType) SetHoldRoom(v bool) {
	o.HoldRoom = &v
}

// GetInventoryRestriction returns the InventoryRestriction field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetInventoryRestriction() bool {
	if o == nil || IsNil(o.InventoryRestriction) {
		var ret bool
		return ret
	}
	return *o.InventoryRestriction
}

// GetInventoryRestrictionOk returns a tuple with the InventoryRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetInventoryRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.InventoryRestriction) {
		return nil, false
	}
	return o.InventoryRestriction, true
}

// HasInventoryRestriction returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasInventoryRestriction() bool {
	if o != nil && !IsNil(o.InventoryRestriction) {
		return true
	}

	return false
}

// SetInventoryRestriction gets a reference to the given bool and assigns it to the InventoryRestriction field.
func (o *ReservationRoomSelectionOverrideType) SetInventoryRestriction(v bool) {
	o.InventoryRestriction = &v
}

// GetOccupancyRestriction returns the OccupancyRestriction field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOccupancyRestriction() bool {
	if o == nil || IsNil(o.OccupancyRestriction) {
		var ret bool
		return ret
	}
	return *o.OccupancyRestriction
}

// GetOccupancyRestrictionOk returns a tuple with the OccupancyRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOccupancyRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.OccupancyRestriction) {
		return nil, false
	}
	return o.OccupancyRestriction, true
}

// HasOccupancyRestriction returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOccupancyRestriction() bool {
	if o != nil && !IsNil(o.OccupancyRestriction) {
		return true
	}

	return false
}

// SetOccupancyRestriction gets a reference to the given bool and assigns it to the OccupancyRestriction field.
func (o *ReservationRoomSelectionOverrideType) SetOccupancyRestriction(v bool) {
	o.OccupancyRestriction = &v
}

// GetOutOfServiceRoom returns the OutOfServiceRoom field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOutOfServiceRoom() bool {
	if o == nil || IsNil(o.OutOfServiceRoom) {
		var ret bool
		return ret
	}
	return *o.OutOfServiceRoom
}

// GetOutOfServiceRoomOk returns a tuple with the OutOfServiceRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOutOfServiceRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.OutOfServiceRoom) {
		return nil, false
	}
	return o.OutOfServiceRoom, true
}

// HasOutOfServiceRoom returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOutOfServiceRoom() bool {
	if o != nil && !IsNil(o.OutOfServiceRoom) {
		return true
	}

	return false
}

// SetOutOfServiceRoom gets a reference to the given bool and assigns it to the OutOfServiceRoom field.
func (o *ReservationRoomSelectionOverrideType) SetOutOfServiceRoom(v bool) {
	o.OutOfServiceRoom = &v
}

// GetOverrideExternalChecks returns the OverrideExternalChecks field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOverrideExternalChecks() bool {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		var ret bool
		return ret
	}
	return *o.OverrideExternalChecks
}

// GetOverrideExternalChecksOk returns a tuple with the OverrideExternalChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOverrideExternalChecksOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideExternalChecks) {
		return nil, false
	}
	return o.OverrideExternalChecks, true
}

// HasOverrideExternalChecks returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOverrideExternalChecks() bool {
	if o != nil && !IsNil(o.OverrideExternalChecks) {
		return true
	}

	return false
}

// SetOverrideExternalChecks gets a reference to the given bool and assigns it to the OverrideExternalChecks field.
func (o *ReservationRoomSelectionOverrideType) SetOverrideExternalChecks(v bool) {
	o.OverrideExternalChecks = &v
}

// GetOverrideInstruction returns the OverrideInstruction field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOverrideInstruction() OverrideInstructionType {
	if o == nil || IsNil(o.OverrideInstruction) {
		var ret OverrideInstructionType
		return ret
	}
	return *o.OverrideInstruction
}

// GetOverrideInstructionOk returns a tuple with the OverrideInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOverrideInstructionOk() (*OverrideInstructionType, bool) {
	if o == nil || IsNil(o.OverrideInstruction) {
		return nil, false
	}
	return o.OverrideInstruction, true
}

// HasOverrideInstruction returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOverrideInstruction() bool {
	if o != nil && !IsNil(o.OverrideInstruction) {
		return true
	}

	return false
}

// SetOverrideInstruction gets a reference to the given OverrideInstructionType and assigns it to the OverrideInstruction field.
func (o *ReservationRoomSelectionOverrideType) SetOverrideInstruction(v OverrideInstructionType) {
	o.OverrideInstruction = &v
}

// GetOverrideRoomOwnership returns the OverrideRoomOwnership field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOverrideRoomOwnership() bool {
	if o == nil || IsNil(o.OverrideRoomOwnership) {
		var ret bool
		return ret
	}
	return *o.OverrideRoomOwnership
}

// GetOverrideRoomOwnershipOk returns a tuple with the OverrideRoomOwnership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOverrideRoomOwnershipOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideRoomOwnership) {
		return nil, false
	}
	return o.OverrideRoomOwnership, true
}

// HasOverrideRoomOwnership returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOverrideRoomOwnership() bool {
	if o != nil && !IsNil(o.OverrideRoomOwnership) {
		return true
	}

	return false
}

// SetOverrideRoomOwnership gets a reference to the given bool and assigns it to the OverrideRoomOwnership field.
func (o *ReservationRoomSelectionOverrideType) SetOverrideRoomOwnership(v bool) {
	o.OverrideRoomOwnership = &v
}

// GetOverrideRotationRoom returns the OverrideRotationRoom field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetOverrideRotationRoom() bool {
	if o == nil || IsNil(o.OverrideRotationRoom) {
		var ret bool
		return ret
	}
	return *o.OverrideRotationRoom
}

// GetOverrideRotationRoomOk returns a tuple with the OverrideRotationRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetOverrideRotationRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideRotationRoom) {
		return nil, false
	}
	return o.OverrideRotationRoom, true
}

// HasOverrideRotationRoom returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasOverrideRotationRoom() bool {
	if o != nil && !IsNil(o.OverrideRotationRoom) {
		return true
	}

	return false
}

// SetOverrideRotationRoom gets a reference to the given bool and assigns it to the OverrideRotationRoom field.
func (o *ReservationRoomSelectionOverrideType) SetOverrideRotationRoom(v bool) {
	o.OverrideRotationRoom = &v
}

// GetRateChange returns the RateChange field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetRateChange() RateChangeInstructionType {
	if o == nil || IsNil(o.RateChange) {
		var ret RateChangeInstructionType
		return ret
	}
	return *o.RateChange
}

// GetRateChangeOk returns a tuple with the RateChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetRateChangeOk() (*RateChangeInstructionType, bool) {
	if o == nil || IsNil(o.RateChange) {
		return nil, false
	}
	return o.RateChange, true
}

// HasRateChange returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasRateChange() bool {
	if o != nil && !IsNil(o.RateChange) {
		return true
	}

	return false
}

// SetRateChange gets a reference to the given RateChangeInstructionType and assigns it to the RateChange field.
func (o *ReservationRoomSelectionOverrideType) SetRateChange(v RateChangeInstructionType) {
	o.RateChange = &v
}

// GetRateRestriction returns the RateRestriction field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetRateRestriction() bool {
	if o == nil || IsNil(o.RateRestriction) {
		var ret bool
		return ret
	}
	return *o.RateRestriction
}

// GetRateRestrictionOk returns a tuple with the RateRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetRateRestrictionOk() (*bool, bool) {
	if o == nil || IsNil(o.RateRestriction) {
		return nil, false
	}
	return o.RateRestriction, true
}

// HasRateRestriction returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasRateRestriction() bool {
	if o != nil && !IsNil(o.RateRestriction) {
		return true
	}

	return false
}

// SetRateRestriction gets a reference to the given bool and assigns it to the RateRestriction field.
func (o *ReservationRoomSelectionOverrideType) SetRateRestriction(v bool) {
	o.RateRestriction = &v
}

// GetRoomNumberLocked returns the RoomNumberLocked field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetRoomNumberLocked() bool {
	if o == nil || IsNil(o.RoomNumberLocked) {
		var ret bool
		return ret
	}
	return *o.RoomNumberLocked
}

// GetRoomNumberLockedOk returns a tuple with the RoomNumberLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetRoomNumberLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.RoomNumberLocked) {
		return nil, false
	}
	return o.RoomNumberLocked, true
}

// HasRoomNumberLocked returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasRoomNumberLocked() bool {
	if o != nil && !IsNil(o.RoomNumberLocked) {
		return true
	}

	return false
}

// SetRoomNumberLocked gets a reference to the given bool and assigns it to the RoomNumberLocked field.
func (o *ReservationRoomSelectionOverrideType) SetRoomNumberLocked(v bool) {
	o.RoomNumberLocked = &v
}

// GetRoomOwnershipType returns the RoomOwnershipType field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetRoomOwnershipType() ReservationRoomOwnershipType {
	if o == nil || IsNil(o.RoomOwnershipType) {
		var ret ReservationRoomOwnershipType
		return ret
	}
	return *o.RoomOwnershipType
}

// GetRoomOwnershipTypeOk returns a tuple with the RoomOwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetRoomOwnershipTypeOk() (*ReservationRoomOwnershipType, bool) {
	if o == nil || IsNil(o.RoomOwnershipType) {
		return nil, false
	}
	return o.RoomOwnershipType, true
}

// HasRoomOwnershipType returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasRoomOwnershipType() bool {
	if o != nil && !IsNil(o.RoomOwnershipType) {
		return true
	}

	return false
}

// SetRoomOwnershipType gets a reference to the given ReservationRoomOwnershipType and assigns it to the RoomOwnershipType field.
func (o *ReservationRoomSelectionOverrideType) SetRoomOwnershipType(v ReservationRoomOwnershipType) {
	o.RoomOwnershipType = &v
}

// GetSleepDiscrepantRoom returns the SleepDiscrepantRoom field value if set, zero value otherwise.
func (o *ReservationRoomSelectionOverrideType) GetSleepDiscrepantRoom() bool {
	if o == nil || IsNil(o.SleepDiscrepantRoom) {
		var ret bool
		return ret
	}
	return *o.SleepDiscrepantRoom
}

// GetSleepDiscrepantRoomOk returns a tuple with the SleepDiscrepantRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRoomSelectionOverrideType) GetSleepDiscrepantRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.SleepDiscrepantRoom) {
		return nil, false
	}
	return o.SleepDiscrepantRoom, true
}

// HasSleepDiscrepantRoom returns a boolean if a field has been set.
func (o *ReservationRoomSelectionOverrideType) HasSleepDiscrepantRoom() bool {
	if o != nil && !IsNil(o.SleepDiscrepantRoom) {
		return true
	}

	return false
}

// SetSleepDiscrepantRoom gets a reference to the given bool and assigns it to the SleepDiscrepantRoom field.
func (o *ReservationRoomSelectionOverrideType) SetSleepDiscrepantRoom(v bool) {
	o.SleepDiscrepantRoom = &v
}

func (o ReservationRoomSelectionOverrideType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationRoomSelectionOverrideType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayUseReserved) {
		toSerialize["dayUseReserved"] = o.DayUseReserved
	}
	if !IsNil(o.DirtyRoom) {
		toSerialize["dirtyRoom"] = o.DirtyRoom
	}
	if !IsNil(o.HoldRoom) {
		toSerialize["holdRoom"] = o.HoldRoom
	}
	if !IsNil(o.InventoryRestriction) {
		toSerialize["inventoryRestriction"] = o.InventoryRestriction
	}
	if !IsNil(o.OccupancyRestriction) {
		toSerialize["occupancyRestriction"] = o.OccupancyRestriction
	}
	if !IsNil(o.OutOfServiceRoom) {
		toSerialize["outOfServiceRoom"] = o.OutOfServiceRoom
	}
	if !IsNil(o.OverrideExternalChecks) {
		toSerialize["overrideExternalChecks"] = o.OverrideExternalChecks
	}
	if !IsNil(o.OverrideInstruction) {
		toSerialize["overrideInstruction"] = o.OverrideInstruction
	}
	if !IsNil(o.OverrideRoomOwnership) {
		toSerialize["overrideRoomOwnership"] = o.OverrideRoomOwnership
	}
	if !IsNil(o.OverrideRotationRoom) {
		toSerialize["overrideRotationRoom"] = o.OverrideRotationRoom
	}
	if !IsNil(o.RateChange) {
		toSerialize["rateChange"] = o.RateChange
	}
	if !IsNil(o.RateRestriction) {
		toSerialize["rateRestriction"] = o.RateRestriction
	}
	if !IsNil(o.RoomNumberLocked) {
		toSerialize["roomNumberLocked"] = o.RoomNumberLocked
	}
	if !IsNil(o.RoomOwnershipType) {
		toSerialize["roomOwnershipType"] = o.RoomOwnershipType
	}
	if !IsNil(o.SleepDiscrepantRoom) {
		toSerialize["sleepDiscrepantRoom"] = o.SleepDiscrepantRoom
	}
	return toSerialize, nil
}

type NullableReservationRoomSelectionOverrideType struct {
	value *ReservationRoomSelectionOverrideType
	isSet bool
}

func (v NullableReservationRoomSelectionOverrideType) Get() *ReservationRoomSelectionOverrideType {
	return v.value
}

func (v *NullableReservationRoomSelectionOverrideType) Set(val *ReservationRoomSelectionOverrideType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationRoomSelectionOverrideType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationRoomSelectionOverrideType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationRoomSelectionOverrideType(val *ReservationRoomSelectionOverrideType) *NullableReservationRoomSelectionOverrideType {
	return &NullableReservationRoomSelectionOverrideType{value: val, isSet: true}
}

func (v NullableReservationRoomSelectionOverrideType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationRoomSelectionOverrideType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


