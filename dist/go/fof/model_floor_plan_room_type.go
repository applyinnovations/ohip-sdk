/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the FloorPlanRoomType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FloorPlanRoomType{}

// FloorPlanRoomType This type represents the primary room attributes.
type FloorPlanRoomType struct {
	// Indicates whether the room is accessibility compliant.
	Accessible *bool `json:"accessible,omitempty"`
	Attendant []CurrentServicingAttendantType `json:"attendant,omitempty"`
	// Building associated with the room.
	Building *string `json:"building,omitempty"`
	// This flag indicates component room.
	ComponentRoomNumber *string `json:"componentRoomNumber,omitempty"`
	// List of component room numbers.
	ComponentRoomNumbers []string `json:"componentRoomNumbers,omitempty"`
	// Collection of rooms.
	ComponentRooms []RoomRoomType `json:"componentRooms,omitempty"`
	// Collection of rooms.
	ConnectingRooms []RoomRoomType `json:"connectingRooms,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
	// Room Discrepancies between front office and housekeeping room status and number of persons in the room.
	Discrepancy []RoomDiscrepancyType `json:"discrepancy,omitempty"`
	// Floor of the Room.
	Floor *string `json:"floor,omitempty"`
	// Description for the Floor of the Room.
	FloorDescription *string `json:"floorDescription,omitempty"`
	Guests []FloorPlanRoomGuestType `json:"guests,omitempty"`
	Hold *RoomHoldType `json:"hold,omitempty"`
	Housekeeping *HousekeepingType `json:"housekeeping,omitempty"`
	// Indicates whether the room is a Meeting Room
	MeetingRoom *bool `json:"meetingRoom,omitempty"`
	// Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).
	OutOfOrder []RoomOutOfOrderType `json:"outOfOrder,omitempty"`
	ResvInfo []ReservationShortInfoType `json:"resvInfo,omitempty"`
	RoomAssignmentRating *RatePlanRatingType `json:"roomAssignmentRating,omitempty"`
	// Detail Long Description Of The Room.
	RoomDescription *string `json:"roomDescription,omitempty"`
	// A recurring element that identifies the room features.
	RoomFeatures []RoomFeatureType `json:"roomFeatures,omitempty"`
	// Code of the room.
	RoomId *string `json:"roomId,omitempty"`
	RoomSection *RoomSectionType `json:"roomSection,omitempty"`
	RoomType *RoomTypeShortInfoType `json:"roomType,omitempty"`
	SitePlanSection *SitePlanSectionType `json:"sitePlanSection,omitempty"`
	// This indicates room smoking preference.
	SmokingPreference *string `json:"smokingPreference,omitempty"`
	// This indicates the description of the room smoking preference.
	SmokingPreferenceDescription *string `json:"smokingPreferenceDescription,omitempty"`
	TurndownInfo *TurndownInfoType `json:"turndownInfo,omitempty"`
}

// NewFloorPlanRoomType instantiates a new FloorPlanRoomType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFloorPlanRoomType() *FloorPlanRoomType {
	this := FloorPlanRoomType{}
	return &this
}

// NewFloorPlanRoomTypeWithDefaults instantiates a new FloorPlanRoomType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFloorPlanRoomTypeWithDefaults() *FloorPlanRoomType {
	this := FloorPlanRoomType{}
	return &this
}

// GetAccessible returns the Accessible field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetAccessible() bool {
	if o == nil || IsNil(o.Accessible) {
		var ret bool
		return ret
	}
	return *o.Accessible
}

// GetAccessibleOk returns a tuple with the Accessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Accessible) {
		return nil, false
	}
	return o.Accessible, true
}

// HasAccessible returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasAccessible() bool {
	if o != nil && !IsNil(o.Accessible) {
		return true
	}

	return false
}

// SetAccessible gets a reference to the given bool and assigns it to the Accessible field.
func (o *FloorPlanRoomType) SetAccessible(v bool) {
	o.Accessible = &v
}

// GetAttendant returns the Attendant field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetAttendant() []CurrentServicingAttendantType {
	if o == nil || IsNil(o.Attendant) {
		var ret []CurrentServicingAttendantType
		return ret
	}
	return o.Attendant
}

// GetAttendantOk returns a tuple with the Attendant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetAttendantOk() ([]CurrentServicingAttendantType, bool) {
	if o == nil || IsNil(o.Attendant) {
		return nil, false
	}
	return o.Attendant, true
}

// HasAttendant returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasAttendant() bool {
	if o != nil && !IsNil(o.Attendant) {
		return true
	}

	return false
}

// SetAttendant gets a reference to the given []CurrentServicingAttendantType and assigns it to the Attendant field.
func (o *FloorPlanRoomType) SetAttendant(v []CurrentServicingAttendantType) {
	o.Attendant = v
}

// GetBuilding returns the Building field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetBuilding() string {
	if o == nil || IsNil(o.Building) {
		var ret string
		return ret
	}
	return *o.Building
}

// GetBuildingOk returns a tuple with the Building field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetBuildingOk() (*string, bool) {
	if o == nil || IsNil(o.Building) {
		return nil, false
	}
	return o.Building, true
}

// HasBuilding returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasBuilding() bool {
	if o != nil && !IsNil(o.Building) {
		return true
	}

	return false
}

// SetBuilding gets a reference to the given string and assigns it to the Building field.
func (o *FloorPlanRoomType) SetBuilding(v string) {
	o.Building = &v
}

// GetComponentRoomNumber returns the ComponentRoomNumber field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetComponentRoomNumber() string {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		var ret string
		return ret
	}
	return *o.ComponentRoomNumber
}

// GetComponentRoomNumberOk returns a tuple with the ComponentRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetComponentRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		return nil, false
	}
	return o.ComponentRoomNumber, true
}

// HasComponentRoomNumber returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasComponentRoomNumber() bool {
	if o != nil && !IsNil(o.ComponentRoomNumber) {
		return true
	}

	return false
}

// SetComponentRoomNumber gets a reference to the given string and assigns it to the ComponentRoomNumber field.
func (o *FloorPlanRoomType) SetComponentRoomNumber(v string) {
	o.ComponentRoomNumber = &v
}

// GetComponentRoomNumbers returns the ComponentRoomNumbers field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetComponentRoomNumbers() []string {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		var ret []string
		return ret
	}
	return o.ComponentRoomNumbers
}

// GetComponentRoomNumbersOk returns a tuple with the ComponentRoomNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetComponentRoomNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		return nil, false
	}
	return o.ComponentRoomNumbers, true
}

// HasComponentRoomNumbers returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasComponentRoomNumbers() bool {
	if o != nil && !IsNil(o.ComponentRoomNumbers) {
		return true
	}

	return false
}

// SetComponentRoomNumbers gets a reference to the given []string and assigns it to the ComponentRoomNumbers field.
func (o *FloorPlanRoomType) SetComponentRoomNumbers(v []string) {
	o.ComponentRoomNumbers = v
}

// GetComponentRooms returns the ComponentRooms field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetComponentRooms() []RoomRoomType {
	if o == nil || IsNil(o.ComponentRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ComponentRooms
}

// GetComponentRoomsOk returns a tuple with the ComponentRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetComponentRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ComponentRooms) {
		return nil, false
	}
	return o.ComponentRooms, true
}

// HasComponentRooms returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasComponentRooms() bool {
	if o != nil && !IsNil(o.ComponentRooms) {
		return true
	}

	return false
}

// SetComponentRooms gets a reference to the given []RoomRoomType and assigns it to the ComponentRooms field.
func (o *FloorPlanRoomType) SetComponentRooms(v []RoomRoomType) {
	o.ComponentRooms = v
}

// GetConnectingRooms returns the ConnectingRooms field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetConnectingRooms() []RoomRoomType {
	if o == nil || IsNil(o.ConnectingRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ConnectingRooms
}

// GetConnectingRoomsOk returns a tuple with the ConnectingRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetConnectingRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ConnectingRooms) {
		return nil, false
	}
	return o.ConnectingRooms, true
}

// HasConnectingRooms returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasConnectingRooms() bool {
	if o != nil && !IsNil(o.ConnectingRooms) {
		return true
	}

	return false
}

// SetConnectingRooms gets a reference to the given []RoomRoomType and assigns it to the ConnectingRooms field.
func (o *FloorPlanRoomType) SetConnectingRooms(v []RoomRoomType) {
	o.ConnectingRooms = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *FloorPlanRoomType) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

// GetDiscrepancy returns the Discrepancy field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetDiscrepancy() []RoomDiscrepancyType {
	if o == nil || IsNil(o.Discrepancy) {
		var ret []RoomDiscrepancyType
		return ret
	}
	return o.Discrepancy
}

// GetDiscrepancyOk returns a tuple with the Discrepancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetDiscrepancyOk() ([]RoomDiscrepancyType, bool) {
	if o == nil || IsNil(o.Discrepancy) {
		return nil, false
	}
	return o.Discrepancy, true
}

// HasDiscrepancy returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasDiscrepancy() bool {
	if o != nil && !IsNil(o.Discrepancy) {
		return true
	}

	return false
}

// SetDiscrepancy gets a reference to the given []RoomDiscrepancyType and assigns it to the Discrepancy field.
func (o *FloorPlanRoomType) SetDiscrepancy(v []RoomDiscrepancyType) {
	o.Discrepancy = v
}

// GetFloor returns the Floor field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetFloor() string {
	if o == nil || IsNil(o.Floor) {
		var ret string
		return ret
	}
	return *o.Floor
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetFloorOk() (*string, bool) {
	if o == nil || IsNil(o.Floor) {
		return nil, false
	}
	return o.Floor, true
}

// HasFloor returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasFloor() bool {
	if o != nil && !IsNil(o.Floor) {
		return true
	}

	return false
}

// SetFloor gets a reference to the given string and assigns it to the Floor field.
func (o *FloorPlanRoomType) SetFloor(v string) {
	o.Floor = &v
}

// GetFloorDescription returns the FloorDescription field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetFloorDescription() string {
	if o == nil || IsNil(o.FloorDescription) {
		var ret string
		return ret
	}
	return *o.FloorDescription
}

// GetFloorDescriptionOk returns a tuple with the FloorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetFloorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FloorDescription) {
		return nil, false
	}
	return o.FloorDescription, true
}

// HasFloorDescription returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasFloorDescription() bool {
	if o != nil && !IsNil(o.FloorDescription) {
		return true
	}

	return false
}

// SetFloorDescription gets a reference to the given string and assigns it to the FloorDescription field.
func (o *FloorPlanRoomType) SetFloorDescription(v string) {
	o.FloorDescription = &v
}

// GetGuests returns the Guests field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetGuests() []FloorPlanRoomGuestType {
	if o == nil || IsNil(o.Guests) {
		var ret []FloorPlanRoomGuestType
		return ret
	}
	return o.Guests
}

// GetGuestsOk returns a tuple with the Guests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetGuestsOk() ([]FloorPlanRoomGuestType, bool) {
	if o == nil || IsNil(o.Guests) {
		return nil, false
	}
	return o.Guests, true
}

// HasGuests returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasGuests() bool {
	if o != nil && !IsNil(o.Guests) {
		return true
	}

	return false
}

// SetGuests gets a reference to the given []FloorPlanRoomGuestType and assigns it to the Guests field.
func (o *FloorPlanRoomType) SetGuests(v []FloorPlanRoomGuestType) {
	o.Guests = v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetHold() RoomHoldType {
	if o == nil || IsNil(o.Hold) {
		var ret RoomHoldType
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetHoldOk() (*RoomHoldType, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given RoomHoldType and assigns it to the Hold field.
func (o *FloorPlanRoomType) SetHold(v RoomHoldType) {
	o.Hold = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetHousekeeping() HousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret HousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetHousekeepingOk() (*HousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given HousekeepingType and assigns it to the Housekeeping field.
func (o *FloorPlanRoomType) SetHousekeeping(v HousekeepingType) {
	o.Housekeeping = &v
}

// GetMeetingRoom returns the MeetingRoom field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetMeetingRoom() bool {
	if o == nil || IsNil(o.MeetingRoom) {
		var ret bool
		return ret
	}
	return *o.MeetingRoom
}

// GetMeetingRoomOk returns a tuple with the MeetingRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetMeetingRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.MeetingRoom) {
		return nil, false
	}
	return o.MeetingRoom, true
}

// HasMeetingRoom returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasMeetingRoom() bool {
	if o != nil && !IsNil(o.MeetingRoom) {
		return true
	}

	return false
}

// SetMeetingRoom gets a reference to the given bool and assigns it to the MeetingRoom field.
func (o *FloorPlanRoomType) SetMeetingRoom(v bool) {
	o.MeetingRoom = &v
}

// GetOutOfOrder returns the OutOfOrder field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetOutOfOrder() []RoomOutOfOrderType {
	if o == nil || IsNil(o.OutOfOrder) {
		var ret []RoomOutOfOrderType
		return ret
	}
	return o.OutOfOrder
}

// GetOutOfOrderOk returns a tuple with the OutOfOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetOutOfOrderOk() ([]RoomOutOfOrderType, bool) {
	if o == nil || IsNil(o.OutOfOrder) {
		return nil, false
	}
	return o.OutOfOrder, true
}

// HasOutOfOrder returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasOutOfOrder() bool {
	if o != nil && !IsNil(o.OutOfOrder) {
		return true
	}

	return false
}

// SetOutOfOrder gets a reference to the given []RoomOutOfOrderType and assigns it to the OutOfOrder field.
func (o *FloorPlanRoomType) SetOutOfOrder(v []RoomOutOfOrderType) {
	o.OutOfOrder = v
}

// GetResvInfo returns the ResvInfo field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetResvInfo() []ReservationShortInfoType {
	if o == nil || IsNil(o.ResvInfo) {
		var ret []ReservationShortInfoType
		return ret
	}
	return o.ResvInfo
}

// GetResvInfoOk returns a tuple with the ResvInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetResvInfoOk() ([]ReservationShortInfoType, bool) {
	if o == nil || IsNil(o.ResvInfo) {
		return nil, false
	}
	return o.ResvInfo, true
}

// HasResvInfo returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasResvInfo() bool {
	if o != nil && !IsNil(o.ResvInfo) {
		return true
	}

	return false
}

// SetResvInfo gets a reference to the given []ReservationShortInfoType and assigns it to the ResvInfo field.
func (o *FloorPlanRoomType) SetResvInfo(v []ReservationShortInfoType) {
	o.ResvInfo = v
}

// GetRoomAssignmentRating returns the RoomAssignmentRating field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomAssignmentRating() RatePlanRatingType {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		var ret RatePlanRatingType
		return ret
	}
	return *o.RoomAssignmentRating
}

// GetRoomAssignmentRatingOk returns a tuple with the RoomAssignmentRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomAssignmentRatingOk() (*RatePlanRatingType, bool) {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		return nil, false
	}
	return o.RoomAssignmentRating, true
}

// HasRoomAssignmentRating returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomAssignmentRating() bool {
	if o != nil && !IsNil(o.RoomAssignmentRating) {
		return true
	}

	return false
}

// SetRoomAssignmentRating gets a reference to the given RatePlanRatingType and assigns it to the RoomAssignmentRating field.
func (o *FloorPlanRoomType) SetRoomAssignmentRating(v RatePlanRatingType) {
	o.RoomAssignmentRating = &v
}

// GetRoomDescription returns the RoomDescription field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomDescription() string {
	if o == nil || IsNil(o.RoomDescription) {
		var ret string
		return ret
	}
	return *o.RoomDescription
}

// GetRoomDescriptionOk returns a tuple with the RoomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RoomDescription) {
		return nil, false
	}
	return o.RoomDescription, true
}

// HasRoomDescription returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomDescription() bool {
	if o != nil && !IsNil(o.RoomDescription) {
		return true
	}

	return false
}

// SetRoomDescription gets a reference to the given string and assigns it to the RoomDescription field.
func (o *FloorPlanRoomType) SetRoomDescription(v string) {
	o.RoomDescription = &v
}

// GetRoomFeatures returns the RoomFeatures field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomFeatures() []RoomFeatureType {
	if o == nil || IsNil(o.RoomFeatures) {
		var ret []RoomFeatureType
		return ret
	}
	return o.RoomFeatures
}

// GetRoomFeaturesOk returns a tuple with the RoomFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomFeaturesOk() ([]RoomFeatureType, bool) {
	if o == nil || IsNil(o.RoomFeatures) {
		return nil, false
	}
	return o.RoomFeatures, true
}

// HasRoomFeatures returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomFeatures() bool {
	if o != nil && !IsNil(o.RoomFeatures) {
		return true
	}

	return false
}

// SetRoomFeatures gets a reference to the given []RoomFeatureType and assigns it to the RoomFeatures field.
func (o *FloorPlanRoomType) SetRoomFeatures(v []RoomFeatureType) {
	o.RoomFeatures = v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *FloorPlanRoomType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomSection returns the RoomSection field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomSection() RoomSectionType {
	if o == nil || IsNil(o.RoomSection) {
		var ret RoomSectionType
		return ret
	}
	return *o.RoomSection
}

// GetRoomSectionOk returns a tuple with the RoomSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomSectionOk() (*RoomSectionType, bool) {
	if o == nil || IsNil(o.RoomSection) {
		return nil, false
	}
	return o.RoomSection, true
}

// HasRoomSection returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomSection() bool {
	if o != nil && !IsNil(o.RoomSection) {
		return true
	}

	return false
}

// SetRoomSection gets a reference to the given RoomSectionType and assigns it to the RoomSection field.
func (o *FloorPlanRoomType) SetRoomSection(v RoomSectionType) {
	o.RoomSection = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetRoomType() RoomTypeShortInfoType {
	if o == nil || IsNil(o.RoomType) {
		var ret RoomTypeShortInfoType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetRoomTypeOk() (*RoomTypeShortInfoType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given RoomTypeShortInfoType and assigns it to the RoomType field.
func (o *FloorPlanRoomType) SetRoomType(v RoomTypeShortInfoType) {
	o.RoomType = &v
}

// GetSitePlanSection returns the SitePlanSection field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetSitePlanSection() SitePlanSectionType {
	if o == nil || IsNil(o.SitePlanSection) {
		var ret SitePlanSectionType
		return ret
	}
	return *o.SitePlanSection
}

// GetSitePlanSectionOk returns a tuple with the SitePlanSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetSitePlanSectionOk() (*SitePlanSectionType, bool) {
	if o == nil || IsNil(o.SitePlanSection) {
		return nil, false
	}
	return o.SitePlanSection, true
}

// HasSitePlanSection returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasSitePlanSection() bool {
	if o != nil && !IsNil(o.SitePlanSection) {
		return true
	}

	return false
}

// SetSitePlanSection gets a reference to the given SitePlanSectionType and assigns it to the SitePlanSection field.
func (o *FloorPlanRoomType) SetSitePlanSection(v SitePlanSectionType) {
	o.SitePlanSection = &v
}

// GetSmokingPreference returns the SmokingPreference field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetSmokingPreference() string {
	if o == nil || IsNil(o.SmokingPreference) {
		var ret string
		return ret
	}
	return *o.SmokingPreference
}

// GetSmokingPreferenceOk returns a tuple with the SmokingPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetSmokingPreferenceOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreference) {
		return nil, false
	}
	return o.SmokingPreference, true
}

// HasSmokingPreference returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasSmokingPreference() bool {
	if o != nil && !IsNil(o.SmokingPreference) {
		return true
	}

	return false
}

// SetSmokingPreference gets a reference to the given string and assigns it to the SmokingPreference field.
func (o *FloorPlanRoomType) SetSmokingPreference(v string) {
	o.SmokingPreference = &v
}

// GetSmokingPreferenceDescription returns the SmokingPreferenceDescription field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetSmokingPreferenceDescription() string {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		var ret string
		return ret
	}
	return *o.SmokingPreferenceDescription
}

// GetSmokingPreferenceDescriptionOk returns a tuple with the SmokingPreferenceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetSmokingPreferenceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		return nil, false
	}
	return o.SmokingPreferenceDescription, true
}

// HasSmokingPreferenceDescription returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasSmokingPreferenceDescription() bool {
	if o != nil && !IsNil(o.SmokingPreferenceDescription) {
		return true
	}

	return false
}

// SetSmokingPreferenceDescription gets a reference to the given string and assigns it to the SmokingPreferenceDescription field.
func (o *FloorPlanRoomType) SetSmokingPreferenceDescription(v string) {
	o.SmokingPreferenceDescription = &v
}

// GetTurndownInfo returns the TurndownInfo field value if set, zero value otherwise.
func (o *FloorPlanRoomType) GetTurndownInfo() TurndownInfoType {
	if o == nil || IsNil(o.TurndownInfo) {
		var ret TurndownInfoType
		return ret
	}
	return *o.TurndownInfo
}

// GetTurndownInfoOk returns a tuple with the TurndownInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloorPlanRoomType) GetTurndownInfoOk() (*TurndownInfoType, bool) {
	if o == nil || IsNil(o.TurndownInfo) {
		return nil, false
	}
	return o.TurndownInfo, true
}

// HasTurndownInfo returns a boolean if a field has been set.
func (o *FloorPlanRoomType) HasTurndownInfo() bool {
	if o != nil && !IsNil(o.TurndownInfo) {
		return true
	}

	return false
}

// SetTurndownInfo gets a reference to the given TurndownInfoType and assigns it to the TurndownInfo field.
func (o *FloorPlanRoomType) SetTurndownInfo(v TurndownInfoType) {
	o.TurndownInfo = &v
}

func (o FloorPlanRoomType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FloorPlanRoomType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accessible) {
		toSerialize["accessible"] = o.Accessible
	}
	if !IsNil(o.Attendant) {
		toSerialize["attendant"] = o.Attendant
	}
	if !IsNil(o.Building) {
		toSerialize["building"] = o.Building
	}
	if !IsNil(o.ComponentRoomNumber) {
		toSerialize["componentRoomNumber"] = o.ComponentRoomNumber
	}
	if !IsNil(o.ComponentRoomNumbers) {
		toSerialize["componentRoomNumbers"] = o.ComponentRoomNumbers
	}
	if !IsNil(o.ComponentRooms) {
		toSerialize["componentRooms"] = o.ComponentRooms
	}
	if !IsNil(o.ConnectingRooms) {
		toSerialize["connectingRooms"] = o.ConnectingRooms
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Discrepancy) {
		toSerialize["discrepancy"] = o.Discrepancy
	}
	if !IsNil(o.Floor) {
		toSerialize["floor"] = o.Floor
	}
	if !IsNil(o.FloorDescription) {
		toSerialize["floorDescription"] = o.FloorDescription
	}
	if !IsNil(o.Guests) {
		toSerialize["guests"] = o.Guests
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.MeetingRoom) {
		toSerialize["meetingRoom"] = o.MeetingRoom
	}
	if !IsNil(o.OutOfOrder) {
		toSerialize["outOfOrder"] = o.OutOfOrder
	}
	if !IsNil(o.ResvInfo) {
		toSerialize["resvInfo"] = o.ResvInfo
	}
	if !IsNil(o.RoomAssignmentRating) {
		toSerialize["roomAssignmentRating"] = o.RoomAssignmentRating
	}
	if !IsNil(o.RoomDescription) {
		toSerialize["roomDescription"] = o.RoomDescription
	}
	if !IsNil(o.RoomFeatures) {
		toSerialize["roomFeatures"] = o.RoomFeatures
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomSection) {
		toSerialize["roomSection"] = o.RoomSection
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.SitePlanSection) {
		toSerialize["sitePlanSection"] = o.SitePlanSection
	}
	if !IsNil(o.SmokingPreference) {
		toSerialize["smokingPreference"] = o.SmokingPreference
	}
	if !IsNil(o.SmokingPreferenceDescription) {
		toSerialize["smokingPreferenceDescription"] = o.SmokingPreferenceDescription
	}
	if !IsNil(o.TurndownInfo) {
		toSerialize["turndownInfo"] = o.TurndownInfo
	}
	return toSerialize, nil
}

type NullableFloorPlanRoomType struct {
	value *FloorPlanRoomType
	isSet bool
}

func (v NullableFloorPlanRoomType) Get() *FloorPlanRoomType {
	return v.value
}

func (v *NullableFloorPlanRoomType) Set(val *FloorPlanRoomType) {
	v.value = val
	v.isSet = true
}

func (v NullableFloorPlanRoomType) IsSet() bool {
	return v.isSet
}

func (v *NullableFloorPlanRoomType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFloorPlanRoomType(val *FloorPlanRoomType) *NullableFloorPlanRoomType {
	return &NullableFloorPlanRoomType{value: val, isSet: true}
}

func (v NullableFloorPlanRoomType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFloorPlanRoomType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


