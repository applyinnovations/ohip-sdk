/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomSummaryType{}

// RoomSummaryType struct for RoomSummaryType
type RoomSummaryType struct {
	AssignedRooms *AssignedRoomsSummaryType `json:"assignedRooms,omitempty"`
	UnassignedRooms *UnassignedRoomsSummaryType `json:"unassignedRooms,omitempty"`
}

// NewRoomSummaryType instantiates a new RoomSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomSummaryType() *RoomSummaryType {
	this := RoomSummaryType{}
	return &this
}

// NewRoomSummaryTypeWithDefaults instantiates a new RoomSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomSummaryTypeWithDefaults() *RoomSummaryType {
	this := RoomSummaryType{}
	return &this
}

// GetAssignedRooms returns the AssignedRooms field value if set, zero value otherwise.
func (o *RoomSummaryType) GetAssignedRooms() AssignedRoomsSummaryType {
	if o == nil || IsNil(o.AssignedRooms) {
		var ret AssignedRoomsSummaryType
		return ret
	}
	return *o.AssignedRooms
}

// GetAssignedRoomsOk returns a tuple with the AssignedRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSummaryType) GetAssignedRoomsOk() (*AssignedRoomsSummaryType, bool) {
	if o == nil || IsNil(o.AssignedRooms) {
		return nil, false
	}
	return o.AssignedRooms, true
}

// HasAssignedRooms returns a boolean if a field has been set.
func (o *RoomSummaryType) HasAssignedRooms() bool {
	if o != nil && !IsNil(o.AssignedRooms) {
		return true
	}

	return false
}

// SetAssignedRooms gets a reference to the given AssignedRoomsSummaryType and assigns it to the AssignedRooms field.
func (o *RoomSummaryType) SetAssignedRooms(v AssignedRoomsSummaryType) {
	o.AssignedRooms = &v
}

// GetUnassignedRooms returns the UnassignedRooms field value if set, zero value otherwise.
func (o *RoomSummaryType) GetUnassignedRooms() UnassignedRoomsSummaryType {
	if o == nil || IsNil(o.UnassignedRooms) {
		var ret UnassignedRoomsSummaryType
		return ret
	}
	return *o.UnassignedRooms
}

// GetUnassignedRoomsOk returns a tuple with the UnassignedRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomSummaryType) GetUnassignedRoomsOk() (*UnassignedRoomsSummaryType, bool) {
	if o == nil || IsNil(o.UnassignedRooms) {
		return nil, false
	}
	return o.UnassignedRooms, true
}

// HasUnassignedRooms returns a boolean if a field has been set.
func (o *RoomSummaryType) HasUnassignedRooms() bool {
	if o != nil && !IsNil(o.UnassignedRooms) {
		return true
	}

	return false
}

// SetUnassignedRooms gets a reference to the given UnassignedRoomsSummaryType and assigns it to the UnassignedRooms field.
func (o *RoomSummaryType) SetUnassignedRooms(v UnassignedRoomsSummaryType) {
	o.UnassignedRooms = &v
}

func (o RoomSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedRooms) {
		toSerialize["assignedRooms"] = o.AssignedRooms
	}
	if !IsNil(o.UnassignedRooms) {
		toSerialize["unassignedRooms"] = o.UnassignedRooms
	}
	return toSerialize, nil
}

type NullableRoomSummaryType struct {
	value *RoomSummaryType
	isSet bool
}

func (v NullableRoomSummaryType) Get() *RoomSummaryType {
	return v.value
}

func (v *NullableRoomSummaryType) Set(val *RoomSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomSummaryType(val *RoomSummaryType) *NullableRoomSummaryType {
	return &NullableRoomSummaryType{value: val, isSet: true}
}

func (v NullableRoomSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


