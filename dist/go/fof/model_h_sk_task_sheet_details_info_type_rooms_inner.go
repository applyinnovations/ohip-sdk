/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the HSKTaskSheetDetailsInfoTypeRoomsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HSKTaskSheetDetailsInfoTypeRoomsInner{}

// HSKTaskSheetDetailsInfoTypeRoomsInner This type represents the primary room attributes.
type HSKTaskSheetDetailsInfoTypeRoomsInner struct {
	RoomType *RoomTypeShortInfoType `json:"roomType,omitempty"`
	// Floor of the Room.
	Floor *string `json:"floor,omitempty"`
	// Description for the Floor of the Room.
	FloorDescription *string `json:"floorDescription,omitempty"`
	// A recurring element that identifies the room features.
	RoomFeatures []RoomFeatureType `json:"roomFeatures,omitempty"`
	// Detail Long Description Of The Room.
	RoomDescription *string `json:"roomDescription,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
	// This indicates room smoking preference.
	SmokingPreference *string `json:"smokingPreference,omitempty"`
	// This indicates the description of the room smoking preference.
	SmokingPreferenceDescription *string `json:"smokingPreferenceDescription,omitempty"`
	// Building associated with the room.
	Building *string `json:"building,omitempty"`
	RoomAssignmentRating *RatePlanRatingType `json:"roomAssignmentRating,omitempty"`
	// Indicates whether the room is accessibility compliant.
	Accessible *bool `json:"accessible,omitempty"`
	// Code of the room.
	RoomId *string `json:"roomId,omitempty"`
	// Indicates whether the room is a Meeting Room
	MeetingRoom *bool `json:"meetingRoom,omitempty"`
	RoomSection *RoomSectionType `json:"roomSection,omitempty"`
	Housekeeping *HousekeepingType `json:"housekeeping,omitempty"`
	// Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).
	OutOfOrder []RoomOutOfOrderType `json:"outOfOrder,omitempty"`
	// Room Discrepancies between front office and housekeeping room status and number of persons in the room.
	Discrepancy []RoomDiscrepancyType `json:"discrepancy,omitempty"`
	SitePlanSection *SitePlanSectionType `json:"sitePlanSection,omitempty"`
	// This flag indicates component room.
	ComponentRoomNumber *string `json:"componentRoomNumber,omitempty"`
	// Collection of rooms.
	ConnectingRooms []RoomRoomType `json:"connectingRooms,omitempty"`
	// Collection of rooms.
	ComponentRooms []RoomRoomType `json:"componentRooms,omitempty"`
	Attendant []CurrentServicingAttendantType `json:"attendant,omitempty"`
	Hold *RoomHoldType `json:"hold,omitempty"`
	TurndownInfo *TurndownInfoType `json:"turndownInfo,omitempty"`
	ResvInfo []ReservationShortInfoType `json:"resvInfo,omitempty"`
	// List of component room numbers.
	ComponentRoomNumbers []string `json:"componentRoomNumbers,omitempty"`
	ReservationInfo []ReservationInfoType `json:"reservationInfo,omitempty"`
	// Information regarding the current servicing of the room.
	ServicingInfo []CurrentServicingAttendantType `json:"servicingInfo,omitempty"`
	AttendantTimeEntriesInfo []HSKAttendantTimeLogsType `json:"attendantTimeEntriesInfo,omitempty"`
	// Task Sheet instructions at the room level.
	Instructions *string `json:"instructions,omitempty"`
	// Total credits for this room.
	TotalCredits *int32 `json:"totalCredits,omitempty"`
	// The wake up time of the current date
	WakeUpTime *string `json:"wakeUpTime,omitempty"`
	// The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.
	CleaningSequence *int32 `json:"cleaningSequence,omitempty"`
	// The sequence for this room from configuration.
	DefaultSequence *int32 `json:"defaultSequence,omitempty"`
	// The priority for this room.
	HasPriority *bool `json:"hasPriority,omitempty"`
	// The actual time spent by the attendant when doing a service to the room.
	ActualTimeInMins *int32 `json:"actualTimeInMins,omitempty"`
	// The number of skip count for that room.
	RoomSkipCount *int32 `json:"roomSkipCount,omitempty"`
}

// NewHSKTaskSheetDetailsInfoTypeRoomsInner instantiates a new HSKTaskSheetDetailsInfoTypeRoomsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHSKTaskSheetDetailsInfoTypeRoomsInner() *HSKTaskSheetDetailsInfoTypeRoomsInner {
	this := HSKTaskSheetDetailsInfoTypeRoomsInner{}
	return &this
}

// NewHSKTaskSheetDetailsInfoTypeRoomsInnerWithDefaults instantiates a new HSKTaskSheetDetailsInfoTypeRoomsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHSKTaskSheetDetailsInfoTypeRoomsInnerWithDefaults() *HSKTaskSheetDetailsInfoTypeRoomsInner {
	this := HSKTaskSheetDetailsInfoTypeRoomsInner{}
	return &this
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomType() RoomTypeShortInfoType {
	if o == nil || IsNil(o.RoomType) {
		var ret RoomTypeShortInfoType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomTypeOk() (*RoomTypeShortInfoType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given RoomTypeShortInfoType and assigns it to the RoomType field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomType(v RoomTypeShortInfoType) {
	o.RoomType = &v
}

// GetFloor returns the Floor field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetFloor() string {
	if o == nil || IsNil(o.Floor) {
		var ret string
		return ret
	}
	return *o.Floor
}

// GetFloorOk returns a tuple with the Floor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetFloorOk() (*string, bool) {
	if o == nil || IsNil(o.Floor) {
		return nil, false
	}
	return o.Floor, true
}

// HasFloor returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasFloor() bool {
	if o != nil && !IsNil(o.Floor) {
		return true
	}

	return false
}

// SetFloor gets a reference to the given string and assigns it to the Floor field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetFloor(v string) {
	o.Floor = &v
}

// GetFloorDescription returns the FloorDescription field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetFloorDescription() string {
	if o == nil || IsNil(o.FloorDescription) {
		var ret string
		return ret
	}
	return *o.FloorDescription
}

// GetFloorDescriptionOk returns a tuple with the FloorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetFloorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FloorDescription) {
		return nil, false
	}
	return o.FloorDescription, true
}

// HasFloorDescription returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasFloorDescription() bool {
	if o != nil && !IsNil(o.FloorDescription) {
		return true
	}

	return false
}

// SetFloorDescription gets a reference to the given string and assigns it to the FloorDescription field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetFloorDescription(v string) {
	o.FloorDescription = &v
}

// GetRoomFeatures returns the RoomFeatures field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomFeatures() []RoomFeatureType {
	if o == nil || IsNil(o.RoomFeatures) {
		var ret []RoomFeatureType
		return ret
	}
	return o.RoomFeatures
}

// GetRoomFeaturesOk returns a tuple with the RoomFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomFeaturesOk() ([]RoomFeatureType, bool) {
	if o == nil || IsNil(o.RoomFeatures) {
		return nil, false
	}
	return o.RoomFeatures, true
}

// HasRoomFeatures returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomFeatures() bool {
	if o != nil && !IsNil(o.RoomFeatures) {
		return true
	}

	return false
}

// SetRoomFeatures gets a reference to the given []RoomFeatureType and assigns it to the RoomFeatures field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomFeatures(v []RoomFeatureType) {
	o.RoomFeatures = v
}

// GetRoomDescription returns the RoomDescription field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomDescription() string {
	if o == nil || IsNil(o.RoomDescription) {
		var ret string
		return ret
	}
	return *o.RoomDescription
}

// GetRoomDescriptionOk returns a tuple with the RoomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RoomDescription) {
		return nil, false
	}
	return o.RoomDescription, true
}

// HasRoomDescription returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomDescription() bool {
	if o != nil && !IsNil(o.RoomDescription) {
		return true
	}

	return false
}

// SetRoomDescription gets a reference to the given string and assigns it to the RoomDescription field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomDescription(v string) {
	o.RoomDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

// GetSmokingPreference returns the SmokingPreference field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSmokingPreference() string {
	if o == nil || IsNil(o.SmokingPreference) {
		var ret string
		return ret
	}
	return *o.SmokingPreference
}

// GetSmokingPreferenceOk returns a tuple with the SmokingPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSmokingPreferenceOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreference) {
		return nil, false
	}
	return o.SmokingPreference, true
}

// HasSmokingPreference returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasSmokingPreference() bool {
	if o != nil && !IsNil(o.SmokingPreference) {
		return true
	}

	return false
}

// SetSmokingPreference gets a reference to the given string and assigns it to the SmokingPreference field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetSmokingPreference(v string) {
	o.SmokingPreference = &v
}

// GetSmokingPreferenceDescription returns the SmokingPreferenceDescription field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSmokingPreferenceDescription() string {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		var ret string
		return ret
	}
	return *o.SmokingPreferenceDescription
}

// GetSmokingPreferenceDescriptionOk returns a tuple with the SmokingPreferenceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSmokingPreferenceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.SmokingPreferenceDescription) {
		return nil, false
	}
	return o.SmokingPreferenceDescription, true
}

// HasSmokingPreferenceDescription returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasSmokingPreferenceDescription() bool {
	if o != nil && !IsNil(o.SmokingPreferenceDescription) {
		return true
	}

	return false
}

// SetSmokingPreferenceDescription gets a reference to the given string and assigns it to the SmokingPreferenceDescription field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetSmokingPreferenceDescription(v string) {
	o.SmokingPreferenceDescription = &v
}

// GetBuilding returns the Building field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetBuilding() string {
	if o == nil || IsNil(o.Building) {
		var ret string
		return ret
	}
	return *o.Building
}

// GetBuildingOk returns a tuple with the Building field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetBuildingOk() (*string, bool) {
	if o == nil || IsNil(o.Building) {
		return nil, false
	}
	return o.Building, true
}

// HasBuilding returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasBuilding() bool {
	if o != nil && !IsNil(o.Building) {
		return true
	}

	return false
}

// SetBuilding gets a reference to the given string and assigns it to the Building field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetBuilding(v string) {
	o.Building = &v
}

// GetRoomAssignmentRating returns the RoomAssignmentRating field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomAssignmentRating() RatePlanRatingType {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		var ret RatePlanRatingType
		return ret
	}
	return *o.RoomAssignmentRating
}

// GetRoomAssignmentRatingOk returns a tuple with the RoomAssignmentRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomAssignmentRatingOk() (*RatePlanRatingType, bool) {
	if o == nil || IsNil(o.RoomAssignmentRating) {
		return nil, false
	}
	return o.RoomAssignmentRating, true
}

// HasRoomAssignmentRating returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomAssignmentRating() bool {
	if o != nil && !IsNil(o.RoomAssignmentRating) {
		return true
	}

	return false
}

// SetRoomAssignmentRating gets a reference to the given RatePlanRatingType and assigns it to the RoomAssignmentRating field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomAssignmentRating(v RatePlanRatingType) {
	o.RoomAssignmentRating = &v
}

// GetAccessible returns the Accessible field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAccessible() bool {
	if o == nil || IsNil(o.Accessible) {
		var ret bool
		return ret
	}
	return *o.Accessible
}

// GetAccessibleOk returns a tuple with the Accessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Accessible) {
		return nil, false
	}
	return o.Accessible, true
}

// HasAccessible returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasAccessible() bool {
	if o != nil && !IsNil(o.Accessible) {
		return true
	}

	return false
}

// SetAccessible gets a reference to the given bool and assigns it to the Accessible field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetAccessible(v bool) {
	o.Accessible = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomId(v string) {
	o.RoomId = &v
}

// GetMeetingRoom returns the MeetingRoom field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetMeetingRoom() bool {
	if o == nil || IsNil(o.MeetingRoom) {
		var ret bool
		return ret
	}
	return *o.MeetingRoom
}

// GetMeetingRoomOk returns a tuple with the MeetingRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetMeetingRoomOk() (*bool, bool) {
	if o == nil || IsNil(o.MeetingRoom) {
		return nil, false
	}
	return o.MeetingRoom, true
}

// HasMeetingRoom returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasMeetingRoom() bool {
	if o != nil && !IsNil(o.MeetingRoom) {
		return true
	}

	return false
}

// SetMeetingRoom gets a reference to the given bool and assigns it to the MeetingRoom field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetMeetingRoom(v bool) {
	o.MeetingRoom = &v
}

// GetRoomSection returns the RoomSection field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomSection() RoomSectionType {
	if o == nil || IsNil(o.RoomSection) {
		var ret RoomSectionType
		return ret
	}
	return *o.RoomSection
}

// GetRoomSectionOk returns a tuple with the RoomSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomSectionOk() (*RoomSectionType, bool) {
	if o == nil || IsNil(o.RoomSection) {
		return nil, false
	}
	return o.RoomSection, true
}

// HasRoomSection returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomSection() bool {
	if o != nil && !IsNil(o.RoomSection) {
		return true
	}

	return false
}

// SetRoomSection gets a reference to the given RoomSectionType and assigns it to the RoomSection field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomSection(v RoomSectionType) {
	o.RoomSection = &v
}

// GetHousekeeping returns the Housekeeping field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHousekeeping() HousekeepingType {
	if o == nil || IsNil(o.Housekeeping) {
		var ret HousekeepingType
		return ret
	}
	return *o.Housekeeping
}

// GetHousekeepingOk returns a tuple with the Housekeeping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHousekeepingOk() (*HousekeepingType, bool) {
	if o == nil || IsNil(o.Housekeeping) {
		return nil, false
	}
	return o.Housekeeping, true
}

// HasHousekeeping returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasHousekeeping() bool {
	if o != nil && !IsNil(o.Housekeeping) {
		return true
	}

	return false
}

// SetHousekeeping gets a reference to the given HousekeepingType and assigns it to the Housekeeping field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetHousekeeping(v HousekeepingType) {
	o.Housekeeping = &v
}

// GetOutOfOrder returns the OutOfOrder field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetOutOfOrder() []RoomOutOfOrderType {
	if o == nil || IsNil(o.OutOfOrder) {
		var ret []RoomOutOfOrderType
		return ret
	}
	return o.OutOfOrder
}

// GetOutOfOrderOk returns a tuple with the OutOfOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetOutOfOrderOk() ([]RoomOutOfOrderType, bool) {
	if o == nil || IsNil(o.OutOfOrder) {
		return nil, false
	}
	return o.OutOfOrder, true
}

// HasOutOfOrder returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasOutOfOrder() bool {
	if o != nil && !IsNil(o.OutOfOrder) {
		return true
	}

	return false
}

// SetOutOfOrder gets a reference to the given []RoomOutOfOrderType and assigns it to the OutOfOrder field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetOutOfOrder(v []RoomOutOfOrderType) {
	o.OutOfOrder = v
}

// GetDiscrepancy returns the Discrepancy field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDiscrepancy() []RoomDiscrepancyType {
	if o == nil || IsNil(o.Discrepancy) {
		var ret []RoomDiscrepancyType
		return ret
	}
	return o.Discrepancy
}

// GetDiscrepancyOk returns a tuple with the Discrepancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDiscrepancyOk() ([]RoomDiscrepancyType, bool) {
	if o == nil || IsNil(o.Discrepancy) {
		return nil, false
	}
	return o.Discrepancy, true
}

// HasDiscrepancy returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasDiscrepancy() bool {
	if o != nil && !IsNil(o.Discrepancy) {
		return true
	}

	return false
}

// SetDiscrepancy gets a reference to the given []RoomDiscrepancyType and assigns it to the Discrepancy field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetDiscrepancy(v []RoomDiscrepancyType) {
	o.Discrepancy = v
}

// GetSitePlanSection returns the SitePlanSection field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSitePlanSection() SitePlanSectionType {
	if o == nil || IsNil(o.SitePlanSection) {
		var ret SitePlanSectionType
		return ret
	}
	return *o.SitePlanSection
}

// GetSitePlanSectionOk returns a tuple with the SitePlanSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetSitePlanSectionOk() (*SitePlanSectionType, bool) {
	if o == nil || IsNil(o.SitePlanSection) {
		return nil, false
	}
	return o.SitePlanSection, true
}

// HasSitePlanSection returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasSitePlanSection() bool {
	if o != nil && !IsNil(o.SitePlanSection) {
		return true
	}

	return false
}

// SetSitePlanSection gets a reference to the given SitePlanSectionType and assigns it to the SitePlanSection field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetSitePlanSection(v SitePlanSectionType) {
	o.SitePlanSection = &v
}

// GetComponentRoomNumber returns the ComponentRoomNumber field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRoomNumber() string {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		var ret string
		return ret
	}
	return *o.ComponentRoomNumber
}

// GetComponentRoomNumberOk returns a tuple with the ComponentRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumber) {
		return nil, false
	}
	return o.ComponentRoomNumber, true
}

// HasComponentRoomNumber returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasComponentRoomNumber() bool {
	if o != nil && !IsNil(o.ComponentRoomNumber) {
		return true
	}

	return false
}

// SetComponentRoomNumber gets a reference to the given string and assigns it to the ComponentRoomNumber field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetComponentRoomNumber(v string) {
	o.ComponentRoomNumber = &v
}

// GetConnectingRooms returns the ConnectingRooms field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetConnectingRooms() []RoomRoomType {
	if o == nil || IsNil(o.ConnectingRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ConnectingRooms
}

// GetConnectingRoomsOk returns a tuple with the ConnectingRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetConnectingRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ConnectingRooms) {
		return nil, false
	}
	return o.ConnectingRooms, true
}

// HasConnectingRooms returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasConnectingRooms() bool {
	if o != nil && !IsNil(o.ConnectingRooms) {
		return true
	}

	return false
}

// SetConnectingRooms gets a reference to the given []RoomRoomType and assigns it to the ConnectingRooms field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetConnectingRooms(v []RoomRoomType) {
	o.ConnectingRooms = v
}

// GetComponentRooms returns the ComponentRooms field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRooms() []RoomRoomType {
	if o == nil || IsNil(o.ComponentRooms) {
		var ret []RoomRoomType
		return ret
	}
	return o.ComponentRooms
}

// GetComponentRoomsOk returns a tuple with the ComponentRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRoomsOk() ([]RoomRoomType, bool) {
	if o == nil || IsNil(o.ComponentRooms) {
		return nil, false
	}
	return o.ComponentRooms, true
}

// HasComponentRooms returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasComponentRooms() bool {
	if o != nil && !IsNil(o.ComponentRooms) {
		return true
	}

	return false
}

// SetComponentRooms gets a reference to the given []RoomRoomType and assigns it to the ComponentRooms field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetComponentRooms(v []RoomRoomType) {
	o.ComponentRooms = v
}

// GetAttendant returns the Attendant field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAttendant() []CurrentServicingAttendantType {
	if o == nil || IsNil(o.Attendant) {
		var ret []CurrentServicingAttendantType
		return ret
	}
	return o.Attendant
}

// GetAttendantOk returns a tuple with the Attendant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAttendantOk() ([]CurrentServicingAttendantType, bool) {
	if o == nil || IsNil(o.Attendant) {
		return nil, false
	}
	return o.Attendant, true
}

// HasAttendant returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasAttendant() bool {
	if o != nil && !IsNil(o.Attendant) {
		return true
	}

	return false
}

// SetAttendant gets a reference to the given []CurrentServicingAttendantType and assigns it to the Attendant field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetAttendant(v []CurrentServicingAttendantType) {
	o.Attendant = v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHold() RoomHoldType {
	if o == nil || IsNil(o.Hold) {
		var ret RoomHoldType
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHoldOk() (*RoomHoldType, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given RoomHoldType and assigns it to the Hold field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetHold(v RoomHoldType) {
	o.Hold = &v
}

// GetTurndownInfo returns the TurndownInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetTurndownInfo() TurndownInfoType {
	if o == nil || IsNil(o.TurndownInfo) {
		var ret TurndownInfoType
		return ret
	}
	return *o.TurndownInfo
}

// GetTurndownInfoOk returns a tuple with the TurndownInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetTurndownInfoOk() (*TurndownInfoType, bool) {
	if o == nil || IsNil(o.TurndownInfo) {
		return nil, false
	}
	return o.TurndownInfo, true
}

// HasTurndownInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasTurndownInfo() bool {
	if o != nil && !IsNil(o.TurndownInfo) {
		return true
	}

	return false
}

// SetTurndownInfo gets a reference to the given TurndownInfoType and assigns it to the TurndownInfo field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetTurndownInfo(v TurndownInfoType) {
	o.TurndownInfo = &v
}

// GetResvInfo returns the ResvInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetResvInfo() []ReservationShortInfoType {
	if o == nil || IsNil(o.ResvInfo) {
		var ret []ReservationShortInfoType
		return ret
	}
	return o.ResvInfo
}

// GetResvInfoOk returns a tuple with the ResvInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetResvInfoOk() ([]ReservationShortInfoType, bool) {
	if o == nil || IsNil(o.ResvInfo) {
		return nil, false
	}
	return o.ResvInfo, true
}

// HasResvInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasResvInfo() bool {
	if o != nil && !IsNil(o.ResvInfo) {
		return true
	}

	return false
}

// SetResvInfo gets a reference to the given []ReservationShortInfoType and assigns it to the ResvInfo field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetResvInfo(v []ReservationShortInfoType) {
	o.ResvInfo = v
}

// GetComponentRoomNumbers returns the ComponentRoomNumbers field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRoomNumbers() []string {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		var ret []string
		return ret
	}
	return o.ComponentRoomNumbers
}

// GetComponentRoomNumbersOk returns a tuple with the ComponentRoomNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetComponentRoomNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.ComponentRoomNumbers) {
		return nil, false
	}
	return o.ComponentRoomNumbers, true
}

// HasComponentRoomNumbers returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasComponentRoomNumbers() bool {
	if o != nil && !IsNil(o.ComponentRoomNumbers) {
		return true
	}

	return false
}

// SetComponentRoomNumbers gets a reference to the given []string and assigns it to the ComponentRoomNumbers field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetComponentRoomNumbers(v []string) {
	o.ComponentRoomNumbers = v
}

// GetReservationInfo returns the ReservationInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetReservationInfo() []ReservationInfoType {
	if o == nil || IsNil(o.ReservationInfo) {
		var ret []ReservationInfoType
		return ret
	}
	return o.ReservationInfo
}

// GetReservationInfoOk returns a tuple with the ReservationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetReservationInfoOk() ([]ReservationInfoType, bool) {
	if o == nil || IsNil(o.ReservationInfo) {
		return nil, false
	}
	return o.ReservationInfo, true
}

// HasReservationInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasReservationInfo() bool {
	if o != nil && !IsNil(o.ReservationInfo) {
		return true
	}

	return false
}

// SetReservationInfo gets a reference to the given []ReservationInfoType and assigns it to the ReservationInfo field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetReservationInfo(v []ReservationInfoType) {
	o.ReservationInfo = v
}

// GetServicingInfo returns the ServicingInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetServicingInfo() []CurrentServicingAttendantType {
	if o == nil || IsNil(o.ServicingInfo) {
		var ret []CurrentServicingAttendantType
		return ret
	}
	return o.ServicingInfo
}

// GetServicingInfoOk returns a tuple with the ServicingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetServicingInfoOk() ([]CurrentServicingAttendantType, bool) {
	if o == nil || IsNil(o.ServicingInfo) {
		return nil, false
	}
	return o.ServicingInfo, true
}

// HasServicingInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasServicingInfo() bool {
	if o != nil && !IsNil(o.ServicingInfo) {
		return true
	}

	return false
}

// SetServicingInfo gets a reference to the given []CurrentServicingAttendantType and assigns it to the ServicingInfo field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetServicingInfo(v []CurrentServicingAttendantType) {
	o.ServicingInfo = v
}

// GetAttendantTimeEntriesInfo returns the AttendantTimeEntriesInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAttendantTimeEntriesInfo() []HSKAttendantTimeLogsType {
	if o == nil || IsNil(o.AttendantTimeEntriesInfo) {
		var ret []HSKAttendantTimeLogsType
		return ret
	}
	return o.AttendantTimeEntriesInfo
}

// GetAttendantTimeEntriesInfoOk returns a tuple with the AttendantTimeEntriesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetAttendantTimeEntriesInfoOk() ([]HSKAttendantTimeLogsType, bool) {
	if o == nil || IsNil(o.AttendantTimeEntriesInfo) {
		return nil, false
	}
	return o.AttendantTimeEntriesInfo, true
}

// HasAttendantTimeEntriesInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasAttendantTimeEntriesInfo() bool {
	if o != nil && !IsNil(o.AttendantTimeEntriesInfo) {
		return true
	}

	return false
}

// SetAttendantTimeEntriesInfo gets a reference to the given []HSKAttendantTimeLogsType and assigns it to the AttendantTimeEntriesInfo field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetAttendantTimeEntriesInfo(v []HSKAttendantTimeLogsType) {
	o.AttendantTimeEntriesInfo = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetInstructions(v string) {
	o.Instructions = &v
}

// GetTotalCredits returns the TotalCredits field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetTotalCredits() int32 {
	if o == nil || IsNil(o.TotalCredits) {
		var ret int32
		return ret
	}
	return *o.TotalCredits
}

// GetTotalCreditsOk returns a tuple with the TotalCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetTotalCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCredits) {
		return nil, false
	}
	return o.TotalCredits, true
}

// HasTotalCredits returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasTotalCredits() bool {
	if o != nil && !IsNil(o.TotalCredits) {
		return true
	}

	return false
}

// SetTotalCredits gets a reference to the given int32 and assigns it to the TotalCredits field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetTotalCredits(v int32) {
	o.TotalCredits = &v
}

// GetWakeUpTime returns the WakeUpTime field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetWakeUpTime() string {
	if o == nil || IsNil(o.WakeUpTime) {
		var ret string
		return ret
	}
	return *o.WakeUpTime
}

// GetWakeUpTimeOk returns a tuple with the WakeUpTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetWakeUpTimeOk() (*string, bool) {
	if o == nil || IsNil(o.WakeUpTime) {
		return nil, false
	}
	return o.WakeUpTime, true
}

// HasWakeUpTime returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasWakeUpTime() bool {
	if o != nil && !IsNil(o.WakeUpTime) {
		return true
	}

	return false
}

// SetWakeUpTime gets a reference to the given string and assigns it to the WakeUpTime field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetWakeUpTime(v string) {
	o.WakeUpTime = &v
}

// GetCleaningSequence returns the CleaningSequence field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetCleaningSequence() int32 {
	if o == nil || IsNil(o.CleaningSequence) {
		var ret int32
		return ret
	}
	return *o.CleaningSequence
}

// GetCleaningSequenceOk returns a tuple with the CleaningSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetCleaningSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.CleaningSequence) {
		return nil, false
	}
	return o.CleaningSequence, true
}

// HasCleaningSequence returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasCleaningSequence() bool {
	if o != nil && !IsNil(o.CleaningSequence) {
		return true
	}

	return false
}

// SetCleaningSequence gets a reference to the given int32 and assigns it to the CleaningSequence field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetCleaningSequence(v int32) {
	o.CleaningSequence = &v
}

// GetDefaultSequence returns the DefaultSequence field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDefaultSequence() int32 {
	if o == nil || IsNil(o.DefaultSequence) {
		var ret int32
		return ret
	}
	return *o.DefaultSequence
}

// GetDefaultSequenceOk returns a tuple with the DefaultSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetDefaultSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultSequence) {
		return nil, false
	}
	return o.DefaultSequence, true
}

// HasDefaultSequence returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasDefaultSequence() bool {
	if o != nil && !IsNil(o.DefaultSequence) {
		return true
	}

	return false
}

// SetDefaultSequence gets a reference to the given int32 and assigns it to the DefaultSequence field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetDefaultSequence(v int32) {
	o.DefaultSequence = &v
}

// GetHasPriority returns the HasPriority field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHasPriority() bool {
	if o == nil || IsNil(o.HasPriority) {
		var ret bool
		return ret
	}
	return *o.HasPriority
}

// GetHasPriorityOk returns a tuple with the HasPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetHasPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPriority) {
		return nil, false
	}
	return o.HasPriority, true
}

// HasHasPriority returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasHasPriority() bool {
	if o != nil && !IsNil(o.HasPriority) {
		return true
	}

	return false
}

// SetHasPriority gets a reference to the given bool and assigns it to the HasPriority field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetHasPriority(v bool) {
	o.HasPriority = &v
}

// GetActualTimeInMins returns the ActualTimeInMins field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetActualTimeInMins() int32 {
	if o == nil || IsNil(o.ActualTimeInMins) {
		var ret int32
		return ret
	}
	return *o.ActualTimeInMins
}

// GetActualTimeInMinsOk returns a tuple with the ActualTimeInMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetActualTimeInMinsOk() (*int32, bool) {
	if o == nil || IsNil(o.ActualTimeInMins) {
		return nil, false
	}
	return o.ActualTimeInMins, true
}

// HasActualTimeInMins returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasActualTimeInMins() bool {
	if o != nil && !IsNil(o.ActualTimeInMins) {
		return true
	}

	return false
}

// SetActualTimeInMins gets a reference to the given int32 and assigns it to the ActualTimeInMins field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetActualTimeInMins(v int32) {
	o.ActualTimeInMins = &v
}

// GetRoomSkipCount returns the RoomSkipCount field value if set, zero value otherwise.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomSkipCount() int32 {
	if o == nil || IsNil(o.RoomSkipCount) {
		var ret int32
		return ret
	}
	return *o.RoomSkipCount
}

// GetRoomSkipCountOk returns a tuple with the RoomSkipCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) GetRoomSkipCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomSkipCount) {
		return nil, false
	}
	return o.RoomSkipCount, true
}

// HasRoomSkipCount returns a boolean if a field has been set.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) HasRoomSkipCount() bool {
	if o != nil && !IsNil(o.RoomSkipCount) {
		return true
	}

	return false
}

// SetRoomSkipCount gets a reference to the given int32 and assigns it to the RoomSkipCount field.
func (o *HSKTaskSheetDetailsInfoTypeRoomsInner) SetRoomSkipCount(v int32) {
	o.RoomSkipCount = &v
}

func (o HSKTaskSheetDetailsInfoTypeRoomsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HSKTaskSheetDetailsInfoTypeRoomsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.Floor) {
		toSerialize["floor"] = o.Floor
	}
	if !IsNil(o.FloorDescription) {
		toSerialize["floorDescription"] = o.FloorDescription
	}
	if !IsNil(o.RoomFeatures) {
		toSerialize["roomFeatures"] = o.RoomFeatures
	}
	if !IsNil(o.RoomDescription) {
		toSerialize["roomDescription"] = o.RoomDescription
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SmokingPreference) {
		toSerialize["smokingPreference"] = o.SmokingPreference
	}
	if !IsNil(o.SmokingPreferenceDescription) {
		toSerialize["smokingPreferenceDescription"] = o.SmokingPreferenceDescription
	}
	if !IsNil(o.Building) {
		toSerialize["building"] = o.Building
	}
	if !IsNil(o.RoomAssignmentRating) {
		toSerialize["roomAssignmentRating"] = o.RoomAssignmentRating
	}
	if !IsNil(o.Accessible) {
		toSerialize["accessible"] = o.Accessible
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.MeetingRoom) {
		toSerialize["meetingRoom"] = o.MeetingRoom
	}
	if !IsNil(o.RoomSection) {
		toSerialize["roomSection"] = o.RoomSection
	}
	if !IsNil(o.Housekeeping) {
		toSerialize["housekeeping"] = o.Housekeeping
	}
	if !IsNil(o.OutOfOrder) {
		toSerialize["outOfOrder"] = o.OutOfOrder
	}
	if !IsNil(o.Discrepancy) {
		toSerialize["discrepancy"] = o.Discrepancy
	}
	if !IsNil(o.SitePlanSection) {
		toSerialize["sitePlanSection"] = o.SitePlanSection
	}
	if !IsNil(o.ComponentRoomNumber) {
		toSerialize["componentRoomNumber"] = o.ComponentRoomNumber
	}
	if !IsNil(o.ConnectingRooms) {
		toSerialize["connectingRooms"] = o.ConnectingRooms
	}
	if !IsNil(o.ComponentRooms) {
		toSerialize["componentRooms"] = o.ComponentRooms
	}
	if !IsNil(o.Attendant) {
		toSerialize["attendant"] = o.Attendant
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.TurndownInfo) {
		toSerialize["turndownInfo"] = o.TurndownInfo
	}
	if !IsNil(o.ResvInfo) {
		toSerialize["resvInfo"] = o.ResvInfo
	}
	if !IsNil(o.ComponentRoomNumbers) {
		toSerialize["componentRoomNumbers"] = o.ComponentRoomNumbers
	}
	if !IsNil(o.ReservationInfo) {
		toSerialize["reservationInfo"] = o.ReservationInfo
	}
	if !IsNil(o.ServicingInfo) {
		toSerialize["servicingInfo"] = o.ServicingInfo
	}
	if !IsNil(o.AttendantTimeEntriesInfo) {
		toSerialize["attendantTimeEntriesInfo"] = o.AttendantTimeEntriesInfo
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.TotalCredits) {
		toSerialize["totalCredits"] = o.TotalCredits
	}
	if !IsNil(o.WakeUpTime) {
		toSerialize["wakeUpTime"] = o.WakeUpTime
	}
	if !IsNil(o.CleaningSequence) {
		toSerialize["cleaningSequence"] = o.CleaningSequence
	}
	if !IsNil(o.DefaultSequence) {
		toSerialize["defaultSequence"] = o.DefaultSequence
	}
	if !IsNil(o.HasPriority) {
		toSerialize["hasPriority"] = o.HasPriority
	}
	if !IsNil(o.ActualTimeInMins) {
		toSerialize["actualTimeInMins"] = o.ActualTimeInMins
	}
	if !IsNil(o.RoomSkipCount) {
		toSerialize["roomSkipCount"] = o.RoomSkipCount
	}
	return toSerialize, nil
}

type NullableHSKTaskSheetDetailsInfoTypeRoomsInner struct {
	value *HSKTaskSheetDetailsInfoTypeRoomsInner
	isSet bool
}

func (v NullableHSKTaskSheetDetailsInfoTypeRoomsInner) Get() *HSKTaskSheetDetailsInfoTypeRoomsInner {
	return v.value
}

func (v *NullableHSKTaskSheetDetailsInfoTypeRoomsInner) Set(val *HSKTaskSheetDetailsInfoTypeRoomsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHSKTaskSheetDetailsInfoTypeRoomsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHSKTaskSheetDetailsInfoTypeRoomsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHSKTaskSheetDetailsInfoTypeRoomsInner(val *HSKTaskSheetDetailsInfoTypeRoomsInner) *NullableHSKTaskSheetDetailsInfoTypeRoomsInner {
	return &NullableHSKTaskSheetDetailsInfoTypeRoomsInner{value: val, isSet: true}
}

func (v NullableHSKTaskSheetDetailsInfoTypeRoomsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHSKTaskSheetDetailsInfoTypeRoomsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


