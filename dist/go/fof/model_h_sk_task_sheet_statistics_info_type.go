/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the HSKTaskSheetStatisticsInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HSKTaskSheetStatisticsInfoType{}

// HSKTaskSheetStatisticsInfoType Holds the task sheet statistics information.
type HSKTaskSheetStatisticsInfoType struct {
	TaskSheetStatisticsInfo []HSKTaskSheetInfoType `json:"taskSheetStatisticsInfo,omitempty"`
	// Refer to Generic common types document
	MasterInfoList []MasterInfoType `json:"masterInfoList,omitempty"`
}

// NewHSKTaskSheetStatisticsInfoType instantiates a new HSKTaskSheetStatisticsInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHSKTaskSheetStatisticsInfoType() *HSKTaskSheetStatisticsInfoType {
	this := HSKTaskSheetStatisticsInfoType{}
	return &this
}

// NewHSKTaskSheetStatisticsInfoTypeWithDefaults instantiates a new HSKTaskSheetStatisticsInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHSKTaskSheetStatisticsInfoTypeWithDefaults() *HSKTaskSheetStatisticsInfoType {
	this := HSKTaskSheetStatisticsInfoType{}
	return &this
}

// GetTaskSheetStatisticsInfo returns the TaskSheetStatisticsInfo field value if set, zero value otherwise.
func (o *HSKTaskSheetStatisticsInfoType) GetTaskSheetStatisticsInfo() []HSKTaskSheetInfoType {
	if o == nil || IsNil(o.TaskSheetStatisticsInfo) {
		var ret []HSKTaskSheetInfoType
		return ret
	}
	return o.TaskSheetStatisticsInfo
}

// GetTaskSheetStatisticsInfoOk returns a tuple with the TaskSheetStatisticsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetStatisticsInfoType) GetTaskSheetStatisticsInfoOk() ([]HSKTaskSheetInfoType, bool) {
	if o == nil || IsNil(o.TaskSheetStatisticsInfo) {
		return nil, false
	}
	return o.TaskSheetStatisticsInfo, true
}

// HasTaskSheetStatisticsInfo returns a boolean if a field has been set.
func (o *HSKTaskSheetStatisticsInfoType) HasTaskSheetStatisticsInfo() bool {
	if o != nil && !IsNil(o.TaskSheetStatisticsInfo) {
		return true
	}

	return false
}

// SetTaskSheetStatisticsInfo gets a reference to the given []HSKTaskSheetInfoType and assigns it to the TaskSheetStatisticsInfo field.
func (o *HSKTaskSheetStatisticsInfoType) SetTaskSheetStatisticsInfo(v []HSKTaskSheetInfoType) {
	o.TaskSheetStatisticsInfo = v
}

// GetMasterInfoList returns the MasterInfoList field value if set, zero value otherwise.
func (o *HSKTaskSheetStatisticsInfoType) GetMasterInfoList() []MasterInfoType {
	if o == nil || IsNil(o.MasterInfoList) {
		var ret []MasterInfoType
		return ret
	}
	return o.MasterInfoList
}

// GetMasterInfoListOk returns a tuple with the MasterInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetStatisticsInfoType) GetMasterInfoListOk() ([]MasterInfoType, bool) {
	if o == nil || IsNil(o.MasterInfoList) {
		return nil, false
	}
	return o.MasterInfoList, true
}

// HasMasterInfoList returns a boolean if a field has been set.
func (o *HSKTaskSheetStatisticsInfoType) HasMasterInfoList() bool {
	if o != nil && !IsNil(o.MasterInfoList) {
		return true
	}

	return false
}

// SetMasterInfoList gets a reference to the given []MasterInfoType and assigns it to the MasterInfoList field.
func (o *HSKTaskSheetStatisticsInfoType) SetMasterInfoList(v []MasterInfoType) {
	o.MasterInfoList = v
}

func (o HSKTaskSheetStatisticsInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HSKTaskSheetStatisticsInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskSheetStatisticsInfo) {
		toSerialize["taskSheetStatisticsInfo"] = o.TaskSheetStatisticsInfo
	}
	if !IsNil(o.MasterInfoList) {
		toSerialize["masterInfoList"] = o.MasterInfoList
	}
	return toSerialize, nil
}

type NullableHSKTaskSheetStatisticsInfoType struct {
	value *HSKTaskSheetStatisticsInfoType
	isSet bool
}

func (v NullableHSKTaskSheetStatisticsInfoType) Get() *HSKTaskSheetStatisticsInfoType {
	return v.value
}

func (v *NullableHSKTaskSheetStatisticsInfoType) Set(val *HSKTaskSheetStatisticsInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableHSKTaskSheetStatisticsInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableHSKTaskSheetStatisticsInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHSKTaskSheetStatisticsInfoType(val *HSKTaskSheetStatisticsInfoType) *NullableHSKTaskSheetStatisticsInfoType {
	return &NullableHSKTaskSheetStatisticsInfoType{value: val, isSet: true}
}

func (v NullableHSKTaskSheetStatisticsInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHSKTaskSheetStatisticsInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


