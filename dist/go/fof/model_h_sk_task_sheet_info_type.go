/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the HSKTaskSheetInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HSKTaskSheetInfoType{}

// HSKTaskSheetInfoType Holds the information for the task sheet.
type HSKTaskSheetInfoType struct {
	// Holds the assigned task codes for a tasksheet.
	AssignedTasks []AssignedTaskType `json:"assignedTasks,omitempty"`
	Attendant *string `json:"attendant,omitempty"`
	TaskSeqNo *int32 `json:"taskSeqNo,omitempty"`
	TaskSheetType *TaskSheetType `json:"taskSheetType,omitempty"`
	TaskSheetNo *int32 `json:"taskSheetNo,omitempty"`
	TaskDate *string `json:"taskDate,omitempty"`
	TotalTaskCredits *int32 `json:"totalTaskCredits,omitempty"`
	TotalCompletedCredits *int32 `json:"totalCompletedCredits,omitempty"`
	AverageActualTimeInSecs *int32 `json:"averageActualTimeInSecs,omitempty"`
	TaskSheetDetails *HSKTaskSheetDetailsInfoType `json:"taskSheetDetails,omitempty"`
	RoomSummary []HSKTaskSheetInfoTypeRoomSummaryInner `json:"roomSummary,omitempty"`
}

// NewHSKTaskSheetInfoType instantiates a new HSKTaskSheetInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHSKTaskSheetInfoType() *HSKTaskSheetInfoType {
	this := HSKTaskSheetInfoType{}
	return &this
}

// NewHSKTaskSheetInfoTypeWithDefaults instantiates a new HSKTaskSheetInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHSKTaskSheetInfoTypeWithDefaults() *HSKTaskSheetInfoType {
	this := HSKTaskSheetInfoType{}
	return &this
}

// GetAssignedTasks returns the AssignedTasks field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetAssignedTasks() []AssignedTaskType {
	if o == nil || IsNil(o.AssignedTasks) {
		var ret []AssignedTaskType
		return ret
	}
	return o.AssignedTasks
}

// GetAssignedTasksOk returns a tuple with the AssignedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetAssignedTasksOk() ([]AssignedTaskType, bool) {
	if o == nil || IsNil(o.AssignedTasks) {
		return nil, false
	}
	return o.AssignedTasks, true
}

// HasAssignedTasks returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasAssignedTasks() bool {
	if o != nil && !IsNil(o.AssignedTasks) {
		return true
	}

	return false
}

// SetAssignedTasks gets a reference to the given []AssignedTaskType and assigns it to the AssignedTasks field.
func (o *HSKTaskSheetInfoType) SetAssignedTasks(v []AssignedTaskType) {
	o.AssignedTasks = v
}

// GetAttendant returns the Attendant field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetAttendant() string {
	if o == nil || IsNil(o.Attendant) {
		var ret string
		return ret
	}
	return *o.Attendant
}

// GetAttendantOk returns a tuple with the Attendant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetAttendantOk() (*string, bool) {
	if o == nil || IsNil(o.Attendant) {
		return nil, false
	}
	return o.Attendant, true
}

// HasAttendant returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasAttendant() bool {
	if o != nil && !IsNil(o.Attendant) {
		return true
	}

	return false
}

// SetAttendant gets a reference to the given string and assigns it to the Attendant field.
func (o *HSKTaskSheetInfoType) SetAttendant(v string) {
	o.Attendant = &v
}

// GetTaskSeqNo returns the TaskSeqNo field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTaskSeqNo() int32 {
	if o == nil || IsNil(o.TaskSeqNo) {
		var ret int32
		return ret
	}
	return *o.TaskSeqNo
}

// GetTaskSeqNoOk returns a tuple with the TaskSeqNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTaskSeqNoOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskSeqNo) {
		return nil, false
	}
	return o.TaskSeqNo, true
}

// HasTaskSeqNo returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTaskSeqNo() bool {
	if o != nil && !IsNil(o.TaskSeqNo) {
		return true
	}

	return false
}

// SetTaskSeqNo gets a reference to the given int32 and assigns it to the TaskSeqNo field.
func (o *HSKTaskSheetInfoType) SetTaskSeqNo(v int32) {
	o.TaskSeqNo = &v
}

// GetTaskSheetType returns the TaskSheetType field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTaskSheetType() TaskSheetType {
	if o == nil || IsNil(o.TaskSheetType) {
		var ret TaskSheetType
		return ret
	}
	return *o.TaskSheetType
}

// GetTaskSheetTypeOk returns a tuple with the TaskSheetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTaskSheetTypeOk() (*TaskSheetType, bool) {
	if o == nil || IsNil(o.TaskSheetType) {
		return nil, false
	}
	return o.TaskSheetType, true
}

// HasTaskSheetType returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTaskSheetType() bool {
	if o != nil && !IsNil(o.TaskSheetType) {
		return true
	}

	return false
}

// SetTaskSheetType gets a reference to the given TaskSheetType and assigns it to the TaskSheetType field.
func (o *HSKTaskSheetInfoType) SetTaskSheetType(v TaskSheetType) {
	o.TaskSheetType = &v
}

// GetTaskSheetNo returns the TaskSheetNo field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTaskSheetNo() int32 {
	if o == nil || IsNil(o.TaskSheetNo) {
		var ret int32
		return ret
	}
	return *o.TaskSheetNo
}

// GetTaskSheetNoOk returns a tuple with the TaskSheetNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTaskSheetNoOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskSheetNo) {
		return nil, false
	}
	return o.TaskSheetNo, true
}

// HasTaskSheetNo returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTaskSheetNo() bool {
	if o != nil && !IsNil(o.TaskSheetNo) {
		return true
	}

	return false
}

// SetTaskSheetNo gets a reference to the given int32 and assigns it to the TaskSheetNo field.
func (o *HSKTaskSheetInfoType) SetTaskSheetNo(v int32) {
	o.TaskSheetNo = &v
}

// GetTaskDate returns the TaskDate field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTaskDate() string {
	if o == nil || IsNil(o.TaskDate) {
		var ret string
		return ret
	}
	return *o.TaskDate
}

// GetTaskDateOk returns a tuple with the TaskDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTaskDateOk() (*string, bool) {
	if o == nil || IsNil(o.TaskDate) {
		return nil, false
	}
	return o.TaskDate, true
}

// HasTaskDate returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTaskDate() bool {
	if o != nil && !IsNil(o.TaskDate) {
		return true
	}

	return false
}

// SetTaskDate gets a reference to the given string and assigns it to the TaskDate field.
func (o *HSKTaskSheetInfoType) SetTaskDate(v string) {
	o.TaskDate = &v
}

// GetTotalTaskCredits returns the TotalTaskCredits field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTotalTaskCredits() int32 {
	if o == nil || IsNil(o.TotalTaskCredits) {
		var ret int32
		return ret
	}
	return *o.TotalTaskCredits
}

// GetTotalTaskCreditsOk returns a tuple with the TotalTaskCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTotalTaskCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalTaskCredits) {
		return nil, false
	}
	return o.TotalTaskCredits, true
}

// HasTotalTaskCredits returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTotalTaskCredits() bool {
	if o != nil && !IsNil(o.TotalTaskCredits) {
		return true
	}

	return false
}

// SetTotalTaskCredits gets a reference to the given int32 and assigns it to the TotalTaskCredits field.
func (o *HSKTaskSheetInfoType) SetTotalTaskCredits(v int32) {
	o.TotalTaskCredits = &v
}

// GetTotalCompletedCredits returns the TotalCompletedCredits field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTotalCompletedCredits() int32 {
	if o == nil || IsNil(o.TotalCompletedCredits) {
		var ret int32
		return ret
	}
	return *o.TotalCompletedCredits
}

// GetTotalCompletedCreditsOk returns a tuple with the TotalCompletedCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTotalCompletedCreditsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCompletedCredits) {
		return nil, false
	}
	return o.TotalCompletedCredits, true
}

// HasTotalCompletedCredits returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTotalCompletedCredits() bool {
	if o != nil && !IsNil(o.TotalCompletedCredits) {
		return true
	}

	return false
}

// SetTotalCompletedCredits gets a reference to the given int32 and assigns it to the TotalCompletedCredits field.
func (o *HSKTaskSheetInfoType) SetTotalCompletedCredits(v int32) {
	o.TotalCompletedCredits = &v
}

// GetAverageActualTimeInSecs returns the AverageActualTimeInSecs field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetAverageActualTimeInSecs() int32 {
	if o == nil || IsNil(o.AverageActualTimeInSecs) {
		var ret int32
		return ret
	}
	return *o.AverageActualTimeInSecs
}

// GetAverageActualTimeInSecsOk returns a tuple with the AverageActualTimeInSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetAverageActualTimeInSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.AverageActualTimeInSecs) {
		return nil, false
	}
	return o.AverageActualTimeInSecs, true
}

// HasAverageActualTimeInSecs returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasAverageActualTimeInSecs() bool {
	if o != nil && !IsNil(o.AverageActualTimeInSecs) {
		return true
	}

	return false
}

// SetAverageActualTimeInSecs gets a reference to the given int32 and assigns it to the AverageActualTimeInSecs field.
func (o *HSKTaskSheetInfoType) SetAverageActualTimeInSecs(v int32) {
	o.AverageActualTimeInSecs = &v
}

// GetTaskSheetDetails returns the TaskSheetDetails field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetTaskSheetDetails() HSKTaskSheetDetailsInfoType {
	if o == nil || IsNil(o.TaskSheetDetails) {
		var ret HSKTaskSheetDetailsInfoType
		return ret
	}
	return *o.TaskSheetDetails
}

// GetTaskSheetDetailsOk returns a tuple with the TaskSheetDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetTaskSheetDetailsOk() (*HSKTaskSheetDetailsInfoType, bool) {
	if o == nil || IsNil(o.TaskSheetDetails) {
		return nil, false
	}
	return o.TaskSheetDetails, true
}

// HasTaskSheetDetails returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasTaskSheetDetails() bool {
	if o != nil && !IsNil(o.TaskSheetDetails) {
		return true
	}

	return false
}

// SetTaskSheetDetails gets a reference to the given HSKTaskSheetDetailsInfoType and assigns it to the TaskSheetDetails field.
func (o *HSKTaskSheetInfoType) SetTaskSheetDetails(v HSKTaskSheetDetailsInfoType) {
	o.TaskSheetDetails = &v
}

// GetRoomSummary returns the RoomSummary field value if set, zero value otherwise.
func (o *HSKTaskSheetInfoType) GetRoomSummary() []HSKTaskSheetInfoTypeRoomSummaryInner {
	if o == nil || IsNil(o.RoomSummary) {
		var ret []HSKTaskSheetInfoTypeRoomSummaryInner
		return ret
	}
	return o.RoomSummary
}

// GetRoomSummaryOk returns a tuple with the RoomSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HSKTaskSheetInfoType) GetRoomSummaryOk() ([]HSKTaskSheetInfoTypeRoomSummaryInner, bool) {
	if o == nil || IsNil(o.RoomSummary) {
		return nil, false
	}
	return o.RoomSummary, true
}

// HasRoomSummary returns a boolean if a field has been set.
func (o *HSKTaskSheetInfoType) HasRoomSummary() bool {
	if o != nil && !IsNil(o.RoomSummary) {
		return true
	}

	return false
}

// SetRoomSummary gets a reference to the given []HSKTaskSheetInfoTypeRoomSummaryInner and assigns it to the RoomSummary field.
func (o *HSKTaskSheetInfoType) SetRoomSummary(v []HSKTaskSheetInfoTypeRoomSummaryInner) {
	o.RoomSummary = v
}

func (o HSKTaskSheetInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HSKTaskSheetInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedTasks) {
		toSerialize["assignedTasks"] = o.AssignedTasks
	}
	if !IsNil(o.Attendant) {
		toSerialize["attendant"] = o.Attendant
	}
	if !IsNil(o.TaskSeqNo) {
		toSerialize["taskSeqNo"] = o.TaskSeqNo
	}
	if !IsNil(o.TaskSheetType) {
		toSerialize["taskSheetType"] = o.TaskSheetType
	}
	if !IsNil(o.TaskSheetNo) {
		toSerialize["taskSheetNo"] = o.TaskSheetNo
	}
	if !IsNil(o.TaskDate) {
		toSerialize["taskDate"] = o.TaskDate
	}
	if !IsNil(o.TotalTaskCredits) {
		toSerialize["totalTaskCredits"] = o.TotalTaskCredits
	}
	if !IsNil(o.TotalCompletedCredits) {
		toSerialize["totalCompletedCredits"] = o.TotalCompletedCredits
	}
	if !IsNil(o.AverageActualTimeInSecs) {
		toSerialize["averageActualTimeInSecs"] = o.AverageActualTimeInSecs
	}
	if !IsNil(o.TaskSheetDetails) {
		toSerialize["taskSheetDetails"] = o.TaskSheetDetails
	}
	if !IsNil(o.RoomSummary) {
		toSerialize["roomSummary"] = o.RoomSummary
	}
	return toSerialize, nil
}

type NullableHSKTaskSheetInfoType struct {
	value *HSKTaskSheetInfoType
	isSet bool
}

func (v NullableHSKTaskSheetInfoType) Get() *HSKTaskSheetInfoType {
	return v.value
}

func (v *NullableHSKTaskSheetInfoType) Set(val *HSKTaskSheetInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableHSKTaskSheetInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableHSKTaskSheetInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHSKTaskSheetInfoType(val *HSKTaskSheetInfoType) *NullableHSKTaskSheetInfoType {
	return &NullableHSKTaskSheetInfoType{value: val, isSet: true}
}

func (v NullableHSKTaskSheetInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHSKTaskSheetInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


