/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ResGuestAdditionalInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResGuestAdditionalInfoType{}

// ResGuestAdditionalInfoType struct for ResGuestAdditionalInfoType
type ResGuestAdditionalInfoType struct {
	// Entry Date into the country. (Croatian Requirements).
	DateOfEntry *string `json:"dateOfEntry,omitempty"`
	// Guest Classification for the data export.
	GuestClassification *string `json:"guestClassification,omitempty"`
	// Guest Status for the data export.
	GuestStatus *string `json:"guestStatus,omitempty"`
	LastStay *GuestLastStayInfoType `json:"lastStay,omitempty"`
	// Entry Date into the country. (Croatian Requirements).
	NextDestination *string `json:"nextDestination,omitempty"`
	// Entry point into the country. (Croatian Requirements).
	PortOfEntry *string `json:"portOfEntry,omitempty"`
	// Preferred Room Type of the guest.
	PreferredRoomType *string `json:"preferredRoomType,omitempty"`
	// Purpose of stay.
	PurposeOfStay *string `json:"purposeOfStay,omitempty"`
}

// NewResGuestAdditionalInfoType instantiates a new ResGuestAdditionalInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResGuestAdditionalInfoType() *ResGuestAdditionalInfoType {
	this := ResGuestAdditionalInfoType{}
	return &this
}

// NewResGuestAdditionalInfoTypeWithDefaults instantiates a new ResGuestAdditionalInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResGuestAdditionalInfoTypeWithDefaults() *ResGuestAdditionalInfoType {
	this := ResGuestAdditionalInfoType{}
	return &this
}

// GetDateOfEntry returns the DateOfEntry field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetDateOfEntry() string {
	if o == nil || IsNil(o.DateOfEntry) {
		var ret string
		return ret
	}
	return *o.DateOfEntry
}

// GetDateOfEntryOk returns a tuple with the DateOfEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetDateOfEntryOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfEntry) {
		return nil, false
	}
	return o.DateOfEntry, true
}

// HasDateOfEntry returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasDateOfEntry() bool {
	if o != nil && !IsNil(o.DateOfEntry) {
		return true
	}

	return false
}

// SetDateOfEntry gets a reference to the given string and assigns it to the DateOfEntry field.
func (o *ResGuestAdditionalInfoType) SetDateOfEntry(v string) {
	o.DateOfEntry = &v
}

// GetGuestClassification returns the GuestClassification field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetGuestClassification() string {
	if o == nil || IsNil(o.GuestClassification) {
		var ret string
		return ret
	}
	return *o.GuestClassification
}

// GetGuestClassificationOk returns a tuple with the GuestClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetGuestClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.GuestClassification) {
		return nil, false
	}
	return o.GuestClassification, true
}

// HasGuestClassification returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasGuestClassification() bool {
	if o != nil && !IsNil(o.GuestClassification) {
		return true
	}

	return false
}

// SetGuestClassification gets a reference to the given string and assigns it to the GuestClassification field.
func (o *ResGuestAdditionalInfoType) SetGuestClassification(v string) {
	o.GuestClassification = &v
}

// GetGuestStatus returns the GuestStatus field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetGuestStatus() string {
	if o == nil || IsNil(o.GuestStatus) {
		var ret string
		return ret
	}
	return *o.GuestStatus
}

// GetGuestStatusOk returns a tuple with the GuestStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetGuestStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GuestStatus) {
		return nil, false
	}
	return o.GuestStatus, true
}

// HasGuestStatus returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasGuestStatus() bool {
	if o != nil && !IsNil(o.GuestStatus) {
		return true
	}

	return false
}

// SetGuestStatus gets a reference to the given string and assigns it to the GuestStatus field.
func (o *ResGuestAdditionalInfoType) SetGuestStatus(v string) {
	o.GuestStatus = &v
}

// GetLastStay returns the LastStay field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetLastStay() GuestLastStayInfoType {
	if o == nil || IsNil(o.LastStay) {
		var ret GuestLastStayInfoType
		return ret
	}
	return *o.LastStay
}

// GetLastStayOk returns a tuple with the LastStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetLastStayOk() (*GuestLastStayInfoType, bool) {
	if o == nil || IsNil(o.LastStay) {
		return nil, false
	}
	return o.LastStay, true
}

// HasLastStay returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasLastStay() bool {
	if o != nil && !IsNil(o.LastStay) {
		return true
	}

	return false
}

// SetLastStay gets a reference to the given GuestLastStayInfoType and assigns it to the LastStay field.
func (o *ResGuestAdditionalInfoType) SetLastStay(v GuestLastStayInfoType) {
	o.LastStay = &v
}

// GetNextDestination returns the NextDestination field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetNextDestination() string {
	if o == nil || IsNil(o.NextDestination) {
		var ret string
		return ret
	}
	return *o.NextDestination
}

// GetNextDestinationOk returns a tuple with the NextDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetNextDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.NextDestination) {
		return nil, false
	}
	return o.NextDestination, true
}

// HasNextDestination returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasNextDestination() bool {
	if o != nil && !IsNil(o.NextDestination) {
		return true
	}

	return false
}

// SetNextDestination gets a reference to the given string and assigns it to the NextDestination field.
func (o *ResGuestAdditionalInfoType) SetNextDestination(v string) {
	o.NextDestination = &v
}

// GetPortOfEntry returns the PortOfEntry field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetPortOfEntry() string {
	if o == nil || IsNil(o.PortOfEntry) {
		var ret string
		return ret
	}
	return *o.PortOfEntry
}

// GetPortOfEntryOk returns a tuple with the PortOfEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetPortOfEntryOk() (*string, bool) {
	if o == nil || IsNil(o.PortOfEntry) {
		return nil, false
	}
	return o.PortOfEntry, true
}

// HasPortOfEntry returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasPortOfEntry() bool {
	if o != nil && !IsNil(o.PortOfEntry) {
		return true
	}

	return false
}

// SetPortOfEntry gets a reference to the given string and assigns it to the PortOfEntry field.
func (o *ResGuestAdditionalInfoType) SetPortOfEntry(v string) {
	o.PortOfEntry = &v
}

// GetPreferredRoomType returns the PreferredRoomType field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetPreferredRoomType() string {
	if o == nil || IsNil(o.PreferredRoomType) {
		var ret string
		return ret
	}
	return *o.PreferredRoomType
}

// GetPreferredRoomTypeOk returns a tuple with the PreferredRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetPreferredRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredRoomType) {
		return nil, false
	}
	return o.PreferredRoomType, true
}

// HasPreferredRoomType returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasPreferredRoomType() bool {
	if o != nil && !IsNil(o.PreferredRoomType) {
		return true
	}

	return false
}

// SetPreferredRoomType gets a reference to the given string and assigns it to the PreferredRoomType field.
func (o *ResGuestAdditionalInfoType) SetPreferredRoomType(v string) {
	o.PreferredRoomType = &v
}

// GetPurposeOfStay returns the PurposeOfStay field value if set, zero value otherwise.
func (o *ResGuestAdditionalInfoType) GetPurposeOfStay() string {
	if o == nil || IsNil(o.PurposeOfStay) {
		var ret string
		return ret
	}
	return *o.PurposeOfStay
}

// GetPurposeOfStayOk returns a tuple with the PurposeOfStay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResGuestAdditionalInfoType) GetPurposeOfStayOk() (*string, bool) {
	if o == nil || IsNil(o.PurposeOfStay) {
		return nil, false
	}
	return o.PurposeOfStay, true
}

// HasPurposeOfStay returns a boolean if a field has been set.
func (o *ResGuestAdditionalInfoType) HasPurposeOfStay() bool {
	if o != nil && !IsNil(o.PurposeOfStay) {
		return true
	}

	return false
}

// SetPurposeOfStay gets a reference to the given string and assigns it to the PurposeOfStay field.
func (o *ResGuestAdditionalInfoType) SetPurposeOfStay(v string) {
	o.PurposeOfStay = &v
}

func (o ResGuestAdditionalInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResGuestAdditionalInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateOfEntry) {
		toSerialize["dateOfEntry"] = o.DateOfEntry
	}
	if !IsNil(o.GuestClassification) {
		toSerialize["guestClassification"] = o.GuestClassification
	}
	if !IsNil(o.GuestStatus) {
		toSerialize["guestStatus"] = o.GuestStatus
	}
	if !IsNil(o.LastStay) {
		toSerialize["lastStay"] = o.LastStay
	}
	if !IsNil(o.NextDestination) {
		toSerialize["nextDestination"] = o.NextDestination
	}
	if !IsNil(o.PortOfEntry) {
		toSerialize["portOfEntry"] = o.PortOfEntry
	}
	if !IsNil(o.PreferredRoomType) {
		toSerialize["preferredRoomType"] = o.PreferredRoomType
	}
	if !IsNil(o.PurposeOfStay) {
		toSerialize["purposeOfStay"] = o.PurposeOfStay
	}
	return toSerialize, nil
}

type NullableResGuestAdditionalInfoType struct {
	value *ResGuestAdditionalInfoType
	isSet bool
}

func (v NullableResGuestAdditionalInfoType) Get() *ResGuestAdditionalInfoType {
	return v.value
}

func (v *NullableResGuestAdditionalInfoType) Set(val *ResGuestAdditionalInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableResGuestAdditionalInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableResGuestAdditionalInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResGuestAdditionalInfoType(val *ResGuestAdditionalInfoType) *NullableResGuestAdditionalInfoType {
	return &NullableResGuestAdditionalInfoType{value: val, isSet: true}
}

func (v NullableResGuestAdditionalInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResGuestAdditionalInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


