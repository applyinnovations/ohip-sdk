/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the CreatePublishers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePublishers{}

// CreatePublishers Request to create publishers.
type CreatePublishers struct {
	Links []InstanceLink `json:"links,omitempty"`
	// Information of all the publishers for a given subscriber.
	Publishers []ExternalSystemType `json:"publishers,omitempty"`
	Subscriber *ExternalSystemType `json:"subscriber,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewCreatePublishers instantiates a new CreatePublishers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePublishers() *CreatePublishers {
	this := CreatePublishers{}
	return &this
}

// NewCreatePublishersWithDefaults instantiates a new CreatePublishers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePublishersWithDefaults() *CreatePublishers {
	this := CreatePublishers{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CreatePublishers) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublishers) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CreatePublishers) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *CreatePublishers) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetPublishers returns the Publishers field value if set, zero value otherwise.
func (o *CreatePublishers) GetPublishers() []ExternalSystemType {
	if o == nil || IsNil(o.Publishers) {
		var ret []ExternalSystemType
		return ret
	}
	return o.Publishers
}

// GetPublishersOk returns a tuple with the Publishers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublishers) GetPublishersOk() ([]ExternalSystemType, bool) {
	if o == nil || IsNil(o.Publishers) {
		return nil, false
	}
	return o.Publishers, true
}

// HasPublishers returns a boolean if a field has been set.
func (o *CreatePublishers) HasPublishers() bool {
	if o != nil && !IsNil(o.Publishers) {
		return true
	}

	return false
}

// SetPublishers gets a reference to the given []ExternalSystemType and assigns it to the Publishers field.
func (o *CreatePublishers) SetPublishers(v []ExternalSystemType) {
	o.Publishers = v
}

// GetSubscriber returns the Subscriber field value if set, zero value otherwise.
func (o *CreatePublishers) GetSubscriber() ExternalSystemType {
	if o == nil || IsNil(o.Subscriber) {
		var ret ExternalSystemType
		return ret
	}
	return *o.Subscriber
}

// GetSubscriberOk returns a tuple with the Subscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublishers) GetSubscriberOk() (*ExternalSystemType, bool) {
	if o == nil || IsNil(o.Subscriber) {
		return nil, false
	}
	return o.Subscriber, true
}

// HasSubscriber returns a boolean if a field has been set.
func (o *CreatePublishers) HasSubscriber() bool {
	if o != nil && !IsNil(o.Subscriber) {
		return true
	}

	return false
}

// SetSubscriber gets a reference to the given ExternalSystemType and assigns it to the Subscriber field.
func (o *CreatePublishers) SetSubscriber(v ExternalSystemType) {
	o.Subscriber = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CreatePublishers) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePublishers) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CreatePublishers) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *CreatePublishers) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o CreatePublishers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePublishers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Publishers) {
		toSerialize["publishers"] = o.Publishers
	}
	if !IsNil(o.Subscriber) {
		toSerialize["subscriber"] = o.Subscriber
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCreatePublishers struct {
	value *CreatePublishers
	isSet bool
}

func (v NullableCreatePublishers) Get() *CreatePublishers {
	return v.value
}

func (v *NullableCreatePublishers) Set(val *CreatePublishers) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePublishers) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePublishers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePublishers(val *CreatePublishers) *NullableCreatePublishers {
	return &NullableCreatePublishers{value: val, isSet: true}
}

func (v NullableCreatePublishers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePublishers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


