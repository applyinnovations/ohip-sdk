/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the GeneralInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneralInfoType{}

// GeneralInfoType struct for GeneralInfoType
type GeneralInfoType struct {
	// Create stored value during checkin of a Hotel Interface
	CreateSVCheckIn *bool `json:"createSVCheckIn,omitempty"`
	// Enable failover of a Hotel Interface
	EnableFailover *bool `json:"enableFailover,omitempty"`
	// CC vault of a Hotel Interface
	CcVaultFunction *bool `json:"ccVaultFunction,omitempty"`
	// Enable resend of a Hotel Interface
	EnableResend *bool `json:"enableResend,omitempty"`
	// Send AR auth type of a Hotel Interface
	SendARAuthType *bool `json:"sendARAuthType,omitempty"`
	// Enable DB verification of a Hotel Interface
	EnableDBVerification *bool `json:"enableDBVerification,omitempty"`
	// Allow CC cancel transactions of a Hotel Interface
	AllowCCCancelTransaction *bool `json:"allowCCCancelTransaction,omitempty"`
	// Show stored value pin of a Hotel Interface
	ShowStoredValuePin *bool `json:"showStoredValuePin,omitempty"`
	ShowSVTransaction *SVTransactionType `json:"showSVTransaction,omitempty"`
	// Stored value system of a Hotel Interface
	StoredValueSystem *bool `json:"storedValueSystem,omitempty"`
	// Send enhanced fields of a Hotel Interface
	SendEnhancedFields *bool `json:"sendEnhancedFields,omitempty"`
	// Card present of a Hotel Interface
	CardPresentFlag *bool `json:"cardPresentFlag,omitempty"`
	// Handle night audit command of a Hotel Interface
	HandleNightAudit *bool `json:"handleNightAudit,omitempty"`
	// Regular transaction command of a Hotel Interface
	RegularTransaction *bool `json:"regularTransaction,omitempty"`
	// Courtesy card handling command of a Hotel Interface
	CourtesyCardHandling *bool `json:"courtesyCardHandling,omitempty"`
	// Send end of day of a Hotel Interface
	SendEndOfDay *bool `json:"sendEndOfDay,omitempty"`
	// Logical port number 1 of a the Hotel Interface
	PortNumber1 *string `json:"portNumber1,omitempty"`
	// Logical port number 2 of a the Hotel Interface
	PortNumber2 *string `json:"portNumber2,omitempty"`
	// Logical port number 3 of a the Hotel Interface
	PortNumber3 *string `json:"portNumber3,omitempty"`
	// Logical port number 4 of a the Hotel Interface
	PortNumber4 *string `json:"portNumber4,omitempty"`
	// IP Address of a the Hotel Interface
	IPAddress *string `json:"iPAddress,omitempty"`
	// Stored value reedeem transaction of a the Hotel Interface
	SVRedeemTrx *string `json:"sVRedeemTrx,omitempty"`
	// Device of a the Hotel Interface
	Device *string `json:"device,omitempty"`
	// Department code 1 of a the Hotel Interface
	DepartmentCode1 *string `json:"departmentCode1,omitempty"`
	// Department code 2 of a the Hotel Interface
	DepartmentCode2 *string `json:"departmentCode2,omitempty"`
	// Rollup transactions flag of the Hotel Interface
	RollupTransactions *bool `json:"rollupTransactions,omitempty"`
	// Indicator if video checkout is allowed or not.
	AllowVideoCheckout *bool `json:"allowVideoCheckout,omitempty"`
	// One of the video checkout options whether to check the credit limit.
	CheckCreditLimit *bool `json:"checkCreditLimit,omitempty"`
	// One of the video checkout options whether to check the balance.
	CheckBalance *bool `json:"checkBalance,omitempty"`
	// One of the video checkout options whether to check the routing.
	CheckRouting *bool `json:"checkRouting,omitempty"`
	// Indicator if the Hotel Interface handles wakeup calls.
	WakeupYn *bool `json:"wakeupYn,omitempty"`
	// Determines who handles the wakeup calls, either by Opera (0) or a Vendor (1).
	WakeupHandledBy *string `json:"wakeupHandledBy,omitempty"`
	// Wakeup retry limit of the Hotel Interface. Value range is 0 to 999.
	WakeRetry *int32 `json:"wakeRetry,omitempty"`
	// Wakeup delay value of the Hotel Interface.
	WakeDelay *int32 `json:"wakeDelay,omitempty"`
	// Used by the Interface module (IFC7.exe).
	PrevWake *int32 `json:"prevWake,omitempty"`
	// Folio display option of the Hotel Interface applicable to VID and MSC. \"0\" means folio display option off. \"A\" means a guest folio display option. \"U\" means user defined folio display option.
	FolioDisplayOption *string `json:"folioDisplayOption,omitempty"`
	// Indicator if the User defined folio 1 is utilized.
	UserDefinedFolio1 *bool `json:"userDefinedFolio1,omitempty"`
	// Indicator if the User defined folio 2 is utilized.
	UserDefinedFolio2 *bool `json:"userDefinedFolio2,omitempty"`
	// Indicator if the User defined folio 3 is utilized.
	UserDefinedFolio3 *bool `json:"userDefinedFolio3,omitempty"`
	// Indicator if the User defined folio 4 is utilized.
	UserDefinedFolio4 *bool `json:"userDefinedFolio4,omitempty"`
	// Indicator if the phone name will be displayed.
	DisplayPhoneName *bool `json:"displayPhoneName,omitempty"`
	// Indicator if the Key Pin is active or not. It is supported only if OPERA Control Display Key Pin is active.
	KeyPinActive *bool `json:"keyPinActive,omitempty"`
	// Indicator for Default All Print Details On.
	AllPrintDetailOn *bool `json:"allPrintDetailOn,omitempty"`
}

// NewGeneralInfoType instantiates a new GeneralInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralInfoType() *GeneralInfoType {
	this := GeneralInfoType{}
	return &this
}

// NewGeneralInfoTypeWithDefaults instantiates a new GeneralInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralInfoTypeWithDefaults() *GeneralInfoType {
	this := GeneralInfoType{}
	return &this
}

// GetCreateSVCheckIn returns the CreateSVCheckIn field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCreateSVCheckIn() bool {
	if o == nil || IsNil(o.CreateSVCheckIn) {
		var ret bool
		return ret
	}
	return *o.CreateSVCheckIn
}

// GetCreateSVCheckInOk returns a tuple with the CreateSVCheckIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCreateSVCheckInOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateSVCheckIn) {
		return nil, false
	}
	return o.CreateSVCheckIn, true
}

// HasCreateSVCheckIn returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCreateSVCheckIn() bool {
	if o != nil && !IsNil(o.CreateSVCheckIn) {
		return true
	}

	return false
}

// SetCreateSVCheckIn gets a reference to the given bool and assigns it to the CreateSVCheckIn field.
func (o *GeneralInfoType) SetCreateSVCheckIn(v bool) {
	o.CreateSVCheckIn = &v
}

// GetEnableFailover returns the EnableFailover field value if set, zero value otherwise.
func (o *GeneralInfoType) GetEnableFailover() bool {
	if o == nil || IsNil(o.EnableFailover) {
		var ret bool
		return ret
	}
	return *o.EnableFailover
}

// GetEnableFailoverOk returns a tuple with the EnableFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetEnableFailoverOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFailover) {
		return nil, false
	}
	return o.EnableFailover, true
}

// HasEnableFailover returns a boolean if a field has been set.
func (o *GeneralInfoType) HasEnableFailover() bool {
	if o != nil && !IsNil(o.EnableFailover) {
		return true
	}

	return false
}

// SetEnableFailover gets a reference to the given bool and assigns it to the EnableFailover field.
func (o *GeneralInfoType) SetEnableFailover(v bool) {
	o.EnableFailover = &v
}

// GetCcVaultFunction returns the CcVaultFunction field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCcVaultFunction() bool {
	if o == nil || IsNil(o.CcVaultFunction) {
		var ret bool
		return ret
	}
	return *o.CcVaultFunction
}

// GetCcVaultFunctionOk returns a tuple with the CcVaultFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCcVaultFunctionOk() (*bool, bool) {
	if o == nil || IsNil(o.CcVaultFunction) {
		return nil, false
	}
	return o.CcVaultFunction, true
}

// HasCcVaultFunction returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCcVaultFunction() bool {
	if o != nil && !IsNil(o.CcVaultFunction) {
		return true
	}

	return false
}

// SetCcVaultFunction gets a reference to the given bool and assigns it to the CcVaultFunction field.
func (o *GeneralInfoType) SetCcVaultFunction(v bool) {
	o.CcVaultFunction = &v
}

// GetEnableResend returns the EnableResend field value if set, zero value otherwise.
func (o *GeneralInfoType) GetEnableResend() bool {
	if o == nil || IsNil(o.EnableResend) {
		var ret bool
		return ret
	}
	return *o.EnableResend
}

// GetEnableResendOk returns a tuple with the EnableResend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetEnableResendOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableResend) {
		return nil, false
	}
	return o.EnableResend, true
}

// HasEnableResend returns a boolean if a field has been set.
func (o *GeneralInfoType) HasEnableResend() bool {
	if o != nil && !IsNil(o.EnableResend) {
		return true
	}

	return false
}

// SetEnableResend gets a reference to the given bool and assigns it to the EnableResend field.
func (o *GeneralInfoType) SetEnableResend(v bool) {
	o.EnableResend = &v
}

// GetSendARAuthType returns the SendARAuthType field value if set, zero value otherwise.
func (o *GeneralInfoType) GetSendARAuthType() bool {
	if o == nil || IsNil(o.SendARAuthType) {
		var ret bool
		return ret
	}
	return *o.SendARAuthType
}

// GetSendARAuthTypeOk returns a tuple with the SendARAuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetSendARAuthTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.SendARAuthType) {
		return nil, false
	}
	return o.SendARAuthType, true
}

// HasSendARAuthType returns a boolean if a field has been set.
func (o *GeneralInfoType) HasSendARAuthType() bool {
	if o != nil && !IsNil(o.SendARAuthType) {
		return true
	}

	return false
}

// SetSendARAuthType gets a reference to the given bool and assigns it to the SendARAuthType field.
func (o *GeneralInfoType) SetSendARAuthType(v bool) {
	o.SendARAuthType = &v
}

// GetEnableDBVerification returns the EnableDBVerification field value if set, zero value otherwise.
func (o *GeneralInfoType) GetEnableDBVerification() bool {
	if o == nil || IsNil(o.EnableDBVerification) {
		var ret bool
		return ret
	}
	return *o.EnableDBVerification
}

// GetEnableDBVerificationOk returns a tuple with the EnableDBVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetEnableDBVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDBVerification) {
		return nil, false
	}
	return o.EnableDBVerification, true
}

// HasEnableDBVerification returns a boolean if a field has been set.
func (o *GeneralInfoType) HasEnableDBVerification() bool {
	if o != nil && !IsNil(o.EnableDBVerification) {
		return true
	}

	return false
}

// SetEnableDBVerification gets a reference to the given bool and assigns it to the EnableDBVerification field.
func (o *GeneralInfoType) SetEnableDBVerification(v bool) {
	o.EnableDBVerification = &v
}

// GetAllowCCCancelTransaction returns the AllowCCCancelTransaction field value if set, zero value otherwise.
func (o *GeneralInfoType) GetAllowCCCancelTransaction() bool {
	if o == nil || IsNil(o.AllowCCCancelTransaction) {
		var ret bool
		return ret
	}
	return *o.AllowCCCancelTransaction
}

// GetAllowCCCancelTransactionOk returns a tuple with the AllowCCCancelTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetAllowCCCancelTransactionOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCCCancelTransaction) {
		return nil, false
	}
	return o.AllowCCCancelTransaction, true
}

// HasAllowCCCancelTransaction returns a boolean if a field has been set.
func (o *GeneralInfoType) HasAllowCCCancelTransaction() bool {
	if o != nil && !IsNil(o.AllowCCCancelTransaction) {
		return true
	}

	return false
}

// SetAllowCCCancelTransaction gets a reference to the given bool and assigns it to the AllowCCCancelTransaction field.
func (o *GeneralInfoType) SetAllowCCCancelTransaction(v bool) {
	o.AllowCCCancelTransaction = &v
}

// GetShowStoredValuePin returns the ShowStoredValuePin field value if set, zero value otherwise.
func (o *GeneralInfoType) GetShowStoredValuePin() bool {
	if o == nil || IsNil(o.ShowStoredValuePin) {
		var ret bool
		return ret
	}
	return *o.ShowStoredValuePin
}

// GetShowStoredValuePinOk returns a tuple with the ShowStoredValuePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetShowStoredValuePinOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowStoredValuePin) {
		return nil, false
	}
	return o.ShowStoredValuePin, true
}

// HasShowStoredValuePin returns a boolean if a field has been set.
func (o *GeneralInfoType) HasShowStoredValuePin() bool {
	if o != nil && !IsNil(o.ShowStoredValuePin) {
		return true
	}

	return false
}

// SetShowStoredValuePin gets a reference to the given bool and assigns it to the ShowStoredValuePin field.
func (o *GeneralInfoType) SetShowStoredValuePin(v bool) {
	o.ShowStoredValuePin = &v
}

// GetShowSVTransaction returns the ShowSVTransaction field value if set, zero value otherwise.
func (o *GeneralInfoType) GetShowSVTransaction() SVTransactionType {
	if o == nil || IsNil(o.ShowSVTransaction) {
		var ret SVTransactionType
		return ret
	}
	return *o.ShowSVTransaction
}

// GetShowSVTransactionOk returns a tuple with the ShowSVTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetShowSVTransactionOk() (*SVTransactionType, bool) {
	if o == nil || IsNil(o.ShowSVTransaction) {
		return nil, false
	}
	return o.ShowSVTransaction, true
}

// HasShowSVTransaction returns a boolean if a field has been set.
func (o *GeneralInfoType) HasShowSVTransaction() bool {
	if o != nil && !IsNil(o.ShowSVTransaction) {
		return true
	}

	return false
}

// SetShowSVTransaction gets a reference to the given SVTransactionType and assigns it to the ShowSVTransaction field.
func (o *GeneralInfoType) SetShowSVTransaction(v SVTransactionType) {
	o.ShowSVTransaction = &v
}

// GetStoredValueSystem returns the StoredValueSystem field value if set, zero value otherwise.
func (o *GeneralInfoType) GetStoredValueSystem() bool {
	if o == nil || IsNil(o.StoredValueSystem) {
		var ret bool
		return ret
	}
	return *o.StoredValueSystem
}

// GetStoredValueSystemOk returns a tuple with the StoredValueSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetStoredValueSystemOk() (*bool, bool) {
	if o == nil || IsNil(o.StoredValueSystem) {
		return nil, false
	}
	return o.StoredValueSystem, true
}

// HasStoredValueSystem returns a boolean if a field has been set.
func (o *GeneralInfoType) HasStoredValueSystem() bool {
	if o != nil && !IsNil(o.StoredValueSystem) {
		return true
	}

	return false
}

// SetStoredValueSystem gets a reference to the given bool and assigns it to the StoredValueSystem field.
func (o *GeneralInfoType) SetStoredValueSystem(v bool) {
	o.StoredValueSystem = &v
}

// GetSendEnhancedFields returns the SendEnhancedFields field value if set, zero value otherwise.
func (o *GeneralInfoType) GetSendEnhancedFields() bool {
	if o == nil || IsNil(o.SendEnhancedFields) {
		var ret bool
		return ret
	}
	return *o.SendEnhancedFields
}

// GetSendEnhancedFieldsOk returns a tuple with the SendEnhancedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetSendEnhancedFieldsOk() (*bool, bool) {
	if o == nil || IsNil(o.SendEnhancedFields) {
		return nil, false
	}
	return o.SendEnhancedFields, true
}

// HasSendEnhancedFields returns a boolean if a field has been set.
func (o *GeneralInfoType) HasSendEnhancedFields() bool {
	if o != nil && !IsNil(o.SendEnhancedFields) {
		return true
	}

	return false
}

// SetSendEnhancedFields gets a reference to the given bool and assigns it to the SendEnhancedFields field.
func (o *GeneralInfoType) SetSendEnhancedFields(v bool) {
	o.SendEnhancedFields = &v
}

// GetCardPresentFlag returns the CardPresentFlag field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCardPresentFlag() bool {
	if o == nil || IsNil(o.CardPresentFlag) {
		var ret bool
		return ret
	}
	return *o.CardPresentFlag
}

// GetCardPresentFlagOk returns a tuple with the CardPresentFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCardPresentFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.CardPresentFlag) {
		return nil, false
	}
	return o.CardPresentFlag, true
}

// HasCardPresentFlag returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCardPresentFlag() bool {
	if o != nil && !IsNil(o.CardPresentFlag) {
		return true
	}

	return false
}

// SetCardPresentFlag gets a reference to the given bool and assigns it to the CardPresentFlag field.
func (o *GeneralInfoType) SetCardPresentFlag(v bool) {
	o.CardPresentFlag = &v
}

// GetHandleNightAudit returns the HandleNightAudit field value if set, zero value otherwise.
func (o *GeneralInfoType) GetHandleNightAudit() bool {
	if o == nil || IsNil(o.HandleNightAudit) {
		var ret bool
		return ret
	}
	return *o.HandleNightAudit
}

// GetHandleNightAuditOk returns a tuple with the HandleNightAudit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetHandleNightAuditOk() (*bool, bool) {
	if o == nil || IsNil(o.HandleNightAudit) {
		return nil, false
	}
	return o.HandleNightAudit, true
}

// HasHandleNightAudit returns a boolean if a field has been set.
func (o *GeneralInfoType) HasHandleNightAudit() bool {
	if o != nil && !IsNil(o.HandleNightAudit) {
		return true
	}

	return false
}

// SetHandleNightAudit gets a reference to the given bool and assigns it to the HandleNightAudit field.
func (o *GeneralInfoType) SetHandleNightAudit(v bool) {
	o.HandleNightAudit = &v
}

// GetRegularTransaction returns the RegularTransaction field value if set, zero value otherwise.
func (o *GeneralInfoType) GetRegularTransaction() bool {
	if o == nil || IsNil(o.RegularTransaction) {
		var ret bool
		return ret
	}
	return *o.RegularTransaction
}

// GetRegularTransactionOk returns a tuple with the RegularTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetRegularTransactionOk() (*bool, bool) {
	if o == nil || IsNil(o.RegularTransaction) {
		return nil, false
	}
	return o.RegularTransaction, true
}

// HasRegularTransaction returns a boolean if a field has been set.
func (o *GeneralInfoType) HasRegularTransaction() bool {
	if o != nil && !IsNil(o.RegularTransaction) {
		return true
	}

	return false
}

// SetRegularTransaction gets a reference to the given bool and assigns it to the RegularTransaction field.
func (o *GeneralInfoType) SetRegularTransaction(v bool) {
	o.RegularTransaction = &v
}

// GetCourtesyCardHandling returns the CourtesyCardHandling field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCourtesyCardHandling() bool {
	if o == nil || IsNil(o.CourtesyCardHandling) {
		var ret bool
		return ret
	}
	return *o.CourtesyCardHandling
}

// GetCourtesyCardHandlingOk returns a tuple with the CourtesyCardHandling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCourtesyCardHandlingOk() (*bool, bool) {
	if o == nil || IsNil(o.CourtesyCardHandling) {
		return nil, false
	}
	return o.CourtesyCardHandling, true
}

// HasCourtesyCardHandling returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCourtesyCardHandling() bool {
	if o != nil && !IsNil(o.CourtesyCardHandling) {
		return true
	}

	return false
}

// SetCourtesyCardHandling gets a reference to the given bool and assigns it to the CourtesyCardHandling field.
func (o *GeneralInfoType) SetCourtesyCardHandling(v bool) {
	o.CourtesyCardHandling = &v
}

// GetSendEndOfDay returns the SendEndOfDay field value if set, zero value otherwise.
func (o *GeneralInfoType) GetSendEndOfDay() bool {
	if o == nil || IsNil(o.SendEndOfDay) {
		var ret bool
		return ret
	}
	return *o.SendEndOfDay
}

// GetSendEndOfDayOk returns a tuple with the SendEndOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetSendEndOfDayOk() (*bool, bool) {
	if o == nil || IsNil(o.SendEndOfDay) {
		return nil, false
	}
	return o.SendEndOfDay, true
}

// HasSendEndOfDay returns a boolean if a field has been set.
func (o *GeneralInfoType) HasSendEndOfDay() bool {
	if o != nil && !IsNil(o.SendEndOfDay) {
		return true
	}

	return false
}

// SetSendEndOfDay gets a reference to the given bool and assigns it to the SendEndOfDay field.
func (o *GeneralInfoType) SetSendEndOfDay(v bool) {
	o.SendEndOfDay = &v
}

// GetPortNumber1 returns the PortNumber1 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetPortNumber1() string {
	if o == nil || IsNil(o.PortNumber1) {
		var ret string
		return ret
	}
	return *o.PortNumber1
}

// GetPortNumber1Ok returns a tuple with the PortNumber1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetPortNumber1Ok() (*string, bool) {
	if o == nil || IsNil(o.PortNumber1) {
		return nil, false
	}
	return o.PortNumber1, true
}

// HasPortNumber1 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasPortNumber1() bool {
	if o != nil && !IsNil(o.PortNumber1) {
		return true
	}

	return false
}

// SetPortNumber1 gets a reference to the given string and assigns it to the PortNumber1 field.
func (o *GeneralInfoType) SetPortNumber1(v string) {
	o.PortNumber1 = &v
}

// GetPortNumber2 returns the PortNumber2 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetPortNumber2() string {
	if o == nil || IsNil(o.PortNumber2) {
		var ret string
		return ret
	}
	return *o.PortNumber2
}

// GetPortNumber2Ok returns a tuple with the PortNumber2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetPortNumber2Ok() (*string, bool) {
	if o == nil || IsNil(o.PortNumber2) {
		return nil, false
	}
	return o.PortNumber2, true
}

// HasPortNumber2 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasPortNumber2() bool {
	if o != nil && !IsNil(o.PortNumber2) {
		return true
	}

	return false
}

// SetPortNumber2 gets a reference to the given string and assigns it to the PortNumber2 field.
func (o *GeneralInfoType) SetPortNumber2(v string) {
	o.PortNumber2 = &v
}

// GetPortNumber3 returns the PortNumber3 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetPortNumber3() string {
	if o == nil || IsNil(o.PortNumber3) {
		var ret string
		return ret
	}
	return *o.PortNumber3
}

// GetPortNumber3Ok returns a tuple with the PortNumber3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetPortNumber3Ok() (*string, bool) {
	if o == nil || IsNil(o.PortNumber3) {
		return nil, false
	}
	return o.PortNumber3, true
}

// HasPortNumber3 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasPortNumber3() bool {
	if o != nil && !IsNil(o.PortNumber3) {
		return true
	}

	return false
}

// SetPortNumber3 gets a reference to the given string and assigns it to the PortNumber3 field.
func (o *GeneralInfoType) SetPortNumber3(v string) {
	o.PortNumber3 = &v
}

// GetPortNumber4 returns the PortNumber4 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetPortNumber4() string {
	if o == nil || IsNil(o.PortNumber4) {
		var ret string
		return ret
	}
	return *o.PortNumber4
}

// GetPortNumber4Ok returns a tuple with the PortNumber4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetPortNumber4Ok() (*string, bool) {
	if o == nil || IsNil(o.PortNumber4) {
		return nil, false
	}
	return o.PortNumber4, true
}

// HasPortNumber4 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasPortNumber4() bool {
	if o != nil && !IsNil(o.PortNumber4) {
		return true
	}

	return false
}

// SetPortNumber4 gets a reference to the given string and assigns it to the PortNumber4 field.
func (o *GeneralInfoType) SetPortNumber4(v string) {
	o.PortNumber4 = &v
}

// GetIPAddress returns the IPAddress field value if set, zero value otherwise.
func (o *GeneralInfoType) GetIPAddress() string {
	if o == nil || IsNil(o.IPAddress) {
		var ret string
		return ret
	}
	return *o.IPAddress
}

// GetIPAddressOk returns a tuple with the IPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetIPAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IPAddress) {
		return nil, false
	}
	return o.IPAddress, true
}

// HasIPAddress returns a boolean if a field has been set.
func (o *GeneralInfoType) HasIPAddress() bool {
	if o != nil && !IsNil(o.IPAddress) {
		return true
	}

	return false
}

// SetIPAddress gets a reference to the given string and assigns it to the IPAddress field.
func (o *GeneralInfoType) SetIPAddress(v string) {
	o.IPAddress = &v
}

// GetSVRedeemTrx returns the SVRedeemTrx field value if set, zero value otherwise.
func (o *GeneralInfoType) GetSVRedeemTrx() string {
	if o == nil || IsNil(o.SVRedeemTrx) {
		var ret string
		return ret
	}
	return *o.SVRedeemTrx
}

// GetSVRedeemTrxOk returns a tuple with the SVRedeemTrx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetSVRedeemTrxOk() (*string, bool) {
	if o == nil || IsNil(o.SVRedeemTrx) {
		return nil, false
	}
	return o.SVRedeemTrx, true
}

// HasSVRedeemTrx returns a boolean if a field has been set.
func (o *GeneralInfoType) HasSVRedeemTrx() bool {
	if o != nil && !IsNil(o.SVRedeemTrx) {
		return true
	}

	return false
}

// SetSVRedeemTrx gets a reference to the given string and assigns it to the SVRedeemTrx field.
func (o *GeneralInfoType) SetSVRedeemTrx(v string) {
	o.SVRedeemTrx = &v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *GeneralInfoType) GetDevice() string {
	if o == nil || IsNil(o.Device) {
		var ret string
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetDeviceOk() (*string, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *GeneralInfoType) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given string and assigns it to the Device field.
func (o *GeneralInfoType) SetDevice(v string) {
	o.Device = &v
}

// GetDepartmentCode1 returns the DepartmentCode1 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetDepartmentCode1() string {
	if o == nil || IsNil(o.DepartmentCode1) {
		var ret string
		return ret
	}
	return *o.DepartmentCode1
}

// GetDepartmentCode1Ok returns a tuple with the DepartmentCode1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetDepartmentCode1Ok() (*string, bool) {
	if o == nil || IsNil(o.DepartmentCode1) {
		return nil, false
	}
	return o.DepartmentCode1, true
}

// HasDepartmentCode1 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasDepartmentCode1() bool {
	if o != nil && !IsNil(o.DepartmentCode1) {
		return true
	}

	return false
}

// SetDepartmentCode1 gets a reference to the given string and assigns it to the DepartmentCode1 field.
func (o *GeneralInfoType) SetDepartmentCode1(v string) {
	o.DepartmentCode1 = &v
}

// GetDepartmentCode2 returns the DepartmentCode2 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetDepartmentCode2() string {
	if o == nil || IsNil(o.DepartmentCode2) {
		var ret string
		return ret
	}
	return *o.DepartmentCode2
}

// GetDepartmentCode2Ok returns a tuple with the DepartmentCode2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetDepartmentCode2Ok() (*string, bool) {
	if o == nil || IsNil(o.DepartmentCode2) {
		return nil, false
	}
	return o.DepartmentCode2, true
}

// HasDepartmentCode2 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasDepartmentCode2() bool {
	if o != nil && !IsNil(o.DepartmentCode2) {
		return true
	}

	return false
}

// SetDepartmentCode2 gets a reference to the given string and assigns it to the DepartmentCode2 field.
func (o *GeneralInfoType) SetDepartmentCode2(v string) {
	o.DepartmentCode2 = &v
}

// GetRollupTransactions returns the RollupTransactions field value if set, zero value otherwise.
func (o *GeneralInfoType) GetRollupTransactions() bool {
	if o == nil || IsNil(o.RollupTransactions) {
		var ret bool
		return ret
	}
	return *o.RollupTransactions
}

// GetRollupTransactionsOk returns a tuple with the RollupTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetRollupTransactionsOk() (*bool, bool) {
	if o == nil || IsNil(o.RollupTransactions) {
		return nil, false
	}
	return o.RollupTransactions, true
}

// HasRollupTransactions returns a boolean if a field has been set.
func (o *GeneralInfoType) HasRollupTransactions() bool {
	if o != nil && !IsNil(o.RollupTransactions) {
		return true
	}

	return false
}

// SetRollupTransactions gets a reference to the given bool and assigns it to the RollupTransactions field.
func (o *GeneralInfoType) SetRollupTransactions(v bool) {
	o.RollupTransactions = &v
}

// GetAllowVideoCheckout returns the AllowVideoCheckout field value if set, zero value otherwise.
func (o *GeneralInfoType) GetAllowVideoCheckout() bool {
	if o == nil || IsNil(o.AllowVideoCheckout) {
		var ret bool
		return ret
	}
	return *o.AllowVideoCheckout
}

// GetAllowVideoCheckoutOk returns a tuple with the AllowVideoCheckout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetAllowVideoCheckoutOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowVideoCheckout) {
		return nil, false
	}
	return o.AllowVideoCheckout, true
}

// HasAllowVideoCheckout returns a boolean if a field has been set.
func (o *GeneralInfoType) HasAllowVideoCheckout() bool {
	if o != nil && !IsNil(o.AllowVideoCheckout) {
		return true
	}

	return false
}

// SetAllowVideoCheckout gets a reference to the given bool and assigns it to the AllowVideoCheckout field.
func (o *GeneralInfoType) SetAllowVideoCheckout(v bool) {
	o.AllowVideoCheckout = &v
}

// GetCheckCreditLimit returns the CheckCreditLimit field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCheckCreditLimit() bool {
	if o == nil || IsNil(o.CheckCreditLimit) {
		var ret bool
		return ret
	}
	return *o.CheckCreditLimit
}

// GetCheckCreditLimitOk returns a tuple with the CheckCreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCheckCreditLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckCreditLimit) {
		return nil, false
	}
	return o.CheckCreditLimit, true
}

// HasCheckCreditLimit returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCheckCreditLimit() bool {
	if o != nil && !IsNil(o.CheckCreditLimit) {
		return true
	}

	return false
}

// SetCheckCreditLimit gets a reference to the given bool and assigns it to the CheckCreditLimit field.
func (o *GeneralInfoType) SetCheckCreditLimit(v bool) {
	o.CheckCreditLimit = &v
}

// GetCheckBalance returns the CheckBalance field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCheckBalance() bool {
	if o == nil || IsNil(o.CheckBalance) {
		var ret bool
		return ret
	}
	return *o.CheckBalance
}

// GetCheckBalanceOk returns a tuple with the CheckBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCheckBalanceOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckBalance) {
		return nil, false
	}
	return o.CheckBalance, true
}

// HasCheckBalance returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCheckBalance() bool {
	if o != nil && !IsNil(o.CheckBalance) {
		return true
	}

	return false
}

// SetCheckBalance gets a reference to the given bool and assigns it to the CheckBalance field.
func (o *GeneralInfoType) SetCheckBalance(v bool) {
	o.CheckBalance = &v
}

// GetCheckRouting returns the CheckRouting field value if set, zero value otherwise.
func (o *GeneralInfoType) GetCheckRouting() bool {
	if o == nil || IsNil(o.CheckRouting) {
		var ret bool
		return ret
	}
	return *o.CheckRouting
}

// GetCheckRoutingOk returns a tuple with the CheckRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetCheckRoutingOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckRouting) {
		return nil, false
	}
	return o.CheckRouting, true
}

// HasCheckRouting returns a boolean if a field has been set.
func (o *GeneralInfoType) HasCheckRouting() bool {
	if o != nil && !IsNil(o.CheckRouting) {
		return true
	}

	return false
}

// SetCheckRouting gets a reference to the given bool and assigns it to the CheckRouting field.
func (o *GeneralInfoType) SetCheckRouting(v bool) {
	o.CheckRouting = &v
}

// GetWakeupYn returns the WakeupYn field value if set, zero value otherwise.
func (o *GeneralInfoType) GetWakeupYn() bool {
	if o == nil || IsNil(o.WakeupYn) {
		var ret bool
		return ret
	}
	return *o.WakeupYn
}

// GetWakeupYnOk returns a tuple with the WakeupYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetWakeupYnOk() (*bool, bool) {
	if o == nil || IsNil(o.WakeupYn) {
		return nil, false
	}
	return o.WakeupYn, true
}

// HasWakeupYn returns a boolean if a field has been set.
func (o *GeneralInfoType) HasWakeupYn() bool {
	if o != nil && !IsNil(o.WakeupYn) {
		return true
	}

	return false
}

// SetWakeupYn gets a reference to the given bool and assigns it to the WakeupYn field.
func (o *GeneralInfoType) SetWakeupYn(v bool) {
	o.WakeupYn = &v
}

// GetWakeupHandledBy returns the WakeupHandledBy field value if set, zero value otherwise.
func (o *GeneralInfoType) GetWakeupHandledBy() string {
	if o == nil || IsNil(o.WakeupHandledBy) {
		var ret string
		return ret
	}
	return *o.WakeupHandledBy
}

// GetWakeupHandledByOk returns a tuple with the WakeupHandledBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetWakeupHandledByOk() (*string, bool) {
	if o == nil || IsNil(o.WakeupHandledBy) {
		return nil, false
	}
	return o.WakeupHandledBy, true
}

// HasWakeupHandledBy returns a boolean if a field has been set.
func (o *GeneralInfoType) HasWakeupHandledBy() bool {
	if o != nil && !IsNil(o.WakeupHandledBy) {
		return true
	}

	return false
}

// SetWakeupHandledBy gets a reference to the given string and assigns it to the WakeupHandledBy field.
func (o *GeneralInfoType) SetWakeupHandledBy(v string) {
	o.WakeupHandledBy = &v
}

// GetWakeRetry returns the WakeRetry field value if set, zero value otherwise.
func (o *GeneralInfoType) GetWakeRetry() int32 {
	if o == nil || IsNil(o.WakeRetry) {
		var ret int32
		return ret
	}
	return *o.WakeRetry
}

// GetWakeRetryOk returns a tuple with the WakeRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetWakeRetryOk() (*int32, bool) {
	if o == nil || IsNil(o.WakeRetry) {
		return nil, false
	}
	return o.WakeRetry, true
}

// HasWakeRetry returns a boolean if a field has been set.
func (o *GeneralInfoType) HasWakeRetry() bool {
	if o != nil && !IsNil(o.WakeRetry) {
		return true
	}

	return false
}

// SetWakeRetry gets a reference to the given int32 and assigns it to the WakeRetry field.
func (o *GeneralInfoType) SetWakeRetry(v int32) {
	o.WakeRetry = &v
}

// GetWakeDelay returns the WakeDelay field value if set, zero value otherwise.
func (o *GeneralInfoType) GetWakeDelay() int32 {
	if o == nil || IsNil(o.WakeDelay) {
		var ret int32
		return ret
	}
	return *o.WakeDelay
}

// GetWakeDelayOk returns a tuple with the WakeDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetWakeDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.WakeDelay) {
		return nil, false
	}
	return o.WakeDelay, true
}

// HasWakeDelay returns a boolean if a field has been set.
func (o *GeneralInfoType) HasWakeDelay() bool {
	if o != nil && !IsNil(o.WakeDelay) {
		return true
	}

	return false
}

// SetWakeDelay gets a reference to the given int32 and assigns it to the WakeDelay field.
func (o *GeneralInfoType) SetWakeDelay(v int32) {
	o.WakeDelay = &v
}

// GetPrevWake returns the PrevWake field value if set, zero value otherwise.
func (o *GeneralInfoType) GetPrevWake() int32 {
	if o == nil || IsNil(o.PrevWake) {
		var ret int32
		return ret
	}
	return *o.PrevWake
}

// GetPrevWakeOk returns a tuple with the PrevWake field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetPrevWakeOk() (*int32, bool) {
	if o == nil || IsNil(o.PrevWake) {
		return nil, false
	}
	return o.PrevWake, true
}

// HasPrevWake returns a boolean if a field has been set.
func (o *GeneralInfoType) HasPrevWake() bool {
	if o != nil && !IsNil(o.PrevWake) {
		return true
	}

	return false
}

// SetPrevWake gets a reference to the given int32 and assigns it to the PrevWake field.
func (o *GeneralInfoType) SetPrevWake(v int32) {
	o.PrevWake = &v
}

// GetFolioDisplayOption returns the FolioDisplayOption field value if set, zero value otherwise.
func (o *GeneralInfoType) GetFolioDisplayOption() string {
	if o == nil || IsNil(o.FolioDisplayOption) {
		var ret string
		return ret
	}
	return *o.FolioDisplayOption
}

// GetFolioDisplayOptionOk returns a tuple with the FolioDisplayOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetFolioDisplayOptionOk() (*string, bool) {
	if o == nil || IsNil(o.FolioDisplayOption) {
		return nil, false
	}
	return o.FolioDisplayOption, true
}

// HasFolioDisplayOption returns a boolean if a field has been set.
func (o *GeneralInfoType) HasFolioDisplayOption() bool {
	if o != nil && !IsNil(o.FolioDisplayOption) {
		return true
	}

	return false
}

// SetFolioDisplayOption gets a reference to the given string and assigns it to the FolioDisplayOption field.
func (o *GeneralInfoType) SetFolioDisplayOption(v string) {
	o.FolioDisplayOption = &v
}

// GetUserDefinedFolio1 returns the UserDefinedFolio1 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetUserDefinedFolio1() bool {
	if o == nil || IsNil(o.UserDefinedFolio1) {
		var ret bool
		return ret
	}
	return *o.UserDefinedFolio1
}

// GetUserDefinedFolio1Ok returns a tuple with the UserDefinedFolio1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetUserDefinedFolio1Ok() (*bool, bool) {
	if o == nil || IsNil(o.UserDefinedFolio1) {
		return nil, false
	}
	return o.UserDefinedFolio1, true
}

// HasUserDefinedFolio1 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasUserDefinedFolio1() bool {
	if o != nil && !IsNil(o.UserDefinedFolio1) {
		return true
	}

	return false
}

// SetUserDefinedFolio1 gets a reference to the given bool and assigns it to the UserDefinedFolio1 field.
func (o *GeneralInfoType) SetUserDefinedFolio1(v bool) {
	o.UserDefinedFolio1 = &v
}

// GetUserDefinedFolio2 returns the UserDefinedFolio2 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetUserDefinedFolio2() bool {
	if o == nil || IsNil(o.UserDefinedFolio2) {
		var ret bool
		return ret
	}
	return *o.UserDefinedFolio2
}

// GetUserDefinedFolio2Ok returns a tuple with the UserDefinedFolio2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetUserDefinedFolio2Ok() (*bool, bool) {
	if o == nil || IsNil(o.UserDefinedFolio2) {
		return nil, false
	}
	return o.UserDefinedFolio2, true
}

// HasUserDefinedFolio2 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasUserDefinedFolio2() bool {
	if o != nil && !IsNil(o.UserDefinedFolio2) {
		return true
	}

	return false
}

// SetUserDefinedFolio2 gets a reference to the given bool and assigns it to the UserDefinedFolio2 field.
func (o *GeneralInfoType) SetUserDefinedFolio2(v bool) {
	o.UserDefinedFolio2 = &v
}

// GetUserDefinedFolio3 returns the UserDefinedFolio3 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetUserDefinedFolio3() bool {
	if o == nil || IsNil(o.UserDefinedFolio3) {
		var ret bool
		return ret
	}
	return *o.UserDefinedFolio3
}

// GetUserDefinedFolio3Ok returns a tuple with the UserDefinedFolio3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetUserDefinedFolio3Ok() (*bool, bool) {
	if o == nil || IsNil(o.UserDefinedFolio3) {
		return nil, false
	}
	return o.UserDefinedFolio3, true
}

// HasUserDefinedFolio3 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasUserDefinedFolio3() bool {
	if o != nil && !IsNil(o.UserDefinedFolio3) {
		return true
	}

	return false
}

// SetUserDefinedFolio3 gets a reference to the given bool and assigns it to the UserDefinedFolio3 field.
func (o *GeneralInfoType) SetUserDefinedFolio3(v bool) {
	o.UserDefinedFolio3 = &v
}

// GetUserDefinedFolio4 returns the UserDefinedFolio4 field value if set, zero value otherwise.
func (o *GeneralInfoType) GetUserDefinedFolio4() bool {
	if o == nil || IsNil(o.UserDefinedFolio4) {
		var ret bool
		return ret
	}
	return *o.UserDefinedFolio4
}

// GetUserDefinedFolio4Ok returns a tuple with the UserDefinedFolio4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetUserDefinedFolio4Ok() (*bool, bool) {
	if o == nil || IsNil(o.UserDefinedFolio4) {
		return nil, false
	}
	return o.UserDefinedFolio4, true
}

// HasUserDefinedFolio4 returns a boolean if a field has been set.
func (o *GeneralInfoType) HasUserDefinedFolio4() bool {
	if o != nil && !IsNil(o.UserDefinedFolio4) {
		return true
	}

	return false
}

// SetUserDefinedFolio4 gets a reference to the given bool and assigns it to the UserDefinedFolio4 field.
func (o *GeneralInfoType) SetUserDefinedFolio4(v bool) {
	o.UserDefinedFolio4 = &v
}

// GetDisplayPhoneName returns the DisplayPhoneName field value if set, zero value otherwise.
func (o *GeneralInfoType) GetDisplayPhoneName() bool {
	if o == nil || IsNil(o.DisplayPhoneName) {
		var ret bool
		return ret
	}
	return *o.DisplayPhoneName
}

// GetDisplayPhoneNameOk returns a tuple with the DisplayPhoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetDisplayPhoneNameOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayPhoneName) {
		return nil, false
	}
	return o.DisplayPhoneName, true
}

// HasDisplayPhoneName returns a boolean if a field has been set.
func (o *GeneralInfoType) HasDisplayPhoneName() bool {
	if o != nil && !IsNil(o.DisplayPhoneName) {
		return true
	}

	return false
}

// SetDisplayPhoneName gets a reference to the given bool and assigns it to the DisplayPhoneName field.
func (o *GeneralInfoType) SetDisplayPhoneName(v bool) {
	o.DisplayPhoneName = &v
}

// GetKeyPinActive returns the KeyPinActive field value if set, zero value otherwise.
func (o *GeneralInfoType) GetKeyPinActive() bool {
	if o == nil || IsNil(o.KeyPinActive) {
		var ret bool
		return ret
	}
	return *o.KeyPinActive
}

// GetKeyPinActiveOk returns a tuple with the KeyPinActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetKeyPinActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.KeyPinActive) {
		return nil, false
	}
	return o.KeyPinActive, true
}

// HasKeyPinActive returns a boolean if a field has been set.
func (o *GeneralInfoType) HasKeyPinActive() bool {
	if o != nil && !IsNil(o.KeyPinActive) {
		return true
	}

	return false
}

// SetKeyPinActive gets a reference to the given bool and assigns it to the KeyPinActive field.
func (o *GeneralInfoType) SetKeyPinActive(v bool) {
	o.KeyPinActive = &v
}

// GetAllPrintDetailOn returns the AllPrintDetailOn field value if set, zero value otherwise.
func (o *GeneralInfoType) GetAllPrintDetailOn() bool {
	if o == nil || IsNil(o.AllPrintDetailOn) {
		var ret bool
		return ret
	}
	return *o.AllPrintDetailOn
}

// GetAllPrintDetailOnOk returns a tuple with the AllPrintDetailOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralInfoType) GetAllPrintDetailOnOk() (*bool, bool) {
	if o == nil || IsNil(o.AllPrintDetailOn) {
		return nil, false
	}
	return o.AllPrintDetailOn, true
}

// HasAllPrintDetailOn returns a boolean if a field has been set.
func (o *GeneralInfoType) HasAllPrintDetailOn() bool {
	if o != nil && !IsNil(o.AllPrintDetailOn) {
		return true
	}

	return false
}

// SetAllPrintDetailOn gets a reference to the given bool and assigns it to the AllPrintDetailOn field.
func (o *GeneralInfoType) SetAllPrintDetailOn(v bool) {
	o.AllPrintDetailOn = &v
}

func (o GeneralInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneralInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateSVCheckIn) {
		toSerialize["createSVCheckIn"] = o.CreateSVCheckIn
	}
	if !IsNil(o.EnableFailover) {
		toSerialize["enableFailover"] = o.EnableFailover
	}
	if !IsNil(o.CcVaultFunction) {
		toSerialize["ccVaultFunction"] = o.CcVaultFunction
	}
	if !IsNil(o.EnableResend) {
		toSerialize["enableResend"] = o.EnableResend
	}
	if !IsNil(o.SendARAuthType) {
		toSerialize["sendARAuthType"] = o.SendARAuthType
	}
	if !IsNil(o.EnableDBVerification) {
		toSerialize["enableDBVerification"] = o.EnableDBVerification
	}
	if !IsNil(o.AllowCCCancelTransaction) {
		toSerialize["allowCCCancelTransaction"] = o.AllowCCCancelTransaction
	}
	if !IsNil(o.ShowStoredValuePin) {
		toSerialize["showStoredValuePin"] = o.ShowStoredValuePin
	}
	if !IsNil(o.ShowSVTransaction) {
		toSerialize["showSVTransaction"] = o.ShowSVTransaction
	}
	if !IsNil(o.StoredValueSystem) {
		toSerialize["storedValueSystem"] = o.StoredValueSystem
	}
	if !IsNil(o.SendEnhancedFields) {
		toSerialize["sendEnhancedFields"] = o.SendEnhancedFields
	}
	if !IsNil(o.CardPresentFlag) {
		toSerialize["cardPresentFlag"] = o.CardPresentFlag
	}
	if !IsNil(o.HandleNightAudit) {
		toSerialize["handleNightAudit"] = o.HandleNightAudit
	}
	if !IsNil(o.RegularTransaction) {
		toSerialize["regularTransaction"] = o.RegularTransaction
	}
	if !IsNil(o.CourtesyCardHandling) {
		toSerialize["courtesyCardHandling"] = o.CourtesyCardHandling
	}
	if !IsNil(o.SendEndOfDay) {
		toSerialize["sendEndOfDay"] = o.SendEndOfDay
	}
	if !IsNil(o.PortNumber1) {
		toSerialize["portNumber1"] = o.PortNumber1
	}
	if !IsNil(o.PortNumber2) {
		toSerialize["portNumber2"] = o.PortNumber2
	}
	if !IsNil(o.PortNumber3) {
		toSerialize["portNumber3"] = o.PortNumber3
	}
	if !IsNil(o.PortNumber4) {
		toSerialize["portNumber4"] = o.PortNumber4
	}
	if !IsNil(o.IPAddress) {
		toSerialize["iPAddress"] = o.IPAddress
	}
	if !IsNil(o.SVRedeemTrx) {
		toSerialize["sVRedeemTrx"] = o.SVRedeemTrx
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.DepartmentCode1) {
		toSerialize["departmentCode1"] = o.DepartmentCode1
	}
	if !IsNil(o.DepartmentCode2) {
		toSerialize["departmentCode2"] = o.DepartmentCode2
	}
	if !IsNil(o.RollupTransactions) {
		toSerialize["rollupTransactions"] = o.RollupTransactions
	}
	if !IsNil(o.AllowVideoCheckout) {
		toSerialize["allowVideoCheckout"] = o.AllowVideoCheckout
	}
	if !IsNil(o.CheckCreditLimit) {
		toSerialize["checkCreditLimit"] = o.CheckCreditLimit
	}
	if !IsNil(o.CheckBalance) {
		toSerialize["checkBalance"] = o.CheckBalance
	}
	if !IsNil(o.CheckRouting) {
		toSerialize["checkRouting"] = o.CheckRouting
	}
	if !IsNil(o.WakeupYn) {
		toSerialize["wakeupYn"] = o.WakeupYn
	}
	if !IsNil(o.WakeupHandledBy) {
		toSerialize["wakeupHandledBy"] = o.WakeupHandledBy
	}
	if !IsNil(o.WakeRetry) {
		toSerialize["wakeRetry"] = o.WakeRetry
	}
	if !IsNil(o.WakeDelay) {
		toSerialize["wakeDelay"] = o.WakeDelay
	}
	if !IsNil(o.PrevWake) {
		toSerialize["prevWake"] = o.PrevWake
	}
	if !IsNil(o.FolioDisplayOption) {
		toSerialize["folioDisplayOption"] = o.FolioDisplayOption
	}
	if !IsNil(o.UserDefinedFolio1) {
		toSerialize["userDefinedFolio1"] = o.UserDefinedFolio1
	}
	if !IsNil(o.UserDefinedFolio2) {
		toSerialize["userDefinedFolio2"] = o.UserDefinedFolio2
	}
	if !IsNil(o.UserDefinedFolio3) {
		toSerialize["userDefinedFolio3"] = o.UserDefinedFolio3
	}
	if !IsNil(o.UserDefinedFolio4) {
		toSerialize["userDefinedFolio4"] = o.UserDefinedFolio4
	}
	if !IsNil(o.DisplayPhoneName) {
		toSerialize["displayPhoneName"] = o.DisplayPhoneName
	}
	if !IsNil(o.KeyPinActive) {
		toSerialize["keyPinActive"] = o.KeyPinActive
	}
	if !IsNil(o.AllPrintDetailOn) {
		toSerialize["allPrintDetailOn"] = o.AllPrintDetailOn
	}
	return toSerialize, nil
}

type NullableGeneralInfoType struct {
	value *GeneralInfoType
	isSet bool
}

func (v NullableGeneralInfoType) Get() *GeneralInfoType {
	return v.value
}

func (v *NullableGeneralInfoType) Set(val *GeneralInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralInfoType(val *GeneralInfoType) *NullableGeneralInfoType {
	return &NullableGeneralInfoType{value: val, isSet: true}
}

func (v NullableGeneralInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


