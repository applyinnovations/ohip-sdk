/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the ConfirmationDeliveryMethodType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfirmationDeliveryMethodType{}

// ConfirmationDeliveryMethodType Confirmation letter delivery method configuration, settings for Text Message, Email and Fax Delivery of Confirmation Letters
type ConfirmationDeliveryMethodType struct {
	Email *EmailDeliveryConfigurationType `json:"email,omitempty"`
	Fax *FaxDeliveryConfigurationType `json:"fax,omitempty"`
	TextMessage *TextMessageDeliveryConfigurationType `json:"textMessage,omitempty"`
}

// NewConfirmationDeliveryMethodType instantiates a new ConfirmationDeliveryMethodType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmationDeliveryMethodType() *ConfirmationDeliveryMethodType {
	this := ConfirmationDeliveryMethodType{}
	return &this
}

// NewConfirmationDeliveryMethodTypeWithDefaults instantiates a new ConfirmationDeliveryMethodType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmationDeliveryMethodTypeWithDefaults() *ConfirmationDeliveryMethodType {
	this := ConfirmationDeliveryMethodType{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ConfirmationDeliveryMethodType) GetEmail() EmailDeliveryConfigurationType {
	if o == nil || IsNil(o.Email) {
		var ret EmailDeliveryConfigurationType
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmationDeliveryMethodType) GetEmailOk() (*EmailDeliveryConfigurationType, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ConfirmationDeliveryMethodType) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given EmailDeliveryConfigurationType and assigns it to the Email field.
func (o *ConfirmationDeliveryMethodType) SetEmail(v EmailDeliveryConfigurationType) {
	o.Email = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *ConfirmationDeliveryMethodType) GetFax() FaxDeliveryConfigurationType {
	if o == nil || IsNil(o.Fax) {
		var ret FaxDeliveryConfigurationType
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmationDeliveryMethodType) GetFaxOk() (*FaxDeliveryConfigurationType, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *ConfirmationDeliveryMethodType) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given FaxDeliveryConfigurationType and assigns it to the Fax field.
func (o *ConfirmationDeliveryMethodType) SetFax(v FaxDeliveryConfigurationType) {
	o.Fax = &v
}

// GetTextMessage returns the TextMessage field value if set, zero value otherwise.
func (o *ConfirmationDeliveryMethodType) GetTextMessage() TextMessageDeliveryConfigurationType {
	if o == nil || IsNil(o.TextMessage) {
		var ret TextMessageDeliveryConfigurationType
		return ret
	}
	return *o.TextMessage
}

// GetTextMessageOk returns a tuple with the TextMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmationDeliveryMethodType) GetTextMessageOk() (*TextMessageDeliveryConfigurationType, bool) {
	if o == nil || IsNil(o.TextMessage) {
		return nil, false
	}
	return o.TextMessage, true
}

// HasTextMessage returns a boolean if a field has been set.
func (o *ConfirmationDeliveryMethodType) HasTextMessage() bool {
	if o != nil && !IsNil(o.TextMessage) {
		return true
	}

	return false
}

// SetTextMessage gets a reference to the given TextMessageDeliveryConfigurationType and assigns it to the TextMessage field.
func (o *ConfirmationDeliveryMethodType) SetTextMessage(v TextMessageDeliveryConfigurationType) {
	o.TextMessage = &v
}

func (o ConfirmationDeliveryMethodType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfirmationDeliveryMethodType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.TextMessage) {
		toSerialize["textMessage"] = o.TextMessage
	}
	return toSerialize, nil
}

type NullableConfirmationDeliveryMethodType struct {
	value *ConfirmationDeliveryMethodType
	isSet bool
}

func (v NullableConfirmationDeliveryMethodType) Get() *ConfirmationDeliveryMethodType {
	return v.value
}

func (v *NullableConfirmationDeliveryMethodType) Set(val *ConfirmationDeliveryMethodType) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmationDeliveryMethodType) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmationDeliveryMethodType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmationDeliveryMethodType(val *ConfirmationDeliveryMethodType) *NullableConfirmationDeliveryMethodType {
	return &NullableConfirmationDeliveryMethodType{value: val, isSet: true}
}

func (v NullableConfirmationDeliveryMethodType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmationDeliveryMethodType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


