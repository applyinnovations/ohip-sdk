/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the InterfaceRoomType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfaceRoomType{}

// InterfaceRoomType struct for InterfaceRoomType
type InterfaceRoomType struct {
	// Hotel Code of the Interface Room.
	HotelId *string `json:"hotelId,omitempty"`
	// Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.
	Logo *string `json:"logo,omitempty"`
	// Front Office Room Type.
	RoomType *string `json:"roomType,omitempty"`
	// Front Office Room Number.
	RoomId *string `json:"roomId,omitempty"`
	// External System's extension number.
	LineNumber *string `json:"lineNumber,omitempty"`
	// External System's extension number. It is used for editing a record. It is logically part of the record ID, and can actually be updated.
	OldLineNumber *string `json:"oldLineNumber,omitempty"`
	// From Room Number
	FromRoom *string `json:"fromRoom,omitempty"`
	// To Room Number
	ToRoom *string `json:"toRoom,omitempty"`
	// From Line Number
	FromLine *string `json:"fromLine,omitempty"`
	// To Line Number
	ToLine *string `json:"toLine,omitempty"`
	// Line Type of an Interface Room.
	Type *string `json:"type,omitempty"`
	DataLine *DataLineType `json:"dataLine,omitempty"`
	// Translation Table Id as defined in the IFC_CTRL table. It is also referred as Xlat Id.
	DataLineId *string `json:"dataLineId,omitempty"`
	// Value to set/check if the wake up call funtionality is enabled/disabled for the particular line number.
	WakeUpCall *bool `json:"wakeUpCall,omitempty"`
	DoNotDisturb *DoNotDisturbType `json:"doNotDisturb,omitempty"`
	ClassOfService *ClassOfServiceConfigType `json:"classOfService,omitempty"`
	DirectInwardDial *DirectInwardDialType `json:"directInwardDial,omitempty"`
	MessageWaiting *MessageWaitingType `json:"messageWaiting,omitempty"`
	MaskDialNumber *MaskDialNumberType `json:"maskDialNumber,omitempty"`
}

// NewInterfaceRoomType instantiates a new InterfaceRoomType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfaceRoomType() *InterfaceRoomType {
	this := InterfaceRoomType{}
	return &this
}

// NewInterfaceRoomTypeWithDefaults instantiates a new InterfaceRoomType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfaceRoomTypeWithDefaults() *InterfaceRoomType {
	this := InterfaceRoomType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *InterfaceRoomType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *InterfaceRoomType) SetLogo(v string) {
	o.Logo = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *InterfaceRoomType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *InterfaceRoomType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetLineNumber() string {
	if o == nil || IsNil(o.LineNumber) {
		var ret string
		return ret
	}
	return *o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.LineNumber) {
		return nil, false
	}
	return o.LineNumber, true
}

// HasLineNumber returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasLineNumber() bool {
	if o != nil && !IsNil(o.LineNumber) {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given string and assigns it to the LineNumber field.
func (o *InterfaceRoomType) SetLineNumber(v string) {
	o.LineNumber = &v
}

// GetOldLineNumber returns the OldLineNumber field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetOldLineNumber() string {
	if o == nil || IsNil(o.OldLineNumber) {
		var ret string
		return ret
	}
	return *o.OldLineNumber
}

// GetOldLineNumberOk returns a tuple with the OldLineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetOldLineNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OldLineNumber) {
		return nil, false
	}
	return o.OldLineNumber, true
}

// HasOldLineNumber returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasOldLineNumber() bool {
	if o != nil && !IsNil(o.OldLineNumber) {
		return true
	}

	return false
}

// SetOldLineNumber gets a reference to the given string and assigns it to the OldLineNumber field.
func (o *InterfaceRoomType) SetOldLineNumber(v string) {
	o.OldLineNumber = &v
}

// GetFromRoom returns the FromRoom field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetFromRoom() string {
	if o == nil || IsNil(o.FromRoom) {
		var ret string
		return ret
	}
	return *o.FromRoom
}

// GetFromRoomOk returns a tuple with the FromRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetFromRoomOk() (*string, bool) {
	if o == nil || IsNil(o.FromRoom) {
		return nil, false
	}
	return o.FromRoom, true
}

// HasFromRoom returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasFromRoom() bool {
	if o != nil && !IsNil(o.FromRoom) {
		return true
	}

	return false
}

// SetFromRoom gets a reference to the given string and assigns it to the FromRoom field.
func (o *InterfaceRoomType) SetFromRoom(v string) {
	o.FromRoom = &v
}

// GetToRoom returns the ToRoom field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetToRoom() string {
	if o == nil || IsNil(o.ToRoom) {
		var ret string
		return ret
	}
	return *o.ToRoom
}

// GetToRoomOk returns a tuple with the ToRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetToRoomOk() (*string, bool) {
	if o == nil || IsNil(o.ToRoom) {
		return nil, false
	}
	return o.ToRoom, true
}

// HasToRoom returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasToRoom() bool {
	if o != nil && !IsNil(o.ToRoom) {
		return true
	}

	return false
}

// SetToRoom gets a reference to the given string and assigns it to the ToRoom field.
func (o *InterfaceRoomType) SetToRoom(v string) {
	o.ToRoom = &v
}

// GetFromLine returns the FromLine field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetFromLine() string {
	if o == nil || IsNil(o.FromLine) {
		var ret string
		return ret
	}
	return *o.FromLine
}

// GetFromLineOk returns a tuple with the FromLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetFromLineOk() (*string, bool) {
	if o == nil || IsNil(o.FromLine) {
		return nil, false
	}
	return o.FromLine, true
}

// HasFromLine returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasFromLine() bool {
	if o != nil && !IsNil(o.FromLine) {
		return true
	}

	return false
}

// SetFromLine gets a reference to the given string and assigns it to the FromLine field.
func (o *InterfaceRoomType) SetFromLine(v string) {
	o.FromLine = &v
}

// GetToLine returns the ToLine field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetToLine() string {
	if o == nil || IsNil(o.ToLine) {
		var ret string
		return ret
	}
	return *o.ToLine
}

// GetToLineOk returns a tuple with the ToLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetToLineOk() (*string, bool) {
	if o == nil || IsNil(o.ToLine) {
		return nil, false
	}
	return o.ToLine, true
}

// HasToLine returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasToLine() bool {
	if o != nil && !IsNil(o.ToLine) {
		return true
	}

	return false
}

// SetToLine gets a reference to the given string and assigns it to the ToLine field.
func (o *InterfaceRoomType) SetToLine(v string) {
	o.ToLine = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InterfaceRoomType) SetType(v string) {
	o.Type = &v
}

// GetDataLine returns the DataLine field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetDataLine() DataLineType {
	if o == nil || IsNil(o.DataLine) {
		var ret DataLineType
		return ret
	}
	return *o.DataLine
}

// GetDataLineOk returns a tuple with the DataLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetDataLineOk() (*DataLineType, bool) {
	if o == nil || IsNil(o.DataLine) {
		return nil, false
	}
	return o.DataLine, true
}

// HasDataLine returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasDataLine() bool {
	if o != nil && !IsNil(o.DataLine) {
		return true
	}

	return false
}

// SetDataLine gets a reference to the given DataLineType and assigns it to the DataLine field.
func (o *InterfaceRoomType) SetDataLine(v DataLineType) {
	o.DataLine = &v
}

// GetDataLineId returns the DataLineId field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetDataLineId() string {
	if o == nil || IsNil(o.DataLineId) {
		var ret string
		return ret
	}
	return *o.DataLineId
}

// GetDataLineIdOk returns a tuple with the DataLineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetDataLineIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataLineId) {
		return nil, false
	}
	return o.DataLineId, true
}

// HasDataLineId returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasDataLineId() bool {
	if o != nil && !IsNil(o.DataLineId) {
		return true
	}

	return false
}

// SetDataLineId gets a reference to the given string and assigns it to the DataLineId field.
func (o *InterfaceRoomType) SetDataLineId(v string) {
	o.DataLineId = &v
}

// GetWakeUpCall returns the WakeUpCall field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetWakeUpCall() bool {
	if o == nil || IsNil(o.WakeUpCall) {
		var ret bool
		return ret
	}
	return *o.WakeUpCall
}

// GetWakeUpCallOk returns a tuple with the WakeUpCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetWakeUpCallOk() (*bool, bool) {
	if o == nil || IsNil(o.WakeUpCall) {
		return nil, false
	}
	return o.WakeUpCall, true
}

// HasWakeUpCall returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasWakeUpCall() bool {
	if o != nil && !IsNil(o.WakeUpCall) {
		return true
	}

	return false
}

// SetWakeUpCall gets a reference to the given bool and assigns it to the WakeUpCall field.
func (o *InterfaceRoomType) SetWakeUpCall(v bool) {
	o.WakeUpCall = &v
}

// GetDoNotDisturb returns the DoNotDisturb field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetDoNotDisturb() DoNotDisturbType {
	if o == nil || IsNil(o.DoNotDisturb) {
		var ret DoNotDisturbType
		return ret
	}
	return *o.DoNotDisturb
}

// GetDoNotDisturbOk returns a tuple with the DoNotDisturb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetDoNotDisturbOk() (*DoNotDisturbType, bool) {
	if o == nil || IsNil(o.DoNotDisturb) {
		return nil, false
	}
	return o.DoNotDisturb, true
}

// HasDoNotDisturb returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasDoNotDisturb() bool {
	if o != nil && !IsNil(o.DoNotDisturb) {
		return true
	}

	return false
}

// SetDoNotDisturb gets a reference to the given DoNotDisturbType and assigns it to the DoNotDisturb field.
func (o *InterfaceRoomType) SetDoNotDisturb(v DoNotDisturbType) {
	o.DoNotDisturb = &v
}

// GetClassOfService returns the ClassOfService field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetClassOfService() ClassOfServiceConfigType {
	if o == nil || IsNil(o.ClassOfService) {
		var ret ClassOfServiceConfigType
		return ret
	}
	return *o.ClassOfService
}

// GetClassOfServiceOk returns a tuple with the ClassOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetClassOfServiceOk() (*ClassOfServiceConfigType, bool) {
	if o == nil || IsNil(o.ClassOfService) {
		return nil, false
	}
	return o.ClassOfService, true
}

// HasClassOfService returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasClassOfService() bool {
	if o != nil && !IsNil(o.ClassOfService) {
		return true
	}

	return false
}

// SetClassOfService gets a reference to the given ClassOfServiceConfigType and assigns it to the ClassOfService field.
func (o *InterfaceRoomType) SetClassOfService(v ClassOfServiceConfigType) {
	o.ClassOfService = &v
}

// GetDirectInwardDial returns the DirectInwardDial field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetDirectInwardDial() DirectInwardDialType {
	if o == nil || IsNil(o.DirectInwardDial) {
		var ret DirectInwardDialType
		return ret
	}
	return *o.DirectInwardDial
}

// GetDirectInwardDialOk returns a tuple with the DirectInwardDial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetDirectInwardDialOk() (*DirectInwardDialType, bool) {
	if o == nil || IsNil(o.DirectInwardDial) {
		return nil, false
	}
	return o.DirectInwardDial, true
}

// HasDirectInwardDial returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasDirectInwardDial() bool {
	if o != nil && !IsNil(o.DirectInwardDial) {
		return true
	}

	return false
}

// SetDirectInwardDial gets a reference to the given DirectInwardDialType and assigns it to the DirectInwardDial field.
func (o *InterfaceRoomType) SetDirectInwardDial(v DirectInwardDialType) {
	o.DirectInwardDial = &v
}

// GetMessageWaiting returns the MessageWaiting field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetMessageWaiting() MessageWaitingType {
	if o == nil || IsNil(o.MessageWaiting) {
		var ret MessageWaitingType
		return ret
	}
	return *o.MessageWaiting
}

// GetMessageWaitingOk returns a tuple with the MessageWaiting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetMessageWaitingOk() (*MessageWaitingType, bool) {
	if o == nil || IsNil(o.MessageWaiting) {
		return nil, false
	}
	return o.MessageWaiting, true
}

// HasMessageWaiting returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasMessageWaiting() bool {
	if o != nil && !IsNil(o.MessageWaiting) {
		return true
	}

	return false
}

// SetMessageWaiting gets a reference to the given MessageWaitingType and assigns it to the MessageWaiting field.
func (o *InterfaceRoomType) SetMessageWaiting(v MessageWaitingType) {
	o.MessageWaiting = &v
}

// GetMaskDialNumber returns the MaskDialNumber field value if set, zero value otherwise.
func (o *InterfaceRoomType) GetMaskDialNumber() MaskDialNumberType {
	if o == nil || IsNil(o.MaskDialNumber) {
		var ret MaskDialNumberType
		return ret
	}
	return *o.MaskDialNumber
}

// GetMaskDialNumberOk returns a tuple with the MaskDialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfaceRoomType) GetMaskDialNumberOk() (*MaskDialNumberType, bool) {
	if o == nil || IsNil(o.MaskDialNumber) {
		return nil, false
	}
	return o.MaskDialNumber, true
}

// HasMaskDialNumber returns a boolean if a field has been set.
func (o *InterfaceRoomType) HasMaskDialNumber() bool {
	if o != nil && !IsNil(o.MaskDialNumber) {
		return true
	}

	return false
}

// SetMaskDialNumber gets a reference to the given MaskDialNumberType and assigns it to the MaskDialNumber field.
func (o *InterfaceRoomType) SetMaskDialNumber(v MaskDialNumberType) {
	o.MaskDialNumber = &v
}

func (o InterfaceRoomType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfaceRoomType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.LineNumber) {
		toSerialize["lineNumber"] = o.LineNumber
	}
	if !IsNil(o.OldLineNumber) {
		toSerialize["oldLineNumber"] = o.OldLineNumber
	}
	if !IsNil(o.FromRoom) {
		toSerialize["fromRoom"] = o.FromRoom
	}
	if !IsNil(o.ToRoom) {
		toSerialize["toRoom"] = o.ToRoom
	}
	if !IsNil(o.FromLine) {
		toSerialize["fromLine"] = o.FromLine
	}
	if !IsNil(o.ToLine) {
		toSerialize["toLine"] = o.ToLine
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DataLine) {
		toSerialize["dataLine"] = o.DataLine
	}
	if !IsNil(o.DataLineId) {
		toSerialize["dataLineId"] = o.DataLineId
	}
	if !IsNil(o.WakeUpCall) {
		toSerialize["wakeUpCall"] = o.WakeUpCall
	}
	if !IsNil(o.DoNotDisturb) {
		toSerialize["doNotDisturb"] = o.DoNotDisturb
	}
	if !IsNil(o.ClassOfService) {
		toSerialize["classOfService"] = o.ClassOfService
	}
	if !IsNil(o.DirectInwardDial) {
		toSerialize["directInwardDial"] = o.DirectInwardDial
	}
	if !IsNil(o.MessageWaiting) {
		toSerialize["messageWaiting"] = o.MessageWaiting
	}
	if !IsNil(o.MaskDialNumber) {
		toSerialize["maskDialNumber"] = o.MaskDialNumber
	}
	return toSerialize, nil
}

type NullableInterfaceRoomType struct {
	value *InterfaceRoomType
	isSet bool
}

func (v NullableInterfaceRoomType) Get() *InterfaceRoomType {
	return v.value
}

func (v *NullableInterfaceRoomType) Set(val *InterfaceRoomType) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceRoomType) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceRoomType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceRoomType(val *InterfaceRoomType) *NullableInterfaceRoomType {
	return &NullableInterfaceRoomType{value: val, isSet: true}
}

func (v NullableInterfaceRoomType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceRoomType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


