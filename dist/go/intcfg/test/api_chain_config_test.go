/*
OPERA Cloud Integration Configuration API

Testing ChainConfigApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package intcfg

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/applyinnovations/ohip-sdk/intcfg"
)

func Test_intcfg_ChainConfigApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ChainConfigApiService ChangeTemplateDeviceLocations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceLocationId string

		resp, httpRes, err := apiClient.ChainConfigApi.ChangeTemplateDeviceLocations(context.Background(), deviceLocationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService GetTemplateDeviceLocations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.GetTemplateDeviceLocations(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService PostTemplateDeviceLocations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ChainConfigApi.PostTemplateDeviceLocations(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChainConfigApiService RemoveTemplateDeviceLocations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var deviceLocationId string

		resp, httpRes, err := apiClient.ChainConfigApi.RemoveTemplateDeviceLocations(context.Background(), deviceLocationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
