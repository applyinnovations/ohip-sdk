openapi: 3.0.1
info:
  contact:
    email: hospitality-integrations_ww@oracle.com
  description: "APIs catering to Integration Configuration in OPERA Cloud.  Operations\
    \ such as get Hotel Interface Types, or get UDF mappings can be found in this\
    \ module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p>\
    \ This document and all content within is available under the Universal Permissive\
    \ License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023\
    \ Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Integration Configuration API
  version: "23.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /int/config/v1
tags:
- description: "The BEProcessor Service offers capability of creating, managing, and\
    \ retrieving of BE Processor configuration."
  name: BEProcessor
- name: ExternalSystemsConfig
- description: These APIs will allow you to do external configuration under Administration.
  name: ChainConfig
paths:
  /config/oxi/services/beProcessor/cache:
    delete:
      description: ' <p><strong>OperationId:</strong>clearCacheBeProcessor</p>'
      operationId: clearCacheBeProcessor
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to clear cache.
      tags:
      - BEProcessor
  /config/oxi/services/beProcessor/status:
    get:
      description: ' <p><strong>OperationId:</strong>pingBeProcessor</p>'
      operationId: pingBeProcessor
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: pingBeProcessor not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to ping.
      tags:
      - BEProcessor
  /configuredExternalDevices:
    get:
      description: ' <p><strong>OperationId:</strong>getConfiguredExternalDevices</p>'
      operationId: getConfiguredExternalDevices
      parameters:
      - in: query
        name: hotelId
        schema:
          type: string
      - description: Flag that indicates whether the device is active.
        in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: idEditable
        schema:
          type: boolean
      - in: query
        name: label
        schema:
          type: string
      - in: query
        name: deviceType
        schema:
          enum:
          - Scanner
          - CreditCard
          - Fiscal
          - Device
          type: string
      - in: query
        name: deviceCode
        schema:
          enum:
          - TtiScannerMobile
          - TtiScannerDesktop
          - SamsotechScanner
          - GenScannerDesktop
          - GenScannerMobile
          - ChipAndPin
          - FiscalTerminal
          - Device
          type: string
      - description: The area where the device is installed
        in: query
        name: deviceArea
        schema:
          type: string
      - description: External device display name.
        in: query
        name: displayName
        schema:
          type: string
      - description: Indicator if device type is mobile or desktop.
        in: query
        name: mobileYN
        schema:
          type: boolean
      - description: Indicator if device type is mobile or desktop.
        in: query
        name: desktopYN
        schema:
          type: boolean
      - description: The address which the Cash Register ID ( Device ID ) is associated
          with.
        in: query
        name: registerAddress
        schema:
          type: string
      - description: External device Value.
        in: query
        name: deviceValue
        schema:
          type: string
      - description: Name of the parameter.
        in: query
        name: parameterName
        schema:
          type: string
      - description: Value of the parameter.
        in: query
        name: parameterValue
        schema:
          type: string
      - description: Flag to choose to include inactive external devices or not.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: "Used for fiscal partner codes. Possible values of this pattern\
          \ are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: fiscalPartnerCode
        schema:
          type: string
      - description: "Used for fiscal partner codes. Possible values of this pattern\
          \ are 1, 101, 101.EQP, or 101.EQP.X."
        explode: true
        in: query
        name: partnerCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetch instructions that can be used for all or partner specific.
        in: query
        name: fetchInstruction
        schema:
          enum:
          - Default
          - Partner
          type: string
      - description: Used for searching a partner code configured with the specified
          fiscal payload type.
        in: query
        name: partnerPayloadType
        schema:
          enum:
          - CheckOut
          - FolioGeneration
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedConfiguredExternalDevices'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ConfiguredExternalDevices not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch configured external devices.
      tags:
      - ExternalSystemsConfig
  /deliveryMethods:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteDeliveryMethods</p>'
      operationId: deleteDeliveryMethods
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - description: Settings for Text Message Delivery of Queue Reservation status
        in: query
        name: type
        schema:
          enum:
          - General
          - QueueReservation
          - Confirmation
          - GuestMessage
          - BillingFolio
          - QueueRush
          - AR
          - OtherFolio
          type: string
      - description: SFTP delivery configurations
        explode: true
        in: query
        name: options
        schema:
          items:
            enum:
            - Email
            - Fax
            - TextMessage
            - Sftp
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Unique id associated with this configuration
        explode: true
        in: query
        name: configurationId
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove delivery methods.
      tags:
      - ExternalSystemsConfig
    get:
      description: ' <p><strong>OperationId:</strong>getDeliveryMethods</p>'
      operationId: getDeliveryMethods
      parameters:
      - description: Property code.
        in: query
        name: hotelId
        schema:
          type: string
      - description: CRO code.
        in: query
        name: croCode
        schema:
          type: string
      - description: Settings for Text Message Delivery of Queue Reservation status
        explode: true
        in: query
        name: usages
        schema:
          items:
            enum:
            - General
            - QueueReservation
            - Confirmation
            - GuestMessage
            - BillingFolio
            - QueueRush
            - AR
            - OtherFolio
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: If true this will include inactive records(This is only applicable
          for general SMTP delivery method ).
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedDeliveryMethods'
          description: Response to request to fetch the delivery method for a property/HUB/Chain
            and its configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DeliveryMethods not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch delivery methods.
      tags:
      - ExternalSystemsConfig
    post:
      description: ' <p><strong>OperationId:</strong>postDeliveryMethods</p>'
      operationId: postDeliveryMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createDeliveryMethods'
        description: Request to create the delivery method for a property/HUB/Chain
          and its configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create delivery methods.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: createDeliveryMethods
    put:
      description: ' <p><strong>OperationId:</strong>putDeliveryMethods</p>'
      operationId: putDeliveryMethods
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeDeliveryMethods'
        description: Request to change the delivery method for a property/HUB/Chain
          and its configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedDeliveryMethods'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change delivery methods.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeDeliveryMethods
  /deviceLocations:
    get:
      description: Use this API to get the template device locations. <p><strong>OperationId:</strong>getTemplateDeviceLocations</p>
      operationId: getTemplateDeviceLocations
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          default: false
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateDeviceLocationsDetails'
          description: Response object for fetching template Device locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateDeviceLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get the template device locations
      tags:
      - ChainConfig
    post:
      description: Use this API to create the template device locations. <p><strong>OperationId:</strong>postTemplateDeviceLocations</p>
      operationId: postTemplateDeviceLocations
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateDeviceLocationsCriteria'
        description: Request object for creating template Device locations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create the template device locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: templateDeviceLocationsCriteria
  /deviceLocations/{deviceLocationId}:
    delete:
      description: Use this API to delete the template device locations. <p><strong>OperationId:</strong>removeTemplateDeviceLocations</p>
      operationId: removeTemplateDeviceLocations
      parameters:
      - description: Unique ID of device location.
        in: path
        name: deviceLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete the template device locations
      tags:
      - ChainConfig
    put:
      description: Use this API to update the template device locations. <p><strong>OperationId:</strong>changeTemplateDeviceLocations</p>
      operationId: changeTemplateDeviceLocations
      parameters:
      - description: Unique ID of device location.
        in: path
        name: deviceLocationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateDeviceLocationsToBeChanged'
        description: Request object for changing template Device locations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change the template device locations
      tags:
      - ChainConfig
      x-codegen-request-body-name: templateDeviceLocationsToBeChanged
  /externalDevices/configurations:
    get:
      description: ' <p><strong>OperationId:</strong>getExternalDeviceConfigurations</p>'
      operationId: getExternalDeviceConfigurations
      parameters:
      - in: query
        name: hotelId
        schema:
          type: string
      - description: Flag that indicates whether the device is active.
        in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: string
      - in: query
        name: idEditable
        schema:
          type: boolean
      - in: query
        name: label
        schema:
          type: string
      - in: query
        name: deviceType
        schema:
          enum:
          - Scanner
          - CreditCard
          - Fiscal
          - Device
          type: string
      - in: query
        name: deviceCode
        schema:
          enum:
          - TtiScannerMobile
          - TtiScannerDesktop
          - SamsotechScanner
          - GenScannerDesktop
          - GenScannerMobile
          - ChipAndPin
          - FiscalTerminal
          - Device
          type: string
      - description: The area where the device is installed
        in: query
        name: deviceArea
        schema:
          type: string
      - description: External device display name.
        in: query
        name: displayName
        schema:
          type: string
      - description: Indicator if device type is mobile or desktop.
        in: query
        name: mobileYN
        schema:
          type: boolean
      - description: Indicator if device type is mobile or desktop.
        in: query
        name: desktopYN
        schema:
          type: boolean
      - description: The address which the Cash Register ID ( Device ID ) is associated
          with.
        in: query
        name: registerAddress
        schema:
          type: string
      - description: External device Value.
        in: query
        name: deviceValue
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedExternalDeviceConfigurations'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExternalDeviceConfigurations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch external device configurations.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putExternalDeviceConfigurations</p>'
      operationId: putExternalDeviceConfigurations
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeExternalDeviceConfigurations'
        description: Request to change the external device activated for the hotel
          and its configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedExternalDeviceConfigurations'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change external device configurations.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeExternalDeviceConfigurations
  /externalSystems/config/cache:
    delete:
      description: ' <p><strong>OperationId:</strong>clearCache</p>'
      operationId: clearCache
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to clear cache.
      tags:
      - ExternalSystemsConfig
  /externalSystems/config/ping:
    get:
      description: ' <p><strong>OperationId:</strong>ping</p>'
      operationId: ping
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/operaVersion'
          description: Response for Ping operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ping not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to ping.
      tags:
      - ExternalSystemsConfig
  /externalSystems/{externalSystemCode}/hotels/{hotelId}/publishers:
    delete:
      description: ' <p><strong>OperationId:</strong>deletePublisher</p>'
      operationId: deletePublisher
      parameters:
      - description: Unique OPERA Id used to find a property in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Code used to find External System in OPERA.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: subscriberHotelId
        schema:
          type: string
      - in: query
        name: code
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove publisher.
      tags:
      - ExternalSystemsConfig
    post:
      description: ' <p><strong>OperationId:</strong>postPublishers</p>'
      operationId: postPublishers
      parameters:
      - description: Unique OPERA Id used to find a property in OPERA.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Code used to find External System in OPERA.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createPublishers'
        description: Request to create publishers.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create publishers.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: createPublishers
  /externalSystems/{externalSystemCode}/publishers:
    get:
      description: ' <p><strong>OperationId:</strong>getPublishers</p>'
      operationId: getPublishers
      parameters:
      - description: Unique OPERA Code used to find External System in OPERA.
        in: path
        name: externalSystemCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedPublishers'
          description: Response to request to fetch the external systems
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Publishers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch publishers.
      tags:
      - ExternalSystemsConfig
  /hotelInerface:
    post:
      description: ' <p><strong>OperationId:</strong>postHotelInterface</p>'
      operationId: postHotelInterface
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelInterface'
        description: Request object for creating a new Hotel Interface.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create hotel interface.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: hotelInterface
    put:
      description: ' <p><strong>OperationId:</strong>putHotelInterface</p>'
      operationId: putHotelInterface
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/hotelInterface'
        description: Request object for updating a Hotel Interface.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change hotel interface.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: hotelInterface
  /hotelInterfaceTypes:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaces</p>'
      operationId: getHotelInterfaces
      parameters:
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: XML Posting Interface
        explode: true
        in: query
        name: interfaceTypes
        schema:
          items:
            enum:
            - Bms
            - Cas
            - Ccw
            - Dls
            - Eft
            - Exp
            - Mak
            - Mbs
            - Msc
            - Pbx
            - Pos
            - Svs
            - Tik
            - Vid
            - Vms
            - Www
            - Xml
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: logosCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this will set the criteria to include inactive records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: If true this will set the criteria to include interfaces that
          are configured to use outbound code.
        in: query
        name: includeOutboundCode
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaces'
          description: Response object for retrieving Hotel Interfaces.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaces not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interfaces.
      tags:
      - ExternalSystemsConfig
  /hotels/{hotelId}/hotelInerface:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteHotelInterface</p>'
      operationId: deleteHotelInterface
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Hotel Interface Logo. On the database, this is also referred\
          \ as DBF Logo. This is a three letter code followed by an underscore(_).\
          \ This tells us which DBF files and log files with the prefix that IFC7\
          \ is going to create."
        in: query
        name: logo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove hotel interface.
      tags:
      - ExternalSystemsConfig
  /hotels/{hotelId}/interfaces/{interfaceId}/accounts:
    post:
      description: ' <p><strong>OperationId:</strong>postInterfaceAccount</p>'
      operationId: postInterfaceAccount
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createInterfaceAccount'
        description: Request object for creating an Interface Account of a Hotel Interface
          record.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create interface account.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: createInterfaceAccount
  /hotels/{hotelId}/interfaces/{interfaceId}/accounts/{accountId}:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteInterfaceAccount</p>'
      operationId: deleteInterfaceAccount
      parameters:
      - description: OPERA Id for Account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Auto balance flag of postings setup.
        in: query
        name: autoBalance
        schema:
          type: boolean
      - description: Payment method of posting accounts in transaction codes setup.
        in: query
        name: paymentMethod
        schema:
          type: string
      - description: Account of posting accounts in transaction codes setup.
        in: query
        name: account
        schema:
          type: string
      - description: Account description of posting accounts in transaction codes
          setup.
        in: query
        name: accountDescription
        schema:
          type: string
      - description: Sales outlet of posting accounts in transaction codes setup.
        in: query
        name: salesOutlet
        schema:
          type: string
      - description: Transaction code of posting accounts in transaction codes setup.
        in: query
        name: trxCode
        schema:
          type: string
      - description: Description of posting accounts in transaction codes setup.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove interface account.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceAccount</p>'
      operationId: putInterfaceAccount
      parameters:
      - description: OPERA Id for Account
        in: path
        name: accountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceAccount'
        description: Request object for updating an Interface Account of a Hotel Interface
          record.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceAccount'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface account.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceAccount
  /hotels/{hotelId}/interfaces/{interfaceId}/roomStatus:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteInterfaceRoomStatus</p>'
      operationId: deleteInterfaceRoomStatus
      parameters:
      - description: OPERA id for Property
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Entry code of a Hotel Interface Room Status.
        in: query
        name: entryCode
        schema:
          type: string
      - description: Room Status which is either Vacant (V) or Occupied (O).
        in: query
        name: status
        schema:
          type: string
      - description: Housekeeping status of a room.
        in: query
        name: housekeepingStatus
        schema:
          type: string
      - description: "Custom Room Translation of a Hotel Interface. It is a concatenation\
          \ of a Status (V-Vacant or O-Occupied) and Housekeeping Status (IS-Inspected,\
          \ CL-Clean, etc.) The delimiter is a period. Sample values are V.IS, V.CL,\
          \ O.IS, O.CL."
        in: query
        name: customRoomTranslation
        schema:
          type: string
      - description: Description of the Hotel Interface Room Status.
        in: query
        name: description
        schema:
          type: string
      - description: Row number to identify all the records belonging to a single
          group of Hotel Interface Room Status.
        in: query
        name: interfaceRoomStatusId
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove interface room status.
      tags:
      - ExternalSystemsConfig
    get:
      description: ' <p><strong>OperationId:</strong>getInterfaceRoomStatuses</p>'
      operationId: getInterfaceRoomStatuses
      parameters:
      - description: OPERA id for Property
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedInterfaceRoomStatuses'
          description: Collection of Hotel Interface Room Statuses.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceRoomStatuses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch interface room statuses.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceRoomStatus</p>'
      operationId: putInterfaceRoomStatus
      parameters:
      - description: OPERA id for Property
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceRoomStatus'
        description: "Request object for updating a Hotel Interface Room Status. If\
          \ it does not exist, then creates the Hotel Interface Room Status."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceRoomStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface room status.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceRoomStatus
  /hotels/{hotelId}/interfaces/{interfaceId}/rooms:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteInterfaceRoom</p>'
      operationId: deleteInterfaceRoom
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Front Office Room Type.
        in: query
        name: roomType
        schema:
          type: string
      - description: Front Office Room Number.
        in: query
        name: roomNumber
        schema:
          type: string
      - description: External System's extension number.
        in: query
        name: lineNumber
        schema:
          type: string
      - description: "External System's extension number. It is used for editing a\
          \ record. It is logically part of the record ID, and can actually be updated."
        in: query
        name: oldLineNumber
        schema:
          type: string
      - description: Line Type of an Interface Room.
        in: query
        name: type
        schema:
          type: string
      - description: Line Out
        in: query
        name: dataLine
        schema:
          enum:
          - In
          - Out
          type: string
      - description: Translation Table Id as defined in the IFC_CTRL table. It is
          also referred as Xlat Id.
        in: query
        name: dataLineId
        schema:
          type: string
      - description: Value to set/check if the wake up call funtionality is enabled/disabled
          for the particular line number.
        in: query
        name: wakeUpCall
        schema:
          type: boolean
      - description: Do Not Disturb is set to available and freely switchable.
        in: query
        name: doNotDisturb
        schema:
          enum:
          - NotAvailable
          - AlwaysOn
          - AlwaysOff
          - FreelySwitchable
          type: string
      - description: Class Of Service is set to available and freely switchable.
        in: query
        name: classOfService
        schema:
          enum:
          - NotAvailable
          - AlwaysOn
          - AlwaysOff
          - FreelySwitchable
          type: string
      - description: Direct Inward Dial is set to available and freely switchable.
        in: query
        name: directInwardDial
        schema:
          enum:
          - NotAvailable
          - AlwaysOn
          - AlwaysOff
          - FreelySwitchable
          type: string
      - description: Message Waiting is set to available and freely switchable.
        in: query
        name: messageWaiting
        schema:
          enum:
          - NotAvailable
          - AlwaysOn
          - AlwaysOff
          - FreelySwitchable
          type: string
      - description: Mask the dialled digits as per the room configuration.
        in: query
        name: maskDialNumber
        schema:
          enum:
          - NoMasking
          - MaskLast2Digits
          - MaskLast4Digits
          - Mask4DigitsLeaveLast2Intact
          - MaskAllExceptFirst2
          - MaskAll
          - MaskingPerRoom
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove interface room.
      tags:
      - ExternalSystemsConfig
    get:
      description: ' <p><strong>OperationId:</strong>getInterfaceRooms</p>'
      operationId: getInterfaceRooms
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: From Room Number
        in: query
        name: fromRoom
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: To Room Number
        in: query
        name: toRoom
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: From Line Type
        in: query
        name: fromLineType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: To Line Type
        in: query
        name: toLineType
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedInterfaceRooms'
          description: Collection of Hotel Interface Rooms.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceRooms not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch interface rooms.
      tags:
      - ExternalSystemsConfig
    post:
      description: ' <p><strong>OperationId:</strong>postInterfaceRoom</p>'
      operationId: postInterfaceRoom
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/createInterfaceRoom'
        description: Request object for creating an Interface Room of a Hotel Interface
          record.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to create interface room.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: createInterfaceRoom
  /hotels/{hotelId}/interfaces/{interfaceId}/rooms/import:
    post:
      description: ' <p><strong>OperationId:</strong>importInterfaceRooms</p>'
      operationId: importInterfaceRooms
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/importInterfaceRooms'
        description: Request object for importing the Interface Rooms for a Hotel
          Interface record.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to import interface rooms.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: importInterfaceRooms
  /hotels/{hotelId}/interfaces/{interfaceId}/rooms/{roomId}:
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceRoom</p>'
      operationId: putInterfaceRoom
      parameters:
      - in: path
        name: roomId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Logo
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceRoom'
        description: Request object for updating an Interface Room of a Hotel Interface
          record.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceRoom'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface room.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceRoom
  /hotels/{hotelId}/interfaces/{interfaceId}/unitCharges:
    get:
      description: ' <p><strong>OperationId:</strong>getInterfaceUnitCharges</p>'
      operationId: getInterfaceUnitCharges
      parameters:
      - description: OPERA id for Property
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Hotel Interface Logo. On the database, this is also referred\
          \ as DBF Logo. This is a three letter code followed by an underscore(_).\
          \ This tells us which DBF files and log files with the prefix that IFC7\
          \ is going to create."
        in: query
        name: logo
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedInterfaceUnitCharges'
          description: Response object for retrieving the Interface Unit Charges.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceUnitCharges not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch interface unit charges.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceUnitCharges</p>'
      operationId: putInterfaceUnitCharges
      parameters:
      - description: OPERA id for Property
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceUnitCharges'
        description: Request object for updating Hotel Interface Unit Charges.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceUnitCharges'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface unit charges.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceUnitCharges
  /hotels/{hotelId}/logos/{logo}:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaceDetails</p>'
      operationId: getHotelInterfaceDetails
      parameters:
      - description: OPERA Id for Logo
        in: path
        name: logo
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for Property
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Transaction codes of a Hotel Interface.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PrimaryInfo
            - AdditionalInfo
            - GeneralInfo
            - CommunicationInfo
            - IfcTranslation
            - IfcClassOfService
            - IfcImportRooms
            - WorkstationSetupInfo
            - PostingsInfo
            - CustomDataInfo
            - ExportDataInfo
            - TransactionCodesInfo
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaceDetails'
          description: Response object for retrieving the details of a Hotel Interface.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface details.
      tags:
      - ExternalSystemsConfig
  /interfaceControllerRegistry:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaceControllerRegistry</p>'
      operationId: getHotelInterfaceControllerRegistry
      parameters:
      - description: "Used for Character Strings, length 0 to 40."
        in: query
        name: machine
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaceControllerRegistry'
          description: Response object for retrieving Hotel Interface Controller Registry.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceControllerRegistry not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface controller registry.
      tags:
      - ExternalSystemsConfig
  /interfaceErrors:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaceErrors</p>'
      operationId: getHotelInterfaceErrors
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: XML Posting Interface
        explode: true
        in: query
        name: interfaceTypes
        schema:
          items:
            enum:
            - Bms
            - Cas
            - Ccw
            - Dls
            - Eft
            - Exp
            - Mak
            - Mbs
            - Msc
            - Pbx
            - Pos
            - Svs
            - Tik
            - Vid
            - Vms
            - Www
            - Xml
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: logoCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this will set the criteria to include inactive records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaceErrors'
          description: Response object for retrieving Hotel Interface Errors.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceErrors not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface errors.
      tags:
      - ExternalSystemsConfig
  /interfaceFailedMessages:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaceFailedMessages</p>'
      operationId: getHotelInterfaceFailedMessages
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: XML Posting Interface
        explode: true
        in: query
        name: interfaceTypes
        schema:
          items:
            enum:
            - Bms
            - Cas
            - Ccw
            - Dls
            - Eft
            - Exp
            - Mak
            - Mbs
            - Msc
            - Pbx
            - Pos
            - Svs
            - Tik
            - Vid
            - Vms
            - Www
            - Xml
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: logoCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this will set the criteria to include inactive records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaceFailedMessages'
          description: Response object for retrieving Hotel Interface Failed Messages.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceFailedMessages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface failed messages.
      tags:
      - ExternalSystemsConfig
  /interfaceRights:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteInterfaceRight</p>'
      operationId: deleteInterfaceRight
      parameters:
      - description: Hotel Code to which the Interface Right belongs to.
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Internal code for each allowed right of a Hotel Interface record.
        in: query
        name: right
        schema:
          type: integer
      - description: User defined code for an Interface Right.
        in: query
        name: code
        schema:
          type: string
      - description: User defined description for an Interface Right.
        in: query
        name: description
        schema:
          type: string
      - description: System Description of an allowed Interface Right.
        in: query
        name: interfaceRightDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove interface right.
      tags:
      - ExternalSystemsConfig
    get:
      description: ' <p><strong>OperationId:</strong>getInterfaceRights</p>'
      operationId: getInterfaceRights
      parameters:
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: hotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedInterfaceRights'
          description: Collection of Hotel Interface Tasks.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceRights not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch interface rights.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceRight</p>'
      operationId: putInterfaceRight
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceRight'
        description: Request object for updating a Hotel Interface Right. It will
          create the Hotel Interface Right if it does not exist on the database.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceRight'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface right.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceRight
  /interfaceSchemas:
    get:
      description: ' <p><strong>OperationId:</strong>getHotelInterfaceSchemas</p>'
      operationId: getHotelInterfaceSchemas
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: XML Posting Interface
        explode: true
        in: query
        name: interfaceTypes
        schema:
          items:
            enum:
            - Bms
            - Cas
            - Ccw
            - Dls
            - Eft
            - Exp
            - Mak
            - Mbs
            - Msc
            - Pbx
            - Pos
            - Svs
            - Tik
            - Vid
            - Vms
            - Www
            - Xml
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: logoCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this will set the criteria to include inactive records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedHotelInterfaceSchemas'
          description: Response object for retrieving Hotel Interface Schemas.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelInterfaceSchemas not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch hotel interface schemas.
      tags:
      - ExternalSystemsConfig
  /interfaces/{interfaceId}/databases/{databaseId}/availableResorts:
    get:
      description: ' <p><strong>OperationId:</strong>getExternalDatabaseAvailableProperties</p>'
      operationId: getExternalDatabaseAvailableProperties
      parameters:
      - description: OPERA Id for Databsase
        in: path
        name: databaseId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: OPERA Id for interface
        in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag that indicates to include inactive records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: interfaceCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedExternalDatabaseAvailableProperties'
          description: Response object for retrieving the Available properties for
            External Databases.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ExternalDatabaseAvailableProperties not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch external database available properties.
      tags:
      - ExternalSystemsConfig
  /machines:
    get:
      description: ' <p><strong>OperationId:</strong>getInterfaceMachines</p>'
      operationId: getInterfaceMachines
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedInterfaceMachines'
          description: Collection of Hotel Interface Machines.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InterfaceMachines not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch interface machines.
      tags:
      - ExternalSystemsConfig
  /machines/{machineId}:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteInterfaceMachine</p>'
      operationId: deleteInterfaceMachine
      parameters:
      - description: OPERA Id for machine
        in: path
        name: machineId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Machine name of the running Interface.
        in: query
        name: machine
        schema:
          type: string
      - description: Path and name of the Interface program running on every Machine.
        in: query
        name: program
        schema:
          type: string
      - description: Opera Interface controller (server) port for the connecting clients.
        in: query
        name: controllerPort
        schema:
          type: integer
      - description: VNC server port for connecting to the VNC server.
        in: query
        name: vncPort
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove interface machine.
      tags:
      - ExternalSystemsConfig
    put:
      description: ' <p><strong>OperationId:</strong>putInterfaceMachine</p>'
      operationId: putInterfaceMachine
      parameters:
      - description: OPERA Id for machine
        in: path
        name: machineId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeInterfaceMachine'
        description: "Request object for updating a Hotel Interface Machine. If it\
          \ does not exist, then creates the Hotel Interface Machine."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedInterfaceMachine'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change interface machine.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeInterfaceMachine
  /udfMappings:
    get:
      description: Operation to send a response to the Look-up of UDFs. <p><strong>OperationId:</strong>getUDFMappings</p>
      operationId: getUDFMappings
      parameters:
      - description: A reference to the type of object defined by the Type for Reservation
          and Profile Type.
        in: query
        name: type
        schema:
          type: string
      - description: Name of the user-defined function (UDF) field.
        in: query
        name: uDFName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/fetchedUDFMappings'
          description: Message received on an UDFs Lookup.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: UDFMappings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to send a response to the Look up of UDFs.
      tags:
      - ExternalSystemsConfig
    put:
      description: Operation to send a response to the Change in UDF. <p><strong>OperationId:</strong>putUDFMapping</p>
      operationId: putUDFMapping
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/changeUDFMapping'
        description: Self-contained Request object that is used when Updating UDFMapping.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedUDFMapping'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to send a response to the Change in UDF.
      tags:
      - ExternalSystemsConfig
      x-codegen-request-body-name: changeUDFMapping
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    operaVersion:
      description: Response for Ping operation.
      properties:
        operaVersion:
          description: Current Opera Version Number
          maxLength: 40
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    fetchedDeliveryMethods:
      description: Response to request to fetch the delivery method for a property/HUB/Chain
        and its configurations.
      properties:
        deliveryMethods:
          $ref: '#/components/schemas/configuredExternalDeliveryMethodsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    configuredExternalDeliveryMethodsType:
      description: External system configuration delivery methods for a property(chain
        or hub).
      properties:
        general:
          $ref: '#/components/schemas/generalDeliveryMethodType'
        queueReservation:
          $ref: '#/components/schemas/queueReservationDeliveryMethodType'
        confirmation:
          $ref: '#/components/schemas/confirmationDeliveryMethodType'
        guestMessage:
          $ref: '#/components/schemas/guestMessageDeliveryMethodType'
        billingFolio:
          $ref: '#/components/schemas/billingFolioDeliveryMethodType'
        queueRush:
          $ref: '#/components/schemas/queueRushDeliveryMethodType'
        ar:
          $ref: '#/components/schemas/arDeliveryMethodType'
        otherFolios:
          $ref: '#/components/schemas/otherFolioDeliveryMethodType'
      type: object
    generalDeliveryMethodType:
      description: "General delivery method SFTPConfigurationType configuration, settings\
        \ for Email and Fax Delivery of General Letters"
      properties:
        email:
          $ref: '#/components/schemas/emailDeliveryConfigurationType'
        fax:
          $ref: '#/components/schemas/faxDeliveryConfigurationType'
        sftpConfigurations:
          description: Type that holds sftp configurations
          items:
            $ref: '#/components/schemas/sftpConfigurationType'
          maxItems: 4000
          type: array
      type: object
    emailDeliveryConfigurationType:
      description: Email content configuration template
      properties:
        fromAddress:
          maxLength: 200
          minLength: 0
          type: string
        userId:
          maxLength: 80
          minLength: 0
          type: string
        userPassword:
          maxLength: 80
          minLength: 0
          type: string
        serverName:
          maxLength: 80
          minLength: 0
          type: string
        subject:
          maxLength: 2000
          minLength: 0
          type: string
        body:
          maxLength: 2000
          minLength: 0
          type: string
        format:
          $ref: '#/components/schemas/emailDeliveryFormatType'
        type:
          $ref: '#/components/schemas/emailDeliveryMethodType'
        hotelId:
          description: Hotel code
          maxLength: 20
          minLength: 0
          type: string
        activateDelivery:
          description: This option must be selected in order to activate emailing
            from an SMTP compliant email server
          type: boolean
        hTMLFormatDelivery:
          description: Available for Confirmation Letters only and when Activate Email
            Delivery is selected
          type: boolean
        attachICalender:
          type: boolean
      type: object
    emailDeliveryFormatType:
      description: Email delivery format
      enum:
      - Htmlcss
      - Pdf
      - Rtf
      - Tif
      type: string
    emailDeliveryMethodType:
      description: Email delivery method type
      enum:
      - Billing
      - Confirmation
      - General
      - Other
      - AR
      type: string
    faxDeliveryConfigurationType:
      description: Email content configuration template
      properties:
        fromAddress:
          maxLength: 200
          minLength: 0
          type: string
        userId:
          maxLength: 80
          minLength: 0
          type: string
        userPassword:
          maxLength: 80
          minLength: 0
          type: string
        serverName:
          maxLength: 80
          minLength: 0
          type: string
        subject:
          maxLength: 2000
          minLength: 0
          type: string
        body:
          maxLength: 2000
          minLength: 0
          type: string
        format:
          $ref: '#/components/schemas/emailDeliveryFormatType'
        type:
          $ref: '#/components/schemas/emailDeliveryMethodType'
        hotelId:
          description: Hotel code
          maxLength: 20
          minLength: 0
          type: string
        faxPrefix:
          maxLength: 20
          minLength: 0
          type: string
        faxSuffix:
          maxLength: 20
          minLength: 0
          type: string
        faxDomain:
          maxLength: 40
          minLength: 0
          type: string
        activateEmailToFax:
          description: This option must be selected in order to activate faxing from
            an SMTP compliant fax server
          type: boolean
      type: object
    sftpConfigurationsListType:
      description: Type that holds sftp configurations
      items:
        $ref: '#/components/schemas/sftpConfigurationType'
      maxItems: 4000
      type: array
    sftpConfigurationType:
      description: Information which uniquely identifies SFTP Configuration
      properties:
        configurationId:
          description: Unique id associated with this configuration
          type: integer
        destination:
          description: SFTP destination
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: "Description of the destination, such as Shift Reports."
          maxLength: 200
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the configuration is inactive or not.
          type: boolean
        hotelId:
          description: Hotel code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    queueReservationDeliveryMethodType:
      description: "Queue reservation delivery method configuration, settings for\
        \ Text Message Delivery of Queue Reservation status"
      properties:
        textMessage:
          $ref: '#/components/schemas/textMessageDeliveryConfigurationType'
      type: object
    textMessageDeliveryConfigurationType:
      description: Text message delivery configuration
      properties:
        userId:
          description: "Partner or User ID, Text field for Partner ID or User ID for\
            \ the delivery provider, Name of the Text Messaging Provider."
          maxLength: 80
          minLength: 0
          type: string
        serverName:
          description: Text field for Service type or email server address for the
            SMTP.
          maxLength: 80
          minLength: 0
          type: string
        account:
          description: Text field for Service ID or email account for the SMTP as
            advised by Text Messaging Provider.
          maxLength: 80
          minLength: 0
          type: string
        password:
          maxLength: 80
          minLength: 0
          type: string
        timeOut:
          description: Number field for Delivery time out in seconds for the message.
            Any message exceeding this limit will be timed out. Add word Seconds using
            small grey font next to the number box.
          type: integer
        url:
          description: Text field for URL address or the Text Messaging Provider.
          maxLength: 2000
          minLength: 0
          type: string
        uRLParameter:
          $ref: '#/components/schemas/urlFormatType'
        format:
          description: "Text field for entering any special formatting for the delivery,\
            \ or multi select LOV type, for example the one used for Address Format\
            \ for selection of SID fields, to allow users choosing from a list of\
            \ tags that may be used to customize this field."
          maxLength: 4000
          minLength: 0
          type: string
        message:
          description: Text field for entering the Text Message for delivery.
          maxLength: 4000
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/textDeliveryMethodType'
        hotelId:
          description: Hotel code
          maxLength: 20
          minLength: 0
          type: string
      type: object
    urlFormatType:
      description: Url content format
      enum:
      - Xml
      - Text
      type: string
    textDeliveryMethodType:
      description: Text delivery method type
      enum:
      - Url
      - Email
      type: string
    confirmationDeliveryMethodType:
      description: "Confirmation letter delivery method configuration, settings for\
        \ Text Message, Email and Fax Delivery of Confirmation Letters"
      properties:
        email:
          $ref: '#/components/schemas/emailDeliveryConfigurationType'
        fax:
          $ref: '#/components/schemas/faxDeliveryConfigurationType'
        textMessage:
          $ref: '#/components/schemas/textMessageDeliveryConfigurationType'
      type: object
    guestMessageDeliveryMethodType:
      description: "Guest text message configuration, settings for Text Message Delivery\
        \ of Guest Messages"
      properties:
        textMessage:
          $ref: '#/components/schemas/textMessageDeliveryConfigurationType'
      type: object
    billingFolioDeliveryMethodType:
      description: "Billing folio delivery method configuration, settings for Email\
        \ and Fax Delivery of Guest Folios"
      properties:
        email:
          $ref: '#/components/schemas/emailDeliveryConfigurationType'
        fax:
          $ref: '#/components/schemas/faxDeliveryConfigurationType'
      type: object
    queueRushDeliveryMethodType:
      description: "Queue rush delivery method configuration, settings for Text Message\
        \ Delivery of Queue Reservation status"
      properties:
        textMessage:
          $ref: '#/components/schemas/textMessageDeliveryConfigurationType'
      type: object
    changeDeliveryMethods:
      description: Request to change the delivery method for a property/HUB/Chain
        and its configurations.
      properties:
        deliveryMethods:
          $ref: '#/components/schemas/configuredExternalDeliveryMethodsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedDeliveryMethods:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createDeliveryMethods:
      description: Request to create the delivery method for a property/HUB/Chain
        and its configurations.
      properties:
        deliveryMethods:
          $ref: '#/components/schemas/configuredExternalDeliveryMethodsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateDeviceLocationsDetails:
      description: Response object for fetching template Device locations.
      properties:
        templateDeviceLocations:
          description: List of Device locations at template level.
          items:
            $ref: '#/components/schemas/templateDeviceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateDeviceLocationsType:
      description: List of Device locations at template level.
      items:
        $ref: '#/components/schemas/templateDeviceLocationType'
      maxItems: 4000
      type: array
    templateDeviceLocationType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    templateDeviceLocationsCriteria:
      description: Request object for creating template Device locations.
      properties:
        templateDeviceLocations:
          description: List of Device locations at template level.
          items:
            $ref: '#/components/schemas/templateDeviceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateDeviceLocationsToBeChanged:
      description: Request object for changing template Device locations.
      properties:
        templateDeviceLocations:
          description: List of Device locations at template level.
          items:
            $ref: '#/components/schemas/templateDeviceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createPublishers:
      description: Request to create publishers.
      properties:
        subscriber:
          $ref: '#/components/schemas/externalSystemType'
        publishers:
          description: Information of all the publishers for a given subscriber.
          items:
            $ref: '#/components/schemas/externalSystemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalSystemType:
      description: External System Information
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        externalSystemCode:
          $ref: '#/components/schemas/externalSystemCodeType'
      type: object
    externalSystemCodeType:
      description: External System Code
      properties:
        code:
          maxLength: 40
          minLength: 0
          type: string
      type: object
    publishersType:
      description: Information of all the publishers for a given subscriber.
      items:
        $ref: '#/components/schemas/externalSystemType'
      maxItems: 4000
      type: array
    fetchedPublishers:
      description: Response to request to fetch the external systems
      properties:
        publishers:
          description: Information of all the publishers for a given subscriber.
          items:
            $ref: '#/components/schemas/externalSystemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedHotelInterfaces:
      description: Response object for retrieving Hotel Interfaces.
      properties:
        hotelInterfaces:
          description: Collection of Hotel Interfaces.
          items:
            $ref: '#/components/schemas/hotelInterfaceType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelInterfacesType:
      description: Collection of Hotel Interfaces.
      items:
        $ref: '#/components/schemas/hotelInterfaceType'
      maxItems: 4000
      type: array
    hotelInterfaceType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        outboundCode:
          description: Stores the Outbound Code to identify the target system.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    changeInterfaceRight:
      description: Request object for updating a Hotel Interface Right. It will create
        the Hotel Interface Right if it does not exist on the database.
      properties:
        details:
          $ref: '#/components/schemas/interfaceRightType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    interfaceRightType:
      properties:
        hotelId:
          description: Hotel Code to which the Interface Right belongs to.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        code:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        interfaceRightDescription:
          description: System Description of an allowed Interface Right.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    changedInterfaceRight:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedInterfaceRights:
      description: Collection of Hotel Interface Rights.
      items:
        $ref: '#/components/schemas/interfaceRightType'
      type: array
    fetchedExternalDatabaseAvailableProperties:
      description: Response object for retrieving the Available properties for External
        Databases.
      properties:
        availailableProperties:
          description: Collection of Hotel for external database.
          items:
            $ref: '#/components/schemas/externalDatabaseAssociatedHotelType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    externalDatabaseAssociatedHotelsType:
      description: Collection of Hotel for external database.
      items:
        $ref: '#/components/schemas/externalDatabaseAssociatedHotelType'
      maxItems: 4000
      type: array
    externalDatabaseAssociatedHotelType:
      properties:
        hotelId:
          description: Pertain associated hotel code for external database.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: Pertain associated hotel code for external database.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    fetchedUDFMappings:
      description: Message received on an UDFs Lookup.
      properties:
        uDFMappings:
          description: Criteria for fetching UDFs.
          items:
            $ref: '#/components/schemas/uDFMappingType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    uDFMappingType:
      description: Generic self-contained request object that is used when updating
        and fetching UDFs.
      properties:
        uDFName:
          description: Name of the user-defined function (UDF) field.
          maxLength: 40
          minLength: 0
          type: string
        uDFLabel:
          description: Label the user-defined function (UDF) field shared with external
            system which will be send in the request message for mapping of actual
            UDF Name.
          maxLength: 200
          minLength: 0
          type: string
        active:
          description: A flag to indicate whether the UDF mapping is active in the
            Interface system or not.
          type: boolean
        updateAllowed:
          description: A flag to indicate whether the update is allowed in the Interface
            system or not.
          type: boolean
        type:
          description: A reference to the type of object defined by the Type for Reservation
            and Profile Type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    changeUDFMapping:
      description: Self-contained Request object that is used when Updating UDFMapping.
      properties:
        uDFMapping:
          $ref: '#/components/schemas/uDFMappingType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedUDFMapping:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    conditionGroupType:
      properties:
        condition:
          items:
            $ref: '#/components/schemas/conditionType'
          maxItems: 4000
          type: array
        conditionGroup:
          items:
            $ref: '#/components/schemas/conditionGroupType'
          maxItems: 4000
          type: array
        logicalOperator:
          $ref: '#/components/schemas/logicalOperatorType'
      type: object
    logicalOperatorType:
      enum:
      - And
      - Or
      type: string
    conditionType:
      properties:
        leftExpression:
          $ref: '#/components/schemas/expressionFieldType'
        operator:
          $ref: '#/components/schemas/expressionOperatorType'
        rightExpression:
          $ref: '#/components/schemas/expressionParameterType'
        logicalOperator:
          $ref: '#/components/schemas/logicalOperatorType'
      type: object
    expressionFieldType:
      properties:
        fieldName:
          maxLength: 40
          minLength: 0
          type: string
        fieldDescription:
          maxLength: 40
          minLength: 0
          type: string
        tableName:
          maxLength: 40
          minLength: 0
          type: string
        virtual:
          type: boolean
        dataType:
          maxLength: 40
          minLength: 0
          type: string
        lovSelected:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    expressionParameterType:
      properties:
        parameter:
          items:
            maxLength: 40
            minLength: 0
            type: string
          maxItems: 3
          type: array
        functionIdOne:
          type: number
        functionIdTwo:
          type: number
      type: object
    expressionOperatorType:
      properties:
        operatorName:
          maxLength: 40
          minLength: 0
          type: string
        operatorDescription:
          maxLength: 40
          minLength: 0
          type: string
        parameterSize:
          type: number
      type: object
    hotelInterfaceSchemasType:
      description: Collection of Hotel Interface Schemas.
      items:
        $ref: '#/components/schemas/hotelInterfaceSchemaType'
      maxItems: 4000
      type: array
    hotelInterfaceSchemaType:
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        actionName:
          description: Action Name
          maxLength: 40
          minLength: 0
          type: string
        schemaName:
          description: Schema Name
          maxLength: 40
          minLength: 0
          type: string
        schema:
          description: Schema
          maxLength: 4000
          minLength: 0
          type: string
        insertDate:
          description: Date time stamp of a Hotel Interface Schema.
          format: date-time
          type: string
        ifcType:
          description: ifcType
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    hotelInterfaceErrorsType:
      description: Collection of Hotel Interface Errors.
      items:
        $ref: '#/components/schemas/hotelInterfaceErrorType'
      maxItems: 4000
      type: array
    hotelInterfaceErrorType:
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        actionName:
          description: Action Name
          maxLength: 40
          minLength: 0
          type: string
        message:
          description: Message
          maxLength: 4000
          minLength: 0
          type: string
        error:
          description: Error
          maxLength: 2000
          minLength: 0
          type: string
        resvNameId:
          description: Schema
          maxLength: 40
          minLength: 0
          type: string
        insertDate:
          description: Date time stamp of a Hotel Interface Schema.
          format: date-time
          type: string
        ifcType:
          description: ifcType
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    hotelInterfaceFailedMessagesType:
      description: Collection of Hotel Interface Failed Messages.
      items:
        $ref: '#/components/schemas/hotelInterfaceFailedMessageType'
      maxItems: 4000
      type: array
    hotelInterfaceFailedMessageType:
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        actionName:
          description: Action Name
          maxLength: 40
          minLength: 0
          type: string
        message:
          description: Message
          maxLength: 4000
          minLength: 0
          type: string
        insertDate:
          description: Date time stamp of a Hotel Interface Schema.
          format: date-time
          type: string
        ifcType:
          description: ifcType
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    hotelInterfaceControllerRegsType:
      description: Collection of Hotel Interface Controller Registry.
      items:
        $ref: '#/components/schemas/hotelInterfaceControllerRegType'
      maxItems: 4000
      type: array
    hotelInterfaceControllerRegType:
      properties:
        id:
          description: Internal ID to reference the records.
          type: number
        machine:
          description: Machine Name
          maxLength: 80
          minLength: 0
          type: string
        cntrlRegSetting:
          description: Controller Registry Setting
          maxLength: 20
          minLength: 0
          type: string
        data:
          description: Data
          maxLength: 400
          minLength: 0
          type: string
        description:
          description: Description
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    fetchedHotelInterfaceSchemas:
      description: Response object for retrieving Hotel Interface Schemas.
      properties:
        schemas:
          description: Collection of Hotel Interface Schemas.
          items:
            $ref: '#/components/schemas/hotelInterfaceSchemaType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedHotelInterfaceErrors:
      description: Response object for retrieving Hotel Interface Errors.
      properties:
        hotelInterfaceErrors:
          description: Collection of Hotel Interface Errors.
          items:
            $ref: '#/components/schemas/hotelInterfaceErrorType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedHotelInterfaceFailedMessages:
      description: Response object for retrieving Hotel Interface Failed Messages.
      properties:
        messages:
          description: Collection of Hotel Interface Failed Messages.
          items:
            $ref: '#/components/schemas/hotelInterfaceFailedMessageType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedHotelInterfaceControllerRegistry:
      description: Response object for retrieving Hotel Interface Controller Registry.
      properties:
        reg:
          description: Collection of Hotel Interface Controller Registry.
          items:
            $ref: '#/components/schemas/hotelInterfaceControllerRegType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    arDeliveryMethodType:
      description: Delivery Method configuration for Email and Fax Delivery for Accounts
        Receivables.
      properties:
        email:
          $ref: '#/components/schemas/emailDeliveryConfigurationType'
        fax:
          $ref: '#/components/schemas/faxDeliveryConfigurationType'
      type: object
    otherFolioDeliveryMethodType:
      description: Delivery Method configuration for Email and Fax Delivery for Other
        Folios
      properties:
        email:
          $ref: '#/components/schemas/emailDeliveryConfigurationType'
        fax:
          $ref: '#/components/schemas/faxDeliveryConfigurationType'
      type: object
    configuredExternalDevices:
      description: Collection of hotels and the external devices that were configured
        for the hotel.
      properties:
        deviceType:
          $ref: '#/components/schemas/deviceType'
        supportedExternalDevices:
          items:
            $ref: '#/components/schemas/hotelExternalDevicesType'
          maxItems: 4000
          type: array
      type: object
    deviceType:
      enum:
      - Scanner
      - CreditCard
      - Fiscal
      - Device
      type: string
    hotelExternalDevicesType:
      description: Type for the external device supported by the hotel.
      properties:
        hotelId:
          description: Property for which the device is configured.
          maxLength: 20
          minLength: 0
          type: string
        supportedDevices:
          items:
            $ref: '#/components/schemas/supportedExternalDeviceType'
          maxItems: 4000
          type: array
      type: object
    supportedExternalDevicesType:
      items:
        $ref: '#/components/schemas/supportedExternalDeviceType'
      maxItems: 4000
      type: array
    supportedExternalDeviceType:
      description: External device details.
      properties:
        deviceType:
          $ref: '#/components/schemas/deviceType'
        deviceCode:
          $ref: '#/components/schemas/deviceCode'
        deviceArea:
          description: The area where the device is installed
          maxLength: 40
          minLength: 0
          type: string
        displayName:
          description: External device display name.
          maxLength: 2000
          minLength: 0
          type: string
        mobileYN:
          description: Indicator if device type is mobile or desktop.
          type: boolean
        desktopYN:
          description: Indicator if device type is mobile or desktop.
          type: boolean
        registerAddress:
          description: The address which the Cash Register ID ( Device ID ) is associated
            with.
          maxLength: 200
          minLength: 0
          type: string
        deviceValue:
          description: External device Value.
          maxLength: 40
          minLength: 0
          type: string
        fiscalPartnerCode:
          description: "Used for fiscal partner codes. Possible values of this pattern\
            \ are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 100
          minLength: 0
          type: string
        primary:
          description: Flag to designate the primary Fiscal Terminal.
          type: boolean
        active:
          description: Flag that indicates whether the device is active.
          type: boolean
        id:
          maxLength: 100
          minLength: 0
          type: string
        label:
          maxLength: 100
          minLength: 0
          type: string
        translatableLabel:
          $ref: '#/components/schemas/translationTextType2000'
        iDEditable:
          type: boolean
      type: object
    fiscalPartnerCodeType:
      description: "Used for fiscal partner codes. Possible values of this pattern\
        \ are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 100
      minLength: 0
      type: string
    deviceCode:
      enum:
      - TtiScannerMobile
      - TtiScannerDesktop
      - SamsotechScanner
      - GenScannerDesktop
      - GenScannerMobile
      - ChipAndPin
      - FiscalTerminal
      - Device
      type: string
    externalDeviceConfigurationType:
      description: Type for the configurations available to the device.
      properties:
        hotelId:
          description: Property for which the device is configured.
          maxLength: 20
          minLength: 0
          type: string
        device:
          $ref: '#/components/schemas/supportedExternalDeviceType'
        deviceConfigurations:
          items:
            $ref: '#/components/schemas/deviceConfigurationType'
          maxItems: 4000
          type: array
        codeMappings:
          description: Type that contains the mappings of the codes used in the external
            device to the code used in OPERA.
          items:
            $ref: '#/components/schemas/deviceMappingType'
          maxItems: 4000
          type: array
      type: object
    deviceMappingType:
      description: Type that contains the codes used in/provided by the external device
        and their counterpart in OPERA.
      properties:
        codeType:
          description: Internal code type of the mapping entry.
          maxLength: 800
          minLength: 0
          type: string
        externalCode:
          description: Code used/provided by the external device or application.
          maxLength: 2000
          minLength: 0
          type: string
        displayName:
          description: Display name of the code mapping.
          maxLength: 2000
          minLength: 0
          type: string
        operaCode:
          description: Corresponding code value in OPERA.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    deviceConfigurationType:
      description: Type that contains the parameters and configurations used by the
        device.
      properties:
        name:
          description: Internal name of the configuration.
          maxLength: 80
          minLength: 0
          type: string
        displayName:
          description: Configuration display name.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Value of the configuration.
          maxLength: 2000
          minLength: 0
          type: string
        required:
          description: Flag that indicates whether the configuration is required or
            not.
          type: boolean
        encrypted:
          description: Flag that indicates whether the configuration value should
            be encrypted or not.
          type: boolean
      type: object
    hotelInterfaceDetailType:
      properties:
        primaryInfo:
          $ref: '#/components/schemas/interfacePrimaryInfoType'
        additionalInfo:
          $ref: '#/components/schemas/interfaceAdditionalInfoType'
        generalInfo:
          $ref: '#/components/schemas/generalInfoType'
        communicationInfo:
          $ref: '#/components/schemas/interfaceCommunicationInfoType'
        translationInfo:
          $ref: '#/components/schemas/translationType'
        classOfServiceInfo:
          $ref: '#/components/schemas/classOfServiceType'
        importRoomsInfo:
          $ref: '#/components/schemas/importRoomsType'
        workstationSetupInfo:
          description: List of workstations of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceWorkstationType'
          maxItems: 4000
          type: array
        postingsInfo:
          $ref: '#/components/schemas/postingInfoType'
        customDataInfo:
          $ref: '#/components/schemas/interfaceCustomDataInfoType'
        exportDataInfo:
          $ref: '#/components/schemas/interfaceExportDataInfoType'
        transactionsInfo:
          $ref: '#/components/schemas/transactionCodeInfoType'
      type: object
    interfaceCustomDataInfoType:
      description: This type holds the custom data of a hotel interface.
      properties:
        exportAsXml:
          description: "Specifies whether the details have to be exported as XML.\
            \ If true, then the details are exported as XML else details are exported\
            \ as text."
          type: boolean
        includeDoorcardField:
          description: "Specifies whether the Doorcard field details have to be included\
            \ in the XML Export. If true, Doorcard field details will be included\
            \ in the XML Export else details will not be included. This field is available\
            \ only when the Export as XML field is selected."
          type: boolean
        interfaceCustomDataDetails:
          description: Collection of custom data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceCustomDataDetailType'
          maxItems: 4000
          type: array
      type: object
    interfaceCustomDataDetailsType:
      description: Collection of custom data details of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceCustomDataDetailType'
      maxItems: 4000
      type: array
    interfaceCustomDataDetailType:
      description: This gives information of custom detail of a hotel interface.
      properties:
        customDataField:
          description: Specifies the type of data stored.
          maxLength: 200
          minLength: 0
          type: string
        customDataValue:
          description: Specifies the actual data corresponding to each value in the
            field.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    interfaceCommunicationInfoType:
      properties:
        tCPConfig:
          $ref: '#/components/schemas/tCPConfigType'
      type: object
    tCPConfigType:
      properties:
        iPAddress:
          description: IP address of the interface server
          maxLength: 20
          minLength: 0
          type: string
        portNumber:
          description: Logical Port assignment
          maxLength: 80
          minLength: 0
          type: string
      type: object
    workstationSetupType:
      description: List of workstations of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceWorkstationType'
      maxItems: 4000
      type: array
    interfaceWorkstationType:
      properties:
        hotelId:
          description: Hotel Code of a workstation.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of a workstation.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a workstation.
          type: integer
        workstation:
          description: Workstation of a hotel interface.
          maxLength: 200
          minLength: 0
          type: string
        deviceIp:
          description: IP of a workstation.
          maxLength: 200
          minLength: 0
          type: string
        location:
          description: Location of a workstation.
          maxLength: 200
          minLength: 0
          type: string
        type:
          description: Type of a workstation.
          maxLength: 2
          minLength: 0
          type: string
        deviceLocation:
          description: Device Group / Area.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    importRoomsType:
      properties:
        requiresLineNumberSetup:
          description: "Indicator for Requires line number setup, from Import Rooms\
            \ related information of a Hotel Interface."
          type: boolean
        virtualNumberSetup:
          description: "Indicator for Virtual number setup, from Import Rooms related\
            \ information of a Hotel Interface."
          type: boolean
        ioLines:
          description: Indicator for support of Input/Output Lines for Hotel Room
            Categories.
          type: boolean
        inXlatId:
          description: Translation table for incoming messages.
          maxLength: 100
          minLength: 0
          type: string
        ouXlatId:
          description: Translation table for outgoing messages.
          maxLength: 100
          minLength: 0
          type: string
        selectedRoomTypes:
          description: Concatenated label of Hotel Room Categories for which SendToInterface
            flag should be set as true.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    interfacePrimaryInfoType:
      properties:
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        productCode:
          description: Three letter code that uniquely identifies the external interface.
          maxLength: 4
          minLength: 0
          type: string
        licenseCode:
          description: Interface License code
          maxLength: 20
          minLength: 0
          type: string
        machineId:
          description: The ID stored in IFC_MACHINES table.
          type: integer
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        interfaceProductCode:
          description: FKT Logo required for the external interface.
          maxLength: 40
          minLength: 0
          type: string
        outboundCode:
          description: Stores the Outbound Code to identify the target system.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    translationType:
      properties:
        guestNoLength:
          description: Guest number length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        guestMessageIdLength:
          description: Guest message id length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        groupNoLength:
          description: Group number length of a translation setup.
          maxLength: 2
          minLength: 0
          type: string
        defaultCharge:
          description: Default charge of a translation setup.
          type: integer
        configuation:
          description: Translation configuration of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlCfgType'
          maxItems: 4000
          type: array
        articles:
          description: Translation article setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlArticleType'
          maxItems: 4000
          type: array
        specifications:
          description: Translation specifications setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlSpecType'
          maxItems: 4000
          type: array
        languages:
          description: Translation languages setup of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceControlLangType'
          maxItems: 4000
          type: array
      type: object
    interfaceControlCfgType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation configuration setup.
          type: integer
        originCode:
          description: Origin code of a translation configuration setup.
          maxLength: 100
          minLength: 0
          type: string
        merchantId:
          description: Merchant Id of a translation configuration setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlSpecType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation specification setup.
          type: integer
        selector:
          description: Selector of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        specification:
          description: Specification of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        priority:
          description: Priority of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
        position:
          description: Position of a translation specification setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlLangType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation language setup.
          type: integer
        selector:
          description: Selector of a translation language setup.
          maxLength: 100
          minLength: 0
          type: string
        languageCode:
          description: Language code of a translation language setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    interfaceControlArticleType:
      properties:
        hotelId:
          description: Hotel Code of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
        internalCode:
          description: Internal code of a translation article setup.
          type: integer
        selector:
          description: Selector of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
        articleNo:
          description: Article Number of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
        description:
          description: Description of a translation article setup.
          maxLength: 100
          minLength: 0
          type: string
      type: object
    transactionCodeInfoType:
      properties:
        allChargesCode:
          description: All charges code of transaction code setup
          maxLength: 10
          minLength: 0
          type: string
        miniBarCode:
          description: Minibar charges code of transaction code setup
          maxLength: 10
          minLength: 0
          type: string
        cashCreditCardPosting:
          description: Cash or credit card posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        subtotalPosting:
          description: Subtotal posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        differencePosting:
          description: Difference posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        calcTrxCodePosting:
          description: Calculated transaction code posting of transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        numberOfDialedDigits:
          description: Number of dialed digits transaction code setup
          maxLength: 1
          minLength: 0
          type: string
        postingAccounts:
          description: Postings information of transaction codes setup.
          items:
            $ref: '#/components/schemas/postingAccountType'
          maxItems: 4000
          type: array
        itemizers:
          description: Split information of transaction code setup.
          items:
            $ref: '#/components/schemas/itemizerType'
          maxItems: 4000
          type: array
        transactionCodes:
          description: Split information of transaction code setup.
          items:
            $ref: '#/components/schemas/transactionCodeDetailType'
          maxItems: 4000
          type: array
      type: object
    itemizerType:
      properties:
        splitCode:
          description: Split code of the itemizer setup.
          maxLength: 10
          minLength: 0
          type: string
        splitPost:
          description: Split posting of the itemizer setup.
          type: integer
        splitText:
          description: Split text of the itemizer setup.
          maxLength: 50
          minLength: 0
          type: string
        splitFactor:
          description: Split factor of the itemizer setup.
          type: integer
      type: object
    postingAccountType:
      properties:
        id:
          description: Internal ID to reference the records.
          type: number
        paymentMethod:
          description: Payment method of posting accounts in transaction codes setup.
          maxLength: 10
          minLength: 0
          type: string
        account:
          description: Account of posting accounts in transaction codes setup.
          maxLength: 50
          minLength: 0
          type: string
        accountDescription:
          description: Account description of posting accounts in transaction codes
            setup.
          maxLength: 100
          minLength: 0
          type: string
        salesOutlet:
          description: Sales outlet of posting accounts in transaction codes setup.
          maxLength: 100
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code of posting accounts in transaction codes setup.
          maxLength: 40
          minLength: 0
          type: string
        description:
          description: Description of posting accounts in transaction codes setup.
          maxLength: 2000
          minLength: 0
          type: string
        autoBalance:
          description: Auto balance flag of postings setup.
          type: boolean
      type: object
    transactionCodeDetailType:
      properties:
        servingPeriod:
          description: Serving period of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        rowNum:
          description: Row number of transaction code setup.
          type: integer
        revenueCenter:
          description: Revenue center of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        terminal:
          description: Terminal of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        paymentNum:
          description: Payment number of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        userId:
          description: User id of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        postRoute:
          description: Post route of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        dialedDigits:
          description: Dialed digits of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        lineType:
          description: Line type of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        code:
          description: Code of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        tipCode:
          description: Tip code of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        description:
          description: Description of transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        itemizersShortInfo:
          description: Itemizer short info of transaction code setup.
          items:
            $ref: '#/components/schemas/itemizerShortInfoType'
          maxItems: 4000
          type: array
      type: object
    itemizerShortInfoType:
      properties:
        code:
          description: Code of the itemizer on a transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        itemizerName:
          description: Itemizer name on a transaction code setup.
          maxLength: 50
          minLength: 0
          type: string
        itemNumber:
          description: Itemizer number which is the split post on a transaction code
            setup.
          type: integer
      type: object
    generalInfoType:
      properties:
        createSVCheckIn:
          description: Create stored value during checkin of a Hotel Interface
          type: boolean
        enableFailover:
          description: Enable failover of a Hotel Interface
          type: boolean
        ccVaultFunction:
          description: CC vault of a Hotel Interface
          type: boolean
        enableResend:
          description: Enable resend of a Hotel Interface
          type: boolean
        sendARAuthType:
          description: Send AR auth type of a Hotel Interface
          type: boolean
        enableDBVerification:
          description: Enable DB verification of a Hotel Interface
          type: boolean
        allowCCCancelTransaction:
          description: Allow CC cancel transactions of a Hotel Interface
          type: boolean
        showStoredValuePin:
          description: Show stored value pin of a Hotel Interface
          type: boolean
        showSVTransaction:
          $ref: '#/components/schemas/sVTransactionType'
        storedValueSystem:
          description: Stored value system of a Hotel Interface
          type: boolean
        sendEnhancedFields:
          description: Send enhanced fields of a Hotel Interface
          type: boolean
        cardPresentFlag:
          description: Card present of a Hotel Interface
          type: boolean
        handleNightAudit:
          description: Handle night audit command of a Hotel Interface
          type: boolean
        regularTransaction:
          description: Regular transaction command of a Hotel Interface
          type: boolean
        courtesyCardHandling:
          description: Courtesy card handling command of a Hotel Interface
          type: boolean
        sendEndOfDay:
          description: Send end of day of a Hotel Interface
          type: boolean
        portNumber1:
          description: Logical port number 1 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber2:
          description: Logical port number 2 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber3:
          description: Logical port number 3 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        portNumber4:
          description: Logical port number 4 of a the Hotel Interface
          maxLength: 200
          minLength: 0
          type: string
        iPAddress:
          description: IP Address of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        sVRedeemTrx:
          description: Stored value reedeem transaction of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        device:
          description: Device of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        departmentCode1:
          description: Department code 1 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        departmentCode2:
          description: Department code 2 of a the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        rollupTransactions:
          description: Rollup transactions flag of the Hotel Interface
          type: boolean
        allowVideoCheckout:
          description: Indicator if video checkout is allowed or not.
          type: boolean
        checkCreditLimit:
          description: One of the video checkout options whether to check the credit
            limit.
          type: boolean
        checkBalance:
          description: One of the video checkout options whether to check the balance.
          type: boolean
        checkRouting:
          description: One of the video checkout options whether to check the routing.
          type: boolean
        wakeupYn:
          description: Indicator if the Hotel Interface handles wakeup calls.
          type: boolean
        wakeupHandledBy:
          description: "Determines who handles the wakeup calls, either by Opera (0)\
            \ or a Vendor (1)."
          maxLength: 1
          minLength: 0
          type: string
        wakeRetry:
          description: Wakeup retry limit of the Hotel Interface. Value range is 0
            to 999.
          type: integer
        wakeDelay:
          description: Wakeup delay value of the Hotel Interface.
          type: integer
        prevWake:
          description: Used by the Interface module (IFC7.exe).
          type: integer
        folioDisplayOption:
          description: Folio display option of the Hotel Interface applicable to VID
            and MSC. "0" means folio display option off. "A" means a guest folio display
            option. "U" means user defined folio display option.
          maxLength: 1
          minLength: 0
          type: string
        userDefinedFolio1:
          description: Indicator if the User defined folio 1 is utilized.
          type: boolean
        userDefinedFolio2:
          description: Indicator if the User defined folio 2 is utilized.
          type: boolean
        userDefinedFolio3:
          description: Indicator if the User defined folio 3 is utilized.
          type: boolean
        userDefinedFolio4:
          description: Indicator if the User defined folio 4 is utilized.
          type: boolean
        displayPhoneName:
          description: Indicator if the phone name will be displayed.
          type: boolean
        keyPinActive:
          description: Indicator if the Key Pin is active or not.
          type: boolean
        allPrintDetailOn:
          description: Indicator for Default All Print Details On.
          type: boolean
      type: object
    sVTransactionType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - OperaTransaction
      - VendorTransaction
      - OperaAndVendorTransaction
      type: string
    interfaceExportDataInfoType:
      description: This type holds the export data of a hotel interface.
      properties:
        interfaceExportDataDetails:
          description: Collection of export data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceExportDataDetailType'
          maxItems: 4000
          type: array
        interfaceExportDataMandatoryDetails:
          description: Collection of export data details of a hotel interface.
          items:
            $ref: '#/components/schemas/interfaceExportDataDetailType'
          maxItems: 4000
          type: array
      type: object
    interfaceExportDataDetailsType:
      description: Collection of export data details of a hotel interface.
      items:
        $ref: '#/components/schemas/interfaceExportDataDetailType'
      maxItems: 4000
      type: array
    interfaceExportDataDetailType:
      description: This gives information of export detail of a hotel interface.
      properties:
        sourceTableName:
          description: Specifies the table where the event data is stored.
          maxLength: 50
          minLength: 0
          type: string
        columnName:
          description: Specifies the column name found in the table.
          maxLength: 50
          minLength: 0
          type: string
        dataType:
          description: Specifies the type of data in the column.
          maxLength: 20
          minLength: 0
          type: string
        dataLength:
          description: Specifies the length of data in the column.
          type: integer
        xMLTagName:
          description: Specifies the tag name found in the export.
          maxLength: 50
          minLength: 0
          type: string
        columnSelected:
          description: Specifies whether the column is chosen to be included in the
            export.
          type: boolean
      type: object
    interfaceAdditionalInfoType:
      properties:
        menuType:
          $ref: '#/components/schemas/ifcMenuTypeType'
        menuName:
          description: Name of the Interface sub-menu
          maxLength: 20
          minLength: 0
          type: string
        controllerPort:
          description: Opera IFC controller (server) port for the connecting clients.
          type: integer
        vncPort:
          description: VNC server port for connecting to a VNC server.
          type: integer
        cashierId:
          description: Cashier Number.
          type: integer
        pathId1:
          description: Used if interface has to support more than one front office
            system.
          type: integer
        timeout:
          description: Used by the Interface module. ( IFC7.exe )
          maxLength: 3
          minLength: 0
          type: string
        displayFlag:
          description: True if the interface will be displayed.
          type: boolean
        autoStartFlag:
          description: Decides if the interface will be started automatically when
            the controller is restarted.
          type: boolean
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        interfaceStatus:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
        version:
          description: Version no. of each external interface that is installed
          maxLength: 10
          minLength: 0
          type: string
        msgExpiresAfter:
          description: (Internal Use) Message Expires After
          maxLength: 8
          minLength: 0
          type: string
        useDataThroughFlag:
          type: boolean
        nAStart:
          description: Indicator if the Hotel Interface handles night audit commands.
          type: boolean
        multipleRoomKey:
          description: Indicator if the Hotel Interface allows multiple room selection
            for keys.
          type: boolean
        onlineKeySystem:
          description: Indicator if the Hotel Interface is an online key system.
          type: boolean
        deleteIfcKeysOnKeyDelete:
          description: Indicator if the Interface Keys will be deleted on KeyDelete.
          type: boolean
        sendTrack1Data:
          description: Indicator for Hotel Interface Send Track 1 Data.
          type: boolean
        sendTrack2Data:
          description: Indicator for Hotel Interface Send Track 2 Data.
          type: boolean
        sendRoomStatus:
          description: Indicator if the Room Status will be sent.
          type: boolean
        telephoneCharge:
          $ref: '#/components/schemas/telephoneChargeType'
        additionalRoomsLimit:
          description: Maximum number of additional rooms allowed.
          maximum: 999
          minimum: 1
          type: integer
        sendValidStartDateTime:
          description: Indicator if the DLS Interface allows to send valid start date
            and time.
          type: boolean
      type: object
    telephoneChargeType:
      description: Auto Choose
      enum:
      - "0"
      - "1"
      - "2"
      type: string
    ifcMenuTypeType:
      description: Data Card System
      enum:
      - Cas
      - Kss
      - Mbs
      - Pbx
      - Pos
      - Vss
      - Dcs
      type: string
    classOfServiceType:
      properties:
        cosMsgLmpRg:
          description: ""
          maxLength: 1
          minLength: 0
          type: string
        cosChkRg:
          description: ""
          maxLength: 1
          minLength: 0
          type: string
        cosMsgCmdRg:
          description: ""
          maxLength: 1
          minLength: 0
          type: string
        roomEquipCi:
          description: ""
          type: boolean
        roomEquipCo:
          description: ""
          type: boolean
        guestDataChangeCo:
          description: ""
          type: boolean
        standardNameFormat:
          description: Standard name format in the class of service.
          maxLength: 5
          minLength: 0
          type: string
        definedNameFormat:
          description: Defined name format in the class of service.
          items:
            $ref: '#/components/schemas/definedNameFormatType'
          maxItems: 4000
          type: array
        resvInQueue:
          description: Indicates whethe a message will be triggered when a room/reservation
            is placed on QUEUE
          type: boolean
      type: object
    definedNameFormatType:
      properties:
        hotelId:
          description: Hotel Code where the defined name format is associated.
          maxLength: 20
          minLength: 0
          type: string
        definedFormatId:
          description: ID of the defined name format.
          maxLength: 20
          minLength: 0
          type: string
        expressionTable:
          description: Table from which the info will be retrieved.
          maxLength: 200
          minLength: 0
          type: string
        expression:
          description: Expression of the defined name format It basically contains
            all formats that are being set.
          maxLength: 4000
          minLength: 0
          type: string
        logo:
          description: Logo of the hotel interface.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    postingInfoType:
      properties:
        referenceField:
          description: Reference field of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        chargeScaling:
          description: Charge scaling of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        zeroChargePostings:
          description: Zero charge posting of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        postings:
          description: Postings of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        postType:
          description: Post type of postings setup.
          maxLength: 1
          minLength: 0
          type: string
        conversion:
          description: Conversion of postings setup.
          type: integer
        reference:
          description: Reference of postings setup.
          maxLength: 50
          minLength: 0
          type: string
        supplement:
          description: Supplement of postings setup.
          maxLength: 50
          minLength: 0
          type: string
        overrideCreditLimit:
          description: Override credit limit of postings setup.
          type: boolean
        noPostFlag:
          description: No post flag of postings setup.
          type: boolean
        generatesTax:
          description: IFC generate tax of postings setup.
          type: boolean
        dialedNumberMasking:
          $ref: '#/components/schemas/maskDialNumberType'
        articleNoPrefix:
          description: Article Prefix of postings setup.
          type: boolean
      type: object
    maskDialNumberType:
      description: Mask the dialled digits as per the room configuration.
      enum:
      - NoMasking
      - MaskLast2Digits
      - MaskLast4Digits
      - Mask4DigitsLeaveLast2Intact
      - MaskAllExceptFirst2
      - MaskAll
      - MaskingPerRoom
      type: string
    interfaceRoomType:
      properties:
        hotelId:
          description: Hotel Code of the Interface Room.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Front Office Room Type.
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Front Office Room Number.
          maxLength: 20
          minLength: 0
          type: string
        lineNumber:
          description: External System's extension number.
          maxLength: 20
          minLength: 0
          type: string
        oldLineNumber:
          description: "External System's extension number. It is used for editing\
            \ a record. It is logically part of the record ID, and can actually be\
            \ updated."
          maxLength: 20
          minLength: 0
          type: string
        fromRoom:
          description: From Room Number
          maxLength: 20
          minLength: 1
          type: string
        toRoom:
          description: To Room Number
          maxLength: 20
          minLength: 1
          type: string
        fromLine:
          description: From Line Number
          maxLength: 20
          minLength: 1
          type: string
        toLine:
          description: To Line Number
          maxLength: 20
          minLength: 1
          type: string
        type:
          description: Line Type of an Interface Room.
          maxLength: 20
          minLength: 0
          type: string
        dataLine:
          $ref: '#/components/schemas/dataLineType'
        dataLineId:
          description: Translation Table Id as defined in the IFC_CTRL table. It is
            also referred as Xlat Id.
          maxLength: 100
          minLength: 0
          type: string
        wakeUpCall:
          description: Value to set/check if the wake up call funtionality is enabled/disabled
            for the particular line number.
          type: boolean
        doNotDisturb:
          $ref: '#/components/schemas/doNotDisturbType'
        classOfService:
          $ref: '#/components/schemas/classOfServiceConfigType'
        directInwardDial:
          $ref: '#/components/schemas/directInwardDialType'
        messageWaiting:
          $ref: '#/components/schemas/messageWaitingType'
        maskDialNumber:
          $ref: '#/components/schemas/maskDialNumberType'
      type: object
    dataLineType:
      description: Line Out
      enum:
      - In
      - Out
      type: string
    doNotDisturbType:
      description: Do Not Disturb is set to available and freely switchable.
      enum:
      - NotAvailable
      - AlwaysOn
      - AlwaysOff
      - FreelySwitchable
      type: string
    messageWaitingType:
      description: Message Waiting is set to available and freely switchable.
      enum:
      - NotAvailable
      - AlwaysOn
      - AlwaysOff
      - FreelySwitchable
      type: string
    classOfServiceConfigType:
      description: Class Of Service is set to available and freely switchable.
      enum:
      - NotAvailable
      - AlwaysOn
      - AlwaysOff
      - FreelySwitchable
      type: string
    directInwardDialType:
      description: Direct Inward Dial is set to available and freely switchable.
      enum:
      - NotAvailable
      - AlwaysOn
      - AlwaysOff
      - FreelySwitchable
      type: string
    importInterfaceRoomsType:
      properties:
        hotelId:
          description: Hotel Code to which the Interface Room belongs to.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        dataLine:
          $ref: '#/components/schemas/dataLineType'
        numberOfLines:
          description: Number of lines to use for the import of a Hotel Interface
            Room.
          type: integer
        removeLeadingZeros:
          description: Number of lines to use for the import of a Hotel Interface
            Room.
          type: boolean
        line1Prefix:
          description: Prefix for the Hotel Interface Room number for Line 1.
          type: integer
        line1AddTo:
          description: Numeric value to be summed with the Hotel Interface Room number
            for Line 1.
          type: integer
        line2Prefix:
          description: Prefix for the Hotel Interface Room number for Line 2.
          type: integer
        line2AddTo:
          description: Numeric value to be summed with the Hotel Interface Room number
            for Line 2.
          type: integer
        line3Prefix:
          description: Prefix for the Hotel Interface Room number for Line 3.
          type: integer
        line3AddTo:
          description: Numeric value to be summed with the Hotel Interface Room number
            for Line 3.
          type: integer
        line4Prefix:
          description: Prefix for the Hotel Interface Room number for Line 4.
          type: integer
        line4AddTo:
          description: Numeric value to be summed with the Hotel Interface Room number
            for Line 4.
          type: integer
        selectedRoomTypes:
          description: "Concatenated label of Hotel Room Categories, which will be\
            \ imported to the Hotel Interface."
          maxLength: 4000
          minLength: 0
          type: string
        maskLines:
          description: Mask configurations for different line types.
          items:
            $ref: '#/components/schemas/roomMaskSetupType'
          maxItems: 4000
          type: array
      type: object
    roomMaskSetupType:
      properties:
        wakeUpCall:
          description: Value to set/check if the wake up call funtionality is enabled/disabled
            for the particular line number.
          type: boolean
        doNotDisturb:
          $ref: '#/components/schemas/doNotDisturbType'
        classOfService:
          $ref: '#/components/schemas/classOfServiceConfigType'
        directInwardDial:
          $ref: '#/components/schemas/directInwardDialType'
        messageWaiting:
          $ref: '#/components/schemas/messageWaitingType'
        maskDialNumber:
          $ref: '#/components/schemas/maskDialNumberType'
      type: object
    dMLCommandType:
      description: A data manipulation language command for deleting an existing record.
      enum:
      - Insert
      - Update
      - Delete
      type: string
    interfaceAccountType:
      properties:
        hotelId:
          description: Hotel Code of the Interface Account.
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        postingAccount:
          $ref: '#/components/schemas/postingAccountType'
      type: object
    interfaceMachineType:
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        machine:
          description: Unique Machine name of the running Interface.
          maxLength: 80
          minLength: 0
          type: string
        program:
          description: Path and name of the Interface program running on every Machine.
          maxLength: 2000
          minLength: 0
          type: string
        controllerPort:
          description: Opera Interface controller (server) port for the connecting
            clients.
          type: integer
        vncPort:
          description: VNC server port for connecting to the VNC server.
          type: integer
      type: object
    interfaceRoomStatusType:
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        entryCode:
          description: Entry code of a Hotel Interface Room Status.
          maxLength: 2000
          minLength: 0
          type: string
        status:
          description: Room Status which is either Vacant (V) or Occupied (O).
          maxLength: 20
          minLength: 0
          type: string
        housekeepingStatus:
          description: Housekeeping status of a room.
          maxLength: 20
          minLength: 0
          type: string
        customRoomTranslation:
          description: "Custom Room Translation of a Hotel Interface. It is a concatenation\
            \ of a Status (V-Vacant or O-Occupied) and Housekeeping Status (IS-Inspected,\
            \ CL-Clean, etc.) The delimiter is a period. Sample values are V.IS, V.CL,\
            \ O.IS, O.CL."
          maxLength: 2000
          minLength: 0
          type: string
        description:
          description: Description of the Hotel Interface Room Status.
          maxLength: 2000
          minLength: 0
          type: string
        interfaceRoomStatusId:
          description: Row number to identify all the records belonging to a single
            group of Hotel Interface Room Status.
          type: integer
      type: object
    interfaceUnitChargesType:
      description: Collection of Hotel Interface Unit Charges.
      properties:
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        unitCharges:
          items:
            $ref: '#/components/schemas/interfaceUnitChargeType'
          maxItems: 4000
          type: array
      type: object
    interfaceUnitChargeType:
      properties:
        trunkId:
          description: Trunk ID of the CAS or PBX.
          maxLength: 10
          minLength: 0
          type: string
        lineType:
          description: Line Types setup in IFC_ROOM table.
          maxLength: 10
          minLength: 0
          type: string
        vipCode:
          description: Guest VIP Code.
          maxLength: 40
          minLength: 0
          type: string
        startUnit:
          description: Starting number of units for the unit range.
          type: integer
        endUnit:
          description: Ending number of units for the unit range.
          type: integer
        pricePerUnit:
          description: Amount charged per unit.
          type: integer
      type: object
    fetchedConfiguredExternalDevices:
      properties:
        configuredExternalDevices:
          $ref: '#/components/schemas/configuredExternalDevices'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedExternalDeviceConfigurations:
      properties:
        externalDeviceConfigurations:
          $ref: '#/components/schemas/externalDeviceConfigurationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeExternalDeviceConfigurations:
      description: Request to change the external device activated for the hotel and
        its configurations.
      properties:
        externalDeviceConfigurations:
          $ref: '#/components/schemas/externalDeviceConfigurationType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedExternalDeviceConfigurations:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelInterface:
      description: Request object for creating a new Hotel Interface.
      properties:
        details:
          $ref: '#/components/schemas/hotelInterfaceDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedHotelInterfaceDetails:
      description: Response object for retrieving the details of a Hotel Interface.
      properties:
        details:
          $ref: '#/components/schemas/hotelInterfaceDetailType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedInterfaceRooms:
      description: Collection of Hotel Interface Rooms.
      items:
        $ref: '#/components/schemas/interfaceRoomType'
      type: array
    createInterfaceRoom:
      description: Request object for creating an Interface Room of a Hotel Interface
        record.
      properties:
        room:
          $ref: '#/components/schemas/interfaceRoomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeInterfaceRoom:
      description: Request object for updating an Interface Room of a Hotel Interface
        record.
      properties:
        room:
          $ref: '#/components/schemas/interfaceRoomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceRoom:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    importInterfaceRooms:
      description: Request object for importing the Interface Rooms for a Hotel Interface
        record.
      properties:
        details:
          $ref: '#/components/schemas/importInterfaceRoomsType'
        dMLCommand:
          $ref: '#/components/schemas/dMLCommandType'
        targetedImport:
          $ref: '#/components/schemas/interfaceRoomType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    createInterfaceAccount:
      description: Request object for creating an Interface Account of a Hotel Interface
        record.
      properties:
        account:
          $ref: '#/components/schemas/interfaceAccountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeInterfaceAccount:
      description: Request object for updating an Interface Account of a Hotel Interface
        record.
      properties:
        account:
          $ref: '#/components/schemas/interfaceAccountType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceAccount:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedInterfaceMachines:
      description: Collection of Hotel Interface Machines.
      items:
        $ref: '#/components/schemas/interfaceMachineType'
      type: array
    changeInterfaceMachine:
      description: "Request object for updating a Hotel Interface Machine. If it does\
        \ not exist, then creates the Hotel Interface Machine."
      properties:
        details:
          $ref: '#/components/schemas/interfaceMachineType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceMachine:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedInterfaceRoomStatuses:
      description: Collection of Hotel Interface Room Statuses.
      items:
        $ref: '#/components/schemas/interfaceRoomStatusType'
      type: array
    changeInterfaceRoomStatus:
      description: "Request object for updating a Hotel Interface Room Status. If\
        \ it does not exist, then creates the Hotel Interface Room Status."
      properties:
        details:
          $ref: '#/components/schemas/interfaceRoomStatusType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceRoomStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    fetchedInterfaceUnitCharges:
      description: Response object for retrieving the Interface Unit Charges.
      properties:
        details:
          $ref: '#/components/schemas/interfaceUnitChargesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changeInterfaceUnitCharges:
      description: Request object for updating Hotel Interface Unit Charges.
      properties:
        details:
          $ref: '#/components/schemas/interfaceUnitChargesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    changedInterfaceUnitCharges:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
x-original-swagger-version: "2.0"
