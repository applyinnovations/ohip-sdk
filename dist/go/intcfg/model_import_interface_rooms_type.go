/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the ImportInterfaceRoomsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportInterfaceRoomsType{}

// ImportInterfaceRoomsType struct for ImportInterfaceRoomsType
type ImportInterfaceRoomsType struct {
	// Hotel Code to which the Interface Room belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.
	Logo *string `json:"logo,omitempty"`
	DataLine *DataLineType `json:"dataLine,omitempty"`
	// Number of lines to use for the import of a Hotel Interface Room.
	NumberOfLines *int32 `json:"numberOfLines,omitempty"`
	// Number of lines to use for the import of a Hotel Interface Room.
	RemoveLeadingZeros *bool `json:"removeLeadingZeros,omitempty"`
	// Prefix for the Hotel Interface Room number for Line 1.
	Line1Prefix *int32 `json:"line1Prefix,omitempty"`
	// Numeric value to be summed with the Hotel Interface Room number for Line 1.
	Line1AddTo *int32 `json:"line1AddTo,omitempty"`
	// Prefix for the Hotel Interface Room number for Line 2.
	Line2Prefix *int32 `json:"line2Prefix,omitempty"`
	// Numeric value to be summed with the Hotel Interface Room number for Line 2.
	Line2AddTo *int32 `json:"line2AddTo,omitempty"`
	// Prefix for the Hotel Interface Room number for Line 3.
	Line3Prefix *int32 `json:"line3Prefix,omitempty"`
	// Numeric value to be summed with the Hotel Interface Room number for Line 3.
	Line3AddTo *int32 `json:"line3AddTo,omitempty"`
	// Prefix for the Hotel Interface Room number for Line 4.
	Line4Prefix *int32 `json:"line4Prefix,omitempty"`
	// Numeric value to be summed with the Hotel Interface Room number for Line 4.
	Line4AddTo *int32 `json:"line4AddTo,omitempty"`
	// Concatenated label of Hotel Room Categories, which will be imported to the Hotel Interface.
	SelectedRoomTypes *string `json:"selectedRoomTypes,omitempty"`
	// Mask configurations for different line types.
	MaskLines []RoomMaskSetupType `json:"maskLines,omitempty"`
}

// NewImportInterfaceRoomsType instantiates a new ImportInterfaceRoomsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportInterfaceRoomsType() *ImportInterfaceRoomsType {
	this := ImportInterfaceRoomsType{}
	return &this
}

// NewImportInterfaceRoomsTypeWithDefaults instantiates a new ImportInterfaceRoomsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportInterfaceRoomsTypeWithDefaults() *ImportInterfaceRoomsType {
	this := ImportInterfaceRoomsType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ImportInterfaceRoomsType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *ImportInterfaceRoomsType) SetLogo(v string) {
	o.Logo = &v
}

// GetDataLine returns the DataLine field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetDataLine() DataLineType {
	if o == nil || IsNil(o.DataLine) {
		var ret DataLineType
		return ret
	}
	return *o.DataLine
}

// GetDataLineOk returns a tuple with the DataLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetDataLineOk() (*DataLineType, bool) {
	if o == nil || IsNil(o.DataLine) {
		return nil, false
	}
	return o.DataLine, true
}

// HasDataLine returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasDataLine() bool {
	if o != nil && !IsNil(o.DataLine) {
		return true
	}

	return false
}

// SetDataLine gets a reference to the given DataLineType and assigns it to the DataLine field.
func (o *ImportInterfaceRoomsType) SetDataLine(v DataLineType) {
	o.DataLine = &v
}

// GetNumberOfLines returns the NumberOfLines field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetNumberOfLines() int32 {
	if o == nil || IsNil(o.NumberOfLines) {
		var ret int32
		return ret
	}
	return *o.NumberOfLines
}

// GetNumberOfLinesOk returns a tuple with the NumberOfLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetNumberOfLinesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfLines) {
		return nil, false
	}
	return o.NumberOfLines, true
}

// HasNumberOfLines returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasNumberOfLines() bool {
	if o != nil && !IsNil(o.NumberOfLines) {
		return true
	}

	return false
}

// SetNumberOfLines gets a reference to the given int32 and assigns it to the NumberOfLines field.
func (o *ImportInterfaceRoomsType) SetNumberOfLines(v int32) {
	o.NumberOfLines = &v
}

// GetRemoveLeadingZeros returns the RemoveLeadingZeros field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetRemoveLeadingZeros() bool {
	if o == nil || IsNil(o.RemoveLeadingZeros) {
		var ret bool
		return ret
	}
	return *o.RemoveLeadingZeros
}

// GetRemoveLeadingZerosOk returns a tuple with the RemoveLeadingZeros field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetRemoveLeadingZerosOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveLeadingZeros) {
		return nil, false
	}
	return o.RemoveLeadingZeros, true
}

// HasRemoveLeadingZeros returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasRemoveLeadingZeros() bool {
	if o != nil && !IsNil(o.RemoveLeadingZeros) {
		return true
	}

	return false
}

// SetRemoveLeadingZeros gets a reference to the given bool and assigns it to the RemoveLeadingZeros field.
func (o *ImportInterfaceRoomsType) SetRemoveLeadingZeros(v bool) {
	o.RemoveLeadingZeros = &v
}

// GetLine1Prefix returns the Line1Prefix field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine1Prefix() int32 {
	if o == nil || IsNil(o.Line1Prefix) {
		var ret int32
		return ret
	}
	return *o.Line1Prefix
}

// GetLine1PrefixOk returns a tuple with the Line1Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine1PrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Line1Prefix) {
		return nil, false
	}
	return o.Line1Prefix, true
}

// HasLine1Prefix returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine1Prefix() bool {
	if o != nil && !IsNil(o.Line1Prefix) {
		return true
	}

	return false
}

// SetLine1Prefix gets a reference to the given int32 and assigns it to the Line1Prefix field.
func (o *ImportInterfaceRoomsType) SetLine1Prefix(v int32) {
	o.Line1Prefix = &v
}

// GetLine1AddTo returns the Line1AddTo field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine1AddTo() int32 {
	if o == nil || IsNil(o.Line1AddTo) {
		var ret int32
		return ret
	}
	return *o.Line1AddTo
}

// GetLine1AddToOk returns a tuple with the Line1AddTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine1AddToOk() (*int32, bool) {
	if o == nil || IsNil(o.Line1AddTo) {
		return nil, false
	}
	return o.Line1AddTo, true
}

// HasLine1AddTo returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine1AddTo() bool {
	if o != nil && !IsNil(o.Line1AddTo) {
		return true
	}

	return false
}

// SetLine1AddTo gets a reference to the given int32 and assigns it to the Line1AddTo field.
func (o *ImportInterfaceRoomsType) SetLine1AddTo(v int32) {
	o.Line1AddTo = &v
}

// GetLine2Prefix returns the Line2Prefix field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine2Prefix() int32 {
	if o == nil || IsNil(o.Line2Prefix) {
		var ret int32
		return ret
	}
	return *o.Line2Prefix
}

// GetLine2PrefixOk returns a tuple with the Line2Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine2PrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Line2Prefix) {
		return nil, false
	}
	return o.Line2Prefix, true
}

// HasLine2Prefix returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine2Prefix() bool {
	if o != nil && !IsNil(o.Line2Prefix) {
		return true
	}

	return false
}

// SetLine2Prefix gets a reference to the given int32 and assigns it to the Line2Prefix field.
func (o *ImportInterfaceRoomsType) SetLine2Prefix(v int32) {
	o.Line2Prefix = &v
}

// GetLine2AddTo returns the Line2AddTo field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine2AddTo() int32 {
	if o == nil || IsNil(o.Line2AddTo) {
		var ret int32
		return ret
	}
	return *o.Line2AddTo
}

// GetLine2AddToOk returns a tuple with the Line2AddTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine2AddToOk() (*int32, bool) {
	if o == nil || IsNil(o.Line2AddTo) {
		return nil, false
	}
	return o.Line2AddTo, true
}

// HasLine2AddTo returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine2AddTo() bool {
	if o != nil && !IsNil(o.Line2AddTo) {
		return true
	}

	return false
}

// SetLine2AddTo gets a reference to the given int32 and assigns it to the Line2AddTo field.
func (o *ImportInterfaceRoomsType) SetLine2AddTo(v int32) {
	o.Line2AddTo = &v
}

// GetLine3Prefix returns the Line3Prefix field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine3Prefix() int32 {
	if o == nil || IsNil(o.Line3Prefix) {
		var ret int32
		return ret
	}
	return *o.Line3Prefix
}

// GetLine3PrefixOk returns a tuple with the Line3Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine3PrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Line3Prefix) {
		return nil, false
	}
	return o.Line3Prefix, true
}

// HasLine3Prefix returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine3Prefix() bool {
	if o != nil && !IsNil(o.Line3Prefix) {
		return true
	}

	return false
}

// SetLine3Prefix gets a reference to the given int32 and assigns it to the Line3Prefix field.
func (o *ImportInterfaceRoomsType) SetLine3Prefix(v int32) {
	o.Line3Prefix = &v
}

// GetLine3AddTo returns the Line3AddTo field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine3AddTo() int32 {
	if o == nil || IsNil(o.Line3AddTo) {
		var ret int32
		return ret
	}
	return *o.Line3AddTo
}

// GetLine3AddToOk returns a tuple with the Line3AddTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine3AddToOk() (*int32, bool) {
	if o == nil || IsNil(o.Line3AddTo) {
		return nil, false
	}
	return o.Line3AddTo, true
}

// HasLine3AddTo returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine3AddTo() bool {
	if o != nil && !IsNil(o.Line3AddTo) {
		return true
	}

	return false
}

// SetLine3AddTo gets a reference to the given int32 and assigns it to the Line3AddTo field.
func (o *ImportInterfaceRoomsType) SetLine3AddTo(v int32) {
	o.Line3AddTo = &v
}

// GetLine4Prefix returns the Line4Prefix field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine4Prefix() int32 {
	if o == nil || IsNil(o.Line4Prefix) {
		var ret int32
		return ret
	}
	return *o.Line4Prefix
}

// GetLine4PrefixOk returns a tuple with the Line4Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine4PrefixOk() (*int32, bool) {
	if o == nil || IsNil(o.Line4Prefix) {
		return nil, false
	}
	return o.Line4Prefix, true
}

// HasLine4Prefix returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine4Prefix() bool {
	if o != nil && !IsNil(o.Line4Prefix) {
		return true
	}

	return false
}

// SetLine4Prefix gets a reference to the given int32 and assigns it to the Line4Prefix field.
func (o *ImportInterfaceRoomsType) SetLine4Prefix(v int32) {
	o.Line4Prefix = &v
}

// GetLine4AddTo returns the Line4AddTo field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetLine4AddTo() int32 {
	if o == nil || IsNil(o.Line4AddTo) {
		var ret int32
		return ret
	}
	return *o.Line4AddTo
}

// GetLine4AddToOk returns a tuple with the Line4AddTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetLine4AddToOk() (*int32, bool) {
	if o == nil || IsNil(o.Line4AddTo) {
		return nil, false
	}
	return o.Line4AddTo, true
}

// HasLine4AddTo returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasLine4AddTo() bool {
	if o != nil && !IsNil(o.Line4AddTo) {
		return true
	}

	return false
}

// SetLine4AddTo gets a reference to the given int32 and assigns it to the Line4AddTo field.
func (o *ImportInterfaceRoomsType) SetLine4AddTo(v int32) {
	o.Line4AddTo = &v
}

// GetSelectedRoomTypes returns the SelectedRoomTypes field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetSelectedRoomTypes() string {
	if o == nil || IsNil(o.SelectedRoomTypes) {
		var ret string
		return ret
	}
	return *o.SelectedRoomTypes
}

// GetSelectedRoomTypesOk returns a tuple with the SelectedRoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetSelectedRoomTypesOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedRoomTypes) {
		return nil, false
	}
	return o.SelectedRoomTypes, true
}

// HasSelectedRoomTypes returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasSelectedRoomTypes() bool {
	if o != nil && !IsNil(o.SelectedRoomTypes) {
		return true
	}

	return false
}

// SetSelectedRoomTypes gets a reference to the given string and assigns it to the SelectedRoomTypes field.
func (o *ImportInterfaceRoomsType) SetSelectedRoomTypes(v string) {
	o.SelectedRoomTypes = &v
}

// GetMaskLines returns the MaskLines field value if set, zero value otherwise.
func (o *ImportInterfaceRoomsType) GetMaskLines() []RoomMaskSetupType {
	if o == nil || IsNil(o.MaskLines) {
		var ret []RoomMaskSetupType
		return ret
	}
	return o.MaskLines
}

// GetMaskLinesOk returns a tuple with the MaskLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportInterfaceRoomsType) GetMaskLinesOk() ([]RoomMaskSetupType, bool) {
	if o == nil || IsNil(o.MaskLines) {
		return nil, false
	}
	return o.MaskLines, true
}

// HasMaskLines returns a boolean if a field has been set.
func (o *ImportInterfaceRoomsType) HasMaskLines() bool {
	if o != nil && !IsNil(o.MaskLines) {
		return true
	}

	return false
}

// SetMaskLines gets a reference to the given []RoomMaskSetupType and assigns it to the MaskLines field.
func (o *ImportInterfaceRoomsType) SetMaskLines(v []RoomMaskSetupType) {
	o.MaskLines = v
}

func (o ImportInterfaceRoomsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportInterfaceRoomsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.DataLine) {
		toSerialize["dataLine"] = o.DataLine
	}
	if !IsNil(o.NumberOfLines) {
		toSerialize["numberOfLines"] = o.NumberOfLines
	}
	if !IsNil(o.RemoveLeadingZeros) {
		toSerialize["removeLeadingZeros"] = o.RemoveLeadingZeros
	}
	if !IsNil(o.Line1Prefix) {
		toSerialize["line1Prefix"] = o.Line1Prefix
	}
	if !IsNil(o.Line1AddTo) {
		toSerialize["line1AddTo"] = o.Line1AddTo
	}
	if !IsNil(o.Line2Prefix) {
		toSerialize["line2Prefix"] = o.Line2Prefix
	}
	if !IsNil(o.Line2AddTo) {
		toSerialize["line2AddTo"] = o.Line2AddTo
	}
	if !IsNil(o.Line3Prefix) {
		toSerialize["line3Prefix"] = o.Line3Prefix
	}
	if !IsNil(o.Line3AddTo) {
		toSerialize["line3AddTo"] = o.Line3AddTo
	}
	if !IsNil(o.Line4Prefix) {
		toSerialize["line4Prefix"] = o.Line4Prefix
	}
	if !IsNil(o.Line4AddTo) {
		toSerialize["line4AddTo"] = o.Line4AddTo
	}
	if !IsNil(o.SelectedRoomTypes) {
		toSerialize["selectedRoomTypes"] = o.SelectedRoomTypes
	}
	if !IsNil(o.MaskLines) {
		toSerialize["maskLines"] = o.MaskLines
	}
	return toSerialize, nil
}

type NullableImportInterfaceRoomsType struct {
	value *ImportInterfaceRoomsType
	isSet bool
}

func (v NullableImportInterfaceRoomsType) Get() *ImportInterfaceRoomsType {
	return v.value
}

func (v *NullableImportInterfaceRoomsType) Set(val *ImportInterfaceRoomsType) {
	v.value = val
	v.isSet = true
}

func (v NullableImportInterfaceRoomsType) IsSet() bool {
	return v.isSet
}

func (v *NullableImportInterfaceRoomsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportInterfaceRoomsType(val *ImportInterfaceRoomsType) *NullableImportInterfaceRoomsType {
	return &NullableImportInterfaceRoomsType{value: val, isSet: true}
}

func (v NullableImportInterfaceRoomsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportInterfaceRoomsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


