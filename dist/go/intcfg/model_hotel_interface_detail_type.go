/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.4
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the HotelInterfaceDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelInterfaceDetailType{}

// HotelInterfaceDetailType struct for HotelInterfaceDetailType
type HotelInterfaceDetailType struct {
	PrimaryInfo *InterfacePrimaryInfoType `json:"primaryInfo,omitempty"`
	AdditionalInfo *InterfaceAdditionalInfoType `json:"additionalInfo,omitempty"`
	GeneralInfo *GeneralInfoType `json:"generalInfo,omitempty"`
	CommunicationInfo *InterfaceCommunicationInfoType `json:"communicationInfo,omitempty"`
	TranslationInfo *TranslationType `json:"translationInfo,omitempty"`
	ClassOfServiceInfo *ClassOfServiceType `json:"classOfServiceInfo,omitempty"`
	ImportRoomsInfo *ImportRoomsType `json:"importRoomsInfo,omitempty"`
	// List of workstations of a hotel interface.
	WorkstationSetupInfo []InterfaceWorkstationType `json:"workstationSetupInfo,omitempty"`
	PostingsInfo *PostingInfoType `json:"postingsInfo,omitempty"`
	CustomDataInfo *InterfaceCustomDataInfoType `json:"customDataInfo,omitempty"`
	ExportDataInfo *InterfaceExportDataInfoType `json:"exportDataInfo,omitempty"`
	TransactionsInfo *TransactionCodeInfoType `json:"transactionsInfo,omitempty"`
}

// NewHotelInterfaceDetailType instantiates a new HotelInterfaceDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelInterfaceDetailType() *HotelInterfaceDetailType {
	this := HotelInterfaceDetailType{}
	return &this
}

// NewHotelInterfaceDetailTypeWithDefaults instantiates a new HotelInterfaceDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelInterfaceDetailTypeWithDefaults() *HotelInterfaceDetailType {
	this := HotelInterfaceDetailType{}
	return &this
}

// GetPrimaryInfo returns the PrimaryInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetPrimaryInfo() InterfacePrimaryInfoType {
	if o == nil || IsNil(o.PrimaryInfo) {
		var ret InterfacePrimaryInfoType
		return ret
	}
	return *o.PrimaryInfo
}

// GetPrimaryInfoOk returns a tuple with the PrimaryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetPrimaryInfoOk() (*InterfacePrimaryInfoType, bool) {
	if o == nil || IsNil(o.PrimaryInfo) {
		return nil, false
	}
	return o.PrimaryInfo, true
}

// HasPrimaryInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasPrimaryInfo() bool {
	if o != nil && !IsNil(o.PrimaryInfo) {
		return true
	}

	return false
}

// SetPrimaryInfo gets a reference to the given InterfacePrimaryInfoType and assigns it to the PrimaryInfo field.
func (o *HotelInterfaceDetailType) SetPrimaryInfo(v InterfacePrimaryInfoType) {
	o.PrimaryInfo = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetAdditionalInfo() InterfaceAdditionalInfoType {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret InterfaceAdditionalInfoType
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetAdditionalInfoOk() (*InterfaceAdditionalInfoType, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given InterfaceAdditionalInfoType and assigns it to the AdditionalInfo field.
func (o *HotelInterfaceDetailType) SetAdditionalInfo(v InterfaceAdditionalInfoType) {
	o.AdditionalInfo = &v
}

// GetGeneralInfo returns the GeneralInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetGeneralInfo() GeneralInfoType {
	if o == nil || IsNil(o.GeneralInfo) {
		var ret GeneralInfoType
		return ret
	}
	return *o.GeneralInfo
}

// GetGeneralInfoOk returns a tuple with the GeneralInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetGeneralInfoOk() (*GeneralInfoType, bool) {
	if o == nil || IsNil(o.GeneralInfo) {
		return nil, false
	}
	return o.GeneralInfo, true
}

// HasGeneralInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasGeneralInfo() bool {
	if o != nil && !IsNil(o.GeneralInfo) {
		return true
	}

	return false
}

// SetGeneralInfo gets a reference to the given GeneralInfoType and assigns it to the GeneralInfo field.
func (o *HotelInterfaceDetailType) SetGeneralInfo(v GeneralInfoType) {
	o.GeneralInfo = &v
}

// GetCommunicationInfo returns the CommunicationInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetCommunicationInfo() InterfaceCommunicationInfoType {
	if o == nil || IsNil(o.CommunicationInfo) {
		var ret InterfaceCommunicationInfoType
		return ret
	}
	return *o.CommunicationInfo
}

// GetCommunicationInfoOk returns a tuple with the CommunicationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetCommunicationInfoOk() (*InterfaceCommunicationInfoType, bool) {
	if o == nil || IsNil(o.CommunicationInfo) {
		return nil, false
	}
	return o.CommunicationInfo, true
}

// HasCommunicationInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasCommunicationInfo() bool {
	if o != nil && !IsNil(o.CommunicationInfo) {
		return true
	}

	return false
}

// SetCommunicationInfo gets a reference to the given InterfaceCommunicationInfoType and assigns it to the CommunicationInfo field.
func (o *HotelInterfaceDetailType) SetCommunicationInfo(v InterfaceCommunicationInfoType) {
	o.CommunicationInfo = &v
}

// GetTranslationInfo returns the TranslationInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetTranslationInfo() TranslationType {
	if o == nil || IsNil(o.TranslationInfo) {
		var ret TranslationType
		return ret
	}
	return *o.TranslationInfo
}

// GetTranslationInfoOk returns a tuple with the TranslationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetTranslationInfoOk() (*TranslationType, bool) {
	if o == nil || IsNil(o.TranslationInfo) {
		return nil, false
	}
	return o.TranslationInfo, true
}

// HasTranslationInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasTranslationInfo() bool {
	if o != nil && !IsNil(o.TranslationInfo) {
		return true
	}

	return false
}

// SetTranslationInfo gets a reference to the given TranslationType and assigns it to the TranslationInfo field.
func (o *HotelInterfaceDetailType) SetTranslationInfo(v TranslationType) {
	o.TranslationInfo = &v
}

// GetClassOfServiceInfo returns the ClassOfServiceInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetClassOfServiceInfo() ClassOfServiceType {
	if o == nil || IsNil(o.ClassOfServiceInfo) {
		var ret ClassOfServiceType
		return ret
	}
	return *o.ClassOfServiceInfo
}

// GetClassOfServiceInfoOk returns a tuple with the ClassOfServiceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetClassOfServiceInfoOk() (*ClassOfServiceType, bool) {
	if o == nil || IsNil(o.ClassOfServiceInfo) {
		return nil, false
	}
	return o.ClassOfServiceInfo, true
}

// HasClassOfServiceInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasClassOfServiceInfo() bool {
	if o != nil && !IsNil(o.ClassOfServiceInfo) {
		return true
	}

	return false
}

// SetClassOfServiceInfo gets a reference to the given ClassOfServiceType and assigns it to the ClassOfServiceInfo field.
func (o *HotelInterfaceDetailType) SetClassOfServiceInfo(v ClassOfServiceType) {
	o.ClassOfServiceInfo = &v
}

// GetImportRoomsInfo returns the ImportRoomsInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetImportRoomsInfo() ImportRoomsType {
	if o == nil || IsNil(o.ImportRoomsInfo) {
		var ret ImportRoomsType
		return ret
	}
	return *o.ImportRoomsInfo
}

// GetImportRoomsInfoOk returns a tuple with the ImportRoomsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetImportRoomsInfoOk() (*ImportRoomsType, bool) {
	if o == nil || IsNil(o.ImportRoomsInfo) {
		return nil, false
	}
	return o.ImportRoomsInfo, true
}

// HasImportRoomsInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasImportRoomsInfo() bool {
	if o != nil && !IsNil(o.ImportRoomsInfo) {
		return true
	}

	return false
}

// SetImportRoomsInfo gets a reference to the given ImportRoomsType and assigns it to the ImportRoomsInfo field.
func (o *HotelInterfaceDetailType) SetImportRoomsInfo(v ImportRoomsType) {
	o.ImportRoomsInfo = &v
}

// GetWorkstationSetupInfo returns the WorkstationSetupInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetWorkstationSetupInfo() []InterfaceWorkstationType {
	if o == nil || IsNil(o.WorkstationSetupInfo) {
		var ret []InterfaceWorkstationType
		return ret
	}
	return o.WorkstationSetupInfo
}

// GetWorkstationSetupInfoOk returns a tuple with the WorkstationSetupInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetWorkstationSetupInfoOk() ([]InterfaceWorkstationType, bool) {
	if o == nil || IsNil(o.WorkstationSetupInfo) {
		return nil, false
	}
	return o.WorkstationSetupInfo, true
}

// HasWorkstationSetupInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasWorkstationSetupInfo() bool {
	if o != nil && !IsNil(o.WorkstationSetupInfo) {
		return true
	}

	return false
}

// SetWorkstationSetupInfo gets a reference to the given []InterfaceWorkstationType and assigns it to the WorkstationSetupInfo field.
func (o *HotelInterfaceDetailType) SetWorkstationSetupInfo(v []InterfaceWorkstationType) {
	o.WorkstationSetupInfo = v
}

// GetPostingsInfo returns the PostingsInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetPostingsInfo() PostingInfoType {
	if o == nil || IsNil(o.PostingsInfo) {
		var ret PostingInfoType
		return ret
	}
	return *o.PostingsInfo
}

// GetPostingsInfoOk returns a tuple with the PostingsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetPostingsInfoOk() (*PostingInfoType, bool) {
	if o == nil || IsNil(o.PostingsInfo) {
		return nil, false
	}
	return o.PostingsInfo, true
}

// HasPostingsInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasPostingsInfo() bool {
	if o != nil && !IsNil(o.PostingsInfo) {
		return true
	}

	return false
}

// SetPostingsInfo gets a reference to the given PostingInfoType and assigns it to the PostingsInfo field.
func (o *HotelInterfaceDetailType) SetPostingsInfo(v PostingInfoType) {
	o.PostingsInfo = &v
}

// GetCustomDataInfo returns the CustomDataInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetCustomDataInfo() InterfaceCustomDataInfoType {
	if o == nil || IsNil(o.CustomDataInfo) {
		var ret InterfaceCustomDataInfoType
		return ret
	}
	return *o.CustomDataInfo
}

// GetCustomDataInfoOk returns a tuple with the CustomDataInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetCustomDataInfoOk() (*InterfaceCustomDataInfoType, bool) {
	if o == nil || IsNil(o.CustomDataInfo) {
		return nil, false
	}
	return o.CustomDataInfo, true
}

// HasCustomDataInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasCustomDataInfo() bool {
	if o != nil && !IsNil(o.CustomDataInfo) {
		return true
	}

	return false
}

// SetCustomDataInfo gets a reference to the given InterfaceCustomDataInfoType and assigns it to the CustomDataInfo field.
func (o *HotelInterfaceDetailType) SetCustomDataInfo(v InterfaceCustomDataInfoType) {
	o.CustomDataInfo = &v
}

// GetExportDataInfo returns the ExportDataInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetExportDataInfo() InterfaceExportDataInfoType {
	if o == nil || IsNil(o.ExportDataInfo) {
		var ret InterfaceExportDataInfoType
		return ret
	}
	return *o.ExportDataInfo
}

// GetExportDataInfoOk returns a tuple with the ExportDataInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetExportDataInfoOk() (*InterfaceExportDataInfoType, bool) {
	if o == nil || IsNil(o.ExportDataInfo) {
		return nil, false
	}
	return o.ExportDataInfo, true
}

// HasExportDataInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasExportDataInfo() bool {
	if o != nil && !IsNil(o.ExportDataInfo) {
		return true
	}

	return false
}

// SetExportDataInfo gets a reference to the given InterfaceExportDataInfoType and assigns it to the ExportDataInfo field.
func (o *HotelInterfaceDetailType) SetExportDataInfo(v InterfaceExportDataInfoType) {
	o.ExportDataInfo = &v
}

// GetTransactionsInfo returns the TransactionsInfo field value if set, zero value otherwise.
func (o *HotelInterfaceDetailType) GetTransactionsInfo() TransactionCodeInfoType {
	if o == nil || IsNil(o.TransactionsInfo) {
		var ret TransactionCodeInfoType
		return ret
	}
	return *o.TransactionsInfo
}

// GetTransactionsInfoOk returns a tuple with the TransactionsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelInterfaceDetailType) GetTransactionsInfoOk() (*TransactionCodeInfoType, bool) {
	if o == nil || IsNil(o.TransactionsInfo) {
		return nil, false
	}
	return o.TransactionsInfo, true
}

// HasTransactionsInfo returns a boolean if a field has been set.
func (o *HotelInterfaceDetailType) HasTransactionsInfo() bool {
	if o != nil && !IsNil(o.TransactionsInfo) {
		return true
	}

	return false
}

// SetTransactionsInfo gets a reference to the given TransactionCodeInfoType and assigns it to the TransactionsInfo field.
func (o *HotelInterfaceDetailType) SetTransactionsInfo(v TransactionCodeInfoType) {
	o.TransactionsInfo = &v
}

func (o HotelInterfaceDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelInterfaceDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryInfo) {
		toSerialize["primaryInfo"] = o.PrimaryInfo
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.GeneralInfo) {
		toSerialize["generalInfo"] = o.GeneralInfo
	}
	if !IsNil(o.CommunicationInfo) {
		toSerialize["communicationInfo"] = o.CommunicationInfo
	}
	if !IsNil(o.TranslationInfo) {
		toSerialize["translationInfo"] = o.TranslationInfo
	}
	if !IsNil(o.ClassOfServiceInfo) {
		toSerialize["classOfServiceInfo"] = o.ClassOfServiceInfo
	}
	if !IsNil(o.ImportRoomsInfo) {
		toSerialize["importRoomsInfo"] = o.ImportRoomsInfo
	}
	if !IsNil(o.WorkstationSetupInfo) {
		toSerialize["workstationSetupInfo"] = o.WorkstationSetupInfo
	}
	if !IsNil(o.PostingsInfo) {
		toSerialize["postingsInfo"] = o.PostingsInfo
	}
	if !IsNil(o.CustomDataInfo) {
		toSerialize["customDataInfo"] = o.CustomDataInfo
	}
	if !IsNil(o.ExportDataInfo) {
		toSerialize["exportDataInfo"] = o.ExportDataInfo
	}
	if !IsNil(o.TransactionsInfo) {
		toSerialize["transactionsInfo"] = o.TransactionsInfo
	}
	return toSerialize, nil
}

type NullableHotelInterfaceDetailType struct {
	value *HotelInterfaceDetailType
	isSet bool
}

func (v NullableHotelInterfaceDetailType) Get() *HotelInterfaceDetailType {
	return v.value
}

func (v *NullableHotelInterfaceDetailType) Set(val *HotelInterfaceDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelInterfaceDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelInterfaceDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelInterfaceDetailType(val *HotelInterfaceDetailType) *NullableHotelInterfaceDetailType {
	return &NullableHotelInterfaceDetailType{value: val, isSet: true}
}

func (v NullableHotelInterfaceDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelInterfaceDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


