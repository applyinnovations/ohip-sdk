/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeRuleConditionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeRuleConditionsType{}

// MembershipTypeRuleConditionsType Membership Type Rule Conditions.
type MembershipTypeRuleConditionsType struct {
	GeneralConditions *MembershipTypeRuleGeneralConditionsType `json:"generalConditions,omitempty"`
	RateConditions *MembershipTypeRuleRateConditionsType `json:"rateConditions,omitempty"`
	RoomConditions *MembershipTypeRuleRoomConditionsType `json:"roomConditions,omitempty"`
	SegmentationConditions *MembershipTypeRuleSegmentationConditionsType `json:"segmentationConditions,omitempty"`
	ReservationConditions *MembershipTypeRuleReservationConditionsType `json:"reservationConditions,omitempty"`
}

// NewMembershipTypeRuleConditionsType instantiates a new MembershipTypeRuleConditionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeRuleConditionsType() *MembershipTypeRuleConditionsType {
	this := MembershipTypeRuleConditionsType{}
	return &this
}

// NewMembershipTypeRuleConditionsTypeWithDefaults instantiates a new MembershipTypeRuleConditionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeRuleConditionsTypeWithDefaults() *MembershipTypeRuleConditionsType {
	this := MembershipTypeRuleConditionsType{}
	return &this
}

// GetGeneralConditions returns the GeneralConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleConditionsType) GetGeneralConditions() MembershipTypeRuleGeneralConditionsType {
	if o == nil || IsNil(o.GeneralConditions) {
		var ret MembershipTypeRuleGeneralConditionsType
		return ret
	}
	return *o.GeneralConditions
}

// GetGeneralConditionsOk returns a tuple with the GeneralConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleConditionsType) GetGeneralConditionsOk() (*MembershipTypeRuleGeneralConditionsType, bool) {
	if o == nil || IsNil(o.GeneralConditions) {
		return nil, false
	}
	return o.GeneralConditions, true
}

// HasGeneralConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleConditionsType) HasGeneralConditions() bool {
	if o != nil && !IsNil(o.GeneralConditions) {
		return true
	}

	return false
}

// SetGeneralConditions gets a reference to the given MembershipTypeRuleGeneralConditionsType and assigns it to the GeneralConditions field.
func (o *MembershipTypeRuleConditionsType) SetGeneralConditions(v MembershipTypeRuleGeneralConditionsType) {
	o.GeneralConditions = &v
}

// GetRateConditions returns the RateConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleConditionsType) GetRateConditions() MembershipTypeRuleRateConditionsType {
	if o == nil || IsNil(o.RateConditions) {
		var ret MembershipTypeRuleRateConditionsType
		return ret
	}
	return *o.RateConditions
}

// GetRateConditionsOk returns a tuple with the RateConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleConditionsType) GetRateConditionsOk() (*MembershipTypeRuleRateConditionsType, bool) {
	if o == nil || IsNil(o.RateConditions) {
		return nil, false
	}
	return o.RateConditions, true
}

// HasRateConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleConditionsType) HasRateConditions() bool {
	if o != nil && !IsNil(o.RateConditions) {
		return true
	}

	return false
}

// SetRateConditions gets a reference to the given MembershipTypeRuleRateConditionsType and assigns it to the RateConditions field.
func (o *MembershipTypeRuleConditionsType) SetRateConditions(v MembershipTypeRuleRateConditionsType) {
	o.RateConditions = &v
}

// GetRoomConditions returns the RoomConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleConditionsType) GetRoomConditions() MembershipTypeRuleRoomConditionsType {
	if o == nil || IsNil(o.RoomConditions) {
		var ret MembershipTypeRuleRoomConditionsType
		return ret
	}
	return *o.RoomConditions
}

// GetRoomConditionsOk returns a tuple with the RoomConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleConditionsType) GetRoomConditionsOk() (*MembershipTypeRuleRoomConditionsType, bool) {
	if o == nil || IsNil(o.RoomConditions) {
		return nil, false
	}
	return o.RoomConditions, true
}

// HasRoomConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleConditionsType) HasRoomConditions() bool {
	if o != nil && !IsNil(o.RoomConditions) {
		return true
	}

	return false
}

// SetRoomConditions gets a reference to the given MembershipTypeRuleRoomConditionsType and assigns it to the RoomConditions field.
func (o *MembershipTypeRuleConditionsType) SetRoomConditions(v MembershipTypeRuleRoomConditionsType) {
	o.RoomConditions = &v
}

// GetSegmentationConditions returns the SegmentationConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleConditionsType) GetSegmentationConditions() MembershipTypeRuleSegmentationConditionsType {
	if o == nil || IsNil(o.SegmentationConditions) {
		var ret MembershipTypeRuleSegmentationConditionsType
		return ret
	}
	return *o.SegmentationConditions
}

// GetSegmentationConditionsOk returns a tuple with the SegmentationConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleConditionsType) GetSegmentationConditionsOk() (*MembershipTypeRuleSegmentationConditionsType, bool) {
	if o == nil || IsNil(o.SegmentationConditions) {
		return nil, false
	}
	return o.SegmentationConditions, true
}

// HasSegmentationConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleConditionsType) HasSegmentationConditions() bool {
	if o != nil && !IsNil(o.SegmentationConditions) {
		return true
	}

	return false
}

// SetSegmentationConditions gets a reference to the given MembershipTypeRuleSegmentationConditionsType and assigns it to the SegmentationConditions field.
func (o *MembershipTypeRuleConditionsType) SetSegmentationConditions(v MembershipTypeRuleSegmentationConditionsType) {
	o.SegmentationConditions = &v
}

// GetReservationConditions returns the ReservationConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleConditionsType) GetReservationConditions() MembershipTypeRuleReservationConditionsType {
	if o == nil || IsNil(o.ReservationConditions) {
		var ret MembershipTypeRuleReservationConditionsType
		return ret
	}
	return *o.ReservationConditions
}

// GetReservationConditionsOk returns a tuple with the ReservationConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleConditionsType) GetReservationConditionsOk() (*MembershipTypeRuleReservationConditionsType, bool) {
	if o == nil || IsNil(o.ReservationConditions) {
		return nil, false
	}
	return o.ReservationConditions, true
}

// HasReservationConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleConditionsType) HasReservationConditions() bool {
	if o != nil && !IsNil(o.ReservationConditions) {
		return true
	}

	return false
}

// SetReservationConditions gets a reference to the given MembershipTypeRuleReservationConditionsType and assigns it to the ReservationConditions field.
func (o *MembershipTypeRuleConditionsType) SetReservationConditions(v MembershipTypeRuleReservationConditionsType) {
	o.ReservationConditions = &v
}

func (o MembershipTypeRuleConditionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeRuleConditionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GeneralConditions) {
		toSerialize["generalConditions"] = o.GeneralConditions
	}
	if !IsNil(o.RateConditions) {
		toSerialize["rateConditions"] = o.RateConditions
	}
	if !IsNil(o.RoomConditions) {
		toSerialize["roomConditions"] = o.RoomConditions
	}
	if !IsNil(o.SegmentationConditions) {
		toSerialize["segmentationConditions"] = o.SegmentationConditions
	}
	if !IsNil(o.ReservationConditions) {
		toSerialize["reservationConditions"] = o.ReservationConditions
	}
	return toSerialize, nil
}

type NullableMembershipTypeRuleConditionsType struct {
	value *MembershipTypeRuleConditionsType
	isSet bool
}

func (v NullableMembershipTypeRuleConditionsType) Get() *MembershipTypeRuleConditionsType {
	return v.value
}

func (v *NullableMembershipTypeRuleConditionsType) Set(val *MembershipTypeRuleConditionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeRuleConditionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeRuleConditionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeRuleConditionsType(val *MembershipTypeRuleConditionsType) *NullableMembershipTypeRuleConditionsType {
	return &NullableMembershipTypeRuleConditionsType{value: val, isSet: true}
}

func (v NullableMembershipTypeRuleConditionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeRuleConditionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


