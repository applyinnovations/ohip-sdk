/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the HotelFolioTextType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HotelFolioTextType{}

// HotelFolioTextType Folio text
type HotelFolioTextType struct {
	FolioText1 *string `json:"folioText1,omitempty"`
	FolioText2 *string `json:"folioText2,omitempty"`
	FolioText3 *string `json:"folioText3,omitempty"`
	FolioText4 *string `json:"folioText4,omitempty"`
	// Signifies folio text for a specific hotel.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewHotelFolioTextType instantiates a new HotelFolioTextType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHotelFolioTextType() *HotelFolioTextType {
	this := HotelFolioTextType{}
	return &this
}

// NewHotelFolioTextTypeWithDefaults instantiates a new HotelFolioTextType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHotelFolioTextTypeWithDefaults() *HotelFolioTextType {
	this := HotelFolioTextType{}
	return &this
}

// GetFolioText1 returns the FolioText1 field value if set, zero value otherwise.
func (o *HotelFolioTextType) GetFolioText1() string {
	if o == nil || IsNil(o.FolioText1) {
		var ret string
		return ret
	}
	return *o.FolioText1
}

// GetFolioText1Ok returns a tuple with the FolioText1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelFolioTextType) GetFolioText1Ok() (*string, bool) {
	if o == nil || IsNil(o.FolioText1) {
		return nil, false
	}
	return o.FolioText1, true
}

// HasFolioText1 returns a boolean if a field has been set.
func (o *HotelFolioTextType) HasFolioText1() bool {
	if o != nil && !IsNil(o.FolioText1) {
		return true
	}

	return false
}

// SetFolioText1 gets a reference to the given string and assigns it to the FolioText1 field.
func (o *HotelFolioTextType) SetFolioText1(v string) {
	o.FolioText1 = &v
}

// GetFolioText2 returns the FolioText2 field value if set, zero value otherwise.
func (o *HotelFolioTextType) GetFolioText2() string {
	if o == nil || IsNil(o.FolioText2) {
		var ret string
		return ret
	}
	return *o.FolioText2
}

// GetFolioText2Ok returns a tuple with the FolioText2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelFolioTextType) GetFolioText2Ok() (*string, bool) {
	if o == nil || IsNil(o.FolioText2) {
		return nil, false
	}
	return o.FolioText2, true
}

// HasFolioText2 returns a boolean if a field has been set.
func (o *HotelFolioTextType) HasFolioText2() bool {
	if o != nil && !IsNil(o.FolioText2) {
		return true
	}

	return false
}

// SetFolioText2 gets a reference to the given string and assigns it to the FolioText2 field.
func (o *HotelFolioTextType) SetFolioText2(v string) {
	o.FolioText2 = &v
}

// GetFolioText3 returns the FolioText3 field value if set, zero value otherwise.
func (o *HotelFolioTextType) GetFolioText3() string {
	if o == nil || IsNil(o.FolioText3) {
		var ret string
		return ret
	}
	return *o.FolioText3
}

// GetFolioText3Ok returns a tuple with the FolioText3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelFolioTextType) GetFolioText3Ok() (*string, bool) {
	if o == nil || IsNil(o.FolioText3) {
		return nil, false
	}
	return o.FolioText3, true
}

// HasFolioText3 returns a boolean if a field has been set.
func (o *HotelFolioTextType) HasFolioText3() bool {
	if o != nil && !IsNil(o.FolioText3) {
		return true
	}

	return false
}

// SetFolioText3 gets a reference to the given string and assigns it to the FolioText3 field.
func (o *HotelFolioTextType) SetFolioText3(v string) {
	o.FolioText3 = &v
}

// GetFolioText4 returns the FolioText4 field value if set, zero value otherwise.
func (o *HotelFolioTextType) GetFolioText4() string {
	if o == nil || IsNil(o.FolioText4) {
		var ret string
		return ret
	}
	return *o.FolioText4
}

// GetFolioText4Ok returns a tuple with the FolioText4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelFolioTextType) GetFolioText4Ok() (*string, bool) {
	if o == nil || IsNil(o.FolioText4) {
		return nil, false
	}
	return o.FolioText4, true
}

// HasFolioText4 returns a boolean if a field has been set.
func (o *HotelFolioTextType) HasFolioText4() bool {
	if o != nil && !IsNil(o.FolioText4) {
		return true
	}

	return false
}

// SetFolioText4 gets a reference to the given string and assigns it to the FolioText4 field.
func (o *HotelFolioTextType) SetFolioText4(v string) {
	o.FolioText4 = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *HotelFolioTextType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HotelFolioTextType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *HotelFolioTextType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *HotelFolioTextType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o HotelFolioTextType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HotelFolioTextType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolioText1) {
		toSerialize["folioText1"] = o.FolioText1
	}
	if !IsNil(o.FolioText2) {
		toSerialize["folioText2"] = o.FolioText2
	}
	if !IsNil(o.FolioText3) {
		toSerialize["folioText3"] = o.FolioText3
	}
	if !IsNil(o.FolioText4) {
		toSerialize["folioText4"] = o.FolioText4
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableHotelFolioTextType struct {
	value *HotelFolioTextType
	isSet bool
}

func (v NullableHotelFolioTextType) Get() *HotelFolioTextType {
	return v.value
}

func (v *NullableHotelFolioTextType) Set(val *HotelFolioTextType) {
	v.value = val
	v.isSet = true
}

func (v NullableHotelFolioTextType) IsSet() bool {
	return v.isSet
}

func (v *NullableHotelFolioTextType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHotelFolioTextType(val *HotelFolioTextType) *NullableHotelFolioTextType {
	return &NullableHotelFolioTextType{value: val, isSet: true}
}

func (v NullableHotelFolioTextType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHotelFolioTextType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


