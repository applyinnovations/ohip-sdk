/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeRulePrimaryDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeRulePrimaryDetailsType{}

// MembershipTypeRulePrimaryDetailsType Membership Type rule primary information.
type MembershipTypeRulePrimaryDetailsType struct {
	MembershipTypeRuleId *MembershipTypeRuleIDType `json:"membershipTypeRuleId,omitempty"`
	// Description of the rule.
	Description *string `json:"description,omitempty"`
	RuleBasedOn *MembershipTypeRuleBasedOnType `json:"ruleBasedOn,omitempty"`
	// Start date indicates the begin date for this points calculation rule.
	RuleStartDate *string `json:"ruleStartDate,omitempty"`
	// End date for this points calculation rule.
	RuleEndDate *string `json:"ruleEndDate,omitempty"`
	PointsType *RulePointsTypeType `json:"pointsType,omitempty"`
	// The date that Membership type rule is marked as inactive.
	InactiveDate *string `json:"inactiveDate,omitempty"`
	TransactionCode *MembershipTypeRuleTransactionCodeType `json:"transactionCode,omitempty"`
}

// NewMembershipTypeRulePrimaryDetailsType instantiates a new MembershipTypeRulePrimaryDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeRulePrimaryDetailsType() *MembershipTypeRulePrimaryDetailsType {
	this := MembershipTypeRulePrimaryDetailsType{}
	return &this
}

// NewMembershipTypeRulePrimaryDetailsTypeWithDefaults instantiates a new MembershipTypeRulePrimaryDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeRulePrimaryDetailsTypeWithDefaults() *MembershipTypeRulePrimaryDetailsType {
	this := MembershipTypeRulePrimaryDetailsType{}
	return &this
}

// GetMembershipTypeRuleId returns the MembershipTypeRuleId field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetMembershipTypeRuleId() MembershipTypeRuleIDType {
	if o == nil || IsNil(o.MembershipTypeRuleId) {
		var ret MembershipTypeRuleIDType
		return ret
	}
	return *o.MembershipTypeRuleId
}

// GetMembershipTypeRuleIdOk returns a tuple with the MembershipTypeRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetMembershipTypeRuleIdOk() (*MembershipTypeRuleIDType, bool) {
	if o == nil || IsNil(o.MembershipTypeRuleId) {
		return nil, false
	}
	return o.MembershipTypeRuleId, true
}

// HasMembershipTypeRuleId returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasMembershipTypeRuleId() bool {
	if o != nil && !IsNil(o.MembershipTypeRuleId) {
		return true
	}

	return false
}

// SetMembershipTypeRuleId gets a reference to the given MembershipTypeRuleIDType and assigns it to the MembershipTypeRuleId field.
func (o *MembershipTypeRulePrimaryDetailsType) SetMembershipTypeRuleId(v MembershipTypeRuleIDType) {
	o.MembershipTypeRuleId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MembershipTypeRulePrimaryDetailsType) SetDescription(v string) {
	o.Description = &v
}

// GetRuleBasedOn returns the RuleBasedOn field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleBasedOn() MembershipTypeRuleBasedOnType {
	if o == nil || IsNil(o.RuleBasedOn) {
		var ret MembershipTypeRuleBasedOnType
		return ret
	}
	return *o.RuleBasedOn
}

// GetRuleBasedOnOk returns a tuple with the RuleBasedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleBasedOnOk() (*MembershipTypeRuleBasedOnType, bool) {
	if o == nil || IsNil(o.RuleBasedOn) {
		return nil, false
	}
	return o.RuleBasedOn, true
}

// HasRuleBasedOn returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasRuleBasedOn() bool {
	if o != nil && !IsNil(o.RuleBasedOn) {
		return true
	}

	return false
}

// SetRuleBasedOn gets a reference to the given MembershipTypeRuleBasedOnType and assigns it to the RuleBasedOn field.
func (o *MembershipTypeRulePrimaryDetailsType) SetRuleBasedOn(v MembershipTypeRuleBasedOnType) {
	o.RuleBasedOn = &v
}

// GetRuleStartDate returns the RuleStartDate field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleStartDate() string {
	if o == nil || IsNil(o.RuleStartDate) {
		var ret string
		return ret
	}
	return *o.RuleStartDate
}

// GetRuleStartDateOk returns a tuple with the RuleStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.RuleStartDate) {
		return nil, false
	}
	return o.RuleStartDate, true
}

// HasRuleStartDate returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasRuleStartDate() bool {
	if o != nil && !IsNil(o.RuleStartDate) {
		return true
	}

	return false
}

// SetRuleStartDate gets a reference to the given string and assigns it to the RuleStartDate field.
func (o *MembershipTypeRulePrimaryDetailsType) SetRuleStartDate(v string) {
	o.RuleStartDate = &v
}

// GetRuleEndDate returns the RuleEndDate field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleEndDate() string {
	if o == nil || IsNil(o.RuleEndDate) {
		var ret string
		return ret
	}
	return *o.RuleEndDate
}

// GetRuleEndDateOk returns a tuple with the RuleEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetRuleEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.RuleEndDate) {
		return nil, false
	}
	return o.RuleEndDate, true
}

// HasRuleEndDate returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasRuleEndDate() bool {
	if o != nil && !IsNil(o.RuleEndDate) {
		return true
	}

	return false
}

// SetRuleEndDate gets a reference to the given string and assigns it to the RuleEndDate field.
func (o *MembershipTypeRulePrimaryDetailsType) SetRuleEndDate(v string) {
	o.RuleEndDate = &v
}

// GetPointsType returns the PointsType field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetPointsType() RulePointsTypeType {
	if o == nil || IsNil(o.PointsType) {
		var ret RulePointsTypeType
		return ret
	}
	return *o.PointsType
}

// GetPointsTypeOk returns a tuple with the PointsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetPointsTypeOk() (*RulePointsTypeType, bool) {
	if o == nil || IsNil(o.PointsType) {
		return nil, false
	}
	return o.PointsType, true
}

// HasPointsType returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasPointsType() bool {
	if o != nil && !IsNil(o.PointsType) {
		return true
	}

	return false
}

// SetPointsType gets a reference to the given RulePointsTypeType and assigns it to the PointsType field.
func (o *MembershipTypeRulePrimaryDetailsType) SetPointsType(v RulePointsTypeType) {
	o.PointsType = &v
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *MembershipTypeRulePrimaryDetailsType) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *MembershipTypeRulePrimaryDetailsType) GetTransactionCode() MembershipTypeRuleTransactionCodeType {
	if o == nil || IsNil(o.TransactionCode) {
		var ret MembershipTypeRuleTransactionCodeType
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRulePrimaryDetailsType) GetTransactionCodeOk() (*MembershipTypeRuleTransactionCodeType, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *MembershipTypeRulePrimaryDetailsType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given MembershipTypeRuleTransactionCodeType and assigns it to the TransactionCode field.
func (o *MembershipTypeRulePrimaryDetailsType) SetTransactionCode(v MembershipTypeRuleTransactionCodeType) {
	o.TransactionCode = &v
}

func (o MembershipTypeRulePrimaryDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeRulePrimaryDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipTypeRuleId) {
		toSerialize["membershipTypeRuleId"] = o.MembershipTypeRuleId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RuleBasedOn) {
		toSerialize["ruleBasedOn"] = o.RuleBasedOn
	}
	if !IsNil(o.RuleStartDate) {
		toSerialize["ruleStartDate"] = o.RuleStartDate
	}
	if !IsNil(o.RuleEndDate) {
		toSerialize["ruleEndDate"] = o.RuleEndDate
	}
	if !IsNil(o.PointsType) {
		toSerialize["pointsType"] = o.PointsType
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	return toSerialize, nil
}

type NullableMembershipTypeRulePrimaryDetailsType struct {
	value *MembershipTypeRulePrimaryDetailsType
	isSet bool
}

func (v NullableMembershipTypeRulePrimaryDetailsType) Get() *MembershipTypeRulePrimaryDetailsType {
	return v.value
}

func (v *NullableMembershipTypeRulePrimaryDetailsType) Set(val *MembershipTypeRulePrimaryDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeRulePrimaryDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeRulePrimaryDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeRulePrimaryDetailsType(val *MembershipTypeRulePrimaryDetailsType) *NullableMembershipTypeRulePrimaryDetailsType {
	return &NullableMembershipTypeRulePrimaryDetailsType{value: val, isSet: true}
}

func (v NullableMembershipTypeRulePrimaryDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeRulePrimaryDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


