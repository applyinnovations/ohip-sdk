/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeRuleSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeRuleSummaryType{}

// MembershipTypeRuleSummaryType Membership Type rule summary information.
type MembershipTypeRuleSummaryType struct {
	MembershipTypeRulePrimaryDetails *MembershipTypeRulePrimaryDetailsType `json:"membershipTypeRulePrimaryDetails,omitempty"`
	ProgramType *MembershipTypeRuleType `json:"programType,omitempty"`
	// Rule code of the membership type rule.
	RuleCode *string `json:"ruleCode,omitempty"`
}

// NewMembershipTypeRuleSummaryType instantiates a new MembershipTypeRuleSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeRuleSummaryType() *MembershipTypeRuleSummaryType {
	this := MembershipTypeRuleSummaryType{}
	return &this
}

// NewMembershipTypeRuleSummaryTypeWithDefaults instantiates a new MembershipTypeRuleSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeRuleSummaryTypeWithDefaults() *MembershipTypeRuleSummaryType {
	this := MembershipTypeRuleSummaryType{}
	return &this
}

// GetMembershipTypeRulePrimaryDetails returns the MembershipTypeRulePrimaryDetails field value if set, zero value otherwise.
func (o *MembershipTypeRuleSummaryType) GetMembershipTypeRulePrimaryDetails() MembershipTypeRulePrimaryDetailsType {
	if o == nil || IsNil(o.MembershipTypeRulePrimaryDetails) {
		var ret MembershipTypeRulePrimaryDetailsType
		return ret
	}
	return *o.MembershipTypeRulePrimaryDetails
}

// GetMembershipTypeRulePrimaryDetailsOk returns a tuple with the MembershipTypeRulePrimaryDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleSummaryType) GetMembershipTypeRulePrimaryDetailsOk() (*MembershipTypeRulePrimaryDetailsType, bool) {
	if o == nil || IsNil(o.MembershipTypeRulePrimaryDetails) {
		return nil, false
	}
	return o.MembershipTypeRulePrimaryDetails, true
}

// HasMembershipTypeRulePrimaryDetails returns a boolean if a field has been set.
func (o *MembershipTypeRuleSummaryType) HasMembershipTypeRulePrimaryDetails() bool {
	if o != nil && !IsNil(o.MembershipTypeRulePrimaryDetails) {
		return true
	}

	return false
}

// SetMembershipTypeRulePrimaryDetails gets a reference to the given MembershipTypeRulePrimaryDetailsType and assigns it to the MembershipTypeRulePrimaryDetails field.
func (o *MembershipTypeRuleSummaryType) SetMembershipTypeRulePrimaryDetails(v MembershipTypeRulePrimaryDetailsType) {
	o.MembershipTypeRulePrimaryDetails = &v
}

// GetProgramType returns the ProgramType field value if set, zero value otherwise.
func (o *MembershipTypeRuleSummaryType) GetProgramType() MembershipTypeRuleType {
	if o == nil || IsNil(o.ProgramType) {
		var ret MembershipTypeRuleType
		return ret
	}
	return *o.ProgramType
}

// GetProgramTypeOk returns a tuple with the ProgramType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleSummaryType) GetProgramTypeOk() (*MembershipTypeRuleType, bool) {
	if o == nil || IsNil(o.ProgramType) {
		return nil, false
	}
	return o.ProgramType, true
}

// HasProgramType returns a boolean if a field has been set.
func (o *MembershipTypeRuleSummaryType) HasProgramType() bool {
	if o != nil && !IsNil(o.ProgramType) {
		return true
	}

	return false
}

// SetProgramType gets a reference to the given MembershipTypeRuleType and assigns it to the ProgramType field.
func (o *MembershipTypeRuleSummaryType) SetProgramType(v MembershipTypeRuleType) {
	o.ProgramType = &v
}

// GetRuleCode returns the RuleCode field value if set, zero value otherwise.
func (o *MembershipTypeRuleSummaryType) GetRuleCode() string {
	if o == nil || IsNil(o.RuleCode) {
		var ret string
		return ret
	}
	return *o.RuleCode
}

// GetRuleCodeOk returns a tuple with the RuleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleSummaryType) GetRuleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleCode) {
		return nil, false
	}
	return o.RuleCode, true
}

// HasRuleCode returns a boolean if a field has been set.
func (o *MembershipTypeRuleSummaryType) HasRuleCode() bool {
	if o != nil && !IsNil(o.RuleCode) {
		return true
	}

	return false
}

// SetRuleCode gets a reference to the given string and assigns it to the RuleCode field.
func (o *MembershipTypeRuleSummaryType) SetRuleCode(v string) {
	o.RuleCode = &v
}

func (o MembershipTypeRuleSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeRuleSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipTypeRulePrimaryDetails) {
		toSerialize["membershipTypeRulePrimaryDetails"] = o.MembershipTypeRulePrimaryDetails
	}
	if !IsNil(o.ProgramType) {
		toSerialize["programType"] = o.ProgramType
	}
	if !IsNil(o.RuleCode) {
		toSerialize["ruleCode"] = o.RuleCode
	}
	return toSerialize, nil
}

type NullableMembershipTypeRuleSummaryType struct {
	value *MembershipTypeRuleSummaryType
	isSet bool
}

func (v NullableMembershipTypeRuleSummaryType) Get() *MembershipTypeRuleSummaryType {
	return v.value
}

func (v *NullableMembershipTypeRuleSummaryType) Set(val *MembershipTypeRuleSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeRuleSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeRuleSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeRuleSummaryType(val *MembershipTypeRuleSummaryType) *NullableMembershipTypeRuleSummaryType {
	return &NullableMembershipTypeRuleSummaryType{value: val, isSet: true}
}

func (v NullableMembershipTypeRuleSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeRuleSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


