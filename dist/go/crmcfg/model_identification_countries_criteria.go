/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.4
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the IdentificationCountriesCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentificationCountriesCriteria{}

// IdentificationCountriesCriteria Request object for creating Identification Countries.
type IdentificationCountriesCriteria struct {
	// List of Identification Countries.
	IdentificationCountries []IdentificationCountryType `json:"identificationCountries,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewIdentificationCountriesCriteria instantiates a new IdentificationCountriesCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentificationCountriesCriteria() *IdentificationCountriesCriteria {
	this := IdentificationCountriesCriteria{}
	return &this
}

// NewIdentificationCountriesCriteriaWithDefaults instantiates a new IdentificationCountriesCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentificationCountriesCriteriaWithDefaults() *IdentificationCountriesCriteria {
	this := IdentificationCountriesCriteria{}
	return &this
}

// GetIdentificationCountries returns the IdentificationCountries field value if set, zero value otherwise.
func (o *IdentificationCountriesCriteria) GetIdentificationCountries() []IdentificationCountryType {
	if o == nil || IsNil(o.IdentificationCountries) {
		var ret []IdentificationCountryType
		return ret
	}
	return o.IdentificationCountries
}

// GetIdentificationCountriesOk returns a tuple with the IdentificationCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationCountriesCriteria) GetIdentificationCountriesOk() ([]IdentificationCountryType, bool) {
	if o == nil || IsNil(o.IdentificationCountries) {
		return nil, false
	}
	return o.IdentificationCountries, true
}

// HasIdentificationCountries returns a boolean if a field has been set.
func (o *IdentificationCountriesCriteria) HasIdentificationCountries() bool {
	if o != nil && !IsNil(o.IdentificationCountries) {
		return true
	}

	return false
}

// SetIdentificationCountries gets a reference to the given []IdentificationCountryType and assigns it to the IdentificationCountries field.
func (o *IdentificationCountriesCriteria) SetIdentificationCountries(v []IdentificationCountryType) {
	o.IdentificationCountries = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *IdentificationCountriesCriteria) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationCountriesCriteria) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *IdentificationCountriesCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *IdentificationCountriesCriteria) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *IdentificationCountriesCriteria) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationCountriesCriteria) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *IdentificationCountriesCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *IdentificationCountriesCriteria) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o IdentificationCountriesCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentificationCountriesCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentificationCountries) {
		toSerialize["identificationCountries"] = o.IdentificationCountries
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableIdentificationCountriesCriteria struct {
	value *IdentificationCountriesCriteria
	isSet bool
}

func (v NullableIdentificationCountriesCriteria) Get() *IdentificationCountriesCriteria {
	return v.value
}

func (v *NullableIdentificationCountriesCriteria) Set(val *IdentificationCountriesCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentificationCountriesCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentificationCountriesCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentificationCountriesCriteria(val *IdentificationCountriesCriteria) *NullableIdentificationCountriesCriteria {
	return &NullableIdentificationCountriesCriteria{value: val, isSet: true}
}

func (v NullableIdentificationCountriesCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentificationCountriesCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


