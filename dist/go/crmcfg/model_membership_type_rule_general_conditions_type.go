/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeRuleGeneralConditionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeRuleGeneralConditionsType{}

// MembershipTypeRuleGeneralConditionsType Membership Type Rules general Conditions.
type MembershipTypeRuleGeneralConditionsType struct {
	// Reservation Channel for which the rule is applied. This attribute is deprecated would not be used further.
	ReservationChannel *string `json:"reservationChannel,omitempty"`
	// Property for which the rule is applied.
	Property *string `json:"property,omitempty"`
	// Property group for which the rule is applied.
	PropertyGroup *string `json:"propertyGroup,omitempty"`
	// Enrollment Code for which the rule is applied.
	EnrollmentCode *string `json:"enrollmentCode,omitempty"`
	// Enrollment Group for which the rule is applied.
	EnrollmentGroup *string `json:"enrollmentGroup,omitempty"`
	// Promotion Code for which the rule is applied.
	PromotionCode *string `json:"promotionCode,omitempty"`
	// Membership Level for which the rule is applied.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Origin Code for which the rule is applied.
	OriginCode *string `json:"originCode,omitempty"`
	// Origin group for which the rule is applied.
	OriginGroup *string `json:"originGroup,omitempty"`
	// To specify the exclusion of origin group while applying rule.
	ExcludeOriginGroup *bool `json:"excludeOriginGroup,omitempty"`
}

// NewMembershipTypeRuleGeneralConditionsType instantiates a new MembershipTypeRuleGeneralConditionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeRuleGeneralConditionsType() *MembershipTypeRuleGeneralConditionsType {
	this := MembershipTypeRuleGeneralConditionsType{}
	return &this
}

// NewMembershipTypeRuleGeneralConditionsTypeWithDefaults instantiates a new MembershipTypeRuleGeneralConditionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeRuleGeneralConditionsTypeWithDefaults() *MembershipTypeRuleGeneralConditionsType {
	this := MembershipTypeRuleGeneralConditionsType{}
	return &this
}

// GetReservationChannel returns the ReservationChannel field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetReservationChannel() string {
	if o == nil || IsNil(o.ReservationChannel) {
		var ret string
		return ret
	}
	return *o.ReservationChannel
}

// GetReservationChannelOk returns a tuple with the ReservationChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetReservationChannelOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationChannel) {
		return nil, false
	}
	return o.ReservationChannel, true
}

// HasReservationChannel returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasReservationChannel() bool {
	if o != nil && !IsNil(o.ReservationChannel) {
		return true
	}

	return false
}

// SetReservationChannel gets a reference to the given string and assigns it to the ReservationChannel field.
func (o *MembershipTypeRuleGeneralConditionsType) SetReservationChannel(v string) {
	o.ReservationChannel = &v
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *MembershipTypeRuleGeneralConditionsType) SetProperty(v string) {
	o.Property = &v
}

// GetPropertyGroup returns the PropertyGroup field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetPropertyGroup() string {
	if o == nil || IsNil(o.PropertyGroup) {
		var ret string
		return ret
	}
	return *o.PropertyGroup
}

// GetPropertyGroupOk returns a tuple with the PropertyGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetPropertyGroupOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyGroup) {
		return nil, false
	}
	return o.PropertyGroup, true
}

// HasPropertyGroup returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasPropertyGroup() bool {
	if o != nil && !IsNil(o.PropertyGroup) {
		return true
	}

	return false
}

// SetPropertyGroup gets a reference to the given string and assigns it to the PropertyGroup field.
func (o *MembershipTypeRuleGeneralConditionsType) SetPropertyGroup(v string) {
	o.PropertyGroup = &v
}

// GetEnrollmentCode returns the EnrollmentCode field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetEnrollmentCode() string {
	if o == nil || IsNil(o.EnrollmentCode) {
		var ret string
		return ret
	}
	return *o.EnrollmentCode
}

// GetEnrollmentCodeOk returns a tuple with the EnrollmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetEnrollmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentCode) {
		return nil, false
	}
	return o.EnrollmentCode, true
}

// HasEnrollmentCode returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasEnrollmentCode() bool {
	if o != nil && !IsNil(o.EnrollmentCode) {
		return true
	}

	return false
}

// SetEnrollmentCode gets a reference to the given string and assigns it to the EnrollmentCode field.
func (o *MembershipTypeRuleGeneralConditionsType) SetEnrollmentCode(v string) {
	o.EnrollmentCode = &v
}

// GetEnrollmentGroup returns the EnrollmentGroup field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetEnrollmentGroup() string {
	if o == nil || IsNil(o.EnrollmentGroup) {
		var ret string
		return ret
	}
	return *o.EnrollmentGroup
}

// GetEnrollmentGroupOk returns a tuple with the EnrollmentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetEnrollmentGroupOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentGroup) {
		return nil, false
	}
	return o.EnrollmentGroup, true
}

// HasEnrollmentGroup returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasEnrollmentGroup() bool {
	if o != nil && !IsNil(o.EnrollmentGroup) {
		return true
	}

	return false
}

// SetEnrollmentGroup gets a reference to the given string and assigns it to the EnrollmentGroup field.
func (o *MembershipTypeRuleGeneralConditionsType) SetEnrollmentGroup(v string) {
	o.EnrollmentGroup = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *MembershipTypeRuleGeneralConditionsType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *MembershipTypeRuleGeneralConditionsType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetOriginCode returns the OriginCode field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetOriginCode() string {
	if o == nil || IsNil(o.OriginCode) {
		var ret string
		return ret
	}
	return *o.OriginCode
}

// GetOriginCodeOk returns a tuple with the OriginCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetOriginCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OriginCode) {
		return nil, false
	}
	return o.OriginCode, true
}

// HasOriginCode returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasOriginCode() bool {
	if o != nil && !IsNil(o.OriginCode) {
		return true
	}

	return false
}

// SetOriginCode gets a reference to the given string and assigns it to the OriginCode field.
func (o *MembershipTypeRuleGeneralConditionsType) SetOriginCode(v string) {
	o.OriginCode = &v
}

// GetOriginGroup returns the OriginGroup field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetOriginGroup() string {
	if o == nil || IsNil(o.OriginGroup) {
		var ret string
		return ret
	}
	return *o.OriginGroup
}

// GetOriginGroupOk returns a tuple with the OriginGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetOriginGroupOk() (*string, bool) {
	if o == nil || IsNil(o.OriginGroup) {
		return nil, false
	}
	return o.OriginGroup, true
}

// HasOriginGroup returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasOriginGroup() bool {
	if o != nil && !IsNil(o.OriginGroup) {
		return true
	}

	return false
}

// SetOriginGroup gets a reference to the given string and assigns it to the OriginGroup field.
func (o *MembershipTypeRuleGeneralConditionsType) SetOriginGroup(v string) {
	o.OriginGroup = &v
}

// GetExcludeOriginGroup returns the ExcludeOriginGroup field value if set, zero value otherwise.
func (o *MembershipTypeRuleGeneralConditionsType) GetExcludeOriginGroup() bool {
	if o == nil || IsNil(o.ExcludeOriginGroup) {
		var ret bool
		return ret
	}
	return *o.ExcludeOriginGroup
}

// GetExcludeOriginGroupOk returns a tuple with the ExcludeOriginGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleGeneralConditionsType) GetExcludeOriginGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeOriginGroup) {
		return nil, false
	}
	return o.ExcludeOriginGroup, true
}

// HasExcludeOriginGroup returns a boolean if a field has been set.
func (o *MembershipTypeRuleGeneralConditionsType) HasExcludeOriginGroup() bool {
	if o != nil && !IsNil(o.ExcludeOriginGroup) {
		return true
	}

	return false
}

// SetExcludeOriginGroup gets a reference to the given bool and assigns it to the ExcludeOriginGroup field.
func (o *MembershipTypeRuleGeneralConditionsType) SetExcludeOriginGroup(v bool) {
	o.ExcludeOriginGroup = &v
}

func (o MembershipTypeRuleGeneralConditionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeRuleGeneralConditionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationChannel) {
		toSerialize["reservationChannel"] = o.ReservationChannel
	}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.PropertyGroup) {
		toSerialize["propertyGroup"] = o.PropertyGroup
	}
	if !IsNil(o.EnrollmentCode) {
		toSerialize["enrollmentCode"] = o.EnrollmentCode
	}
	if !IsNil(o.EnrollmentGroup) {
		toSerialize["enrollmentGroup"] = o.EnrollmentGroup
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.OriginCode) {
		toSerialize["originCode"] = o.OriginCode
	}
	if !IsNil(o.OriginGroup) {
		toSerialize["originGroup"] = o.OriginGroup
	}
	if !IsNil(o.ExcludeOriginGroup) {
		toSerialize["excludeOriginGroup"] = o.ExcludeOriginGroup
	}
	return toSerialize, nil
}

type NullableMembershipTypeRuleGeneralConditionsType struct {
	value *MembershipTypeRuleGeneralConditionsType
	isSet bool
}

func (v NullableMembershipTypeRuleGeneralConditionsType) Get() *MembershipTypeRuleGeneralConditionsType {
	return v.value
}

func (v *NullableMembershipTypeRuleGeneralConditionsType) Set(val *MembershipTypeRuleGeneralConditionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeRuleGeneralConditionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeRuleGeneralConditionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeRuleGeneralConditionsType(val *MembershipTypeRuleGeneralConditionsType) *NullableMembershipTypeRuleGeneralConditionsType {
	return &NullableMembershipTypeRuleGeneralConditionsType{value: val, isSet: true}
}

func (v NullableMembershipTypeRuleGeneralConditionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeRuleGeneralConditionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


