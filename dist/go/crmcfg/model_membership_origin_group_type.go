/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipOriginGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipOriginGroupType{}

// MembershipOriginGroupType Details for Membership Origin Group along with associated Origin codes.
type MembershipOriginGroupType struct {
	// Code is used to identify a Membership Origin Group.
	Code *string `json:"code,omitempty"`
	// Description of the Membership Origin Group.
	Description *string `json:"description,omitempty"`
	// Membership Origin Groups display sequence Number
	DisplaySequence *float32 `json:"displaySequence,omitempty"`
	// Membership Origin code and Description.
	OriginCodes []CodeDescriptionType `json:"originCodes,omitempty"`
}

// NewMembershipOriginGroupType instantiates a new MembershipOriginGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipOriginGroupType() *MembershipOriginGroupType {
	this := MembershipOriginGroupType{}
	return &this
}

// NewMembershipOriginGroupTypeWithDefaults instantiates a new MembershipOriginGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipOriginGroupTypeWithDefaults() *MembershipOriginGroupType {
	this := MembershipOriginGroupType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *MembershipOriginGroupType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipOriginGroupType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *MembershipOriginGroupType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *MembershipOriginGroupType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MembershipOriginGroupType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipOriginGroupType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MembershipOriginGroupType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MembershipOriginGroupType) SetDescription(v string) {
	o.Description = &v
}

// GetDisplaySequence returns the DisplaySequence field value if set, zero value otherwise.
func (o *MembershipOriginGroupType) GetDisplaySequence() float32 {
	if o == nil || IsNil(o.DisplaySequence) {
		var ret float32
		return ret
	}
	return *o.DisplaySequence
}

// GetDisplaySequenceOk returns a tuple with the DisplaySequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipOriginGroupType) GetDisplaySequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplaySequence) {
		return nil, false
	}
	return o.DisplaySequence, true
}

// HasDisplaySequence returns a boolean if a field has been set.
func (o *MembershipOriginGroupType) HasDisplaySequence() bool {
	if o != nil && !IsNil(o.DisplaySequence) {
		return true
	}

	return false
}

// SetDisplaySequence gets a reference to the given float32 and assigns it to the DisplaySequence field.
func (o *MembershipOriginGroupType) SetDisplaySequence(v float32) {
	o.DisplaySequence = &v
}

// GetOriginCodes returns the OriginCodes field value if set, zero value otherwise.
func (o *MembershipOriginGroupType) GetOriginCodes() []CodeDescriptionType {
	if o == nil || IsNil(o.OriginCodes) {
		var ret []CodeDescriptionType
		return ret
	}
	return o.OriginCodes
}

// GetOriginCodesOk returns a tuple with the OriginCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipOriginGroupType) GetOriginCodesOk() ([]CodeDescriptionType, bool) {
	if o == nil || IsNil(o.OriginCodes) {
		return nil, false
	}
	return o.OriginCodes, true
}

// HasOriginCodes returns a boolean if a field has been set.
func (o *MembershipOriginGroupType) HasOriginCodes() bool {
	if o != nil && !IsNil(o.OriginCodes) {
		return true
	}

	return false
}

// SetOriginCodes gets a reference to the given []CodeDescriptionType and assigns it to the OriginCodes field.
func (o *MembershipOriginGroupType) SetOriginCodes(v []CodeDescriptionType) {
	o.OriginCodes = v
}

func (o MembershipOriginGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipOriginGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplaySequence) {
		toSerialize["displaySequence"] = o.DisplaySequence
	}
	if !IsNil(o.OriginCodes) {
		toSerialize["originCodes"] = o.OriginCodes
	}
	return toSerialize, nil
}

type NullableMembershipOriginGroupType struct {
	value *MembershipOriginGroupType
	isSet bool
}

func (v NullableMembershipOriginGroupType) Get() *MembershipOriginGroupType {
	return v.value
}

func (v *NullableMembershipOriginGroupType) Set(val *MembershipOriginGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipOriginGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipOriginGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipOriginGroupType(val *MembershipOriginGroupType) *NullableMembershipOriginGroupType {
	return &NullableMembershipOriginGroupType{value: val, isSet: true}
}

func (v NullableMembershipOriginGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipOriginGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


