/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeRuleDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeRuleDetailType{}

// MembershipTypeRuleDetailType Membership type Rule details.
type MembershipTypeRuleDetailType struct {
	RulePrimaryDetails *MembershipTypeRulePrimaryDetailsType `json:"rulePrimaryDetails,omitempty"`
	RuleDefinition *MembershipTypeRuleDefinitionType `json:"ruleDefinition,omitempty"`
	RulePointsDefinition *MembershipTypeRulePointsDefinitionType `json:"rulePointsDefinition,omitempty"`
	RuleConditions *MembershipTypeRuleConditionsType `json:"ruleConditions,omitempty"`
}

// NewMembershipTypeRuleDetailType instantiates a new MembershipTypeRuleDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeRuleDetailType() *MembershipTypeRuleDetailType {
	this := MembershipTypeRuleDetailType{}
	return &this
}

// NewMembershipTypeRuleDetailTypeWithDefaults instantiates a new MembershipTypeRuleDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeRuleDetailTypeWithDefaults() *MembershipTypeRuleDetailType {
	this := MembershipTypeRuleDetailType{}
	return &this
}

// GetRulePrimaryDetails returns the RulePrimaryDetails field value if set, zero value otherwise.
func (o *MembershipTypeRuleDetailType) GetRulePrimaryDetails() MembershipTypeRulePrimaryDetailsType {
	if o == nil || IsNil(o.RulePrimaryDetails) {
		var ret MembershipTypeRulePrimaryDetailsType
		return ret
	}
	return *o.RulePrimaryDetails
}

// GetRulePrimaryDetailsOk returns a tuple with the RulePrimaryDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleDetailType) GetRulePrimaryDetailsOk() (*MembershipTypeRulePrimaryDetailsType, bool) {
	if o == nil || IsNil(o.RulePrimaryDetails) {
		return nil, false
	}
	return o.RulePrimaryDetails, true
}

// HasRulePrimaryDetails returns a boolean if a field has been set.
func (o *MembershipTypeRuleDetailType) HasRulePrimaryDetails() bool {
	if o != nil && !IsNil(o.RulePrimaryDetails) {
		return true
	}

	return false
}

// SetRulePrimaryDetails gets a reference to the given MembershipTypeRulePrimaryDetailsType and assigns it to the RulePrimaryDetails field.
func (o *MembershipTypeRuleDetailType) SetRulePrimaryDetails(v MembershipTypeRulePrimaryDetailsType) {
	o.RulePrimaryDetails = &v
}

// GetRuleDefinition returns the RuleDefinition field value if set, zero value otherwise.
func (o *MembershipTypeRuleDetailType) GetRuleDefinition() MembershipTypeRuleDefinitionType {
	if o == nil || IsNil(o.RuleDefinition) {
		var ret MembershipTypeRuleDefinitionType
		return ret
	}
	return *o.RuleDefinition
}

// GetRuleDefinitionOk returns a tuple with the RuleDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleDetailType) GetRuleDefinitionOk() (*MembershipTypeRuleDefinitionType, bool) {
	if o == nil || IsNil(o.RuleDefinition) {
		return nil, false
	}
	return o.RuleDefinition, true
}

// HasRuleDefinition returns a boolean if a field has been set.
func (o *MembershipTypeRuleDetailType) HasRuleDefinition() bool {
	if o != nil && !IsNil(o.RuleDefinition) {
		return true
	}

	return false
}

// SetRuleDefinition gets a reference to the given MembershipTypeRuleDefinitionType and assigns it to the RuleDefinition field.
func (o *MembershipTypeRuleDetailType) SetRuleDefinition(v MembershipTypeRuleDefinitionType) {
	o.RuleDefinition = &v
}

// GetRulePointsDefinition returns the RulePointsDefinition field value if set, zero value otherwise.
func (o *MembershipTypeRuleDetailType) GetRulePointsDefinition() MembershipTypeRulePointsDefinitionType {
	if o == nil || IsNil(o.RulePointsDefinition) {
		var ret MembershipTypeRulePointsDefinitionType
		return ret
	}
	return *o.RulePointsDefinition
}

// GetRulePointsDefinitionOk returns a tuple with the RulePointsDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleDetailType) GetRulePointsDefinitionOk() (*MembershipTypeRulePointsDefinitionType, bool) {
	if o == nil || IsNil(o.RulePointsDefinition) {
		return nil, false
	}
	return o.RulePointsDefinition, true
}

// HasRulePointsDefinition returns a boolean if a field has been set.
func (o *MembershipTypeRuleDetailType) HasRulePointsDefinition() bool {
	if o != nil && !IsNil(o.RulePointsDefinition) {
		return true
	}

	return false
}

// SetRulePointsDefinition gets a reference to the given MembershipTypeRulePointsDefinitionType and assigns it to the RulePointsDefinition field.
func (o *MembershipTypeRuleDetailType) SetRulePointsDefinition(v MembershipTypeRulePointsDefinitionType) {
	o.RulePointsDefinition = &v
}

// GetRuleConditions returns the RuleConditions field value if set, zero value otherwise.
func (o *MembershipTypeRuleDetailType) GetRuleConditions() MembershipTypeRuleConditionsType {
	if o == nil || IsNil(o.RuleConditions) {
		var ret MembershipTypeRuleConditionsType
		return ret
	}
	return *o.RuleConditions
}

// GetRuleConditionsOk returns a tuple with the RuleConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeRuleDetailType) GetRuleConditionsOk() (*MembershipTypeRuleConditionsType, bool) {
	if o == nil || IsNil(o.RuleConditions) {
		return nil, false
	}
	return o.RuleConditions, true
}

// HasRuleConditions returns a boolean if a field has been set.
func (o *MembershipTypeRuleDetailType) HasRuleConditions() bool {
	if o != nil && !IsNil(o.RuleConditions) {
		return true
	}

	return false
}

// SetRuleConditions gets a reference to the given MembershipTypeRuleConditionsType and assigns it to the RuleConditions field.
func (o *MembershipTypeRuleDetailType) SetRuleConditions(v MembershipTypeRuleConditionsType) {
	o.RuleConditions = &v
}

func (o MembershipTypeRuleDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeRuleDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RulePrimaryDetails) {
		toSerialize["rulePrimaryDetails"] = o.RulePrimaryDetails
	}
	if !IsNil(o.RuleDefinition) {
		toSerialize["ruleDefinition"] = o.RuleDefinition
	}
	if !IsNil(o.RulePointsDefinition) {
		toSerialize["rulePointsDefinition"] = o.RulePointsDefinition
	}
	if !IsNil(o.RuleConditions) {
		toSerialize["ruleConditions"] = o.RuleConditions
	}
	return toSerialize, nil
}

type NullableMembershipTypeRuleDetailType struct {
	value *MembershipTypeRuleDetailType
	isSet bool
}

func (v NullableMembershipTypeRuleDetailType) Get() *MembershipTypeRuleDetailType {
	return v.value
}

func (v *NullableMembershipTypeRuleDetailType) Set(val *MembershipTypeRuleDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeRuleDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeRuleDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeRuleDetailType(val *MembershipTypeRuleDetailType) *NullableMembershipTypeRuleDetailType {
	return &NullableMembershipTypeRuleDetailType{value: val, isSet: true}
}

func (v NullableMembershipTypeRuleDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeRuleDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


