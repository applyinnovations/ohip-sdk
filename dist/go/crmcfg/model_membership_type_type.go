/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeType{}

// MembershipTypeType A representation of the information contained by a membership type.
type MembershipTypeType struct {
	// Membership Type code.
	MembershipType *string `json:"membershipType,omitempty"`
	// Membership Class code.
	MembershipClass *string `json:"membershipClass,omitempty"`
	// Description of the membership type.
	Description *string `json:"description,omitempty"`
	// Label used to refer to points for this membership type
	PointsLabel *string `json:"pointsLabel,omitempty"`
	// Indicates if this membership type has a point calculation rule.
	HasPointCalculationRule *bool `json:"hasPointCalculationRule,omitempty"`
	// Defines the priority order of this membership type.
	Ranking *int32 `json:"ranking,omitempty"`
	// Sequence number that controls the position of the membership type when displayed in lists.
	Sequence *int32 `json:"sequence,omitempty"`
	CardDetails *CardNumberDetailsType `json:"cardDetails,omitempty"`
	CardNumberAutoGenerateDetails *AutoGenerateCardNumberType `json:"cardNumberAutoGenerateDetails,omitempty"`
	CardNumberAutoGenerateDetailsForOWS *AutoGenerateCardNumberType `json:"cardNumberAutoGenerateDetailsForOWS,omitempty"`
	// The currency in which user would like to calculate the membership points.
	Currency *string `json:"currency,omitempty"`
	MembershipAction *MembershipActionType `json:"membershipAction,omitempty"`
	// Exchange type to be used in the currency conversion.
	ExchangeType *string `json:"exchangeType,omitempty"`
	// The cost per point.
	PointCost *string `json:"pointCost,omitempty"`
	// Indicates when the membership action to be taken .
	AttachMembershipToReservationRule []AttachMembershipToReservationRuleType `json:"attachMembershipToReservationRule,omitempty"`
	MemberFolioMessage *TranslationTextType2000 `json:"memberFolioMessage,omitempty"`
	NonMemberFolioMessage *TranslationTextType2000 `json:"nonMemberFolioMessage,omitempty"`
	FolioMessageFBAPosting *TranslationTextType2000 `json:"folioMessageFBAPosting,omitempty"`
	AwardGenerationMethod *MembershipAwardGenerationMethodType `json:"awardGenerationMethod,omitempty"`
	AwardPointsDetail *AwardPointsType `json:"awardPointsDetail,omitempty"`
	TierPointsDetails *TierPointsType `json:"tierPointsDetails,omitempty"`
	AdditionalDetails *MembershipTypeAdditionalInfoType `json:"additionalDetails,omitempty"`
	HandlingDetails *MembershipHandlingType `json:"handlingDetails,omitempty"`
	// Collection of membership levels
	MembershipLevels []MembershipLevelType `json:"membershipLevels,omitempty"`
	EnrollmentMatchRule *EnrollmentMatchRuleType `json:"enrollmentMatchRule,omitempty"`
	// Indicates if the membership type is inactive.
	Inactive *bool `json:"inactive,omitempty"`
	// Indicates exclude profiles with an active membership of this type from the automatic purge utility.
	ExcludeProfileFromPurge *bool `json:"excludeProfileFromPurge,omitempty"`
	// Indicates that the award points to each membership holder attached to the shared reservation.
	AllowShares *bool `json:"allowShares,omitempty"`
	// Indicates that the reservation that is eligible for points would have its data processed by the End of Day procedures and transferred to the interface.
	SendCheckoutToInterface *bool `json:"sendCheckoutToInterface,omitempty"`
	// Allows the user to input a value by which the base number of points is multiplied.
	Multiplier *bool `json:"multiplier,omitempty"`
	// Indicates how the award points for this membership type will be managed.
	CentralSetup *bool `json:"centralSetup,omitempty"`
	// This flag indicates whether the membership class attached to the membership type is eligible for loyalty program or not.
	IsLoyaltyProgram *bool `json:"isLoyaltyProgram,omitempty"`
	// Indicates whether enrollment code is required or not.
	EnrollmentCodeRequiredYn *bool `json:"enrollmentCodeRequiredYn,omitempty"`
	// Indicates the membership type is for a Booker.
	BookerProgramYn *bool `json:"bookerProgramYn,omitempty"`
	// Add the booker membership to company profile type.
	CompanyYn *bool `json:"companyYn,omitempty"`
	// Add the booker membership to travel agent profile type.
	TravelAgentYn *bool `json:"travelAgentYn,omitempty"`
	// Add the booker membership to source profile type.
	SourceYn *bool `json:"sourceYn,omitempty"`
	// Add the booker membership to group profile type.
	GroupYn *bool `json:"groupYn,omitempty"`
	// Add the booker membership to contact profile type.
	ContactYn *bool `json:"contactYn,omitempty"`
	// Flag that affects how a Membership Type is added, edited or deleted from a profile.
	ExternallyControlled *bool `json:"externallyControlled,omitempty"`
	// Flag that indicates Profile Address is editable during Enrollment.
	EnrollmentAddressAllowed *bool `json:"enrollmentAddressAllowed,omitempty"`
	// Flag that indicates Profile Communication is editable during Enrollment.
	EnrollmentCommunicationAllowed *bool `json:"enrollmentCommunicationAllowed,omitempty"`
	// Flag that indicates Fee is editable during Enrollment.
	EnrollmentFeeAllowed *bool `json:"enrollmentFeeAllowed,omitempty"`
	// Flag that indicates Birthdate field is editable during Enrollment.
	EnrollmentBirthdateAllowed *bool `json:"enrollmentBirthdateAllowed,omitempty"`
	// Indicates whether to re-issue the membership card or not, when it is lost / stolen.
	ReIssueNewCard *bool `json:"reIssueNewCard,omitempty"`
	// Indicates whether primary membership or not.
	PrimaryMembership *bool `json:"primaryMembership,omitempty"`
	// Print Folio Message on confirmation.
	PrintFolioMsgOnConfirmation *bool `json:"printFolioMsgOnConfirmation,omitempty"`
	// Indicates database for external system for Membership Type.
	ExternalDatabase *string `json:"externalDatabase,omitempty"`
	ManagedBy *ManagedByOptions `json:"managedBy,omitempty"`
}

// NewMembershipTypeType instantiates a new MembershipTypeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeType() *MembershipTypeType {
	this := MembershipTypeType{}
	return &this
}

// NewMembershipTypeTypeWithDefaults instantiates a new MembershipTypeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeTypeWithDefaults() *MembershipTypeType {
	this := MembershipTypeType{}
	return &this
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *MembershipTypeType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetMembershipClass returns the MembershipClass field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMembershipClass() string {
	if o == nil || IsNil(o.MembershipClass) {
		var ret string
		return ret
	}
	return *o.MembershipClass
}

// GetMembershipClassOk returns a tuple with the MembershipClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMembershipClassOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipClass) {
		return nil, false
	}
	return o.MembershipClass, true
}

// HasMembershipClass returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMembershipClass() bool {
	if o != nil && !IsNil(o.MembershipClass) {
		return true
	}

	return false
}

// SetMembershipClass gets a reference to the given string and assigns it to the MembershipClass field.
func (o *MembershipTypeType) SetMembershipClass(v string) {
	o.MembershipClass = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MembershipTypeType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MembershipTypeType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MembershipTypeType) SetDescription(v string) {
	o.Description = &v
}

// GetPointsLabel returns the PointsLabel field value if set, zero value otherwise.
func (o *MembershipTypeType) GetPointsLabel() string {
	if o == nil || IsNil(o.PointsLabel) {
		var ret string
		return ret
	}
	return *o.PointsLabel
}

// GetPointsLabelOk returns a tuple with the PointsLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetPointsLabelOk() (*string, bool) {
	if o == nil || IsNil(o.PointsLabel) {
		return nil, false
	}
	return o.PointsLabel, true
}

// HasPointsLabel returns a boolean if a field has been set.
func (o *MembershipTypeType) HasPointsLabel() bool {
	if o != nil && !IsNil(o.PointsLabel) {
		return true
	}

	return false
}

// SetPointsLabel gets a reference to the given string and assigns it to the PointsLabel field.
func (o *MembershipTypeType) SetPointsLabel(v string) {
	o.PointsLabel = &v
}

// GetHasPointCalculationRule returns the HasPointCalculationRule field value if set, zero value otherwise.
func (o *MembershipTypeType) GetHasPointCalculationRule() bool {
	if o == nil || IsNil(o.HasPointCalculationRule) {
		var ret bool
		return ret
	}
	return *o.HasPointCalculationRule
}

// GetHasPointCalculationRuleOk returns a tuple with the HasPointCalculationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetHasPointCalculationRuleOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPointCalculationRule) {
		return nil, false
	}
	return o.HasPointCalculationRule, true
}

// HasHasPointCalculationRule returns a boolean if a field has been set.
func (o *MembershipTypeType) HasHasPointCalculationRule() bool {
	if o != nil && !IsNil(o.HasPointCalculationRule) {
		return true
	}

	return false
}

// SetHasPointCalculationRule gets a reference to the given bool and assigns it to the HasPointCalculationRule field.
func (o *MembershipTypeType) SetHasPointCalculationRule(v bool) {
	o.HasPointCalculationRule = &v
}

// GetRanking returns the Ranking field value if set, zero value otherwise.
func (o *MembershipTypeType) GetRanking() int32 {
	if o == nil || IsNil(o.Ranking) {
		var ret int32
		return ret
	}
	return *o.Ranking
}

// GetRankingOk returns a tuple with the Ranking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetRankingOk() (*int32, bool) {
	if o == nil || IsNil(o.Ranking) {
		return nil, false
	}
	return o.Ranking, true
}

// HasRanking returns a boolean if a field has been set.
func (o *MembershipTypeType) HasRanking() bool {
	if o != nil && !IsNil(o.Ranking) {
		return true
	}

	return false
}

// SetRanking gets a reference to the given int32 and assigns it to the Ranking field.
func (o *MembershipTypeType) SetRanking(v int32) {
	o.Ranking = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *MembershipTypeType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *MembershipTypeType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *MembershipTypeType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetCardDetails returns the CardDetails field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCardDetails() CardNumberDetailsType {
	if o == nil || IsNil(o.CardDetails) {
		var ret CardNumberDetailsType
		return ret
	}
	return *o.CardDetails
}

// GetCardDetailsOk returns a tuple with the CardDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCardDetailsOk() (*CardNumberDetailsType, bool) {
	if o == nil || IsNil(o.CardDetails) {
		return nil, false
	}
	return o.CardDetails, true
}

// HasCardDetails returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCardDetails() bool {
	if o != nil && !IsNil(o.CardDetails) {
		return true
	}

	return false
}

// SetCardDetails gets a reference to the given CardNumberDetailsType and assigns it to the CardDetails field.
func (o *MembershipTypeType) SetCardDetails(v CardNumberDetailsType) {
	o.CardDetails = &v
}

// GetCardNumberAutoGenerateDetails returns the CardNumberAutoGenerateDetails field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCardNumberAutoGenerateDetails() AutoGenerateCardNumberType {
	if o == nil || IsNil(o.CardNumberAutoGenerateDetails) {
		var ret AutoGenerateCardNumberType
		return ret
	}
	return *o.CardNumberAutoGenerateDetails
}

// GetCardNumberAutoGenerateDetailsOk returns a tuple with the CardNumberAutoGenerateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCardNumberAutoGenerateDetailsOk() (*AutoGenerateCardNumberType, bool) {
	if o == nil || IsNil(o.CardNumberAutoGenerateDetails) {
		return nil, false
	}
	return o.CardNumberAutoGenerateDetails, true
}

// HasCardNumberAutoGenerateDetails returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCardNumberAutoGenerateDetails() bool {
	if o != nil && !IsNil(o.CardNumberAutoGenerateDetails) {
		return true
	}

	return false
}

// SetCardNumberAutoGenerateDetails gets a reference to the given AutoGenerateCardNumberType and assigns it to the CardNumberAutoGenerateDetails field.
func (o *MembershipTypeType) SetCardNumberAutoGenerateDetails(v AutoGenerateCardNumberType) {
	o.CardNumberAutoGenerateDetails = &v
}

// GetCardNumberAutoGenerateDetailsForOWS returns the CardNumberAutoGenerateDetailsForOWS field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCardNumberAutoGenerateDetailsForOWS() AutoGenerateCardNumberType {
	if o == nil || IsNil(o.CardNumberAutoGenerateDetailsForOWS) {
		var ret AutoGenerateCardNumberType
		return ret
	}
	return *o.CardNumberAutoGenerateDetailsForOWS
}

// GetCardNumberAutoGenerateDetailsForOWSOk returns a tuple with the CardNumberAutoGenerateDetailsForOWS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCardNumberAutoGenerateDetailsForOWSOk() (*AutoGenerateCardNumberType, bool) {
	if o == nil || IsNil(o.CardNumberAutoGenerateDetailsForOWS) {
		return nil, false
	}
	return o.CardNumberAutoGenerateDetailsForOWS, true
}

// HasCardNumberAutoGenerateDetailsForOWS returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCardNumberAutoGenerateDetailsForOWS() bool {
	if o != nil && !IsNil(o.CardNumberAutoGenerateDetailsForOWS) {
		return true
	}

	return false
}

// SetCardNumberAutoGenerateDetailsForOWS gets a reference to the given AutoGenerateCardNumberType and assigns it to the CardNumberAutoGenerateDetailsForOWS field.
func (o *MembershipTypeType) SetCardNumberAutoGenerateDetailsForOWS(v AutoGenerateCardNumberType) {
	o.CardNumberAutoGenerateDetailsForOWS = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *MembershipTypeType) SetCurrency(v string) {
	o.Currency = &v
}

// GetMembershipAction returns the MembershipAction field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMembershipAction() MembershipActionType {
	if o == nil || IsNil(o.MembershipAction) {
		var ret MembershipActionType
		return ret
	}
	return *o.MembershipAction
}

// GetMembershipActionOk returns a tuple with the MembershipAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMembershipActionOk() (*MembershipActionType, bool) {
	if o == nil || IsNil(o.MembershipAction) {
		return nil, false
	}
	return o.MembershipAction, true
}

// HasMembershipAction returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMembershipAction() bool {
	if o != nil && !IsNil(o.MembershipAction) {
		return true
	}

	return false
}

// SetMembershipAction gets a reference to the given MembershipActionType and assigns it to the MembershipAction field.
func (o *MembershipTypeType) SetMembershipAction(v MembershipActionType) {
	o.MembershipAction = &v
}

// GetExchangeType returns the ExchangeType field value if set, zero value otherwise.
func (o *MembershipTypeType) GetExchangeType() string {
	if o == nil || IsNil(o.ExchangeType) {
		var ret string
		return ret
	}
	return *o.ExchangeType
}

// GetExchangeTypeOk returns a tuple with the ExchangeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetExchangeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeType) {
		return nil, false
	}
	return o.ExchangeType, true
}

// HasExchangeType returns a boolean if a field has been set.
func (o *MembershipTypeType) HasExchangeType() bool {
	if o != nil && !IsNil(o.ExchangeType) {
		return true
	}

	return false
}

// SetExchangeType gets a reference to the given string and assigns it to the ExchangeType field.
func (o *MembershipTypeType) SetExchangeType(v string) {
	o.ExchangeType = &v
}

// GetPointCost returns the PointCost field value if set, zero value otherwise.
func (o *MembershipTypeType) GetPointCost() string {
	if o == nil || IsNil(o.PointCost) {
		var ret string
		return ret
	}
	return *o.PointCost
}

// GetPointCostOk returns a tuple with the PointCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetPointCostOk() (*string, bool) {
	if o == nil || IsNil(o.PointCost) {
		return nil, false
	}
	return o.PointCost, true
}

// HasPointCost returns a boolean if a field has been set.
func (o *MembershipTypeType) HasPointCost() bool {
	if o != nil && !IsNil(o.PointCost) {
		return true
	}

	return false
}

// SetPointCost gets a reference to the given string and assigns it to the PointCost field.
func (o *MembershipTypeType) SetPointCost(v string) {
	o.PointCost = &v
}

// GetAttachMembershipToReservationRule returns the AttachMembershipToReservationRule field value if set, zero value otherwise.
func (o *MembershipTypeType) GetAttachMembershipToReservationRule() []AttachMembershipToReservationRuleType {
	if o == nil || IsNil(o.AttachMembershipToReservationRule) {
		var ret []AttachMembershipToReservationRuleType
		return ret
	}
	return o.AttachMembershipToReservationRule
}

// GetAttachMembershipToReservationRuleOk returns a tuple with the AttachMembershipToReservationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetAttachMembershipToReservationRuleOk() ([]AttachMembershipToReservationRuleType, bool) {
	if o == nil || IsNil(o.AttachMembershipToReservationRule) {
		return nil, false
	}
	return o.AttachMembershipToReservationRule, true
}

// HasAttachMembershipToReservationRule returns a boolean if a field has been set.
func (o *MembershipTypeType) HasAttachMembershipToReservationRule() bool {
	if o != nil && !IsNil(o.AttachMembershipToReservationRule) {
		return true
	}

	return false
}

// SetAttachMembershipToReservationRule gets a reference to the given []AttachMembershipToReservationRuleType and assigns it to the AttachMembershipToReservationRule field.
func (o *MembershipTypeType) SetAttachMembershipToReservationRule(v []AttachMembershipToReservationRuleType) {
	o.AttachMembershipToReservationRule = v
}

// GetMemberFolioMessage returns the MemberFolioMessage field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMemberFolioMessage() TranslationTextType2000 {
	if o == nil || IsNil(o.MemberFolioMessage) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.MemberFolioMessage
}

// GetMemberFolioMessageOk returns a tuple with the MemberFolioMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMemberFolioMessageOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.MemberFolioMessage) {
		return nil, false
	}
	return o.MemberFolioMessage, true
}

// HasMemberFolioMessage returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMemberFolioMessage() bool {
	if o != nil && !IsNil(o.MemberFolioMessage) {
		return true
	}

	return false
}

// SetMemberFolioMessage gets a reference to the given TranslationTextType2000 and assigns it to the MemberFolioMessage field.
func (o *MembershipTypeType) SetMemberFolioMessage(v TranslationTextType2000) {
	o.MemberFolioMessage = &v
}

// GetNonMemberFolioMessage returns the NonMemberFolioMessage field value if set, zero value otherwise.
func (o *MembershipTypeType) GetNonMemberFolioMessage() TranslationTextType2000 {
	if o == nil || IsNil(o.NonMemberFolioMessage) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.NonMemberFolioMessage
}

// GetNonMemberFolioMessageOk returns a tuple with the NonMemberFolioMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetNonMemberFolioMessageOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.NonMemberFolioMessage) {
		return nil, false
	}
	return o.NonMemberFolioMessage, true
}

// HasNonMemberFolioMessage returns a boolean if a field has been set.
func (o *MembershipTypeType) HasNonMemberFolioMessage() bool {
	if o != nil && !IsNil(o.NonMemberFolioMessage) {
		return true
	}

	return false
}

// SetNonMemberFolioMessage gets a reference to the given TranslationTextType2000 and assigns it to the NonMemberFolioMessage field.
func (o *MembershipTypeType) SetNonMemberFolioMessage(v TranslationTextType2000) {
	o.NonMemberFolioMessage = &v
}

// GetFolioMessageFBAPosting returns the FolioMessageFBAPosting field value if set, zero value otherwise.
func (o *MembershipTypeType) GetFolioMessageFBAPosting() TranslationTextType2000 {
	if o == nil || IsNil(o.FolioMessageFBAPosting) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.FolioMessageFBAPosting
}

// GetFolioMessageFBAPostingOk returns a tuple with the FolioMessageFBAPosting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetFolioMessageFBAPostingOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.FolioMessageFBAPosting) {
		return nil, false
	}
	return o.FolioMessageFBAPosting, true
}

// HasFolioMessageFBAPosting returns a boolean if a field has been set.
func (o *MembershipTypeType) HasFolioMessageFBAPosting() bool {
	if o != nil && !IsNil(o.FolioMessageFBAPosting) {
		return true
	}

	return false
}

// SetFolioMessageFBAPosting gets a reference to the given TranslationTextType2000 and assigns it to the FolioMessageFBAPosting field.
func (o *MembershipTypeType) SetFolioMessageFBAPosting(v TranslationTextType2000) {
	o.FolioMessageFBAPosting = &v
}

// GetAwardGenerationMethod returns the AwardGenerationMethod field value if set, zero value otherwise.
func (o *MembershipTypeType) GetAwardGenerationMethod() MembershipAwardGenerationMethodType {
	if o == nil || IsNil(o.AwardGenerationMethod) {
		var ret MembershipAwardGenerationMethodType
		return ret
	}
	return *o.AwardGenerationMethod
}

// GetAwardGenerationMethodOk returns a tuple with the AwardGenerationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetAwardGenerationMethodOk() (*MembershipAwardGenerationMethodType, bool) {
	if o == nil || IsNil(o.AwardGenerationMethod) {
		return nil, false
	}
	return o.AwardGenerationMethod, true
}

// HasAwardGenerationMethod returns a boolean if a field has been set.
func (o *MembershipTypeType) HasAwardGenerationMethod() bool {
	if o != nil && !IsNil(o.AwardGenerationMethod) {
		return true
	}

	return false
}

// SetAwardGenerationMethod gets a reference to the given MembershipAwardGenerationMethodType and assigns it to the AwardGenerationMethod field.
func (o *MembershipTypeType) SetAwardGenerationMethod(v MembershipAwardGenerationMethodType) {
	o.AwardGenerationMethod = &v
}

// GetAwardPointsDetail returns the AwardPointsDetail field value if set, zero value otherwise.
func (o *MembershipTypeType) GetAwardPointsDetail() AwardPointsType {
	if o == nil || IsNil(o.AwardPointsDetail) {
		var ret AwardPointsType
		return ret
	}
	return *o.AwardPointsDetail
}

// GetAwardPointsDetailOk returns a tuple with the AwardPointsDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetAwardPointsDetailOk() (*AwardPointsType, bool) {
	if o == nil || IsNil(o.AwardPointsDetail) {
		return nil, false
	}
	return o.AwardPointsDetail, true
}

// HasAwardPointsDetail returns a boolean if a field has been set.
func (o *MembershipTypeType) HasAwardPointsDetail() bool {
	if o != nil && !IsNil(o.AwardPointsDetail) {
		return true
	}

	return false
}

// SetAwardPointsDetail gets a reference to the given AwardPointsType and assigns it to the AwardPointsDetail field.
func (o *MembershipTypeType) SetAwardPointsDetail(v AwardPointsType) {
	o.AwardPointsDetail = &v
}

// GetTierPointsDetails returns the TierPointsDetails field value if set, zero value otherwise.
func (o *MembershipTypeType) GetTierPointsDetails() TierPointsType {
	if o == nil || IsNil(o.TierPointsDetails) {
		var ret TierPointsType
		return ret
	}
	return *o.TierPointsDetails
}

// GetTierPointsDetailsOk returns a tuple with the TierPointsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetTierPointsDetailsOk() (*TierPointsType, bool) {
	if o == nil || IsNil(o.TierPointsDetails) {
		return nil, false
	}
	return o.TierPointsDetails, true
}

// HasTierPointsDetails returns a boolean if a field has been set.
func (o *MembershipTypeType) HasTierPointsDetails() bool {
	if o != nil && !IsNil(o.TierPointsDetails) {
		return true
	}

	return false
}

// SetTierPointsDetails gets a reference to the given TierPointsType and assigns it to the TierPointsDetails field.
func (o *MembershipTypeType) SetTierPointsDetails(v TierPointsType) {
	o.TierPointsDetails = &v
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise.
func (o *MembershipTypeType) GetAdditionalDetails() MembershipTypeAdditionalInfoType {
	if o == nil || IsNil(o.AdditionalDetails) {
		var ret MembershipTypeAdditionalInfoType
		return ret
	}
	return *o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetAdditionalDetailsOk() (*MembershipTypeAdditionalInfoType, bool) {
	if o == nil || IsNil(o.AdditionalDetails) {
		return nil, false
	}
	return o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *MembershipTypeType) HasAdditionalDetails() bool {
	if o != nil && !IsNil(o.AdditionalDetails) {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given MembershipTypeAdditionalInfoType and assigns it to the AdditionalDetails field.
func (o *MembershipTypeType) SetAdditionalDetails(v MembershipTypeAdditionalInfoType) {
	o.AdditionalDetails = &v
}

// GetHandlingDetails returns the HandlingDetails field value if set, zero value otherwise.
func (o *MembershipTypeType) GetHandlingDetails() MembershipHandlingType {
	if o == nil || IsNil(o.HandlingDetails) {
		var ret MembershipHandlingType
		return ret
	}
	return *o.HandlingDetails
}

// GetHandlingDetailsOk returns a tuple with the HandlingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetHandlingDetailsOk() (*MembershipHandlingType, bool) {
	if o == nil || IsNil(o.HandlingDetails) {
		return nil, false
	}
	return o.HandlingDetails, true
}

// HasHandlingDetails returns a boolean if a field has been set.
func (o *MembershipTypeType) HasHandlingDetails() bool {
	if o != nil && !IsNil(o.HandlingDetails) {
		return true
	}

	return false
}

// SetHandlingDetails gets a reference to the given MembershipHandlingType and assigns it to the HandlingDetails field.
func (o *MembershipTypeType) SetHandlingDetails(v MembershipHandlingType) {
	o.HandlingDetails = &v
}

// GetMembershipLevels returns the MembershipLevels field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMembershipLevels() []MembershipLevelType {
	if o == nil || IsNil(o.MembershipLevels) {
		var ret []MembershipLevelType
		return ret
	}
	return o.MembershipLevels
}

// GetMembershipLevelsOk returns a tuple with the MembershipLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMembershipLevelsOk() ([]MembershipLevelType, bool) {
	if o == nil || IsNil(o.MembershipLevels) {
		return nil, false
	}
	return o.MembershipLevels, true
}

// HasMembershipLevels returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMembershipLevels() bool {
	if o != nil && !IsNil(o.MembershipLevels) {
		return true
	}

	return false
}

// SetMembershipLevels gets a reference to the given []MembershipLevelType and assigns it to the MembershipLevels field.
func (o *MembershipTypeType) SetMembershipLevels(v []MembershipLevelType) {
	o.MembershipLevels = v
}

// GetEnrollmentMatchRule returns the EnrollmentMatchRule field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentMatchRule() EnrollmentMatchRuleType {
	if o == nil || IsNil(o.EnrollmentMatchRule) {
		var ret EnrollmentMatchRuleType
		return ret
	}
	return *o.EnrollmentMatchRule
}

// GetEnrollmentMatchRuleOk returns a tuple with the EnrollmentMatchRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentMatchRuleOk() (*EnrollmentMatchRuleType, bool) {
	if o == nil || IsNil(o.EnrollmentMatchRule) {
		return nil, false
	}
	return o.EnrollmentMatchRule, true
}

// HasEnrollmentMatchRule returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentMatchRule() bool {
	if o != nil && !IsNil(o.EnrollmentMatchRule) {
		return true
	}

	return false
}

// SetEnrollmentMatchRule gets a reference to the given EnrollmentMatchRuleType and assigns it to the EnrollmentMatchRule field.
func (o *MembershipTypeType) SetEnrollmentMatchRule(v EnrollmentMatchRuleType) {
	o.EnrollmentMatchRule = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *MembershipTypeType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *MembershipTypeType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *MembershipTypeType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetExcludeProfileFromPurge returns the ExcludeProfileFromPurge field value if set, zero value otherwise.
func (o *MembershipTypeType) GetExcludeProfileFromPurge() bool {
	if o == nil || IsNil(o.ExcludeProfileFromPurge) {
		var ret bool
		return ret
	}
	return *o.ExcludeProfileFromPurge
}

// GetExcludeProfileFromPurgeOk returns a tuple with the ExcludeProfileFromPurge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetExcludeProfileFromPurgeOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeProfileFromPurge) {
		return nil, false
	}
	return o.ExcludeProfileFromPurge, true
}

// HasExcludeProfileFromPurge returns a boolean if a field has been set.
func (o *MembershipTypeType) HasExcludeProfileFromPurge() bool {
	if o != nil && !IsNil(o.ExcludeProfileFromPurge) {
		return true
	}

	return false
}

// SetExcludeProfileFromPurge gets a reference to the given bool and assigns it to the ExcludeProfileFromPurge field.
func (o *MembershipTypeType) SetExcludeProfileFromPurge(v bool) {
	o.ExcludeProfileFromPurge = &v
}

// GetAllowShares returns the AllowShares field value if set, zero value otherwise.
func (o *MembershipTypeType) GetAllowShares() bool {
	if o == nil || IsNil(o.AllowShares) {
		var ret bool
		return ret
	}
	return *o.AllowShares
}

// GetAllowSharesOk returns a tuple with the AllowShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetAllowSharesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowShares) {
		return nil, false
	}
	return o.AllowShares, true
}

// HasAllowShares returns a boolean if a field has been set.
func (o *MembershipTypeType) HasAllowShares() bool {
	if o != nil && !IsNil(o.AllowShares) {
		return true
	}

	return false
}

// SetAllowShares gets a reference to the given bool and assigns it to the AllowShares field.
func (o *MembershipTypeType) SetAllowShares(v bool) {
	o.AllowShares = &v
}

// GetSendCheckoutToInterface returns the SendCheckoutToInterface field value if set, zero value otherwise.
func (o *MembershipTypeType) GetSendCheckoutToInterface() bool {
	if o == nil || IsNil(o.SendCheckoutToInterface) {
		var ret bool
		return ret
	}
	return *o.SendCheckoutToInterface
}

// GetSendCheckoutToInterfaceOk returns a tuple with the SendCheckoutToInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetSendCheckoutToInterfaceOk() (*bool, bool) {
	if o == nil || IsNil(o.SendCheckoutToInterface) {
		return nil, false
	}
	return o.SendCheckoutToInterface, true
}

// HasSendCheckoutToInterface returns a boolean if a field has been set.
func (o *MembershipTypeType) HasSendCheckoutToInterface() bool {
	if o != nil && !IsNil(o.SendCheckoutToInterface) {
		return true
	}

	return false
}

// SetSendCheckoutToInterface gets a reference to the given bool and assigns it to the SendCheckoutToInterface field.
func (o *MembershipTypeType) SetSendCheckoutToInterface(v bool) {
	o.SendCheckoutToInterface = &v
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise.
func (o *MembershipTypeType) GetMultiplier() bool {
	if o == nil || IsNil(o.Multiplier) {
		var ret bool
		return ret
	}
	return *o.Multiplier
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetMultiplierOk() (*bool, bool) {
	if o == nil || IsNil(o.Multiplier) {
		return nil, false
	}
	return o.Multiplier, true
}

// HasMultiplier returns a boolean if a field has been set.
func (o *MembershipTypeType) HasMultiplier() bool {
	if o != nil && !IsNil(o.Multiplier) {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given bool and assigns it to the Multiplier field.
func (o *MembershipTypeType) SetMultiplier(v bool) {
	o.Multiplier = &v
}

// GetCentralSetup returns the CentralSetup field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCentralSetup() bool {
	if o == nil || IsNil(o.CentralSetup) {
		var ret bool
		return ret
	}
	return *o.CentralSetup
}

// GetCentralSetupOk returns a tuple with the CentralSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCentralSetupOk() (*bool, bool) {
	if o == nil || IsNil(o.CentralSetup) {
		return nil, false
	}
	return o.CentralSetup, true
}

// HasCentralSetup returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCentralSetup() bool {
	if o != nil && !IsNil(o.CentralSetup) {
		return true
	}

	return false
}

// SetCentralSetup gets a reference to the given bool and assigns it to the CentralSetup field.
func (o *MembershipTypeType) SetCentralSetup(v bool) {
	o.CentralSetup = &v
}

// GetIsLoyaltyProgram returns the IsLoyaltyProgram field value if set, zero value otherwise.
func (o *MembershipTypeType) GetIsLoyaltyProgram() bool {
	if o == nil || IsNil(o.IsLoyaltyProgram) {
		var ret bool
		return ret
	}
	return *o.IsLoyaltyProgram
}

// GetIsLoyaltyProgramOk returns a tuple with the IsLoyaltyProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetIsLoyaltyProgramOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLoyaltyProgram) {
		return nil, false
	}
	return o.IsLoyaltyProgram, true
}

// HasIsLoyaltyProgram returns a boolean if a field has been set.
func (o *MembershipTypeType) HasIsLoyaltyProgram() bool {
	if o != nil && !IsNil(o.IsLoyaltyProgram) {
		return true
	}

	return false
}

// SetIsLoyaltyProgram gets a reference to the given bool and assigns it to the IsLoyaltyProgram field.
func (o *MembershipTypeType) SetIsLoyaltyProgram(v bool) {
	o.IsLoyaltyProgram = &v
}

// GetEnrollmentCodeRequiredYn returns the EnrollmentCodeRequiredYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentCodeRequiredYn() bool {
	if o == nil || IsNil(o.EnrollmentCodeRequiredYn) {
		var ret bool
		return ret
	}
	return *o.EnrollmentCodeRequiredYn
}

// GetEnrollmentCodeRequiredYnOk returns a tuple with the EnrollmentCodeRequiredYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentCodeRequiredYnOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentCodeRequiredYn) {
		return nil, false
	}
	return o.EnrollmentCodeRequiredYn, true
}

// HasEnrollmentCodeRequiredYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentCodeRequiredYn() bool {
	if o != nil && !IsNil(o.EnrollmentCodeRequiredYn) {
		return true
	}

	return false
}

// SetEnrollmentCodeRequiredYn gets a reference to the given bool and assigns it to the EnrollmentCodeRequiredYn field.
func (o *MembershipTypeType) SetEnrollmentCodeRequiredYn(v bool) {
	o.EnrollmentCodeRequiredYn = &v
}

// GetBookerProgramYn returns the BookerProgramYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetBookerProgramYn() bool {
	if o == nil || IsNil(o.BookerProgramYn) {
		var ret bool
		return ret
	}
	return *o.BookerProgramYn
}

// GetBookerProgramYnOk returns a tuple with the BookerProgramYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetBookerProgramYnOk() (*bool, bool) {
	if o == nil || IsNil(o.BookerProgramYn) {
		return nil, false
	}
	return o.BookerProgramYn, true
}

// HasBookerProgramYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasBookerProgramYn() bool {
	if o != nil && !IsNil(o.BookerProgramYn) {
		return true
	}

	return false
}

// SetBookerProgramYn gets a reference to the given bool and assigns it to the BookerProgramYn field.
func (o *MembershipTypeType) SetBookerProgramYn(v bool) {
	o.BookerProgramYn = &v
}

// GetCompanyYn returns the CompanyYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetCompanyYn() bool {
	if o == nil || IsNil(o.CompanyYn) {
		var ret bool
		return ret
	}
	return *o.CompanyYn
}

// GetCompanyYnOk returns a tuple with the CompanyYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetCompanyYnOk() (*bool, bool) {
	if o == nil || IsNil(o.CompanyYn) {
		return nil, false
	}
	return o.CompanyYn, true
}

// HasCompanyYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasCompanyYn() bool {
	if o != nil && !IsNil(o.CompanyYn) {
		return true
	}

	return false
}

// SetCompanyYn gets a reference to the given bool and assigns it to the CompanyYn field.
func (o *MembershipTypeType) SetCompanyYn(v bool) {
	o.CompanyYn = &v
}

// GetTravelAgentYn returns the TravelAgentYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetTravelAgentYn() bool {
	if o == nil || IsNil(o.TravelAgentYn) {
		var ret bool
		return ret
	}
	return *o.TravelAgentYn
}

// GetTravelAgentYnOk returns a tuple with the TravelAgentYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetTravelAgentYnOk() (*bool, bool) {
	if o == nil || IsNil(o.TravelAgentYn) {
		return nil, false
	}
	return o.TravelAgentYn, true
}

// HasTravelAgentYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasTravelAgentYn() bool {
	if o != nil && !IsNil(o.TravelAgentYn) {
		return true
	}

	return false
}

// SetTravelAgentYn gets a reference to the given bool and assigns it to the TravelAgentYn field.
func (o *MembershipTypeType) SetTravelAgentYn(v bool) {
	o.TravelAgentYn = &v
}

// GetSourceYn returns the SourceYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetSourceYn() bool {
	if o == nil || IsNil(o.SourceYn) {
		var ret bool
		return ret
	}
	return *o.SourceYn
}

// GetSourceYnOk returns a tuple with the SourceYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetSourceYnOk() (*bool, bool) {
	if o == nil || IsNil(o.SourceYn) {
		return nil, false
	}
	return o.SourceYn, true
}

// HasSourceYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasSourceYn() bool {
	if o != nil && !IsNil(o.SourceYn) {
		return true
	}

	return false
}

// SetSourceYn gets a reference to the given bool and assigns it to the SourceYn field.
func (o *MembershipTypeType) SetSourceYn(v bool) {
	o.SourceYn = &v
}

// GetGroupYn returns the GroupYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetGroupYn() bool {
	if o == nil || IsNil(o.GroupYn) {
		var ret bool
		return ret
	}
	return *o.GroupYn
}

// GetGroupYnOk returns a tuple with the GroupYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetGroupYnOk() (*bool, bool) {
	if o == nil || IsNil(o.GroupYn) {
		return nil, false
	}
	return o.GroupYn, true
}

// HasGroupYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasGroupYn() bool {
	if o != nil && !IsNil(o.GroupYn) {
		return true
	}

	return false
}

// SetGroupYn gets a reference to the given bool and assigns it to the GroupYn field.
func (o *MembershipTypeType) SetGroupYn(v bool) {
	o.GroupYn = &v
}

// GetContactYn returns the ContactYn field value if set, zero value otherwise.
func (o *MembershipTypeType) GetContactYn() bool {
	if o == nil || IsNil(o.ContactYn) {
		var ret bool
		return ret
	}
	return *o.ContactYn
}

// GetContactYnOk returns a tuple with the ContactYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetContactYnOk() (*bool, bool) {
	if o == nil || IsNil(o.ContactYn) {
		return nil, false
	}
	return o.ContactYn, true
}

// HasContactYn returns a boolean if a field has been set.
func (o *MembershipTypeType) HasContactYn() bool {
	if o != nil && !IsNil(o.ContactYn) {
		return true
	}

	return false
}

// SetContactYn gets a reference to the given bool and assigns it to the ContactYn field.
func (o *MembershipTypeType) SetContactYn(v bool) {
	o.ContactYn = &v
}

// GetExternallyControlled returns the ExternallyControlled field value if set, zero value otherwise.
func (o *MembershipTypeType) GetExternallyControlled() bool {
	if o == nil || IsNil(o.ExternallyControlled) {
		var ret bool
		return ret
	}
	return *o.ExternallyControlled
}

// GetExternallyControlledOk returns a tuple with the ExternallyControlled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetExternallyControlledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternallyControlled) {
		return nil, false
	}
	return o.ExternallyControlled, true
}

// HasExternallyControlled returns a boolean if a field has been set.
func (o *MembershipTypeType) HasExternallyControlled() bool {
	if o != nil && !IsNil(o.ExternallyControlled) {
		return true
	}

	return false
}

// SetExternallyControlled gets a reference to the given bool and assigns it to the ExternallyControlled field.
func (o *MembershipTypeType) SetExternallyControlled(v bool) {
	o.ExternallyControlled = &v
}

// GetEnrollmentAddressAllowed returns the EnrollmentAddressAllowed field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentAddressAllowed() bool {
	if o == nil || IsNil(o.EnrollmentAddressAllowed) {
		var ret bool
		return ret
	}
	return *o.EnrollmentAddressAllowed
}

// GetEnrollmentAddressAllowedOk returns a tuple with the EnrollmentAddressAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentAddressAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentAddressAllowed) {
		return nil, false
	}
	return o.EnrollmentAddressAllowed, true
}

// HasEnrollmentAddressAllowed returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentAddressAllowed() bool {
	if o != nil && !IsNil(o.EnrollmentAddressAllowed) {
		return true
	}

	return false
}

// SetEnrollmentAddressAllowed gets a reference to the given bool and assigns it to the EnrollmentAddressAllowed field.
func (o *MembershipTypeType) SetEnrollmentAddressAllowed(v bool) {
	o.EnrollmentAddressAllowed = &v
}

// GetEnrollmentCommunicationAllowed returns the EnrollmentCommunicationAllowed field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentCommunicationAllowed() bool {
	if o == nil || IsNil(o.EnrollmentCommunicationAllowed) {
		var ret bool
		return ret
	}
	return *o.EnrollmentCommunicationAllowed
}

// GetEnrollmentCommunicationAllowedOk returns a tuple with the EnrollmentCommunicationAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentCommunicationAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentCommunicationAllowed) {
		return nil, false
	}
	return o.EnrollmentCommunicationAllowed, true
}

// HasEnrollmentCommunicationAllowed returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentCommunicationAllowed() bool {
	if o != nil && !IsNil(o.EnrollmentCommunicationAllowed) {
		return true
	}

	return false
}

// SetEnrollmentCommunicationAllowed gets a reference to the given bool and assigns it to the EnrollmentCommunicationAllowed field.
func (o *MembershipTypeType) SetEnrollmentCommunicationAllowed(v bool) {
	o.EnrollmentCommunicationAllowed = &v
}

// GetEnrollmentFeeAllowed returns the EnrollmentFeeAllowed field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentFeeAllowed() bool {
	if o == nil || IsNil(o.EnrollmentFeeAllowed) {
		var ret bool
		return ret
	}
	return *o.EnrollmentFeeAllowed
}

// GetEnrollmentFeeAllowedOk returns a tuple with the EnrollmentFeeAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentFeeAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentFeeAllowed) {
		return nil, false
	}
	return o.EnrollmentFeeAllowed, true
}

// HasEnrollmentFeeAllowed returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentFeeAllowed() bool {
	if o != nil && !IsNil(o.EnrollmentFeeAllowed) {
		return true
	}

	return false
}

// SetEnrollmentFeeAllowed gets a reference to the given bool and assigns it to the EnrollmentFeeAllowed field.
func (o *MembershipTypeType) SetEnrollmentFeeAllowed(v bool) {
	o.EnrollmentFeeAllowed = &v
}

// GetEnrollmentBirthdateAllowed returns the EnrollmentBirthdateAllowed field value if set, zero value otherwise.
func (o *MembershipTypeType) GetEnrollmentBirthdateAllowed() bool {
	if o == nil || IsNil(o.EnrollmentBirthdateAllowed) {
		var ret bool
		return ret
	}
	return *o.EnrollmentBirthdateAllowed
}

// GetEnrollmentBirthdateAllowedOk returns a tuple with the EnrollmentBirthdateAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetEnrollmentBirthdateAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.EnrollmentBirthdateAllowed) {
		return nil, false
	}
	return o.EnrollmentBirthdateAllowed, true
}

// HasEnrollmentBirthdateAllowed returns a boolean if a field has been set.
func (o *MembershipTypeType) HasEnrollmentBirthdateAllowed() bool {
	if o != nil && !IsNil(o.EnrollmentBirthdateAllowed) {
		return true
	}

	return false
}

// SetEnrollmentBirthdateAllowed gets a reference to the given bool and assigns it to the EnrollmentBirthdateAllowed field.
func (o *MembershipTypeType) SetEnrollmentBirthdateAllowed(v bool) {
	o.EnrollmentBirthdateAllowed = &v
}

// GetReIssueNewCard returns the ReIssueNewCard field value if set, zero value otherwise.
func (o *MembershipTypeType) GetReIssueNewCard() bool {
	if o == nil || IsNil(o.ReIssueNewCard) {
		var ret bool
		return ret
	}
	return *o.ReIssueNewCard
}

// GetReIssueNewCardOk returns a tuple with the ReIssueNewCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetReIssueNewCardOk() (*bool, bool) {
	if o == nil || IsNil(o.ReIssueNewCard) {
		return nil, false
	}
	return o.ReIssueNewCard, true
}

// HasReIssueNewCard returns a boolean if a field has been set.
func (o *MembershipTypeType) HasReIssueNewCard() bool {
	if o != nil && !IsNil(o.ReIssueNewCard) {
		return true
	}

	return false
}

// SetReIssueNewCard gets a reference to the given bool and assigns it to the ReIssueNewCard field.
func (o *MembershipTypeType) SetReIssueNewCard(v bool) {
	o.ReIssueNewCard = &v
}

// GetPrimaryMembership returns the PrimaryMembership field value if set, zero value otherwise.
func (o *MembershipTypeType) GetPrimaryMembership() bool {
	if o == nil || IsNil(o.PrimaryMembership) {
		var ret bool
		return ret
	}
	return *o.PrimaryMembership
}

// GetPrimaryMembershipOk returns a tuple with the PrimaryMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetPrimaryMembershipOk() (*bool, bool) {
	if o == nil || IsNil(o.PrimaryMembership) {
		return nil, false
	}
	return o.PrimaryMembership, true
}

// HasPrimaryMembership returns a boolean if a field has been set.
func (o *MembershipTypeType) HasPrimaryMembership() bool {
	if o != nil && !IsNil(o.PrimaryMembership) {
		return true
	}

	return false
}

// SetPrimaryMembership gets a reference to the given bool and assigns it to the PrimaryMembership field.
func (o *MembershipTypeType) SetPrimaryMembership(v bool) {
	o.PrimaryMembership = &v
}

// GetPrintFolioMsgOnConfirmation returns the PrintFolioMsgOnConfirmation field value if set, zero value otherwise.
func (o *MembershipTypeType) GetPrintFolioMsgOnConfirmation() bool {
	if o == nil || IsNil(o.PrintFolioMsgOnConfirmation) {
		var ret bool
		return ret
	}
	return *o.PrintFolioMsgOnConfirmation
}

// GetPrintFolioMsgOnConfirmationOk returns a tuple with the PrintFolioMsgOnConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetPrintFolioMsgOnConfirmationOk() (*bool, bool) {
	if o == nil || IsNil(o.PrintFolioMsgOnConfirmation) {
		return nil, false
	}
	return o.PrintFolioMsgOnConfirmation, true
}

// HasPrintFolioMsgOnConfirmation returns a boolean if a field has been set.
func (o *MembershipTypeType) HasPrintFolioMsgOnConfirmation() bool {
	if o != nil && !IsNil(o.PrintFolioMsgOnConfirmation) {
		return true
	}

	return false
}

// SetPrintFolioMsgOnConfirmation gets a reference to the given bool and assigns it to the PrintFolioMsgOnConfirmation field.
func (o *MembershipTypeType) SetPrintFolioMsgOnConfirmation(v bool) {
	o.PrintFolioMsgOnConfirmation = &v
}

// GetExternalDatabase returns the ExternalDatabase field value if set, zero value otherwise.
func (o *MembershipTypeType) GetExternalDatabase() string {
	if o == nil || IsNil(o.ExternalDatabase) {
		var ret string
		return ret
	}
	return *o.ExternalDatabase
}

// GetExternalDatabaseOk returns a tuple with the ExternalDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetExternalDatabaseOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalDatabase) {
		return nil, false
	}
	return o.ExternalDatabase, true
}

// HasExternalDatabase returns a boolean if a field has been set.
func (o *MembershipTypeType) HasExternalDatabase() bool {
	if o != nil && !IsNil(o.ExternalDatabase) {
		return true
	}

	return false
}

// SetExternalDatabase gets a reference to the given string and assigns it to the ExternalDatabase field.
func (o *MembershipTypeType) SetExternalDatabase(v string) {
	o.ExternalDatabase = &v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *MembershipTypeType) GetManagedBy() ManagedByOptions {
	if o == nil || IsNil(o.ManagedBy) {
		var ret ManagedByOptions
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeType) GetManagedByOk() (*ManagedByOptions, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *MembershipTypeType) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given ManagedByOptions and assigns it to the ManagedBy field.
func (o *MembershipTypeType) SetManagedBy(v ManagedByOptions) {
	o.ManagedBy = &v
}

func (o MembershipTypeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.MembershipClass) {
		toSerialize["membershipClass"] = o.MembershipClass
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PointsLabel) {
		toSerialize["pointsLabel"] = o.PointsLabel
	}
	if !IsNil(o.HasPointCalculationRule) {
		toSerialize["hasPointCalculationRule"] = o.HasPointCalculationRule
	}
	if !IsNil(o.Ranking) {
		toSerialize["ranking"] = o.Ranking
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.CardDetails) {
		toSerialize["cardDetails"] = o.CardDetails
	}
	if !IsNil(o.CardNumberAutoGenerateDetails) {
		toSerialize["cardNumberAutoGenerateDetails"] = o.CardNumberAutoGenerateDetails
	}
	if !IsNil(o.CardNumberAutoGenerateDetailsForOWS) {
		toSerialize["cardNumberAutoGenerateDetailsForOWS"] = o.CardNumberAutoGenerateDetailsForOWS
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.MembershipAction) {
		toSerialize["membershipAction"] = o.MembershipAction
	}
	if !IsNil(o.ExchangeType) {
		toSerialize["exchangeType"] = o.ExchangeType
	}
	if !IsNil(o.PointCost) {
		toSerialize["pointCost"] = o.PointCost
	}
	if !IsNil(o.AttachMembershipToReservationRule) {
		toSerialize["attachMembershipToReservationRule"] = o.AttachMembershipToReservationRule
	}
	if !IsNil(o.MemberFolioMessage) {
		toSerialize["memberFolioMessage"] = o.MemberFolioMessage
	}
	if !IsNil(o.NonMemberFolioMessage) {
		toSerialize["nonMemberFolioMessage"] = o.NonMemberFolioMessage
	}
	if !IsNil(o.FolioMessageFBAPosting) {
		toSerialize["folioMessageFBAPosting"] = o.FolioMessageFBAPosting
	}
	if !IsNil(o.AwardGenerationMethod) {
		toSerialize["awardGenerationMethod"] = o.AwardGenerationMethod
	}
	if !IsNil(o.AwardPointsDetail) {
		toSerialize["awardPointsDetail"] = o.AwardPointsDetail
	}
	if !IsNil(o.TierPointsDetails) {
		toSerialize["tierPointsDetails"] = o.TierPointsDetails
	}
	if !IsNil(o.AdditionalDetails) {
		toSerialize["additionalDetails"] = o.AdditionalDetails
	}
	if !IsNil(o.HandlingDetails) {
		toSerialize["handlingDetails"] = o.HandlingDetails
	}
	if !IsNil(o.MembershipLevels) {
		toSerialize["membershipLevels"] = o.MembershipLevels
	}
	if !IsNil(o.EnrollmentMatchRule) {
		toSerialize["enrollmentMatchRule"] = o.EnrollmentMatchRule
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.ExcludeProfileFromPurge) {
		toSerialize["excludeProfileFromPurge"] = o.ExcludeProfileFromPurge
	}
	if !IsNil(o.AllowShares) {
		toSerialize["allowShares"] = o.AllowShares
	}
	if !IsNil(o.SendCheckoutToInterface) {
		toSerialize["sendCheckoutToInterface"] = o.SendCheckoutToInterface
	}
	if !IsNil(o.Multiplier) {
		toSerialize["multiplier"] = o.Multiplier
	}
	if !IsNil(o.CentralSetup) {
		toSerialize["centralSetup"] = o.CentralSetup
	}
	if !IsNil(o.IsLoyaltyProgram) {
		toSerialize["isLoyaltyProgram"] = o.IsLoyaltyProgram
	}
	if !IsNil(o.EnrollmentCodeRequiredYn) {
		toSerialize["enrollmentCodeRequiredYn"] = o.EnrollmentCodeRequiredYn
	}
	if !IsNil(o.BookerProgramYn) {
		toSerialize["bookerProgramYn"] = o.BookerProgramYn
	}
	if !IsNil(o.CompanyYn) {
		toSerialize["companyYn"] = o.CompanyYn
	}
	if !IsNil(o.TravelAgentYn) {
		toSerialize["travelAgentYn"] = o.TravelAgentYn
	}
	if !IsNil(o.SourceYn) {
		toSerialize["sourceYn"] = o.SourceYn
	}
	if !IsNil(o.GroupYn) {
		toSerialize["groupYn"] = o.GroupYn
	}
	if !IsNil(o.ContactYn) {
		toSerialize["contactYn"] = o.ContactYn
	}
	if !IsNil(o.ExternallyControlled) {
		toSerialize["externallyControlled"] = o.ExternallyControlled
	}
	if !IsNil(o.EnrollmentAddressAllowed) {
		toSerialize["enrollmentAddressAllowed"] = o.EnrollmentAddressAllowed
	}
	if !IsNil(o.EnrollmentCommunicationAllowed) {
		toSerialize["enrollmentCommunicationAllowed"] = o.EnrollmentCommunicationAllowed
	}
	if !IsNil(o.EnrollmentFeeAllowed) {
		toSerialize["enrollmentFeeAllowed"] = o.EnrollmentFeeAllowed
	}
	if !IsNil(o.EnrollmentBirthdateAllowed) {
		toSerialize["enrollmentBirthdateAllowed"] = o.EnrollmentBirthdateAllowed
	}
	if !IsNil(o.ReIssueNewCard) {
		toSerialize["reIssueNewCard"] = o.ReIssueNewCard
	}
	if !IsNil(o.PrimaryMembership) {
		toSerialize["primaryMembership"] = o.PrimaryMembership
	}
	if !IsNil(o.PrintFolioMsgOnConfirmation) {
		toSerialize["printFolioMsgOnConfirmation"] = o.PrintFolioMsgOnConfirmation
	}
	if !IsNil(o.ExternalDatabase) {
		toSerialize["externalDatabase"] = o.ExternalDatabase
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managedBy"] = o.ManagedBy
	}
	return toSerialize, nil
}

type NullableMembershipTypeType struct {
	value *MembershipTypeType
	isSet bool
}

func (v NullableMembershipTypeType) Get() *MembershipTypeType {
	return v.value
}

func (v *NullableMembershipTypeType) Set(val *MembershipTypeType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeType(val *MembershipTypeType) *NullableMembershipTypeType {
	return &NullableMembershipTypeType{value: val, isSet: true}
}

func (v NullableMembershipTypeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


