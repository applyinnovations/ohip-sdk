/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipEnrollmentGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipEnrollmentGroupType{}

// MembershipEnrollmentGroupType Base type provides information about Membership Market/Property Groups Configuration.
type MembershipEnrollmentGroupType struct {
	// Code is used to identify a Membership Market/Resort Group.
	Code *string `json:"code,omitempty"`
	// Description of the Membership Market/Propety Group.
	Description *string `json:"description,omitempty"`
	// Membership Market/Property Groups display sequence Number
	DisplaySequence *float32 `json:"displaySequence,omitempty"`
	// Membership enrollment code code and description.
	EnrollmentCodes []CodeDescriptionType `json:"enrollmentCodes,omitempty"`
	ManagedBy *ManagedByOptions `json:"managedBy,omitempty"`
}

// NewMembershipEnrollmentGroupType instantiates a new MembershipEnrollmentGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipEnrollmentGroupType() *MembershipEnrollmentGroupType {
	this := MembershipEnrollmentGroupType{}
	return &this
}

// NewMembershipEnrollmentGroupTypeWithDefaults instantiates a new MembershipEnrollmentGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipEnrollmentGroupTypeWithDefaults() *MembershipEnrollmentGroupType {
	this := MembershipEnrollmentGroupType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *MembershipEnrollmentGroupType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipEnrollmentGroupType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *MembershipEnrollmentGroupType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *MembershipEnrollmentGroupType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MembershipEnrollmentGroupType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipEnrollmentGroupType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MembershipEnrollmentGroupType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MembershipEnrollmentGroupType) SetDescription(v string) {
	o.Description = &v
}

// GetDisplaySequence returns the DisplaySequence field value if set, zero value otherwise.
func (o *MembershipEnrollmentGroupType) GetDisplaySequence() float32 {
	if o == nil || IsNil(o.DisplaySequence) {
		var ret float32
		return ret
	}
	return *o.DisplaySequence
}

// GetDisplaySequenceOk returns a tuple with the DisplaySequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipEnrollmentGroupType) GetDisplaySequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.DisplaySequence) {
		return nil, false
	}
	return o.DisplaySequence, true
}

// HasDisplaySequence returns a boolean if a field has been set.
func (o *MembershipEnrollmentGroupType) HasDisplaySequence() bool {
	if o != nil && !IsNil(o.DisplaySequence) {
		return true
	}

	return false
}

// SetDisplaySequence gets a reference to the given float32 and assigns it to the DisplaySequence field.
func (o *MembershipEnrollmentGroupType) SetDisplaySequence(v float32) {
	o.DisplaySequence = &v
}

// GetEnrollmentCodes returns the EnrollmentCodes field value if set, zero value otherwise.
func (o *MembershipEnrollmentGroupType) GetEnrollmentCodes() []CodeDescriptionType {
	if o == nil || IsNil(o.EnrollmentCodes) {
		var ret []CodeDescriptionType
		return ret
	}
	return o.EnrollmentCodes
}

// GetEnrollmentCodesOk returns a tuple with the EnrollmentCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipEnrollmentGroupType) GetEnrollmentCodesOk() ([]CodeDescriptionType, bool) {
	if o == nil || IsNil(o.EnrollmentCodes) {
		return nil, false
	}
	return o.EnrollmentCodes, true
}

// HasEnrollmentCodes returns a boolean if a field has been set.
func (o *MembershipEnrollmentGroupType) HasEnrollmentCodes() bool {
	if o != nil && !IsNil(o.EnrollmentCodes) {
		return true
	}

	return false
}

// SetEnrollmentCodes gets a reference to the given []CodeDescriptionType and assigns it to the EnrollmentCodes field.
func (o *MembershipEnrollmentGroupType) SetEnrollmentCodes(v []CodeDescriptionType) {
	o.EnrollmentCodes = v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *MembershipEnrollmentGroupType) GetManagedBy() ManagedByOptions {
	if o == nil || IsNil(o.ManagedBy) {
		var ret ManagedByOptions
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipEnrollmentGroupType) GetManagedByOk() (*ManagedByOptions, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *MembershipEnrollmentGroupType) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given ManagedByOptions and assigns it to the ManagedBy field.
func (o *MembershipEnrollmentGroupType) SetManagedBy(v ManagedByOptions) {
	o.ManagedBy = &v
}

func (o MembershipEnrollmentGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipEnrollmentGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplaySequence) {
		toSerialize["displaySequence"] = o.DisplaySequence
	}
	if !IsNil(o.EnrollmentCodes) {
		toSerialize["enrollmentCodes"] = o.EnrollmentCodes
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managedBy"] = o.ManagedBy
	}
	return toSerialize, nil
}

type NullableMembershipEnrollmentGroupType struct {
	value *MembershipEnrollmentGroupType
	isSet bool
}

func (v NullableMembershipEnrollmentGroupType) Get() *MembershipEnrollmentGroupType {
	return v.value
}

func (v *NullableMembershipEnrollmentGroupType) Set(val *MembershipEnrollmentGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipEnrollmentGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipEnrollmentGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipEnrollmentGroupType(val *MembershipEnrollmentGroupType) *NullableMembershipEnrollmentGroupType {
	return &NullableMembershipEnrollmentGroupType{value: val, isSet: true}
}

func (v NullableMembershipEnrollmentGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipEnrollmentGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


