/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipCardValidationRuleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipCardValidationRuleType{}

// MembershipCardValidationRuleType Payment method card validation rules.
type MembershipCardValidationRuleType struct {
	// Valid lengths of card number.
	Length *string `json:"length,omitempty"`
	// Valid card number prefix.
	Prefix *string `json:"prefix,omitempty"`
	// Card number start and end range.
	Ranges []CardRangeType `json:"ranges,omitempty"`
	// Formula used for card validation. Only valid in case of user defined validation.
	Formula *string `json:"formula,omitempty"`
	Rule *MembershipCardValidationRuleTypeType `json:"rule,omitempty"`
}

// NewMembershipCardValidationRuleType instantiates a new MembershipCardValidationRuleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipCardValidationRuleType() *MembershipCardValidationRuleType {
	this := MembershipCardValidationRuleType{}
	return &this
}

// NewMembershipCardValidationRuleTypeWithDefaults instantiates a new MembershipCardValidationRuleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipCardValidationRuleTypeWithDefaults() *MembershipCardValidationRuleType {
	this := MembershipCardValidationRuleType{}
	return &this
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *MembershipCardValidationRuleType) GetLength() string {
	if o == nil || IsNil(o.Length) {
		var ret string
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipCardValidationRuleType) GetLengthOk() (*string, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *MembershipCardValidationRuleType) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given string and assigns it to the Length field.
func (o *MembershipCardValidationRuleType) SetLength(v string) {
	o.Length = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *MembershipCardValidationRuleType) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipCardValidationRuleType) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *MembershipCardValidationRuleType) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *MembershipCardValidationRuleType) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *MembershipCardValidationRuleType) GetRanges() []CardRangeType {
	if o == nil || IsNil(o.Ranges) {
		var ret []CardRangeType
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipCardValidationRuleType) GetRangesOk() ([]CardRangeType, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *MembershipCardValidationRuleType) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []CardRangeType and assigns it to the Ranges field.
func (o *MembershipCardValidationRuleType) SetRanges(v []CardRangeType) {
	o.Ranges = v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *MembershipCardValidationRuleType) GetFormula() string {
	if o == nil || IsNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipCardValidationRuleType) GetFormulaOk() (*string, bool) {
	if o == nil || IsNil(o.Formula) {
		return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *MembershipCardValidationRuleType) HasFormula() bool {
	if o != nil && !IsNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *MembershipCardValidationRuleType) SetFormula(v string) {
	o.Formula = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *MembershipCardValidationRuleType) GetRule() MembershipCardValidationRuleTypeType {
	if o == nil || IsNil(o.Rule) {
		var ret MembershipCardValidationRuleTypeType
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipCardValidationRuleType) GetRuleOk() (*MembershipCardValidationRuleTypeType, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *MembershipCardValidationRuleType) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given MembershipCardValidationRuleTypeType and assigns it to the Rule field.
func (o *MembershipCardValidationRuleType) SetRule(v MembershipCardValidationRuleTypeType) {
	o.Rule = &v
}

func (o MembershipCardValidationRuleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipCardValidationRuleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	if !IsNil(o.Rule) {
		toSerialize["rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullableMembershipCardValidationRuleType struct {
	value *MembershipCardValidationRuleType
	isSet bool
}

func (v NullableMembershipCardValidationRuleType) Get() *MembershipCardValidationRuleType {
	return v.value
}

func (v *NullableMembershipCardValidationRuleType) Set(val *MembershipCardValidationRuleType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipCardValidationRuleType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipCardValidationRuleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipCardValidationRuleType(val *MembershipCardValidationRuleType) *NullableMembershipCardValidationRuleType {
	return &NullableMembershipCardValidationRuleType{value: val, isSet: true}
}

func (v NullableMembershipCardValidationRuleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipCardValidationRuleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


