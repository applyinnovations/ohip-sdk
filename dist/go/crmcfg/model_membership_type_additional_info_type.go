/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeAdditionalInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeAdditionalInfoType{}

// MembershipTypeAdditionalInfoType Membership Type miscellanous settings.
type MembershipTypeAdditionalInfoType struct {
	// When enrolling new members, this is the default letter to be sent.
	EnrollmentLetter *string `json:"enrollmentLetter,omitempty"`
	// Default membership statement to be sent ad hoc.
	AdhocStatement *string `json:"adhocStatement,omitempty"`
	// Batch process statement.
	BatchStatement *string `json:"batchStatement,omitempty"`
	// Automatically open to allow a web user account to be created.
	AutoWebEnrollment *bool `json:"autoWebEnrollment,omitempty"`
	// Automatically update web login.
	AutoUpdateWebLogin *bool `json:"autoUpdateWebLogin,omitempty"`
}

// NewMembershipTypeAdditionalInfoType instantiates a new MembershipTypeAdditionalInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeAdditionalInfoType() *MembershipTypeAdditionalInfoType {
	this := MembershipTypeAdditionalInfoType{}
	return &this
}

// NewMembershipTypeAdditionalInfoTypeWithDefaults instantiates a new MembershipTypeAdditionalInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeAdditionalInfoTypeWithDefaults() *MembershipTypeAdditionalInfoType {
	this := MembershipTypeAdditionalInfoType{}
	return &this
}

// GetEnrollmentLetter returns the EnrollmentLetter field value if set, zero value otherwise.
func (o *MembershipTypeAdditionalInfoType) GetEnrollmentLetter() string {
	if o == nil || IsNil(o.EnrollmentLetter) {
		var ret string
		return ret
	}
	return *o.EnrollmentLetter
}

// GetEnrollmentLetterOk returns a tuple with the EnrollmentLetter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeAdditionalInfoType) GetEnrollmentLetterOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentLetter) {
		return nil, false
	}
	return o.EnrollmentLetter, true
}

// HasEnrollmentLetter returns a boolean if a field has been set.
func (o *MembershipTypeAdditionalInfoType) HasEnrollmentLetter() bool {
	if o != nil && !IsNil(o.EnrollmentLetter) {
		return true
	}

	return false
}

// SetEnrollmentLetter gets a reference to the given string and assigns it to the EnrollmentLetter field.
func (o *MembershipTypeAdditionalInfoType) SetEnrollmentLetter(v string) {
	o.EnrollmentLetter = &v
}

// GetAdhocStatement returns the AdhocStatement field value if set, zero value otherwise.
func (o *MembershipTypeAdditionalInfoType) GetAdhocStatement() string {
	if o == nil || IsNil(o.AdhocStatement) {
		var ret string
		return ret
	}
	return *o.AdhocStatement
}

// GetAdhocStatementOk returns a tuple with the AdhocStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeAdditionalInfoType) GetAdhocStatementOk() (*string, bool) {
	if o == nil || IsNil(o.AdhocStatement) {
		return nil, false
	}
	return o.AdhocStatement, true
}

// HasAdhocStatement returns a boolean if a field has been set.
func (o *MembershipTypeAdditionalInfoType) HasAdhocStatement() bool {
	if o != nil && !IsNil(o.AdhocStatement) {
		return true
	}

	return false
}

// SetAdhocStatement gets a reference to the given string and assigns it to the AdhocStatement field.
func (o *MembershipTypeAdditionalInfoType) SetAdhocStatement(v string) {
	o.AdhocStatement = &v
}

// GetBatchStatement returns the BatchStatement field value if set, zero value otherwise.
func (o *MembershipTypeAdditionalInfoType) GetBatchStatement() string {
	if o == nil || IsNil(o.BatchStatement) {
		var ret string
		return ret
	}
	return *o.BatchStatement
}

// GetBatchStatementOk returns a tuple with the BatchStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeAdditionalInfoType) GetBatchStatementOk() (*string, bool) {
	if o == nil || IsNil(o.BatchStatement) {
		return nil, false
	}
	return o.BatchStatement, true
}

// HasBatchStatement returns a boolean if a field has been set.
func (o *MembershipTypeAdditionalInfoType) HasBatchStatement() bool {
	if o != nil && !IsNil(o.BatchStatement) {
		return true
	}

	return false
}

// SetBatchStatement gets a reference to the given string and assigns it to the BatchStatement field.
func (o *MembershipTypeAdditionalInfoType) SetBatchStatement(v string) {
	o.BatchStatement = &v
}

// GetAutoWebEnrollment returns the AutoWebEnrollment field value if set, zero value otherwise.
func (o *MembershipTypeAdditionalInfoType) GetAutoWebEnrollment() bool {
	if o == nil || IsNil(o.AutoWebEnrollment) {
		var ret bool
		return ret
	}
	return *o.AutoWebEnrollment
}

// GetAutoWebEnrollmentOk returns a tuple with the AutoWebEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeAdditionalInfoType) GetAutoWebEnrollmentOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoWebEnrollment) {
		return nil, false
	}
	return o.AutoWebEnrollment, true
}

// HasAutoWebEnrollment returns a boolean if a field has been set.
func (o *MembershipTypeAdditionalInfoType) HasAutoWebEnrollment() bool {
	if o != nil && !IsNil(o.AutoWebEnrollment) {
		return true
	}

	return false
}

// SetAutoWebEnrollment gets a reference to the given bool and assigns it to the AutoWebEnrollment field.
func (o *MembershipTypeAdditionalInfoType) SetAutoWebEnrollment(v bool) {
	o.AutoWebEnrollment = &v
}

// GetAutoUpdateWebLogin returns the AutoUpdateWebLogin field value if set, zero value otherwise.
func (o *MembershipTypeAdditionalInfoType) GetAutoUpdateWebLogin() bool {
	if o == nil || IsNil(o.AutoUpdateWebLogin) {
		var ret bool
		return ret
	}
	return *o.AutoUpdateWebLogin
}

// GetAutoUpdateWebLoginOk returns a tuple with the AutoUpdateWebLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeAdditionalInfoType) GetAutoUpdateWebLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoUpdateWebLogin) {
		return nil, false
	}
	return o.AutoUpdateWebLogin, true
}

// HasAutoUpdateWebLogin returns a boolean if a field has been set.
func (o *MembershipTypeAdditionalInfoType) HasAutoUpdateWebLogin() bool {
	if o != nil && !IsNil(o.AutoUpdateWebLogin) {
		return true
	}

	return false
}

// SetAutoUpdateWebLogin gets a reference to the given bool and assigns it to the AutoUpdateWebLogin field.
func (o *MembershipTypeAdditionalInfoType) SetAutoUpdateWebLogin(v bool) {
	o.AutoUpdateWebLogin = &v
}

func (o MembershipTypeAdditionalInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeAdditionalInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnrollmentLetter) {
		toSerialize["enrollmentLetter"] = o.EnrollmentLetter
	}
	if !IsNil(o.AdhocStatement) {
		toSerialize["adhocStatement"] = o.AdhocStatement
	}
	if !IsNil(o.BatchStatement) {
		toSerialize["batchStatement"] = o.BatchStatement
	}
	if !IsNil(o.AutoWebEnrollment) {
		toSerialize["autoWebEnrollment"] = o.AutoWebEnrollment
	}
	if !IsNil(o.AutoUpdateWebLogin) {
		toSerialize["autoUpdateWebLogin"] = o.AutoUpdateWebLogin
	}
	return toSerialize, nil
}

type NullableMembershipTypeAdditionalInfoType struct {
	value *MembershipTypeAdditionalInfoType
	isSet bool
}

func (v NullableMembershipTypeAdditionalInfoType) Get() *MembershipTypeAdditionalInfoType {
	return v.value
}

func (v *NullableMembershipTypeAdditionalInfoType) Set(val *MembershipTypeAdditionalInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeAdditionalInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeAdditionalInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeAdditionalInfoType(val *MembershipTypeAdditionalInfoType) *NullableMembershipTypeAdditionalInfoType {
	return &NullableMembershipTypeAdditionalInfoType{value: val, isSet: true}
}

func (v NullableMembershipTypeAdditionalInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeAdditionalInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


