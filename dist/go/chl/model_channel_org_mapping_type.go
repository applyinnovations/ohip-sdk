/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelOrgMappingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelOrgMappingType{}

// ChannelOrgMappingType Respresents information of the Channel Code, OrgCode and Default Login Resort used for mapping.
type ChannelOrgMappingType struct {
	// Channel code for which OrgCode mapping needs to be done.
	ChannelCode *string `json:"channelCode,omitempty"`
	// Default Login Resort value used while mapping Channel Code and OrgCode.
	DefaultLoginResort *string `json:"defaultLoginResort,omitempty"`
	// OrgCode for which Channel code mapping needs to be done.
	OrgCode *string `json:"orgCode,omitempty"`
}

// NewChannelOrgMappingType instantiates a new ChannelOrgMappingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelOrgMappingType() *ChannelOrgMappingType {
	this := ChannelOrgMappingType{}
	return &this
}

// NewChannelOrgMappingTypeWithDefaults instantiates a new ChannelOrgMappingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelOrgMappingTypeWithDefaults() *ChannelOrgMappingType {
	this := ChannelOrgMappingType{}
	return &this
}

// GetChannelCode returns the ChannelCode field value if set, zero value otherwise.
func (o *ChannelOrgMappingType) GetChannelCode() string {
	if o == nil || IsNil(o.ChannelCode) {
		var ret string
		return ret
	}
	return *o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrgMappingType) GetChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelCode) {
		return nil, false
	}
	return o.ChannelCode, true
}

// HasChannelCode returns a boolean if a field has been set.
func (o *ChannelOrgMappingType) HasChannelCode() bool {
	if o != nil && !IsNil(o.ChannelCode) {
		return true
	}

	return false
}

// SetChannelCode gets a reference to the given string and assigns it to the ChannelCode field.
func (o *ChannelOrgMappingType) SetChannelCode(v string) {
	o.ChannelCode = &v
}

// GetDefaultLoginResort returns the DefaultLoginResort field value if set, zero value otherwise.
func (o *ChannelOrgMappingType) GetDefaultLoginResort() string {
	if o == nil || IsNil(o.DefaultLoginResort) {
		var ret string
		return ret
	}
	return *o.DefaultLoginResort
}

// GetDefaultLoginResortOk returns a tuple with the DefaultLoginResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrgMappingType) GetDefaultLoginResortOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultLoginResort) {
		return nil, false
	}
	return o.DefaultLoginResort, true
}

// HasDefaultLoginResort returns a boolean if a field has been set.
func (o *ChannelOrgMappingType) HasDefaultLoginResort() bool {
	if o != nil && !IsNil(o.DefaultLoginResort) {
		return true
	}

	return false
}

// SetDefaultLoginResort gets a reference to the given string and assigns it to the DefaultLoginResort field.
func (o *ChannelOrgMappingType) SetDefaultLoginResort(v string) {
	o.DefaultLoginResort = &v
}

// GetOrgCode returns the OrgCode field value if set, zero value otherwise.
func (o *ChannelOrgMappingType) GetOrgCode() string {
	if o == nil || IsNil(o.OrgCode) {
		var ret string
		return ret
	}
	return *o.OrgCode
}

// GetOrgCodeOk returns a tuple with the OrgCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelOrgMappingType) GetOrgCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OrgCode) {
		return nil, false
	}
	return o.OrgCode, true
}

// HasOrgCode returns a boolean if a field has been set.
func (o *ChannelOrgMappingType) HasOrgCode() bool {
	if o != nil && !IsNil(o.OrgCode) {
		return true
	}

	return false
}

// SetOrgCode gets a reference to the given string and assigns it to the OrgCode field.
func (o *ChannelOrgMappingType) SetOrgCode(v string) {
	o.OrgCode = &v
}

func (o ChannelOrgMappingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelOrgMappingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelCode) {
		toSerialize["channelCode"] = o.ChannelCode
	}
	if !IsNil(o.DefaultLoginResort) {
		toSerialize["defaultLoginResort"] = o.DefaultLoginResort
	}
	if !IsNil(o.OrgCode) {
		toSerialize["orgCode"] = o.OrgCode
	}
	return toSerialize, nil
}

type NullableChannelOrgMappingType struct {
	value *ChannelOrgMappingType
	isSet bool
}

func (v NullableChannelOrgMappingType) Get() *ChannelOrgMappingType {
	return v.value
}

func (v *NullableChannelOrgMappingType) Set(val *ChannelOrgMappingType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelOrgMappingType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelOrgMappingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelOrgMappingType(val *ChannelOrgMappingType) *NullableChannelOrgMappingType {
	return &NullableChannelOrgMappingType{value: val, isSet: true}
}

func (v NullableChannelOrgMappingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelOrgMappingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


