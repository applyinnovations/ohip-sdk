/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRoomMappingDescriptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRoomMappingDescriptionType{}

// ChannelRoomMappingDescriptionType This type holds descriptions of hotel-channel room type mapping. Description may be from Hotel Room Type description, Global description or custom user defined description. Global description only supports enhanced description.
type ChannelRoomMappingDescriptionType struct {
	CustomDescription *ChannelRoomMappingDescriptionDetailsType `json:"customDescription,omitempty"`
	GlobalDescription *ChannelMappingEnhancedDescriptionType `json:"globalDescription,omitempty"`
	RoomTypeDescription *ChannelRoomMappingDescriptionDetailsType `json:"roomTypeDescription,omitempty"`
}

// NewChannelRoomMappingDescriptionType instantiates a new ChannelRoomMappingDescriptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRoomMappingDescriptionType() *ChannelRoomMappingDescriptionType {
	this := ChannelRoomMappingDescriptionType{}
	return &this
}

// NewChannelRoomMappingDescriptionTypeWithDefaults instantiates a new ChannelRoomMappingDescriptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRoomMappingDescriptionTypeWithDefaults() *ChannelRoomMappingDescriptionType {
	this := ChannelRoomMappingDescriptionType{}
	return &this
}

// GetCustomDescription returns the CustomDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionType) GetCustomDescription() ChannelRoomMappingDescriptionDetailsType {
	if o == nil || IsNil(o.CustomDescription) {
		var ret ChannelRoomMappingDescriptionDetailsType
		return ret
	}
	return *o.CustomDescription
}

// GetCustomDescriptionOk returns a tuple with the CustomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionType) GetCustomDescriptionOk() (*ChannelRoomMappingDescriptionDetailsType, bool) {
	if o == nil || IsNil(o.CustomDescription) {
		return nil, false
	}
	return o.CustomDescription, true
}

// HasCustomDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionType) HasCustomDescription() bool {
	if o != nil && !IsNil(o.CustomDescription) {
		return true
	}

	return false
}

// SetCustomDescription gets a reference to the given ChannelRoomMappingDescriptionDetailsType and assigns it to the CustomDescription field.
func (o *ChannelRoomMappingDescriptionType) SetCustomDescription(v ChannelRoomMappingDescriptionDetailsType) {
	o.CustomDescription = &v
}

// GetGlobalDescription returns the GlobalDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionType) GetGlobalDescription() ChannelMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.GlobalDescription) {
		var ret ChannelMappingEnhancedDescriptionType
		return ret
	}
	return *o.GlobalDescription
}

// GetGlobalDescriptionOk returns a tuple with the GlobalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionType) GetGlobalDescriptionOk() (*ChannelMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.GlobalDescription) {
		return nil, false
	}
	return o.GlobalDescription, true
}

// HasGlobalDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionType) HasGlobalDescription() bool {
	if o != nil && !IsNil(o.GlobalDescription) {
		return true
	}

	return false
}

// SetGlobalDescription gets a reference to the given ChannelMappingEnhancedDescriptionType and assigns it to the GlobalDescription field.
func (o *ChannelRoomMappingDescriptionType) SetGlobalDescription(v ChannelMappingEnhancedDescriptionType) {
	o.GlobalDescription = &v
}

// GetRoomTypeDescription returns the RoomTypeDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionType) GetRoomTypeDescription() ChannelRoomMappingDescriptionDetailsType {
	if o == nil || IsNil(o.RoomTypeDescription) {
		var ret ChannelRoomMappingDescriptionDetailsType
		return ret
	}
	return *o.RoomTypeDescription
}

// GetRoomTypeDescriptionOk returns a tuple with the RoomTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionType) GetRoomTypeDescriptionOk() (*ChannelRoomMappingDescriptionDetailsType, bool) {
	if o == nil || IsNil(o.RoomTypeDescription) {
		return nil, false
	}
	return o.RoomTypeDescription, true
}

// HasRoomTypeDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionType) HasRoomTypeDescription() bool {
	if o != nil && !IsNil(o.RoomTypeDescription) {
		return true
	}

	return false
}

// SetRoomTypeDescription gets a reference to the given ChannelRoomMappingDescriptionDetailsType and assigns it to the RoomTypeDescription field.
func (o *ChannelRoomMappingDescriptionType) SetRoomTypeDescription(v ChannelRoomMappingDescriptionDetailsType) {
	o.RoomTypeDescription = &v
}

func (o ChannelRoomMappingDescriptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRoomMappingDescriptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomDescription) {
		toSerialize["customDescription"] = o.CustomDescription
	}
	if !IsNil(o.GlobalDescription) {
		toSerialize["globalDescription"] = o.GlobalDescription
	}
	if !IsNil(o.RoomTypeDescription) {
		toSerialize["roomTypeDescription"] = o.RoomTypeDescription
	}
	return toSerialize, nil
}

type NullableChannelRoomMappingDescriptionType struct {
	value *ChannelRoomMappingDescriptionType
	isSet bool
}

func (v NullableChannelRoomMappingDescriptionType) Get() *ChannelRoomMappingDescriptionType {
	return v.value
}

func (v *NullableChannelRoomMappingDescriptionType) Set(val *ChannelRoomMappingDescriptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRoomMappingDescriptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRoomMappingDescriptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRoomMappingDescriptionType(val *ChannelRoomMappingDescriptionType) *NullableChannelRoomMappingDescriptionType {
	return &NullableChannelRoomMappingDescriptionType{value: val, isSet: true}
}

func (v NullableChannelRoomMappingDescriptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRoomMappingDescriptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


