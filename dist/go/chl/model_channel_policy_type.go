/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelPolicyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPolicyType{}

// ChannelPolicyType Policy details including guaranteeInfo, cancellation information etc.
type ChannelPolicyType struct {
	CancelPenalty *CancelPenaltyType `json:"cancelPenalty,omitempty"`
	// Marketing Text like cancel policy, deposit policy etc.
	ChannelMarketingInfo []ChannelMarketingInfoTypeInner `json:"channelMarketingInfo,omitempty"`
	ChannelRatePlanCode *string `json:"channelRatePlanCode,omitempty"`
	CommissionCode *string `json:"commissionCode,omitempty"`
	Deposit *bool `json:"deposit,omitempty"`
	DepositPolicy *DepositPolicyType `json:"depositPolicy,omitempty"`
	// Guarantee details.
	Guarantees []GuaranteeType `json:"guarantees,omitempty"`
	Hold *bool `json:"hold,omitempty"`
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
}

// NewChannelPolicyType instantiates a new ChannelPolicyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPolicyType() *ChannelPolicyType {
	this := ChannelPolicyType{}
	return &this
}

// NewChannelPolicyTypeWithDefaults instantiates a new ChannelPolicyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPolicyTypeWithDefaults() *ChannelPolicyType {
	this := ChannelPolicyType{}
	return &this
}

// GetCancelPenalty returns the CancelPenalty field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetCancelPenalty() CancelPenaltyType {
	if o == nil || IsNil(o.CancelPenalty) {
		var ret CancelPenaltyType
		return ret
	}
	return *o.CancelPenalty
}

// GetCancelPenaltyOk returns a tuple with the CancelPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetCancelPenaltyOk() (*CancelPenaltyType, bool) {
	if o == nil || IsNil(o.CancelPenalty) {
		return nil, false
	}
	return o.CancelPenalty, true
}

// HasCancelPenalty returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasCancelPenalty() bool {
	if o != nil && !IsNil(o.CancelPenalty) {
		return true
	}

	return false
}

// SetCancelPenalty gets a reference to the given CancelPenaltyType and assigns it to the CancelPenalty field.
func (o *ChannelPolicyType) SetCancelPenalty(v CancelPenaltyType) {
	o.CancelPenalty = &v
}

// GetChannelMarketingInfo returns the ChannelMarketingInfo field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetChannelMarketingInfo() []ChannelMarketingInfoTypeInner {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		var ret []ChannelMarketingInfoTypeInner
		return ret
	}
	return o.ChannelMarketingInfo
}

// GetChannelMarketingInfoOk returns a tuple with the ChannelMarketingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetChannelMarketingInfoOk() ([]ChannelMarketingInfoTypeInner, bool) {
	if o == nil || IsNil(o.ChannelMarketingInfo) {
		return nil, false
	}
	return o.ChannelMarketingInfo, true
}

// HasChannelMarketingInfo returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasChannelMarketingInfo() bool {
	if o != nil && !IsNil(o.ChannelMarketingInfo) {
		return true
	}

	return false
}

// SetChannelMarketingInfo gets a reference to the given []ChannelMarketingInfoTypeInner and assigns it to the ChannelMarketingInfo field.
func (o *ChannelPolicyType) SetChannelMarketingInfo(v []ChannelMarketingInfoTypeInner) {
	o.ChannelMarketingInfo = v
}

// GetChannelRatePlanCode returns the ChannelRatePlanCode field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetChannelRatePlanCode() string {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		var ret string
		return ret
	}
	return *o.ChannelRatePlanCode
}

// GetChannelRatePlanCodeOk returns a tuple with the ChannelRatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetChannelRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		return nil, false
	}
	return o.ChannelRatePlanCode, true
}

// HasChannelRatePlanCode returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasChannelRatePlanCode() bool {
	if o != nil && !IsNil(o.ChannelRatePlanCode) {
		return true
	}

	return false
}

// SetChannelRatePlanCode gets a reference to the given string and assigns it to the ChannelRatePlanCode field.
func (o *ChannelPolicyType) SetChannelRatePlanCode(v string) {
	o.ChannelRatePlanCode = &v
}

// GetCommissionCode returns the CommissionCode field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetCommissionCode() string {
	if o == nil || IsNil(o.CommissionCode) {
		var ret string
		return ret
	}
	return *o.CommissionCode
}

// GetCommissionCodeOk returns a tuple with the CommissionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetCommissionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CommissionCode) {
		return nil, false
	}
	return o.CommissionCode, true
}

// HasCommissionCode returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasCommissionCode() bool {
	if o != nil && !IsNil(o.CommissionCode) {
		return true
	}

	return false
}

// SetCommissionCode gets a reference to the given string and assigns it to the CommissionCode field.
func (o *ChannelPolicyType) SetCommissionCode(v string) {
	o.CommissionCode = &v
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetDeposit() bool {
	if o == nil || IsNil(o.Deposit) {
		var ret bool
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.Deposit) {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasDeposit() bool {
	if o != nil && !IsNil(o.Deposit) {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given bool and assigns it to the Deposit field.
func (o *ChannelPolicyType) SetDeposit(v bool) {
	o.Deposit = &v
}

// GetDepositPolicy returns the DepositPolicy field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetDepositPolicy() DepositPolicyType {
	if o == nil || IsNil(o.DepositPolicy) {
		var ret DepositPolicyType
		return ret
	}
	return *o.DepositPolicy
}

// GetDepositPolicyOk returns a tuple with the DepositPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetDepositPolicyOk() (*DepositPolicyType, bool) {
	if o == nil || IsNil(o.DepositPolicy) {
		return nil, false
	}
	return o.DepositPolicy, true
}

// HasDepositPolicy returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasDepositPolicy() bool {
	if o != nil && !IsNil(o.DepositPolicy) {
		return true
	}

	return false
}

// SetDepositPolicy gets a reference to the given DepositPolicyType and assigns it to the DepositPolicy field.
func (o *ChannelPolicyType) SetDepositPolicy(v DepositPolicyType) {
	o.DepositPolicy = &v
}

// GetGuarantees returns the Guarantees field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetGuarantees() []GuaranteeType {
	if o == nil || IsNil(o.Guarantees) {
		var ret []GuaranteeType
		return ret
	}
	return o.Guarantees
}

// GetGuaranteesOk returns a tuple with the Guarantees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetGuaranteesOk() ([]GuaranteeType, bool) {
	if o == nil || IsNil(o.Guarantees) {
		return nil, false
	}
	return o.Guarantees, true
}

// HasGuarantees returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasGuarantees() bool {
	if o != nil && !IsNil(o.Guarantees) {
		return true
	}

	return false
}

// SetGuarantees gets a reference to the given []GuaranteeType and assigns it to the Guarantees field.
func (o *ChannelPolicyType) SetGuarantees(v []GuaranteeType) {
	o.Guarantees = v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetHold() bool {
	if o == nil || IsNil(o.Hold) {
		var ret bool
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given bool and assigns it to the Hold field.
func (o *ChannelPolicyType) SetHold(v bool) {
	o.Hold = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *ChannelPolicyType) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPolicyType) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *ChannelPolicyType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *ChannelPolicyType) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

func (o ChannelPolicyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPolicyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CancelPenalty) {
		toSerialize["cancelPenalty"] = o.CancelPenalty
	}
	if !IsNil(o.ChannelMarketingInfo) {
		toSerialize["channelMarketingInfo"] = o.ChannelMarketingInfo
	}
	if !IsNil(o.ChannelRatePlanCode) {
		toSerialize["channelRatePlanCode"] = o.ChannelRatePlanCode
	}
	if !IsNil(o.CommissionCode) {
		toSerialize["commissionCode"] = o.CommissionCode
	}
	if !IsNil(o.Deposit) {
		toSerialize["deposit"] = o.Deposit
	}
	if !IsNil(o.DepositPolicy) {
		toSerialize["depositPolicy"] = o.DepositPolicy
	}
	if !IsNil(o.Guarantees) {
		toSerialize["guarantees"] = o.Guarantees
	}
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	return toSerialize, nil
}

type NullableChannelPolicyType struct {
	value *ChannelPolicyType
	isSet bool
}

func (v NullableChannelPolicyType) Get() *ChannelPolicyType {
	return v.value
}

func (v *NullableChannelPolicyType) Set(val *ChannelPolicyType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPolicyType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPolicyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPolicyType(val *ChannelPolicyType) *NullableChannelPolicyType {
	return &NullableChannelPolicyType{value: val, isSet: true}
}

func (v NullableChannelPolicyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPolicyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


