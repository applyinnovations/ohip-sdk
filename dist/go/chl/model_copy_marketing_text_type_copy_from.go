/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the CopyMarketingTextTypeCopyFrom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyMarketingTextTypeCopyFrom{}

// CopyMarketingTextTypeCopyFrom struct for CopyMarketingTextTypeCopyFrom
type CopyMarketingTextTypeCopyFrom struct {
	CopyFrom *MarketingTextType `json:"copyFrom,omitempty"`
}

// NewCopyMarketingTextTypeCopyFrom instantiates a new CopyMarketingTextTypeCopyFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyMarketingTextTypeCopyFrom() *CopyMarketingTextTypeCopyFrom {
	this := CopyMarketingTextTypeCopyFrom{}
	return &this
}

// NewCopyMarketingTextTypeCopyFromWithDefaults instantiates a new CopyMarketingTextTypeCopyFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyMarketingTextTypeCopyFromWithDefaults() *CopyMarketingTextTypeCopyFrom {
	this := CopyMarketingTextTypeCopyFrom{}
	return &this
}

// GetCopyFrom returns the CopyFrom field value if set, zero value otherwise.
func (o *CopyMarketingTextTypeCopyFrom) GetCopyFrom() MarketingTextType {
	if o == nil || IsNil(o.CopyFrom) {
		var ret MarketingTextType
		return ret
	}
	return *o.CopyFrom
}

// GetCopyFromOk returns a tuple with the CopyFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyMarketingTextTypeCopyFrom) GetCopyFromOk() (*MarketingTextType, bool) {
	if o == nil || IsNil(o.CopyFrom) {
		return nil, false
	}
	return o.CopyFrom, true
}

// HasCopyFrom returns a boolean if a field has been set.
func (o *CopyMarketingTextTypeCopyFrom) HasCopyFrom() bool {
	if o != nil && !IsNil(o.CopyFrom) {
		return true
	}

	return false
}

// SetCopyFrom gets a reference to the given MarketingTextType and assigns it to the CopyFrom field.
func (o *CopyMarketingTextTypeCopyFrom) SetCopyFrom(v MarketingTextType) {
	o.CopyFrom = &v
}

func (o CopyMarketingTextTypeCopyFrom) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyMarketingTextTypeCopyFrom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyFrom) {
		toSerialize["copyFrom"] = o.CopyFrom
	}
	return toSerialize, nil
}

type NullableCopyMarketingTextTypeCopyFrom struct {
	value *CopyMarketingTextTypeCopyFrom
	isSet bool
}

func (v NullableCopyMarketingTextTypeCopyFrom) Get() *CopyMarketingTextTypeCopyFrom {
	return v.value
}

func (v *NullableCopyMarketingTextTypeCopyFrom) Set(val *CopyMarketingTextTypeCopyFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyMarketingTextTypeCopyFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyMarketingTextTypeCopyFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyMarketingTextTypeCopyFrom(val *CopyMarketingTextTypeCopyFrom) *NullableCopyMarketingTextTypeCopyFrom {
	return &NullableCopyMarketingTextTypeCopyFrom{value: val, isSet: true}
}

func (v NullableCopyMarketingTextTypeCopyFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyMarketingTextTypeCopyFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


