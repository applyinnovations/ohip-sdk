/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the CopyMarketingTextType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyMarketingTextType{}

// CopyMarketingTextType Copy Channel Marketing Text among Channels
type CopyMarketingTextType struct {
	CopyFrom *CopyMarketingTextTypeCopyFrom `json:"copyFrom,omitempty"`
	CopyTo *CopyMarketingTextTypeCopyTo `json:"copyTo,omitempty"`
}

// NewCopyMarketingTextType instantiates a new CopyMarketingTextType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyMarketingTextType() *CopyMarketingTextType {
	this := CopyMarketingTextType{}
	return &this
}

// NewCopyMarketingTextTypeWithDefaults instantiates a new CopyMarketingTextType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyMarketingTextTypeWithDefaults() *CopyMarketingTextType {
	this := CopyMarketingTextType{}
	return &this
}

// GetCopyFrom returns the CopyFrom field value if set, zero value otherwise.
func (o *CopyMarketingTextType) GetCopyFrom() CopyMarketingTextTypeCopyFrom {
	if o == nil || IsNil(o.CopyFrom) {
		var ret CopyMarketingTextTypeCopyFrom
		return ret
	}
	return *o.CopyFrom
}

// GetCopyFromOk returns a tuple with the CopyFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyMarketingTextType) GetCopyFromOk() (*CopyMarketingTextTypeCopyFrom, bool) {
	if o == nil || IsNil(o.CopyFrom) {
		return nil, false
	}
	return o.CopyFrom, true
}

// HasCopyFrom returns a boolean if a field has been set.
func (o *CopyMarketingTextType) HasCopyFrom() bool {
	if o != nil && !IsNil(o.CopyFrom) {
		return true
	}

	return false
}

// SetCopyFrom gets a reference to the given CopyMarketingTextTypeCopyFrom and assigns it to the CopyFrom field.
func (o *CopyMarketingTextType) SetCopyFrom(v CopyMarketingTextTypeCopyFrom) {
	o.CopyFrom = &v
}

// GetCopyTo returns the CopyTo field value if set, zero value otherwise.
func (o *CopyMarketingTextType) GetCopyTo() CopyMarketingTextTypeCopyTo {
	if o == nil || IsNil(o.CopyTo) {
		var ret CopyMarketingTextTypeCopyTo
		return ret
	}
	return *o.CopyTo
}

// GetCopyToOk returns a tuple with the CopyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyMarketingTextType) GetCopyToOk() (*CopyMarketingTextTypeCopyTo, bool) {
	if o == nil || IsNil(o.CopyTo) {
		return nil, false
	}
	return o.CopyTo, true
}

// HasCopyTo returns a boolean if a field has been set.
func (o *CopyMarketingTextType) HasCopyTo() bool {
	if o != nil && !IsNil(o.CopyTo) {
		return true
	}

	return false
}

// SetCopyTo gets a reference to the given CopyMarketingTextTypeCopyTo and assigns it to the CopyTo field.
func (o *CopyMarketingTextType) SetCopyTo(v CopyMarketingTextTypeCopyTo) {
	o.CopyTo = &v
}

func (o CopyMarketingTextType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyMarketingTextType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyFrom) {
		toSerialize["copyFrom"] = o.CopyFrom
	}
	if !IsNil(o.CopyTo) {
		toSerialize["copyTo"] = o.CopyTo
	}
	return toSerialize, nil
}

type NullableCopyMarketingTextType struct {
	value *CopyMarketingTextType
	isSet bool
}

func (v NullableCopyMarketingTextType) Get() *CopyMarketingTextType {
	return v.value
}

func (v *NullableCopyMarketingTextType) Set(val *CopyMarketingTextType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyMarketingTextType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyMarketingTextType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyMarketingTextType(val *CopyMarketingTextType) *NullableCopyMarketingTextType {
	return &NullableCopyMarketingTextType{value: val, isSet: true}
}

func (v NullableCopyMarketingTextType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyMarketingTextType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


