/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRoomMappingHTMLSupportedDescriptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRoomMappingHTMLSupportedDescriptionType{}

// ChannelRoomMappingHTMLSupportedDescriptionType This type holds HTML description of hotel-channel room type with additional channel room type short description.
type ChannelRoomMappingHTMLSupportedDescriptionType struct {
	// Description.
	Description *string `json:"description,omitempty"`
	// Channel room type or rate code short description.
	ShortDescription *string `json:"shortDescription,omitempty"`
}

// NewChannelRoomMappingHTMLSupportedDescriptionType instantiates a new ChannelRoomMappingHTMLSupportedDescriptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRoomMappingHTMLSupportedDescriptionType() *ChannelRoomMappingHTMLSupportedDescriptionType {
	this := ChannelRoomMappingHTMLSupportedDescriptionType{}
	return &this
}

// NewChannelRoomMappingHTMLSupportedDescriptionTypeWithDefaults instantiates a new ChannelRoomMappingHTMLSupportedDescriptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRoomMappingHTMLSupportedDescriptionTypeWithDefaults() *ChannelRoomMappingHTMLSupportedDescriptionType {
	this := ChannelRoomMappingHTMLSupportedDescriptionType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) SetDescription(v string) {
	o.Description = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *ChannelRoomMappingHTMLSupportedDescriptionType) SetShortDescription(v string) {
	o.ShortDescription = &v
}

func (o ChannelRoomMappingHTMLSupportedDescriptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRoomMappingHTMLSupportedDescriptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	return toSerialize, nil
}

type NullableChannelRoomMappingHTMLSupportedDescriptionType struct {
	value *ChannelRoomMappingHTMLSupportedDescriptionType
	isSet bool
}

func (v NullableChannelRoomMappingHTMLSupportedDescriptionType) Get() *ChannelRoomMappingHTMLSupportedDescriptionType {
	return v.value
}

func (v *NullableChannelRoomMappingHTMLSupportedDescriptionType) Set(val *ChannelRoomMappingHTMLSupportedDescriptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRoomMappingHTMLSupportedDescriptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRoomMappingHTMLSupportedDescriptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRoomMappingHTMLSupportedDescriptionType(val *ChannelRoomMappingHTMLSupportedDescriptionType) *NullableChannelRoomMappingHTMLSupportedDescriptionType {
	return &NullableChannelRoomMappingHTMLSupportedDescriptionType{value: val, isSet: true}
}

func (v NullableChannelRoomMappingHTMLSupportedDescriptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRoomMappingHTMLSupportedDescriptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


