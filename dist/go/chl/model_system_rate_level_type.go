/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the SystemRateLevelType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemRateLevelType{}

// SystemRateLevelType Identify rate level details of external system.
type SystemRateLevelType struct {
	RateLevelCode *CodeDescriptionType `json:"rateLevelCode,omitempty"`
}

// NewSystemRateLevelType instantiates a new SystemRateLevelType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemRateLevelType() *SystemRateLevelType {
	this := SystemRateLevelType{}
	return &this
}

// NewSystemRateLevelTypeWithDefaults instantiates a new SystemRateLevelType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemRateLevelTypeWithDefaults() *SystemRateLevelType {
	this := SystemRateLevelType{}
	return &this
}

// GetRateLevelCode returns the RateLevelCode field value if set, zero value otherwise.
func (o *SystemRateLevelType) GetRateLevelCode() CodeDescriptionType {
	if o == nil || IsNil(o.RateLevelCode) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.RateLevelCode
}

// GetRateLevelCodeOk returns a tuple with the RateLevelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemRateLevelType) GetRateLevelCodeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RateLevelCode) {
		return nil, false
	}
	return o.RateLevelCode, true
}

// HasRateLevelCode returns a boolean if a field has been set.
func (o *SystemRateLevelType) HasRateLevelCode() bool {
	if o != nil && !IsNil(o.RateLevelCode) {
		return true
	}

	return false
}

// SetRateLevelCode gets a reference to the given CodeDescriptionType and assigns it to the RateLevelCode field.
func (o *SystemRateLevelType) SetRateLevelCode(v CodeDescriptionType) {
	o.RateLevelCode = &v
}

func (o SystemRateLevelType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemRateLevelType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RateLevelCode) {
		toSerialize["rateLevelCode"] = o.RateLevelCode
	}
	return toSerialize, nil
}

type NullableSystemRateLevelType struct {
	value *SystemRateLevelType
	isSet bool
}

func (v NullableSystemRateLevelType) Get() *SystemRateLevelType {
	return v.value
}

func (v *NullableSystemRateLevelType) Set(val *SystemRateLevelType) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemRateLevelType) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemRateLevelType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemRateLevelType(val *SystemRateLevelType) *NullableSystemRateLevelType {
	return &NullableSystemRateLevelType{value: val, isSet: true}
}

func (v NullableSystemRateLevelType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemRateLevelType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


