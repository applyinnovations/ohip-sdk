/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
	"fmt"
)

// checks if the ProfileRateAccessCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileRateAccessCode{}

// ProfileRateAccessCode struct for ProfileRateAccessCode
type ProfileRateAccessCode struct {
	// Unique ID that identifies a single hotel property.
	HotelId string `json:"hotelId"`
	// Unique ID that identifies a single Channel.
	ChannelCode string `json:"channelCode"`
	ChannelRatePlans []ProfileChannelRatePlan `json:"channelRatePlans"`
}

type _ProfileRateAccessCode ProfileRateAccessCode

// NewProfileRateAccessCode instantiates a new ProfileRateAccessCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileRateAccessCode(hotelId string, channelCode string, channelRatePlans []ProfileChannelRatePlan) *ProfileRateAccessCode {
	this := ProfileRateAccessCode{}
	this.HotelId = hotelId
	this.ChannelCode = channelCode
	this.ChannelRatePlans = channelRatePlans
	return &this
}

// NewProfileRateAccessCodeWithDefaults instantiates a new ProfileRateAccessCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileRateAccessCodeWithDefaults() *ProfileRateAccessCode {
	this := ProfileRateAccessCode{}
	return &this
}

// GetHotelId returns the HotelId field value
func (o *ProfileRateAccessCode) GetHotelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value
// and a boolean to check if the value has been set.
func (o *ProfileRateAccessCode) GetHotelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HotelId, true
}

// SetHotelId sets field value
func (o *ProfileRateAccessCode) SetHotelId(v string) {
	o.HotelId = v
}

// GetChannelCode returns the ChannelCode field value
func (o *ProfileRateAccessCode) GetChannelCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value
// and a boolean to check if the value has been set.
func (o *ProfileRateAccessCode) GetChannelCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelCode, true
}

// SetChannelCode sets field value
func (o *ProfileRateAccessCode) SetChannelCode(v string) {
	o.ChannelCode = v
}

// GetChannelRatePlans returns the ChannelRatePlans field value
func (o *ProfileRateAccessCode) GetChannelRatePlans() []ProfileChannelRatePlan {
	if o == nil {
		var ret []ProfileChannelRatePlan
		return ret
	}

	return o.ChannelRatePlans
}

// GetChannelRatePlansOk returns a tuple with the ChannelRatePlans field value
// and a boolean to check if the value has been set.
func (o *ProfileRateAccessCode) GetChannelRatePlansOk() ([]ProfileChannelRatePlan, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelRatePlans, true
}

// SetChannelRatePlans sets field value
func (o *ProfileRateAccessCode) SetChannelRatePlans(v []ProfileChannelRatePlan) {
	o.ChannelRatePlans = v
}

func (o ProfileRateAccessCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileRateAccessCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hotelId"] = o.HotelId
	toSerialize["channelCode"] = o.ChannelCode
	toSerialize["channelRatePlans"] = o.ChannelRatePlans
	return toSerialize, nil
}

func (o *ProfileRateAccessCode) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hotelId",
		"channelCode",
		"channelRatePlans",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfileRateAccessCode := _ProfileRateAccessCode{}

	err = json.Unmarshal(bytes, &varProfileRateAccessCode)

	if err != nil {
		return err
	}

	*o = ProfileRateAccessCode(varProfileRateAccessCode)

	return err
}

type NullableProfileRateAccessCode struct {
	value *ProfileRateAccessCode
	isSet bool
}

func (v NullableProfileRateAccessCode) Get() *ProfileRateAccessCode {
	return v.value
}

func (v *NullableProfileRateAccessCode) Set(val *ProfileRateAccessCode) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileRateAccessCode) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileRateAccessCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileRateAccessCode(val *ProfileRateAccessCode) *NullableProfileRateAccessCode {
	return &NullableProfileRateAccessCode{value: val, isSet: true}
}

func (v NullableProfileRateAccessCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileRateAccessCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


