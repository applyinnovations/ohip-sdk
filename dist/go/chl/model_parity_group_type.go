/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ParityGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParityGroupType{}

// ParityGroupType Channels and Property Group wise Rates for Room Type and Rate Plan combination.
type ParityGroupType struct {
	// Room Type and Rate Plan combination.
	ParityRoomRates []ParityRoomRateType `json:"parityRoomRates,omitempty"`
	// The code that identifies a Hotel.
	HotelId *string `json:"hotelId,omitempty"`
	// The code that identifies a Booking Channel.
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	BookingChannelURL *string `json:"bookingChannelURL,omitempty"`
	BookingChannelIconURL *string `json:"bookingChannelIconURL,omitempty"`
}

// NewParityGroupType instantiates a new ParityGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParityGroupType() *ParityGroupType {
	this := ParityGroupType{}
	return &this
}

// NewParityGroupTypeWithDefaults instantiates a new ParityGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParityGroupTypeWithDefaults() *ParityGroupType {
	this := ParityGroupType{}
	return &this
}

// GetParityRoomRates returns the ParityRoomRates field value if set, zero value otherwise.
func (o *ParityGroupType) GetParityRoomRates() []ParityRoomRateType {
	if o == nil || IsNil(o.ParityRoomRates) {
		var ret []ParityRoomRateType
		return ret
	}
	return o.ParityRoomRates
}

// GetParityRoomRatesOk returns a tuple with the ParityRoomRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParityGroupType) GetParityRoomRatesOk() ([]ParityRoomRateType, bool) {
	if o == nil || IsNil(o.ParityRoomRates) {
		return nil, false
	}
	return o.ParityRoomRates, true
}

// HasParityRoomRates returns a boolean if a field has been set.
func (o *ParityGroupType) HasParityRoomRates() bool {
	if o != nil && !IsNil(o.ParityRoomRates) {
		return true
	}

	return false
}

// SetParityRoomRates gets a reference to the given []ParityRoomRateType and assigns it to the ParityRoomRates field.
func (o *ParityGroupType) SetParityRoomRates(v []ParityRoomRateType) {
	o.ParityRoomRates = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ParityGroupType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParityGroupType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ParityGroupType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ParityGroupType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *ParityGroupType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParityGroupType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *ParityGroupType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *ParityGroupType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetBookingChannelURL returns the BookingChannelURL field value if set, zero value otherwise.
func (o *ParityGroupType) GetBookingChannelURL() string {
	if o == nil || IsNil(o.BookingChannelURL) {
		var ret string
		return ret
	}
	return *o.BookingChannelURL
}

// GetBookingChannelURLOk returns a tuple with the BookingChannelURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParityGroupType) GetBookingChannelURLOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelURL) {
		return nil, false
	}
	return o.BookingChannelURL, true
}

// HasBookingChannelURL returns a boolean if a field has been set.
func (o *ParityGroupType) HasBookingChannelURL() bool {
	if o != nil && !IsNil(o.BookingChannelURL) {
		return true
	}

	return false
}

// SetBookingChannelURL gets a reference to the given string and assigns it to the BookingChannelURL field.
func (o *ParityGroupType) SetBookingChannelURL(v string) {
	o.BookingChannelURL = &v
}

// GetBookingChannelIconURL returns the BookingChannelIconURL field value if set, zero value otherwise.
func (o *ParityGroupType) GetBookingChannelIconURL() string {
	if o == nil || IsNil(o.BookingChannelIconURL) {
		var ret string
		return ret
	}
	return *o.BookingChannelIconURL
}

// GetBookingChannelIconURLOk returns a tuple with the BookingChannelIconURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParityGroupType) GetBookingChannelIconURLOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelIconURL) {
		return nil, false
	}
	return o.BookingChannelIconURL, true
}

// HasBookingChannelIconURL returns a boolean if a field has been set.
func (o *ParityGroupType) HasBookingChannelIconURL() bool {
	if o != nil && !IsNil(o.BookingChannelIconURL) {
		return true
	}

	return false
}

// SetBookingChannelIconURL gets a reference to the given string and assigns it to the BookingChannelIconURL field.
func (o *ParityGroupType) SetBookingChannelIconURL(v string) {
	o.BookingChannelIconURL = &v
}

func (o ParityGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParityGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParityRoomRates) {
		toSerialize["parityRoomRates"] = o.ParityRoomRates
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.BookingChannelURL) {
		toSerialize["bookingChannelURL"] = o.BookingChannelURL
	}
	if !IsNil(o.BookingChannelIconURL) {
		toSerialize["bookingChannelIconURL"] = o.BookingChannelIconURL
	}
	return toSerialize, nil
}

type NullableParityGroupType struct {
	value *ParityGroupType
	isSet bool
}

func (v NullableParityGroupType) Get() *ParityGroupType {
	return v.value
}

func (v *NullableParityGroupType) Set(val *ParityGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableParityGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableParityGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParityGroupType(val *ParityGroupType) *NullableParityGroupType {
	return &NullableParityGroupType{value: val, isSet: true}
}

func (v NullableParityGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParityGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


