/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRoomMappingDescriptionDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRoomMappingDescriptionDetailsType{}

// ChannelRoomMappingDescriptionDetailsType This type holds descriptions of hotel-channel room type mapping. Descriptions may be enhanced descriptions, HTML supported description or a simple string description.
type ChannelRoomMappingDescriptionDetailsType struct {
	// Description.
	Description *string `json:"description,omitempty"`
	EnhancedDescription *ChannelMappingEnhancedDescriptionType `json:"enhancedDescription,omitempty"`
	HTMLSupportedDescription *ChannelRoomMappingHTMLSupportedDescriptionType `json:"hTMLSupportedDescription,omitempty"`
}

// NewChannelRoomMappingDescriptionDetailsType instantiates a new ChannelRoomMappingDescriptionDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRoomMappingDescriptionDetailsType() *ChannelRoomMappingDescriptionDetailsType {
	this := ChannelRoomMappingDescriptionDetailsType{}
	return &this
}

// NewChannelRoomMappingDescriptionDetailsTypeWithDefaults instantiates a new ChannelRoomMappingDescriptionDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRoomMappingDescriptionDetailsTypeWithDefaults() *ChannelRoomMappingDescriptionDetailsType {
	this := ChannelRoomMappingDescriptionDetailsType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionDetailsType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelRoomMappingDescriptionDetailsType) SetDescription(v string) {
	o.Description = &v
}

// GetEnhancedDescription returns the EnhancedDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionDetailsType) GetEnhancedDescription() ChannelMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.EnhancedDescription) {
		var ret ChannelMappingEnhancedDescriptionType
		return ret
	}
	return *o.EnhancedDescription
}

// GetEnhancedDescriptionOk returns a tuple with the EnhancedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) GetEnhancedDescriptionOk() (*ChannelMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.EnhancedDescription) {
		return nil, false
	}
	return o.EnhancedDescription, true
}

// HasEnhancedDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) HasEnhancedDescription() bool {
	if o != nil && !IsNil(o.EnhancedDescription) {
		return true
	}

	return false
}

// SetEnhancedDescription gets a reference to the given ChannelMappingEnhancedDescriptionType and assigns it to the EnhancedDescription field.
func (o *ChannelRoomMappingDescriptionDetailsType) SetEnhancedDescription(v ChannelMappingEnhancedDescriptionType) {
	o.EnhancedDescription = &v
}

// GetHTMLSupportedDescription returns the HTMLSupportedDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingDescriptionDetailsType) GetHTMLSupportedDescription() ChannelRoomMappingHTMLSupportedDescriptionType {
	if o == nil || IsNil(o.HTMLSupportedDescription) {
		var ret ChannelRoomMappingHTMLSupportedDescriptionType
		return ret
	}
	return *o.HTMLSupportedDescription
}

// GetHTMLSupportedDescriptionOk returns a tuple with the HTMLSupportedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) GetHTMLSupportedDescriptionOk() (*ChannelRoomMappingHTMLSupportedDescriptionType, bool) {
	if o == nil || IsNil(o.HTMLSupportedDescription) {
		return nil, false
	}
	return o.HTMLSupportedDescription, true
}

// HasHTMLSupportedDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingDescriptionDetailsType) HasHTMLSupportedDescription() bool {
	if o != nil && !IsNil(o.HTMLSupportedDescription) {
		return true
	}

	return false
}

// SetHTMLSupportedDescription gets a reference to the given ChannelRoomMappingHTMLSupportedDescriptionType and assigns it to the HTMLSupportedDescription field.
func (o *ChannelRoomMappingDescriptionDetailsType) SetHTMLSupportedDescription(v ChannelRoomMappingHTMLSupportedDescriptionType) {
	o.HTMLSupportedDescription = &v
}

func (o ChannelRoomMappingDescriptionDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRoomMappingDescriptionDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EnhancedDescription) {
		toSerialize["enhancedDescription"] = o.EnhancedDescription
	}
	if !IsNil(o.HTMLSupportedDescription) {
		toSerialize["hTMLSupportedDescription"] = o.HTMLSupportedDescription
	}
	return toSerialize, nil
}

type NullableChannelRoomMappingDescriptionDetailsType struct {
	value *ChannelRoomMappingDescriptionDetailsType
	isSet bool
}

func (v NullableChannelRoomMappingDescriptionDetailsType) Get() *ChannelRoomMappingDescriptionDetailsType {
	return v.value
}

func (v *NullableChannelRoomMappingDescriptionDetailsType) Set(val *ChannelRoomMappingDescriptionDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRoomMappingDescriptionDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRoomMappingDescriptionDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRoomMappingDescriptionDetailsType(val *ChannelRoomMappingDescriptionDetailsType) *NullableChannelRoomMappingDescriptionDetailsType {
	return &NullableChannelRoomMappingDescriptionDetailsType{value: val, isSet: true}
}

func (v NullableChannelRoomMappingDescriptionDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRoomMappingDescriptionDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


