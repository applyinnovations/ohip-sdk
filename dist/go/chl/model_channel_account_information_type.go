/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelAccountInformationType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAccountInformationType{}

// ChannelAccountInformationType To hold channel account detailed information.
type ChannelAccountInformationType struct {
	AccountDetails *ChannelAccountDetailsType `json:"accountDetails,omitempty"`
	AccountSetupDetails *ChannelAccountSetupDetailsType `json:"accountSetupDetails,omitempty"`
	// Collection of lamp indicators.
	ChannelAccountIndicators []IndicatorType `json:"channelAccountIndicators,omitempty"`
	ChannelAccountNotes *ChannelAccountNotesType `json:"channelAccountNotes,omitempty"`
	CommunicationDetails *ChannelAccountCommunicationType `json:"communicationDetails,omitempty"`
	ContactInformation *ChannelAccountContactType `json:"contactInformation,omitempty"`
	// Channel account contract information object to hold details of channel account contract.
	ContractInformation []ChannelAccountContractInformationType `json:"contractInformation,omitempty"`
}

// NewChannelAccountInformationType instantiates a new ChannelAccountInformationType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAccountInformationType() *ChannelAccountInformationType {
	this := ChannelAccountInformationType{}
	return &this
}

// NewChannelAccountInformationTypeWithDefaults instantiates a new ChannelAccountInformationType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAccountInformationTypeWithDefaults() *ChannelAccountInformationType {
	this := ChannelAccountInformationType{}
	return &this
}

// GetAccountDetails returns the AccountDetails field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetAccountDetails() ChannelAccountDetailsType {
	if o == nil || IsNil(o.AccountDetails) {
		var ret ChannelAccountDetailsType
		return ret
	}
	return *o.AccountDetails
}

// GetAccountDetailsOk returns a tuple with the AccountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetAccountDetailsOk() (*ChannelAccountDetailsType, bool) {
	if o == nil || IsNil(o.AccountDetails) {
		return nil, false
	}
	return o.AccountDetails, true
}

// HasAccountDetails returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasAccountDetails() bool {
	if o != nil && !IsNil(o.AccountDetails) {
		return true
	}

	return false
}

// SetAccountDetails gets a reference to the given ChannelAccountDetailsType and assigns it to the AccountDetails field.
func (o *ChannelAccountInformationType) SetAccountDetails(v ChannelAccountDetailsType) {
	o.AccountDetails = &v
}

// GetAccountSetupDetails returns the AccountSetupDetails field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetAccountSetupDetails() ChannelAccountSetupDetailsType {
	if o == nil || IsNil(o.AccountSetupDetails) {
		var ret ChannelAccountSetupDetailsType
		return ret
	}
	return *o.AccountSetupDetails
}

// GetAccountSetupDetailsOk returns a tuple with the AccountSetupDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetAccountSetupDetailsOk() (*ChannelAccountSetupDetailsType, bool) {
	if o == nil || IsNil(o.AccountSetupDetails) {
		return nil, false
	}
	return o.AccountSetupDetails, true
}

// HasAccountSetupDetails returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasAccountSetupDetails() bool {
	if o != nil && !IsNil(o.AccountSetupDetails) {
		return true
	}

	return false
}

// SetAccountSetupDetails gets a reference to the given ChannelAccountSetupDetailsType and assigns it to the AccountSetupDetails field.
func (o *ChannelAccountInformationType) SetAccountSetupDetails(v ChannelAccountSetupDetailsType) {
	o.AccountSetupDetails = &v
}

// GetChannelAccountIndicators returns the ChannelAccountIndicators field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetChannelAccountIndicators() []IndicatorType {
	if o == nil || IsNil(o.ChannelAccountIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ChannelAccountIndicators
}

// GetChannelAccountIndicatorsOk returns a tuple with the ChannelAccountIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetChannelAccountIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ChannelAccountIndicators) {
		return nil, false
	}
	return o.ChannelAccountIndicators, true
}

// HasChannelAccountIndicators returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasChannelAccountIndicators() bool {
	if o != nil && !IsNil(o.ChannelAccountIndicators) {
		return true
	}

	return false
}

// SetChannelAccountIndicators gets a reference to the given []IndicatorType and assigns it to the ChannelAccountIndicators field.
func (o *ChannelAccountInformationType) SetChannelAccountIndicators(v []IndicatorType) {
	o.ChannelAccountIndicators = v
}

// GetChannelAccountNotes returns the ChannelAccountNotes field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetChannelAccountNotes() ChannelAccountNotesType {
	if o == nil || IsNil(o.ChannelAccountNotes) {
		var ret ChannelAccountNotesType
		return ret
	}
	return *o.ChannelAccountNotes
}

// GetChannelAccountNotesOk returns a tuple with the ChannelAccountNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetChannelAccountNotesOk() (*ChannelAccountNotesType, bool) {
	if o == nil || IsNil(o.ChannelAccountNotes) {
		return nil, false
	}
	return o.ChannelAccountNotes, true
}

// HasChannelAccountNotes returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasChannelAccountNotes() bool {
	if o != nil && !IsNil(o.ChannelAccountNotes) {
		return true
	}

	return false
}

// SetChannelAccountNotes gets a reference to the given ChannelAccountNotesType and assigns it to the ChannelAccountNotes field.
func (o *ChannelAccountInformationType) SetChannelAccountNotes(v ChannelAccountNotesType) {
	o.ChannelAccountNotes = &v
}

// GetCommunicationDetails returns the CommunicationDetails field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetCommunicationDetails() ChannelAccountCommunicationType {
	if o == nil || IsNil(o.CommunicationDetails) {
		var ret ChannelAccountCommunicationType
		return ret
	}
	return *o.CommunicationDetails
}

// GetCommunicationDetailsOk returns a tuple with the CommunicationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetCommunicationDetailsOk() (*ChannelAccountCommunicationType, bool) {
	if o == nil || IsNil(o.CommunicationDetails) {
		return nil, false
	}
	return o.CommunicationDetails, true
}

// HasCommunicationDetails returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasCommunicationDetails() bool {
	if o != nil && !IsNil(o.CommunicationDetails) {
		return true
	}

	return false
}

// SetCommunicationDetails gets a reference to the given ChannelAccountCommunicationType and assigns it to the CommunicationDetails field.
func (o *ChannelAccountInformationType) SetCommunicationDetails(v ChannelAccountCommunicationType) {
	o.CommunicationDetails = &v
}

// GetContactInformation returns the ContactInformation field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetContactInformation() ChannelAccountContactType {
	if o == nil || IsNil(o.ContactInformation) {
		var ret ChannelAccountContactType
		return ret
	}
	return *o.ContactInformation
}

// GetContactInformationOk returns a tuple with the ContactInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetContactInformationOk() (*ChannelAccountContactType, bool) {
	if o == nil || IsNil(o.ContactInformation) {
		return nil, false
	}
	return o.ContactInformation, true
}

// HasContactInformation returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasContactInformation() bool {
	if o != nil && !IsNil(o.ContactInformation) {
		return true
	}

	return false
}

// SetContactInformation gets a reference to the given ChannelAccountContactType and assigns it to the ContactInformation field.
func (o *ChannelAccountInformationType) SetContactInformation(v ChannelAccountContactType) {
	o.ContactInformation = &v
}

// GetContractInformation returns the ContractInformation field value if set, zero value otherwise.
func (o *ChannelAccountInformationType) GetContractInformation() []ChannelAccountContractInformationType {
	if o == nil || IsNil(o.ContractInformation) {
		var ret []ChannelAccountContractInformationType
		return ret
	}
	return o.ContractInformation
}

// GetContractInformationOk returns a tuple with the ContractInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountInformationType) GetContractInformationOk() ([]ChannelAccountContractInformationType, bool) {
	if o == nil || IsNil(o.ContractInformation) {
		return nil, false
	}
	return o.ContractInformation, true
}

// HasContractInformation returns a boolean if a field has been set.
func (o *ChannelAccountInformationType) HasContractInformation() bool {
	if o != nil && !IsNil(o.ContractInformation) {
		return true
	}

	return false
}

// SetContractInformation gets a reference to the given []ChannelAccountContractInformationType and assigns it to the ContractInformation field.
func (o *ChannelAccountInformationType) SetContractInformation(v []ChannelAccountContractInformationType) {
	o.ContractInformation = v
}

func (o ChannelAccountInformationType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAccountInformationType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountDetails) {
		toSerialize["accountDetails"] = o.AccountDetails
	}
	if !IsNil(o.AccountSetupDetails) {
		toSerialize["accountSetupDetails"] = o.AccountSetupDetails
	}
	if !IsNil(o.ChannelAccountIndicators) {
		toSerialize["channelAccountIndicators"] = o.ChannelAccountIndicators
	}
	if !IsNil(o.ChannelAccountNotes) {
		toSerialize["channelAccountNotes"] = o.ChannelAccountNotes
	}
	if !IsNil(o.CommunicationDetails) {
		toSerialize["communicationDetails"] = o.CommunicationDetails
	}
	if !IsNil(o.ContactInformation) {
		toSerialize["contactInformation"] = o.ContactInformation
	}
	if !IsNil(o.ContractInformation) {
		toSerialize["contractInformation"] = o.ContractInformation
	}
	return toSerialize, nil
}

type NullableChannelAccountInformationType struct {
	value *ChannelAccountInformationType
	isSet bool
}

func (v NullableChannelAccountInformationType) Get() *ChannelAccountInformationType {
	return v.value
}

func (v *NullableChannelAccountInformationType) Set(val *ChannelAccountInformationType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAccountInformationType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAccountInformationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAccountInformationType(val *ChannelAccountInformationType) *NullableChannelAccountInformationType {
	return &NullableChannelAccountInformationType{value: val, isSet: true}
}

func (v NullableChannelAccountInformationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAccountInformationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


