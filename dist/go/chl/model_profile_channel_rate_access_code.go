/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
	"fmt"
)

// checks if the ProfileChannelRateAccessCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileChannelRateAccessCode{}

// ProfileChannelRateAccessCode struct for ProfileChannelRateAccessCode
type ProfileChannelRateAccessCode struct {
	// Negotiated Rate Access Code.
	RateAccessCode string `json:"rateAccessCode"`
	// Start Date of the Channel Rate Access Code.
	StartDate *string `json:"startDate,omitempty"`
	// End Date of the Channel Rate Access Code.
	EndDate *string `json:"endDate,omitempty"`
	Active bool `json:"active"`
	// Account Id for which Channel Rate access code is applicable for.
	AccountId string `json:"accountId"`
	// Account name for which Channel Rate access Code is applicable for.
	AccountName string `json:"accountName"`
	ProfileAccountType *AccountTypeEnum `json:"profileAccountType,omitempty"`
	// Profile Id for which Channel Rate access code is applicable for.
	ProfileId *string `json:"profileId,omitempty"`
	// Negotiated Rate Access Code.
	OldRateAccessCode *string `json:"oldRateAccessCode,omitempty"`
	// Start Date of the Channel Rate Access Code.
	OldStartDate *string `json:"oldStartDate,omitempty"`
	// End Date of the Channel Rate Access Code.
	OldEndDate *string `json:"oldEndDate,omitempty"`
}

type _ProfileChannelRateAccessCode ProfileChannelRateAccessCode

// NewProfileChannelRateAccessCode instantiates a new ProfileChannelRateAccessCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileChannelRateAccessCode(rateAccessCode string, active bool, accountId string, accountName string) *ProfileChannelRateAccessCode {
	this := ProfileChannelRateAccessCode{}
	this.RateAccessCode = rateAccessCode
	this.Active = active
	this.AccountId = accountId
	this.AccountName = accountName
	return &this
}

// NewProfileChannelRateAccessCodeWithDefaults instantiates a new ProfileChannelRateAccessCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileChannelRateAccessCodeWithDefaults() *ProfileChannelRateAccessCode {
	this := ProfileChannelRateAccessCode{}
	return &this
}

// GetRateAccessCode returns the RateAccessCode field value
func (o *ProfileChannelRateAccessCode) GetRateAccessCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RateAccessCode
}

// GetRateAccessCodeOk returns a tuple with the RateAccessCode field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetRateAccessCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RateAccessCode, true
}

// SetRateAccessCode sets field value
func (o *ProfileChannelRateAccessCode) SetRateAccessCode(v string) {
	o.RateAccessCode = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ProfileChannelRateAccessCode) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ProfileChannelRateAccessCode) SetEndDate(v string) {
	o.EndDate = &v
}

// GetActive returns the Active field value
func (o *ProfileChannelRateAccessCode) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *ProfileChannelRateAccessCode) SetActive(v bool) {
	o.Active = v
}

// GetAccountId returns the AccountId field value
func (o *ProfileChannelRateAccessCode) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *ProfileChannelRateAccessCode) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountName returns the AccountName field value
func (o *ProfileChannelRateAccessCode) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *ProfileChannelRateAccessCode) SetAccountName(v string) {
	o.AccountName = v
}

// GetProfileAccountType returns the ProfileAccountType field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetProfileAccountType() AccountTypeEnum {
	if o == nil || IsNil(o.ProfileAccountType) {
		var ret AccountTypeEnum
		return ret
	}
	return *o.ProfileAccountType
}

// GetProfileAccountTypeOk returns a tuple with the ProfileAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetProfileAccountTypeOk() (*AccountTypeEnum, bool) {
	if o == nil || IsNil(o.ProfileAccountType) {
		return nil, false
	}
	return o.ProfileAccountType, true
}

// HasProfileAccountType returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasProfileAccountType() bool {
	if o != nil && !IsNil(o.ProfileAccountType) {
		return true
	}

	return false
}

// SetProfileAccountType gets a reference to the given AccountTypeEnum and assigns it to the ProfileAccountType field.
func (o *ProfileChannelRateAccessCode) SetProfileAccountType(v AccountTypeEnum) {
	o.ProfileAccountType = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *ProfileChannelRateAccessCode) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetOldRateAccessCode returns the OldRateAccessCode field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetOldRateAccessCode() string {
	if o == nil || IsNil(o.OldRateAccessCode) {
		var ret string
		return ret
	}
	return *o.OldRateAccessCode
}

// GetOldRateAccessCodeOk returns a tuple with the OldRateAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetOldRateAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OldRateAccessCode) {
		return nil, false
	}
	return o.OldRateAccessCode, true
}

// HasOldRateAccessCode returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasOldRateAccessCode() bool {
	if o != nil && !IsNil(o.OldRateAccessCode) {
		return true
	}

	return false
}

// SetOldRateAccessCode gets a reference to the given string and assigns it to the OldRateAccessCode field.
func (o *ProfileChannelRateAccessCode) SetOldRateAccessCode(v string) {
	o.OldRateAccessCode = &v
}

// GetOldStartDate returns the OldStartDate field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetOldStartDate() string {
	if o == nil || IsNil(o.OldStartDate) {
		var ret string
		return ret
	}
	return *o.OldStartDate
}

// GetOldStartDateOk returns a tuple with the OldStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetOldStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.OldStartDate) {
		return nil, false
	}
	return o.OldStartDate, true
}

// HasOldStartDate returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasOldStartDate() bool {
	if o != nil && !IsNil(o.OldStartDate) {
		return true
	}

	return false
}

// SetOldStartDate gets a reference to the given string and assigns it to the OldStartDate field.
func (o *ProfileChannelRateAccessCode) SetOldStartDate(v string) {
	o.OldStartDate = &v
}

// GetOldEndDate returns the OldEndDate field value if set, zero value otherwise.
func (o *ProfileChannelRateAccessCode) GetOldEndDate() string {
	if o == nil || IsNil(o.OldEndDate) {
		var ret string
		return ret
	}
	return *o.OldEndDate
}

// GetOldEndDateOk returns a tuple with the OldEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRateAccessCode) GetOldEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.OldEndDate) {
		return nil, false
	}
	return o.OldEndDate, true
}

// HasOldEndDate returns a boolean if a field has been set.
func (o *ProfileChannelRateAccessCode) HasOldEndDate() bool {
	if o != nil && !IsNil(o.OldEndDate) {
		return true
	}

	return false
}

// SetOldEndDate gets a reference to the given string and assigns it to the OldEndDate field.
func (o *ProfileChannelRateAccessCode) SetOldEndDate(v string) {
	o.OldEndDate = &v
}

func (o ProfileChannelRateAccessCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileChannelRateAccessCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rateAccessCode"] = o.RateAccessCode
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	toSerialize["active"] = o.Active
	toSerialize["accountId"] = o.AccountId
	toSerialize["accountName"] = o.AccountName
	if !IsNil(o.ProfileAccountType) {
		toSerialize["profileAccountType"] = o.ProfileAccountType
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.OldRateAccessCode) {
		toSerialize["oldRateAccessCode"] = o.OldRateAccessCode
	}
	if !IsNil(o.OldStartDate) {
		toSerialize["oldStartDate"] = o.OldStartDate
	}
	if !IsNil(o.OldEndDate) {
		toSerialize["oldEndDate"] = o.OldEndDate
	}
	return toSerialize, nil
}

func (o *ProfileChannelRateAccessCode) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"rateAccessCode",
		"active",
		"accountId",
		"accountName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfileChannelRateAccessCode := _ProfileChannelRateAccessCode{}

	err = json.Unmarshal(bytes, &varProfileChannelRateAccessCode)

	if err != nil {
		return err
	}

	*o = ProfileChannelRateAccessCode(varProfileChannelRateAccessCode)

	return err
}

type NullableProfileChannelRateAccessCode struct {
	value *ProfileChannelRateAccessCode
	isSet bool
}

func (v NullableProfileChannelRateAccessCode) Get() *ProfileChannelRateAccessCode {
	return v.value
}

func (v *NullableProfileChannelRateAccessCode) Set(val *ProfileChannelRateAccessCode) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileChannelRateAccessCode) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileChannelRateAccessCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileChannelRateAccessCode(val *ProfileChannelRateAccessCode) *NullableProfileChannelRateAccessCode {
	return &NullableProfileChannelRateAccessCode{value: val, isSet: true}
}

func (v NullableProfileChannelRateAccessCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileChannelRateAccessCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


