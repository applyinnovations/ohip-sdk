/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the MarketingTextType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingTextType{}

// MarketingTextType Information about the the Marketing text for the Channel
type MarketingTextType struct {
	BeginDate *string `json:"beginDate,omitempty"`
	// The code that identifies a Booking Channel.
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	EndDate *string `json:"endDate,omitempty"`
	GlobalTextYN *bool `json:"globalTextYN,omitempty"`
	// The code that identifies a Hotel.
	HotelId *string `json:"hotelId,omitempty"`
	MarketingText *string `json:"marketingText,omitempty"`
	NewBeginDate *string `json:"newBeginDate,omitempty"`
	NewHotelCode *string `json:"newHotelCode,omitempty"`
	NewPolicyDetail *string `json:"newPolicyDetail,omitempty"`
	NewPolicyType *string `json:"newPolicyType,omitempty"`
	NewTransactionType *string `json:"newTransactionType,omitempty"`
	PolicyDetail *string `json:"policyDetail,omitempty"`
	PolicyType *string `json:"policyType,omitempty"`
	TransactionType *string `json:"transactionType,omitempty"`
}

// NewMarketingTextType instantiates a new MarketingTextType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingTextType() *MarketingTextType {
	this := MarketingTextType{}
	return &this
}

// NewMarketingTextTypeWithDefaults instantiates a new MarketingTextType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingTextTypeWithDefaults() *MarketingTextType {
	this := MarketingTextType{}
	return &this
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *MarketingTextType) GetBeginDate() string {
	if o == nil || IsNil(o.BeginDate) {
		var ret string
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.BeginDate) {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *MarketingTextType) HasBeginDate() bool {
	if o != nil && !IsNil(o.BeginDate) {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given string and assigns it to the BeginDate field.
func (o *MarketingTextType) SetBeginDate(v string) {
	o.BeginDate = &v
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *MarketingTextType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *MarketingTextType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *MarketingTextType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MarketingTextType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MarketingTextType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *MarketingTextType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetGlobalTextYN returns the GlobalTextYN field value if set, zero value otherwise.
func (o *MarketingTextType) GetGlobalTextYN() bool {
	if o == nil || IsNil(o.GlobalTextYN) {
		var ret bool
		return ret
	}
	return *o.GlobalTextYN
}

// GetGlobalTextYNOk returns a tuple with the GlobalTextYN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetGlobalTextYNOk() (*bool, bool) {
	if o == nil || IsNil(o.GlobalTextYN) {
		return nil, false
	}
	return o.GlobalTextYN, true
}

// HasGlobalTextYN returns a boolean if a field has been set.
func (o *MarketingTextType) HasGlobalTextYN() bool {
	if o != nil && !IsNil(o.GlobalTextYN) {
		return true
	}

	return false
}

// SetGlobalTextYN gets a reference to the given bool and assigns it to the GlobalTextYN field.
func (o *MarketingTextType) SetGlobalTextYN(v bool) {
	o.GlobalTextYN = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MarketingTextType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MarketingTextType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MarketingTextType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetMarketingText returns the MarketingText field value if set, zero value otherwise.
func (o *MarketingTextType) GetMarketingText() string {
	if o == nil || IsNil(o.MarketingText) {
		var ret string
		return ret
	}
	return *o.MarketingText
}

// GetMarketingTextOk returns a tuple with the MarketingText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetMarketingTextOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingText) {
		return nil, false
	}
	return o.MarketingText, true
}

// HasMarketingText returns a boolean if a field has been set.
func (o *MarketingTextType) HasMarketingText() bool {
	if o != nil && !IsNil(o.MarketingText) {
		return true
	}

	return false
}

// SetMarketingText gets a reference to the given string and assigns it to the MarketingText field.
func (o *MarketingTextType) SetMarketingText(v string) {
	o.MarketingText = &v
}

// GetNewBeginDate returns the NewBeginDate field value if set, zero value otherwise.
func (o *MarketingTextType) GetNewBeginDate() string {
	if o == nil || IsNil(o.NewBeginDate) {
		var ret string
		return ret
	}
	return *o.NewBeginDate
}

// GetNewBeginDateOk returns a tuple with the NewBeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetNewBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.NewBeginDate) {
		return nil, false
	}
	return o.NewBeginDate, true
}

// HasNewBeginDate returns a boolean if a field has been set.
func (o *MarketingTextType) HasNewBeginDate() bool {
	if o != nil && !IsNil(o.NewBeginDate) {
		return true
	}

	return false
}

// SetNewBeginDate gets a reference to the given string and assigns it to the NewBeginDate field.
func (o *MarketingTextType) SetNewBeginDate(v string) {
	o.NewBeginDate = &v
}

// GetNewHotelCode returns the NewHotelCode field value if set, zero value otherwise.
func (o *MarketingTextType) GetNewHotelCode() string {
	if o == nil || IsNil(o.NewHotelCode) {
		var ret string
		return ret
	}
	return *o.NewHotelCode
}

// GetNewHotelCodeOk returns a tuple with the NewHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetNewHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.NewHotelCode) {
		return nil, false
	}
	return o.NewHotelCode, true
}

// HasNewHotelCode returns a boolean if a field has been set.
func (o *MarketingTextType) HasNewHotelCode() bool {
	if o != nil && !IsNil(o.NewHotelCode) {
		return true
	}

	return false
}

// SetNewHotelCode gets a reference to the given string and assigns it to the NewHotelCode field.
func (o *MarketingTextType) SetNewHotelCode(v string) {
	o.NewHotelCode = &v
}

// GetNewPolicyDetail returns the NewPolicyDetail field value if set, zero value otherwise.
func (o *MarketingTextType) GetNewPolicyDetail() string {
	if o == nil || IsNil(o.NewPolicyDetail) {
		var ret string
		return ret
	}
	return *o.NewPolicyDetail
}

// GetNewPolicyDetailOk returns a tuple with the NewPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetNewPolicyDetailOk() (*string, bool) {
	if o == nil || IsNil(o.NewPolicyDetail) {
		return nil, false
	}
	return o.NewPolicyDetail, true
}

// HasNewPolicyDetail returns a boolean if a field has been set.
func (o *MarketingTextType) HasNewPolicyDetail() bool {
	if o != nil && !IsNil(o.NewPolicyDetail) {
		return true
	}

	return false
}

// SetNewPolicyDetail gets a reference to the given string and assigns it to the NewPolicyDetail field.
func (o *MarketingTextType) SetNewPolicyDetail(v string) {
	o.NewPolicyDetail = &v
}

// GetNewPolicyType returns the NewPolicyType field value if set, zero value otherwise.
func (o *MarketingTextType) GetNewPolicyType() string {
	if o == nil || IsNil(o.NewPolicyType) {
		var ret string
		return ret
	}
	return *o.NewPolicyType
}

// GetNewPolicyTypeOk returns a tuple with the NewPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetNewPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewPolicyType) {
		return nil, false
	}
	return o.NewPolicyType, true
}

// HasNewPolicyType returns a boolean if a field has been set.
func (o *MarketingTextType) HasNewPolicyType() bool {
	if o != nil && !IsNil(o.NewPolicyType) {
		return true
	}

	return false
}

// SetNewPolicyType gets a reference to the given string and assigns it to the NewPolicyType field.
func (o *MarketingTextType) SetNewPolicyType(v string) {
	o.NewPolicyType = &v
}

// GetNewTransactionType returns the NewTransactionType field value if set, zero value otherwise.
func (o *MarketingTextType) GetNewTransactionType() string {
	if o == nil || IsNil(o.NewTransactionType) {
		var ret string
		return ret
	}
	return *o.NewTransactionType
}

// GetNewTransactionTypeOk returns a tuple with the NewTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetNewTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewTransactionType) {
		return nil, false
	}
	return o.NewTransactionType, true
}

// HasNewTransactionType returns a boolean if a field has been set.
func (o *MarketingTextType) HasNewTransactionType() bool {
	if o != nil && !IsNil(o.NewTransactionType) {
		return true
	}

	return false
}

// SetNewTransactionType gets a reference to the given string and assigns it to the NewTransactionType field.
func (o *MarketingTextType) SetNewTransactionType(v string) {
	o.NewTransactionType = &v
}

// GetPolicyDetail returns the PolicyDetail field value if set, zero value otherwise.
func (o *MarketingTextType) GetPolicyDetail() string {
	if o == nil || IsNil(o.PolicyDetail) {
		var ret string
		return ret
	}
	return *o.PolicyDetail
}

// GetPolicyDetailOk returns a tuple with the PolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetPolicyDetailOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyDetail) {
		return nil, false
	}
	return o.PolicyDetail, true
}

// HasPolicyDetail returns a boolean if a field has been set.
func (o *MarketingTextType) HasPolicyDetail() bool {
	if o != nil && !IsNil(o.PolicyDetail) {
		return true
	}

	return false
}

// SetPolicyDetail gets a reference to the given string and assigns it to the PolicyDetail field.
func (o *MarketingTextType) SetPolicyDetail(v string) {
	o.PolicyDetail = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *MarketingTextType) GetPolicyType() string {
	if o == nil || IsNil(o.PolicyType) {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *MarketingTextType) HasPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *MarketingTextType) SetPolicyType(v string) {
	o.PolicyType = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *MarketingTextType) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingTextType) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *MarketingTextType) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *MarketingTextType) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o MarketingTextType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingTextType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeginDate) {
		toSerialize["beginDate"] = o.BeginDate
	}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.GlobalTextYN) {
		toSerialize["globalTextYN"] = o.GlobalTextYN
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.MarketingText) {
		toSerialize["marketingText"] = o.MarketingText
	}
	if !IsNil(o.NewBeginDate) {
		toSerialize["newBeginDate"] = o.NewBeginDate
	}
	if !IsNil(o.NewHotelCode) {
		toSerialize["newHotelCode"] = o.NewHotelCode
	}
	if !IsNil(o.NewPolicyDetail) {
		toSerialize["newPolicyDetail"] = o.NewPolicyDetail
	}
	if !IsNil(o.NewPolicyType) {
		toSerialize["newPolicyType"] = o.NewPolicyType
	}
	if !IsNil(o.NewTransactionType) {
		toSerialize["newTransactionType"] = o.NewTransactionType
	}
	if !IsNil(o.PolicyDetail) {
		toSerialize["policyDetail"] = o.PolicyDetail
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policyType"] = o.PolicyType
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableMarketingTextType struct {
	value *MarketingTextType
	isSet bool
}

func (v NullableMarketingTextType) Get() *MarketingTextType {
	return v.value
}

func (v *NullableMarketingTextType) Set(val *MarketingTextType) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingTextType) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingTextType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingTextType(val *MarketingTextType) *NullableMarketingTextType {
	return &NullableMarketingTextType{value: val, isSet: true}
}

func (v NullableMarketingTextType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingTextType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


