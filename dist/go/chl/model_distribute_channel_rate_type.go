/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the DistributeChannelRateType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributeChannelRateType{}

// DistributeChannelRateType Information about rate codes to be distributed to a channel.
type DistributeChannelRateType struct {
	// Channel.
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	// Channel Rate Code.
	ChannelRatePlanCode *string `json:"channelRatePlanCode,omitempty"`
	// Information about rate codes to be distributed to a channel.
	DistributeChannelRateMappings []DistributeChannelRateMappingType `json:"distributeChannelRateMappings,omitempty"`
	// Negotiated channel rate details to be modified.
	NegotiatedProfiles []ChannelNegProfileType `json:"negotiatedProfiles,omitempty"`
}

// NewDistributeChannelRateType instantiates a new DistributeChannelRateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributeChannelRateType() *DistributeChannelRateType {
	this := DistributeChannelRateType{}
	return &this
}

// NewDistributeChannelRateTypeWithDefaults instantiates a new DistributeChannelRateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributeChannelRateTypeWithDefaults() *DistributeChannelRateType {
	this := DistributeChannelRateType{}
	return &this
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *DistributeChannelRateType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRateType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *DistributeChannelRateType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *DistributeChannelRateType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetChannelRatePlanCode returns the ChannelRatePlanCode field value if set, zero value otherwise.
func (o *DistributeChannelRateType) GetChannelRatePlanCode() string {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		var ret string
		return ret
	}
	return *o.ChannelRatePlanCode
}

// GetChannelRatePlanCodeOk returns a tuple with the ChannelRatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRateType) GetChannelRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		return nil, false
	}
	return o.ChannelRatePlanCode, true
}

// HasChannelRatePlanCode returns a boolean if a field has been set.
func (o *DistributeChannelRateType) HasChannelRatePlanCode() bool {
	if o != nil && !IsNil(o.ChannelRatePlanCode) {
		return true
	}

	return false
}

// SetChannelRatePlanCode gets a reference to the given string and assigns it to the ChannelRatePlanCode field.
func (o *DistributeChannelRateType) SetChannelRatePlanCode(v string) {
	o.ChannelRatePlanCode = &v
}

// GetDistributeChannelRateMappings returns the DistributeChannelRateMappings field value if set, zero value otherwise.
func (o *DistributeChannelRateType) GetDistributeChannelRateMappings() []DistributeChannelRateMappingType {
	if o == nil || IsNil(o.DistributeChannelRateMappings) {
		var ret []DistributeChannelRateMappingType
		return ret
	}
	return o.DistributeChannelRateMappings
}

// GetDistributeChannelRateMappingsOk returns a tuple with the DistributeChannelRateMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRateType) GetDistributeChannelRateMappingsOk() ([]DistributeChannelRateMappingType, bool) {
	if o == nil || IsNil(o.DistributeChannelRateMappings) {
		return nil, false
	}
	return o.DistributeChannelRateMappings, true
}

// HasDistributeChannelRateMappings returns a boolean if a field has been set.
func (o *DistributeChannelRateType) HasDistributeChannelRateMappings() bool {
	if o != nil && !IsNil(o.DistributeChannelRateMappings) {
		return true
	}

	return false
}

// SetDistributeChannelRateMappings gets a reference to the given []DistributeChannelRateMappingType and assigns it to the DistributeChannelRateMappings field.
func (o *DistributeChannelRateType) SetDistributeChannelRateMappings(v []DistributeChannelRateMappingType) {
	o.DistributeChannelRateMappings = v
}

// GetNegotiatedProfiles returns the NegotiatedProfiles field value if set, zero value otherwise.
func (o *DistributeChannelRateType) GetNegotiatedProfiles() []ChannelNegProfileType {
	if o == nil || IsNil(o.NegotiatedProfiles) {
		var ret []ChannelNegProfileType
		return ret
	}
	return o.NegotiatedProfiles
}

// GetNegotiatedProfilesOk returns a tuple with the NegotiatedProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRateType) GetNegotiatedProfilesOk() ([]ChannelNegProfileType, bool) {
	if o == nil || IsNil(o.NegotiatedProfiles) {
		return nil, false
	}
	return o.NegotiatedProfiles, true
}

// HasNegotiatedProfiles returns a boolean if a field has been set.
func (o *DistributeChannelRateType) HasNegotiatedProfiles() bool {
	if o != nil && !IsNil(o.NegotiatedProfiles) {
		return true
	}

	return false
}

// SetNegotiatedProfiles gets a reference to the given []ChannelNegProfileType and assigns it to the NegotiatedProfiles field.
func (o *DistributeChannelRateType) SetNegotiatedProfiles(v []ChannelNegProfileType) {
	o.NegotiatedProfiles = v
}

func (o DistributeChannelRateType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributeChannelRateType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.ChannelRatePlanCode) {
		toSerialize["channelRatePlanCode"] = o.ChannelRatePlanCode
	}
	if !IsNil(o.DistributeChannelRateMappings) {
		toSerialize["distributeChannelRateMappings"] = o.DistributeChannelRateMappings
	}
	if !IsNil(o.NegotiatedProfiles) {
		toSerialize["negotiatedProfiles"] = o.NegotiatedProfiles
	}
	return toSerialize, nil
}

type NullableDistributeChannelRateType struct {
	value *DistributeChannelRateType
	isSet bool
}

func (v NullableDistributeChannelRateType) Get() *DistributeChannelRateType {
	return v.value
}

func (v *NullableDistributeChannelRateType) Set(val *DistributeChannelRateType) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributeChannelRateType) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributeChannelRateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributeChannelRateType(val *DistributeChannelRateType) *NullableDistributeChannelRateType {
	return &NullableDistributeChannelRateType{value: val, isSet: true}
}

func (v NullableDistributeChannelRateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributeChannelRateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


