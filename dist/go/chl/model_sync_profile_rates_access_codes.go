/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the SyncProfileRatesAccessCodes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncProfileRatesAccessCodes{}

// SyncProfileRatesAccessCodes struct for SyncProfileRatesAccessCodes
type SyncProfileRatesAccessCodes struct {
	TargetHotels []string `json:"targetHotels,omitempty"`
	OldChannelRatesAccess *ChannelRatesAccessMain `json:"oldChannelRatesAccess,omitempty"`
	NewChannelRatesAccess *ChannelRatesAccessMain `json:"newChannelRatesAccess,omitempty"`
}

// NewSyncProfileRatesAccessCodes instantiates a new SyncProfileRatesAccessCodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncProfileRatesAccessCodes() *SyncProfileRatesAccessCodes {
	this := SyncProfileRatesAccessCodes{}
	return &this
}

// NewSyncProfileRatesAccessCodesWithDefaults instantiates a new SyncProfileRatesAccessCodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncProfileRatesAccessCodesWithDefaults() *SyncProfileRatesAccessCodes {
	this := SyncProfileRatesAccessCodes{}
	return &this
}

// GetTargetHotels returns the TargetHotels field value if set, zero value otherwise.
func (o *SyncProfileRatesAccessCodes) GetTargetHotels() []string {
	if o == nil || IsNil(o.TargetHotels) {
		var ret []string
		return ret
	}
	return o.TargetHotels
}

// GetTargetHotelsOk returns a tuple with the TargetHotels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncProfileRatesAccessCodes) GetTargetHotelsOk() ([]string, bool) {
	if o == nil || IsNil(o.TargetHotels) {
		return nil, false
	}
	return o.TargetHotels, true
}

// HasTargetHotels returns a boolean if a field has been set.
func (o *SyncProfileRatesAccessCodes) HasTargetHotels() bool {
	if o != nil && !IsNil(o.TargetHotels) {
		return true
	}

	return false
}

// SetTargetHotels gets a reference to the given []string and assigns it to the TargetHotels field.
func (o *SyncProfileRatesAccessCodes) SetTargetHotels(v []string) {
	o.TargetHotels = v
}

// GetOldChannelRatesAccess returns the OldChannelRatesAccess field value if set, zero value otherwise.
func (o *SyncProfileRatesAccessCodes) GetOldChannelRatesAccess() ChannelRatesAccessMain {
	if o == nil || IsNil(o.OldChannelRatesAccess) {
		var ret ChannelRatesAccessMain
		return ret
	}
	return *o.OldChannelRatesAccess
}

// GetOldChannelRatesAccessOk returns a tuple with the OldChannelRatesAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncProfileRatesAccessCodes) GetOldChannelRatesAccessOk() (*ChannelRatesAccessMain, bool) {
	if o == nil || IsNil(o.OldChannelRatesAccess) {
		return nil, false
	}
	return o.OldChannelRatesAccess, true
}

// HasOldChannelRatesAccess returns a boolean if a field has been set.
func (o *SyncProfileRatesAccessCodes) HasOldChannelRatesAccess() bool {
	if o != nil && !IsNil(o.OldChannelRatesAccess) {
		return true
	}

	return false
}

// SetOldChannelRatesAccess gets a reference to the given ChannelRatesAccessMain and assigns it to the OldChannelRatesAccess field.
func (o *SyncProfileRatesAccessCodes) SetOldChannelRatesAccess(v ChannelRatesAccessMain) {
	o.OldChannelRatesAccess = &v
}

// GetNewChannelRatesAccess returns the NewChannelRatesAccess field value if set, zero value otherwise.
func (o *SyncProfileRatesAccessCodes) GetNewChannelRatesAccess() ChannelRatesAccessMain {
	if o == nil || IsNil(o.NewChannelRatesAccess) {
		var ret ChannelRatesAccessMain
		return ret
	}
	return *o.NewChannelRatesAccess
}

// GetNewChannelRatesAccessOk returns a tuple with the NewChannelRatesAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncProfileRatesAccessCodes) GetNewChannelRatesAccessOk() (*ChannelRatesAccessMain, bool) {
	if o == nil || IsNil(o.NewChannelRatesAccess) {
		return nil, false
	}
	return o.NewChannelRatesAccess, true
}

// HasNewChannelRatesAccess returns a boolean if a field has been set.
func (o *SyncProfileRatesAccessCodes) HasNewChannelRatesAccess() bool {
	if o != nil && !IsNil(o.NewChannelRatesAccess) {
		return true
	}

	return false
}

// SetNewChannelRatesAccess gets a reference to the given ChannelRatesAccessMain and assigns it to the NewChannelRatesAccess field.
func (o *SyncProfileRatesAccessCodes) SetNewChannelRatesAccess(v ChannelRatesAccessMain) {
	o.NewChannelRatesAccess = &v
}

func (o SyncProfileRatesAccessCodes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncProfileRatesAccessCodes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetHotels) {
		toSerialize["targetHotels"] = o.TargetHotels
	}
	if !IsNil(o.OldChannelRatesAccess) {
		toSerialize["oldChannelRatesAccess"] = o.OldChannelRatesAccess
	}
	if !IsNil(o.NewChannelRatesAccess) {
		toSerialize["newChannelRatesAccess"] = o.NewChannelRatesAccess
	}
	return toSerialize, nil
}

type NullableSyncProfileRatesAccessCodes struct {
	value *SyncProfileRatesAccessCodes
	isSet bool
}

func (v NullableSyncProfileRatesAccessCodes) Get() *SyncProfileRatesAccessCodes {
	return v.value
}

func (v *NullableSyncProfileRatesAccessCodes) Set(val *SyncProfileRatesAccessCodes) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncProfileRatesAccessCodes) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncProfileRatesAccessCodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncProfileRatesAccessCodes(val *SyncProfileRatesAccessCodes) *NullableSyncProfileRatesAccessCodes {
	return &NullableSyncProfileRatesAccessCodes{value: val, isSet: true}
}

func (v NullableSyncProfileRatesAccessCodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncProfileRatesAccessCodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


