/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
	"fmt"
)

// checks if the ProfileChannelRatePlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileChannelRatePlan{}

// ProfileChannelRatePlan struct for ProfileChannelRatePlan
type ProfileChannelRatePlan struct {
	// Rate Plan Code (length of string must be less than or equal to 20)
	RatePlanCode string `json:"ratePlanCode"`
	// Chennel Rate Plan Code (length of string must be less than or equal to 20)
	ChannelRatePlanCode string `json:"channelRatePlanCode"`
	// ISO 8601 date Format 'YYYY-MM-DD'
	StartDate *string `json:"startDate,omitempty"`
	// ISO 8601 date Format 'YYYY-MM-DD'
	EndDate *string `json:"endDate,omitempty"`
	Active *bool `json:"active,omitempty"`
	// Channel Rate Plan Order
	ChannelRatePlanOrder *int32 `json:"channelRatePlanOrder,omitempty"`
	ChannelRateAccessCodes []ProfileChannelRateAccessCode `json:"channelRateAccessCodes"`
}

type _ProfileChannelRatePlan ProfileChannelRatePlan

// NewProfileChannelRatePlan instantiates a new ProfileChannelRatePlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileChannelRatePlan(ratePlanCode string, channelRatePlanCode string, channelRateAccessCodes []ProfileChannelRateAccessCode) *ProfileChannelRatePlan {
	this := ProfileChannelRatePlan{}
	this.RatePlanCode = ratePlanCode
	this.ChannelRatePlanCode = channelRatePlanCode
	var active bool = true
	this.Active = &active
	this.ChannelRateAccessCodes = channelRateAccessCodes
	return &this
}

// NewProfileChannelRatePlanWithDefaults instantiates a new ProfileChannelRatePlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileChannelRatePlanWithDefaults() *ProfileChannelRatePlan {
	this := ProfileChannelRatePlan{}
	var active bool = true
	this.Active = &active
	return &this
}

// GetRatePlanCode returns the RatePlanCode field value
func (o *ProfileChannelRatePlan) GetRatePlanCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetRatePlanCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RatePlanCode, true
}

// SetRatePlanCode sets field value
func (o *ProfileChannelRatePlan) SetRatePlanCode(v string) {
	o.RatePlanCode = v
}

// GetChannelRatePlanCode returns the ChannelRatePlanCode field value
func (o *ProfileChannelRatePlan) GetChannelRatePlanCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelRatePlanCode
}

// GetChannelRatePlanCodeOk returns a tuple with the ChannelRatePlanCode field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetChannelRatePlanCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelRatePlanCode, true
}

// SetChannelRatePlanCode sets field value
func (o *ProfileChannelRatePlan) SetChannelRatePlanCode(v string) {
	o.ChannelRatePlanCode = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ProfileChannelRatePlan) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ProfileChannelRatePlan) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ProfileChannelRatePlan) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ProfileChannelRatePlan) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ProfileChannelRatePlan) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ProfileChannelRatePlan) SetEndDate(v string) {
	o.EndDate = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ProfileChannelRatePlan) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ProfileChannelRatePlan) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ProfileChannelRatePlan) SetActive(v bool) {
	o.Active = &v
}

// GetChannelRatePlanOrder returns the ChannelRatePlanOrder field value if set, zero value otherwise.
func (o *ProfileChannelRatePlan) GetChannelRatePlanOrder() int32 {
	if o == nil || IsNil(o.ChannelRatePlanOrder) {
		var ret int32
		return ret
	}
	return *o.ChannelRatePlanOrder
}

// GetChannelRatePlanOrderOk returns a tuple with the ChannelRatePlanOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetChannelRatePlanOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelRatePlanOrder) {
		return nil, false
	}
	return o.ChannelRatePlanOrder, true
}

// HasChannelRatePlanOrder returns a boolean if a field has been set.
func (o *ProfileChannelRatePlan) HasChannelRatePlanOrder() bool {
	if o != nil && !IsNil(o.ChannelRatePlanOrder) {
		return true
	}

	return false
}

// SetChannelRatePlanOrder gets a reference to the given int32 and assigns it to the ChannelRatePlanOrder field.
func (o *ProfileChannelRatePlan) SetChannelRatePlanOrder(v int32) {
	o.ChannelRatePlanOrder = &v
}

// GetChannelRateAccessCodes returns the ChannelRateAccessCodes field value
func (o *ProfileChannelRatePlan) GetChannelRateAccessCodes() []ProfileChannelRateAccessCode {
	if o == nil {
		var ret []ProfileChannelRateAccessCode
		return ret
	}

	return o.ChannelRateAccessCodes
}

// GetChannelRateAccessCodesOk returns a tuple with the ChannelRateAccessCodes field value
// and a boolean to check if the value has been set.
func (o *ProfileChannelRatePlan) GetChannelRateAccessCodesOk() ([]ProfileChannelRateAccessCode, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelRateAccessCodes, true
}

// SetChannelRateAccessCodes sets field value
func (o *ProfileChannelRatePlan) SetChannelRateAccessCodes(v []ProfileChannelRateAccessCode) {
	o.ChannelRateAccessCodes = v
}

func (o ProfileChannelRatePlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileChannelRatePlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ratePlanCode"] = o.RatePlanCode
	toSerialize["channelRatePlanCode"] = o.ChannelRatePlanCode
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.ChannelRatePlanOrder) {
		toSerialize["channelRatePlanOrder"] = o.ChannelRatePlanOrder
	}
	toSerialize["channelRateAccessCodes"] = o.ChannelRateAccessCodes
	return toSerialize, nil
}

func (o *ProfileChannelRatePlan) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ratePlanCode",
		"channelRatePlanCode",
		"channelRateAccessCodes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProfileChannelRatePlan := _ProfileChannelRatePlan{}

	err = json.Unmarshal(bytes, &varProfileChannelRatePlan)

	if err != nil {
		return err
	}

	*o = ProfileChannelRatePlan(varProfileChannelRatePlan)

	return err
}

type NullableProfileChannelRatePlan struct {
	value *ProfileChannelRatePlan
	isSet bool
}

func (v NullableProfileChannelRatePlan) Get() *ProfileChannelRatePlan {
	return v.value
}

func (v *NullableProfileChannelRatePlan) Set(val *ProfileChannelRatePlan) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileChannelRatePlan) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileChannelRatePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileChannelRatePlan(val *ProfileChannelRatePlan) *NullableProfileChannelRatePlan {
	return &NullableProfileChannelRatePlan{value: val, isSet: true}
}

func (v NullableProfileChannelRatePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileChannelRatePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


