/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelHotelCodeMappingBucketType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelHotelCodeMappingBucketType{}

// ChannelHotelCodeMappingBucketType Channel-hotel mapping bucket information.
type ChannelHotelCodeMappingBucketType struct {
	// Default rate code of channel hotel.
	DefaultRateCode *string `json:"defaultRateCode,omitempty"`
	// High revenue threshold.
	HighRevenueThreshold *int32 `json:"highRevenueThreshold,omitempty"`
	// Low revenue threshold.
	LowRevenueThreshold *int32 `json:"lowRevenueThreshold,omitempty"`
}

// NewChannelHotelCodeMappingBucketType instantiates a new ChannelHotelCodeMappingBucketType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelHotelCodeMappingBucketType() *ChannelHotelCodeMappingBucketType {
	this := ChannelHotelCodeMappingBucketType{}
	return &this
}

// NewChannelHotelCodeMappingBucketTypeWithDefaults instantiates a new ChannelHotelCodeMappingBucketType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelHotelCodeMappingBucketTypeWithDefaults() *ChannelHotelCodeMappingBucketType {
	this := ChannelHotelCodeMappingBucketType{}
	return &this
}

// GetDefaultRateCode returns the DefaultRateCode field value if set, zero value otherwise.
func (o *ChannelHotelCodeMappingBucketType) GetDefaultRateCode() string {
	if o == nil || IsNil(o.DefaultRateCode) {
		var ret string
		return ret
	}
	return *o.DefaultRateCode
}

// GetDefaultRateCodeOk returns a tuple with the DefaultRateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelHotelCodeMappingBucketType) GetDefaultRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRateCode) {
		return nil, false
	}
	return o.DefaultRateCode, true
}

// HasDefaultRateCode returns a boolean if a field has been set.
func (o *ChannelHotelCodeMappingBucketType) HasDefaultRateCode() bool {
	if o != nil && !IsNil(o.DefaultRateCode) {
		return true
	}

	return false
}

// SetDefaultRateCode gets a reference to the given string and assigns it to the DefaultRateCode field.
func (o *ChannelHotelCodeMappingBucketType) SetDefaultRateCode(v string) {
	o.DefaultRateCode = &v
}

// GetHighRevenueThreshold returns the HighRevenueThreshold field value if set, zero value otherwise.
func (o *ChannelHotelCodeMappingBucketType) GetHighRevenueThreshold() int32 {
	if o == nil || IsNil(o.HighRevenueThreshold) {
		var ret int32
		return ret
	}
	return *o.HighRevenueThreshold
}

// GetHighRevenueThresholdOk returns a tuple with the HighRevenueThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelHotelCodeMappingBucketType) GetHighRevenueThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.HighRevenueThreshold) {
		return nil, false
	}
	return o.HighRevenueThreshold, true
}

// HasHighRevenueThreshold returns a boolean if a field has been set.
func (o *ChannelHotelCodeMappingBucketType) HasHighRevenueThreshold() bool {
	if o != nil && !IsNil(o.HighRevenueThreshold) {
		return true
	}

	return false
}

// SetHighRevenueThreshold gets a reference to the given int32 and assigns it to the HighRevenueThreshold field.
func (o *ChannelHotelCodeMappingBucketType) SetHighRevenueThreshold(v int32) {
	o.HighRevenueThreshold = &v
}

// GetLowRevenueThreshold returns the LowRevenueThreshold field value if set, zero value otherwise.
func (o *ChannelHotelCodeMappingBucketType) GetLowRevenueThreshold() int32 {
	if o == nil || IsNil(o.LowRevenueThreshold) {
		var ret int32
		return ret
	}
	return *o.LowRevenueThreshold
}

// GetLowRevenueThresholdOk returns a tuple with the LowRevenueThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelHotelCodeMappingBucketType) GetLowRevenueThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.LowRevenueThreshold) {
		return nil, false
	}
	return o.LowRevenueThreshold, true
}

// HasLowRevenueThreshold returns a boolean if a field has been set.
func (o *ChannelHotelCodeMappingBucketType) HasLowRevenueThreshold() bool {
	if o != nil && !IsNil(o.LowRevenueThreshold) {
		return true
	}

	return false
}

// SetLowRevenueThreshold gets a reference to the given int32 and assigns it to the LowRevenueThreshold field.
func (o *ChannelHotelCodeMappingBucketType) SetLowRevenueThreshold(v int32) {
	o.LowRevenueThreshold = &v
}

func (o ChannelHotelCodeMappingBucketType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelHotelCodeMappingBucketType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultRateCode) {
		toSerialize["defaultRateCode"] = o.DefaultRateCode
	}
	if !IsNil(o.HighRevenueThreshold) {
		toSerialize["highRevenueThreshold"] = o.HighRevenueThreshold
	}
	if !IsNil(o.LowRevenueThreshold) {
		toSerialize["lowRevenueThreshold"] = o.LowRevenueThreshold
	}
	return toSerialize, nil
}

type NullableChannelHotelCodeMappingBucketType struct {
	value *ChannelHotelCodeMappingBucketType
	isSet bool
}

func (v NullableChannelHotelCodeMappingBucketType) Get() *ChannelHotelCodeMappingBucketType {
	return v.value
}

func (v *NullableChannelHotelCodeMappingBucketType) Set(val *ChannelHotelCodeMappingBucketType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelHotelCodeMappingBucketType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelHotelCodeMappingBucketType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelHotelCodeMappingBucketType(val *ChannelHotelCodeMappingBucketType) *NullableChannelHotelCodeMappingBucketType {
	return &NullableChannelHotelCodeMappingBucketType{value: val, isSet: true}
}

func (v NullableChannelHotelCodeMappingBucketType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelHotelCodeMappingBucketType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


