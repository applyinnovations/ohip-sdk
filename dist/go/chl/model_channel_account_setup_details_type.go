/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelAccountSetupDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAccountSetupDetailsType{}

// ChannelAccountSetupDetailsType To hold channel account detailed setup information.
type ChannelAccountSetupDetailsType struct {
	HotelCodes []string `json:"hotelCodes,omitempty"`
	// Chain information where current account is configured with.
	ChainCode *string `json:"chainCode,omitempty"`
	// Holds Currency code.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	Instances []string `json:"instances,omitempty"`
	// The rebate date for the account.
	RebateDate *string `json:"rebateDate,omitempty"`
	// The date that account was marked as inactive.
	InactiveDate *string `json:"inactiveDate,omitempty"`
	// Contract End date.
	ContractEndsOn *string `json:"contractEndsOn,omitempty"`
	// Property which registered this channel account.
	RegisteredHotel *string `json:"registeredHotel,omitempty"`
}

// NewChannelAccountSetupDetailsType instantiates a new ChannelAccountSetupDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAccountSetupDetailsType() *ChannelAccountSetupDetailsType {
	this := ChannelAccountSetupDetailsType{}
	return &this
}

// NewChannelAccountSetupDetailsTypeWithDefaults instantiates a new ChannelAccountSetupDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAccountSetupDetailsTypeWithDefaults() *ChannelAccountSetupDetailsType {
	this := ChannelAccountSetupDetailsType{}
	return &this
}

// GetHotelCodes returns the HotelCodes field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetHotelCodes() []string {
	if o == nil || IsNil(o.HotelCodes) {
		var ret []string
		return ret
	}
	return o.HotelCodes
}

// GetHotelCodesOk returns a tuple with the HotelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetHotelCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.HotelCodes) {
		return nil, false
	}
	return o.HotelCodes, true
}

// HasHotelCodes returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasHotelCodes() bool {
	if o != nil && !IsNil(o.HotelCodes) {
		return true
	}

	return false
}

// SetHotelCodes gets a reference to the given []string and assigns it to the HotelCodes field.
func (o *ChannelAccountSetupDetailsType) SetHotelCodes(v []string) {
	o.HotelCodes = v
}

// GetChainCode returns the ChainCode field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetChainCode() string {
	if o == nil || IsNil(o.ChainCode) {
		var ret string
		return ret
	}
	return *o.ChainCode
}

// GetChainCodeOk returns a tuple with the ChainCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetChainCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChainCode) {
		return nil, false
	}
	return o.ChainCode, true
}

// HasChainCode returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasChainCode() bool {
	if o != nil && !IsNil(o.ChainCode) {
		return true
	}

	return false
}

// SetChainCode gets a reference to the given string and assigns it to the ChainCode field.
func (o *ChannelAccountSetupDetailsType) SetChainCode(v string) {
	o.ChainCode = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *ChannelAccountSetupDetailsType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetInstances() []string {
	if o == nil || IsNil(o.Instances) {
		var ret []string
		return ret
	}
	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetInstancesOk() ([]string, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []string and assigns it to the Instances field.
func (o *ChannelAccountSetupDetailsType) SetInstances(v []string) {
	o.Instances = v
}

// GetRebateDate returns the RebateDate field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetRebateDate() string {
	if o == nil || IsNil(o.RebateDate) {
		var ret string
		return ret
	}
	return *o.RebateDate
}

// GetRebateDateOk returns a tuple with the RebateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetRebateDateOk() (*string, bool) {
	if o == nil || IsNil(o.RebateDate) {
		return nil, false
	}
	return o.RebateDate, true
}

// HasRebateDate returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasRebateDate() bool {
	if o != nil && !IsNil(o.RebateDate) {
		return true
	}

	return false
}

// SetRebateDate gets a reference to the given string and assigns it to the RebateDate field.
func (o *ChannelAccountSetupDetailsType) SetRebateDate(v string) {
	o.RebateDate = &v
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *ChannelAccountSetupDetailsType) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetContractEndsOn returns the ContractEndsOn field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetContractEndsOn() string {
	if o == nil || IsNil(o.ContractEndsOn) {
		var ret string
		return ret
	}
	return *o.ContractEndsOn
}

// GetContractEndsOnOk returns a tuple with the ContractEndsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetContractEndsOnOk() (*string, bool) {
	if o == nil || IsNil(o.ContractEndsOn) {
		return nil, false
	}
	return o.ContractEndsOn, true
}

// HasContractEndsOn returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasContractEndsOn() bool {
	if o != nil && !IsNil(o.ContractEndsOn) {
		return true
	}

	return false
}

// SetContractEndsOn gets a reference to the given string and assigns it to the ContractEndsOn field.
func (o *ChannelAccountSetupDetailsType) SetContractEndsOn(v string) {
	o.ContractEndsOn = &v
}

// GetRegisteredHotel returns the RegisteredHotel field value if set, zero value otherwise.
func (o *ChannelAccountSetupDetailsType) GetRegisteredHotel() string {
	if o == nil || IsNil(o.RegisteredHotel) {
		var ret string
		return ret
	}
	return *o.RegisteredHotel
}

// GetRegisteredHotelOk returns a tuple with the RegisteredHotel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSetupDetailsType) GetRegisteredHotelOk() (*string, bool) {
	if o == nil || IsNil(o.RegisteredHotel) {
		return nil, false
	}
	return o.RegisteredHotel, true
}

// HasRegisteredHotel returns a boolean if a field has been set.
func (o *ChannelAccountSetupDetailsType) HasRegisteredHotel() bool {
	if o != nil && !IsNil(o.RegisteredHotel) {
		return true
	}

	return false
}

// SetRegisteredHotel gets a reference to the given string and assigns it to the RegisteredHotel field.
func (o *ChannelAccountSetupDetailsType) SetRegisteredHotel(v string) {
	o.RegisteredHotel = &v
}

func (o ChannelAccountSetupDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAccountSetupDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelCodes) {
		toSerialize["hotelCodes"] = o.HotelCodes
	}
	if !IsNil(o.ChainCode) {
		toSerialize["chainCode"] = o.ChainCode
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.RebateDate) {
		toSerialize["rebateDate"] = o.RebateDate
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if !IsNil(o.ContractEndsOn) {
		toSerialize["contractEndsOn"] = o.ContractEndsOn
	}
	if !IsNil(o.RegisteredHotel) {
		toSerialize["registeredHotel"] = o.RegisteredHotel
	}
	return toSerialize, nil
}

type NullableChannelAccountSetupDetailsType struct {
	value *ChannelAccountSetupDetailsType
	isSet bool
}

func (v NullableChannelAccountSetupDetailsType) Get() *ChannelAccountSetupDetailsType {
	return v.value
}

func (v *NullableChannelAccountSetupDetailsType) Set(val *ChannelAccountSetupDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAccountSetupDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAccountSetupDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAccountSetupDetailsType(val *ChannelAccountSetupDetailsType) *NullableChannelAccountSetupDetailsType {
	return &NullableChannelAccountSetupDetailsType{value: val, isSet: true}
}

func (v NullableChannelAccountSetupDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAccountSetupDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


