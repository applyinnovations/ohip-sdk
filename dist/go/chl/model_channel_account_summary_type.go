/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelAccountSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAccountSummaryType{}

// ChannelAccountSummaryType To hold channel account detailed information.
type ChannelAccountSummaryType struct {
	AccountDetails *ChannelAccountDetailsType `json:"accountDetails,omitempty"`
	AddressInfo *AddressInfoType `json:"addressInfo,omitempty"`
	// Collection of lamp indicators.
	ChannelAccountIndicators []IndicatorType `json:"channelAccountIndicators,omitempty"`
	// Channel account contract ends on date.
	ContractEndsOn *string `json:"contractEndsOn,omitempty"`
	EmailInfo *EmailInfoType `json:"emailInfo,omitempty"`
	// Property of the Billing Account.
	HotelId *string `json:"hotelId,omitempty"`
	Hotels []string `json:"hotels,omitempty"`
	// Indicates whether the account is inactive or not.
	Inactive *bool `json:"inactive,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	TelephoneInfo *TelephoneInfoType `json:"telephoneInfo,omitempty"`
}

// NewChannelAccountSummaryType instantiates a new ChannelAccountSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAccountSummaryType() *ChannelAccountSummaryType {
	this := ChannelAccountSummaryType{}
	return &this
}

// NewChannelAccountSummaryTypeWithDefaults instantiates a new ChannelAccountSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAccountSummaryTypeWithDefaults() *ChannelAccountSummaryType {
	this := ChannelAccountSummaryType{}
	return &this
}

// GetAccountDetails returns the AccountDetails field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetAccountDetails() ChannelAccountDetailsType {
	if o == nil || IsNil(o.AccountDetails) {
		var ret ChannelAccountDetailsType
		return ret
	}
	return *o.AccountDetails
}

// GetAccountDetailsOk returns a tuple with the AccountDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetAccountDetailsOk() (*ChannelAccountDetailsType, bool) {
	if o == nil || IsNil(o.AccountDetails) {
		return nil, false
	}
	return o.AccountDetails, true
}

// HasAccountDetails returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasAccountDetails() bool {
	if o != nil && !IsNil(o.AccountDetails) {
		return true
	}

	return false
}

// SetAccountDetails gets a reference to the given ChannelAccountDetailsType and assigns it to the AccountDetails field.
func (o *ChannelAccountSummaryType) SetAccountDetails(v ChannelAccountDetailsType) {
	o.AccountDetails = &v
}

// GetAddressInfo returns the AddressInfo field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetAddressInfo() AddressInfoType {
	if o == nil || IsNil(o.AddressInfo) {
		var ret AddressInfoType
		return ret
	}
	return *o.AddressInfo
}

// GetAddressInfoOk returns a tuple with the AddressInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetAddressInfoOk() (*AddressInfoType, bool) {
	if o == nil || IsNil(o.AddressInfo) {
		return nil, false
	}
	return o.AddressInfo, true
}

// HasAddressInfo returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasAddressInfo() bool {
	if o != nil && !IsNil(o.AddressInfo) {
		return true
	}

	return false
}

// SetAddressInfo gets a reference to the given AddressInfoType and assigns it to the AddressInfo field.
func (o *ChannelAccountSummaryType) SetAddressInfo(v AddressInfoType) {
	o.AddressInfo = &v
}

// GetChannelAccountIndicators returns the ChannelAccountIndicators field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetChannelAccountIndicators() []IndicatorType {
	if o == nil || IsNil(o.ChannelAccountIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ChannelAccountIndicators
}

// GetChannelAccountIndicatorsOk returns a tuple with the ChannelAccountIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetChannelAccountIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ChannelAccountIndicators) {
		return nil, false
	}
	return o.ChannelAccountIndicators, true
}

// HasChannelAccountIndicators returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasChannelAccountIndicators() bool {
	if o != nil && !IsNil(o.ChannelAccountIndicators) {
		return true
	}

	return false
}

// SetChannelAccountIndicators gets a reference to the given []IndicatorType and assigns it to the ChannelAccountIndicators field.
func (o *ChannelAccountSummaryType) SetChannelAccountIndicators(v []IndicatorType) {
	o.ChannelAccountIndicators = v
}

// GetContractEndsOn returns the ContractEndsOn field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetContractEndsOn() string {
	if o == nil || IsNil(o.ContractEndsOn) {
		var ret string
		return ret
	}
	return *o.ContractEndsOn
}

// GetContractEndsOnOk returns a tuple with the ContractEndsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetContractEndsOnOk() (*string, bool) {
	if o == nil || IsNil(o.ContractEndsOn) {
		return nil, false
	}
	return o.ContractEndsOn, true
}

// HasContractEndsOn returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasContractEndsOn() bool {
	if o != nil && !IsNil(o.ContractEndsOn) {
		return true
	}

	return false
}

// SetContractEndsOn gets a reference to the given string and assigns it to the ContractEndsOn field.
func (o *ChannelAccountSummaryType) SetContractEndsOn(v string) {
	o.ContractEndsOn = &v
}

// GetEmailInfo returns the EmailInfo field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetEmailInfo() EmailInfoType {
	if o == nil || IsNil(o.EmailInfo) {
		var ret EmailInfoType
		return ret
	}
	return *o.EmailInfo
}

// GetEmailInfoOk returns a tuple with the EmailInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetEmailInfoOk() (*EmailInfoType, bool) {
	if o == nil || IsNil(o.EmailInfo) {
		return nil, false
	}
	return o.EmailInfo, true
}

// HasEmailInfo returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasEmailInfo() bool {
	if o != nil && !IsNil(o.EmailInfo) {
		return true
	}

	return false
}

// SetEmailInfo gets a reference to the given EmailInfoType and assigns it to the EmailInfo field.
func (o *ChannelAccountSummaryType) SetEmailInfo(v EmailInfoType) {
	o.EmailInfo = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChannelAccountSummaryType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetHotels returns the Hotels field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetHotels() []string {
	if o == nil || IsNil(o.Hotels) {
		var ret []string
		return ret
	}
	return o.Hotels
}

// GetHotelsOk returns a tuple with the Hotels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetHotelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hotels) {
		return nil, false
	}
	return o.Hotels, true
}

// HasHotels returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasHotels() bool {
	if o != nil && !IsNil(o.Hotels) {
		return true
	}

	return false
}

// SetHotels gets a reference to the given []string and assigns it to the Hotels field.
func (o *ChannelAccountSummaryType) SetHotels(v []string) {
	o.Hotels = v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *ChannelAccountSummaryType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *ChannelAccountSummaryType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetTelephoneInfo returns the TelephoneInfo field value if set, zero value otherwise.
func (o *ChannelAccountSummaryType) GetTelephoneInfo() TelephoneInfoType {
	if o == nil || IsNil(o.TelephoneInfo) {
		var ret TelephoneInfoType
		return ret
	}
	return *o.TelephoneInfo
}

// GetTelephoneInfoOk returns a tuple with the TelephoneInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountSummaryType) GetTelephoneInfoOk() (*TelephoneInfoType, bool) {
	if o == nil || IsNil(o.TelephoneInfo) {
		return nil, false
	}
	return o.TelephoneInfo, true
}

// HasTelephoneInfo returns a boolean if a field has been set.
func (o *ChannelAccountSummaryType) HasTelephoneInfo() bool {
	if o != nil && !IsNil(o.TelephoneInfo) {
		return true
	}

	return false
}

// SetTelephoneInfo gets a reference to the given TelephoneInfoType and assigns it to the TelephoneInfo field.
func (o *ChannelAccountSummaryType) SetTelephoneInfo(v TelephoneInfoType) {
	o.TelephoneInfo = &v
}

func (o ChannelAccountSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAccountSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountDetails) {
		toSerialize["accountDetails"] = o.AccountDetails
	}
	if !IsNil(o.AddressInfo) {
		toSerialize["addressInfo"] = o.AddressInfo
	}
	if !IsNil(o.ChannelAccountIndicators) {
		toSerialize["channelAccountIndicators"] = o.ChannelAccountIndicators
	}
	if !IsNil(o.ContractEndsOn) {
		toSerialize["contractEndsOn"] = o.ContractEndsOn
	}
	if !IsNil(o.EmailInfo) {
		toSerialize["emailInfo"] = o.EmailInfo
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Hotels) {
		toSerialize["hotels"] = o.Hotels
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.TelephoneInfo) {
		toSerialize["telephoneInfo"] = o.TelephoneInfo
	}
	return toSerialize, nil
}

type NullableChannelAccountSummaryType struct {
	value *ChannelAccountSummaryType
	isSet bool
}

func (v NullableChannelAccountSummaryType) Get() *ChannelAccountSummaryType {
	return v.value
}

func (v *NullableChannelAccountSummaryType) Set(val *ChannelAccountSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAccountSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAccountSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAccountSummaryType(val *ChannelAccountSummaryType) *NullableChannelAccountSummaryType {
	return &NullableChannelAccountSummaryType{value: val, isSet: true}
}

func (v NullableChannelAccountSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAccountSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


