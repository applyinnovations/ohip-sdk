/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the PublishRatePlanType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublishRatePlanType{}

// PublishRatePlanType Information to publish a new rate code.
type PublishRatePlanType struct {
	// Date from which rate code will be effective on the channel.
	BeginDate *string `json:"beginDate,omitempty"`
	// The target channel to send the updated rate information to the external channel.
	Channel *string `json:"channel,omitempty"`
	ChannelCodes *PublishRatePlanTypeChannelCodes `json:"channelCodes,omitempty"`
	// Date on which rate code will cease to be effective.
	EndDate *string `json:"endDate,omitempty"`
	HotelCodes *PublishRatePlanTypeHotelCodes `json:"hotelCodes,omitempty"`
	// The source Property to send the updated rate information to the external channel.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewPublishRatePlanType instantiates a new PublishRatePlanType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishRatePlanType() *PublishRatePlanType {
	this := PublishRatePlanType{}
	return &this
}

// NewPublishRatePlanTypeWithDefaults instantiates a new PublishRatePlanType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishRatePlanTypeWithDefaults() *PublishRatePlanType {
	this := PublishRatePlanType{}
	return &this
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetBeginDate() string {
	if o == nil || IsNil(o.BeginDate) {
		var ret string
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetBeginDateOk() (*string, bool) {
	if o == nil || IsNil(o.BeginDate) {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasBeginDate() bool {
	if o != nil && !IsNil(o.BeginDate) {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given string and assigns it to the BeginDate field.
func (o *PublishRatePlanType) SetBeginDate(v string) {
	o.BeginDate = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *PublishRatePlanType) SetChannel(v string) {
	o.Channel = &v
}

// GetChannelCodes returns the ChannelCodes field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetChannelCodes() PublishRatePlanTypeChannelCodes {
	if o == nil || IsNil(o.ChannelCodes) {
		var ret PublishRatePlanTypeChannelCodes
		return ret
	}
	return *o.ChannelCodes
}

// GetChannelCodesOk returns a tuple with the ChannelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetChannelCodesOk() (*PublishRatePlanTypeChannelCodes, bool) {
	if o == nil || IsNil(o.ChannelCodes) {
		return nil, false
	}
	return o.ChannelCodes, true
}

// HasChannelCodes returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasChannelCodes() bool {
	if o != nil && !IsNil(o.ChannelCodes) {
		return true
	}

	return false
}

// SetChannelCodes gets a reference to the given PublishRatePlanTypeChannelCodes and assigns it to the ChannelCodes field.
func (o *PublishRatePlanType) SetChannelCodes(v PublishRatePlanTypeChannelCodes) {
	o.ChannelCodes = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *PublishRatePlanType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetHotelCodes returns the HotelCodes field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetHotelCodes() PublishRatePlanTypeHotelCodes {
	if o == nil || IsNil(o.HotelCodes) {
		var ret PublishRatePlanTypeHotelCodes
		return ret
	}
	return *o.HotelCodes
}

// GetHotelCodesOk returns a tuple with the HotelCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetHotelCodesOk() (*PublishRatePlanTypeHotelCodes, bool) {
	if o == nil || IsNil(o.HotelCodes) {
		return nil, false
	}
	return o.HotelCodes, true
}

// HasHotelCodes returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasHotelCodes() bool {
	if o != nil && !IsNil(o.HotelCodes) {
		return true
	}

	return false
}

// SetHotelCodes gets a reference to the given PublishRatePlanTypeHotelCodes and assigns it to the HotelCodes field.
func (o *PublishRatePlanType) SetHotelCodes(v PublishRatePlanTypeHotelCodes) {
	o.HotelCodes = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PublishRatePlanType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishRatePlanType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PublishRatePlanType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PublishRatePlanType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o PublishRatePlanType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublishRatePlanType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeginDate) {
		toSerialize["beginDate"] = o.BeginDate
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.ChannelCodes) {
		toSerialize["channelCodes"] = o.ChannelCodes
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.HotelCodes) {
		toSerialize["hotelCodes"] = o.HotelCodes
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullablePublishRatePlanType struct {
	value *PublishRatePlanType
	isSet bool
}

func (v NullablePublishRatePlanType) Get() *PublishRatePlanType {
	return v.value
}

func (v *NullablePublishRatePlanType) Set(val *PublishRatePlanType) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishRatePlanType) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishRatePlanType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishRatePlanType(val *PublishRatePlanType) *NullablePublishRatePlanType {
	return &NullablePublishRatePlanType{value: val, isSet: true}
}

func (v NullablePublishRatePlanType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishRatePlanType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


