/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the PropertyMappingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertyMappingType{}

// PropertyMappingType Base external system mapping info.
type PropertyMappingType struct {
	SystemInfo *SystemInfoType `json:"systemInfo,omitempty"`
	// Initial Upload or not.
	InitialUpload *bool `json:"initialUpload,omitempty"`
	// Code used inside the OPERA System
	LocalSystemCode *string `json:"localSystemCode,omitempty"`
	// Code used in the External System
	ExternalSystemCode *string `json:"externalSystemCode,omitempty"`
	// Detailed Description of the given entity.
	Description *string `json:"description,omitempty"`
	DateRange *TimeSpanType `json:"dateRange,omitempty"`
	// City code of the channel hotel.
	City *string `json:"city,omitempty"`
	// Maximum room limit for the channel hotel reservation.
	RoomLimit *int32 `json:"roomLimit,omitempty"`
	// Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.
	BookingLimit *int32 `json:"bookingLimit,omitempty"`
	// Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.
	HotelChainId *string `json:"hotelChainId,omitempty"`
	// Chain code for the channel-hotel mapping.
	ChainCode *string `json:"chainCode,omitempty"`
	// Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.
	PrevailingRates *bool `json:"prevailingRates,omitempty"`
	// ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.
	ARIEnabled *bool `json:"aRIEnabled,omitempty"`
	// External system Add-on license. This is mandatory when Channel Type is ADS.
	AddOnLicense *string `json:"addOnLicense,omitempty"`
	ChannelHotelCodeMappingBuckets *ChannelHotelCodeMappingBucketsType `json:"channelHotelCodeMappingBuckets,omitempty"`
}

// NewPropertyMappingType instantiates a new PropertyMappingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyMappingType() *PropertyMappingType {
	this := PropertyMappingType{}
	return &this
}

// NewPropertyMappingTypeWithDefaults instantiates a new PropertyMappingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyMappingTypeWithDefaults() *PropertyMappingType {
	this := PropertyMappingType{}
	return &this
}

// GetSystemInfo returns the SystemInfo field value if set, zero value otherwise.
func (o *PropertyMappingType) GetSystemInfo() SystemInfoType {
	if o == nil || IsNil(o.SystemInfo) {
		var ret SystemInfoType
		return ret
	}
	return *o.SystemInfo
}

// GetSystemInfoOk returns a tuple with the SystemInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetSystemInfoOk() (*SystemInfoType, bool) {
	if o == nil || IsNil(o.SystemInfo) {
		return nil, false
	}
	return o.SystemInfo, true
}

// HasSystemInfo returns a boolean if a field has been set.
func (o *PropertyMappingType) HasSystemInfo() bool {
	if o != nil && !IsNil(o.SystemInfo) {
		return true
	}

	return false
}

// SetSystemInfo gets a reference to the given SystemInfoType and assigns it to the SystemInfo field.
func (o *PropertyMappingType) SetSystemInfo(v SystemInfoType) {
	o.SystemInfo = &v
}

// GetInitialUpload returns the InitialUpload field value if set, zero value otherwise.
func (o *PropertyMappingType) GetInitialUpload() bool {
	if o == nil || IsNil(o.InitialUpload) {
		var ret bool
		return ret
	}
	return *o.InitialUpload
}

// GetInitialUploadOk returns a tuple with the InitialUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetInitialUploadOk() (*bool, bool) {
	if o == nil || IsNil(o.InitialUpload) {
		return nil, false
	}
	return o.InitialUpload, true
}

// HasInitialUpload returns a boolean if a field has been set.
func (o *PropertyMappingType) HasInitialUpload() bool {
	if o != nil && !IsNil(o.InitialUpload) {
		return true
	}

	return false
}

// SetInitialUpload gets a reference to the given bool and assigns it to the InitialUpload field.
func (o *PropertyMappingType) SetInitialUpload(v bool) {
	o.InitialUpload = &v
}

// GetLocalSystemCode returns the LocalSystemCode field value if set, zero value otherwise.
func (o *PropertyMappingType) GetLocalSystemCode() string {
	if o == nil || IsNil(o.LocalSystemCode) {
		var ret string
		return ret
	}
	return *o.LocalSystemCode
}

// GetLocalSystemCodeOk returns a tuple with the LocalSystemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetLocalSystemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocalSystemCode) {
		return nil, false
	}
	return o.LocalSystemCode, true
}

// HasLocalSystemCode returns a boolean if a field has been set.
func (o *PropertyMappingType) HasLocalSystemCode() bool {
	if o != nil && !IsNil(o.LocalSystemCode) {
		return true
	}

	return false
}

// SetLocalSystemCode gets a reference to the given string and assigns it to the LocalSystemCode field.
func (o *PropertyMappingType) SetLocalSystemCode(v string) {
	o.LocalSystemCode = &v
}

// GetExternalSystemCode returns the ExternalSystemCode field value if set, zero value otherwise.
func (o *PropertyMappingType) GetExternalSystemCode() string {
	if o == nil || IsNil(o.ExternalSystemCode) {
		var ret string
		return ret
	}
	return *o.ExternalSystemCode
}

// GetExternalSystemCodeOk returns a tuple with the ExternalSystemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetExternalSystemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSystemCode) {
		return nil, false
	}
	return o.ExternalSystemCode, true
}

// HasExternalSystemCode returns a boolean if a field has been set.
func (o *PropertyMappingType) HasExternalSystemCode() bool {
	if o != nil && !IsNil(o.ExternalSystemCode) {
		return true
	}

	return false
}

// SetExternalSystemCode gets a reference to the given string and assigns it to the ExternalSystemCode field.
func (o *PropertyMappingType) SetExternalSystemCode(v string) {
	o.ExternalSystemCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PropertyMappingType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PropertyMappingType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PropertyMappingType) SetDescription(v string) {
	o.Description = &v
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *PropertyMappingType) GetDateRange() TimeSpanType {
	if o == nil || IsNil(o.DateRange) {
		var ret TimeSpanType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetDateRangeOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *PropertyMappingType) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given TimeSpanType and assigns it to the DateRange field.
func (o *PropertyMappingType) SetDateRange(v TimeSpanType) {
	o.DateRange = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PropertyMappingType) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PropertyMappingType) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PropertyMappingType) SetCity(v string) {
	o.City = &v
}

// GetRoomLimit returns the RoomLimit field value if set, zero value otherwise.
func (o *PropertyMappingType) GetRoomLimit() int32 {
	if o == nil || IsNil(o.RoomLimit) {
		var ret int32
		return ret
	}
	return *o.RoomLimit
}

// GetRoomLimitOk returns a tuple with the RoomLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetRoomLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomLimit) {
		return nil, false
	}
	return o.RoomLimit, true
}

// HasRoomLimit returns a boolean if a field has been set.
func (o *PropertyMappingType) HasRoomLimit() bool {
	if o != nil && !IsNil(o.RoomLimit) {
		return true
	}

	return false
}

// SetRoomLimit gets a reference to the given int32 and assigns it to the RoomLimit field.
func (o *PropertyMappingType) SetRoomLimit(v int32) {
	o.RoomLimit = &v
}

// GetBookingLimit returns the BookingLimit field value if set, zero value otherwise.
func (o *PropertyMappingType) GetBookingLimit() int32 {
	if o == nil || IsNil(o.BookingLimit) {
		var ret int32
		return ret
	}
	return *o.BookingLimit
}

// GetBookingLimitOk returns a tuple with the BookingLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetBookingLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.BookingLimit) {
		return nil, false
	}
	return o.BookingLimit, true
}

// HasBookingLimit returns a boolean if a field has been set.
func (o *PropertyMappingType) HasBookingLimit() bool {
	if o != nil && !IsNil(o.BookingLimit) {
		return true
	}

	return false
}

// SetBookingLimit gets a reference to the given int32 and assigns it to the BookingLimit field.
func (o *PropertyMappingType) SetBookingLimit(v int32) {
	o.BookingLimit = &v
}

// GetHotelChainId returns the HotelChainId field value if set, zero value otherwise.
func (o *PropertyMappingType) GetHotelChainId() string {
	if o == nil || IsNil(o.HotelChainId) {
		var ret string
		return ret
	}
	return *o.HotelChainId
}

// GetHotelChainIdOk returns a tuple with the HotelChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetHotelChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelChainId) {
		return nil, false
	}
	return o.HotelChainId, true
}

// HasHotelChainId returns a boolean if a field has been set.
func (o *PropertyMappingType) HasHotelChainId() bool {
	if o != nil && !IsNil(o.HotelChainId) {
		return true
	}

	return false
}

// SetHotelChainId gets a reference to the given string and assigns it to the HotelChainId field.
func (o *PropertyMappingType) SetHotelChainId(v string) {
	o.HotelChainId = &v
}

// GetChainCode returns the ChainCode field value if set, zero value otherwise.
func (o *PropertyMappingType) GetChainCode() string {
	if o == nil || IsNil(o.ChainCode) {
		var ret string
		return ret
	}
	return *o.ChainCode
}

// GetChainCodeOk returns a tuple with the ChainCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetChainCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChainCode) {
		return nil, false
	}
	return o.ChainCode, true
}

// HasChainCode returns a boolean if a field has been set.
func (o *PropertyMappingType) HasChainCode() bool {
	if o != nil && !IsNil(o.ChainCode) {
		return true
	}

	return false
}

// SetChainCode gets a reference to the given string and assigns it to the ChainCode field.
func (o *PropertyMappingType) SetChainCode(v string) {
	o.ChainCode = &v
}

// GetPrevailingRates returns the PrevailingRates field value if set, zero value otherwise.
func (o *PropertyMappingType) GetPrevailingRates() bool {
	if o == nil || IsNil(o.PrevailingRates) {
		var ret bool
		return ret
	}
	return *o.PrevailingRates
}

// GetPrevailingRatesOk returns a tuple with the PrevailingRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetPrevailingRatesOk() (*bool, bool) {
	if o == nil || IsNil(o.PrevailingRates) {
		return nil, false
	}
	return o.PrevailingRates, true
}

// HasPrevailingRates returns a boolean if a field has been set.
func (o *PropertyMappingType) HasPrevailingRates() bool {
	if o != nil && !IsNil(o.PrevailingRates) {
		return true
	}

	return false
}

// SetPrevailingRates gets a reference to the given bool and assigns it to the PrevailingRates field.
func (o *PropertyMappingType) SetPrevailingRates(v bool) {
	o.PrevailingRates = &v
}

// GetARIEnabled returns the ARIEnabled field value if set, zero value otherwise.
func (o *PropertyMappingType) GetARIEnabled() bool {
	if o == nil || IsNil(o.ARIEnabled) {
		var ret bool
		return ret
	}
	return *o.ARIEnabled
}

// GetARIEnabledOk returns a tuple with the ARIEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetARIEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ARIEnabled) {
		return nil, false
	}
	return o.ARIEnabled, true
}

// HasARIEnabled returns a boolean if a field has been set.
func (o *PropertyMappingType) HasARIEnabled() bool {
	if o != nil && !IsNil(o.ARIEnabled) {
		return true
	}

	return false
}

// SetARIEnabled gets a reference to the given bool and assigns it to the ARIEnabled field.
func (o *PropertyMappingType) SetARIEnabled(v bool) {
	o.ARIEnabled = &v
}

// GetAddOnLicense returns the AddOnLicense field value if set, zero value otherwise.
func (o *PropertyMappingType) GetAddOnLicense() string {
	if o == nil || IsNil(o.AddOnLicense) {
		var ret string
		return ret
	}
	return *o.AddOnLicense
}

// GetAddOnLicenseOk returns a tuple with the AddOnLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetAddOnLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.AddOnLicense) {
		return nil, false
	}
	return o.AddOnLicense, true
}

// HasAddOnLicense returns a boolean if a field has been set.
func (o *PropertyMappingType) HasAddOnLicense() bool {
	if o != nil && !IsNil(o.AddOnLicense) {
		return true
	}

	return false
}

// SetAddOnLicense gets a reference to the given string and assigns it to the AddOnLicense field.
func (o *PropertyMappingType) SetAddOnLicense(v string) {
	o.AddOnLicense = &v
}

// GetChannelHotelCodeMappingBuckets returns the ChannelHotelCodeMappingBuckets field value if set, zero value otherwise.
func (o *PropertyMappingType) GetChannelHotelCodeMappingBuckets() ChannelHotelCodeMappingBucketsType {
	if o == nil || IsNil(o.ChannelHotelCodeMappingBuckets) {
		var ret ChannelHotelCodeMappingBucketsType
		return ret
	}
	return *o.ChannelHotelCodeMappingBuckets
}

// GetChannelHotelCodeMappingBucketsOk returns a tuple with the ChannelHotelCodeMappingBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyMappingType) GetChannelHotelCodeMappingBucketsOk() (*ChannelHotelCodeMappingBucketsType, bool) {
	if o == nil || IsNil(o.ChannelHotelCodeMappingBuckets) {
		return nil, false
	}
	return o.ChannelHotelCodeMappingBuckets, true
}

// HasChannelHotelCodeMappingBuckets returns a boolean if a field has been set.
func (o *PropertyMappingType) HasChannelHotelCodeMappingBuckets() bool {
	if o != nil && !IsNil(o.ChannelHotelCodeMappingBuckets) {
		return true
	}

	return false
}

// SetChannelHotelCodeMappingBuckets gets a reference to the given ChannelHotelCodeMappingBucketsType and assigns it to the ChannelHotelCodeMappingBuckets field.
func (o *PropertyMappingType) SetChannelHotelCodeMappingBuckets(v ChannelHotelCodeMappingBucketsType) {
	o.ChannelHotelCodeMappingBuckets = &v
}

func (o PropertyMappingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertyMappingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemInfo) {
		toSerialize["systemInfo"] = o.SystemInfo
	}
	if !IsNil(o.InitialUpload) {
		toSerialize["initialUpload"] = o.InitialUpload
	}
	if !IsNil(o.LocalSystemCode) {
		toSerialize["localSystemCode"] = o.LocalSystemCode
	}
	if !IsNil(o.ExternalSystemCode) {
		toSerialize["externalSystemCode"] = o.ExternalSystemCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.RoomLimit) {
		toSerialize["roomLimit"] = o.RoomLimit
	}
	if !IsNil(o.BookingLimit) {
		toSerialize["bookingLimit"] = o.BookingLimit
	}
	if !IsNil(o.HotelChainId) {
		toSerialize["hotelChainId"] = o.HotelChainId
	}
	if !IsNil(o.ChainCode) {
		toSerialize["chainCode"] = o.ChainCode
	}
	if !IsNil(o.PrevailingRates) {
		toSerialize["prevailingRates"] = o.PrevailingRates
	}
	if !IsNil(o.ARIEnabled) {
		toSerialize["aRIEnabled"] = o.ARIEnabled
	}
	if !IsNil(o.AddOnLicense) {
		toSerialize["addOnLicense"] = o.AddOnLicense
	}
	if !IsNil(o.ChannelHotelCodeMappingBuckets) {
		toSerialize["channelHotelCodeMappingBuckets"] = o.ChannelHotelCodeMappingBuckets
	}
	return toSerialize, nil
}

type NullablePropertyMappingType struct {
	value *PropertyMappingType
	isSet bool
}

func (v NullablePropertyMappingType) Get() *PropertyMappingType {
	return v.value
}

func (v *NullablePropertyMappingType) Set(val *PropertyMappingType) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyMappingType) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyMappingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyMappingType(val *PropertyMappingType) *NullablePropertyMappingType {
	return &NullablePropertyMappingType{value: val, isSet: true}
}

func (v NullablePropertyMappingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyMappingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


