/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRoomMappingSourceDescriptionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRoomMappingSourceDescriptionsType{}

// ChannelRoomMappingSourceDescriptionsType Hotel-channel room type mapping source descriptions.
type ChannelRoomMappingSourceDescriptionsType struct {
	// Hotel room type description.
	Description *string `json:"description,omitempty"`
	GlobalDescription *ChannelMappingEnhancedDescriptionType `json:"globalDescription,omitempty"`
	// Hotel code the descriptions belong to.
	HotelId *string `json:"hotelId,omitempty"`
	// Room type the descriptions belong to.
	RoomType *string `json:"roomType,omitempty"`
}

// NewChannelRoomMappingSourceDescriptionsType instantiates a new ChannelRoomMappingSourceDescriptionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRoomMappingSourceDescriptionsType() *ChannelRoomMappingSourceDescriptionsType {
	this := ChannelRoomMappingSourceDescriptionsType{}
	return &this
}

// NewChannelRoomMappingSourceDescriptionsTypeWithDefaults instantiates a new ChannelRoomMappingSourceDescriptionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRoomMappingSourceDescriptionsTypeWithDefaults() *ChannelRoomMappingSourceDescriptionsType {
	this := ChannelRoomMappingSourceDescriptionsType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelRoomMappingSourceDescriptionsType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelRoomMappingSourceDescriptionsType) SetDescription(v string) {
	o.Description = &v
}

// GetGlobalDescription returns the GlobalDescription field value if set, zero value otherwise.
func (o *ChannelRoomMappingSourceDescriptionsType) GetGlobalDescription() ChannelMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.GlobalDescription) {
		var ret ChannelMappingEnhancedDescriptionType
		return ret
	}
	return *o.GlobalDescription
}

// GetGlobalDescriptionOk returns a tuple with the GlobalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) GetGlobalDescriptionOk() (*ChannelMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.GlobalDescription) {
		return nil, false
	}
	return o.GlobalDescription, true
}

// HasGlobalDescription returns a boolean if a field has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) HasGlobalDescription() bool {
	if o != nil && !IsNil(o.GlobalDescription) {
		return true
	}

	return false
}

// SetGlobalDescription gets a reference to the given ChannelMappingEnhancedDescriptionType and assigns it to the GlobalDescription field.
func (o *ChannelRoomMappingSourceDescriptionsType) SetGlobalDescription(v ChannelMappingEnhancedDescriptionType) {
	o.GlobalDescription = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChannelRoomMappingSourceDescriptionsType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChannelRoomMappingSourceDescriptionsType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *ChannelRoomMappingSourceDescriptionsType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *ChannelRoomMappingSourceDescriptionsType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *ChannelRoomMappingSourceDescriptionsType) SetRoomType(v string) {
	o.RoomType = &v
}

func (o ChannelRoomMappingSourceDescriptionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRoomMappingSourceDescriptionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GlobalDescription) {
		toSerialize["globalDescription"] = o.GlobalDescription
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	return toSerialize, nil
}

type NullableChannelRoomMappingSourceDescriptionsType struct {
	value *ChannelRoomMappingSourceDescriptionsType
	isSet bool
}

func (v NullableChannelRoomMappingSourceDescriptionsType) Get() *ChannelRoomMappingSourceDescriptionsType {
	return v.value
}

func (v *NullableChannelRoomMappingSourceDescriptionsType) Set(val *ChannelRoomMappingSourceDescriptionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRoomMappingSourceDescriptionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRoomMappingSourceDescriptionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRoomMappingSourceDescriptionsType(val *ChannelRoomMappingSourceDescriptionsType) *NullableChannelRoomMappingSourceDescriptionsType {
	return &NullableChannelRoomMappingSourceDescriptionsType{value: val, isSet: true}
}

func (v NullableChannelRoomMappingSourceDescriptionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRoomMappingSourceDescriptionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


