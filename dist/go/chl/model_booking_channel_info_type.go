/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the BookingChannelInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookingChannelInfoType{}

// BookingChannelInfoType struct for BookingChannelInfoType
type BookingChannelInfoType struct {
	// Hotel Code mapping for the Booking Channel.
	HotelMappings []HotelMappingType `json:"hotelMappings,omitempty"`
	// Collection of generic Name-Value-Pair parameters.
	ConfigurationParameters []ParameterType `json:"configurationParameters,omitempty"`
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	Name *string `json:"name,omitempty"`
	BookingChannelType *string `json:"bookingChannelType,omitempty"`
}

// NewBookingChannelInfoType instantiates a new BookingChannelInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingChannelInfoType() *BookingChannelInfoType {
	this := BookingChannelInfoType{}
	return &this
}

// NewBookingChannelInfoTypeWithDefaults instantiates a new BookingChannelInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingChannelInfoTypeWithDefaults() *BookingChannelInfoType {
	this := BookingChannelInfoType{}
	return &this
}

// GetHotelMappings returns the HotelMappings field value if set, zero value otherwise.
func (o *BookingChannelInfoType) GetHotelMappings() []HotelMappingType {
	if o == nil || IsNil(o.HotelMappings) {
		var ret []HotelMappingType
		return ret
	}
	return o.HotelMappings
}

// GetHotelMappingsOk returns a tuple with the HotelMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelInfoType) GetHotelMappingsOk() ([]HotelMappingType, bool) {
	if o == nil || IsNil(o.HotelMappings) {
		return nil, false
	}
	return o.HotelMappings, true
}

// HasHotelMappings returns a boolean if a field has been set.
func (o *BookingChannelInfoType) HasHotelMappings() bool {
	if o != nil && !IsNil(o.HotelMappings) {
		return true
	}

	return false
}

// SetHotelMappings gets a reference to the given []HotelMappingType and assigns it to the HotelMappings field.
func (o *BookingChannelInfoType) SetHotelMappings(v []HotelMappingType) {
	o.HotelMappings = v
}

// GetConfigurationParameters returns the ConfigurationParameters field value if set, zero value otherwise.
func (o *BookingChannelInfoType) GetConfigurationParameters() []ParameterType {
	if o == nil || IsNil(o.ConfigurationParameters) {
		var ret []ParameterType
		return ret
	}
	return o.ConfigurationParameters
}

// GetConfigurationParametersOk returns a tuple with the ConfigurationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelInfoType) GetConfigurationParametersOk() ([]ParameterType, bool) {
	if o == nil || IsNil(o.ConfigurationParameters) {
		return nil, false
	}
	return o.ConfigurationParameters, true
}

// HasConfigurationParameters returns a boolean if a field has been set.
func (o *BookingChannelInfoType) HasConfigurationParameters() bool {
	if o != nil && !IsNil(o.ConfigurationParameters) {
		return true
	}

	return false
}

// SetConfigurationParameters gets a reference to the given []ParameterType and assigns it to the ConfigurationParameters field.
func (o *BookingChannelInfoType) SetConfigurationParameters(v []ParameterType) {
	o.ConfigurationParameters = v
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *BookingChannelInfoType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelInfoType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *BookingChannelInfoType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *BookingChannelInfoType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BookingChannelInfoType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelInfoType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BookingChannelInfoType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BookingChannelInfoType) SetName(v string) {
	o.Name = &v
}

// GetBookingChannelType returns the BookingChannelType field value if set, zero value otherwise.
func (o *BookingChannelInfoType) GetBookingChannelType() string {
	if o == nil || IsNil(o.BookingChannelType) {
		var ret string
		return ret
	}
	return *o.BookingChannelType
}

// GetBookingChannelTypeOk returns a tuple with the BookingChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingChannelInfoType) GetBookingChannelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelType) {
		return nil, false
	}
	return o.BookingChannelType, true
}

// HasBookingChannelType returns a boolean if a field has been set.
func (o *BookingChannelInfoType) HasBookingChannelType() bool {
	if o != nil && !IsNil(o.BookingChannelType) {
		return true
	}

	return false
}

// SetBookingChannelType gets a reference to the given string and assigns it to the BookingChannelType field.
func (o *BookingChannelInfoType) SetBookingChannelType(v string) {
	o.BookingChannelType = &v
}

func (o BookingChannelInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingChannelInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelMappings) {
		toSerialize["hotelMappings"] = o.HotelMappings
	}
	if !IsNil(o.ConfigurationParameters) {
		toSerialize["configurationParameters"] = o.ConfigurationParameters
	}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BookingChannelType) {
		toSerialize["bookingChannelType"] = o.BookingChannelType
	}
	return toSerialize, nil
}

type NullableBookingChannelInfoType struct {
	value *BookingChannelInfoType
	isSet bool
}

func (v NullableBookingChannelInfoType) Get() *BookingChannelInfoType {
	return v.value
}

func (v *NullableBookingChannelInfoType) Set(val *BookingChannelInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingChannelInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingChannelInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingChannelInfoType(val *BookingChannelInfoType) *NullableBookingChannelInfoType {
	return &NullableBookingChannelInfoType{value: val, isSet: true}
}

func (v NullableBookingChannelInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingChannelInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


