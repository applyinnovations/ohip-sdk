/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelNegRateAccessDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelNegRateAccessDetailType{}

// ChannelNegRateAccessDetailType struct for ChannelNegRateAccessDetailType
type ChannelNegRateAccessDetailType struct {
	ChannelRatePlanCodeOrder *int32 `json:"channelRatePlanCodeOrder,omitempty"`
	NewAccessCode *string `json:"newAccessCode,omitempty"`
	NewTimeSpan *TimeSpanType `json:"newTimeSpan,omitempty"`
}

// NewChannelNegRateAccessDetailType instantiates a new ChannelNegRateAccessDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelNegRateAccessDetailType() *ChannelNegRateAccessDetailType {
	this := ChannelNegRateAccessDetailType{}
	return &this
}

// NewChannelNegRateAccessDetailTypeWithDefaults instantiates a new ChannelNegRateAccessDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelNegRateAccessDetailTypeWithDefaults() *ChannelNegRateAccessDetailType {
	this := ChannelNegRateAccessDetailType{}
	return &this
}

// GetChannelRatePlanCodeOrder returns the ChannelRatePlanCodeOrder field value if set, zero value otherwise.
func (o *ChannelNegRateAccessDetailType) GetChannelRatePlanCodeOrder() int32 {
	if o == nil || IsNil(o.ChannelRatePlanCodeOrder) {
		var ret int32
		return ret
	}
	return *o.ChannelRatePlanCodeOrder
}

// GetChannelRatePlanCodeOrderOk returns a tuple with the ChannelRatePlanCodeOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelNegRateAccessDetailType) GetChannelRatePlanCodeOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelRatePlanCodeOrder) {
		return nil, false
	}
	return o.ChannelRatePlanCodeOrder, true
}

// HasChannelRatePlanCodeOrder returns a boolean if a field has been set.
func (o *ChannelNegRateAccessDetailType) HasChannelRatePlanCodeOrder() bool {
	if o != nil && !IsNil(o.ChannelRatePlanCodeOrder) {
		return true
	}

	return false
}

// SetChannelRatePlanCodeOrder gets a reference to the given int32 and assigns it to the ChannelRatePlanCodeOrder field.
func (o *ChannelNegRateAccessDetailType) SetChannelRatePlanCodeOrder(v int32) {
	o.ChannelRatePlanCodeOrder = &v
}

// GetNewAccessCode returns the NewAccessCode field value if set, zero value otherwise.
func (o *ChannelNegRateAccessDetailType) GetNewAccessCode() string {
	if o == nil || IsNil(o.NewAccessCode) {
		var ret string
		return ret
	}
	return *o.NewAccessCode
}

// GetNewAccessCodeOk returns a tuple with the NewAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelNegRateAccessDetailType) GetNewAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.NewAccessCode) {
		return nil, false
	}
	return o.NewAccessCode, true
}

// HasNewAccessCode returns a boolean if a field has been set.
func (o *ChannelNegRateAccessDetailType) HasNewAccessCode() bool {
	if o != nil && !IsNil(o.NewAccessCode) {
		return true
	}

	return false
}

// SetNewAccessCode gets a reference to the given string and assigns it to the NewAccessCode field.
func (o *ChannelNegRateAccessDetailType) SetNewAccessCode(v string) {
	o.NewAccessCode = &v
}

// GetNewTimeSpan returns the NewTimeSpan field value if set, zero value otherwise.
func (o *ChannelNegRateAccessDetailType) GetNewTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.NewTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.NewTimeSpan
}

// GetNewTimeSpanOk returns a tuple with the NewTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelNegRateAccessDetailType) GetNewTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.NewTimeSpan) {
		return nil, false
	}
	return o.NewTimeSpan, true
}

// HasNewTimeSpan returns a boolean if a field has been set.
func (o *ChannelNegRateAccessDetailType) HasNewTimeSpan() bool {
	if o != nil && !IsNil(o.NewTimeSpan) {
		return true
	}

	return false
}

// SetNewTimeSpan gets a reference to the given TimeSpanType and assigns it to the NewTimeSpan field.
func (o *ChannelNegRateAccessDetailType) SetNewTimeSpan(v TimeSpanType) {
	o.NewTimeSpan = &v
}

func (o ChannelNegRateAccessDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelNegRateAccessDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelRatePlanCodeOrder) {
		toSerialize["channelRatePlanCodeOrder"] = o.ChannelRatePlanCodeOrder
	}
	if !IsNil(o.NewAccessCode) {
		toSerialize["newAccessCode"] = o.NewAccessCode
	}
	if !IsNil(o.NewTimeSpan) {
		toSerialize["newTimeSpan"] = o.NewTimeSpan
	}
	return toSerialize, nil
}

type NullableChannelNegRateAccessDetailType struct {
	value *ChannelNegRateAccessDetailType
	isSet bool
}

func (v NullableChannelNegRateAccessDetailType) Get() *ChannelNegRateAccessDetailType {
	return v.value
}

func (v *NullableChannelNegRateAccessDetailType) Set(val *ChannelNegRateAccessDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelNegRateAccessDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelNegRateAccessDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelNegRateAccessDetailType(val *ChannelNegRateAccessDetailType) *NullableChannelNegRateAccessDetailType {
	return &NullableChannelNegRateAccessDetailType{value: val, isSet: true}
}

func (v NullableChannelNegRateAccessDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelNegRateAccessDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


