/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelAccountContractCopyResponseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAccountContractCopyResponseType{}

// ChannelAccountContractCopyResponseType Channel account contract type to hold account and contract details to copy.
type ChannelAccountContractCopyResponseType struct {
	// Target Account code to which contract is copied.
	AccountCode *string `json:"accountCode,omitempty"`
	AccountId *UniqueIDType `json:"accountId,omitempty"`
	// Holds contract Id of the contract copied.
	ContractResponseInformation []ChannelAccountContractCopyResponseTypeContractResponseInformationInner `json:"contractResponseInformation,omitempty"`
	ErrorMessage *ErrorType `json:"errorMessage,omitempty"`
}

// NewChannelAccountContractCopyResponseType instantiates a new ChannelAccountContractCopyResponseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAccountContractCopyResponseType() *ChannelAccountContractCopyResponseType {
	this := ChannelAccountContractCopyResponseType{}
	return &this
}

// NewChannelAccountContractCopyResponseTypeWithDefaults instantiates a new ChannelAccountContractCopyResponseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAccountContractCopyResponseTypeWithDefaults() *ChannelAccountContractCopyResponseType {
	this := ChannelAccountContractCopyResponseType{}
	return &this
}

// GetAccountCode returns the AccountCode field value if set, zero value otherwise.
func (o *ChannelAccountContractCopyResponseType) GetAccountCode() string {
	if o == nil || IsNil(o.AccountCode) {
		var ret string
		return ret
	}
	return *o.AccountCode
}

// GetAccountCodeOk returns a tuple with the AccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractCopyResponseType) GetAccountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountCode) {
		return nil, false
	}
	return o.AccountCode, true
}

// HasAccountCode returns a boolean if a field has been set.
func (o *ChannelAccountContractCopyResponseType) HasAccountCode() bool {
	if o != nil && !IsNil(o.AccountCode) {
		return true
	}

	return false
}

// SetAccountCode gets a reference to the given string and assigns it to the AccountCode field.
func (o *ChannelAccountContractCopyResponseType) SetAccountCode(v string) {
	o.AccountCode = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ChannelAccountContractCopyResponseType) GetAccountId() UniqueIDType {
	if o == nil || IsNil(o.AccountId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractCopyResponseType) GetAccountIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ChannelAccountContractCopyResponseType) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given UniqueIDType and assigns it to the AccountId field.
func (o *ChannelAccountContractCopyResponseType) SetAccountId(v UniqueIDType) {
	o.AccountId = &v
}

// GetContractResponseInformation returns the ContractResponseInformation field value if set, zero value otherwise.
func (o *ChannelAccountContractCopyResponseType) GetContractResponseInformation() []ChannelAccountContractCopyResponseTypeContractResponseInformationInner {
	if o == nil || IsNil(o.ContractResponseInformation) {
		var ret []ChannelAccountContractCopyResponseTypeContractResponseInformationInner
		return ret
	}
	return o.ContractResponseInformation
}

// GetContractResponseInformationOk returns a tuple with the ContractResponseInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractCopyResponseType) GetContractResponseInformationOk() ([]ChannelAccountContractCopyResponseTypeContractResponseInformationInner, bool) {
	if o == nil || IsNil(o.ContractResponseInformation) {
		return nil, false
	}
	return o.ContractResponseInformation, true
}

// HasContractResponseInformation returns a boolean if a field has been set.
func (o *ChannelAccountContractCopyResponseType) HasContractResponseInformation() bool {
	if o != nil && !IsNil(o.ContractResponseInformation) {
		return true
	}

	return false
}

// SetContractResponseInformation gets a reference to the given []ChannelAccountContractCopyResponseTypeContractResponseInformationInner and assigns it to the ContractResponseInformation field.
func (o *ChannelAccountContractCopyResponseType) SetContractResponseInformation(v []ChannelAccountContractCopyResponseTypeContractResponseInformationInner) {
	o.ContractResponseInformation = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ChannelAccountContractCopyResponseType) GetErrorMessage() ErrorType {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret ErrorType
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractCopyResponseType) GetErrorMessageOk() (*ErrorType, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ChannelAccountContractCopyResponseType) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given ErrorType and assigns it to the ErrorMessage field.
func (o *ChannelAccountContractCopyResponseType) SetErrorMessage(v ErrorType) {
	o.ErrorMessage = &v
}

func (o ChannelAccountContractCopyResponseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAccountContractCopyResponseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountCode) {
		toSerialize["accountCode"] = o.AccountCode
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.ContractResponseInformation) {
		toSerialize["contractResponseInformation"] = o.ContractResponseInformation
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableChannelAccountContractCopyResponseType struct {
	value *ChannelAccountContractCopyResponseType
	isSet bool
}

func (v NullableChannelAccountContractCopyResponseType) Get() *ChannelAccountContractCopyResponseType {
	return v.value
}

func (v *NullableChannelAccountContractCopyResponseType) Set(val *ChannelAccountContractCopyResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAccountContractCopyResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAccountContractCopyResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAccountContractCopyResponseType(val *ChannelAccountContractCopyResponseType) *NullableChannelAccountContractCopyResponseType {
	return &NullableChannelAccountContractCopyResponseType{value: val, isSet: true}
}

func (v NullableChannelAccountContractCopyResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAccountContractCopyResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


