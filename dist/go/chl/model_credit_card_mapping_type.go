/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the CreditCardMappingType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditCardMappingType{}

// CreditCardMappingType Base external system mapping info.
type CreditCardMappingType struct {
	DateRange *TimeSpanType `json:"dateRange,omitempty"`
	// Detailed Description of the given entity.
	Description *string `json:"description,omitempty"`
	// Code used in the External System
	ExternalSystemCode *string `json:"externalSystemCode,omitempty"`
	// Code used inside the OPERA System
	LocalSystemCode *string `json:"localSystemCode,omitempty"`
	SystemInfo *SystemInfoType `json:"systemInfo,omitempty"`
}

// NewCreditCardMappingType instantiates a new CreditCardMappingType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditCardMappingType() *CreditCardMappingType {
	this := CreditCardMappingType{}
	return &this
}

// NewCreditCardMappingTypeWithDefaults instantiates a new CreditCardMappingType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditCardMappingTypeWithDefaults() *CreditCardMappingType {
	this := CreditCardMappingType{}
	return &this
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *CreditCardMappingType) GetDateRange() TimeSpanType {
	if o == nil || IsNil(o.DateRange) {
		var ret TimeSpanType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardMappingType) GetDateRangeOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *CreditCardMappingType) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given TimeSpanType and assigns it to the DateRange field.
func (o *CreditCardMappingType) SetDateRange(v TimeSpanType) {
	o.DateRange = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreditCardMappingType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardMappingType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreditCardMappingType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreditCardMappingType) SetDescription(v string) {
	o.Description = &v
}

// GetExternalSystemCode returns the ExternalSystemCode field value if set, zero value otherwise.
func (o *CreditCardMappingType) GetExternalSystemCode() string {
	if o == nil || IsNil(o.ExternalSystemCode) {
		var ret string
		return ret
	}
	return *o.ExternalSystemCode
}

// GetExternalSystemCodeOk returns a tuple with the ExternalSystemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardMappingType) GetExternalSystemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalSystemCode) {
		return nil, false
	}
	return o.ExternalSystemCode, true
}

// HasExternalSystemCode returns a boolean if a field has been set.
func (o *CreditCardMappingType) HasExternalSystemCode() bool {
	if o != nil && !IsNil(o.ExternalSystemCode) {
		return true
	}

	return false
}

// SetExternalSystemCode gets a reference to the given string and assigns it to the ExternalSystemCode field.
func (o *CreditCardMappingType) SetExternalSystemCode(v string) {
	o.ExternalSystemCode = &v
}

// GetLocalSystemCode returns the LocalSystemCode field value if set, zero value otherwise.
func (o *CreditCardMappingType) GetLocalSystemCode() string {
	if o == nil || IsNil(o.LocalSystemCode) {
		var ret string
		return ret
	}
	return *o.LocalSystemCode
}

// GetLocalSystemCodeOk returns a tuple with the LocalSystemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardMappingType) GetLocalSystemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LocalSystemCode) {
		return nil, false
	}
	return o.LocalSystemCode, true
}

// HasLocalSystemCode returns a boolean if a field has been set.
func (o *CreditCardMappingType) HasLocalSystemCode() bool {
	if o != nil && !IsNil(o.LocalSystemCode) {
		return true
	}

	return false
}

// SetLocalSystemCode gets a reference to the given string and assigns it to the LocalSystemCode field.
func (o *CreditCardMappingType) SetLocalSystemCode(v string) {
	o.LocalSystemCode = &v
}

// GetSystemInfo returns the SystemInfo field value if set, zero value otherwise.
func (o *CreditCardMappingType) GetSystemInfo() SystemInfoType {
	if o == nil || IsNil(o.SystemInfo) {
		var ret SystemInfoType
		return ret
	}
	return *o.SystemInfo
}

// GetSystemInfoOk returns a tuple with the SystemInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditCardMappingType) GetSystemInfoOk() (*SystemInfoType, bool) {
	if o == nil || IsNil(o.SystemInfo) {
		return nil, false
	}
	return o.SystemInfo, true
}

// HasSystemInfo returns a boolean if a field has been set.
func (o *CreditCardMappingType) HasSystemInfo() bool {
	if o != nil && !IsNil(o.SystemInfo) {
		return true
	}

	return false
}

// SetSystemInfo gets a reference to the given SystemInfoType and assigns it to the SystemInfo field.
func (o *CreditCardMappingType) SetSystemInfo(v SystemInfoType) {
	o.SystemInfo = &v
}

func (o CreditCardMappingType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditCardMappingType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalSystemCode) {
		toSerialize["externalSystemCode"] = o.ExternalSystemCode
	}
	if !IsNil(o.LocalSystemCode) {
		toSerialize["localSystemCode"] = o.LocalSystemCode
	}
	if !IsNil(o.SystemInfo) {
		toSerialize["systemInfo"] = o.SystemInfo
	}
	return toSerialize, nil
}

type NullableCreditCardMappingType struct {
	value *CreditCardMappingType
	isSet bool
}

func (v NullableCreditCardMappingType) Get() *CreditCardMappingType {
	return v.value
}

func (v *NullableCreditCardMappingType) Set(val *CreditCardMappingType) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditCardMappingType) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditCardMappingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditCardMappingType(val *CreditCardMappingType) *NullableCreditCardMappingType {
	return &NullableCreditCardMappingType{value: val, isSet: true}
}

func (v NullableCreditCardMappingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditCardMappingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


