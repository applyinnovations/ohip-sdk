/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelAccountContractsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelAccountContractsType{}

// ChannelAccountContractsType Channel account contracts type to hold account and contract details.
type ChannelAccountContractsType struct {
	// Holds Account code of the channel account.
	AccountCode *string `json:"accountCode,omitempty"`
	// Holds Account Name of the channel account.
	AccountName *string `json:"accountName,omitempty"`
	// Channel account contract information object to hold details of channel account contract.
	ChannelAccountContractsInformation []ChannelAccountContractInformationType `json:"channelAccountContractsInformation,omitempty"`
	ProfileId *ProfileId `json:"profileId,omitempty"`
}

// NewChannelAccountContractsType instantiates a new ChannelAccountContractsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAccountContractsType() *ChannelAccountContractsType {
	this := ChannelAccountContractsType{}
	return &this
}

// NewChannelAccountContractsTypeWithDefaults instantiates a new ChannelAccountContractsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAccountContractsTypeWithDefaults() *ChannelAccountContractsType {
	this := ChannelAccountContractsType{}
	return &this
}

// GetAccountCode returns the AccountCode field value if set, zero value otherwise.
func (o *ChannelAccountContractsType) GetAccountCode() string {
	if o == nil || IsNil(o.AccountCode) {
		var ret string
		return ret
	}
	return *o.AccountCode
}

// GetAccountCodeOk returns a tuple with the AccountCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractsType) GetAccountCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountCode) {
		return nil, false
	}
	return o.AccountCode, true
}

// HasAccountCode returns a boolean if a field has been set.
func (o *ChannelAccountContractsType) HasAccountCode() bool {
	if o != nil && !IsNil(o.AccountCode) {
		return true
	}

	return false
}

// SetAccountCode gets a reference to the given string and assigns it to the AccountCode field.
func (o *ChannelAccountContractsType) SetAccountCode(v string) {
	o.AccountCode = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *ChannelAccountContractsType) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractsType) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *ChannelAccountContractsType) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *ChannelAccountContractsType) SetAccountName(v string) {
	o.AccountName = &v
}

// GetChannelAccountContractsInformation returns the ChannelAccountContractsInformation field value if set, zero value otherwise.
func (o *ChannelAccountContractsType) GetChannelAccountContractsInformation() []ChannelAccountContractInformationType {
	if o == nil || IsNil(o.ChannelAccountContractsInformation) {
		var ret []ChannelAccountContractInformationType
		return ret
	}
	return o.ChannelAccountContractsInformation
}

// GetChannelAccountContractsInformationOk returns a tuple with the ChannelAccountContractsInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractsType) GetChannelAccountContractsInformationOk() ([]ChannelAccountContractInformationType, bool) {
	if o == nil || IsNil(o.ChannelAccountContractsInformation) {
		return nil, false
	}
	return o.ChannelAccountContractsInformation, true
}

// HasChannelAccountContractsInformation returns a boolean if a field has been set.
func (o *ChannelAccountContractsType) HasChannelAccountContractsInformation() bool {
	if o != nil && !IsNil(o.ChannelAccountContractsInformation) {
		return true
	}

	return false
}

// SetChannelAccountContractsInformation gets a reference to the given []ChannelAccountContractInformationType and assigns it to the ChannelAccountContractsInformation field.
func (o *ChannelAccountContractsType) SetChannelAccountContractsInformation(v []ChannelAccountContractInformationType) {
	o.ChannelAccountContractsInformation = v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ChannelAccountContractsType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAccountContractsType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ChannelAccountContractsType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *ChannelAccountContractsType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

func (o ChannelAccountContractsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelAccountContractsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountCode) {
		toSerialize["accountCode"] = o.AccountCode
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.ChannelAccountContractsInformation) {
		toSerialize["channelAccountContractsInformation"] = o.ChannelAccountContractsInformation
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	return toSerialize, nil
}

type NullableChannelAccountContractsType struct {
	value *ChannelAccountContractsType
	isSet bool
}

func (v NullableChannelAccountContractsType) Get() *ChannelAccountContractsType {
	return v.value
}

func (v *NullableChannelAccountContractsType) Set(val *ChannelAccountContractsType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAccountContractsType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAccountContractsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAccountContractsType(val *ChannelAccountContractsType) *NullableChannelAccountContractsType {
	return &NullableChannelAccountContractsType{value: val, isSet: true}
}

func (v NullableChannelAccountContractsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAccountContractsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


