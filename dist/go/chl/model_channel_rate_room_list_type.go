/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRateRoomListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRateRoomListType{}

// ChannelRateRoomListType This type holds collection of channel Rate Room details.
type ChannelRateRoomListType struct {
	ChannelRateRoom []ChannelRateRoomType `json:"channelRateRoom,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
}

// NewChannelRateRoomListType instantiates a new ChannelRateRoomListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRateRoomListType() *ChannelRateRoomListType {
	this := ChannelRateRoomListType{}
	return &this
}

// NewChannelRateRoomListTypeWithDefaults instantiates a new ChannelRateRoomListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRateRoomListTypeWithDefaults() *ChannelRateRoomListType {
	this := ChannelRateRoomListType{}
	return &this
}

// GetChannelRateRoom returns the ChannelRateRoom field value if set, zero value otherwise.
func (o *ChannelRateRoomListType) GetChannelRateRoom() []ChannelRateRoomType {
	if o == nil || IsNil(o.ChannelRateRoom) {
		var ret []ChannelRateRoomType
		return ret
	}
	return o.ChannelRateRoom
}

// GetChannelRateRoomOk returns a tuple with the ChannelRateRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateRoomListType) GetChannelRateRoomOk() ([]ChannelRateRoomType, bool) {
	if o == nil || IsNil(o.ChannelRateRoom) {
		return nil, false
	}
	return o.ChannelRateRoom, true
}

// HasChannelRateRoom returns a boolean if a field has been set.
func (o *ChannelRateRoomListType) HasChannelRateRoom() bool {
	if o != nil && !IsNil(o.ChannelRateRoom) {
		return true
	}

	return false
}

// SetChannelRateRoom gets a reference to the given []ChannelRateRoomType and assigns it to the ChannelRateRoom field.
func (o *ChannelRateRoomListType) SetChannelRateRoom(v []ChannelRateRoomType) {
	o.ChannelRateRoom = v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *ChannelRateRoomListType) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateRoomListType) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *ChannelRateRoomListType) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *ChannelRateRoomListType) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *ChannelRateRoomListType) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateRoomListType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *ChannelRateRoomListType) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *ChannelRateRoomListType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ChannelRateRoomListType) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateRoomListType) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ChannelRateRoomListType) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ChannelRateRoomListType) SetCount(v int32) {
	o.Count = &v
}

func (o ChannelRateRoomListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRateRoomListType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelRateRoom) {
		toSerialize["channelRateRoom"] = o.ChannelRateRoom
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableChannelRateRoomListType struct {
	value *ChannelRateRoomListType
	isSet bool
}

func (v NullableChannelRateRoomListType) Get() *ChannelRateRoomListType {
	return v.value
}

func (v *NullableChannelRateRoomListType) Set(val *ChannelRateRoomListType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRateRoomListType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRateRoomListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRateRoomListType(val *ChannelRateRoomListType) *NullableChannelRateRoomListType {
	return &NullableChannelRateRoomListType{value: val, isSet: true}
}

func (v NullableChannelRateRoomListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRateRoomListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


