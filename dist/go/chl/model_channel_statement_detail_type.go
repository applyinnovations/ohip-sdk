/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelStatementDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelStatementDetailType{}

// ChannelStatementDetailType To hold channel account contract element detailed information.
type ChannelStatementDetailType struct {
	// Holds channel of the contract element.
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	// Holds channel type of the contract element.
	BookingChannelType *string `json:"bookingChannelType,omitempty"`
	ContractAmount *CurrencyAmountType `json:"contractAmount,omitempty"`
	ContractId *UniqueIDType `json:"contractId,omitempty"`
	ContractPricing *ContractPricingType `json:"contractPricing,omitempty"`
	ContractRangeInformation *ContractRangeInformationType `json:"contractRangeInformation,omitempty"`
	FeeType *ContractFeeTypeType `json:"feeType,omitempty"`
	Frequency *ContractPriceFrequencyType `json:"frequency,omitempty"`
	// Holds the property for the statement detail.
	HotelId *string `json:"hotelId,omitempty"`
	InvoiceAmount *CurrencyAmountType `json:"invoiceAmount,omitempty"`
	// Holds Note for the contract element.
	Note *string `json:"note,omitempty"`
	// Holds the value of property that user changed from to find and update.
	OldHotelCode *string `json:"oldHotelCode,omitempty"`
	OrderByList []OrderByListTypeInner `json:"orderByList,omitempty"`
	// Number of Units (transactions, rooms or properties).
	Quantity *int32 `json:"quantity,omitempty"`
	// Holds Routing account. If no value is provided, it will be defaulted to *
	RoutingAccount *string `json:"routingAccount,omitempty"`
	// Sequence identifies contract element per contract.
	Sequence *int32 `json:"sequence,omitempty"`
	StatementId *UniqueIDType `json:"statementId,omitempty"`
}

// NewChannelStatementDetailType instantiates a new ChannelStatementDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelStatementDetailType() *ChannelStatementDetailType {
	this := ChannelStatementDetailType{}
	return &this
}

// NewChannelStatementDetailTypeWithDefaults instantiates a new ChannelStatementDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelStatementDetailTypeWithDefaults() *ChannelStatementDetailType {
	this := ChannelStatementDetailType{}
	return &this
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *ChannelStatementDetailType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetBookingChannelType returns the BookingChannelType field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetBookingChannelType() string {
	if o == nil || IsNil(o.BookingChannelType) {
		var ret string
		return ret
	}
	return *o.BookingChannelType
}

// GetBookingChannelTypeOk returns a tuple with the BookingChannelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetBookingChannelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelType) {
		return nil, false
	}
	return o.BookingChannelType, true
}

// HasBookingChannelType returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasBookingChannelType() bool {
	if o != nil && !IsNil(o.BookingChannelType) {
		return true
	}

	return false
}

// SetBookingChannelType gets a reference to the given string and assigns it to the BookingChannelType field.
func (o *ChannelStatementDetailType) SetBookingChannelType(v string) {
	o.BookingChannelType = &v
}

// GetContractAmount returns the ContractAmount field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetContractAmount() CurrencyAmountType {
	if o == nil || IsNil(o.ContractAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.ContractAmount
}

// GetContractAmountOk returns a tuple with the ContractAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetContractAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.ContractAmount) {
		return nil, false
	}
	return o.ContractAmount, true
}

// HasContractAmount returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasContractAmount() bool {
	if o != nil && !IsNil(o.ContractAmount) {
		return true
	}

	return false
}

// SetContractAmount gets a reference to the given CurrencyAmountType and assigns it to the ContractAmount field.
func (o *ChannelStatementDetailType) SetContractAmount(v CurrencyAmountType) {
	o.ContractAmount = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetContractId() UniqueIDType {
	if o == nil || IsNil(o.ContractId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetContractIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given UniqueIDType and assigns it to the ContractId field.
func (o *ChannelStatementDetailType) SetContractId(v UniqueIDType) {
	o.ContractId = &v
}

// GetContractPricing returns the ContractPricing field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetContractPricing() ContractPricingType {
	if o == nil || IsNil(o.ContractPricing) {
		var ret ContractPricingType
		return ret
	}
	return *o.ContractPricing
}

// GetContractPricingOk returns a tuple with the ContractPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetContractPricingOk() (*ContractPricingType, bool) {
	if o == nil || IsNil(o.ContractPricing) {
		return nil, false
	}
	return o.ContractPricing, true
}

// HasContractPricing returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasContractPricing() bool {
	if o != nil && !IsNil(o.ContractPricing) {
		return true
	}

	return false
}

// SetContractPricing gets a reference to the given ContractPricingType and assigns it to the ContractPricing field.
func (o *ChannelStatementDetailType) SetContractPricing(v ContractPricingType) {
	o.ContractPricing = &v
}

// GetContractRangeInformation returns the ContractRangeInformation field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetContractRangeInformation() ContractRangeInformationType {
	if o == nil || IsNil(o.ContractRangeInformation) {
		var ret ContractRangeInformationType
		return ret
	}
	return *o.ContractRangeInformation
}

// GetContractRangeInformationOk returns a tuple with the ContractRangeInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetContractRangeInformationOk() (*ContractRangeInformationType, bool) {
	if o == nil || IsNil(o.ContractRangeInformation) {
		return nil, false
	}
	return o.ContractRangeInformation, true
}

// HasContractRangeInformation returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasContractRangeInformation() bool {
	if o != nil && !IsNil(o.ContractRangeInformation) {
		return true
	}

	return false
}

// SetContractRangeInformation gets a reference to the given ContractRangeInformationType and assigns it to the ContractRangeInformation field.
func (o *ChannelStatementDetailType) SetContractRangeInformation(v ContractRangeInformationType) {
	o.ContractRangeInformation = &v
}

// GetFeeType returns the FeeType field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetFeeType() ContractFeeTypeType {
	if o == nil || IsNil(o.FeeType) {
		var ret ContractFeeTypeType
		return ret
	}
	return *o.FeeType
}

// GetFeeTypeOk returns a tuple with the FeeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetFeeTypeOk() (*ContractFeeTypeType, bool) {
	if o == nil || IsNil(o.FeeType) {
		return nil, false
	}
	return o.FeeType, true
}

// HasFeeType returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasFeeType() bool {
	if o != nil && !IsNil(o.FeeType) {
		return true
	}

	return false
}

// SetFeeType gets a reference to the given ContractFeeTypeType and assigns it to the FeeType field.
func (o *ChannelStatementDetailType) SetFeeType(v ContractFeeTypeType) {
	o.FeeType = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetFrequency() ContractPriceFrequencyType {
	if o == nil || IsNil(o.Frequency) {
		var ret ContractPriceFrequencyType
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetFrequencyOk() (*ContractPriceFrequencyType, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given ContractPriceFrequencyType and assigns it to the Frequency field.
func (o *ChannelStatementDetailType) SetFrequency(v ContractPriceFrequencyType) {
	o.Frequency = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChannelStatementDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetInvoiceAmount returns the InvoiceAmount field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetInvoiceAmount() CurrencyAmountType {
	if o == nil || IsNil(o.InvoiceAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.InvoiceAmount
}

// GetInvoiceAmountOk returns a tuple with the InvoiceAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetInvoiceAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.InvoiceAmount) {
		return nil, false
	}
	return o.InvoiceAmount, true
}

// HasInvoiceAmount returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasInvoiceAmount() bool {
	if o != nil && !IsNil(o.InvoiceAmount) {
		return true
	}

	return false
}

// SetInvoiceAmount gets a reference to the given CurrencyAmountType and assigns it to the InvoiceAmount field.
func (o *ChannelStatementDetailType) SetInvoiceAmount(v CurrencyAmountType) {
	o.InvoiceAmount = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *ChannelStatementDetailType) SetNote(v string) {
	o.Note = &v
}

// GetOldHotelCode returns the OldHotelCode field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetOldHotelCode() string {
	if o == nil || IsNil(o.OldHotelCode) {
		var ret string
		return ret
	}
	return *o.OldHotelCode
}

// GetOldHotelCodeOk returns a tuple with the OldHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetOldHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OldHotelCode) {
		return nil, false
	}
	return o.OldHotelCode, true
}

// HasOldHotelCode returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasOldHotelCode() bool {
	if o != nil && !IsNil(o.OldHotelCode) {
		return true
	}

	return false
}

// SetOldHotelCode gets a reference to the given string and assigns it to the OldHotelCode field.
func (o *ChannelStatementDetailType) SetOldHotelCode(v string) {
	o.OldHotelCode = &v
}

// GetOrderByList returns the OrderByList field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetOrderByList() []OrderByListTypeInner {
	if o == nil || IsNil(o.OrderByList) {
		var ret []OrderByListTypeInner
		return ret
	}
	return o.OrderByList
}

// GetOrderByListOk returns a tuple with the OrderByList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetOrderByListOk() ([]OrderByListTypeInner, bool) {
	if o == nil || IsNil(o.OrderByList) {
		return nil, false
	}
	return o.OrderByList, true
}

// HasOrderByList returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasOrderByList() bool {
	if o != nil && !IsNil(o.OrderByList) {
		return true
	}

	return false
}

// SetOrderByList gets a reference to the given []OrderByListTypeInner and assigns it to the OrderByList field.
func (o *ChannelStatementDetailType) SetOrderByList(v []OrderByListTypeInner) {
	o.OrderByList = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ChannelStatementDetailType) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetRoutingAccount returns the RoutingAccount field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetRoutingAccount() string {
	if o == nil || IsNil(o.RoutingAccount) {
		var ret string
		return ret
	}
	return *o.RoutingAccount
}

// GetRoutingAccountOk returns a tuple with the RoutingAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetRoutingAccountOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingAccount) {
		return nil, false
	}
	return o.RoutingAccount, true
}

// HasRoutingAccount returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasRoutingAccount() bool {
	if o != nil && !IsNil(o.RoutingAccount) {
		return true
	}

	return false
}

// SetRoutingAccount gets a reference to the given string and assigns it to the RoutingAccount field.
func (o *ChannelStatementDetailType) SetRoutingAccount(v string) {
	o.RoutingAccount = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetSequence() int32 {
	if o == nil || IsNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetSequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Sequence) {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasSequence() bool {
	if o != nil && !IsNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ChannelStatementDetailType) SetSequence(v int32) {
	o.Sequence = &v
}

// GetStatementId returns the StatementId field value if set, zero value otherwise.
func (o *ChannelStatementDetailType) GetStatementId() UniqueIDType {
	if o == nil || IsNil(o.StatementId) {
		var ret UniqueIDType
		return ret
	}
	return *o.StatementId
}

// GetStatementIdOk returns a tuple with the StatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelStatementDetailType) GetStatementIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.StatementId) {
		return nil, false
	}
	return o.StatementId, true
}

// HasStatementId returns a boolean if a field has been set.
func (o *ChannelStatementDetailType) HasStatementId() bool {
	if o != nil && !IsNil(o.StatementId) {
		return true
	}

	return false
}

// SetStatementId gets a reference to the given UniqueIDType and assigns it to the StatementId field.
func (o *ChannelStatementDetailType) SetStatementId(v UniqueIDType) {
	o.StatementId = &v
}

func (o ChannelStatementDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelStatementDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.BookingChannelType) {
		toSerialize["bookingChannelType"] = o.BookingChannelType
	}
	if !IsNil(o.ContractAmount) {
		toSerialize["contractAmount"] = o.ContractAmount
	}
	if !IsNil(o.ContractId) {
		toSerialize["contractId"] = o.ContractId
	}
	if !IsNil(o.ContractPricing) {
		toSerialize["contractPricing"] = o.ContractPricing
	}
	if !IsNil(o.ContractRangeInformation) {
		toSerialize["contractRangeInformation"] = o.ContractRangeInformation
	}
	if !IsNil(o.FeeType) {
		toSerialize["feeType"] = o.FeeType
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.InvoiceAmount) {
		toSerialize["invoiceAmount"] = o.InvoiceAmount
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.OldHotelCode) {
		toSerialize["oldHotelCode"] = o.OldHotelCode
	}
	if !IsNil(o.OrderByList) {
		toSerialize["orderByList"] = o.OrderByList
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.RoutingAccount) {
		toSerialize["routingAccount"] = o.RoutingAccount
	}
	if !IsNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !IsNil(o.StatementId) {
		toSerialize["statementId"] = o.StatementId
	}
	return toSerialize, nil
}

type NullableChannelStatementDetailType struct {
	value *ChannelStatementDetailType
	isSet bool
}

func (v NullableChannelStatementDetailType) Get() *ChannelStatementDetailType {
	return v.value
}

func (v *NullableChannelStatementDetailType) Set(val *ChannelStatementDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelStatementDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelStatementDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelStatementDetailType(val *ChannelStatementDetailType) *NullableChannelStatementDetailType {
	return &NullableChannelStatementDetailType{value: val, isSet: true}
}

func (v NullableChannelStatementDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelStatementDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


