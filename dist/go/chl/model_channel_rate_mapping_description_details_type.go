/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRateMappingDescriptionDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRateMappingDescriptionDetailsType{}

// ChannelRateMappingDescriptionDetailsType Descriptions of hotel-channel rate code mapping which may be enhanced descriptions, HTML supported description or a simple string description.
type ChannelRateMappingDescriptionDetailsType struct {
	EnhancedDescription *ChannelRateMappingEnhancedDescriptionType `json:"enhancedDescription,omitempty"`
	HTMLSupportedDescription *TranslationTextType2000 `json:"hTMLSupportedDescription,omitempty"`
	Description *TranslationTextType2000 `json:"description,omitempty"`
}

// NewChannelRateMappingDescriptionDetailsType instantiates a new ChannelRateMappingDescriptionDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRateMappingDescriptionDetailsType() *ChannelRateMappingDescriptionDetailsType {
	this := ChannelRateMappingDescriptionDetailsType{}
	return &this
}

// NewChannelRateMappingDescriptionDetailsTypeWithDefaults instantiates a new ChannelRateMappingDescriptionDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRateMappingDescriptionDetailsTypeWithDefaults() *ChannelRateMappingDescriptionDetailsType {
	this := ChannelRateMappingDescriptionDetailsType{}
	return &this
}

// GetEnhancedDescription returns the EnhancedDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionDetailsType) GetEnhancedDescription() ChannelRateMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.EnhancedDescription) {
		var ret ChannelRateMappingEnhancedDescriptionType
		return ret
	}
	return *o.EnhancedDescription
}

// GetEnhancedDescriptionOk returns a tuple with the EnhancedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionDetailsType) GetEnhancedDescriptionOk() (*ChannelRateMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.EnhancedDescription) {
		return nil, false
	}
	return o.EnhancedDescription, true
}

// HasEnhancedDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionDetailsType) HasEnhancedDescription() bool {
	if o != nil && !IsNil(o.EnhancedDescription) {
		return true
	}

	return false
}

// SetEnhancedDescription gets a reference to the given ChannelRateMappingEnhancedDescriptionType and assigns it to the EnhancedDescription field.
func (o *ChannelRateMappingDescriptionDetailsType) SetEnhancedDescription(v ChannelRateMappingEnhancedDescriptionType) {
	o.EnhancedDescription = &v
}

// GetHTMLSupportedDescription returns the HTMLSupportedDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionDetailsType) GetHTMLSupportedDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.HTMLSupportedDescription) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.HTMLSupportedDescription
}

// GetHTMLSupportedDescriptionOk returns a tuple with the HTMLSupportedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionDetailsType) GetHTMLSupportedDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.HTMLSupportedDescription) {
		return nil, false
	}
	return o.HTMLSupportedDescription, true
}

// HasHTMLSupportedDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionDetailsType) HasHTMLSupportedDescription() bool {
	if o != nil && !IsNil(o.HTMLSupportedDescription) {
		return true
	}

	return false
}

// SetHTMLSupportedDescription gets a reference to the given TranslationTextType2000 and assigns it to the HTMLSupportedDescription field.
func (o *ChannelRateMappingDescriptionDetailsType) SetHTMLSupportedDescription(v TranslationTextType2000) {
	o.HTMLSupportedDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionDetailsType) GetDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.Description) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionDetailsType) GetDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionDetailsType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given TranslationTextType2000 and assigns it to the Description field.
func (o *ChannelRateMappingDescriptionDetailsType) SetDescription(v TranslationTextType2000) {
	o.Description = &v
}

func (o ChannelRateMappingDescriptionDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRateMappingDescriptionDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnhancedDescription) {
		toSerialize["enhancedDescription"] = o.EnhancedDescription
	}
	if !IsNil(o.HTMLSupportedDescription) {
		toSerialize["hTMLSupportedDescription"] = o.HTMLSupportedDescription
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableChannelRateMappingDescriptionDetailsType struct {
	value *ChannelRateMappingDescriptionDetailsType
	isSet bool
}

func (v NullableChannelRateMappingDescriptionDetailsType) Get() *ChannelRateMappingDescriptionDetailsType {
	return v.value
}

func (v *NullableChannelRateMappingDescriptionDetailsType) Set(val *ChannelRateMappingDescriptionDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRateMappingDescriptionDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRateMappingDescriptionDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRateMappingDescriptionDetailsType(val *ChannelRateMappingDescriptionDetailsType) *NullableChannelRateMappingDescriptionDetailsType {
	return &NullableChannelRateMappingDescriptionDetailsType{value: val, isSet: true}
}

func (v NullableChannelRateMappingDescriptionDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRateMappingDescriptionDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


