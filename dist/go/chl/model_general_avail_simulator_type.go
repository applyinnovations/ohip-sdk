/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the GeneralAvailSimulatorType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneralAvailSimulatorType{}

// GeneralAvailSimulatorType Room Type and Room Rate combination.
type GeneralAvailSimulatorType struct {
	AvailableRatePlans []AvailableRatePlanType `json:"availableRatePlans,omitempty"`
	BookingChannelCode *string `json:"bookingChannelCode,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	MarketingInfo *string `json:"marketingInfo,omitempty"`
	SellOrder *SellOrderType `json:"sellOrder,omitempty"`
	SupportsHTMLEditor *string `json:"supportsHTMLEditor,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
}

// NewGeneralAvailSimulatorType instantiates a new GeneralAvailSimulatorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralAvailSimulatorType() *GeneralAvailSimulatorType {
	this := GeneralAvailSimulatorType{}
	return &this
}

// NewGeneralAvailSimulatorTypeWithDefaults instantiates a new GeneralAvailSimulatorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralAvailSimulatorTypeWithDefaults() *GeneralAvailSimulatorType {
	this := GeneralAvailSimulatorType{}
	return &this
}

// GetAvailableRatePlans returns the AvailableRatePlans field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetAvailableRatePlans() []AvailableRatePlanType {
	if o == nil || IsNil(o.AvailableRatePlans) {
		var ret []AvailableRatePlanType
		return ret
	}
	return o.AvailableRatePlans
}

// GetAvailableRatePlansOk returns a tuple with the AvailableRatePlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetAvailableRatePlansOk() ([]AvailableRatePlanType, bool) {
	if o == nil || IsNil(o.AvailableRatePlans) {
		return nil, false
	}
	return o.AvailableRatePlans, true
}

// HasAvailableRatePlans returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasAvailableRatePlans() bool {
	if o != nil && !IsNil(o.AvailableRatePlans) {
		return true
	}

	return false
}

// SetAvailableRatePlans gets a reference to the given []AvailableRatePlanType and assigns it to the AvailableRatePlans field.
func (o *GeneralAvailSimulatorType) SetAvailableRatePlans(v []AvailableRatePlanType) {
	o.AvailableRatePlans = v
}

// GetBookingChannelCode returns the BookingChannelCode field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetBookingChannelCode() string {
	if o == nil || IsNil(o.BookingChannelCode) {
		var ret string
		return ret
	}
	return *o.BookingChannelCode
}

// GetBookingChannelCodeOk returns a tuple with the BookingChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetBookingChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BookingChannelCode) {
		return nil, false
	}
	return o.BookingChannelCode, true
}

// HasBookingChannelCode returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasBookingChannelCode() bool {
	if o != nil && !IsNil(o.BookingChannelCode) {
		return true
	}

	return false
}

// SetBookingChannelCode gets a reference to the given string and assigns it to the BookingChannelCode field.
func (o *GeneralAvailSimulatorType) SetBookingChannelCode(v string) {
	o.BookingChannelCode = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GeneralAvailSimulatorType) SetCount(v int32) {
	o.Count = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *GeneralAvailSimulatorType) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *GeneralAvailSimulatorType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetMarketingInfo returns the MarketingInfo field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetMarketingInfo() string {
	if o == nil || IsNil(o.MarketingInfo) {
		var ret string
		return ret
	}
	return *o.MarketingInfo
}

// GetMarketingInfoOk returns a tuple with the MarketingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetMarketingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingInfo) {
		return nil, false
	}
	return o.MarketingInfo, true
}

// HasMarketingInfo returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasMarketingInfo() bool {
	if o != nil && !IsNil(o.MarketingInfo) {
		return true
	}

	return false
}

// SetMarketingInfo gets a reference to the given string and assigns it to the MarketingInfo field.
func (o *GeneralAvailSimulatorType) SetMarketingInfo(v string) {
	o.MarketingInfo = &v
}

// GetSellOrder returns the SellOrder field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetSellOrder() SellOrderType {
	if o == nil || IsNil(o.SellOrder) {
		var ret SellOrderType
		return ret
	}
	return *o.SellOrder
}

// GetSellOrderOk returns a tuple with the SellOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetSellOrderOk() (*SellOrderType, bool) {
	if o == nil || IsNil(o.SellOrder) {
		return nil, false
	}
	return o.SellOrder, true
}

// HasSellOrder returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasSellOrder() bool {
	if o != nil && !IsNil(o.SellOrder) {
		return true
	}

	return false
}

// SetSellOrder gets a reference to the given SellOrderType and assigns it to the SellOrder field.
func (o *GeneralAvailSimulatorType) SetSellOrder(v SellOrderType) {
	o.SellOrder = &v
}

// GetSupportsHTMLEditor returns the SupportsHTMLEditor field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetSupportsHTMLEditor() string {
	if o == nil || IsNil(o.SupportsHTMLEditor) {
		var ret string
		return ret
	}
	return *o.SupportsHTMLEditor
}

// GetSupportsHTMLEditorOk returns a tuple with the SupportsHTMLEditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetSupportsHTMLEditorOk() (*string, bool) {
	if o == nil || IsNil(o.SupportsHTMLEditor) {
		return nil, false
	}
	return o.SupportsHTMLEditor, true
}

// HasSupportsHTMLEditor returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasSupportsHTMLEditor() bool {
	if o != nil && !IsNil(o.SupportsHTMLEditor) {
		return true
	}

	return false
}

// SetSupportsHTMLEditor gets a reference to the given string and assigns it to the SupportsHTMLEditor field.
func (o *GeneralAvailSimulatorType) SetSupportsHTMLEditor(v string) {
	o.SupportsHTMLEditor = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *GeneralAvailSimulatorType) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralAvailSimulatorType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *GeneralAvailSimulatorType) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *GeneralAvailSimulatorType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

func (o GeneralAvailSimulatorType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneralAvailSimulatorType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableRatePlans) {
		toSerialize["availableRatePlans"] = o.AvailableRatePlans
	}
	if !IsNil(o.BookingChannelCode) {
		toSerialize["bookingChannelCode"] = o.BookingChannelCode
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.MarketingInfo) {
		toSerialize["marketingInfo"] = o.MarketingInfo
	}
	if !IsNil(o.SellOrder) {
		toSerialize["sellOrder"] = o.SellOrder
	}
	if !IsNil(o.SupportsHTMLEditor) {
		toSerialize["supportsHTMLEditor"] = o.SupportsHTMLEditor
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	return toSerialize, nil
}

type NullableGeneralAvailSimulatorType struct {
	value *GeneralAvailSimulatorType
	isSet bool
}

func (v NullableGeneralAvailSimulatorType) Get() *GeneralAvailSimulatorType {
	return v.value
}

func (v *NullableGeneralAvailSimulatorType) Set(val *GeneralAvailSimulatorType) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralAvailSimulatorType) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralAvailSimulatorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralAvailSimulatorType(val *GeneralAvailSimulatorType) *NullableGeneralAvailSimulatorType {
	return &NullableGeneralAvailSimulatorType{value: val, isSet: true}
}

func (v NullableGeneralAvailSimulatorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralAvailSimulatorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


