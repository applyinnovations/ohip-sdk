/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the GenericGlobalDescriptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericGlobalDescriptionType{}

// GenericGlobalDescriptionType This type holds enhanced room/rate description.
type GenericGlobalDescriptionType struct {
	GlobalDescType *GlobalDescTypeType `json:"globalDescType,omitempty"`
	// Property mapping with Rate plan code or Room type
	HotelId *string `json:"hotelId,omitempty"`
	RatePlanCode *CodeDescriptionType `json:"ratePlanCode,omitempty"`
	RatePlanGlobalDescription *ChannelRateMappingEnhancedDescriptionType `json:"ratePlanGlobalDescription,omitempty"`
	RoomType *CodeDescriptionType `json:"roomType,omitempty"`
	RoomTypeGlobalDescription *ChannelMappingEnhancedDescriptionType `json:"roomTypeGlobalDescription,omitempty"`
}

// NewGenericGlobalDescriptionType instantiates a new GenericGlobalDescriptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericGlobalDescriptionType() *GenericGlobalDescriptionType {
	this := GenericGlobalDescriptionType{}
	return &this
}

// NewGenericGlobalDescriptionTypeWithDefaults instantiates a new GenericGlobalDescriptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericGlobalDescriptionTypeWithDefaults() *GenericGlobalDescriptionType {
	this := GenericGlobalDescriptionType{}
	return &this
}

// GetGlobalDescType returns the GlobalDescType field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetGlobalDescType() GlobalDescTypeType {
	if o == nil || IsNil(o.GlobalDescType) {
		var ret GlobalDescTypeType
		return ret
	}
	return *o.GlobalDescType
}

// GetGlobalDescTypeOk returns a tuple with the GlobalDescType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetGlobalDescTypeOk() (*GlobalDescTypeType, bool) {
	if o == nil || IsNil(o.GlobalDescType) {
		return nil, false
	}
	return o.GlobalDescType, true
}

// HasGlobalDescType returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasGlobalDescType() bool {
	if o != nil && !IsNil(o.GlobalDescType) {
		return true
	}

	return false
}

// SetGlobalDescType gets a reference to the given GlobalDescTypeType and assigns it to the GlobalDescType field.
func (o *GenericGlobalDescriptionType) SetGlobalDescType(v GlobalDescTypeType) {
	o.GlobalDescType = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *GenericGlobalDescriptionType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetRatePlanCode() CodeDescriptionType {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetRatePlanCodeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given CodeDescriptionType and assigns it to the RatePlanCode field.
func (o *GenericGlobalDescriptionType) SetRatePlanCode(v CodeDescriptionType) {
	o.RatePlanCode = &v
}

// GetRatePlanGlobalDescription returns the RatePlanGlobalDescription field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetRatePlanGlobalDescription() ChannelRateMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.RatePlanGlobalDescription) {
		var ret ChannelRateMappingEnhancedDescriptionType
		return ret
	}
	return *o.RatePlanGlobalDescription
}

// GetRatePlanGlobalDescriptionOk returns a tuple with the RatePlanGlobalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetRatePlanGlobalDescriptionOk() (*ChannelRateMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.RatePlanGlobalDescription) {
		return nil, false
	}
	return o.RatePlanGlobalDescription, true
}

// HasRatePlanGlobalDescription returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasRatePlanGlobalDescription() bool {
	if o != nil && !IsNil(o.RatePlanGlobalDescription) {
		return true
	}

	return false
}

// SetRatePlanGlobalDescription gets a reference to the given ChannelRateMappingEnhancedDescriptionType and assigns it to the RatePlanGlobalDescription field.
func (o *GenericGlobalDescriptionType) SetRatePlanGlobalDescription(v ChannelRateMappingEnhancedDescriptionType) {
	o.RatePlanGlobalDescription = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetRoomType() CodeDescriptionType {
	if o == nil || IsNil(o.RoomType) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetRoomTypeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given CodeDescriptionType and assigns it to the RoomType field.
func (o *GenericGlobalDescriptionType) SetRoomType(v CodeDescriptionType) {
	o.RoomType = &v
}

// GetRoomTypeGlobalDescription returns the RoomTypeGlobalDescription field value if set, zero value otherwise.
func (o *GenericGlobalDescriptionType) GetRoomTypeGlobalDescription() ChannelMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.RoomTypeGlobalDescription) {
		var ret ChannelMappingEnhancedDescriptionType
		return ret
	}
	return *o.RoomTypeGlobalDescription
}

// GetRoomTypeGlobalDescriptionOk returns a tuple with the RoomTypeGlobalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGlobalDescriptionType) GetRoomTypeGlobalDescriptionOk() (*ChannelMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.RoomTypeGlobalDescription) {
		return nil, false
	}
	return o.RoomTypeGlobalDescription, true
}

// HasRoomTypeGlobalDescription returns a boolean if a field has been set.
func (o *GenericGlobalDescriptionType) HasRoomTypeGlobalDescription() bool {
	if o != nil && !IsNil(o.RoomTypeGlobalDescription) {
		return true
	}

	return false
}

// SetRoomTypeGlobalDescription gets a reference to the given ChannelMappingEnhancedDescriptionType and assigns it to the RoomTypeGlobalDescription field.
func (o *GenericGlobalDescriptionType) SetRoomTypeGlobalDescription(v ChannelMappingEnhancedDescriptionType) {
	o.RoomTypeGlobalDescription = &v
}

func (o GenericGlobalDescriptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericGlobalDescriptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalDescType) {
		toSerialize["globalDescType"] = o.GlobalDescType
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.RatePlanGlobalDescription) {
		toSerialize["ratePlanGlobalDescription"] = o.RatePlanGlobalDescription
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.RoomTypeGlobalDescription) {
		toSerialize["roomTypeGlobalDescription"] = o.RoomTypeGlobalDescription
	}
	return toSerialize, nil
}

type NullableGenericGlobalDescriptionType struct {
	value *GenericGlobalDescriptionType
	isSet bool
}

func (v NullableGenericGlobalDescriptionType) Get() *GenericGlobalDescriptionType {
	return v.value
}

func (v *NullableGenericGlobalDescriptionType) Set(val *GenericGlobalDescriptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericGlobalDescriptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericGlobalDescriptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericGlobalDescriptionType(val *GenericGlobalDescriptionType) *NullableGenericGlobalDescriptionType {
	return &NullableGenericGlobalDescriptionType{value: val, isSet: true}
}

func (v NullableGenericGlobalDescriptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericGlobalDescriptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


