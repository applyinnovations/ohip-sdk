/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRateMappingDescriptionType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRateMappingDescriptionType{}

// ChannelRateMappingDescriptionType This type holds descriptions of hotel-channel rate code mapping. Description may be from Hotel rate code description, Global description or custom user defined description. Global description only supports enhanced description.
type ChannelRateMappingDescriptionType struct {
	RateCodeDescription *ChannelRateMappingDescriptionDetailsType `json:"rateCodeDescription,omitempty"`
	GlobalDescription *ChannelRateMappingEnhancedDescriptionType `json:"globalDescription,omitempty"`
	CustomDescription *ChannelRateMappingDescriptionDetailsType `json:"customDescription,omitempty"`
	ShortDescription *TranslationTextType80 `json:"shortDescription,omitempty"`
}

// NewChannelRateMappingDescriptionType instantiates a new ChannelRateMappingDescriptionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRateMappingDescriptionType() *ChannelRateMappingDescriptionType {
	this := ChannelRateMappingDescriptionType{}
	return &this
}

// NewChannelRateMappingDescriptionTypeWithDefaults instantiates a new ChannelRateMappingDescriptionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRateMappingDescriptionTypeWithDefaults() *ChannelRateMappingDescriptionType {
	this := ChannelRateMappingDescriptionType{}
	return &this
}

// GetRateCodeDescription returns the RateCodeDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionType) GetRateCodeDescription() ChannelRateMappingDescriptionDetailsType {
	if o == nil || IsNil(o.RateCodeDescription) {
		var ret ChannelRateMappingDescriptionDetailsType
		return ret
	}
	return *o.RateCodeDescription
}

// GetRateCodeDescriptionOk returns a tuple with the RateCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionType) GetRateCodeDescriptionOk() (*ChannelRateMappingDescriptionDetailsType, bool) {
	if o == nil || IsNil(o.RateCodeDescription) {
		return nil, false
	}
	return o.RateCodeDescription, true
}

// HasRateCodeDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionType) HasRateCodeDescription() bool {
	if o != nil && !IsNil(o.RateCodeDescription) {
		return true
	}

	return false
}

// SetRateCodeDescription gets a reference to the given ChannelRateMappingDescriptionDetailsType and assigns it to the RateCodeDescription field.
func (o *ChannelRateMappingDescriptionType) SetRateCodeDescription(v ChannelRateMappingDescriptionDetailsType) {
	o.RateCodeDescription = &v
}

// GetGlobalDescription returns the GlobalDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionType) GetGlobalDescription() ChannelRateMappingEnhancedDescriptionType {
	if o == nil || IsNil(o.GlobalDescription) {
		var ret ChannelRateMappingEnhancedDescriptionType
		return ret
	}
	return *o.GlobalDescription
}

// GetGlobalDescriptionOk returns a tuple with the GlobalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionType) GetGlobalDescriptionOk() (*ChannelRateMappingEnhancedDescriptionType, bool) {
	if o == nil || IsNil(o.GlobalDescription) {
		return nil, false
	}
	return o.GlobalDescription, true
}

// HasGlobalDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionType) HasGlobalDescription() bool {
	if o != nil && !IsNil(o.GlobalDescription) {
		return true
	}

	return false
}

// SetGlobalDescription gets a reference to the given ChannelRateMappingEnhancedDescriptionType and assigns it to the GlobalDescription field.
func (o *ChannelRateMappingDescriptionType) SetGlobalDescription(v ChannelRateMappingEnhancedDescriptionType) {
	o.GlobalDescription = &v
}

// GetCustomDescription returns the CustomDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionType) GetCustomDescription() ChannelRateMappingDescriptionDetailsType {
	if o == nil || IsNil(o.CustomDescription) {
		var ret ChannelRateMappingDescriptionDetailsType
		return ret
	}
	return *o.CustomDescription
}

// GetCustomDescriptionOk returns a tuple with the CustomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionType) GetCustomDescriptionOk() (*ChannelRateMappingDescriptionDetailsType, bool) {
	if o == nil || IsNil(o.CustomDescription) {
		return nil, false
	}
	return o.CustomDescription, true
}

// HasCustomDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionType) HasCustomDescription() bool {
	if o != nil && !IsNil(o.CustomDescription) {
		return true
	}

	return false
}

// SetCustomDescription gets a reference to the given ChannelRateMappingDescriptionDetailsType and assigns it to the CustomDescription field.
func (o *ChannelRateMappingDescriptionType) SetCustomDescription(v ChannelRateMappingDescriptionDetailsType) {
	o.CustomDescription = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *ChannelRateMappingDescriptionType) GetShortDescription() TranslationTextType80 {
	if o == nil || IsNil(o.ShortDescription) {
		var ret TranslationTextType80
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRateMappingDescriptionType) GetShortDescriptionOk() (*TranslationTextType80, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *ChannelRateMappingDescriptionType) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given TranslationTextType80 and assigns it to the ShortDescription field.
func (o *ChannelRateMappingDescriptionType) SetShortDescription(v TranslationTextType80) {
	o.ShortDescription = &v
}

func (o ChannelRateMappingDescriptionType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRateMappingDescriptionType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RateCodeDescription) {
		toSerialize["rateCodeDescription"] = o.RateCodeDescription
	}
	if !IsNil(o.GlobalDescription) {
		toSerialize["globalDescription"] = o.GlobalDescription
	}
	if !IsNil(o.CustomDescription) {
		toSerialize["customDescription"] = o.CustomDescription
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	return toSerialize, nil
}

type NullableChannelRateMappingDescriptionType struct {
	value *ChannelRateMappingDescriptionType
	isSet bool
}

func (v NullableChannelRateMappingDescriptionType) Get() *ChannelRateMappingDescriptionType {
	return v.value
}

func (v *NullableChannelRateMappingDescriptionType) Set(val *ChannelRateMappingDescriptionType) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRateMappingDescriptionType) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRateMappingDescriptionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRateMappingDescriptionType(val *ChannelRateMappingDescriptionType) *NullableChannelRateMappingDescriptionType {
	return &NullableChannelRateMappingDescriptionType{value: val, isSet: true}
}

func (v NullableChannelRateMappingDescriptionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRateMappingDescriptionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


