/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the DistributeChannelRatesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributeChannelRatesType{}

// DistributeChannelRatesType Information about rate codes to be distributed to channels.
type DistributeChannelRatesType struct {
	// Information about rate codes to be distributed to a channel.
	DistributeChannelRate []DistributeChannelRateType `json:"distributeChannelRate,omitempty"`
	// Hotel Code.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewDistributeChannelRatesType instantiates a new DistributeChannelRatesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributeChannelRatesType() *DistributeChannelRatesType {
	this := DistributeChannelRatesType{}
	return &this
}

// NewDistributeChannelRatesTypeWithDefaults instantiates a new DistributeChannelRatesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributeChannelRatesTypeWithDefaults() *DistributeChannelRatesType {
	this := DistributeChannelRatesType{}
	return &this
}

// GetDistributeChannelRate returns the DistributeChannelRate field value if set, zero value otherwise.
func (o *DistributeChannelRatesType) GetDistributeChannelRate() []DistributeChannelRateType {
	if o == nil || IsNil(o.DistributeChannelRate) {
		var ret []DistributeChannelRateType
		return ret
	}
	return o.DistributeChannelRate
}

// GetDistributeChannelRateOk returns a tuple with the DistributeChannelRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRatesType) GetDistributeChannelRateOk() ([]DistributeChannelRateType, bool) {
	if o == nil || IsNil(o.DistributeChannelRate) {
		return nil, false
	}
	return o.DistributeChannelRate, true
}

// HasDistributeChannelRate returns a boolean if a field has been set.
func (o *DistributeChannelRatesType) HasDistributeChannelRate() bool {
	if o != nil && !IsNil(o.DistributeChannelRate) {
		return true
	}

	return false
}

// SetDistributeChannelRate gets a reference to the given []DistributeChannelRateType and assigns it to the DistributeChannelRate field.
func (o *DistributeChannelRatesType) SetDistributeChannelRate(v []DistributeChannelRateType) {
	o.DistributeChannelRate = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *DistributeChannelRatesType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributeChannelRatesType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *DistributeChannelRatesType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *DistributeChannelRatesType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o DistributeChannelRatesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributeChannelRatesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DistributeChannelRate) {
		toSerialize["distributeChannelRate"] = o.DistributeChannelRate
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableDistributeChannelRatesType struct {
	value *DistributeChannelRatesType
	isSet bool
}

func (v NullableDistributeChannelRatesType) Get() *DistributeChannelRatesType {
	return v.value
}

func (v *NullableDistributeChannelRatesType) Set(val *DistributeChannelRatesType) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributeChannelRatesType) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributeChannelRatesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributeChannelRatesType(val *DistributeChannelRatesType) *NullableDistributeChannelRatesType {
	return &NullableDistributeChannelRatesType{value: val, isSet: true}
}

func (v NullableDistributeChannelRatesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributeChannelRatesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


