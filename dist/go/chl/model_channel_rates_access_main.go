/*
OPERA Cloud Channel Configuration API

APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package chl

import (
	"encoding/json"
)

// checks if the ChannelRatesAccessMain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelRatesAccessMain{}

// ChannelRatesAccessMain struct for ChannelRatesAccessMain
type ChannelRatesAccessMain struct {
	// Unique ID that identifies a single hotel property.
	HotelId *string `json:"hotelId,omitempty"`
	ChannelCode *string `json:"channelCode,omitempty"`
	ChannelRatePlanCode *string `json:"channelRatePlanCode,omitempty"`
	// ISO 8601 date Format 'YYYY-MM-DD'
	StartDate *string `json:"startDate,omitempty"`
	// ISO 8601 date Format 'YYYY-MM-DD'
	EndDate *string `json:"endDate,omitempty"`
	RateAccessCode *string `json:"rateAccessCode,omitempty"`
	Active *bool `json:"active,omitempty"`
	// Id of the profile account
	AccountId *string `json:"accountId,omitempty"`
	// Name of the profile account
	AccountName *string `json:"accountName,omitempty"`
	ProfileAccountType *AccountTypeEnum `json:"profileAccountType,omitempty"`
	// Profile Id for which Channel Rate access code is applicable for.
	ProfileId *string `json:"profileId,omitempty"`
}

// NewChannelRatesAccessMain instantiates a new ChannelRatesAccessMain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelRatesAccessMain() *ChannelRatesAccessMain {
	this := ChannelRatesAccessMain{}
	return &this
}

// NewChannelRatesAccessMainWithDefaults instantiates a new ChannelRatesAccessMain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelRatesAccessMainWithDefaults() *ChannelRatesAccessMain {
	this := ChannelRatesAccessMain{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *ChannelRatesAccessMain) SetHotelId(v string) {
	o.HotelId = &v
}

// GetChannelCode returns the ChannelCode field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetChannelCode() string {
	if o == nil || IsNil(o.ChannelCode) {
		var ret string
		return ret
	}
	return *o.ChannelCode
}

// GetChannelCodeOk returns a tuple with the ChannelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetChannelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelCode) {
		return nil, false
	}
	return o.ChannelCode, true
}

// HasChannelCode returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasChannelCode() bool {
	if o != nil && !IsNil(o.ChannelCode) {
		return true
	}

	return false
}

// SetChannelCode gets a reference to the given string and assigns it to the ChannelCode field.
func (o *ChannelRatesAccessMain) SetChannelCode(v string) {
	o.ChannelCode = &v
}

// GetChannelRatePlanCode returns the ChannelRatePlanCode field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetChannelRatePlanCode() string {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		var ret string
		return ret
	}
	return *o.ChannelRatePlanCode
}

// GetChannelRatePlanCodeOk returns a tuple with the ChannelRatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetChannelRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelRatePlanCode) {
		return nil, false
	}
	return o.ChannelRatePlanCode, true
}

// HasChannelRatePlanCode returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasChannelRatePlanCode() bool {
	if o != nil && !IsNil(o.ChannelRatePlanCode) {
		return true
	}

	return false
}

// SetChannelRatePlanCode gets a reference to the given string and assigns it to the ChannelRatePlanCode field.
func (o *ChannelRatesAccessMain) SetChannelRatePlanCode(v string) {
	o.ChannelRatePlanCode = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *ChannelRatesAccessMain) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *ChannelRatesAccessMain) SetEndDate(v string) {
	o.EndDate = &v
}

// GetRateAccessCode returns the RateAccessCode field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetRateAccessCode() string {
	if o == nil || IsNil(o.RateAccessCode) {
		var ret string
		return ret
	}
	return *o.RateAccessCode
}

// GetRateAccessCodeOk returns a tuple with the RateAccessCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetRateAccessCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateAccessCode) {
		return nil, false
	}
	return o.RateAccessCode, true
}

// HasRateAccessCode returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasRateAccessCode() bool {
	if o != nil && !IsNil(o.RateAccessCode) {
		return true
	}

	return false
}

// SetRateAccessCode gets a reference to the given string and assigns it to the RateAccessCode field.
func (o *ChannelRatesAccessMain) SetRateAccessCode(v string) {
	o.RateAccessCode = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ChannelRatesAccessMain) SetActive(v bool) {
	o.Active = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *ChannelRatesAccessMain) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *ChannelRatesAccessMain) SetAccountName(v string) {
	o.AccountName = &v
}

// GetProfileAccountType returns the ProfileAccountType field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetProfileAccountType() AccountTypeEnum {
	if o == nil || IsNil(o.ProfileAccountType) {
		var ret AccountTypeEnum
		return ret
	}
	return *o.ProfileAccountType
}

// GetProfileAccountTypeOk returns a tuple with the ProfileAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetProfileAccountTypeOk() (*AccountTypeEnum, bool) {
	if o == nil || IsNil(o.ProfileAccountType) {
		return nil, false
	}
	return o.ProfileAccountType, true
}

// HasProfileAccountType returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasProfileAccountType() bool {
	if o != nil && !IsNil(o.ProfileAccountType) {
		return true
	}

	return false
}

// SetProfileAccountType gets a reference to the given AccountTypeEnum and assigns it to the ProfileAccountType field.
func (o *ChannelRatesAccessMain) SetProfileAccountType(v AccountTypeEnum) {
	o.ProfileAccountType = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ChannelRatesAccessMain) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelRatesAccessMain) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ChannelRatesAccessMain) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *ChannelRatesAccessMain) SetProfileId(v string) {
	o.ProfileId = &v
}

func (o ChannelRatesAccessMain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelRatesAccessMain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ChannelCode) {
		toSerialize["channelCode"] = o.ChannelCode
	}
	if !IsNil(o.ChannelRatePlanCode) {
		toSerialize["channelRatePlanCode"] = o.ChannelRatePlanCode
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.RateAccessCode) {
		toSerialize["rateAccessCode"] = o.RateAccessCode
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !IsNil(o.ProfileAccountType) {
		toSerialize["profileAccountType"] = o.ProfileAccountType
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	return toSerialize, nil
}

type NullableChannelRatesAccessMain struct {
	value *ChannelRatesAccessMain
	isSet bool
}

func (v NullableChannelRatesAccessMain) Get() *ChannelRatesAccessMain {
	return v.value
}

func (v *NullableChannelRatesAccessMain) Set(val *ChannelRatesAccessMain) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelRatesAccessMain) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelRatesAccessMain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelRatesAccessMain(val *ChannelRatesAccessMain) *NullableChannelRatesAccessMain {
	return &NullableChannelRatesAccessMain{value: val, isSet: true}
}

func (v NullableChannelRatesAccessMain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelRatesAccessMain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


