/*
OPERA Cloud Room Rotation Service API

APIs to facilitate Room Rotation functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmr

import (
	"encoding/json"
)

// checks if the RoomRotationPointsInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomRotationPointsInfoType{}

// RoomRotationPointsInfoType Room Rotation Points Information
type RoomRotationPointsInfoType struct {
	// Balance forward points
	BalanceForwardPoints *float32 `json:"balanceForwardPoints,omitempty"`
	// Calculated points
	CalculatedPoints *float32 `json:"calculatedPoints,omitempty"`
	// Forecasted points
	ForecastedPoints *float32 `json:"forecastedPoints,omitempty"`
	// Out of Order / Out of Service points
	OutOfOrderServicePoints *float32 `json:"outOfOrderServicePoints,omitempty"`
	// Prorated average points
	ProratedAveragePoints *float32 `json:"proratedAveragePoints,omitempty"`
	// Random points
	RandomPoints *float32 `json:"randomPoints,omitempty"`
	// Reservation adjusted points
	ReservationAdjustedPoints *float32 `json:"reservationAdjustedPoints,omitempty"`
	// Room adjusted points
	RoomAdjustedPoints *float32 `json:"roomAdjustedPoints,omitempty"`
	// Room Number
	RoomId *string `json:"roomId,omitempty"`
}

// NewRoomRotationPointsInfoType instantiates a new RoomRotationPointsInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomRotationPointsInfoType() *RoomRotationPointsInfoType {
	this := RoomRotationPointsInfoType{}
	return &this
}

// NewRoomRotationPointsInfoTypeWithDefaults instantiates a new RoomRotationPointsInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomRotationPointsInfoTypeWithDefaults() *RoomRotationPointsInfoType {
	this := RoomRotationPointsInfoType{}
	return &this
}

// GetBalanceForwardPoints returns the BalanceForwardPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetBalanceForwardPoints() float32 {
	if o == nil || IsNil(o.BalanceForwardPoints) {
		var ret float32
		return ret
	}
	return *o.BalanceForwardPoints
}

// GetBalanceForwardPointsOk returns a tuple with the BalanceForwardPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetBalanceForwardPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.BalanceForwardPoints) {
		return nil, false
	}
	return o.BalanceForwardPoints, true
}

// HasBalanceForwardPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasBalanceForwardPoints() bool {
	if o != nil && !IsNil(o.BalanceForwardPoints) {
		return true
	}

	return false
}

// SetBalanceForwardPoints gets a reference to the given float32 and assigns it to the BalanceForwardPoints field.
func (o *RoomRotationPointsInfoType) SetBalanceForwardPoints(v float32) {
	o.BalanceForwardPoints = &v
}

// GetCalculatedPoints returns the CalculatedPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetCalculatedPoints() float32 {
	if o == nil || IsNil(o.CalculatedPoints) {
		var ret float32
		return ret
	}
	return *o.CalculatedPoints
}

// GetCalculatedPointsOk returns a tuple with the CalculatedPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetCalculatedPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.CalculatedPoints) {
		return nil, false
	}
	return o.CalculatedPoints, true
}

// HasCalculatedPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasCalculatedPoints() bool {
	if o != nil && !IsNil(o.CalculatedPoints) {
		return true
	}

	return false
}

// SetCalculatedPoints gets a reference to the given float32 and assigns it to the CalculatedPoints field.
func (o *RoomRotationPointsInfoType) SetCalculatedPoints(v float32) {
	o.CalculatedPoints = &v
}

// GetForecastedPoints returns the ForecastedPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetForecastedPoints() float32 {
	if o == nil || IsNil(o.ForecastedPoints) {
		var ret float32
		return ret
	}
	return *o.ForecastedPoints
}

// GetForecastedPointsOk returns a tuple with the ForecastedPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetForecastedPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ForecastedPoints) {
		return nil, false
	}
	return o.ForecastedPoints, true
}

// HasForecastedPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasForecastedPoints() bool {
	if o != nil && !IsNil(o.ForecastedPoints) {
		return true
	}

	return false
}

// SetForecastedPoints gets a reference to the given float32 and assigns it to the ForecastedPoints field.
func (o *RoomRotationPointsInfoType) SetForecastedPoints(v float32) {
	o.ForecastedPoints = &v
}

// GetOutOfOrderServicePoints returns the OutOfOrderServicePoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetOutOfOrderServicePoints() float32 {
	if o == nil || IsNil(o.OutOfOrderServicePoints) {
		var ret float32
		return ret
	}
	return *o.OutOfOrderServicePoints
}

// GetOutOfOrderServicePointsOk returns a tuple with the OutOfOrderServicePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetOutOfOrderServicePointsOk() (*float32, bool) {
	if o == nil || IsNil(o.OutOfOrderServicePoints) {
		return nil, false
	}
	return o.OutOfOrderServicePoints, true
}

// HasOutOfOrderServicePoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasOutOfOrderServicePoints() bool {
	if o != nil && !IsNil(o.OutOfOrderServicePoints) {
		return true
	}

	return false
}

// SetOutOfOrderServicePoints gets a reference to the given float32 and assigns it to the OutOfOrderServicePoints field.
func (o *RoomRotationPointsInfoType) SetOutOfOrderServicePoints(v float32) {
	o.OutOfOrderServicePoints = &v
}

// GetProratedAveragePoints returns the ProratedAveragePoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetProratedAveragePoints() float32 {
	if o == nil || IsNil(o.ProratedAveragePoints) {
		var ret float32
		return ret
	}
	return *o.ProratedAveragePoints
}

// GetProratedAveragePointsOk returns a tuple with the ProratedAveragePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetProratedAveragePointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ProratedAveragePoints) {
		return nil, false
	}
	return o.ProratedAveragePoints, true
}

// HasProratedAveragePoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasProratedAveragePoints() bool {
	if o != nil && !IsNil(o.ProratedAveragePoints) {
		return true
	}

	return false
}

// SetProratedAveragePoints gets a reference to the given float32 and assigns it to the ProratedAveragePoints field.
func (o *RoomRotationPointsInfoType) SetProratedAveragePoints(v float32) {
	o.ProratedAveragePoints = &v
}

// GetRandomPoints returns the RandomPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetRandomPoints() float32 {
	if o == nil || IsNil(o.RandomPoints) {
		var ret float32
		return ret
	}
	return *o.RandomPoints
}

// GetRandomPointsOk returns a tuple with the RandomPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetRandomPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.RandomPoints) {
		return nil, false
	}
	return o.RandomPoints, true
}

// HasRandomPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasRandomPoints() bool {
	if o != nil && !IsNil(o.RandomPoints) {
		return true
	}

	return false
}

// SetRandomPoints gets a reference to the given float32 and assigns it to the RandomPoints field.
func (o *RoomRotationPointsInfoType) SetRandomPoints(v float32) {
	o.RandomPoints = &v
}

// GetReservationAdjustedPoints returns the ReservationAdjustedPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetReservationAdjustedPoints() float32 {
	if o == nil || IsNil(o.ReservationAdjustedPoints) {
		var ret float32
		return ret
	}
	return *o.ReservationAdjustedPoints
}

// GetReservationAdjustedPointsOk returns a tuple with the ReservationAdjustedPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetReservationAdjustedPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.ReservationAdjustedPoints) {
		return nil, false
	}
	return o.ReservationAdjustedPoints, true
}

// HasReservationAdjustedPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasReservationAdjustedPoints() bool {
	if o != nil && !IsNil(o.ReservationAdjustedPoints) {
		return true
	}

	return false
}

// SetReservationAdjustedPoints gets a reference to the given float32 and assigns it to the ReservationAdjustedPoints field.
func (o *RoomRotationPointsInfoType) SetReservationAdjustedPoints(v float32) {
	o.ReservationAdjustedPoints = &v
}

// GetRoomAdjustedPoints returns the RoomAdjustedPoints field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetRoomAdjustedPoints() float32 {
	if o == nil || IsNil(o.RoomAdjustedPoints) {
		var ret float32
		return ret
	}
	return *o.RoomAdjustedPoints
}

// GetRoomAdjustedPointsOk returns a tuple with the RoomAdjustedPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetRoomAdjustedPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.RoomAdjustedPoints) {
		return nil, false
	}
	return o.RoomAdjustedPoints, true
}

// HasRoomAdjustedPoints returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasRoomAdjustedPoints() bool {
	if o != nil && !IsNil(o.RoomAdjustedPoints) {
		return true
	}

	return false
}

// SetRoomAdjustedPoints gets a reference to the given float32 and assigns it to the RoomAdjustedPoints field.
func (o *RoomRotationPointsInfoType) SetRoomAdjustedPoints(v float32) {
	o.RoomAdjustedPoints = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *RoomRotationPointsInfoType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRotationPointsInfoType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *RoomRotationPointsInfoType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *RoomRotationPointsInfoType) SetRoomId(v string) {
	o.RoomId = &v
}

func (o RoomRotationPointsInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomRotationPointsInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceForwardPoints) {
		toSerialize["balanceForwardPoints"] = o.BalanceForwardPoints
	}
	if !IsNil(o.CalculatedPoints) {
		toSerialize["calculatedPoints"] = o.CalculatedPoints
	}
	if !IsNil(o.ForecastedPoints) {
		toSerialize["forecastedPoints"] = o.ForecastedPoints
	}
	if !IsNil(o.OutOfOrderServicePoints) {
		toSerialize["outOfOrderServicePoints"] = o.OutOfOrderServicePoints
	}
	if !IsNil(o.ProratedAveragePoints) {
		toSerialize["proratedAveragePoints"] = o.ProratedAveragePoints
	}
	if !IsNil(o.RandomPoints) {
		toSerialize["randomPoints"] = o.RandomPoints
	}
	if !IsNil(o.ReservationAdjustedPoints) {
		toSerialize["reservationAdjustedPoints"] = o.ReservationAdjustedPoints
	}
	if !IsNil(o.RoomAdjustedPoints) {
		toSerialize["roomAdjustedPoints"] = o.RoomAdjustedPoints
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	return toSerialize, nil
}

type NullableRoomRotationPointsInfoType struct {
	value *RoomRotationPointsInfoType
	isSet bool
}

func (v NullableRoomRotationPointsInfoType) Get() *RoomRotationPointsInfoType {
	return v.value
}

func (v *NullableRoomRotationPointsInfoType) Set(val *RoomRotationPointsInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomRotationPointsInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomRotationPointsInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomRotationPointsInfoType(val *RoomRotationPointsInfoType) *NullableRoomRotationPointsInfoType {
	return &NullableRoomRotationPointsInfoType{value: val, isSet: true}
}

func (v NullableRoomRotationPointsInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomRotationPointsInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


