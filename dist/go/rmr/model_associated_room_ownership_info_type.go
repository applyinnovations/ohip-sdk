/*
OPERA Cloud Room Rotation Service API

APIs to facilitate Room Rotation functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmr

import (
	"encoding/json"
)

// checks if the AssociatedRoomOwnershipInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociatedRoomOwnershipInfoType{}

// AssociatedRoomOwnershipInfoType Associated Room Ownership Information
type AssociatedRoomOwnershipInfoType struct {
	AssociatedRoomOwnershipType *AssociatedRoomOwnershipType `json:"associatedRoomOwnershipType,omitempty"`
	// End date of Room Ownership contract
	EndDate *string `json:"endDate,omitempty"`
	// Hotel Id
	HotelId *string `json:"hotelId,omitempty"`
	// Whether Room is available for the exclusive use of its designated owner and owner referrals, or if it is available in general availability
	OwnerExclusive *bool `json:"ownerExclusive,omitempty"`
	// Room Number
	RoomId *string `json:"roomId,omitempty"`
	// Unique Id for Room Owner record.
	RoomOwnershipId *int32 `json:"roomOwnershipId,omitempty"`
	// Room Type
	RoomType *string `json:"roomType,omitempty"`
	// Start date of Room Ownership contract
	StartDate *string `json:"startDate,omitempty"`
}

// NewAssociatedRoomOwnershipInfoType instantiates a new AssociatedRoomOwnershipInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociatedRoomOwnershipInfoType() *AssociatedRoomOwnershipInfoType {
	this := AssociatedRoomOwnershipInfoType{}
	return &this
}

// NewAssociatedRoomOwnershipInfoTypeWithDefaults instantiates a new AssociatedRoomOwnershipInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociatedRoomOwnershipInfoTypeWithDefaults() *AssociatedRoomOwnershipInfoType {
	this := AssociatedRoomOwnershipInfoType{}
	return &this
}

// GetAssociatedRoomOwnershipType returns the AssociatedRoomOwnershipType field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetAssociatedRoomOwnershipType() AssociatedRoomOwnershipType {
	if o == nil || IsNil(o.AssociatedRoomOwnershipType) {
		var ret AssociatedRoomOwnershipType
		return ret
	}
	return *o.AssociatedRoomOwnershipType
}

// GetAssociatedRoomOwnershipTypeOk returns a tuple with the AssociatedRoomOwnershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetAssociatedRoomOwnershipTypeOk() (*AssociatedRoomOwnershipType, bool) {
	if o == nil || IsNil(o.AssociatedRoomOwnershipType) {
		return nil, false
	}
	return o.AssociatedRoomOwnershipType, true
}

// HasAssociatedRoomOwnershipType returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasAssociatedRoomOwnershipType() bool {
	if o != nil && !IsNil(o.AssociatedRoomOwnershipType) {
		return true
	}

	return false
}

// SetAssociatedRoomOwnershipType gets a reference to the given AssociatedRoomOwnershipType and assigns it to the AssociatedRoomOwnershipType field.
func (o *AssociatedRoomOwnershipInfoType) SetAssociatedRoomOwnershipType(v AssociatedRoomOwnershipType) {
	o.AssociatedRoomOwnershipType = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *AssociatedRoomOwnershipInfoType) SetEndDate(v string) {
	o.EndDate = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *AssociatedRoomOwnershipInfoType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetOwnerExclusive returns the OwnerExclusive field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetOwnerExclusive() bool {
	if o == nil || IsNil(o.OwnerExclusive) {
		var ret bool
		return ret
	}
	return *o.OwnerExclusive
}

// GetOwnerExclusiveOk returns a tuple with the OwnerExclusive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetOwnerExclusiveOk() (*bool, bool) {
	if o == nil || IsNil(o.OwnerExclusive) {
		return nil, false
	}
	return o.OwnerExclusive, true
}

// HasOwnerExclusive returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasOwnerExclusive() bool {
	if o != nil && !IsNil(o.OwnerExclusive) {
		return true
	}

	return false
}

// SetOwnerExclusive gets a reference to the given bool and assigns it to the OwnerExclusive field.
func (o *AssociatedRoomOwnershipInfoType) SetOwnerExclusive(v bool) {
	o.OwnerExclusive = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *AssociatedRoomOwnershipInfoType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomOwnershipId returns the RoomOwnershipId field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetRoomOwnershipId() int32 {
	if o == nil || IsNil(o.RoomOwnershipId) {
		var ret int32
		return ret
	}
	return *o.RoomOwnershipId
}

// GetRoomOwnershipIdOk returns a tuple with the RoomOwnershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetRoomOwnershipIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RoomOwnershipId) {
		return nil, false
	}
	return o.RoomOwnershipId, true
}

// HasRoomOwnershipId returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasRoomOwnershipId() bool {
	if o != nil && !IsNil(o.RoomOwnershipId) {
		return true
	}

	return false
}

// SetRoomOwnershipId gets a reference to the given int32 and assigns it to the RoomOwnershipId field.
func (o *AssociatedRoomOwnershipInfoType) SetRoomOwnershipId(v int32) {
	o.RoomOwnershipId = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *AssociatedRoomOwnershipInfoType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AssociatedRoomOwnershipInfoType) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedRoomOwnershipInfoType) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AssociatedRoomOwnershipInfoType) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *AssociatedRoomOwnershipInfoType) SetStartDate(v string) {
	o.StartDate = &v
}

func (o AssociatedRoomOwnershipInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociatedRoomOwnershipInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociatedRoomOwnershipType) {
		toSerialize["associatedRoomOwnershipType"] = o.AssociatedRoomOwnershipType
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.OwnerExclusive) {
		toSerialize["ownerExclusive"] = o.OwnerExclusive
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomOwnershipId) {
		toSerialize["roomOwnershipId"] = o.RoomOwnershipId
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableAssociatedRoomOwnershipInfoType struct {
	value *AssociatedRoomOwnershipInfoType
	isSet bool
}

func (v NullableAssociatedRoomOwnershipInfoType) Get() *AssociatedRoomOwnershipInfoType {
	return v.value
}

func (v *NullableAssociatedRoomOwnershipInfoType) Set(val *AssociatedRoomOwnershipInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociatedRoomOwnershipInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociatedRoomOwnershipInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociatedRoomOwnershipInfoType(val *AssociatedRoomOwnershipInfoType) *NullableAssociatedRoomOwnershipInfoType {
	return &NullableAssociatedRoomOwnershipInfoType{value: val, isSet: true}
}

func (v NullableAssociatedRoomOwnershipInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociatedRoomOwnershipInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


