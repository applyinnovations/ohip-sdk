/*
OPERA Cloud CRM Asynchronous API

APIs to insert Stay Records related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmasync

import (
	"encoding/json"
)

// checks if the StayRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayRecord{}

// StayRecord struct for StayRecord
type StayRecord struct {
	// Specifies the property name
	Resort *string `json:"resort,omitempty"`
	StayDailyRates []StayDailyRatesType `json:"stayDailyRates,omitempty"`
	StayMemberships []StayMembershipsType `json:"stayMemberships,omitempty"`
	StayProfiles []StayProfilesType `json:"stayProfiles,omitempty"`
	StayRecordsList []StayRecordsType `json:"stayRecordsList,omitempty"`
	StayRevenuesDetails []StayRevenuesDetailsType `json:"stayRevenuesDetails,omitempty"`
}

// NewStayRecord instantiates a new StayRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayRecord() *StayRecord {
	this := StayRecord{}
	return &this
}

// NewStayRecordWithDefaults instantiates a new StayRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayRecordWithDefaults() *StayRecord {
	this := StayRecord{}
	return &this
}

// GetResort returns the Resort field value if set, zero value otherwise.
func (o *StayRecord) GetResort() string {
	if o == nil || IsNil(o.Resort) {
		var ret string
		return ret
	}
	return *o.Resort
}

// GetResortOk returns a tuple with the Resort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetResortOk() (*string, bool) {
	if o == nil || IsNil(o.Resort) {
		return nil, false
	}
	return o.Resort, true
}

// HasResort returns a boolean if a field has been set.
func (o *StayRecord) HasResort() bool {
	if o != nil && !IsNil(o.Resort) {
		return true
	}

	return false
}

// SetResort gets a reference to the given string and assigns it to the Resort field.
func (o *StayRecord) SetResort(v string) {
	o.Resort = &v
}

// GetStayDailyRates returns the StayDailyRates field value if set, zero value otherwise.
func (o *StayRecord) GetStayDailyRates() []StayDailyRatesType {
	if o == nil || IsNil(o.StayDailyRates) {
		var ret []StayDailyRatesType
		return ret
	}
	return o.StayDailyRates
}

// GetStayDailyRatesOk returns a tuple with the StayDailyRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetStayDailyRatesOk() ([]StayDailyRatesType, bool) {
	if o == nil || IsNil(o.StayDailyRates) {
		return nil, false
	}
	return o.StayDailyRates, true
}

// HasStayDailyRates returns a boolean if a field has been set.
func (o *StayRecord) HasStayDailyRates() bool {
	if o != nil && !IsNil(o.StayDailyRates) {
		return true
	}

	return false
}

// SetStayDailyRates gets a reference to the given []StayDailyRatesType and assigns it to the StayDailyRates field.
func (o *StayRecord) SetStayDailyRates(v []StayDailyRatesType) {
	o.StayDailyRates = v
}

// GetStayMemberships returns the StayMemberships field value if set, zero value otherwise.
func (o *StayRecord) GetStayMemberships() []StayMembershipsType {
	if o == nil || IsNil(o.StayMemberships) {
		var ret []StayMembershipsType
		return ret
	}
	return o.StayMemberships
}

// GetStayMembershipsOk returns a tuple with the StayMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetStayMembershipsOk() ([]StayMembershipsType, bool) {
	if o == nil || IsNil(o.StayMemberships) {
		return nil, false
	}
	return o.StayMemberships, true
}

// HasStayMemberships returns a boolean if a field has been set.
func (o *StayRecord) HasStayMemberships() bool {
	if o != nil && !IsNil(o.StayMemberships) {
		return true
	}

	return false
}

// SetStayMemberships gets a reference to the given []StayMembershipsType and assigns it to the StayMemberships field.
func (o *StayRecord) SetStayMemberships(v []StayMembershipsType) {
	o.StayMemberships = v
}

// GetStayProfiles returns the StayProfiles field value if set, zero value otherwise.
func (o *StayRecord) GetStayProfiles() []StayProfilesType {
	if o == nil || IsNil(o.StayProfiles) {
		var ret []StayProfilesType
		return ret
	}
	return o.StayProfiles
}

// GetStayProfilesOk returns a tuple with the StayProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetStayProfilesOk() ([]StayProfilesType, bool) {
	if o == nil || IsNil(o.StayProfiles) {
		return nil, false
	}
	return o.StayProfiles, true
}

// HasStayProfiles returns a boolean if a field has been set.
func (o *StayRecord) HasStayProfiles() bool {
	if o != nil && !IsNil(o.StayProfiles) {
		return true
	}

	return false
}

// SetStayProfiles gets a reference to the given []StayProfilesType and assigns it to the StayProfiles field.
func (o *StayRecord) SetStayProfiles(v []StayProfilesType) {
	o.StayProfiles = v
}

// GetStayRecordsList returns the StayRecordsList field value if set, zero value otherwise.
func (o *StayRecord) GetStayRecordsList() []StayRecordsType {
	if o == nil || IsNil(o.StayRecordsList) {
		var ret []StayRecordsType
		return ret
	}
	return o.StayRecordsList
}

// GetStayRecordsListOk returns a tuple with the StayRecordsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetStayRecordsListOk() ([]StayRecordsType, bool) {
	if o == nil || IsNil(o.StayRecordsList) {
		return nil, false
	}
	return o.StayRecordsList, true
}

// HasStayRecordsList returns a boolean if a field has been set.
func (o *StayRecord) HasStayRecordsList() bool {
	if o != nil && !IsNil(o.StayRecordsList) {
		return true
	}

	return false
}

// SetStayRecordsList gets a reference to the given []StayRecordsType and assigns it to the StayRecordsList field.
func (o *StayRecord) SetStayRecordsList(v []StayRecordsType) {
	o.StayRecordsList = v
}

// GetStayRevenuesDetails returns the StayRevenuesDetails field value if set, zero value otherwise.
func (o *StayRecord) GetStayRevenuesDetails() []StayRevenuesDetailsType {
	if o == nil || IsNil(o.StayRevenuesDetails) {
		var ret []StayRevenuesDetailsType
		return ret
	}
	return o.StayRevenuesDetails
}

// GetStayRevenuesDetailsOk returns a tuple with the StayRevenuesDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecord) GetStayRevenuesDetailsOk() ([]StayRevenuesDetailsType, bool) {
	if o == nil || IsNil(o.StayRevenuesDetails) {
		return nil, false
	}
	return o.StayRevenuesDetails, true
}

// HasStayRevenuesDetails returns a boolean if a field has been set.
func (o *StayRecord) HasStayRevenuesDetails() bool {
	if o != nil && !IsNil(o.StayRevenuesDetails) {
		return true
	}

	return false
}

// SetStayRevenuesDetails gets a reference to the given []StayRevenuesDetailsType and assigns it to the StayRevenuesDetails field.
func (o *StayRecord) SetStayRevenuesDetails(v []StayRevenuesDetailsType) {
	o.StayRevenuesDetails = v
}

func (o StayRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resort) {
		toSerialize["resort"] = o.Resort
	}
	if !IsNil(o.StayDailyRates) {
		toSerialize["stayDailyRates"] = o.StayDailyRates
	}
	if !IsNil(o.StayMemberships) {
		toSerialize["stayMemberships"] = o.StayMemberships
	}
	if !IsNil(o.StayProfiles) {
		toSerialize["stayProfiles"] = o.StayProfiles
	}
	if !IsNil(o.StayRecordsList) {
		toSerialize["stayRecordsList"] = o.StayRecordsList
	}
	if !IsNil(o.StayRevenuesDetails) {
		toSerialize["stayRevenuesDetails"] = o.StayRevenuesDetails
	}
	return toSerialize, nil
}

type NullableStayRecord struct {
	value *StayRecord
	isSet bool
}

func (v NullableStayRecord) Get() *StayRecord {
	return v.value
}

func (v *NullableStayRecord) Set(val *StayRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableStayRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableStayRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayRecord(val *StayRecord) *NullableStayRecord {
	return &NullableStayRecord{value: val, isSet: true}
}

func (v NullableStayRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


