/*
OPERA Cloud CRM Asynchronous API

APIs to insert Stay Records related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmasync

import (
	"encoding/json"
)

// checks if the StayRecordsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayRecordsType{}

// StayRecordsType struct for StayRecordsType
type StayRecordsType struct {
	// Describes the user defined field 01
	UDFC01 *string `json:"UDFC01,omitempty"`
	// Describes the user defined field 02
	UDFC02 *string `json:"UDFC02,omitempty"`
	// Describes the user defined field 03
	UDFC03 *string `json:"UDFC03,omitempty"`
	// Describes the user defined field 04
	UDFC04 *string `json:"UDFC04,omitempty"`
	// Describes the user defined field 05
	UDFC05 *string `json:"UDFC05,omitempty"`
	// Describes the user defined field 06
	UDFC06 *string `json:"UDFC06,omitempty"`
	// Describes the user defined field 07
	UDFC07 *string `json:"UDFC07,omitempty"`
	// Describes the user defined field 08
	UDFC08 *string `json:"UDFC08,omitempty"`
	// Describes the user defined field 09
	UDFC09 *string `json:"UDFC09,omitempty"`
	// Describes the user defined field 10
	UDFC10 *string `json:"UDFC10,omitempty"`
	// Describes the user defined field 01
	UDFD01 *string `json:"UDFD01,omitempty"`
	// Describes the user defined field 02
	UDFD02 *string `json:"UDFD02,omitempty"`
	// Describes the user defined field 03
	UDFD03 *string `json:"UDFD03,omitempty"`
	// Describes the user defined field 04
	UDFD04 *string `json:"UDFD04,omitempty"`
	// Describes the user defined field 05
	UDFD05 *string `json:"UDFD05,omitempty"`
	// Describes the user defined field 10
	UDFN01 *float32 `json:"UDFN01,omitempty"`
	// Describes the user defined field 10
	UDFN02 *float32 `json:"UDFN02,omitempty"`
	// Describes the user defined field 10
	UDFN03 *float32 `json:"UDFN03,omitempty"`
	// Describes the user defined field 10
	UDFN04 *float32 `json:"UDFN04,omitempty"`
	// Describes the user defined field 10
	UDFN05 *float32 `json:"UDFN05,omitempty"`
	// Describes the number of adults
	Adults *float32 `json:"adults,omitempty"`
	// Specifies the date of arrival
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	// Specifies the base rate amount
	BaseRateAmount *float32 `json:"baseRateAmount,omitempty"`
	// Specifies the base rate code
	BaseRateCode *string `json:"baseRateCode,omitempty"`
	// Specifies the currency code of the base rate
	BaseRateCurrencyCode *string `json:"baseRateCurrencyCode,omitempty"`
	// Specifies the block code
	BlockCode *string `json:"blockCode,omitempty"`
	// Specifies the type of room booked.
	BookedRoomType *string `json:"bookedRoomType,omitempty"`
	// Specifies the date of booking.
	BookingDate *string `json:"bookingDate,omitempty"`
	// Specifies the date of cancellation
	CancellationDate *string `json:"cancellationDate,omitempty"`
	// Specifies the channel
	Channel *string `json:"channel,omitempty"`
	// specifies the number of children
	Children *float32 `json:"children,omitempty"`
	// Specifies the id assigned to the company
	CompanyId *string `json:"companyId,omitempty"`
	// Specifies the confirmation leg number
	ConfirmationLegNumber *float32 `json:"confirmationLegNumber,omitempty"`
	// Specifies the confirmation number
	ConfirmationNumber *string `json:"confirmationNumber,omitempty"`
	// Specifies the currency code
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Specifies the date of departure
	DepartureDate *string `json:"departureDate,omitempty"`
	// Specifies the exchange rate
	ExhangeRate *float32 `json:"exhangeRate,omitempty"`
	// Describes the id assigned to an external reservation
	ExternalReservationId *string `json:"externalReservationId,omitempty"`
	// Specifies the id assigned to a group
	GroupId *string `json:"groupId,omitempty"`
	// Specifies the id assigned to a guest name
	GuestNameId *string `json:"guestNameId,omitempty"`
	// Specifies the code assigned to a property
	HotelCode *string `json:"hotelCode,omitempty"`
	// Describes if complimentary or not
	Complimentary *bool `json:"complimentary,omitempty"`
	// Describes if it is a primary share
	PrimaryShare *bool `json:"primaryShare,omitempty"`
	// Specifies the miscellaneous id
	MiscellaneousId *string `json:"miscellaneousId,omitempty"`
	// Specifies the payment method used
	PaymentMethod *string `json:"paymentMethod,omitempty"`
	// Specifies the postal code
	PosCode *string `json:"posCode,omitempty"`
	// Specifies the promotion code
	PromotionCode *string `json:"promotionCode,omitempty"`
	// Describes the reservation status ie CANCELLED, CHECKED OUT, ARRIVAL etc
	ReservationStatus *string `json:"reservationStatus,omitempty"`
	// Specifies the expected arrival time of the reservation
	ReservationExpectedArrivalTime *string `json:"reservationExpectedArrivalTime,omitempty"`
	// Specifies the expected departure time of the reservation
	ReservationExpectedDepartureTime *string `json:"reservationExpectedDepartureTime,omitempty"`
	// Specifies the insert source for the reservation
	ReservationInsertSource *string `json:"reservationInsertSource,omitempty"`
	// Specifies the insert source type for the reservation
	ReservationInsertSourceType *string `json:"reservationInsertSourceType,omitempty"`
	// Describes the number assigned to a room.
	RoomNumber *string `json:"roomNumber,omitempty"`
	// Specifies the revenue for the room.
	RoomRevenue *float32 `json:"roomRevenue,omitempty"`
	// Describes the type of the room.
	RoomType *string `json:"roomType,omitempty"`
	// Specifies the share id.
	ShareId *string `json:"shareId,omitempty"`
	// Specifies the source code.
	SourceCode *string `json:"sourceCode,omitempty"`
	// Specifies the source id.
	SourceId *string `json:"sourceId,omitempty"`
	// Specifies the stage status.
	StageStatus *string `json:"stageStatus,omitempty"`
	// Specifies the stage suspense reason.
	StageSuspenseReason *string `json:"stageSuspenseReason,omitempty"`
	// Specifies the total revenue.
	TotalRevenue *float32 `json:"totalRevenue,omitempty"`
	// Specifies the travel agent id
	TravelAgentId *string `json:"travelAgentId,omitempty"`
}

// NewStayRecordsType instantiates a new StayRecordsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayRecordsType() *StayRecordsType {
	this := StayRecordsType{}
	return &this
}

// NewStayRecordsTypeWithDefaults instantiates a new StayRecordsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayRecordsTypeWithDefaults() *StayRecordsType {
	this := StayRecordsType{}
	return &this
}

// GetUDFC01 returns the UDFC01 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC01() string {
	if o == nil || IsNil(o.UDFC01) {
		var ret string
		return ret
	}
	return *o.UDFC01
}

// GetUDFC01Ok returns a tuple with the UDFC01 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC01Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC01) {
		return nil, false
	}
	return o.UDFC01, true
}

// HasUDFC01 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC01() bool {
	if o != nil && !IsNil(o.UDFC01) {
		return true
	}

	return false
}

// SetUDFC01 gets a reference to the given string and assigns it to the UDFC01 field.
func (o *StayRecordsType) SetUDFC01(v string) {
	o.UDFC01 = &v
}

// GetUDFC02 returns the UDFC02 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC02() string {
	if o == nil || IsNil(o.UDFC02) {
		var ret string
		return ret
	}
	return *o.UDFC02
}

// GetUDFC02Ok returns a tuple with the UDFC02 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC02Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC02) {
		return nil, false
	}
	return o.UDFC02, true
}

// HasUDFC02 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC02() bool {
	if o != nil && !IsNil(o.UDFC02) {
		return true
	}

	return false
}

// SetUDFC02 gets a reference to the given string and assigns it to the UDFC02 field.
func (o *StayRecordsType) SetUDFC02(v string) {
	o.UDFC02 = &v
}

// GetUDFC03 returns the UDFC03 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC03() string {
	if o == nil || IsNil(o.UDFC03) {
		var ret string
		return ret
	}
	return *o.UDFC03
}

// GetUDFC03Ok returns a tuple with the UDFC03 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC03Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC03) {
		return nil, false
	}
	return o.UDFC03, true
}

// HasUDFC03 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC03() bool {
	if o != nil && !IsNil(o.UDFC03) {
		return true
	}

	return false
}

// SetUDFC03 gets a reference to the given string and assigns it to the UDFC03 field.
func (o *StayRecordsType) SetUDFC03(v string) {
	o.UDFC03 = &v
}

// GetUDFC04 returns the UDFC04 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC04() string {
	if o == nil || IsNil(o.UDFC04) {
		var ret string
		return ret
	}
	return *o.UDFC04
}

// GetUDFC04Ok returns a tuple with the UDFC04 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC04Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC04) {
		return nil, false
	}
	return o.UDFC04, true
}

// HasUDFC04 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC04() bool {
	if o != nil && !IsNil(o.UDFC04) {
		return true
	}

	return false
}

// SetUDFC04 gets a reference to the given string and assigns it to the UDFC04 field.
func (o *StayRecordsType) SetUDFC04(v string) {
	o.UDFC04 = &v
}

// GetUDFC05 returns the UDFC05 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC05() string {
	if o == nil || IsNil(o.UDFC05) {
		var ret string
		return ret
	}
	return *o.UDFC05
}

// GetUDFC05Ok returns a tuple with the UDFC05 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC05Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC05) {
		return nil, false
	}
	return o.UDFC05, true
}

// HasUDFC05 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC05() bool {
	if o != nil && !IsNil(o.UDFC05) {
		return true
	}

	return false
}

// SetUDFC05 gets a reference to the given string and assigns it to the UDFC05 field.
func (o *StayRecordsType) SetUDFC05(v string) {
	o.UDFC05 = &v
}

// GetUDFC06 returns the UDFC06 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC06() string {
	if o == nil || IsNil(o.UDFC06) {
		var ret string
		return ret
	}
	return *o.UDFC06
}

// GetUDFC06Ok returns a tuple with the UDFC06 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC06Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC06) {
		return nil, false
	}
	return o.UDFC06, true
}

// HasUDFC06 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC06() bool {
	if o != nil && !IsNil(o.UDFC06) {
		return true
	}

	return false
}

// SetUDFC06 gets a reference to the given string and assigns it to the UDFC06 field.
func (o *StayRecordsType) SetUDFC06(v string) {
	o.UDFC06 = &v
}

// GetUDFC07 returns the UDFC07 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC07() string {
	if o == nil || IsNil(o.UDFC07) {
		var ret string
		return ret
	}
	return *o.UDFC07
}

// GetUDFC07Ok returns a tuple with the UDFC07 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC07Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC07) {
		return nil, false
	}
	return o.UDFC07, true
}

// HasUDFC07 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC07() bool {
	if o != nil && !IsNil(o.UDFC07) {
		return true
	}

	return false
}

// SetUDFC07 gets a reference to the given string and assigns it to the UDFC07 field.
func (o *StayRecordsType) SetUDFC07(v string) {
	o.UDFC07 = &v
}

// GetUDFC08 returns the UDFC08 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC08() string {
	if o == nil || IsNil(o.UDFC08) {
		var ret string
		return ret
	}
	return *o.UDFC08
}

// GetUDFC08Ok returns a tuple with the UDFC08 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC08Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC08) {
		return nil, false
	}
	return o.UDFC08, true
}

// HasUDFC08 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC08() bool {
	if o != nil && !IsNil(o.UDFC08) {
		return true
	}

	return false
}

// SetUDFC08 gets a reference to the given string and assigns it to the UDFC08 field.
func (o *StayRecordsType) SetUDFC08(v string) {
	o.UDFC08 = &v
}

// GetUDFC09 returns the UDFC09 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC09() string {
	if o == nil || IsNil(o.UDFC09) {
		var ret string
		return ret
	}
	return *o.UDFC09
}

// GetUDFC09Ok returns a tuple with the UDFC09 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC09Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC09) {
		return nil, false
	}
	return o.UDFC09, true
}

// HasUDFC09 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC09() bool {
	if o != nil && !IsNil(o.UDFC09) {
		return true
	}

	return false
}

// SetUDFC09 gets a reference to the given string and assigns it to the UDFC09 field.
func (o *StayRecordsType) SetUDFC09(v string) {
	o.UDFC09 = &v
}

// GetUDFC10 returns the UDFC10 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFC10() string {
	if o == nil || IsNil(o.UDFC10) {
		var ret string
		return ret
	}
	return *o.UDFC10
}

// GetUDFC10Ok returns a tuple with the UDFC10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFC10Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFC10) {
		return nil, false
	}
	return o.UDFC10, true
}

// HasUDFC10 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFC10() bool {
	if o != nil && !IsNil(o.UDFC10) {
		return true
	}

	return false
}

// SetUDFC10 gets a reference to the given string and assigns it to the UDFC10 field.
func (o *StayRecordsType) SetUDFC10(v string) {
	o.UDFC10 = &v
}

// GetUDFD01 returns the UDFD01 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFD01() string {
	if o == nil || IsNil(o.UDFD01) {
		var ret string
		return ret
	}
	return *o.UDFD01
}

// GetUDFD01Ok returns a tuple with the UDFD01 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFD01Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFD01) {
		return nil, false
	}
	return o.UDFD01, true
}

// HasUDFD01 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFD01() bool {
	if o != nil && !IsNil(o.UDFD01) {
		return true
	}

	return false
}

// SetUDFD01 gets a reference to the given string and assigns it to the UDFD01 field.
func (o *StayRecordsType) SetUDFD01(v string) {
	o.UDFD01 = &v
}

// GetUDFD02 returns the UDFD02 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFD02() string {
	if o == nil || IsNil(o.UDFD02) {
		var ret string
		return ret
	}
	return *o.UDFD02
}

// GetUDFD02Ok returns a tuple with the UDFD02 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFD02Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFD02) {
		return nil, false
	}
	return o.UDFD02, true
}

// HasUDFD02 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFD02() bool {
	if o != nil && !IsNil(o.UDFD02) {
		return true
	}

	return false
}

// SetUDFD02 gets a reference to the given string and assigns it to the UDFD02 field.
func (o *StayRecordsType) SetUDFD02(v string) {
	o.UDFD02 = &v
}

// GetUDFD03 returns the UDFD03 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFD03() string {
	if o == nil || IsNil(o.UDFD03) {
		var ret string
		return ret
	}
	return *o.UDFD03
}

// GetUDFD03Ok returns a tuple with the UDFD03 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFD03Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFD03) {
		return nil, false
	}
	return o.UDFD03, true
}

// HasUDFD03 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFD03() bool {
	if o != nil && !IsNil(o.UDFD03) {
		return true
	}

	return false
}

// SetUDFD03 gets a reference to the given string and assigns it to the UDFD03 field.
func (o *StayRecordsType) SetUDFD03(v string) {
	o.UDFD03 = &v
}

// GetUDFD04 returns the UDFD04 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFD04() string {
	if o == nil || IsNil(o.UDFD04) {
		var ret string
		return ret
	}
	return *o.UDFD04
}

// GetUDFD04Ok returns a tuple with the UDFD04 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFD04Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFD04) {
		return nil, false
	}
	return o.UDFD04, true
}

// HasUDFD04 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFD04() bool {
	if o != nil && !IsNil(o.UDFD04) {
		return true
	}

	return false
}

// SetUDFD04 gets a reference to the given string and assigns it to the UDFD04 field.
func (o *StayRecordsType) SetUDFD04(v string) {
	o.UDFD04 = &v
}

// GetUDFD05 returns the UDFD05 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFD05() string {
	if o == nil || IsNil(o.UDFD05) {
		var ret string
		return ret
	}
	return *o.UDFD05
}

// GetUDFD05Ok returns a tuple with the UDFD05 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFD05Ok() (*string, bool) {
	if o == nil || IsNil(o.UDFD05) {
		return nil, false
	}
	return o.UDFD05, true
}

// HasUDFD05 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFD05() bool {
	if o != nil && !IsNil(o.UDFD05) {
		return true
	}

	return false
}

// SetUDFD05 gets a reference to the given string and assigns it to the UDFD05 field.
func (o *StayRecordsType) SetUDFD05(v string) {
	o.UDFD05 = &v
}

// GetUDFN01 returns the UDFN01 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFN01() float32 {
	if o == nil || IsNil(o.UDFN01) {
		var ret float32
		return ret
	}
	return *o.UDFN01
}

// GetUDFN01Ok returns a tuple with the UDFN01 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFN01Ok() (*float32, bool) {
	if o == nil || IsNil(o.UDFN01) {
		return nil, false
	}
	return o.UDFN01, true
}

// HasUDFN01 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFN01() bool {
	if o != nil && !IsNil(o.UDFN01) {
		return true
	}

	return false
}

// SetUDFN01 gets a reference to the given float32 and assigns it to the UDFN01 field.
func (o *StayRecordsType) SetUDFN01(v float32) {
	o.UDFN01 = &v
}

// GetUDFN02 returns the UDFN02 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFN02() float32 {
	if o == nil || IsNil(o.UDFN02) {
		var ret float32
		return ret
	}
	return *o.UDFN02
}

// GetUDFN02Ok returns a tuple with the UDFN02 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFN02Ok() (*float32, bool) {
	if o == nil || IsNil(o.UDFN02) {
		return nil, false
	}
	return o.UDFN02, true
}

// HasUDFN02 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFN02() bool {
	if o != nil && !IsNil(o.UDFN02) {
		return true
	}

	return false
}

// SetUDFN02 gets a reference to the given float32 and assigns it to the UDFN02 field.
func (o *StayRecordsType) SetUDFN02(v float32) {
	o.UDFN02 = &v
}

// GetUDFN03 returns the UDFN03 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFN03() float32 {
	if o == nil || IsNil(o.UDFN03) {
		var ret float32
		return ret
	}
	return *o.UDFN03
}

// GetUDFN03Ok returns a tuple with the UDFN03 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFN03Ok() (*float32, bool) {
	if o == nil || IsNil(o.UDFN03) {
		return nil, false
	}
	return o.UDFN03, true
}

// HasUDFN03 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFN03() bool {
	if o != nil && !IsNil(o.UDFN03) {
		return true
	}

	return false
}

// SetUDFN03 gets a reference to the given float32 and assigns it to the UDFN03 field.
func (o *StayRecordsType) SetUDFN03(v float32) {
	o.UDFN03 = &v
}

// GetUDFN04 returns the UDFN04 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFN04() float32 {
	if o == nil || IsNil(o.UDFN04) {
		var ret float32
		return ret
	}
	return *o.UDFN04
}

// GetUDFN04Ok returns a tuple with the UDFN04 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFN04Ok() (*float32, bool) {
	if o == nil || IsNil(o.UDFN04) {
		return nil, false
	}
	return o.UDFN04, true
}

// HasUDFN04 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFN04() bool {
	if o != nil && !IsNil(o.UDFN04) {
		return true
	}

	return false
}

// SetUDFN04 gets a reference to the given float32 and assigns it to the UDFN04 field.
func (o *StayRecordsType) SetUDFN04(v float32) {
	o.UDFN04 = &v
}

// GetUDFN05 returns the UDFN05 field value if set, zero value otherwise.
func (o *StayRecordsType) GetUDFN05() float32 {
	if o == nil || IsNil(o.UDFN05) {
		var ret float32
		return ret
	}
	return *o.UDFN05
}

// GetUDFN05Ok returns a tuple with the UDFN05 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetUDFN05Ok() (*float32, bool) {
	if o == nil || IsNil(o.UDFN05) {
		return nil, false
	}
	return o.UDFN05, true
}

// HasUDFN05 returns a boolean if a field has been set.
func (o *StayRecordsType) HasUDFN05() bool {
	if o != nil && !IsNil(o.UDFN05) {
		return true
	}

	return false
}

// SetUDFN05 gets a reference to the given float32 and assigns it to the UDFN05 field.
func (o *StayRecordsType) SetUDFN05(v float32) {
	o.UDFN05 = &v
}

// GetAdults returns the Adults field value if set, zero value otherwise.
func (o *StayRecordsType) GetAdults() float32 {
	if o == nil || IsNil(o.Adults) {
		var ret float32
		return ret
	}
	return *o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetAdultsOk() (*float32, bool) {
	if o == nil || IsNil(o.Adults) {
		return nil, false
	}
	return o.Adults, true
}

// HasAdults returns a boolean if a field has been set.
func (o *StayRecordsType) HasAdults() bool {
	if o != nil && !IsNil(o.Adults) {
		return true
	}

	return false
}

// SetAdults gets a reference to the given float32 and assigns it to the Adults field.
func (o *StayRecordsType) SetAdults(v float32) {
	o.Adults = &v
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *StayRecordsType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *StayRecordsType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *StayRecordsType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetBaseRateAmount returns the BaseRateAmount field value if set, zero value otherwise.
func (o *StayRecordsType) GetBaseRateAmount() float32 {
	if o == nil || IsNil(o.BaseRateAmount) {
		var ret float32
		return ret
	}
	return *o.BaseRateAmount
}

// GetBaseRateAmountOk returns a tuple with the BaseRateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBaseRateAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseRateAmount) {
		return nil, false
	}
	return o.BaseRateAmount, true
}

// HasBaseRateAmount returns a boolean if a field has been set.
func (o *StayRecordsType) HasBaseRateAmount() bool {
	if o != nil && !IsNil(o.BaseRateAmount) {
		return true
	}

	return false
}

// SetBaseRateAmount gets a reference to the given float32 and assigns it to the BaseRateAmount field.
func (o *StayRecordsType) SetBaseRateAmount(v float32) {
	o.BaseRateAmount = &v
}

// GetBaseRateCode returns the BaseRateCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetBaseRateCode() string {
	if o == nil || IsNil(o.BaseRateCode) {
		var ret string
		return ret
	}
	return *o.BaseRateCode
}

// GetBaseRateCodeOk returns a tuple with the BaseRateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBaseRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseRateCode) {
		return nil, false
	}
	return o.BaseRateCode, true
}

// HasBaseRateCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasBaseRateCode() bool {
	if o != nil && !IsNil(o.BaseRateCode) {
		return true
	}

	return false
}

// SetBaseRateCode gets a reference to the given string and assigns it to the BaseRateCode field.
func (o *StayRecordsType) SetBaseRateCode(v string) {
	o.BaseRateCode = &v
}

// GetBaseRateCurrencyCode returns the BaseRateCurrencyCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetBaseRateCurrencyCode() string {
	if o == nil || IsNil(o.BaseRateCurrencyCode) {
		var ret string
		return ret
	}
	return *o.BaseRateCurrencyCode
}

// GetBaseRateCurrencyCodeOk returns a tuple with the BaseRateCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBaseRateCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BaseRateCurrencyCode) {
		return nil, false
	}
	return o.BaseRateCurrencyCode, true
}

// HasBaseRateCurrencyCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasBaseRateCurrencyCode() bool {
	if o != nil && !IsNil(o.BaseRateCurrencyCode) {
		return true
	}

	return false
}

// SetBaseRateCurrencyCode gets a reference to the given string and assigns it to the BaseRateCurrencyCode field.
func (o *StayRecordsType) SetBaseRateCurrencyCode(v string) {
	o.BaseRateCurrencyCode = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *StayRecordsType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetBookedRoomType returns the BookedRoomType field value if set, zero value otherwise.
func (o *StayRecordsType) GetBookedRoomType() string {
	if o == nil || IsNil(o.BookedRoomType) {
		var ret string
		return ret
	}
	return *o.BookedRoomType
}

// GetBookedRoomTypeOk returns a tuple with the BookedRoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBookedRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BookedRoomType) {
		return nil, false
	}
	return o.BookedRoomType, true
}

// HasBookedRoomType returns a boolean if a field has been set.
func (o *StayRecordsType) HasBookedRoomType() bool {
	if o != nil && !IsNil(o.BookedRoomType) {
		return true
	}

	return false
}

// SetBookedRoomType gets a reference to the given string and assigns it to the BookedRoomType field.
func (o *StayRecordsType) SetBookedRoomType(v string) {
	o.BookedRoomType = &v
}

// GetBookingDate returns the BookingDate field value if set, zero value otherwise.
func (o *StayRecordsType) GetBookingDate() string {
	if o == nil || IsNil(o.BookingDate) {
		var ret string
		return ret
	}
	return *o.BookingDate
}

// GetBookingDateOk returns a tuple with the BookingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetBookingDateOk() (*string, bool) {
	if o == nil || IsNil(o.BookingDate) {
		return nil, false
	}
	return o.BookingDate, true
}

// HasBookingDate returns a boolean if a field has been set.
func (o *StayRecordsType) HasBookingDate() bool {
	if o != nil && !IsNil(o.BookingDate) {
		return true
	}

	return false
}

// SetBookingDate gets a reference to the given string and assigns it to the BookingDate field.
func (o *StayRecordsType) SetBookingDate(v string) {
	o.BookingDate = &v
}

// GetCancellationDate returns the CancellationDate field value if set, zero value otherwise.
func (o *StayRecordsType) GetCancellationDate() string {
	if o == nil || IsNil(o.CancellationDate) {
		var ret string
		return ret
	}
	return *o.CancellationDate
}

// GetCancellationDateOk returns a tuple with the CancellationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetCancellationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationDate) {
		return nil, false
	}
	return o.CancellationDate, true
}

// HasCancellationDate returns a boolean if a field has been set.
func (o *StayRecordsType) HasCancellationDate() bool {
	if o != nil && !IsNil(o.CancellationDate) {
		return true
	}

	return false
}

// SetCancellationDate gets a reference to the given string and assigns it to the CancellationDate field.
func (o *StayRecordsType) SetCancellationDate(v string) {
	o.CancellationDate = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *StayRecordsType) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *StayRecordsType) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *StayRecordsType) SetChannel(v string) {
	o.Channel = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *StayRecordsType) GetChildren() float32 {
	if o == nil || IsNil(o.Children) {
		var ret float32
		return ret
	}
	return *o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetChildrenOk() (*float32, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *StayRecordsType) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given float32 and assigns it to the Children field.
func (o *StayRecordsType) SetChildren(v float32) {
	o.Children = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *StayRecordsType) GetCompanyId() string {
	if o == nil || IsNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetCompanyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *StayRecordsType) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *StayRecordsType) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetConfirmationLegNumber returns the ConfirmationLegNumber field value if set, zero value otherwise.
func (o *StayRecordsType) GetConfirmationLegNumber() float32 {
	if o == nil || IsNil(o.ConfirmationLegNumber) {
		var ret float32
		return ret
	}
	return *o.ConfirmationLegNumber
}

// GetConfirmationLegNumberOk returns a tuple with the ConfirmationLegNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetConfirmationLegNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.ConfirmationLegNumber) {
		return nil, false
	}
	return o.ConfirmationLegNumber, true
}

// HasConfirmationLegNumber returns a boolean if a field has been set.
func (o *StayRecordsType) HasConfirmationLegNumber() bool {
	if o != nil && !IsNil(o.ConfirmationLegNumber) {
		return true
	}

	return false
}

// SetConfirmationLegNumber gets a reference to the given float32 and assigns it to the ConfirmationLegNumber field.
func (o *StayRecordsType) SetConfirmationLegNumber(v float32) {
	o.ConfirmationLegNumber = &v
}

// GetConfirmationNumber returns the ConfirmationNumber field value if set, zero value otherwise.
func (o *StayRecordsType) GetConfirmationNumber() string {
	if o == nil || IsNil(o.ConfirmationNumber) {
		var ret string
		return ret
	}
	return *o.ConfirmationNumber
}

// GetConfirmationNumberOk returns a tuple with the ConfirmationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetConfirmationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ConfirmationNumber) {
		return nil, false
	}
	return o.ConfirmationNumber, true
}

// HasConfirmationNumber returns a boolean if a field has been set.
func (o *StayRecordsType) HasConfirmationNumber() bool {
	if o != nil && !IsNil(o.ConfirmationNumber) {
		return true
	}

	return false
}

// SetConfirmationNumber gets a reference to the given string and assigns it to the ConfirmationNumber field.
func (o *StayRecordsType) SetConfirmationNumber(v string) {
	o.ConfirmationNumber = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *StayRecordsType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *StayRecordsType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *StayRecordsType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *StayRecordsType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetExhangeRate returns the ExhangeRate field value if set, zero value otherwise.
func (o *StayRecordsType) GetExhangeRate() float32 {
	if o == nil || IsNil(o.ExhangeRate) {
		var ret float32
		return ret
	}
	return *o.ExhangeRate
}

// GetExhangeRateOk returns a tuple with the ExhangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetExhangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExhangeRate) {
		return nil, false
	}
	return o.ExhangeRate, true
}

// HasExhangeRate returns a boolean if a field has been set.
func (o *StayRecordsType) HasExhangeRate() bool {
	if o != nil && !IsNil(o.ExhangeRate) {
		return true
	}

	return false
}

// SetExhangeRate gets a reference to the given float32 and assigns it to the ExhangeRate field.
func (o *StayRecordsType) SetExhangeRate(v float32) {
	o.ExhangeRate = &v
}

// GetExternalReservationId returns the ExternalReservationId field value if set, zero value otherwise.
func (o *StayRecordsType) GetExternalReservationId() string {
	if o == nil || IsNil(o.ExternalReservationId) {
		var ret string
		return ret
	}
	return *o.ExternalReservationId
}

// GetExternalReservationIdOk returns a tuple with the ExternalReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetExternalReservationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalReservationId) {
		return nil, false
	}
	return o.ExternalReservationId, true
}

// HasExternalReservationId returns a boolean if a field has been set.
func (o *StayRecordsType) HasExternalReservationId() bool {
	if o != nil && !IsNil(o.ExternalReservationId) {
		return true
	}

	return false
}

// SetExternalReservationId gets a reference to the given string and assigns it to the ExternalReservationId field.
func (o *StayRecordsType) SetExternalReservationId(v string) {
	o.ExternalReservationId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *StayRecordsType) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *StayRecordsType) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *StayRecordsType) SetGroupId(v string) {
	o.GroupId = &v
}

// GetGuestNameId returns the GuestNameId field value if set, zero value otherwise.
func (o *StayRecordsType) GetGuestNameId() string {
	if o == nil || IsNil(o.GuestNameId) {
		var ret string
		return ret
	}
	return *o.GuestNameId
}

// GetGuestNameIdOk returns a tuple with the GuestNameId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetGuestNameIdOk() (*string, bool) {
	if o == nil || IsNil(o.GuestNameId) {
		return nil, false
	}
	return o.GuestNameId, true
}

// HasGuestNameId returns a boolean if a field has been set.
func (o *StayRecordsType) HasGuestNameId() bool {
	if o != nil && !IsNil(o.GuestNameId) {
		return true
	}

	return false
}

// SetGuestNameId gets a reference to the given string and assigns it to the GuestNameId field.
func (o *StayRecordsType) SetGuestNameId(v string) {
	o.GuestNameId = &v
}

// GetHotelCode returns the HotelCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetHotelCode() string {
	if o == nil || IsNil(o.HotelCode) {
		var ret string
		return ret
	}
	return *o.HotelCode
}

// GetHotelCodeOk returns a tuple with the HotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.HotelCode) {
		return nil, false
	}
	return o.HotelCode, true
}

// HasHotelCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasHotelCode() bool {
	if o != nil && !IsNil(o.HotelCode) {
		return true
	}

	return false
}

// SetHotelCode gets a reference to the given string and assigns it to the HotelCode field.
func (o *StayRecordsType) SetHotelCode(v string) {
	o.HotelCode = &v
}

// GetComplimentary returns the Complimentary field value if set, zero value otherwise.
func (o *StayRecordsType) GetComplimentary() bool {
	if o == nil || IsNil(o.Complimentary) {
		var ret bool
		return ret
	}
	return *o.Complimentary
}

// GetComplimentaryOk returns a tuple with the Complimentary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetComplimentaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Complimentary) {
		return nil, false
	}
	return o.Complimentary, true
}

// HasComplimentary returns a boolean if a field has been set.
func (o *StayRecordsType) HasComplimentary() bool {
	if o != nil && !IsNil(o.Complimentary) {
		return true
	}

	return false
}

// SetComplimentary gets a reference to the given bool and assigns it to the Complimentary field.
func (o *StayRecordsType) SetComplimentary(v bool) {
	o.Complimentary = &v
}

// GetPrimaryShare returns the PrimaryShare field value if set, zero value otherwise.
func (o *StayRecordsType) GetPrimaryShare() bool {
	if o == nil || IsNil(o.PrimaryShare) {
		var ret bool
		return ret
	}
	return *o.PrimaryShare
}

// GetPrimaryShareOk returns a tuple with the PrimaryShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetPrimaryShareOk() (*bool, bool) {
	if o == nil || IsNil(o.PrimaryShare) {
		return nil, false
	}
	return o.PrimaryShare, true
}

// HasPrimaryShare returns a boolean if a field has been set.
func (o *StayRecordsType) HasPrimaryShare() bool {
	if o != nil && !IsNil(o.PrimaryShare) {
		return true
	}

	return false
}

// SetPrimaryShare gets a reference to the given bool and assigns it to the PrimaryShare field.
func (o *StayRecordsType) SetPrimaryShare(v bool) {
	o.PrimaryShare = &v
}

// GetMiscellaneousId returns the MiscellaneousId field value if set, zero value otherwise.
func (o *StayRecordsType) GetMiscellaneousId() string {
	if o == nil || IsNil(o.MiscellaneousId) {
		var ret string
		return ret
	}
	return *o.MiscellaneousId
}

// GetMiscellaneousIdOk returns a tuple with the MiscellaneousId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetMiscellaneousIdOk() (*string, bool) {
	if o == nil || IsNil(o.MiscellaneousId) {
		return nil, false
	}
	return o.MiscellaneousId, true
}

// HasMiscellaneousId returns a boolean if a field has been set.
func (o *StayRecordsType) HasMiscellaneousId() bool {
	if o != nil && !IsNil(o.MiscellaneousId) {
		return true
	}

	return false
}

// SetMiscellaneousId gets a reference to the given string and assigns it to the MiscellaneousId field.
func (o *StayRecordsType) SetMiscellaneousId(v string) {
	o.MiscellaneousId = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *StayRecordsType) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetPaymentMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *StayRecordsType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *StayRecordsType) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetPosCode returns the PosCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetPosCode() string {
	if o == nil || IsNil(o.PosCode) {
		var ret string
		return ret
	}
	return *o.PosCode
}

// GetPosCodeOk returns a tuple with the PosCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetPosCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PosCode) {
		return nil, false
	}
	return o.PosCode, true
}

// HasPosCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasPosCode() bool {
	if o != nil && !IsNil(o.PosCode) {
		return true
	}

	return false
}

// SetPosCode gets a reference to the given string and assigns it to the PosCode field.
func (o *StayRecordsType) SetPosCode(v string) {
	o.PosCode = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *StayRecordsType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *StayRecordsType) GetReservationStatus() string {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret string
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *StayRecordsType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given string and assigns it to the ReservationStatus field.
func (o *StayRecordsType) SetReservationStatus(v string) {
	o.ReservationStatus = &v
}

// GetReservationExpectedArrivalTime returns the ReservationExpectedArrivalTime field value if set, zero value otherwise.
func (o *StayRecordsType) GetReservationExpectedArrivalTime() string {
	if o == nil || IsNil(o.ReservationExpectedArrivalTime) {
		var ret string
		return ret
	}
	return *o.ReservationExpectedArrivalTime
}

// GetReservationExpectedArrivalTimeOk returns a tuple with the ReservationExpectedArrivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetReservationExpectedArrivalTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationExpectedArrivalTime) {
		return nil, false
	}
	return o.ReservationExpectedArrivalTime, true
}

// HasReservationExpectedArrivalTime returns a boolean if a field has been set.
func (o *StayRecordsType) HasReservationExpectedArrivalTime() bool {
	if o != nil && !IsNil(o.ReservationExpectedArrivalTime) {
		return true
	}

	return false
}

// SetReservationExpectedArrivalTime gets a reference to the given string and assigns it to the ReservationExpectedArrivalTime field.
func (o *StayRecordsType) SetReservationExpectedArrivalTime(v string) {
	o.ReservationExpectedArrivalTime = &v
}

// GetReservationExpectedDepartureTime returns the ReservationExpectedDepartureTime field value if set, zero value otherwise.
func (o *StayRecordsType) GetReservationExpectedDepartureTime() string {
	if o == nil || IsNil(o.ReservationExpectedDepartureTime) {
		var ret string
		return ret
	}
	return *o.ReservationExpectedDepartureTime
}

// GetReservationExpectedDepartureTimeOk returns a tuple with the ReservationExpectedDepartureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetReservationExpectedDepartureTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationExpectedDepartureTime) {
		return nil, false
	}
	return o.ReservationExpectedDepartureTime, true
}

// HasReservationExpectedDepartureTime returns a boolean if a field has been set.
func (o *StayRecordsType) HasReservationExpectedDepartureTime() bool {
	if o != nil && !IsNil(o.ReservationExpectedDepartureTime) {
		return true
	}

	return false
}

// SetReservationExpectedDepartureTime gets a reference to the given string and assigns it to the ReservationExpectedDepartureTime field.
func (o *StayRecordsType) SetReservationExpectedDepartureTime(v string) {
	o.ReservationExpectedDepartureTime = &v
}

// GetReservationInsertSource returns the ReservationInsertSource field value if set, zero value otherwise.
func (o *StayRecordsType) GetReservationInsertSource() string {
	if o == nil || IsNil(o.ReservationInsertSource) {
		var ret string
		return ret
	}
	return *o.ReservationInsertSource
}

// GetReservationInsertSourceOk returns a tuple with the ReservationInsertSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetReservationInsertSourceOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationInsertSource) {
		return nil, false
	}
	return o.ReservationInsertSource, true
}

// HasReservationInsertSource returns a boolean if a field has been set.
func (o *StayRecordsType) HasReservationInsertSource() bool {
	if o != nil && !IsNil(o.ReservationInsertSource) {
		return true
	}

	return false
}

// SetReservationInsertSource gets a reference to the given string and assigns it to the ReservationInsertSource field.
func (o *StayRecordsType) SetReservationInsertSource(v string) {
	o.ReservationInsertSource = &v
}

// GetReservationInsertSourceType returns the ReservationInsertSourceType field value if set, zero value otherwise.
func (o *StayRecordsType) GetReservationInsertSourceType() string {
	if o == nil || IsNil(o.ReservationInsertSourceType) {
		var ret string
		return ret
	}
	return *o.ReservationInsertSourceType
}

// GetReservationInsertSourceTypeOk returns a tuple with the ReservationInsertSourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetReservationInsertSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationInsertSourceType) {
		return nil, false
	}
	return o.ReservationInsertSourceType, true
}

// HasReservationInsertSourceType returns a boolean if a field has been set.
func (o *StayRecordsType) HasReservationInsertSourceType() bool {
	if o != nil && !IsNil(o.ReservationInsertSourceType) {
		return true
	}

	return false
}

// SetReservationInsertSourceType gets a reference to the given string and assigns it to the ReservationInsertSourceType field.
func (o *StayRecordsType) SetReservationInsertSourceType(v string) {
	o.ReservationInsertSourceType = &v
}

// GetRoomNumber returns the RoomNumber field value if set, zero value otherwise.
func (o *StayRecordsType) GetRoomNumber() string {
	if o == nil || IsNil(o.RoomNumber) {
		var ret string
		return ret
	}
	return *o.RoomNumber
}

// GetRoomNumberOk returns a tuple with the RoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoomNumber) {
		return nil, false
	}
	return o.RoomNumber, true
}

// HasRoomNumber returns a boolean if a field has been set.
func (o *StayRecordsType) HasRoomNumber() bool {
	if o != nil && !IsNil(o.RoomNumber) {
		return true
	}

	return false
}

// SetRoomNumber gets a reference to the given string and assigns it to the RoomNumber field.
func (o *StayRecordsType) SetRoomNumber(v string) {
	o.RoomNumber = &v
}

// GetRoomRevenue returns the RoomRevenue field value if set, zero value otherwise.
func (o *StayRecordsType) GetRoomRevenue() float32 {
	if o == nil || IsNil(o.RoomRevenue) {
		var ret float32
		return ret
	}
	return *o.RoomRevenue
}

// GetRoomRevenueOk returns a tuple with the RoomRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetRoomRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.RoomRevenue) {
		return nil, false
	}
	return o.RoomRevenue, true
}

// HasRoomRevenue returns a boolean if a field has been set.
func (o *StayRecordsType) HasRoomRevenue() bool {
	if o != nil && !IsNil(o.RoomRevenue) {
		return true
	}

	return false
}

// SetRoomRevenue gets a reference to the given float32 and assigns it to the RoomRevenue field.
func (o *StayRecordsType) SetRoomRevenue(v float32) {
	o.RoomRevenue = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *StayRecordsType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *StayRecordsType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *StayRecordsType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetShareId returns the ShareId field value if set, zero value otherwise.
func (o *StayRecordsType) GetShareId() string {
	if o == nil || IsNil(o.ShareId) {
		var ret string
		return ret
	}
	return *o.ShareId
}

// GetShareIdOk returns a tuple with the ShareId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetShareIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShareId) {
		return nil, false
	}
	return o.ShareId, true
}

// HasShareId returns a boolean if a field has been set.
func (o *StayRecordsType) HasShareId() bool {
	if o != nil && !IsNil(o.ShareId) {
		return true
	}

	return false
}

// SetShareId gets a reference to the given string and assigns it to the ShareId field.
func (o *StayRecordsType) SetShareId(v string) {
	o.ShareId = &v
}

// GetSourceCode returns the SourceCode field value if set, zero value otherwise.
func (o *StayRecordsType) GetSourceCode() string {
	if o == nil || IsNil(o.SourceCode) {
		var ret string
		return ret
	}
	return *o.SourceCode
}

// GetSourceCodeOk returns a tuple with the SourceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetSourceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceCode) {
		return nil, false
	}
	return o.SourceCode, true
}

// HasSourceCode returns a boolean if a field has been set.
func (o *StayRecordsType) HasSourceCode() bool {
	if o != nil && !IsNil(o.SourceCode) {
		return true
	}

	return false
}

// SetSourceCode gets a reference to the given string and assigns it to the SourceCode field.
func (o *StayRecordsType) SetSourceCode(v string) {
	o.SourceCode = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *StayRecordsType) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *StayRecordsType) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *StayRecordsType) SetSourceId(v string) {
	o.SourceId = &v
}

// GetStageStatus returns the StageStatus field value if set, zero value otherwise.
func (o *StayRecordsType) GetStageStatus() string {
	if o == nil || IsNil(o.StageStatus) {
		var ret string
		return ret
	}
	return *o.StageStatus
}

// GetStageStatusOk returns a tuple with the StageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetStageStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StageStatus) {
		return nil, false
	}
	return o.StageStatus, true
}

// HasStageStatus returns a boolean if a field has been set.
func (o *StayRecordsType) HasStageStatus() bool {
	if o != nil && !IsNil(o.StageStatus) {
		return true
	}

	return false
}

// SetStageStatus gets a reference to the given string and assigns it to the StageStatus field.
func (o *StayRecordsType) SetStageStatus(v string) {
	o.StageStatus = &v
}

// GetStageSuspenseReason returns the StageSuspenseReason field value if set, zero value otherwise.
func (o *StayRecordsType) GetStageSuspenseReason() string {
	if o == nil || IsNil(o.StageSuspenseReason) {
		var ret string
		return ret
	}
	return *o.StageSuspenseReason
}

// GetStageSuspenseReasonOk returns a tuple with the StageSuspenseReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetStageSuspenseReasonOk() (*string, bool) {
	if o == nil || IsNil(o.StageSuspenseReason) {
		return nil, false
	}
	return o.StageSuspenseReason, true
}

// HasStageSuspenseReason returns a boolean if a field has been set.
func (o *StayRecordsType) HasStageSuspenseReason() bool {
	if o != nil && !IsNil(o.StageSuspenseReason) {
		return true
	}

	return false
}

// SetStageSuspenseReason gets a reference to the given string and assigns it to the StageSuspenseReason field.
func (o *StayRecordsType) SetStageSuspenseReason(v string) {
	o.StageSuspenseReason = &v
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *StayRecordsType) GetTotalRevenue() float32 {
	if o == nil || IsNil(o.TotalRevenue) {
		var ret float32
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetTotalRevenueOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalRevenue) {
		return nil, false
	}
	return o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *StayRecordsType) HasTotalRevenue() bool {
	if o != nil && !IsNil(o.TotalRevenue) {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given float32 and assigns it to the TotalRevenue field.
func (o *StayRecordsType) SetTotalRevenue(v float32) {
	o.TotalRevenue = &v
}

// GetTravelAgentId returns the TravelAgentId field value if set, zero value otherwise.
func (o *StayRecordsType) GetTravelAgentId() string {
	if o == nil || IsNil(o.TravelAgentId) {
		var ret string
		return ret
	}
	return *o.TravelAgentId
}

// GetTravelAgentIdOk returns a tuple with the TravelAgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayRecordsType) GetTravelAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.TravelAgentId) {
		return nil, false
	}
	return o.TravelAgentId, true
}

// HasTravelAgentId returns a boolean if a field has been set.
func (o *StayRecordsType) HasTravelAgentId() bool {
	if o != nil && !IsNil(o.TravelAgentId) {
		return true
	}

	return false
}

// SetTravelAgentId gets a reference to the given string and assigns it to the TravelAgentId field.
func (o *StayRecordsType) SetTravelAgentId(v string) {
	o.TravelAgentId = &v
}

func (o StayRecordsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayRecordsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UDFC01) {
		toSerialize["UDFC01"] = o.UDFC01
	}
	if !IsNil(o.UDFC02) {
		toSerialize["UDFC02"] = o.UDFC02
	}
	if !IsNil(o.UDFC03) {
		toSerialize["UDFC03"] = o.UDFC03
	}
	if !IsNil(o.UDFC04) {
		toSerialize["UDFC04"] = o.UDFC04
	}
	if !IsNil(o.UDFC05) {
		toSerialize["UDFC05"] = o.UDFC05
	}
	if !IsNil(o.UDFC06) {
		toSerialize["UDFC06"] = o.UDFC06
	}
	if !IsNil(o.UDFC07) {
		toSerialize["UDFC07"] = o.UDFC07
	}
	if !IsNil(o.UDFC08) {
		toSerialize["UDFC08"] = o.UDFC08
	}
	if !IsNil(o.UDFC09) {
		toSerialize["UDFC09"] = o.UDFC09
	}
	if !IsNil(o.UDFC10) {
		toSerialize["UDFC10"] = o.UDFC10
	}
	if !IsNil(o.UDFD01) {
		toSerialize["UDFD01"] = o.UDFD01
	}
	if !IsNil(o.UDFD02) {
		toSerialize["UDFD02"] = o.UDFD02
	}
	if !IsNil(o.UDFD03) {
		toSerialize["UDFD03"] = o.UDFD03
	}
	if !IsNil(o.UDFD04) {
		toSerialize["UDFD04"] = o.UDFD04
	}
	if !IsNil(o.UDFD05) {
		toSerialize["UDFD05"] = o.UDFD05
	}
	if !IsNil(o.UDFN01) {
		toSerialize["UDFN01"] = o.UDFN01
	}
	if !IsNil(o.UDFN02) {
		toSerialize["UDFN02"] = o.UDFN02
	}
	if !IsNil(o.UDFN03) {
		toSerialize["UDFN03"] = o.UDFN03
	}
	if !IsNil(o.UDFN04) {
		toSerialize["UDFN04"] = o.UDFN04
	}
	if !IsNil(o.UDFN05) {
		toSerialize["UDFN05"] = o.UDFN05
	}
	if !IsNil(o.Adults) {
		toSerialize["adults"] = o.Adults
	}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.BaseRateAmount) {
		toSerialize["baseRateAmount"] = o.BaseRateAmount
	}
	if !IsNil(o.BaseRateCode) {
		toSerialize["baseRateCode"] = o.BaseRateCode
	}
	if !IsNil(o.BaseRateCurrencyCode) {
		toSerialize["baseRateCurrencyCode"] = o.BaseRateCurrencyCode
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BookedRoomType) {
		toSerialize["bookedRoomType"] = o.BookedRoomType
	}
	if !IsNil(o.BookingDate) {
		toSerialize["bookingDate"] = o.BookingDate
	}
	if !IsNil(o.CancellationDate) {
		toSerialize["cancellationDate"] = o.CancellationDate
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !IsNil(o.ConfirmationLegNumber) {
		toSerialize["confirmationLegNumber"] = o.ConfirmationLegNumber
	}
	if !IsNil(o.ConfirmationNumber) {
		toSerialize["confirmationNumber"] = o.ConfirmationNumber
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.ExhangeRate) {
		toSerialize["exhangeRate"] = o.ExhangeRate
	}
	if !IsNil(o.ExternalReservationId) {
		toSerialize["externalReservationId"] = o.ExternalReservationId
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.GuestNameId) {
		toSerialize["guestNameId"] = o.GuestNameId
	}
	if !IsNil(o.HotelCode) {
		toSerialize["hotelCode"] = o.HotelCode
	}
	if !IsNil(o.Complimentary) {
		toSerialize["complimentary"] = o.Complimentary
	}
	if !IsNil(o.PrimaryShare) {
		toSerialize["primaryShare"] = o.PrimaryShare
	}
	if !IsNil(o.MiscellaneousId) {
		toSerialize["miscellaneousId"] = o.MiscellaneousId
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PosCode) {
		toSerialize["posCode"] = o.PosCode
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.ReservationExpectedArrivalTime) {
		toSerialize["reservationExpectedArrivalTime"] = o.ReservationExpectedArrivalTime
	}
	if !IsNil(o.ReservationExpectedDepartureTime) {
		toSerialize["reservationExpectedDepartureTime"] = o.ReservationExpectedDepartureTime
	}
	if !IsNil(o.ReservationInsertSource) {
		toSerialize["reservationInsertSource"] = o.ReservationInsertSource
	}
	if !IsNil(o.ReservationInsertSourceType) {
		toSerialize["reservationInsertSourceType"] = o.ReservationInsertSourceType
	}
	if !IsNil(o.RoomNumber) {
		toSerialize["roomNumber"] = o.RoomNumber
	}
	if !IsNil(o.RoomRevenue) {
		toSerialize["roomRevenue"] = o.RoomRevenue
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.ShareId) {
		toSerialize["shareId"] = o.ShareId
	}
	if !IsNil(o.SourceCode) {
		toSerialize["sourceCode"] = o.SourceCode
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.StageStatus) {
		toSerialize["stageStatus"] = o.StageStatus
	}
	if !IsNil(o.StageSuspenseReason) {
		toSerialize["stageSuspenseReason"] = o.StageSuspenseReason
	}
	if !IsNil(o.TotalRevenue) {
		toSerialize["totalRevenue"] = o.TotalRevenue
	}
	if !IsNil(o.TravelAgentId) {
		toSerialize["travelAgentId"] = o.TravelAgentId
	}
	return toSerialize, nil
}

type NullableStayRecordsType struct {
	value *StayRecordsType
	isSet bool
}

func (v NullableStayRecordsType) Get() *StayRecordsType {
	return v.value
}

func (v *NullableStayRecordsType) Set(val *StayRecordsType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayRecordsType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayRecordsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayRecordsType(val *StayRecordsType) *NullableStayRecordsType {
	return &NullableStayRecordsType{value: val, isSet: true}
}

func (v NullableStayRecordsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayRecordsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


