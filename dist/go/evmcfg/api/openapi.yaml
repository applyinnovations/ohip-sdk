openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "This API caters for Event Configuration in OPERA Cloud. <br /><There\
    \ are operations to post, update, fetch and delete codes such as item inventory,\
    \ function spaces, menu items and many more.<br /><br /> Compatible with OPERA\
    \ Cloud release 24.4.<br /><br /><p> This document and all content within is available\
    \ under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl).\
    \ Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Event Configuration API
  version: "24.4"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /evm/config/v1
tags:
- description: "The Resource Config Service Web Service offers capability to configure\
    \ Master Data needed for Hotel Resources such as managing Inventory Items, Item\
    \ Pools, Item Classes, etc."
  name: ResourceConfig
- description: These APIs will allow you to configure events related configuration
    related to Administration.
  name: ChainConfig
- description: These APIs will allow you to configure events related configuration
    related to Administration.
  name: HotelConfig
paths:
  /EventForecasts/copy:
    put:
      description: This API will allow you to copy an Event Forecast from a property
        to another. <p><strong>OperationId:</strong>copyEventForecasts</p>
      operationId: copyEventForecasts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eventForecastsCopy'
        description: Request object for Copying Event Forecasts to multiple hotels.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy event forecasts
      tags:
      - ResourceConfig
      x-codegen-request-body-name: eventForecastsCopy
  /cateringContainers:
    get:
      description: This API allows you to retrieve all existing Menu Item Catering
        Container codes. <p><strong>OperationId:</strong>getCateringContainers</p>
      operationId: getCateringContainers
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringContainersInfo'
          description: Response object for fetching Catering Code Containers details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringContainers not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get catering containers
      tags:
      - ResourceConfig
    post:
      description: "Menu Item Catering Containers describe how individual menu item\
        \ are sold (for example, per piece, per dozen, or each) when they are not\
        \ included in the price of the menu. The description prints on reports such\
        \ as the Banquet Event Order (BEO) and Proforma Invoice.  This API allows\
        \ you to create a new Menu Item Catering Container code and description. <p><strong>OperationId:</strong>postCateringContainers</p>"
      operationId: postCateringContainers
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringContainers'
        description: Request object which holds new Catering Code Containers.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create catering containers
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringContainers
  /cateringContainers/{cateringContainersCode}:
    delete:
      description: This API allows you to delete an existing Menu Item Catering Container
        code. <p><strong>OperationId:</strong>deleteCateringContainers</p>
      operationId: deleteCateringContainers
      parameters:
      - description: Unique Catering Container Code
        in: path
        name: cateringContainersCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Catering container
      tags:
      - ResourceConfig
    put:
      description: This API allows you to update an existing Menu Item Catering Container
        code. <p><strong>OperationId:</strong>putCateringContainers</p>
      operationId: putCateringContainers
      parameters:
      - description: Unique Catering Container Code
        in: path
        name: cateringContainersCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringContainers'
        description: Request object which holds modified Catering Code Containers.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change catering containers
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringContainers
  /cateringEventTypes:
    get:
      description: Use this API to get Function Space Event Types. <p><strong>OperationId:</strong>getFunctionSpaceEventTypes</p>
      operationId: getFunctionSpaceEventTypes
      parameters:
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the Event field value description to search.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceEventTypesDetails'
          description: Response object of the Function Space Event Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceEventTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function Space Event Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Function Space Event Types. <p><strong>OperationId:</strong>postFunctionSpaceEventTypes</p>
      operationId: postFunctionSpaceEventTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceEventTypesCriteria'
        description: Request object to create new Function Space Event Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Function Space Event Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: functionSpaceEventTypesCriteria
  /cateringEventTypes/{eventTypeCode}:
    delete:
      description: Use this API to delete Function Space Event Types. <p><strong>OperationId:</strong>removeFunctionSpaceEventTypes</p>
      operationId: removeFunctionSpaceEventTypes
      parameters:
      - description: Unique Code of Event Types.
        in: path
        name: eventTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Function Space Event Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Function Space Event Types. <p><strong>OperationId:</strong>changeFunctionSpaceEventTypes</p>
      operationId: changeFunctionSpaceEventTypes
      parameters:
      - description: Unique Code of Event Types.
        in: path
        name: eventTypeCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceEventTypesToBeChanged'
        description: Request object to update the existing Function Space Event Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Function Space Event Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: functionSpaceEventTypesToBeChanged
  /cateringItemRates:
    get:
      description: Retrieve catering item rates <p><strong>OperationId:</strong>getCateringItemRates</p>
      operationId: getCateringItemRates
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringItemRatesInfo'
          description: Response object for fetching Catering Code's Item Rate details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringItemRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get catering item rates
      tags:
      - ResourceConfig
    post:
      description: Create Catering Item rates <p><strong>OperationId:</strong>postCateringItemRates</p>
      operationId: postCateringItemRates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringItemRates'
        description: Request object which holds new Catering Code's Item Rates.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Catering Item rates
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringItemRates
  /cateringItemRates/{cateringItemRatesCode}:
    delete:
      description: Remove catering item rates code <p><strong>OperationId:</strong>deleteCateringItemRates</p>
      operationId: deleteCateringItemRates
      parameters:
      - description: Unique Catering Item Rates Codes
        in: path
        name: cateringItemRatesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove catering item rates
      tags:
      - ResourceConfig
    put:
      description: Change catering item rates code <p><strong>OperationId:</strong>putCateringItemRates</p>
      operationId: putCateringItemRates
      parameters:
      - description: Unique Catering Item Rates Codes
        in: path
        name: cateringItemRatesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringItemRates'
        description: Request object which holds modified Catering Code's Item Rate.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change catering item rates
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringItemRates
  /cateringMenuClasses:
    post:
      description: You can use this API to create menu classes. <p><strong>OperationId:</strong>postCateringMenuClasses</p>
      operationId: postCateringMenuClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuClasses'
        description: Requestion object for creating new Menu Classes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menu classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuClasses
    put:
      description: Update catering menu classes <p><strong>OperationId:</strong>putCateringMenuClasses</p>
      operationId: putCateringMenuClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuClasses'
        description: Request object for changing Menu Classes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update catering menu classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuClasses
  /cateringMenuItemClasses:
    post:
      description: You can use this API to create menu item classes. <p><strong>OperationId:</strong>postCateringMenuItemClasses</p>
      operationId: postCateringMenuItemClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItemClasses'
        description: Request object for Creating Menu Item Classes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menu item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItemClasses
  /cateringMenuItemClasses/{cateringMenuItemClassesCode}:
    delete:
      description: You can use this API to delete menu item classes. <p><strong>OperationId:</strong>deleteCateringMenuItemClasses</p>
      operationId: deleteCateringMenuItemClasses
      parameters:
      - description: Unique Menu Item Class ID
        in: path
        name: cateringMenuItemClassesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: menuItemClassesIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: menuItemClassesIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: menuItemClassesUniqueIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete menu item classes
      tags:
      - ResourceConfig
    put:
      description: You can use this API to update menu item classes. <p><strong>OperationId:</strong>putCateringMenuItemClasses</p>
      operationId: putCateringMenuItemClasses
      parameters:
      - description: Unique Menu Item Class Id
        in: path
        name: cateringMenuItemClassesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItemClasses'
        description: Request object for updating Menu Item Classes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update menu item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItemClasses
  /cateringMenuItemClasses/{cateringMenuItemClassesCode}/copy:
    put:
      description: You can use this API to copy menu item classes. <p><strong>OperationId:</strong>copyCateringMenuItemClasses</p>
      operationId: copyCateringMenuItemClasses
      parameters:
      - description: Unique Menu Item Class Id
        in: path
        name: cateringMenuItemClassesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItemClassesCopy'
        description: Request object for Copying Menu Item Classes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy menu item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItemClassesCopy
  /cateringMenuItems/{cateringMenuItemId}:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteCateringMenuItemsByChain</p>'
      operationId: deleteCateringMenuItemsByChain
      parameters:
      - description: Unique Catering Menu Item Id
        in: path
        name: cateringMenuItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Hotel code which the Catering Menu Items belongs to.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove catering menu items by chain.
      tags:
      - ResourceConfig
  /cateringPackageResources:
    delete:
      description: Use this API to delete catering package resources. <p><strong>OperationId:</strong>deleteCateringPackageResources</p>
      operationId: deleteCateringPackageResources
      parameters:
      - description: The Hotel code which the Catering Package Event belongs to.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Packages Event ID
        explode: true
        in: query
        name: pkgEventId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Packages Event Type
        explode: true
        in: query
        name: pkgEventIdType
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Unique Resources ID
        explode: true
        in: query
        name: resourceId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: pkgEventIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: pkgEventIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: pkgEventType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering package resources
      tags:
      - ResourceConfig
  /cateringPackages:
    get:
      description: Fetch existing Catering Packages. <p><strong>OperationId:</strong>getCateringPackagesMultiProperties</p>
        <p>The maximum allowable limit for this API is <strong>25</strong>.</p> <p>This
        API allows a time span of <strong>90</strong> days.</p>
      operationId: getCateringPackagesMultiProperties
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: false
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - explode: false
        in: query
        name: packageCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Revenue Types for which details are to be fetched.
        in: query
        name: description
        schema:
          type: string
      - description: Duration for which the event is scheduled.
        in: query
        name: duration
        schema:
          type: integer
      - description: Defines if web booking is allowed.
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: It represents Catering Packages and Templates both.
        in: query
        name: pkgTmpltType
        schema:
          enum:
          - Packages
          - Templates
          - Both
          type: string
      - description: Market Code associated with the price details of the Package.
        in: query
        name: marketCode
        schema:
          type: string
      - description: Price Code for which details are to be fetched.
        in: query
        name: priceCode
        schema:
          type: string
      - description: Minimum Attendees.
        in: query
        name: minAttendees
        schema:
          type: integer
      - description: Maximum Attendees.
        in: query
        name: maxAttendees
        schema:
          type: integer
      - description: Selling Date associated with the Price Details.
        in: query
        name: sellDate
        schema:
          format: date
          type: string
      - in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: Collection of configured Booking Types for the package property.
        in: query
        name: bookingType
        schema:
          type: string
      - description: Fetch instructions that can be used in Catering Packages maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PackageInfo
            - Events
            - Resources
            - Pricing
            - Indicators
            - BlockPackageInfo
            - EventNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringPackagesInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringPackagesMultiProperties not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch catering packages
      tags:
      - ResourceConfig
  /cateringPackages/{cateringPackageId}:
    get:
      description: Use this API to get catering package. <p><strong>OperationId:</strong>getCateringPackageByChain</p>
      operationId: getCateringPackageByChain
      parameters:
      - description: Unique Catering Package ID
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code of Catering Package to be fetched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: pkgIDType
        schema:
          type: string
      - description: Fetch instructions that can be used in Catering Packages maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PackageInfo
            - Events
            - Resources
            - Pricing
            - Indicators
            - BlockPackageInfo
            - EventNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringPackage'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringPackageByChain not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get catering package by chain
      tags:
      - ResourceConfig
  /cateringServings:
    get:
      description: Get catering servings <p><strong>OperationId:</strong>getCateringServings</p>
      operationId: getCateringServings
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: servingCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringServingsInfo'
          description: Response object for fetching Catering Code's Serving details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringServings not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get catering servings
      tags:
      - ResourceConfig
  /cateringServings/{cateringServingsCode}:
    put:
      description: Update catering servings <p><strong>OperationId:</strong>putCateringServings</p>
      operationId: putCateringServings
      parameters:
      - description: Unique Catering Sevrings Code
        in: path
        name: cateringServingsCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringServings'
        description: Request object which holds modified Catering Code's Serving.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update catering servings
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringServings
  /eventCodes:
    delete:
      description: Use this API to delete Template Event Codes. <p><strong>OperationId:</strong>removeTemplateEventCodes</p>
      operationId: removeTemplateEventCodes
      parameters:
      - explode: true
        in: query
        name: templateEventCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Template Event Codes
      tags:
      - HotelConfig
    get:
      description: Use this API to get Template Event Codes. <p><strong>OperationId:</strong>getTemplateEventCodes</p>
      operationId: getTemplateEventCodes
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: eventsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: "If true, this flag will set the criteria to return only Inactive\
          \ records."
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/templateEventCodesDetails'
          description: Response object for fetching template Event Codes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TemplateEventCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Template Event Codes
      tags:
      - HotelConfig
    post:
      description: Use this API to create Template Event Codes. <p><strong>OperationId:</strong>postTemplateEventCodes</p>
      operationId: postTemplateEventCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateEventCodesCriteria'
        description: Request object for creating new template Event Codes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Template Event Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateEventCodesCriteria
    put:
      description: Use this API to update Template Event Codes. <p><strong>OperationId:</strong>changeTemplateEventCodes</p>
      operationId: changeTemplateEventCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/templateEventCodesToBeChanged'
        description: Request object for modifying template Event Codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Template Event Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: templateEventCodesToBeChanged
  /eventForecasts:
    post:
      description: "You can define Event Forecasts, with or without a market code\
        \ or a block type, to manage different revenue forecasts for different types\
        \ of bookings, such as corporate versus social. This API will allow you to\
        \ create a new Event Forecast. <p><strong>OperationId:</strong>postEventForecasts</p>"
      operationId: postEventForecasts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eventForecasts'
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create event forecasts
      tags:
      - ResourceConfig
      x-codegen-request-body-name: eventForecasts
    put:
      description: This API will allow you to update an Event Forecast for a property.
        <p><strong>OperationId:</strong>putEventForecasts</p>
      operationId: putEventForecasts
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eventForecasts'
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Event forecasts
      tags:
      - ResourceConfig
      x-codegen-request-body-name: eventForecasts
  /eventForecasts/{forecastsId}/eventTypes/{eventTypesCode}/eventForecasts:
    delete:
      description: This API will allow you to delete an Event Forecast for a property.
        <p><strong>OperationId:</strong>deleteEventForecasts</p>
      operationId: deleteEventForecasts
      parameters:
      - description: Unique Event Type Code
        in: path
        name: eventTypesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Forecast Id
        in: path
        name: forecastsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: forecastIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: forecastIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: forecastIdType
        schema:
          type: string
      - description: Hotel Code to which the Event Forecast belongs to.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Code.
        in: query
        name: revenueTypeCode
        schema:
          type: string
      - description: description.
        in: query
        name: revenueTypeDescription
        schema:
          type: string
      - description: A monetary amount.
        in: query
        name: amount
        schema:
          type: number
      - description: Provides a currency code to reflect the currency in which an
          amount may be expressed.
        in: query
        name: currencyCode
        schema:
          type: string
      - description: Defines values for Amount Type of an event forecast revenue.
        explode: true
        in: query
        name: amountType
        schema:
          items:
            enum:
            - FlatAmount
            - PerPerson
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete event forecasts
      tags:
      - ResourceConfig
  /functionSpaceRentalCodes:
    get:
      description: Use this API to get Catering s Rental Codes. <p><strong>OperationId:</strong>getCateringRentalCodes</p>
      operationId: getCateringRentalCodes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringRentalCodesDetails'
          description: Response object for fetching Catering Rental Code details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringRentalCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Catering s Rental Codes
      tags:
      - HotelConfig
    post:
      description: Use this API to create Catering s Rental Codes. <p><strong>OperationId:</strong>postCateringRentalCodes</p>
      operationId: postCateringRentalCodes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringRentalCodesCriteria'
        description: Request object which holds new Catering Rental Code Details.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Catering s Rental Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: cateringRentalCodesCriteria
  /functionSpaceRentalCodes/{cateringRentalId}:
    delete:
      description: Use this API to delete Catering s Rental Codes. <p><strong>OperationId:</strong>removeCateringRentalCodes</p>
      operationId: removeCateringRentalCodes
      parameters:
      - description: Unique CateringRentalCode for functionSpace.
        in: path
        name: cateringRentalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Catering s Rental Codes
      tags:
      - HotelConfig
    put:
      description: Use this API to update Catering s Rental Codes. <p><strong>OperationId:</strong>changeCateringRentalCodes</p>
      operationId: changeCateringRentalCodes
      parameters:
      - description: Unique CateringRentalCode for functionSpace.
        in: path
        name: cateringRentalId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringRentalCodesToBeChanged'
        description: Request object which holds modified Catering Rental Codes.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Catering s Rental Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: cateringRentalCodesToBeChanged
  /functionSpaceTypes:
    get:
      description: Use this API to get Function Space Types. <p><strong>OperationId:</strong>getFunctionSpaceTypes</p>
      operationId: getFunctionSpaceTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceTypesDetails'
          description: Response object for fetching Function Space Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function Space Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Function Space Types. <p><strong>OperationId:</strong>postFunctionSpaceTypes</p>
      operationId: postFunctionSpaceTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceTypesCriteria'
        description: Request object for creating Function Space Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Function Space Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: functionSpaceTypesCriteria
  /functionSpaceTypes/{functionSpaceTypesId}:
    delete:
      description: Use this API to delete Function Space Types. <p><strong>OperationId:</strong>deleteFunctionSpaceTypes</p>
      operationId: deleteFunctionSpaceTypes
      parameters:
      - description: Unique ID of Function Space Types.
        in: path
        name: functionSpaceTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Function Space Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Function Space Types. <p><strong>OperationId:</strong>putFunctionSpaceTypes</p>
      operationId: putFunctionSpaceTypes
      parameters:
      - description: Unique ID of Function Space Types.
        in: path
        name: functionSpaceTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceTypesToBeChanged'
        description: Request object for changing Function Space Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Function Space Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: functionSpaceTypesToBeChanged
  /functionspaceLocations:
    get:
      description: Use this API to get detail information of function space locations.
        <p><strong>OperationId:</strong>getFunctionSpaceLocations</p>
      operationId: getFunctionSpaceLocations
      parameters:
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceLocationsDetails'
          description: Response object for fetching function space locations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceLocations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function space locations
      tags:
      - HotelConfig
  /functionspaceLocations/{functionspaceLocationCode}:
    delete:
      description: Use this API to delete function space locations. <p><strong>OperationId:</strong>removeFunctionSpaceLocations</p>
      operationId: removeFunctionSpaceLocations
      parameters:
      - description: Unique Code of function space locations.
        in: path
        name: functionspaceLocationCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel where the code is configured.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete function space locations
      tags:
      - HotelConfig
    post:
      description: Use this API to create function space locations. <p><strong>OperationId:</strong>postFunctionSpaceLocations</p>
      operationId: postFunctionSpaceLocations
      parameters:
      - description: Unique Code of function space locations.
        in: path
        name: functionspaceLocationCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceLocationsCriteria'
        description: Request object for adding function space location configurations
          to resort.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create function space locations
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpaceLocationsCriteria
    put:
      description: Use this API to update function space locations. <p><strong>OperationId:</strong>changeFunctionSpaceLocations</p>
      operationId: changeFunctionSpaceLocations
      parameters:
      - description: Unique Code of function space locations.
        in: path
        name: functionspaceLocationCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceLocationsToBeChanged'
        description: Request object for modifying function space location(s) for resort.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change function space locations
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpaceLocationsToBeChanged
  /functionspaceSetupStyles:
    get:
      description: Use this API to get Function space setup styles. <p><strong>OperationId:</strong>getFunctionSpaceSetupStyles</p>
      operationId: getFunctionSpaceSetupStyles
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceSetupStylesDetails'
          description: Response object for fetching function space setup styles.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceSetupStyles not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function space setup styles
      tags:
      - HotelConfig
    post:
      description: Use this API to create function space setup styles. <p><strong>OperationId:</strong>postFunctionSpaceSetupStyles</p>
      operationId: postFunctionSpaceSetupStyles
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceSetupStylesCriteria'
        description: Request object for adding function space setup styles.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create function space setup styles
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpaceSetupStylesCriteria
  /functionspaceSetupStyles/{functionSpaceSetupStyleId}:
    delete:
      description: Use this API to delete function space setup styles. <p><strong>OperationId:</strong>removeFunctionSpaceSetupStyles</p>
      operationId: removeFunctionSpaceSetupStyles
      parameters:
      - description: Unique ID of function space setup styles.
        in: path
        name: functionSpaceSetupStyleId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete function space setup styles
      tags:
      - HotelConfig
    put:
      description: Use this API to update function space setup styles. <p><strong>OperationId:</strong>changeFunctionSpaceSetupStyles</p>
      operationId: changeFunctionSpaceSetupStyles
      parameters:
      - description: Unique ID of function space setup styles.
        in: path
        name: functionSpaceSetupStyleId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpaceSetupStylesToBeChanged'
        description: Request object for modifying function space setup style(s)
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change function space setup styles
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpaceSetupStylesToBeChanged
  /functionspaces/{functionSpaceCode}:
    get:
      description: "Retrieve detailed information on function spaces, for example\
        \ Meeting Room. <p><strong>OperationId:</strong>getFunctionSpace</p> <p>The\
        \ maximum allowable limit for this API is <strong>25</strong>.</p>"
      operationId: getFunctionSpace
      parameters:
      - description: Unique code of  function Space .
        in: path
        name: functionSpaceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: Is it a physical room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - description: Hotel code of room to be searched.
        in: query
        name: hotelId
        schema:
          type: string
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceDetails'
          description: Response object for fetching complete information of existing
            function space room.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpace not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get Function space '
      tags:
      - HotelConfig
  /hotels/{hotelId}/cateringMenuClasses:
    get:
      description: Get menu classes for a property. <p><strong>OperationId:</strong>getCateringMenuClasses</p>
        <p>The maximum allowable limit for this API is <strong>25</strong>.</p>
      operationId: getCateringMenuClasses
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: The name of Menu Class.
        in: query
        name: className
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Menu
          Classes configured as Web Bookable.
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: If true this boolean will set the criteria to fetch associated
          menu for the menu classes.
        in: query
        name: includeMenus
        schema:
          type: boolean
      - description: If true this boolean will set the criteria to only return Menu
          Classes configured as Inactive.
        in: query
        name: inactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenuClassesInfo'
          description: Response object to fetch Menu Classes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenuClasses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get menu classes
      tags:
      - ResourceConfig
  /hotels/{hotelId}/cateringMenuItemClasses:
    get:
      description: Get menu item classes for a property. <p><strong>OperationId:</strong>getCateringMenuItemClasses</p>
        <p>The maximum allowable limit for this API is <strong>25</strong>.</p>
      operationId: getCateringMenuItemClasses
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Menu Item class name search filter.
        in: query
        name: className
        schema:
          type: string
      - description: Defines values for Menu Type
        explode: true
        in: query
        name: menuTypes
        schema:
          items:
            enum:
            - Food
            - Beverage
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicates if web bookable.
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: MenuItemClassInfo MenuItemInfo values can be passed as per requirement
        in: query
        name: includeMenuItems
        schema:
          default: true
          type: boolean
      - description: If true this boolean will set the criteria to only return Menu
          Item Classes configured as Inactive.
        in: query
        name: inactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenuItemClassesInfo'
          description: Response object for retrieving Menu Item Classes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenuItemClasses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get menu item classes
      tags:
      - ResourceConfig
  /hotels/{hotelId}/cateringMenuItems:
    get:
      description: Get Menu items for a property. <p><strong>OperationId:</strong>getCateringMenuItems</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p>
      operationId: getCateringMenuItems
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Menu item name of string lentgth 30
        in: query
        name: name
        schema:
          type: string
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Article number of Menu Item in Caps
        in: query
        name: quickInsertCode
        schema:
          type: string
      - explode: true
        in: query
        name: listTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this boolean will set the criteria to only return Menu
          Items configured as Inactive.
        in: query
        name: inactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: eventTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Fetch instructions that can be used in Fetching Catering Menus
          Items. SummaryInfo fetchInstruction is used to fetch limited set of Menu
          Item information required for Menu Items Panel Drawer and DetailsInfo returns
          detailed information required for Menu Items listing screen.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - SummaryInfo
            - DetailsInfo
            type: string
          maxItems: 20
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenuItemsInfo'
          description: Response object for retrieving Menu Items.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenuItems not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Menu items
      tags:
      - ResourceConfig
    post:
      description: You can use this API to create menu items. <p><strong>OperationId:</strong>postCateringMenuItems</p>
      operationId: postCateringMenuItems
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItems'
        description: Request object for creating Menu Items.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menu items
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItems
  /hotels/{hotelId}/cateringMenuItems/copy:
    post:
      description: ' <p><strong>OperationId:</strong>copyCateringMenuItems</p>'
      operationId: copyCateringMenuItems
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItemsCopy'
        description: Request object for Copying Menu Items.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy catering menu items.
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItemsCopy
  /hotels/{hotelId}/cateringMenuItems/{cateringMenuItemId}:
    delete:
      description: ' <p><strong>OperationId:</strong>deleteCateringMenuItems</p>'
      operationId: deleteCateringMenuItems
      parameters:
      - description: Unique Catering Menu Item Id
        in: path
        name: cateringMenuItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove catering menu items.
      tags:
      - ResourceConfig
    put:
      description: You can use this API to update menu items. <p><strong>OperationId:</strong>putCateringMenuItems</p>
      operationId: putCateringMenuItems
      parameters:
      - description: Unique Catering Menu Item Id
        in: path
        name: cateringMenuItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenuItems'
        description: Request object for changing Menu Items.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update menu items
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItems
  /hotels/{hotelId}/cateringMenus:
    get:
      description: Retrieve a list of menus for a property. <p><strong>OperationId:</strong>getCateringMenus</p>
        <p>The maximum allowable limit for this API is <strong>200</strong>.</p> <p>This
        API allows a time span of <strong>90</strong> days.</p>
      operationId: getCateringMenus
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: menuId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: iDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: menuIDType
        schema:
          type: string
      - description: This type holds name of Menu Class.
        in: query
        name: name
        schema:
          type: string
      - explode: true
        in: query
        name: classNameListCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: eventTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Defines values for Menu Type
        explode: true
        in: query
        name: menuTypes
        schema:
          items:
            enum:
            - Food
            - Beverage
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: dietaryListCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If true, only Composed Menu's marked as Inactive in Menu Configuration\
          \ will be returned."
        in: query
        name: inactive
        schema:
          type: boolean
      - description: When selected Only Composed Menu's noted as Multi Choice in Menu
          Configuration will be returned.
        in: query
        name: multiChoice
        schema:
          type: boolean
      - description: Check of Menu if it is web bookable
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Fetch instructions that can be used in Catering Menus maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Revenue
            - MenuDetails
            - MenuNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenusInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get menus
      tags:
      - ResourceConfig
    post:
      description: Create menus for a property. <p><strong>OperationId:</strong>postCateringMenus</p>
      operationId: postCateringMenus
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenus'
        description: Request object for creating new Menu .
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menus
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenus
  /hotels/{hotelId}/cateringMenus/{cateringMenuId}:
    delete:
      description: Delete a menu from a property. <p><strong>OperationId:</strong>deleteCateringMenus</p>
      operationId: deleteCateringMenus
      parameters:
      - description: Unique ID of Catering Menu
        in: path
        name: cateringMenuId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete a menu
      tags:
      - ResourceConfig
    get:
      description: Retrieve details of a Catering menu <p><strong>OperationId:</strong>getCateringMenu</p>
      operationId: getCateringMenu
      parameters:
      - description: Unique ID of Catering Menu
        in: path
        name: cateringMenuId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "If true, only Composed Menu's marked as Inactive in Menu Configuration\
          \ will be returned."
        in: query
        name: inactive
        schema:
          type: boolean
      - description: Fetch instructions that can be used in Catering Menus maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Revenue
            - MenuDetails
            - MenuNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenusInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenu not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get menu
      tags:
      - ResourceConfig
    put:
      description: ' <p><strong>OperationId:</strong>putCateringMenus</p>'
      operationId: putCateringMenus
      parameters:
      - description: Unique ID of Catering Menu
        in: path
        name: cateringMenuId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenus'
        description: Request object for changing Menu .
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change catering menus.
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenus
  /hotels/{hotelId}/cateringMenus/{cateringMenuId}/copy:
    post:
      description: Copy a menu for a property. <p><strong>OperationId:</strong>copyCateringMenus</p>
      operationId: copyCateringMenus
      parameters:
      - description: Unique ID of Catering Menu
        in: path
        name: cateringMenuId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringMenusCopy'
        description: Request object for copying a Menu.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy a menu
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenusCopy
  /hotels/{hotelId}/cateringPackages:
    get:
      description: Fetch existing Catering Packages for a property. <p><strong>OperationId:</strong>getCateringPackages</p>
        <p>The maximum allowable limit for this API is <strong>25</strong>.</p>
      operationId: getCateringPackages
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: false
        in: query
        name: packageCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Revenue Types for which details are to be fetched.
        in: query
        name: description
        schema:
          type: string
      - description: Duration for which the event is scheduled.
        in: query
        name: duration
        schema:
          type: integer
      - description: Defines if web booking is allowed.
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: It represents Catering Packages and Templates both.
        in: query
        name: pkgTmpltType
        schema:
          enum:
          - Packages
          - Templates
          - Both
          type: string
      - description: Market Code associated with the price details of the Package.
        in: query
        name: marketCode
        schema:
          type: string
      - description: Price Code for which details are to be fetched.
        in: query
        name: priceCode
        schema:
          type: string
      - description: Minimum Attendees.
        in: query
        name: minAttendees
        schema:
          type: integer
      - description: Maximum Attendees.
        in: query
        name: maxAttendees
        schema:
          type: integer
      - description: Selling Date associated with the Price Details.
        in: query
        name: sellDate
        schema:
          format: date
          type: string
      - in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: Collection of configured Booking Types for the package property.
        in: query
        name: bookingType
        schema:
          type: string
      - description: Fetch instructions that can be used in Catering Packages maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PackageInfo
            - Events
            - Resources
            - Pricing
            - Indicators
            - BlockPackageInfo
            - EventNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringPackagesInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringPackages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch catering packages for a property.
      tags:
      - ResourceConfig
    post:
      description: Catering packages and templates are designed to make it easier
        for you to set up Events. They provide pre-configured resources typically
        used for Events. Templates and packages are similar except that templates
        do not include prices. <p><strong>OperationId:</strong>postCateringPackages</p>
      operationId: postCateringPackages
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringPackages'
        description: Request object for creating new Catering Packages.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create catering packages
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringPackages
  /hotels/{hotelId}/cateringPackages/{cateringPackageId}:
    delete:
      description: Use this API to delete catering packages. <p><strong>OperationId:</strong>deleteCateringPackages</p>
      operationId: deleteCateringPackages
      parameters:
      - description: Unique Package Id
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Hotel Code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering packages
      tags:
      - ResourceConfig
    get:
      description: Use this API to get catering package. <p><strong>OperationId:</strong>getCateringPackage</p>
      operationId: getCateringPackage
      parameters:
      - description: Unique Catering Package ID
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: pkgIDType
        schema:
          type: string
      - description: Fetch instructions that can be used in Catering Packages maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PackageInfo
            - Events
            - Resources
            - Pricing
            - Indicators
            - BlockPackageInfo
            - EventNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringPackage'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringPackage not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get catering package
      tags:
      - ResourceConfig
    put:
      description: Update an existing Catering Package for a property. <p><strong>OperationId:</strong>putCateringPackages</p>
      operationId: putCateringPackages
      parameters:
      - description: Unique Catering Package ID
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/cateringPackages'
        description: Request object for changing Catering Packages.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Catering packages
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringPackages
  /hotels/{hotelId}/cateringPackages/{cateringPackageId}/copy:
    post:
      description: Use this API to copy catering package or template. <p><strong>OperationId:</strong>copyCateringPackage</p>
      operationId: copyCateringPackage
      parameters:
      - description: Unique OPERA Hotel code.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Unique Catering Package or Template ID.
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 38
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyCateringPackageType'
        description: Request object for Copying Catering Package/Template.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/resourceCodeInfo'
          description: Response object of newly copied resource or configuration code.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy catering package or template.
      tags:
      - ResourceConfig
      x-codegen-request-body-name: copyCateringPackageType
  /hotels/{hotelId}/cateringPackages/{cateringPackageId}/prices/{pricesId}/copy:
    post:
      description: Use this API to copy catering package price. <p><strong>OperationId:</strong>copyCateringPackagePrice</p>
      operationId: copyCateringPackagePrice
      parameters:
      - description: Unique Catering Package Prices ID
        in: path
        name: pricesId
        required: true
        schema:
          maxLength: 38
          minLength: 1
          type: string
      - description: Unique Catering Package ID.
        in: path
        name: cateringPackageId
        required: true
        schema:
          maxLength: 38
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 20
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyCateringPackagePriceType'
        description: Request object for Copying Catering Package Price.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/resourceCodeInfo'
          description: Response object of newly copied resource or configuration code.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to copy catering package price.
      tags:
      - ResourceConfig
      x-codegen-request-body-name: copyCateringPackagePriceType
  /hotels/{hotelId}/courses/{coursesId}/menuMultiCourses:
    delete:
      description: Use this API to remove Menu Multi Courses. <p><strong>OperationId:</strong>deleteCateringMenuMultiCourses</p>
      operationId: deleteCateringMenuMultiCourses
      parameters:
      - description: Unique Menu Multi Course ID
        in: path
        name: coursesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: courseIdListUniqueIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: courseIdListUniqueIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: courseIdListUniqueIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove menu multi courses
      tags:
      - ResourceConfig
  /hotels/{hotelId}/dailyInventoryItems:
    get:
      description: "Retrieve a list of Daily Item Inventories that exist for a property.\
        \  Examples of Item Inventory in a property could be Crib, Roll Away beds,\
        \ Microwave etc. API will fetch daily quantity configured for the particular\
        \ item.  <p><strong>OperationId:</strong>getDailyInventoryItems</p> <p>This\
        \ API allows a time span of <strong>7</strong> days.</p>"
      operationId: getDailyInventoryItems
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Item Class ID which daily item belongs to.
        in: query
        name: itemClassCode
        schema:
          type: string
      - description: Item name which daily item belongs to.
        in: query
        name: itemName
        schema:
          type: string
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/dailyInventoryItems'
          description: Response object for fetching Daily Inventory Items.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DailyInventoryItems not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Daily Item Inventory
      tags:
      - ResourceConfig
  /hotels/{hotelId}/discountAvailable/check:
    get:
      description: Check if discount is available <p><strong>OperationId:</strong>checkDiscountAvailable</p>
      operationId: checkDiscountAvailable
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkedDiscountAvailable'
          description: Response object to determimne whether the discount is availabe
            for resort or not.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: checkDiscountAvailable not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Check if discount is available
      tags:
      - ResourceConfig
  /hotels/{hotelId}/eventCodes:
    delete:
      description: Use this API to delete Hotel Event Codes. <p><strong>OperationId:</strong>removeEventCodes</p>
      operationId: removeEventCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Configuration code.
        explode: true
        in: query
        name: eventCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Hotel Event Codes
      tags:
      - HotelConfig
    get:
      description: Use this API to get Hotel Event Codes. <p><strong>OperationId:</strong>getEventCodes</p>
      operationId: getEventCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: eventsCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: "If true, this flag will set the criteria to return only Inactive\
          \ records."
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eventCodesDetails'
          description: Response object for fetching Event Codes for a hotel.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EventCodes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Hotel Event Codes
      tags:
      - HotelConfig
    post:
      description: Use this API to create Hotel Event Codes. <p><strong>OperationId:</strong>postEventCodes</p>
      operationId: postEventCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eventCodesCriteria'
        description: Request object for creating new Event Codes for a hotel.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Hotel Event Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: eventCodesCriteria
    put:
      description: Use this API to update Hotel Event Codes. <p><strong>OperationId:</strong>changeEventCodes</p>
      operationId: changeEventCodes
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/eventCodesToBeChanged'
        description: Request object for modifying Event Codes for a hotel.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Hotel Event Codes
      tags:
      - HotelConfig
      x-codegen-request-body-name: eventCodesToBeChanged
  /hotels/{hotelId}/eventForecasts:
    get:
      description: This API will allow you to retrieve all Event Forecast for a property.
        <p><strong>OperationId:</strong>getEventForecasts</p> <p>The maximum allowable
        limit for this API is <strong>200</strong>.</p>
      operationId: getEventForecasts
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Fetch instructions that can be used in event forecast maintenance.
        example:
        - forecastInfo
        explode: true
        in: query
        name: fetchInstructions
        required: true
        schema:
          items:
            enum:
            - ForecastInfo
            - RevenueDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Codes to be searched.
        explode: true
        in: query
        name: eventTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: eventTypeWildCard
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: revenueTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: revenueTypeWildCard
        schema:
          type: string
      - description: Date for which the event is scheduled.
        in: query
        name: eventDate
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: blockTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: marketCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/eventForecastsInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: EventForecasts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Event Forecasts
      tags:
      - ResourceConfig
  /hotels/{hotelId}/events/{eventsId}/revenues/{revenueType}/packages/{priceId}/cateringPackageRevenues:
    delete:
      description: Use this API to delete catering package revenues. <p><strong>OperationId:</strong>deleteCateringPackageRevenues</p>
      operationId: deleteCateringPackageRevenues
      parameters:
      - description: Unique Catering Packages Revenue Price ID
        in: path
        name: priceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Catering Packages Revenue Type
        in: path
        name: revenueType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Catering Packages Revenue Event ID
        in: path
        name: eventsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: packagePriceIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: packagePriceIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: packagePriceIdType
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: eventIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: eventIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: eventIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering package revenues
      tags:
      - ResourceConfig
  /hotels/{hotelId}/functionSpaces:
    get:
      description: "This API fetches the configured function spaces of a specific\
        \ property with possible search criteria of function space code, and space\
        \ type. The result returns the function spaces that fit the search criteria\
        \ with details about space name, short name, attributes such as shareable,\
        \ combo, web bookable, and more. <p><strong>OperationId:</strong>getFunctionSpaces</p>"
      operationId: getFunctionSpaces
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: A collection of supported sorting for Event Calendar Function
          Space.
        in: query
        name: sortingBy
        schema:
          enum:
          - Name
          - AttendeeCapacity
          - AreaSize
          - CustomOrder1
          - CustomOrder2
          - CustomOrder3
          type: string
      - explode: true
        in: query
        name: roomCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Type where function space belongs to
        in: query
        name: roomType
        schema:
          type: string
      - description: Space Type where function space belongs to
        in: query
        name: spaceType
        schema:
          type: string
      - description: Wild search on Room Code and Function Name.
        in: query
        name: functionSpaceWildcard
        schema:
          type: string
      - description: "If true, will set the criteria to return Function Spaces configured\
          \ as web bookable only."
        in: query
        name: webBookable
        schema:
          type: boolean
      - explode: true
        in: query
        name: floorCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: locationCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpacesDetails'
          description: Response object for fetching function spaces summary info at
            the property level.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaces not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function Spaces
      tags:
      - HotelConfig
    post:
      description: "This API allows the creation of function spaces. Criteria that\
        \ need to be supplied in the request body include function space code, description,\
        \ space type, and min / max attendees. Optional details such as short name,\
        \ shareable, combo, web bookable, and dimensions can also be included. <p><strong>OperationId:</strong>postFunctionSpaces</p>"
      operationId: postFunctionSpaces
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpacesCriteria'
        description: Request object for creating function spaces.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Function Spaces
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpacesCriteria
  /hotels/{hotelId}/functionSpaces/{functionSpaceCode}:
    delete:
      description: Use this API to delete Function Spaces. <p><strong>OperationId:</strong>removeFunctionSpaces</p>
      operationId: removeFunctionSpaces
      parameters:
      - description: Unique Code of functionSpace.
        in: path
        name: functionSpaceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Function Spaces
      tags:
      - HotelConfig
    put:
      description: Use this API to update Function Spaces. <p><strong>OperationId:</strong>changeFunctionSpaces</p>
      operationId: changeFunctionSpaces
      parameters:
      - description: Unique Code of functionSpace.
        in: path
        name: functionSpaceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/functionSpacesToBeChanged'
        description: Request object for changing function spaces.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Function Spaces
      tags:
      - HotelConfig
      x-codegen-request-body-name: functionSpacesToBeChanged
  /hotels/{hotelId}/functionSpaces/{functionSpaceCode}/configurations:
    get:
      description: ' Use this  get Function Space detailed information. <p><strong>OperationId:</strong>getFunctionSpaceConfig</p>'
      operationId: getFunctionSpaceConfig
      parameters:
      - description: Unique Code of function space.
        in: path
        name: functionSpaceCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceConfigDetails'
          description: Response object for fetching function space config info.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceConfig not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function Space Configuration
      tags:
      - HotelConfig
  /hotels/{hotelId}/inventoryItems:
    get:
      description: "Retrieve a list of Item Inventories that exist for a property.\
        \  Examples of Item Inventory in a property could be Crib, Roll Away beds,\
        \ Microwave etc.  There is typically a quantity configured for each item,\
        \ such as 5 Roll Away beds.  <p><strong>OperationId:</strong>getInventoryItems</p>\
        \ <p>The maximum allowable limit for this API is <strong>200</strong>.</p>\
        \ <p>This API allows a time span of <strong>7</strong> days.</p>"
      operationId: getInventoryItems
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The Item Class ID which the item belongs to.
        in: query
        name: itemClassCode
        schema:
          type: string
      - description: The name of Inventory Item.
        in: query
        name: itemName
        schema:
          type: string
      - description: "The code of Inventory Item, also known as Quick Insert."
        in: query
        name: itemCode
        schema:
          type: string
      - explode: true
        in: query
        name: eventTypecodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag to indicate whether the item is used for events.
        in: query
        name: usedForEvents
        schema:
          type: boolean
      - description: Indicates whether to include Items from Templates or not.
        in: query
        name: includeItemsFromTemplates
        schema:
          type: boolean
      - in: query
        name: startDateTime
        schema:
          format: date-time
          type: string
      - in: query
        name: endDateTime
        schema:
          format: date-time
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/inventoryItems'
          description: Response object to fetch Inventory Items Setup configuration
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InventoryItems not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Item Inventory
      tags:
      - ResourceConfig
    post:
      description: You can use this API to create a new Item Inventory Code for a
        property. <p><strong>OperationId:</strong>postInventoryItems</p>
      operationId: postInventoryItems
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/inventoryItems'
        description: Requestion object for creating new Inventory Items Setup configurations
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/inventoryItemsCreated'
          description: Response object for creating Inventory Items Setup configurations
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create an Item Inventory
      tags:
      - ResourceConfig
      x-codegen-request-body-name: inventoryItems
  /hotels/{hotelId}/inventoryItems/{inventoryItemId}:
    delete:
      description: Use this API to delete an existing Item Inventory Code  <p><strong>OperationId:</strong>deleteInventoryItems</p>
      operationId: deleteInventoryItems
      parameters:
      - description: Unique Inventory Item Id
        in: path
        name: inventoryItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: itemIDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: itemIDType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Item Inventory
      tags:
      - ResourceConfig
    put:
      description: Use this API to update an existing Item Inventory Code  <p><strong>OperationId:</strong>putInventoryItems</p>
      operationId: putInventoryItems
      parameters:
      - description: Unique Inventory Item id
        in: path
        name: inventoryItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/inventoryItems'
        description: Request object for changing Inventory Items Setup configuration
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Item Inventory
      tags:
      - ResourceConfig
      x-codegen-request-body-name: inventoryItems
  /hotels/{hotelId}/itemPools:
    get:
      description: Get Item Pools that are configured for a property. <p><strong>OperationId:</strong>getItemPools</p>
      operationId: getItemPools
      parameters:
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Codes to be searched.
        explode: true
        in: query
        name: itemClasseCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: itemPoolCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: itemPoolsWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/itemPoolsInfo'
          description: Response object which holds collection of Item Pools.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ItemPools not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Item Pools
      tags:
      - ResourceConfig
  /hotels/{hotelId}/itemPools/{itemPoolsCode}/itemPools:
    delete:
      description: Delete Item Pool for a property. <p><strong>OperationId:</strong>deleteItemPools</p>
      operationId: deleteItemPools
      parameters:
      - description: Unique Item Pool code
        in: path
        name: itemPoolsCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel code
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Item Pools
      tags:
      - ResourceConfig
  /hotels/{hotelId}/notes/{notesId}/cateringPackageResourceNotes:
    delete:
      description: Use this API to delete catering package resource notes. <p><strong>OperationId:</strong>deleteCateringPackageResourceNotes</p>
      operationId: deleteCateringPackageResourceNotes
      parameters:
      - description: Unique Catering Package Resource Notes ID
        in: path
        name: notesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering package resource notes
      tags:
      - ResourceConfig
  /hotels/{hotelId}/packageEvents/{packageEventsId}/cateringPackageEvents:
    delete:
      description: Use this API to delete catering package events. <p><strong>OperationId:</strong>deleteCateringPackageEvents</p>
      operationId: deleteCateringPackageEvents
      parameters:
      - description: Unique Package Events ID
        in: path
        name: packageEventsId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: pkgEventIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: pkgEventIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: pkgEventIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering package events
      tags:
      - ResourceConfig
  /hotels/{hotelId}/packagePrices/{pricesId}/cateringPackagePrices:
    delete:
      description: Use this API to delete Catering package prices. <p><strong>OperationId:</strong>deleteCateringPackagePrices</p>
      operationId: deleteCateringPackagePrices
      parameters:
      - description: Unique Catering Package Prices ID
        in: path
        name: pricesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: packagPriceIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: packagPriceIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: packagPriceIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Catering package prices
      tags:
      - ResourceConfig
  /hotels/{hotelId}/packages/{eventId}/notes/{notedId}/cateringPackageEventNotes:
    delete:
      description: Use this API to delete catering package event notes. <p><strong>OperationId:</strong>deleteCateringPackageEventNotes</p>
      operationId: deleteCateringPackageEventNotes
      parameters:
      - description: Unique Catering Package Event Notes ID
        in: path
        name: notedId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique Catering Package Event ID
        in: path
        name: eventId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: pkgEventIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: pkgEventIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: pkgEventIdType
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: noteIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: noteIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: noteIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete catering package event notes
      tags:
      - ResourceConfig
  /hotels/{hotelId}/roomPools:
    get:
      description: This API allows you to Use this API to get Room Type Pool and the
        associated Room Types. <p><strong>OperationId:</strong>getRoomTypePool</p>
        <p>The maximum allowable limit for this API is <strong>25</strong>.</p>
      operationId: getRoomTypePool
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to indicate if inactive room types should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: Is it a physical sleep room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - description: Flag to indicate if summary or detailed information should be
          fetched.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypePoolCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomTypePoolDetails'
          description: Response object for fetch room pool information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomTypePool not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Room Type Pool
      tags:
      - HotelConfig
    post:
      description: This API allows you to Use this API to create Room Type Pools.
        <p><strong>OperationId:</strong>postRoomTypePool</p>
      operationId: postRoomTypePool
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypePoolCriteria'
        description: Request object for creating new room pool.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Type Pools
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypePoolCriteria
  /hotels/{hotelId}/roomPools/{roomPoolCode}:
    delete:
      description: Use this API to delete  Room Type Pool and Mappings. <p><strong>OperationId:</strong>removeRoomTypePool</p>
      operationId: removeRoomTypePool
      parameters:
      - description: Unique Code of room type pool.
        in: path
        name: roomPoolCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The description of room pool type.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Default text with Character length from 0 to 1000.
        in: query
        name: defaultText
        schema:
          type: string
      - description: Language code for the translation.
        explode: true
        in: query
        name: lang
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sequence for representing room type pool record.
        explode: true
        in: query
        name: sequence
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Indicates the room type is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Number of rooms for this room type.
        explode: true
        in: query
        name: numberOfRooms
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room class for the room type code.
        explode: true
        in: query
        name: roomClass
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Short Description of room type.
        explode: true
        in: query
        name: shortDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Active date of the room type.
        explode: true
        in: query
        name: activeDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Indicates if room type is pseudo.
        explode: true
        in: query
        name: pseudo
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates if room type is accessible.
        explode: true
        in: query
        name: accessible
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates if room type is sent to interface.
        explode: true
        in: query
        name: sendToInterface
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates room types sell sequence.
        explode: true
        in: query
        name: sellSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates room type is a suite.
        explode: true
        in: query
        name: suite
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates room type is meeting room. This Can be Meeting room
          flag cannot be unmarked at the property level. Can only be marked for non
          pseudo room types.
        explode: true
        in: query
        name: meetingRoom
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates that the room pool cannot be used to allocate inventory
          to this room type. Inventory must be allocated directly to the room type
          itself.
        explode: true
        in: query
        name: restricted
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete  Room Type Pool and Mappings
      tags:
      - HotelConfig
    put:
      description: Use this API to update Room Type Pool and Associated Room Types.
        <p><strong>OperationId:</strong>changeRoomTypePool</p>
      operationId: changeRoomTypePool
      parameters:
      - description: Unique Code of room type pool.
        in: path
        name: roomPoolCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/roomTypePoolToBeChanged'
        description: Request object for changing existing room pool.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change Room Type Pool '
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypePoolToBeChanged
  /hotels/{sourceHotelId}/functionSpaces/copy:
    put:
      description: ' Use this API to copy Function Space. <p><strong>OperationId:</strong>copyFunctionSpaces</p>'
      operationId: copyFunctionSpaces
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyFunctionSpaces'
        description: "Request object for creating multiple function spaces based on\
          \ an existing function space. New function space may have different name,\
          \ display name on function dairy, order of display and combo elements. The\
          \ rest of the details will be copied from the source function space."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Function Spaces
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyFunctionSpaces
  /hotels/{sourceHotelId}/functionspaceLocations/copy:
    put:
      description: Use this API to copy function space locations. <p><strong>OperationId:</strong>copyFunctionSpaceLocations</p>
      operationId: copyFunctionSpaceLocations
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/copyFunctionSpaceLocations'
        description: List of function space location(s) to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy function space locations
      tags:
      - HotelConfig
      x-codegen-request-body-name: copyFunctionSpaceLocations
  /hotels/{sourceHotelId}/inventoryItems/copy:
    put:
      description: This API will allow you to select multiple Item Inventories from
        the Source Property and copy to the Target Property. <p><strong>OperationId:</strong>copyInventoryItems</p>
      operationId: copyInventoryItems
      parameters:
      - description: Unique ID of source hotel.
        in: path
        name: sourceHotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/inventoryItemsCopy'
        description: Request object for copying Inventory Items Setup configuration
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy Item Inventories
      tags:
      - ResourceConfig
      x-codegen-request-body-name: inventoryItemsCopy
  /inventoryItems:
    get:
      description: Retrieve a list of Item Inventory templates that exist for a property.
        <p><strong>OperationId:</strong>getInventoryItemTemplates</p>
      operationId: getInventoryItemTemplates
      parameters:
      - description: Specifies the hotel code to be searched.
        in: query
        name: hotelId
        schema:
          type: string
      - description: Wildcard search for the inventory item template.
        in: query
        name: inventoryItemTemplateName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/inventoryItemTemplates'
          description: Response object for fetching inventory item templates.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: InventoryItemTemplates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Item Inventory templates
      tags:
      - ResourceConfig
    post:
      description: Create an Item Inventory template. <p><strong>OperationId:</strong>postInventoryItemTemplates</p>
      operationId: postInventoryItemTemplates
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/inventoryItemTemplates'
        description: Request object for creating new inventory item templates.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Item Inventory template
      tags:
      - ResourceConfig
      x-codegen-request-body-name: inventoryItemTemplates
  /inventoryItems/{inventoryItemId}:
    delete:
      description: Delete Item Inventory template. <p><strong>OperationId:</strong>deleteInventoryItemTemplates</p>
      operationId: deleteInventoryItemTemplates
      parameters:
      - description: Unique Inventory Item Template code
        in: path
        name: inventoryItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: inventoryItemTemplatesIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: inventoryItemTemplatesContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: inventoryItemTemplatesType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Item Inventory templates
      tags:
      - ResourceConfig
    put:
      description: Change Item Inventory template. <p><strong>OperationId:</strong>putInventoryItemTemplates</p>
      operationId: putInventoryItemTemplates
      parameters:
      - description: Unique Inventory Item Template code
        in: path
        name: inventoryItemId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/inventoryItemTemplates'
        description: Request object for changing existing inventory item templates.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Item Inventory templates
      tags:
      - ResourceConfig
      x-codegen-request-body-name: inventoryItemTemplates
  /itemClasses:
    get:
      description: "This API will allow you to fetch all existing Item Classes for\
        \ a property. Items are categorized into logical entities called Item Classes.\
        \ Item Classes assist you in filtering when selecting and grouping items on\
        \ the Banquet Event Order (BEO). For example, you might have an item class\
        \ for different kinds of audio visual equipment, for floral decorations, for\
        \ recreational equipment, and so on.  <p><strong>OperationId:</strong>getItemClasses</p>"
      operationId: getItemClasses
      parameters:
      - explode: false
        in: query
        name: hotelId
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Codes to be searched.
        explode: false
        in: query
        name: itemClassesCode
        schema:
          items:
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Defines values for Item Class Type.
        example: reservation
        in: query
        name: criteria
        schema:
          enum:
          - Reservation
          - Events
          - ReservationAndEvents
          type: string
      - in: query
        name: classId
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/itemClassesInfo'
          description: Response object for fetching item class.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ItemClasses not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get item classes
      tags:
      - ResourceConfig
    post:
      description: You can use this API to create item classes. <p><strong>OperationId:</strong>postItemClasses</p>
      operationId: postItemClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/itemClasses'
        description: Request object for creating new item class.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: itemClasses
  /itemClasses/copy:
    put:
      description: You can use this API to copy item classes. <p><strong>OperationId:</strong>copyItemClasses</p>
      operationId: copyItemClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/itemClassesCopy'
        description: List of the Item Class to be copied.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Copy item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: itemClassesCopy
  /itemClasses/{itemClassesCode}:
    delete:
      description: This API allows you to delete an existing Item Classes for a property.
        <p><strong>OperationId:</strong>deleteItemClasses</p>
      operationId: deleteItemClasses
      parameters:
      - description: Unique Item Class Code
        in: path
        name: itemClassesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Item classes
      tags:
      - ResourceConfig
    put:
      description: This API allows you to update existing Item Classes for a property.
        <p><strong>OperationId:</strong>putItemClasses</p>
      operationId: putItemClasses
      parameters:
      - description: Unique Item Class Code
        in: path
        name: itemClassesCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/itemClasses'
        description: Request object for modifying item class.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: itemClasses
  /itemPools:
    post:
      description: "You can create Item Pools, whereby you are grouping Item Inventories\
        \ into a group.  For example you might have a Item Pool for a Promotional\
        \ Package where the guest receives a number of Item Inventories; thus creating\
        \ a group enables you to easily manage this. <p><strong>OperationId:</strong>postItemPools</p>"
      operationId: postItemPools
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/itemPools'
        description: Request object which holds new Item Pools.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Item Pools
      tags:
      - ResourceConfig
      x-codegen-request-body-name: itemPools
  /itemPools/{itemPoolsCode}:
    post:
      description: Change/update an Item Pool that is already configured for a property.
        <p><strong>OperationId:</strong>putItemPools</p>
      operationId: putItemPools
      parameters:
      - description: Unique Item Pool code
        in: path
        name: itemPoolsCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/itemPools'
        description: Request object which holds modified Item Pools.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Item Pools
      tags:
      - ResourceConfig
      x-codegen-request-body-name: itemPools
  /mealTypes:
    get:
      description: Use this API to get Meal Types. <p><strong>OperationId:</strong>getMealTypes</p>
      operationId: getMealTypes
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/mealTypesDetails'
          description: Response object for fetching Meal Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: MealTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Meal Types
      tags:
      - ChainConfig
    post:
      description: Use this API to create Meal Types. <p><strong>OperationId:</strong>postMealTypes</p>
      operationId: postMealTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/mealTypesCriteria'
        description: Request object for creating Meal Types.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Meal Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: mealTypesCriteria
  /mealTypes/{mealTypesId}:
    delete:
      description: Use this API to delete Meal Types. <p><strong>OperationId:</strong>deleteMealTypes</p>
      operationId: deleteMealTypes
      parameters:
      - description: Unique ID of Meal Types.
        in: path
        name: mealTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Meal Types
      tags:
      - ChainConfig
    put:
      description: Use this API to update Meal Types. <p><strong>OperationId:</strong>putMealTypes</p>
      operationId: putMealTypes
      parameters:
      - description: Unique ID of Meal Types.
        in: path
        name: mealTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/mealTypesToBeChanged'
        description: Request object for changing Meal Types.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Meal Types
      tags:
      - ChainConfig
      x-codegen-request-body-name: mealTypesToBeChanged
  /menuClasses/{menuClassesId}/cateringMenuClasses:
    delete:
      description: You can use this API to delete menu classes. <p><strong>OperationId:</strong>deleteCateringMenuClasses</p>
      operationId: deleteCateringMenuClasses
      parameters:
      - description: Unique Catering Menu Class ID
        in: path
        name: menuClassesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: menuClassListIDExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: menuClassListIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: menuClassListUniqueIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete menu classes
      tags:
      - ResourceConfig
  /revenueGroups:
    get:
      description: You can use this API to retrieve all catering revenue group codes.
        <p><strong>OperationId:</strong>getRevenueGroups</p>
      operationId: getRevenueGroups
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: revenueGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Boolean flag to fetch revenue groups with/without revenue types.
          'True' indicates including revenue types information for corresponding revenue
          groups.
        in: query
        name: includeRevenueType
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueGroupsInfo'
          description: Response object for fetching Catering Revenue Groups configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Catering Revenue Groups
      tags:
      - ResourceConfig
    post:
      description: You can use this API to create a new catering revenue group code.
        <p><strong>OperationId:</strong>postRevenueGroups</p>
      operationId: postRevenueGroups
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueGroups'
        description: Request object for creating new Catering Revenue Groups Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Catering Revenue Groups
      tags:
      - ResourceConfig
      x-codegen-request-body-name: revenueGroups
  /revenueGroups/{revenueGroupsCode}:
    delete:
      description: You can use this API to delete a catering revenue group code. <p><strong>OperationId:</strong>deleteRevenueGroups</p>
      operationId: deleteRevenueGroups
      parameters:
      - description: Unique Revenue Group Code
        in: path
        name: revenueGroupsCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Catering Revenue Groups
      tags:
      - ResourceConfig
    put:
      description: You can use this API to update a catering revenue group Code. <p><strong>OperationId:</strong>putRevenueGroups</p>
      operationId: putRevenueGroups
      parameters:
      - description: Unique Revenue Group Code
        in: path
        name: revenueGroupsCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueGroups'
        description: Request object for changing existing Catering Revenue Groups
          Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Catering Revenue Groups
      tags:
      - ResourceConfig
      x-codegen-request-body-name: revenueGroups
  /revenueTypes:
    get:
      description: You can use this API to retrieve all Catering Revenue Type codes
        configured. <p><strong>OperationId:</strong>getRevenueTypes</p>
      operationId: getRevenueTypes
      parameters:
      - description: Codes to be searched.
        explode: true
        in: query
        name: revenueGroupCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: revenueGroupWildCard
        schema:
          type: string
      - description: Codes to be searched.
        explode: true
        in: query
        name: revenueTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: revenueTypeWildCard
        schema:
          type: string
      - description: If true this boolean will set the criteria to only return Inactive
          records.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Boolean flag to fetch revenue groups/types with/without associated
          revenue types/revenue type details. 'True' indicates including revenue types/revenue
          type details information for corresponding revenue groups/revenue types.
          (Revenue Type is assoicated to Revenue groups and Revenue Type details are
          assoicated to Revenue Types)
        in: query
        name: includeRevenueTypeDetail
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/revenueTypesInfo'
          description: Response object for fetching Revenue Types Setup configurations.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RevenueTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Catering Revenue Types
      tags:
      - ResourceConfig
    post:
      description: You can use this API to create a new Catering Revenue Type code.
        <p><strong>OperationId:</strong>postRevenueTypes</p>
      operationId: postRevenueTypes
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueTypes'
        description: Request object for creating new Revenue Types Setup Configurations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Catering Revenue Types
      tags:
      - ResourceConfig
      x-codegen-request-body-name: revenueTypes
  /revenueTypes/{revenueTypesId}:
    put:
      description: You can use this API to update a Catering Revenue Type code. <p><strong>OperationId:</strong>putRevenueTypes</p>
      operationId: putRevenueTypes
      parameters:
      - description: Unique code for  Revenue Type
        in: path
        name: revenueTypesId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              allOf:
              - $ref: '#/components/schemas/revenueTypes'
        description: Request object for changing existing Revenue Types Setup Configurations.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Response Body.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update Catering Revenue Types
      tags:
      - ResourceConfig
      x-codegen-request-body-name: revenueTypes
  /services/resources/cache:
    delete:
      description: You can use this API to delete the Resource Configuration Service
        Status Cache. <p><strong>OperationId:</strong>deleteResourceConfigServiceCache</p>
      operationId: deleteResourceConfigServiceCache
      parameters:
      - description: Request object for cleaning WS cache input type
        in: query
        name: operaClearInput
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: ClearCache
      tags:
      - ResourceConfig
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner's Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    eventForecastsCopy:
      description: Request object for Copying Event Forecasts to multiple hotels.
      properties:
        criteria:
          $ref: '#/components/schemas/copyEventForecastsCriteriaType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyEventForecastsCriteriaType:
      description: Copy event forecasts criteria type to copy multiple event forecasts
        from one Hotel to another Hotel.
      properties:
        eventForecastsList:
          description: Provides Event Forecast details that needs to be copied.
          items:
            $ref: '#/components/schemas/eventForecastsListType'
          maxItems: 4000
          type: array
        includeRevenueType:
          description: include Revenue Types for the event forecasts?
          type: boolean
      type: object
    eventForecastsListType:
      description: Collection of Event Forecast details that needs to be copied.
      properties:
        sourceHotelCode:
          description: Property from which Code is to be copied.
          maxLength: 20
          minLength: 0
          type: string
        targetHotelCode:
          description: Property to which configuration code type to be copied to.
          maxLength: 20
          minLength: 0
          type: string
        sourceForecastId:
          $ref: '#/components/schemas/uniqueID_Type'
        sourceEventType:
          description: Source Event Type from which code is to be copied from.
          maxLength: 20
          minLength: 0
          type: string
        copyEventTypeAs:
          description: Event Type will be copied From.
          maxLength: 20
          minLength: 0
          type: string
        copyDateRangeAs:
          $ref: '#/components/schemas/dateRangeType'
        copyMarketCodeAs:
          description: Copy Market code as.
          maxLength: 20
          minLength: 0
          type: string
        copyBookingTypeAs:
          description: Copy Booking Type as.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    status:
      description: Response Body.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    cateringContainersInfo:
      description: Response object for fetching Catering Code Containers details.
      properties:
        containers:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringCodesType:
      description: Catering Code details.
      items:
        $ref: '#/components/schemas/cateringCodeType'
      maxItems: 4000
      type: array
    cateringCodeType:
      description: Base type provides information about Catering Code which will be
        used for removal operation
      properties:
        codeId:
          description: Code ID is used to identify a Catering Code by ID.
          type: number
        code:
          description: Code is used to identify a Catering Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Catering Codes display sequence Number
          type: number
        webBookable:
          description: Indicator used for only WEB Code Type in Item Rate
          type: boolean
      type: object
    translationTextType200:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 200.
          maxLength: 200
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    cateringContainers:
      description: Request object which holds modified Catering Code Containers.
      properties:
        containers:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceEventTypesDetails:
      description: Response object of the Function Space Event Types.
      properties:
        eventTypes:
          description: Collection of Event Type
          items:
            $ref: '#/components/schemas/eventTypeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventTypesType:
      description: Collection of Event Type
      items:
        $ref: '#/components/schemas/eventTypeConfigType'
      maxItems: 4000
      type: array
    eventTypeConfigType:
      description: Representation of event record type.
      properties:
        eventTypeCode:
          description: Code Field Value belongs to the Event Type.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType50'
        description:
          description: Description to elaborate the Event Code Type.
          maxLength: 50
          minLength: 0
          type: string
        timeWindow:
          $ref: '#/components/schemas/timeWindowType'
        inactive:
          description: Determines the event type status as active or inactive
          type: boolean
        mealType:
          description: Meal type associated with the event type.
          maxLength: 20
          minLength: 0
          type: string
        coverable:
          description: Indicates if Event Type is coverable or not.
          type: boolean
        webBookable:
          description: Defines if web booking is allowed or not.
          type: boolean
        sequence:
          description: The sequence number of the event.
          type: integer
      type: object
    translationTextType50:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 50.
          maxLength: 50
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    timeWindowType:
      description: Defines a Time period with start time and an end time.
      properties:
        startTime:
          description: Start Time of the Time window.
          type: string
        endTime:
          description: End Time of the Time window.
          type: string
      type: object
    functionSpaceEventTypesCriteria:
      description: Request object to create new Function Space Event Types.
      properties:
        eventTypes:
          description: Collection of Event Type
          items:
            $ref: '#/components/schemas/eventTypeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceEventTypesToBeChanged:
      description: Request object to update the existing Function Space Event Types.
      properties:
        eventTypes:
          description: Collection of Event Type
          items:
            $ref: '#/components/schemas/eventTypeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringItemRatesInfo:
      description: Response object for fetching Catering Code's Item Rate details.
      properties:
        itemRates:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringItemRates:
      description: Request object which holds modified Catering Code's Item Rate.
      properties:
        itemRates:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuClasses:
      description: Request object for changing Menu Classes.
      properties:
        menuClassList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuClassListType:
      description: List of Values of Menu.
      items:
        $ref: '#/components/schemas/cateringMenuClassType'
      maxItems: 4000
      type: array
    cateringMenuClassType:
      description: Catering Menu Class which holds the value of menu class.
      properties:
        classId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu class belongs to.
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/cateringMenuClassInfoType'
        menuList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuClassInfoType:
      description: Detailed attributes of Menu Class .
      properties:
        name:
          description: This type holds name of Menu Class.
          maxLength: 200
          minLength: 0
          type: string
        webBookable:
          description: This type tells about whether menu class is book through web
            or not.
          type: boolean
        inactiveDate:
          description: Inactive date of menu class.
          format: date
          type: string
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        inactive:
          description: "Return true, when this Menu Item Class will not be available\
            \ to be associated to a Catering Event."
          type: boolean
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    cateringMenuListType:
      description: List of Values of Menu.
      items:
        $ref: '#/components/schemas/cateringMenuType'
      maxItems: 4000
      type: array
    cateringMenuType:
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        classId:
          description: This type holds class id for given menu.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: The Hotel code which the catering menu belongs to.
          maxLength: 20
          minLength: 0
          type: string
        info:
          $ref: '#/components/schemas/cateringMenuInfoType'
        revenueList:
          description: This type holds revenue list.
          items:
            $ref: '#/components/schemas/cateringMenuRevType'
          maxItems: 4000
          type: array
        menuDetailList:
          description: List of Values of Catering Menu Detail.
          items:
            $ref: '#/components/schemas/cateringMenuDetailType'
          maxItems: 4000
          type: array
        multiChoiceList:
          description: This type holds Multi choice Menu.
          items:
            $ref: '#/components/schemas/cateringMultiChoiceMenuType'
          maxItems: 4000
          type: array
        menuNoteList:
          description: Contains event resource note information.
          items:
            $ref: '#/components/schemas/eventResourceNoteType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuInfoType:
      properties:
        className:
          description: This type holds name of Menu Class Name.
          maxLength: 30
          minLength: 0
          type: string
        name:
          $ref: '#/components/schemas/translationTextType2000'
        restriction:
          $ref: '#/components/schemas/translationTextType2000'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        type:
          $ref: '#/components/schemas/menuTypeType'
        quickInsertCode:
          description: "This type holds quick insert value, v5 functionality as Article\
            \ Number for the Menu."
          maxLength: 20
          minLength: 0
          type: string
        servingType:
          $ref: '#/components/schemas/servingType'
        servingSize:
          description: This type holds TableCapacity for the given Menu.
          maxLength: 20
          minLength: 0
          type: string
        includedInMenu:
          description: "Return true, when all Menu Items added will be marked as Included\
            \ and there will be a Global Price for this menu"
          type: boolean
        consumptionBased:
          description: "This type holds value of consumption, Menu items will be charged\
            \ on a consumption basis."
          type: boolean
        sellDateRange:
          $ref: '#/components/schemas/dateRangeType'
        eventDateRange:
          $ref: '#/components/schemas/dateRangeType'
        menusSold:
          description: The total number of menus sold for the day on which the event
            takes place.
          type: integer
        webBookable:
          description: This type tells about whether menu is book through web or not.
          type: boolean
        inactive:
          description: Selection will note this Menu is Inactive and unable to be
            added to a Catering Event.
          type: boolean
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        includedInPrice:
          description: "Return true means, menu item as Included in the Menu Price"
          type: boolean
        multiChoice:
          description: Indicator of this being a multi-choice menu
          type: boolean
        courseCount:
          description: Define the Courses populated into the Multi Choice Menu Configuration
          type: integer
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    menuTypeType:
      description: Defines values for Menu Type
      enum:
      - Food
      - Beverage
      type: string
    servingType:
      description: Serving
      enum:
      - Pp
      - Pt
      type: string
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    cateringMenuRevListType:
      description: This type holds revenue list.
      items:
        $ref: '#/components/schemas/cateringMenuRevType'
      maxItems: 4000
      type: array
    cateringMenuRevType:
      properties:
        revenueType:
          description: This supports all Revenue Types
          maxLength: 30
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/menuTypeType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        internalQuote:
          $ref: '#/components/schemas/currencyAmountType'
        costMargin:
          description: This type holds cost of the Menu.
          maximum: 100
          minimum: 0
          type: number
        price:
          $ref: '#/components/schemas/currencyAmountType'
        priceMargin:
          description: This type holds price margin for the given Menu.
          maximum: 100
          minimum: 0
          type: number
      type: object
    cateringMenuDetailListType:
      description: List of Values of Catering Menu Detail.
      items:
        $ref: '#/components/schemas/cateringMenuDetailType'
      maxItems: 4000
      type: array
    cateringMenuDetailType:
      description: Detailed attributes of Menu Item.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/codeDescriptionType'
        displayOrder:
          description: "Defines the Display Order of the menu item class, to which\
            \ the menu item is attached"
          type: integer
        name1:
          $ref: '#/components/schemas/translationTextType2000'
        name2:
          $ref: '#/components/schemas/translationTextType2000'
        name3:
          $ref: '#/components/schemas/translationTextType2000'
        origin1:
          $ref: '#/components/schemas/translationTextType2000'
        origin2:
          $ref: '#/components/schemas/translationTextType2000'
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        custom:
          description: Indicates whether this menu item is custom
          type: boolean
        year:
          description: This value is typically the year of the Wine
          type: integer
        restriction:
          description: Any particular restriction description in 100 charactera
          maxLength: 100
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryPreferenceList:
          items:
            $ref: '#/components/schemas/dietaryPrefType'
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        quickInsertCode:
          description: Article number in Caps of menu item
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: RevenueType of Menu Item
          maxLength: 20
          minLength: 0
          type: string
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        itemConsumption:
          description: Selection of this notes that the price defined is charged 'as-consumed'
            basis
          type: boolean
        container:
          $ref: '#/components/schemas/codeDescriptionType'
        portion:
          $ref: '#/components/schemas/translationTextType2000'
        servings:
          description: Numeric value of servings of Menu item
          type: integer
        webBookable:
          description: Check of Menu Item if it is web bookable
          type: boolean
        print:
          description: check if Print action is required for menu item
          type: boolean
        inactive:
          description: Check for the status of menu item
          type: boolean
        includedYN:
          description: Included flag
          type: boolean
        course:
          description: Course number defined will be the display order of the Menu
            Items on the screen and in Banquet Event Order.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: Order of Menu.
          maxLength: 20
          minLength: 0
          type: string
        demandFactor:
          description: Demand Factor of the Menu.
          maxLength: 20
          minLength: 0
          type: string
        menuName:
          description: Holds the value of Menu name.
          maxLength: 30
          minLength: 0
          type: string
        includedMenu:
          description: "Return true means, menu as Included in the Menu Price"
          type: boolean
        mandatory:
          description: "Return true means, menu as Included in the Menu Price"
          type: boolean
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dietaryPrefListType:
      items:
        $ref: '#/components/schemas/dietaryPrefType'
      maxItems: 4000
      type: array
    dietaryPrefType:
      description: Base type provides information about Catering Revenue Types Configuration.
      properties:
        code:
          maxLength: 20
          minLength: 0
          type: string
        type:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cateringMultiChoiceMenuListType:
      description: This type holds Multi choice Menu.
      items:
        $ref: '#/components/schemas/cateringMultiChoiceMenuType'
      maxItems: 4000
      type: array
    cateringMultiChoiceMenuType:
      properties:
        courseId:
          description: This attributes identifies the courseldd.
          type: integer
        course:
          description: This type holds Courses are defined for Menu.
          maxLength: 20
          minLength: 0
          type: string
        choiceCount:
          description: This type holds choice count of the Menu.
          type: integer
        courseDescription:
          $ref: '#/components/schemas/translationTextType100'
        courseName:
          $ref: '#/components/schemas/translationTextType20'
      type: object
    translationTextType100:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 100.
          maxLength: 100
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationTextType20:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 20.
          maxLength: 20
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    eventResourceNotesType:
      description: Contains event resource note information.
      items:
        $ref: '#/components/schemas/eventResourceNoteType'
      maxItems: 4000
      type: array
    eventResourceNoteType:
      description: Contains the event resource's note information.
      properties:
        noteId:
          $ref: '#/components/schemas/uniqueID_Type'
        noteCode:
          description: Note code.
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: Indicates if the note is internal use only.
          type: boolean
        noteTitle:
          description: Contains note title.
          maxLength: 200
          minLength: 0
          type: string
        note:
          description: Contains note text.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Contains display sequence.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    cateringMenuItemClasses:
      description: Request object for updating Menu Item Classes.
      properties:
        menuItemClasses:
          description: List of Values of Menu Item Class.
          items:
            $ref: '#/components/schemas/cateringMenuItemClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemClassListType:
      description: List of Values of Menu Item Class.
      items:
        $ref: '#/components/schemas/cateringMenuItemClassType'
      maxItems: 4000
      type: array
    cateringMenuItemClassType:
      description: Menu Item Class Values.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        itemClassInfo:
          $ref: '#/components/schemas/cateringMenuItemClassInfoType'
        itemList:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemClassInfoType:
      properties:
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        className:
          description: Menu Item Class Name
          maxLength: 200
          minLength: 0
          type: string
        eventTypeList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartmentList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        sequence:
          description: Sequence of the Menu Class
          type: integer
        webBookable:
          description: Boolean value indicates whether the Menu Class is web bookable
            or not
          type: boolean
        iconName:
          description: Icon Name of the Menu Class
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cateringMenuItemListType:
      description: List of Values of Menu Item.
      items:
        $ref: '#/components/schemas/cateringMenuItemType'
      maxItems: 4000
      type: array
    cateringMenuItemType:
      description: Detailed attributes of Menu Item.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/codeDescriptionType'
        displayOrder:
          description: "Defines the Display Order of the menu item class, to which\
            \ the menu item is attached"
          type: integer
        name1:
          $ref: '#/components/schemas/translationTextType2000'
        name2:
          $ref: '#/components/schemas/translationTextType2000'
        name3:
          $ref: '#/components/schemas/translationTextType2000'
        origin1:
          $ref: '#/components/schemas/translationTextType2000'
        origin2:
          $ref: '#/components/schemas/translationTextType2000'
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        custom:
          description: Indicates whether this menu item is custom
          type: boolean
        year:
          description: This value is typically the year of the Wine
          type: integer
        restriction:
          description: Any particular restriction description in 100 charactera
          maxLength: 100
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryPreferenceList:
          items:
            $ref: '#/components/schemas/dietaryPrefType'
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        quickInsertCode:
          description: Article number in Caps of menu item
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: RevenueType of Menu Item
          maxLength: 20
          minLength: 0
          type: string
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        itemConsumption:
          description: Selection of this notes that the price defined is charged 'as-consumed'
            basis
          type: boolean
        container:
          $ref: '#/components/schemas/codeDescriptionType'
        portion:
          $ref: '#/components/schemas/translationTextType2000'
        servings:
          description: Numeric value of servings of Menu item
          type: integer
        webBookable:
          description: Check of Menu Item if it is web bookable
          type: boolean
        print:
          description: check if Print action is required for menu item
          type: boolean
        inactive:
          description: Check for the status of menu item
          type: boolean
        includedYN:
          description: Included flag
          type: boolean
      type: object
    cateringMenuItemClassesCopy:
      description: Request object for Copying Menu Item Classes.
      properties:
        copyMenuItemClasses:
          $ref: '#/components/schemas/copyMenuItemClassesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyMenuItemClassesType:
      properties:
        sourceHotelCode:
          description: Source Hotel code from where menu item classes needs to be
            copied
          maxLength: 20
          minLength: 0
          type: string
        itemClasses:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        targetHotelCodes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        copyInstructions:
          $ref: '#/components/schemas/copyMenuItemClassesType_copyInstructions'
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    cateringPackagesInfo:
      properties:
        pkgTmplts:
          description: Collection of multiple Catering Packages.
          items:
            $ref: '#/components/schemas/cateringPackageType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringPackageListType:
      description: Collection of multiple Catering Packages.
      items:
        $ref: '#/components/schemas/cateringPackageType'
      maxItems: 4000
      type: array
    cateringPackageType:
      description: Type used for managing Catering Package.
      properties:
        pkgId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code associated with the Catering Package.
          maxLength: 20
          minLength: 0
          type: string
        packageDetail:
          $ref: '#/components/schemas/cateringPackageInfoType'
        eventsList:
          description: Collection of multiple Events associated with a particular
            Catering Packages.
          items:
            $ref: '#/components/schemas/cateringPackageEventType'
          maxItems: 4000
          type: array
        pricingList:
          description: Collection of multiple Pricing Details associated with a particular
            Catering Package.
          items:
            $ref: '#/components/schemas/cateringPackagePricingType'
          maxItems: 4000
          type: array
      type: object
    cateringPackageInfoType:
      description: Catering Package details.
      properties:
        pkgCode:
          description: Package Code associated with the Catering Package.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType200'
        duration:
          description: Duration (in days) of the Catering Package.
          type: integer
        webBookable:
          description: Defines if web booking is allowed.
          type: boolean
        isTemplate:
          description: Defines if Catering Package is a Template or not.
          type: boolean
      type: object
    cateringPackageEventListType:
      description: Collection of multiple Events associated with a particular Catering
        Packages.
      items:
        $ref: '#/components/schemas/cateringPackageEventType'
      maxItems: 4000
      type: array
    cateringPackageEventType:
      description: Type used for managing Events associated with a particular Catering
        Package.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        masterEventId:
          $ref: '#/components/schemas/uniqueID_Type'
        eventType:
          description: Event Type associated with the Catering Package Event.
          maxLength: 20
          minLength: 0
          type: string
        eventName:
          description: Event Name for the Catering Package Event.
          maxLength: 60
          minLength: 0
          type: string
        dayOrder:
          description: Event Day for the Catering Package Event.
          type: integer
        eventTime:
          $ref: '#/components/schemas/dateTimeSpanType'
        room:
          description: Room details for the Catering Package Event.
          maxLength: 20
          minLength: 0
          type: string
        roomSetup:
          description: Room Setup details for the Catering Package Event.
          maxLength: 20
          minLength: 0
          type: string
        roomRateCode:
          description: Stores the selected rate code for the meeting room.
          maxLength: 20
          minLength: 0
          type: string
        isMaster:
          description: Indiciates if this package event has sub-events.
          type: boolean
        isShareable:
          description: Indicates if the function space should be booked as sharable.
          type: boolean
        alternate:
          description: Indicates if the function space requires an alternate space.
          type: boolean
        sub:
          description: Indicates if the package event is a sub-event or not.
          type: boolean
        notes:
          description: Collection of multiple Event Notes associated with a particular
            Catering Package Event.
          items:
            $ref: '#/components/schemas/cateringPackageEventNoteType'
          maxItems: 4000
          type: array
        resources:
          description: Collection of multiple Resources associated with a particular
            Catering Package Event.
          items:
            $ref: '#/components/schemas/cateringPackageEventResourceType'
          maxItems: 4000
          type: array
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
      type: object
    cateringPackageEventNoteListType:
      description: Collection of multiple Event Notes associated with a particular
        Catering Package Event.
      items:
        $ref: '#/components/schemas/cateringPackageEventNoteType'
      maxItems: 4000
      type: array
    cateringPackageEventNoteType:
      description: Type used for managing Event Notes associated with a particular
        Catering Package Event.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        noteCode:
          description: Note Code/Type of the Catering Package Event Note.
          maxLength: 20
          minLength: 0
          type: string
        title:
          description: Title of the Catering Package Event Note.
          maxLength: 200
          minLength: 0
          type: string
        comment:
          description: Comment associated the Catering Package Event Note.
          maxLength: 2000
          minLength: 0
          type: string
        internal:
          description: Indiciates if this is Internal.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    cateringPackageResourceListType:
      description: Collection of multiple Resources associated with a particular Catering
        Package Event.
      items:
        $ref: '#/components/schemas/cateringPackageEventResourceType'
      maxItems: 4000
      type: array
    cateringPackageEventResourceType:
      description: Type used for managing Resources associated with a particular Catering
        Package Event.
      properties:
        resourceId:
          description: Unique Identifier for a Resource associated with a particular
            Catering Package Event.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/eventResourceType'
        name:
          description: Name of the Resource.
          maxLength: 200
          minLength: 0
          type: string
        roomSetup:
          description: Setup code of th Function Space.
          maxLength: 20
          minLength: 0
          type: string
        roomRate:
          description: RateCode associated with the Function Space.
          maxLength: 20
          minLength: 0
          type: string
        revenueTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        isShareable:
          description: Defines if the Function Space is shareable.
          type: boolean
        quantity:
          description: Defines the quantity of the Item.
          type: integer
        orderBy:
          description: Defines the Display Order of the Item or Pickup Sequence during
            the booking process for a Function Space.
          type: integer
        itemAttribute:
          $ref: '#/components/schemas/uniqueID_Type'
        itemRate:
          description: Rate Code associated with the Item.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        resourceNotes:
          description: Collection of multiple Resource Notes associated with a particular
            Catering Package Resource.
          items:
            $ref: '#/components/schemas/cateringPackageResourceNoteType'
          maxItems: 4000
          type: array
      type: object
    eventResourceType:
      description: It represents Menu as Resource.
      enum:
      - Space
      - Item
      - Menu
      type: string
    cateringPackageResourceNoteListType:
      description: Collection of multiple Resource Notes associated with a particular
        Catering Package Resource.
      items:
        $ref: '#/components/schemas/cateringPackageResourceNoteType'
      maxItems: 4000
      type: array
    cateringPackageResourceNoteType:
      description: Type used for managing Resource Notes associated with a particular
        Catering Package Resource.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        title:
          description: Title of the Catering Package Resource Note.
          maxLength: 200
          minLength: 0
          type: string
        comment:
          description: Comment associated the Catering Package Resource Note.
          maxLength: 2000
          minLength: 0
          type: string
        internal:
          description: Indiciates if this is Internal.
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          format: date-time
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          format: date-time
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    cateringPackagePricingListType:
      description: Collection of multiple Pricing Details associated with a particular
        Catering Package.
      items:
        $ref: '#/components/schemas/cateringPackagePricingType'
      maxItems: 4000
      type: array
    cateringPackagePricingType:
      description: Type used for managing Pricing Details associated with a particular
        Catering Package.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        priceCode:
          description: Price Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Title of the Catering Package Event Note.
          maxLength: 200
          minLength: 0
          type: string
        sellDate:
          $ref: '#/components/schemas/dateTimeSpanType'
        blockDate:
          $ref: '#/components/schemas/dateTimeSpanType'
        marketCode:
          description: Market Code associated with the Price Details.
          maxLength: 20
          minLength: 0
          type: string
        webBookable:
          description: Defines if web booking is allowed.
          type: boolean
        totalPrice:
          $ref: '#/components/schemas/currencyAmountType'
        flatRate:
          description: Defines if Flat Rate is applicable.
          type: boolean
        minAttendees:
          description: Minimum Attendees.
          type: integer
        maxAttendees:
          description: Maximum Attendees.
          type: integer
        revenueDetails:
          description: Collection of multiple Revenue Details associated with a particular
            Catering Package Price Code.
          items:
            $ref: '#/components/schemas/cateringPackageRevenueType'
          maxItems: 4000
          type: array
        bookingType:
          description: Collection of configured Booking Types for the package property.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cateringPackageRevenueListType:
      description: Collection of multiple Revenue Details associated with a particular
        Catering Package Price Code.
      items:
        $ref: '#/components/schemas/cateringPackageRevenueType'
      maxItems: 4000
      type: array
    cateringPackageRevenueType:
      description: Type used for managing Revenue Details associated with a particular
        Catering Package Price Code.
      properties:
        packageEventId:
          $ref: '#/components/schemas/uniqueID_Type'
        revType:
          description: Revenue Type associated with the Catering Package Price Code.
          maxLength: 20
          minLength: 0
          type: string
        orderBy:
          description: Sorting Order.
          type: integer
        revForecast:
          $ref: '#/components/schemas/currencyAmountType'
        revExpected:
          $ref: '#/components/schemas/currencyAmountType'
        costExpected:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    cateringPackage:
      properties:
        pkgTmplts:
          description: Collection of multiple Catering Packages.
          items:
            $ref: '#/components/schemas/cateringPackageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringServingsInfo:
      description: Response object for fetching Catering Code's Serving details.
      properties:
        servings:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringServings:
      description: Request object which holds modified Catering Code's Serving.
      properties:
        servings:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateEventCodesDetails:
      description: Response object for fetching template Event Codes.
      properties:
        templateEventCodes:
          description: Details for Event Code at template level.
          items:
            $ref: '#/components/schemas/templateEventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateEventCodesType:
      description: Details for Event Code at template level.
      items:
        $ref: '#/components/schemas/templateEventCodeType'
      maxItems: 4000
      type: array
    templateEventCodeType:
      description: Base structure for template and hotel Event Code.
      properties:
        code:
          description: Code of an Event.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of an Event.
          maxLength: 2000
          minLength: 0
          type: string
        blackOut:
          description: Black Out flag of Event.
          type: boolean
        sellSequence:
          description: Sell sequence of Event.
          type: number
        inactive:
          description: Inactive flag of Event.
          type: boolean
      type: object
    templateEventCodesToBeChanged:
      description: Request object for modifying template Event Codes.
      properties:
        templateEventCodes:
          description: Details for Event Code at template level.
          items:
            $ref: '#/components/schemas/templateEventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    templateEventCodesCriteria:
      description: Request object for creating new template Event Codes.
      properties:
        templateEventCodes:
          description: Details for Event Code at template level.
          items:
            $ref: '#/components/schemas/templateEventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventForecasts:
      properties:
        eventForecasts:
          description: Collection of multiple Event Forecasts.
          items:
            $ref: '#/components/schemas/eventForecastType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventForecastListType:
      description: Collection of multiple Event Forecasts.
      items:
        $ref: '#/components/schemas/eventForecastType'
      maxItems: 4000
      type: array
    eventForecastType:
      description: Type used for managing forecast for any event.
      properties:
        forecastId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Hotel Code to which the Event Forecast belongs to.
          maxLength: 20
          minLength: 0
          type: string
        forecastInfo:
          description: Provides information about the event forecast.
          items:
            $ref: '#/components/schemas/eventForecastInfoType'
          maxItems: 2
          type: array
        revenueDetails:
          description: Collection of Event Forecast Revenue Details.
          items:
            $ref: '#/components/schemas/eventForecastRevDetailType'
          maxItems: 4000
          type: array
      type: object
    eventForecastInfoType:
      description: Associated Information for an event forecast.
      properties:
        eventType:
          $ref: '#/components/schemas/codeDescriptionType'
        blockType:
          description: Block type for which the forecast is associated.
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          description: Market code for which the forecast is associated.
          maxLength: 20
          minLength: 0
          type: string
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
      type: object
    eventForecastRevDetailListType:
      description: Collection of Event Forecast Revenue Details.
      items:
        $ref: '#/components/schemas/eventForecastRevDetailType'
      maxItems: 4000
      type: array
    eventForecastRevDetailType:
      description: Revenue Details for a revenue type attached to an event forecast.
      properties:
        revenueType:
          $ref: '#/components/schemas/codeDescriptionType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        amountType:
          $ref: '#/components/schemas/forecastRevenueAmountTypeType'
      type: object
    forecastRevenueAmountTypeType:
      description: Defines values for Amount Type of an event forecast revenue.
      enum:
      - FlatAmount
      - PerPerson
      type: string
    cateringRentalCodesDetails:
      description: Response object for fetching Catering Rental Code details.
      properties:
        rentalCodes:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringRentalCodesCriteria:
      description: Request object which holds new Catering Rental Code Details.
      properties:
        rentalCodes:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringRentalCodesToBeChanged:
      description: Request object which holds modified Catering Rental Codes.
      properties:
        rentalCodes:
          description: Catering Code details.
          items:
            $ref: '#/components/schemas/cateringCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceTypesDetails:
      description: Response object for fetching Function Space Types.
      properties:
        functionSpaceTypes:
          description: List of Function Space Types.
          items:
            $ref: '#/components/schemas/functionSpaceTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceTypesType:
      description: List of Function Space Types.
      items:
        $ref: '#/components/schemas/functionSpaceTypeType'
      maxItems: 4000
      type: array
    functionSpaceTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    functionSpaceTypesCriteria:
      description: Request object for creating Function Space Types.
      properties:
        functionSpaceTypes:
          description: List of Function Space Types.
          items:
            $ref: '#/components/schemas/functionSpaceTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceTypesToBeChanged:
      description: Request object for changing Function Space Types.
      properties:
        functionSpaceTypes:
          description: List of Function Space Types.
          items:
            $ref: '#/components/schemas/functionSpaceTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceLocationsDetails:
      description: Response object for fetching function space locations.
      properties:
        locations:
          description: List of the function space locations to be configured or fetched
          items:
            $ref: '#/components/schemas/functionSpaceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceLocationsType:
      description: List of the function space locations to be configured or fetched
      items:
        $ref: '#/components/schemas/functionSpaceLocationType'
      maxItems: 4000
      type: array
    functionSpaceLocationType:
      description: Function Space Location details.
      properties:
        hotelId:
          description: Hotel code that the function space location belongs to.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Function Space Location Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType2000'
      type: object
    functionSpaceLocationsCriteria:
      description: Request object for adding function space location configurations
        to resort.
      properties:
        locations:
          description: List of the function space locations to be configured or fetched
          items:
            $ref: '#/components/schemas/functionSpaceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceLocationsToBeChanged:
      description: Request object for modifying function space location(s) for resort.
      properties:
        locations:
          description: List of the function space locations to be configured or fetched
          items:
            $ref: '#/components/schemas/functionSpaceLocationType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceSetupStylesDetails:
      description: Response object for fetching function space setup styles.
      properties:
        setupStyles:
          description: List of the function space setup styles to be configured or
            fetched
          items:
            $ref: '#/components/schemas/functionSpaceSetupStyleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceSetupStylesType:
      description: List of the function space setup styles to be configured or fetched
      items:
        $ref: '#/components/schemas/functionSpaceSetupStyleType'
      maxItems: 4000
      type: array
    functionSpaceSetupStyleType:
      description: Type for the function space setup style ID
      properties:
        codeId:
          description: Setup style code id .
          type: number
        code:
          description: Function Space Setup Style Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Description of the Function Space Setup Style.
          type: integer
        directory:
          description: Display in Directory True or False.
          type: boolean
        webBooking:
          description: Bookmarkable via Website True or False.
          type: boolean
        webSetup:
          description: Setup Time for web bookings.
          type: integer
        webSetdown:
          description: Setdown Time for web bookings.
          type: integer
        inactive:
          description: Indicates if the Setup Style is active.
          type: boolean
      type: object
    functionSpaceSetupStylesCriteria:
      description: Request object for adding function space setup styles.
      properties:
        setupStyles:
          description: List of the function space setup styles to be configured or
            fetched
          items:
            $ref: '#/components/schemas/functionSpaceSetupStyleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceSetupStylesToBeChanged:
      description: Request object for modifying function space setup style(s)
      properties:
        setupStyles:
          description: List of the function space setup styles to be configured or
            fetched
          items:
            $ref: '#/components/schemas/functionSpaceSetupStyleType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceDetails:
      description: Response object for fetching complete information of existing function
        space room.
      properties:
        functionSpaceRoom:
          $ref: '#/components/schemas/functionSpaceType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceType:
      description: This type holds collection of function space room with complete
        information.
      properties:
        room:
          items:
            $ref: '#/components/schemas/functionSpaceRoomType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code of the room.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    functionSpaceRoomType:
      description: This type represents the primary room attributes.
      properties:
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        roomCapacity:
          $ref: '#/components/schemas/roomCapacityType'
        roomSize:
          description: Collection of room size information of of the function space
            group by unit of measurement.
          items:
            $ref: '#/components/schemas/roomSizeType'
          maxItems: 4000
          type: array
      type: object
    roomTypeShortInfoType:
      description: Basic information of room type.
      properties:
        pseudo:
          description: Indicates if room is a pseudo. This is read-only.
          type: boolean
        suite:
          description: Indicates if room is a suite. This is read-only.
          type: boolean
        roomClass:
          description: Room Class of the room. This is read-only.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        houseKeeping:
          description: Indicates if room type of the room is flagged as housekeeping.
            This is read-only.
          type: boolean
        smokingPreference:
          description: Specifies the smoking preference for room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        minimumOccupancy:
          description: Minimum occupancy for the room type.
          type: integer
        maximumOccupancy:
          description: Maximum occupancy for the room type.
          type: integer
        roomFeatures:
          description: A recurring element that identifies the room features.
          items:
            $ref: '#/components/schemas/roomFeatureType'
          maxItems: 4000
          type: array
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        roomType:
          description: Room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether function space can be meeting room.
          type: boolean
      type: object
    ratePlanRatingType:
      description: Possible Rate plan rating values.
      enum:
      - MostImportant
      - Important
      - SomewhatImportant
      - LessImportant
      - LeastImportant
      - NoValueSet
      type: string
    roomFeaturesType:
      description: A recurring element that identifies the room features.
      items:
        $ref: '#/components/schemas/roomFeatureType'
      maxItems: 4000
      type: array
    roomFeatureType:
      description: Room Feature Information.
      properties:
        code:
          description: A code representing a room feature.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: A code representing a room feature.
          maxLength: 2000
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        quantity:
          description: Indicates quantity.
          type: integer
      type: object
    roomCapacityType:
      description: Detailed information on the capacity of a room.
      properties:
        minCapacity:
          description: Minimum capacity of the room.
          type: integer
        maxCapacity:
          description: Maximum capacity of the room.
          type: integer
      type: object
    roomSizeType:
      description: Detailed information on the capacity of a room.
      properties:
        width:
          description: Width of the room.
          type: number
        length:
          description: Length of the room.
          type: number
        area:
          description: Area of the room.
          type: number
        minHeight:
          description: Minimum height of the room.
          type: number
        maxHeight:
          description: Maximum height of the room.
          type: number
        unitOfMeasureCode:
          description: The unit of measure in a code format.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cateringMenuClassesInfo:
      description: Response object to fetch Menu Classes.
      properties:
        menuClassList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuClassType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemClassesInfo:
      description: Response object for retrieving Menu Item Classes.
      properties:
        menuItemClassList:
          description: List of Values of Menu Item Class.
          items:
            $ref: '#/components/schemas/cateringMenuItemClassType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemsInfo:
      description: Response object for retrieving Menu Items.
      properties:
        cateringMenuItems:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItems:
      description: Request object for changing Menu Items.
      properties:
        cateringMenuItems:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemsCopy:
      description: Request object for Copying Menu Items.
      properties:
        copyMenuItems:
          $ref: '#/components/schemas/copyMenuItemsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyMenuItemsType:
      properties:
        hotelId:
          description: Source Hotel code from where menu items needs to be copied
          maxLength: 20
          minLength: 0
          type: string
        menuItemList:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
        menuItemClassList:
          description: List of Values of Menu Item Class.
          items:
            $ref: '#/components/schemas/cateringMenuItemClassType'
          maxItems: 4000
          type: array
      type: object
    cateringMenusInfo:
      description: Response object to fetch Menu .
      properties:
        menuList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenus:
      description: Request object for changing Menu .
      properties:
        menuList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenusCopy:
      description: Request object for copying Menu .
      properties:
        copyCateringMenus:
          $ref: '#/components/schemas/copyCateringMenuType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyCateringMenuType:
      properties:
        menuId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Source Hotel code from where the menu will be copied.
          maxLength: 20
          minLength: 0
          type: string
        menuClassList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuClassType'
          maxItems: 4000
          type: array
      type: object
    cateringPackages:
      description: Request object for changing Catering Packages.
      properties:
        cateringPackageList:
          description: Collection of multiple Catering Packages.
          items:
            $ref: '#/components/schemas/cateringPackageType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyInventoryItems:
      description: Response object for creating new Catering Packages.
      properties:
        dailyItems:
          description: List of Daily Inventory Items.
          items:
            $ref: '#/components/schemas/dailyInventoryItemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    dailyInventoryItemsType:
      description: List of Daily Inventory Items.
      items:
        $ref: '#/components/schemas/dailyInventoryItemType'
      maxItems: 4000
      type: array
    dailyInventoryItemType:
      description: Details of Daily Inventory Items.
      properties:
        itemId:
          $ref: '#/components/schemas/uniqueID_Type'
        itemName:
          $ref: '#/components/schemas/translationTextType200'
        itemDescription:
          description: The Description of the Daily Item from Inventory.
          maxLength: 2000
          minLength: 0
          type: string
        itemClassId:
          $ref: '#/components/schemas/uniqueID_Type'
        quantityInStock:
          description: Item quantity in Stock of the Daily Item from Inventory.
          type: number
        dailyItemQuantityByDate:
          description: List of Daily quantity for Item by date/dates.
          items:
            $ref: '#/components/schemas/itemQuantityDateType'
          maxItems: 4000
          type: array
        hotelId:
          description: The Hotel code which the daily item belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    itemQuantityDateType:
      description: Item Quantity by date
      properties:
        dailyQuantity:
          description: Daily quantity for Item by date.
          type: number
        quantityDate:
          description: Date of the item quantity.
          format: date
          type: string
      type: object
    checkedDiscountAvailable:
      description: Response object to determine whether the discount is available
        for resort or not.
      properties:
        discountable:
          description: Determines whether the discount is available for resort or
            not.
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventCodesDetails:
      description: Response object for fetching Event Codes for a hotel.
      properties:
        eventCodes:
          description: Details for Event Code at hotel level.
          items:
            $ref: '#/components/schemas/eventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventCodesType:
      description: Details for Event Code at hotel level.
      items:
        $ref: '#/components/schemas/eventCodeType'
      maxItems: 4000
      type: array
    eventCodeType:
      description: Base structure for template and hotel Event Code.
      properties:
        code:
          description: Code of an Event.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of an Event.
          maxLength: 2000
          minLength: 0
          type: string
        blackOut:
          description: Black Out flag of Event.
          type: boolean
        sellSequence:
          description: Sell sequence of Event.
          type: number
        inactive:
          description: Inactive flag of Event.
          type: boolean
        hotelId:
          description: Hotel code to which the Event Code is associated.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    eventCodesCriteria:
      description: Request object for creating new Event Codes for a hotel.
      properties:
        eventCodes:
          description: Details for Event Code at hotel level.
          items:
            $ref: '#/components/schemas/eventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventCodesToBeChanged:
      description: Request object for modifying Event Codes for a hotel.
      properties:
        eventCodes:
          description: Details for Event Code at hotel level.
          items:
            $ref: '#/components/schemas/eventCodeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventForecastsInfo:
      properties:
        eventForecasts:
          description: Collection of multiple Event Forecasts.
          items:
            $ref: '#/components/schemas/eventForecastType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpacesDetails:
      description: Response object for fetching function spaces summary info at the
        property level.
      properties:
        functionSpaces:
          description: The summary information for a function space.
          items:
            $ref: '#/components/schemas/functionSpaceSummaryType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpacesSummaryType:
      description: The summary information for a function space.
      items:
        $ref: '#/components/schemas/functionSpaceSummaryType'
      maxItems: 4000
      type: array
    functionSpaceSummaryType:
      description: The summary information for a function space.
      properties:
        hotelId:
          description: Hotel Code where function space belongs to.
          maxLength: 20
          minLength: 0
          type: string
        roomCode:
          description: Room Code of the Function Space.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room Type of the Function Space.
          maxLength: 20
          minLength: 0
          type: string
        psuedoRoomType:
          description: Indicates whether the room type is psuedo.
          type: boolean
        spaceName:
          $ref: '#/components/schemas/translationTextType2000'
        shortName:
          description: The Short Name of the Function Space.
          maxLength: 2000
          minLength: 0
          type: string
        floor:
          description: The floor on which the Function Space is located.
          maxLength: 20
          minLength: 0
          type: string
        spaceType:
          description: The Type which the Function Space belongs to.
          maxLength: 20
          minLength: 0
          type: string
        location:
          description: The building on which the Function Space is located.
          maxLength: 20
          minLength: 0
          type: string
        combo:
          description: Indicate if the function space is a combination room.
          type: boolean
        element:
          description: Indicate if the function space will be shown in the Function
            Diary by default.
          type: boolean
        shareable:
          description: Indicate if the function space is shareable.
          type: boolean
        forceAlternate:
          description: Indicate if the function space is forced to have alternate
            function spaces in case the function space becomes unvailable.
          type: boolean
        webBookable:
          description: Indicates whether the Function Space is web bookable or not.
          type: boolean
        webViewable:
          description: Indicates whether the Function Space is web viewable or not.
          type: boolean
        fullUtilizationTime:
          description: The time in minutes that the function space would be considered
            at 100% utilization.
          type: number
        handicapFacilities:
          description: Indicates whether the function space has handicap facilities.
          type: boolean
        orderBy1:
          description: The first custom order for sorting the function space display.
          type: integer
        orderBy2:
          description: The second custom order for sorting the function space display.
          type: integer
        orderBy3:
          description: The third custom order for sorting the function space display.
          type: integer
      type: object
    functionSpacesCriteria:
      description: Request object for creating function spaces.
      properties:
        functionSpaces:
          description: The detail information of function space for function space
            configuration.
          items:
            $ref: '#/components/schemas/functionSpaceConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpacesConfigType:
      description: The detail information of function space for function space configuration.
      items:
        $ref: '#/components/schemas/functionSpaceConfigType'
      maxItems: 4000
      type: array
    functionSpaceConfigType:
      description: The summary information for a function space.
      properties:
        hotelId:
          description: Hotel Code where function space belongs to.
          maxLength: 20
          minLength: 0
          type: string
        roomCode:
          description: Room Code of the Function Space.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room Type of the Function Space.
          maxLength: 20
          minLength: 0
          type: string
        psuedoRoomType:
          description: Indicates whether the room type is psuedo.
          type: boolean
        spaceName:
          $ref: '#/components/schemas/translationTextType2000'
        shortName:
          description: The Short Name of the Function Space.
          maxLength: 2000
          minLength: 0
          type: string
        floor:
          description: The floor on which the Function Space is located.
          maxLength: 20
          minLength: 0
          type: string
        spaceType:
          description: The Type which the Function Space belongs to.
          maxLength: 20
          minLength: 0
          type: string
        location:
          description: The building on which the Function Space is located.
          maxLength: 20
          minLength: 0
          type: string
        combo:
          description: Indicate if the function space is a combination room.
          type: boolean
        element:
          description: Indicate if the function space will be shown in the Function
            Diary by default.
          type: boolean
        shareable:
          description: Indicate if the function space is shareable.
          type: boolean
        forceAlternate:
          description: Indicate if the function space is forced to have alternate
            function spaces in case the function space becomes unvailable.
          type: boolean
        webBookable:
          description: Indicates whether the Function Space is web bookable or not.
          type: boolean
        webViewable:
          description: Indicates whether the Function Space is web viewable or not.
          type: boolean
        excludeFromForecast:
          description: Flag to indicate if the event of this function space should
            be excluded from the forecast report.
          type: boolean
        fullUtilizationTime:
          description: The time in minutes that the function space would be considered
            at 100% utilization.
          type: number
        handicapFacilities:
          description: Indicates whether the function space has handicap facilities.
          type: boolean
        orderBy1:
          description: The first custom order for sorting the function space display.
          type: integer
        orderBy2:
          description: The second custom order for sorting the function space display.
          type: integer
        orderBy3:
          description: The third custom order for sorting the function space display.
          type: integer
        description:
          $ref: '#/components/schemas/translationTextType2000'
        capacity:
          $ref: '#/components/schemas/roomCapacityType'
        displayInDiary:
          description: Indicate if the function space will be shown in the Function
            Diary by default.
          type: boolean
        maxEvents:
          description: Maximum number of events for a shared function space.
          type: integer
        futureEventsExist:
          description: "If the function space has future event, the combo elements\
            \ are not editable."
          type: boolean
        setupStyles:
          description: Setup Style Type for function space.
          items:
            $ref: '#/components/schemas/functionSpaceConfigType_setupStyles_inner'
          maxItems: 4000
          type: array
        comboRooms:
          description: This type holds a collection of combo elements for a function
            space.
          items:
            $ref: '#/components/schemas/comboElementRoomType'
          maxItems: 4000
          type: array
        rates:
          description: List of available rates for the function space.
          items:
            $ref: '#/components/schemas/baseFunctionSpaceRateType'
          maxItems: 4000
          type: array
        comboElements:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        dimension:
          $ref: '#/components/schemas/functionSpaceDimensionType'
        alternate:
          $ref: '#/components/schemas/functionSpaceAlternateType'
      type: object
    comboRoomsType:
      description: This type holds a collection of combo elements for a function space.
      items:
        $ref: '#/components/schemas/comboElementRoomType'
      maxItems: 4000
      type: array
    comboElementRoomType:
      description: Details of each combo element room.
      properties:
        roomCode:
          description: Configured code of the room.
          maxLength: 20
          minLength: 0
          type: string
        roomDescription:
          $ref: '#/components/schemas/translationTextType2000'
        roomSize:
          description: Configured size of the room.
          type: number
        roomProportion:
          description: Percentage occupied by the room.
          type: number
      type: object
    baseFunctionSpaceRateType:
      description: Base type provides information about Catering Code which will be
        used for removal operation
      properties:
        codeId:
          description: Code ID is used to identify a Catering Code by ID.
          type: number
        code:
          description: Code is used to identify a Catering Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Catering Codes display sequence Number
          type: number
        rentAmount:
          $ref: '#/components/schemas/currencyAmountType'
        revenueType:
          description: Catering revenue type used for function space rent amount.
          maxLength: 20
          minLength: 0
          type: string
        rateType:
          $ref: '#/components/schemas/functionSpaceRateTypeType'
        default:
          description: Indicates that this rate is the default for the function space.
          type: boolean
        inactive:
          description: Indicates that this rate is inactive.
          type: boolean
        hourly:
          description: Indicates that this rate is computed per hour.
          type: boolean
        minimunRevenue:
          description: Indicates that minimum revenue should be enforced for this
            rate code.
          type: boolean
      type: object
    functionSpaceRateTypeType:
      description: Indicates the function space rate is applied per person.
      enum:
      - PerRoom
      - PerPerson
      type: string
    functionSpaceDimensionType:
      description: Detailed information on the capacity of a room.
      properties:
        width:
          description: Width of the room.
          type: number
        length:
          description: Length of the room.
          type: number
        area:
          description: Area of the room.
          type: number
        minHeight:
          description: Minimum height of the room.
          type: number
        maxHeight:
          description: Maximum height of the room.
          type: number
        unitOfMeasureCode:
          description: The unit of measure in a code format.
          maxLength: 20
          minLength: 0
          type: string
        weight:
          description: The maximum load that can be supported by the floor in this
            function space.
          type: number
        note:
          description: Additional information for the function space.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    functionSpaceAlternateType:
      description: Details for alternate function spaces.
      properties:
        forceAlternate:
          description: Flag to indicate if the function space must have an alternate
            space when used.
          type: boolean
        excludedCateringEventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    functionSpacesToBeChanged:
      description: Request object for changing function spaces.
      properties:
        functionSpaces:
          description: The detail information of function space for function space
            configuration.
          items:
            $ref: '#/components/schemas/functionSpaceConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    functionSpaceConfigDetails:
      description: Response object for fetching function space config info.
      properties:
        functionSpace:
          $ref: '#/components/schemas/functionSpaceConfigType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    inventoryItems:
      description: Response object to fetch Inventory Items Setup configuration
      properties:
        items:
          description: List of Inventory Items.
          items:
            $ref: '#/components/schemas/inventoryItemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    inventoryItemsType:
      description: List of Inventory Items.
      items:
        $ref: '#/components/schemas/inventoryItemType'
      maxItems: 4000
      type: array
    inventoryItemType:
      description: Inventory Items identification details.
      properties:
        hotelId:
          description: The Hotel code which the item belongs to.
          maxLength: 20
          minLength: 0
          type: string
        itemId:
          $ref: '#/components/schemas/uniqueID_Type'
        itemClassId:
          $ref: '#/components/schemas/uniqueID_Type'
        itemClassCode:
          description: The Item Class Code which the item belongs to.
          maxLength: 20
          minLength: 0
          type: string
        itemClassDescription:
          description: The Description of the Item Class.
          maxLength: 2000
          minLength: 0
          type: string
        itemName:
          $ref: '#/components/schemas/translationTextType200'
        itemDescription:
          description: The Description of the Item.
          maxLength: 2000
          minLength: 0
          type: string
        itemCode:
          description: The Article Number of the Item.
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: The Revenue Type of the Item.
          maxLength: 20
          minLength: 0
          type: string
        revenueTypeEditable:
          description: "If true, the revenue could be changed."
          type: boolean
        externalOrder:
          description: Flag to define if the inventory item can be ordered externally
            when the item is marked as critical.
          type: boolean
        print:
          description: The Revenue Type of the Item.
          type: boolean
        sellInfo:
          $ref: '#/components/schemas/inventoryItemType_sellInfo'
        setupTime:
          description: Setup Time of the Item in minutes.
          type: number
        setdownTime:
          description: Setdown Time of the Item in minutes.
          type: number
        traceText:
          description: The Trace Text of the Item.
          maxLength: 2000
          minLength: 0
          type: string
        tracesPerDay:
          description: Flag to indicate that trace text will be created for each day
            of the Item Inventory.
          type: boolean
        itemPool:
          description: The Item Pool description of the Item.
          maxLength: 200
          minLength: 0
          type: string
        displaySequence:
          description: The display sequence of the Item.
          type: number
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        departments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        attributes:
          description: List of Item Attributes.
          items:
            $ref: '#/components/schemas/itemAttributeType'
          maxItems: 4000
          type: array
        rates:
          description: List of Item Rates.
          items:
            $ref: '#/components/schemas/itemRateType'
          maxItems: 4000
          type: array
        vendors:
          description: List of Item Vendors.
          items:
            $ref: '#/components/schemas/itemVendorType'
          maxItems: 4000
          type: array
        resourceNotes:
          description: Contains event resource note information.
          items:
            $ref: '#/components/schemas/eventResourceNoteType'
          maxItems: 4000
          type: array
        itemClassDisplaySequence:
          description: Display sequence of Item Class.
          type: number
        usedForEvents:
          description: "If true, the item is used for events."
          type: boolean
        usedForReservation:
          description: "If true, the item is used for reservation."
          type: boolean
        itemFromTemplate:
          description: Indicates whether Item is from a Template or not.
          type: boolean
      type: object
    itemAttributesType:
      description: List of Item Attributes.
      items:
        $ref: '#/components/schemas/itemAttributeType'
      maxItems: 4000
      type: array
    itemAttributeType:
      description: Details of the Item Attribute.
      properties:
        itemAttributeId:
          $ref: '#/components/schemas/uniqueID_Type'
        translatableName:
          $ref: '#/components/schemas/translationTextType200'
        setupTime:
          description: The Setup Time of the Item Attribute in minutes.
          type: number
        setdownTime:
          description: The Setdown Time of the Item Attribute in minutes.
          type: number
        default:
          description: "If true, it's the default Attribute for the Item."
          type: boolean
      type: object
    itemRatesType:
      description: List of Item Rates.
      items:
        $ref: '#/components/schemas/itemRateType'
      maxItems: 4000
      type: array
    itemRateType:
      description: Details of the Item Rate.
      properties:
        itemRateId:
          $ref: '#/components/schemas/uniqueID_Type'
        itemRateCode:
          description: The Rate Code of the Item Rate.
          maxLength: 20
          minLength: 0
          type: string
        name:
          description: The Name of the Item Rate.
          maxLength: 200
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        hourly:
          description: "If true, it's hourly rate."
          type: boolean
        default:
          description: "If true, it's the default Rate for the Item."
          type: boolean
      type: object
    itemVendorsType:
      description: List of Item Vendors.
      items:
        $ref: '#/components/schemas/itemVendorType'
      maxItems: 4000
      type: array
    itemVendorType:
      description: Details of the Item Vendor.
      properties:
        profileId:
          $ref: '#/components/schemas/profileId'
        name:
          description: The Name of the vendor.
          maxLength: 100
          minLength: 0
          type: string
        leadTime:
          description: Lead time for ordering.
          maxLength: 200
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        priority:
          description: The Priority of the Vendor.
          type: number
        phone:
          description: The phone number of the Vendor.
          maxLength: 2000
          minLength: 0
          type: string
        fax:
          description: The fax number of the Vendor.
          maxLength: 2000
          minLength: 0
          type: string
        email:
          description: The email address of the Vendor.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    inventoryItemsCreated:
      description: Response object for creating Inventory Items Setup configurations
      properties:
        items:
          description: List of Inventory Items.
          items:
            $ref: '#/components/schemas/inventoryItemType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    itemPoolsInfo:
      description: Response object which holds collection of Item Pools.
      properties:
        itemPools:
          description: Item Pools details for hotels.
          items:
            $ref: '#/components/schemas/itemPoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    itemPoolsType:
      description: Item Pools details for hotels.
      items:
        $ref: '#/components/schemas/itemPoolType'
      maxItems: 4000
      type: array
    itemPoolType:
      description: A type which holds the Item pool.
      properties:
        hotelId:
          description: Hotel Code which belong to Item Pool
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Item Pools Code
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Item Pool code.
          maxLength: 200
          minLength: 0
          type: string
        itemClass:
          description: Item Class which associated to Item codes.
          maxLength: 20
          minLength: 0
          type: string
        displaySequence:
          description: Sequence of Item Pool code.
          type: number
        itemIds:
          description: Collection of Item Id which belongs to Item Code.
          items:
            type: number
          maxItems: 4000
          type: array
      type: object
    itemIDListType:
      description: Collection of Item Id which belongs to Item Code.
      items:
        type: number
      maxItems: 4000
      type: array
    roomTypePoolDetails:
      description: Response object for fetch room pool information.
      properties:
        roomTypePools:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypePoolTypes:
      description: Collection of room type pool and associated room type(s).
      items:
        $ref: '#/components/schemas/roomTypePoolType'
      maxItems: 4000
      type: array
    roomTypePoolType:
      description: This type represents complete information of room type pool and
        Associated Room Type(s).
      properties:
        hotelId:
          description: Hotel Code where room pool belongs to.
          maxLength: 20
          minLength: 0
          type: string
        roomTypePoolCode:
          description: Room type pool Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of room pool type.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          $ref: '#/components/schemas/translationTextType1000'
        sequence:
          description: Sequence for representing room type pool record.
          type: integer
        associatedRoomTypes:
          description: Collection of room type pool mapping type.
          items:
            $ref: '#/components/schemas/roomPoolRoomTypeType'
          maxItems: 4000
          type: array
      type: object
    translationTextType1000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 1000.
          maxLength: 1000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    roomPoolRoomTypesType:
      description: Collection of room type pool mapping type.
      items:
        $ref: '#/components/schemas/roomPoolRoomTypeType'
      maxItems: 4000
      type: array
    roomPoolRoomTypeType:
      description: This extension will only use for consuming RoomType and SellSequence
        elements for consistency.
      properties:
        roomClass:
          description: Room class for the room type code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        activeDate:
          description: Active date of the room type.
          format: date
          type: string
        pseudo:
          description: Indicates if room type is pseudo.
          type: boolean
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        sendToInterface:
          description: Indicates if room type is sent to interface.
          type: boolean
        sellSequence:
          description: Indicates room types sell sequence.
          type: number
        suite:
          description: Indicates room type is a suite.
          type: boolean
        meetingRoom:
          description: Indicates room type is meeting room. This Can be Meeting room
            flag cannot be unmarked at the property level. Can only be marked for
            non pseudo room types.
          type: boolean
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Number of rooms for this room type.
          type: integer
        inactive:
          description: Indicates the room type is inactive or not.
          type: boolean
        restricted:
          description: Indicates that the room pool cannot be used to allocate inventory
            to this room type. Inventory must be allocated directly to the room type
            itself.
          type: boolean
      type: object
    roomTypePoolCriteria:
      description: Request object for creating new room pool.
      properties:
        roomPoolTypes:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypePoolToBeChanged:
      description: Request object for changing existing room pool.
      properties:
        roomPoolTypes:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyFunctionSpaces:
      description: "Request object for creating multiple function spaces based on\
        \ an existing function space. New function space may have different name,\
        \ display name on function dairy, order of display and combo elements. The\
        \ rest of the details will be copied from the source function space."
      properties:
        copyFunctionSpace:
          $ref: '#/components/schemas/copyFunctionSpaceType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyFunctionSpaceType:
      description: Primary details of function space to be copied and collection of
        function spaces to be created from it.
      properties:
        targetFunctionSpace:
          description: Function Space details that may differ from the source function
            space.
          items:
            $ref: '#/components/schemas/targetFunctionSpaceType'
          maxItems: 4000
          type: array
        sourceHotelCode:
          description: Hotel code of source function space that will serve as the
            basis for the target function spaces.
          type: string
        sourceRoomNumber:
          description: Room number of source function space that will serve as the
            basis for the target function spaces.
          type: string
      type: object
    targetFunctionSpaceType:
      description: "Function Space details that may be different from the source function\
        \ space. If any of Space Name, Short Name, Custom Orders and Combo Element\
        \ types are not passed together with this type, it means that it is expected\
        \ that these would be copied from source function space"
      properties:
        spaceName:
          description: The Name of the Function Space.
          maxLength: 2000
          minLength: 0
          type: string
        shortName:
          description: The Short Name of the Function Space.
          maxLength: 2000
          minLength: 0
          type: string
        orderBy1:
          description: The first custom order for sorting the function space display.
          type: integer
        orderBy2:
          description: The second custom order for sorting the function space display.
          type: integer
        orderBy3:
          description: The third custom order for sorting the function space display.
          type: integer
        comboElements:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        targetRoomNumber:
          description: Room number of the new function space to be created.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    copyFunctionSpaceLocations:
      properties:
        locations:
          description: List of function space location(s) to be copied.
          items:
            $ref: '#/components/schemas/copyConfigurationCodeType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyConfigurationCodeType:
      description: Information needed to copy configuration code from one property
        to the other.
      properties:
        targetHotelCode:
          description: Property to which configuration code type to be copied to.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        sourceHotelCode:
          description: Code that is to be copied.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Source hotel code from which code is to be copied from.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    inventoryItemsCopy:
      description: Request object for copying Inventory Items Setup configuration
      properties:
        copyInventoryItems:
          $ref: '#/components/schemas/copyInventoryItemsType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyInventoryItemsType:
      description: Copy Inventory Items criteria type to copy multiple Inventory Items
        from one Hotel to other Hotels.
      properties:
        copyInventoryItem:
          description: The details of Inventory Items to be copied.
          items:
            $ref: '#/components/schemas/copyInventoryItemType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code from which Inventory Items are being copied.
          maxLength: 20
          minLength: 0
          type: string
        includeRates:
          description: "If true, include to copy the Item Rates."
          type: boolean
        includeAttributes:
          description: "If true, include to copy the Item Attributes."
          type: boolean
        includeVendors:
          description: "If true, include to copy the Item Vendor."
          type: boolean
      type: object
    copyInventoryItemType:
      description: The type describes Inventory Item Details being copied.
      properties:
        hotelId:
          description: Hotel code to which item code will be copied.
          maxLength: 20
          minLength: 0
          type: string
        itemCode:
          description: Item code being copied.
          maxLength: 20
          minLength: 0
          type: string
        copyAs:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    inventoryItemTemplates:
      description: Response object for fetching inventory item templates.
      properties:
        inventoryItemTemplates:
          description: This type holds a collection of inventory item templates.
          items:
            $ref: '#/components/schemas/inventoryItemTemplateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    inventoryItemTemplatesType:
      description: This type holds a collection of inventory item templates.
      items:
        $ref: '#/components/schemas/inventoryItemTemplateType'
      maxItems: 4000
      type: array
    inventoryItemTemplateType:
      description: This gives detailed information about an inventory item template.
      properties:
        hotelId:
          description: Specifies the hotel code for which the inventory item template
            is defined.
          maxLength: 20
          minLength: 0
          type: string
        inventoryItemTemplateId:
          $ref: '#/components/schemas/uniqueID_Type'
        inventoryItemTemplateName:
          description: Specifies the name of the inventory item template.
          maxLength: 40
          minLength: 0
          type: string
        inventoryItemTemplateItems:
          description: This type holds a collection of inventory items which are to
            be grouped under a single inventory item template.
          items:
            $ref: '#/components/schemas/inventoryItemTemplateItemType'
          maxItems: 4000
          type: array
      type: object
    inventoryItemTemplateItemsType:
      description: This type holds a collection of inventory items which are to be
        grouped under a single inventory item template.
      items:
        $ref: '#/components/schemas/inventoryItemTemplateItemType'
      maxItems: 4000
      type: array
    inventoryItemTemplateItemType:
      description: This type holds the information of the inventory item which will
        be grouped in the inventory item template.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        name:
          description: Specifies the name of the item.
          maxLength: 40
          minLength: 0
          type: string
        articleNumber:
          description: Specifies the article number of the item.
          maxLength: 20
          minLength: 0
          type: string
        rateId:
          $ref: '#/components/schemas/uniqueID_Type'
        rateCode:
          description: Specifies the code of the default rate for the item in the
            inventory item template.
          maxLength: 20
          minLength: 0
          type: string
        rateName:
          description: Specifies the name of the default rate for the item in the
            inventory item template.
          maxLength: 200
          minLength: 0
          type: string
        attributeId:
          $ref: '#/components/schemas/uniqueID_Type'
        attributeName:
          description: Specifies the name of the default attribute for the item in
            the inventory item template.
          maxLength: 200
          minLength: 0
          type: string
        classSequence:
          description: Specifies the sorting sequence number for the item class.
          type: integer
        sequence:
          description: Specifies the sorting sequence number for the item.
          type: integer
        quantity:
          description: Specifies the quantity of the item.
          type: integer
      type: object
    itemClassesInfo:
      description: Response object for fetching item class.
      properties:
        itemClasses:
          description: Holds Item Class details.
          items:
            $ref: '#/components/schemas/itemClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    itemClassesType:
      description: Holds Item Class details.
      items:
        $ref: '#/components/schemas/itemClassType'
      maxItems: 4000
      type: array
    itemClassType:
      description: Provides information about the Item Class.
      properties:
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Code of the Item Class.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType200'
        type:
          $ref: '#/components/schemas/itemClassTypeType'
        classId:
          description: ClassID of the Item Class.
          type: number
        displaySequence:
          description: Sequence of Item Class.
          type: number
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        departments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        discountable:
          description: Indicates whether the Item Class is discountable or not.
          type: boolean
        webBookable:
          description: Indicates whether the Item Class is BookableViaWebsite or not.
          type: boolean
        overrideWarnings:
          description: Indicates whether the all items to be updated when there are
            warnings.
          type: boolean
        discountOverrideWarnings:
          description: Indicates whether the all items to be updated when there are
            warnings for discountable.
          type: boolean
      type: object
    itemClassTypeType:
      description: Defines values for Item Class Type.
      enum:
      - Reservation
      - Events
      - ReservationAndEvents
      type: string
    itemClasses:
      description: Request object for modifying item class.
      properties:
        itemClasses:
          description: Holds Item Class details.
          items:
            $ref: '#/components/schemas/itemClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    itemClassesCopy:
      description: List of the Item Class to be copied.
      items:
        $ref: '#/components/schemas/copyConfigurationCodeType'
      type: array
    itemPools:
      description: Request object which holds modified Item Pools.
      properties:
        itemPools:
          description: Item Pools details for hotels.
          items:
            $ref: '#/components/schemas/itemPoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mealTypesDetails:
      description: Response object for fetching Meal Types.
      properties:
        mealTypes:
          description: List of Meal Types.
          items:
            $ref: '#/components/schemas/mealTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mealTypesType:
      description: List of Meal Types.
      items:
        $ref: '#/components/schemas/mealTypeType'
      maxItems: 4000
      type: array
    mealTypeType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        managedBy:
          $ref: '#/components/schemas/managedByOptions'
      type: object
    mealTypesCriteria:
      description: Request object for creating Meal Types.
      properties:
        mealTypes:
          description: List of Meal Types.
          items:
            $ref: '#/components/schemas/mealTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    mealTypesToBeChanged:
      description: Request object for changing Meal Types.
      properties:
        mealTypes:
          description: List of Meal Types.
          items:
            $ref: '#/components/schemas/mealTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueGroupsInfo:
      description: Response object for fetching Catering Revenue Groups configurations.
      properties:
        revenueGroups:
          description: Details for Catering Revenue Group along with associated Revenue
            Type codes.
          items:
            $ref: '#/components/schemas/revenueGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueGroupsType:
      description: Details for Catering Revenue Group along with associated Revenue
        Type codes.
      items:
        $ref: '#/components/schemas/revenueGroupType'
      maxItems: 4000
      type: array
    revenueGroupType:
      description: Provides information about Catering Revenue Group along with Revenue
        Type Code.
      properties:
        code:
          description: Code is used to identify a Catering Revenue Group.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Sequence Number of the Catering Revenue Group.
          type: number
        inactive:
          description: Indicates if the Catering Revenue Group is inactive.
          type: boolean
        revenueTypes:
          description: List of Revenue Types to be configured
          items:
            $ref: '#/components/schemas/revenueTypeType'
          maxItems: 4000
          type: array
      type: object
    revenueTypesType:
      description: List of Revenue Types to be configured
      items:
        $ref: '#/components/schemas/revenueTypeType'
      maxItems: 4000
      type: array
    revenueTypeType:
      description: Base type provides information about Catering Revenue Types Configuration.
      properties:
        code:
          description: Code is used to identify a Catering Revenue Type/Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Revenue Types display sequence Number
          type: number
        revenueGroup:
          description: Revenue Group
          maxLength: 20
          minLength: 0
          type: string
        foodAndBeverage:
          description: Flag for Food and Beverages.
          type: boolean
        inactive:
          description: Indicates if the Revenue type Code is inactive.
          type: boolean
        revenueDetails:
          description: List of Revenue details assoicated to a Revenue Type (Additional
            Details)
          items:
            $ref: '#/components/schemas/revenueTypeDetailType'
          maxItems: 4000
          type: array
      type: object
    revenueTypeDetailsType:
      description: List of Revenue details assoicated to a Revenue Type (Additional
        Details)
      items:
        $ref: '#/components/schemas/revenueTypeDetailType'
      maxItems: 4000
      type: array
    revenueTypeDetailType:
      description: Details type provides information about Catering Revenue Type Details.
      properties:
        hotelId:
          description: Hotel Code is used to set associated revenue type details.
          maxLength: 20
          minLength: 0
          type: string
        revenueMinimum:
          description: Indicates if this revenue type contributes to the revenue minimum.
          type: boolean
        tax:
          description: VAT % to calculate Net Catering Revenues.
          maximum: 100
          minimum: 0
          type: number
      type: object
    revenueGroups:
      description: Request object for changing existing Catering Revenue Groups Configurations.
      properties:
        revenueGroups:
          description: Details for Catering Revenue Group along with associated Revenue
            Type codes.
          items:
            $ref: '#/components/schemas/revenueGroupType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueTypesInfo:
      description: Response object for fetching Revenue Types Setup configurations.
      properties:
        revenueTypes:
          description: List of Revenue Types to be configured
          items:
            $ref: '#/components/schemas/revenueTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    revenueTypes:
      description: Request object for changing existing Revenue Types Setup Configurations.
      properties:
        revenueTypes:
          description: List of Revenue Types to be configured
          items:
            $ref: '#/components/schemas/revenueTypeType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    managedByOptions:
      description: Describes of the Configuration is Managed by Enterprise or Property.
      enum:
      - EnterpriseManaged
      - PropertyManaged
      - EnterpriseEnforced
      - PropertyOverriden
      type: string
    resourceCodeInfo:
      description: Response object of newly copied resource or configuration code.
      properties:
        resourceCode:
          description: Newly copied resource or configuration code.
          maxLength: 20
          minLength: 0
          type: string
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyCateringPackageType:
      description: Request object for Copying Catering Package/Template.
      properties:
        code:
          description: Code associated with the newly copied Catering Package/template.
          maxLength: 10
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    copyCateringPackagePriceType:
      description: Request object for Copying Catering Package Price.
      properties:
        code:
          description: Code associated with the newly copied Catering Package Price.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    copyMenuItemClassesType_copyInstructions:
      description: "Instructions which will be considered when copying from the template.\
        \ If this element is not sent, all the flags will be ignored."
      properties:
        associatedItems:
          description: "When true, this will copy the source block's room allocation\
            \ counts to the new block."
          type: boolean
      type: object
    functionSpaceConfigType_setupStyles_inner:
      description: Type for the function space setup style ID
      properties:
        codeId:
          description: Setup style code id .
          type: number
        code:
          description: Function Space Setup Style Code.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType200'
        displaySequence:
          description: Description of the Function Space Setup Style.
          type: integer
        directory:
          description: Display in Directory True or False.
          type: boolean
        webBooking:
          description: Bookmarkable via Website True or False.
          type: boolean
        webSetup:
          description: Setup Time for web bookings.
          type: integer
        webSetdown:
          description: Setdown Time for web bookings.
          type: integer
        inactive:
          description: Indicates if the Setup Style is active.
          type: boolean
        minCapacity:
          description: Minimum Capacity for function space setup style type.
          type: integer
        maxCapacity:
          description: Maximum Capacity for function space setup style type.
          type: integer
        default:
          description: Indicate if the setup style is the default.
          type: boolean
      type: object
    inventoryItemType_sellInfo:
      description: The Sell Information of the Item.
      properties:
        available:
          $ref: '#/components/schemas/dateTimeSpanType'
        availableQty:
          description: Available quantity during a period of time.
          type: number
        qtyInStock:
          description: Item quantity in Stock.
          type: number
        defaultQty:
          description: Defines the default quantity when booking the Item.
          type: number
        sellSeparate:
          description: "If true, the item could be sold separately."
          type: boolean
        sellControl:
          description: "If true, item is mandatory for booking."
          type: boolean
        welcomeOffer:
          description: "If true, the item can be attached as part of a Welcome Offer"
          type: boolean
        webBookable:
          description: "If true, web booking is allowed."
          type: boolean
        itemClassWebBookable:
          description: Specifies if web booking is allowed for the Item Class.
          type: boolean
        outsideStay:
          description: Define if the the Item could be held outside of the reservation
            stay days.
          type: boolean
        fixedCharge:
          description: "If true, the Fixed Charges screen will be automatically displayed\
            \ when this item gets attached to a reservation."
          type: boolean
        discountable:
          description: Specifies if a discount is allowed for this item.
          type: boolean
        itemClassDiscountable:
          description: Specifies if a discount is allowed for the Item Class.
          type: boolean
        criticalInventory:
          description: Flag to issue a warning if this inventory item is overbooked.
          type: boolean
        price:
          $ref: '#/components/schemas/currencyAmountType'
        defaultDuration:
          description: Define the default duration days when booking the Item.
          type: integer
      type: object
x-original-swagger-version: "2.0"
