openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "This API caters for Event Configuration in OPERA Cloud. <br /><There\
    \ are operations to post, update, fetch and delete codes such as item inventory,\
    \ function spaces, menu items and many more.<br /><br /> Compatible with OPERA\
    \ Cloud release 22.3.<br /><br /><p> This document and all content within is available\
    \ under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl).\
    \ Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Event Configuration API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /evm/config/v1
tags:
- description: "The Resource Config Service Web Service offers capability to configure\
    \ Master Data needed for Hotel Resources such as managing Inventory Items, Item\
    \ Pools, Item Classes, etc."
  name: ResourceConfig
- description: These APIs will allow you to configure events related configuration
    related to Administration.
  name: ChainConfig
- description: These APIs will allow you to configure events related configuration
    related to Administration.
  name: HotelConfig
paths:
  /cateringEventTypes:
    get:
      description: Use this API to get Function Space Event Types. <p><strong>OperationId:</strong>getFunctionSpaceEventTypes</p>
      operationId: getFunctionSpaceEventTypes
      parameters:
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the Event field value description to search.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/functionSpaceEventTypesDetails'
          description: Response object of the Function Space Event Types.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FunctionSpaceEventTypes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Function Space Event Types
      tags:
      - ChainConfig
  /cateringMenuClasses:
    post:
      description: You can use this API to create menu classes. <p><strong>OperationId:</strong>postCateringMenuClasses</p>
      operationId: postCateringMenuClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCateringMenuClasses_request'
        description: Requestion object for creating new Menu Classes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menu classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuClasses
  /cateringMenuItemClasses:
    post:
      description: You can use this API to create menu item classes. <p><strong>OperationId:</strong>postCateringMenuItemClasses</p>
      operationId: postCateringMenuItemClasses
      parameters:
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCateringMenuItemClasses_request'
        description: Request object for Creating Menu Item Classes.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create menu item classes
      tags:
      - ResourceConfig
      x-codegen-request-body-name: cateringMenuItemClasses
  /hotels/{hotelId}/cateringMenuItems:
    get:
      description: Get Menu items for a property. <p><strong>OperationId:</strong>getCateringMenuItems</p>
      operationId: getCateringMenuItems
      parameters:
      - description: Unique OPERA Hotel Id
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Menu item name of string lentgth 30
        in: query
        name: name
        schema:
          type: string
      - explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Article number of Menu Item in Caps
        in: query
        name: quickInsertCode
        schema:
          type: string
      - explode: true
        in: query
        name: listTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If true this boolean will set the criteria to only return Menu
          Items configured as Inactive.
        in: query
        name: inactive
        schema:
          type: boolean
      - explode: true
        in: query
        name: eventTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenuItemsInfo'
          description: Response object for retrieving Menu Items.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenuItems not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Menu items
      tags:
      - ResourceConfig
  /hotels/{hotelId}/cateringMenus:
    get:
      description: Retrieve a list of menus for a property. <p><strong>OperationId:</strong>getCateringMenus</p>
      operationId: getCateringMenus
      parameters:
      - description: Unique OPERA Hotel ID
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: menuId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: iDExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: menuIDType
        schema:
          type: string
      - description: This type holds name of Menu Class.
        in: query
        name: name
        schema:
          type: string
      - explode: true
        in: query
        name: classNameListCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: eventTypesCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Defines values for Menu Type
        explode: true
        in: query
        name: menuTypes
        schema:
          items:
            enum:
            - Food
            - Beverage
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: dietaryListCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "If true, only Composed Menu's marked as Inactive in Menu Configuration\
          \ will be returned."
        in: query
        name: inactive
        schema:
          type: boolean
      - description: When selected Only Composed Menu's noted as Multi Choice in Menu
          Configuration will be returned.
        in: query
        name: multiChoice
        schema:
          type: boolean
      - description: Check of Menu if it is web bookable
        in: query
        name: webBookable
        schema:
          type: boolean
      - description: The ending value of the date range.
        in: query
        name: end
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        schema:
          format: date
          type: string
      - description: Fetch instructions that can be used in Catering Menus maintenance.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Revenue
            - MenuDetails
            - MenuNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/cateringMenusInfo'
          description: Response object to fetch Menu .
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CateringMenus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get menus
      tags:
      - ResourceConfig
  /hotels/{hotelId}/roomPools:
    get:
      description: This API allows you to Use this API to get Room Type Pool and the
        associated Room Types. <p><strong>OperationId:</strong>getRoomTypePool</p>
      operationId: getRoomTypePool
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Flag to indicate if inactive room types should be included.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: pageNumber
        schema:
          type: integer
      - description: Is it a physical sleep room type.
        in: query
        name: physical
        schema:
          type: boolean
      - description: Is it a pseudo room type.
        in: query
        name: pseudo
        schema:
          type: boolean
      - description: Flag to indicate if summary or detailed information should be
          fetched.
        in: query
        name: summaryInfo
        schema:
          type: boolean
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypePoolCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomTypePoolDetails'
          description: Response object for fetch room pool information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomTypePool not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Room Type Pool
      tags:
      - HotelConfig
    post:
      description: This API allows you to Use this API to create Room Type Pools.
        <p><strong>OperationId:</strong>postRoomTypePool</p>
      operationId: postRoomTypePool
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRoomTypePool_request'
        description: Request object for creating new room pool.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Room Type Pools
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypePoolCriteria
  /hotels/{hotelId}/roomPools/{roomPoolCode}:
    delete:
      description: Use this API to delete  Room Type Pool and Mappings. <p><strong>OperationId:</strong>removeRoomTypePool</p>
      operationId: removeRoomTypePool
      parameters:
      - description: Unique Code of room type pool.
        in: path
        name: roomPoolCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The description of room pool type.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Default text with Character length from 0 to 1000.
        in: query
        name: defaultText
        schema:
          type: string
      - description: Language code for the translation.
        explode: true
        in: query
        name: lang
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sequence for representing room type pool record.
        explode: true
        in: query
        name: sequence
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Indicates the room type is inactive or not.
        explode: true
        in: query
        name: inactive
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Number of rooms for this room type.
        explode: true
        in: query
        name: numberOfRooms
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room class for the room type code.
        explode: true
        in: query
        name: roomClass
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Short Description of room type.
        explode: true
        in: query
        name: shortDescription
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Active date of the room type.
        explode: true
        in: query
        name: activeDate
        schema:
          items:
            format: date
            type: string
          type: array
        style: form
      - description: Indicates if room type is pseudo.
        explode: true
        in: query
        name: pseudo
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates if room type is accessible.
        explode: true
        in: query
        name: accessible
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates if room type is sent to interface.
        explode: true
        in: query
        name: sendToInterface
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates room types sell sequence.
        explode: true
        in: query
        name: sellSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates room type is a suite.
        explode: true
        in: query
        name: suite
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates room type is meeting room. This Can be Meeting room
          flag cannot be unmarked at the property level. Can only be marked for non
          pseudo room types.
        explode: true
        in: query
        name: meetingRoom
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Indicates that the room pool cannot be used to allocate inventory
          to this room type. Inventory must be allocated directly to the room type
          itself.
        explode: true
        in: query
        name: restricted
        schema:
          items:
            type: boolean
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete  Room Type Pool and Mappings
      tags:
      - HotelConfig
    put:
      description: Use this API to update Room Type Pool and Associated Room Types.
        <p><strong>OperationId:</strong>changeRoomTypePool</p>
      operationId: changeRoomTypePool
      parameters:
      - description: Unique Code of room type pool.
        in: path
        name: roomPoolCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeRoomTypePool_request'
        description: Request object for changing existing room pool.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change Room Type Pool '
      tags:
      - HotelConfig
      x-codegen-request-body-name: roomTypePoolToBeChanged
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    functionSpaceEventTypesDetails:
      description: Response object of the Function Space Event Types.
      properties:
        eventTypes:
          description: Collection of Event Type
          items:
            $ref: '#/components/schemas/eventTypeConfigType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    eventTypesType:
      description: Collection of Event Type
      items:
        $ref: '#/components/schemas/eventTypeConfigType'
      maxItems: 4000
      type: array
    eventTypeConfigType:
      description: Representation of event record type.
      properties:
        eventTypeCode:
          description: Code Field Value belongs to the Event Type.
          maxLength: 20
          minLength: 0
          type: string
        translatableDescription:
          $ref: '#/components/schemas/translationTextType50'
        description:
          description: Description to elaborate the Event Code Type.
          maxLength: 50
          minLength: 0
          type: string
        timeWindow:
          $ref: '#/components/schemas/timeWindowType'
        inactive:
          description: Determines the event type status as active or inactive
          type: boolean
        mealType:
          description: Meal type associated with the event type.
          maxLength: 20
          minLength: 0
          type: string
        coverable:
          description: Indicates if Event Type is coverable or not.
          type: boolean
        webBookable:
          description: Defines if web booking is allowed or not.
          type: boolean
        sequence:
          description: The sequence number of the event.
          type: integer
      type: object
    translationTextType50:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 50.
          maxLength: 50
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    timeWindowType:
      description: Defines a Time period with start time and an end time.
      properties:
        startTime:
          description: Start Time of the Time window.
          type: string
        endTime:
          description: End Time of the Time window.
          type: string
      type: object
    cateringMenuClasses:
      description: Request object for changing Menu Classes.
      properties:
        menuClassList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuClassListType:
      description: List of Values of Menu.
      items:
        $ref: '#/components/schemas/cateringMenuClassType'
      maxItems: 4000
      type: array
    cateringMenuClassType:
      description: Catering Menu Class which holds the value of menu class.
      properties:
        classId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu class belongs to.
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/cateringMenuClassInfoType'
        menuList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuClassInfoType:
      description: Detailed attributes of Menu Class .
      properties:
        name:
          description: This type holds name of Menu Class.
          maxLength: 30
          minLength: 0
          type: string
        webBookable:
          description: This type tells about whether menu class is book through web
            or not.
          type: boolean
        inactiveDate:
          description: Inactive date of menu class.
          format: date
          type: string
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        inactive:
          description: "Return true, when this Menu Item Class will not be available\
            \ to be associated to a Catering Event."
          type: boolean
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    cateringMenuListType:
      description: List of Values of Menu.
      items:
        $ref: '#/components/schemas/cateringMenuType'
      maxItems: 4000
      type: array
    cateringMenuType:
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        classId:
          description: This type holds class id for given menu.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: The Hotel code which the catering menu belongs to.
          maxLength: 20
          minLength: 0
          type: string
        info:
          $ref: '#/components/schemas/cateringMenuInfoType'
        revenueList:
          description: This type holds revenue list.
          items:
            $ref: '#/components/schemas/cateringMenuRevType'
          maxItems: 4000
          type: array
        menuDetailList:
          description: List of Values of Catering Menu Detail.
          items:
            $ref: '#/components/schemas/cateringMenuDetailType'
          maxItems: 4000
          type: array
        multiChoiceList:
          description: This type holds Multi choice Menu.
          items:
            $ref: '#/components/schemas/cateringMultiChoiceMenuType'
          maxItems: 4000
          type: array
        menuNoteList:
          description: Contains event resource note information.
          items:
            $ref: '#/components/schemas/eventResourceNoteType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuInfoType:
      properties:
        className:
          description: This type holds name of Menu Class Name.
          maxLength: 30
          minLength: 0
          type: string
        name:
          $ref: '#/components/schemas/translationTextType2000'
        restriction:
          $ref: '#/components/schemas/translationTextType2000'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        type:
          $ref: '#/components/schemas/menuTypeType'
        quickInsertCode:
          description: "This type holds quick insert value, v5 functionality as Article\
            \ Number for the Menu."
          maxLength: 20
          minLength: 0
          type: string
        servingType:
          $ref: '#/components/schemas/servingType'
        servingSize:
          description: This type holds TableCapacity for the given Menu.
          maxLength: 20
          minLength: 0
          type: string
        includedInMenu:
          description: "Return true, when all Menu Items added will be marked as Included\
            \ and there will be a Global Price for this menu"
          type: boolean
        consumptionBased:
          description: "This type holds value of consumption, Menu items will be charged\
            \ on a consumption basis."
          type: boolean
        sellDateRange:
          $ref: '#/components/schemas/dateRangeType'
        eventDateRange:
          $ref: '#/components/schemas/dateRangeType'
        menusSold:
          description: The total number of menus sold for the day on which the event
            takes place.
          type: integer
        webBookable:
          description: This type tells about whether menu is book through web or not.
          type: boolean
        inactive:
          description: Selection will note this Menu is Inactive and unable to be
            added to a Catering Event.
          type: boolean
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        includedInPrice:
          description: "Return true means, menu item as Included in the Menu Price"
          type: boolean
        multiChoice:
          description: Indicator of this being a multi-choice menu
          type: boolean
        courseCount:
          description: Define the Courses populated into the Multi Choice Menu Configuration
          type: integer
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    menuTypeType:
      description: Defines values for Menu Type
      enum:
      - Food
      - Beverage
      type: string
    servingType:
      description: Serving
      enum:
      - Pp
      - Pt
      type: string
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    cateringMenuRevListType:
      description: This type holds revenue list.
      items:
        $ref: '#/components/schemas/cateringMenuRevType'
      maxItems: 4000
      type: array
    cateringMenuRevType:
      properties:
        revenueType:
          description: This supports all Revenue Types
          maxLength: 30
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/menuTypeType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        internalQuote:
          $ref: '#/components/schemas/currencyAmountType'
        costMargin:
          description: This type holds cost of the Menu.
          maximum: 100
          minimum: 0
          type: number
        price:
          $ref: '#/components/schemas/currencyAmountType'
        priceMargin:
          description: This type holds price margin for the given Menu.
          maximum: 100
          minimum: 0
          type: number
      type: object
    cateringMenuDetailListType:
      description: List of Values of Catering Menu Detail.
      items:
        $ref: '#/components/schemas/cateringMenuDetailType'
      maxItems: 4000
      type: array
    cateringMenuDetailType:
      description: Detailed attributes of Menu Item.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/codeDescriptionType'
        displayOrder:
          description: "Defines the Display Order of the menu item class, to which\
            \ the menu item is attached"
          type: integer
        name1:
          $ref: '#/components/schemas/translationTextType2000'
        name2:
          $ref: '#/components/schemas/translationTextType2000'
        name3:
          $ref: '#/components/schemas/translationTextType2000'
        origin1:
          $ref: '#/components/schemas/translationTextType2000'
        origin2:
          $ref: '#/components/schemas/translationTextType2000'
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        custom:
          description: Indicates whether this menu item is custom
          type: boolean
        year:
          description: This value is typically the year of the Wine
          type: integer
        restriction:
          description: Any particular restriction description in 100 charactera
          maxLength: 100
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryPreferenceList:
          items:
            $ref: '#/components/schemas/dietaryPrefType'
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        quickInsertCode:
          description: Article number in Caps of menu item
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: RevenueType of Menu Item
          maxLength: 20
          minLength: 0
          type: string
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        itemConsumption:
          description: Selection of this notes that the price defined is charged 'as-consumed'
            basis
          type: boolean
        container:
          $ref: '#/components/schemas/codeDescriptionType'
        portion:
          $ref: '#/components/schemas/translationTextType2000'
        servings:
          description: Numeric value of servings of Menu item
          type: integer
        webBookable:
          description: Check of Menu Item if it is web bookable
          type: boolean
        print:
          description: check if Print action is required for menu item
          type: boolean
        inactive:
          description: Check for the status of menu item
          type: boolean
        includedYN:
          description: Included flag
          type: boolean
        course:
          description: Course number defined will be the display order of the Menu
            Items on the screen and in Banquet Event Order.
          maxLength: 20
          minLength: 0
          type: string
        order:
          description: Order of Menu.
          maxLength: 20
          minLength: 0
          type: string
        demandFactor:
          description: Demand Factor of the Menu.
          maxLength: 20
          minLength: 0
          type: string
        menuName:
          description: Holds the value of Menu name.
          maxLength: 30
          minLength: 0
          type: string
        includedMenu:
          description: "Return true means, menu as Included in the Menu Price"
          type: boolean
        mandatory:
          description: "Return true means, menu as Included in the Menu Price"
          type: boolean
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    dietaryPrefListType:
      items:
        $ref: '#/components/schemas/dietaryPrefType'
      maxItems: 4000
      type: array
    dietaryPrefType:
      description: Base type provides information about Catering Revenue Types Configuration.
      properties:
        code:
          maxLength: 20
          minLength: 0
          type: string
        type:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    cateringMultiChoiceMenuListType:
      description: This type holds Multi choice Menu.
      items:
        $ref: '#/components/schemas/cateringMultiChoiceMenuType'
      maxItems: 4000
      type: array
    cateringMultiChoiceMenuType:
      properties:
        courseId:
          description: This attributes identifies the courseldd.
          type: integer
        course:
          description: This type holds Courses are defined for Menu.
          maxLength: 20
          minLength: 0
          type: string
        choiceCount:
          description: This type holds choice count of the Menu.
          type: integer
        courseDescription:
          $ref: '#/components/schemas/translationTextType100'
        courseName:
          $ref: '#/components/schemas/translationTextType20'
      type: object
    translationTextType100:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 100.
          maxLength: 100
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationTextType20:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 20.
          maxLength: 20
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    eventResourceNotesType:
      description: Contains event resource note information.
      items:
        $ref: '#/components/schemas/eventResourceNoteType'
      maxItems: 4000
      type: array
    eventResourceNoteType:
      description: Contains the event resource's note information.
      properties:
        noteId:
          $ref: '#/components/schemas/uniqueID_Type'
        noteCode:
          description: Note code.
          maxLength: 20
          minLength: 0
          type: string
        internal:
          description: Indicates if the note is internal use only.
          type: boolean
        noteTitle:
          description: Contains note title.
          maxLength: 200
          minLength: 0
          type: string
        note:
          description: Contains note text.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Contains display sequence.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    cateringMenuItemClasses:
      description: Request object for updating Menu Item Classes.
      properties:
        menuItemClasses:
          description: List of Values of Menu Item Class.
          items:
            $ref: '#/components/schemas/cateringMenuItemClassType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemClassListType:
      description: List of Values of Menu Item Class.
      items:
        $ref: '#/components/schemas/cateringMenuItemClassType'
      maxItems: 4000
      type: array
    cateringMenuItemClassType:
      description: Menu Item Class Values.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        itemClassInfo:
          $ref: '#/components/schemas/cateringMenuItemClassInfoType'
        itemList:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
      type: object
    cateringMenuItemClassInfoType:
      properties:
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        className:
          description: Menu Item Class Name
          maxLength: 30
          minLength: 0
          type: string
        eventTypeList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartmentList:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        sequence:
          description: Sequence of the Menu Class
          type: integer
        webBookable:
          description: Boolean value indicates whether the Menu Class is web bookable
            or not
          type: boolean
        iconName:
          description: Icon Name of the Menu Class
          maxLength: 30
          minLength: 0
          type: string
      type: object
    cateringMenuItemListType:
      description: List of Values of Menu Item.
      items:
        $ref: '#/components/schemas/cateringMenuItemType'
      maxItems: 4000
      type: array
    cateringMenuItemType:
      description: Detailed attributes of Menu Item.
      properties:
        id:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: The Hotel code which the menu item class belongs to
          maxLength: 20
          minLength: 0
          type: string
        classInfo:
          $ref: '#/components/schemas/codeDescriptionType'
        displayOrder:
          description: "Defines the Display Order of the menu item class, to which\
            \ the menu item is attached"
          type: integer
        name1:
          $ref: '#/components/schemas/translationTextType2000'
        name2:
          $ref: '#/components/schemas/translationTextType2000'
        name3:
          $ref: '#/components/schemas/translationTextType2000'
        origin1:
          $ref: '#/components/schemas/translationTextType2000'
        origin2:
          $ref: '#/components/schemas/translationTextType2000'
        menuType:
          $ref: '#/components/schemas/menuTypeType'
        custom:
          description: Indicates whether this menu item is custom
          type: boolean
        year:
          description: This value is typically the year of the Wine
          type: integer
        restriction:
          description: Any particular restriction description in 100 charactera
          maxLength: 100
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        dietaryPreferenceList:
          items:
            $ref: '#/components/schemas/dietaryPrefType'
          maxItems: 4000
          type: array
        eventTypes:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        responsibleDepartments:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        quickInsertCode:
          description: Article number in Caps of menu item
          maxLength: 20
          minLength: 0
          type: string
        revenueType:
          description: RevenueType of Menu Item
          maxLength: 20
          minLength: 0
          type: string
        salesPrice:
          $ref: '#/components/schemas/currencyAmountType'
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        itemConsumption:
          description: Selection of this notes that the price defined is charged 'as-consumed'
            basis
          type: boolean
        container:
          $ref: '#/components/schemas/codeDescriptionType'
        portion:
          $ref: '#/components/schemas/translationTextType2000'
        servings:
          description: Numeric value of servings of Menu item
          type: integer
        webBookable:
          description: Check of Menu Item if it is web bookable
          type: boolean
        print:
          description: check if Print action is required for menu item
          type: boolean
        inactive:
          description: Check for the status of menu item
          type: boolean
        includedYN:
          description: Included flag
          type: boolean
      type: object
    cateringMenuItemsInfo:
      description: Response object for retrieving Menu Items.
      properties:
        cateringMenuItems:
          description: List of Values of Menu Item.
          items:
            $ref: '#/components/schemas/cateringMenuItemType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    cateringMenusInfo:
      description: Response object to fetch Menu .
      properties:
        menuList:
          description: List of Values of Menu.
          items:
            $ref: '#/components/schemas/cateringMenuType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypePoolDetails:
      description: Response object for fetch room pool information.
      properties:
        roomTypePools:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypePoolTypes:
      description: Collection of room type pool and associated room type(s).
      items:
        $ref: '#/components/schemas/roomTypePoolType'
      maxItems: 4000
      type: array
    roomTypePoolType:
      description: This type represents complete information of room type pool and
        Associated Room Type(s).
      properties:
        hotelId:
          description: Hotel Code where room pool belongs to.
          maxLength: 20
          minLength: 0
          type: string
        roomTypePoolCode:
          description: Room type pool Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of room pool type.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          $ref: '#/components/schemas/translationTextType1000'
        sequence:
          description: Sequence for representing room type pool record.
          type: integer
        associatedRoomTypes:
          description: Collection of room type pool mapping type.
          items:
            $ref: '#/components/schemas/roomPoolRoomTypeType'
          maxItems: 4000
          type: array
      type: object
    translationTextType1000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 1000.
          maxLength: 1000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    roomPoolRoomTypesType:
      description: Collection of room type pool mapping type.
      items:
        $ref: '#/components/schemas/roomPoolRoomTypeType'
      maxItems: 4000
      type: array
    roomPoolRoomTypeType:
      description: This extension will only use for consuming RoomType and SellSequence
        elements for consistency.
      properties:
        roomClass:
          description: Room class for the room type code.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        activeDate:
          description: Active date of the room type.
          format: date
          type: string
        pseudo:
          description: Indicates if room type is pseudo.
          type: boolean
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        sendToInterface:
          description: Indicates if room type is sent to interface.
          type: boolean
        sellSequence:
          description: Indicates room types sell sequence.
          type: number
        suite:
          description: Indicates room type is a suite.
          type: boolean
        meetingRoom:
          description: Indicates room type is meeting room. This Can be Meeting room
            flag cannot be unmarked at the property level. Can only be marked for
            non pseudo room types.
          type: boolean
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        numberOfRooms:
          description: Number of rooms for this room type.
          type: integer
        inactive:
          description: Indicates the room type is inactive or not.
          type: boolean
        restricted:
          description: Indicates that the room pool cannot be used to allocate inventory
            to this room type. Inventory must be allocated directly to the room type
            itself.
          type: boolean
      type: object
    roomTypePoolCriteria:
      description: Request object for creating new room pool.
      properties:
        roomPoolTypes:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    roomTypePoolToBeChanged:
      description: Request object for changing existing room pool.
      properties:
        roomPoolTypes:
          description: Collection of room type pool and associated room type(s).
          items:
            $ref: '#/components/schemas/roomTypePoolType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postCateringMenuClasses_request:
      allOf:
      - $ref: '#/components/schemas/cateringMenuClasses'
    postCateringMenuItemClasses_request:
      allOf:
      - $ref: '#/components/schemas/cateringMenuItemClasses'
    postRoomTypePool_request:
      allOf:
      - $ref: '#/components/schemas/roomTypePoolCriteria'
    changeRoomTypePool_request:
      allOf:
      - $ref: '#/components/schemas/roomTypePoolToBeChanged'
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
x-original-swagger-version: "2.0"
