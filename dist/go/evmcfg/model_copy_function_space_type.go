/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the CopyFunctionSpaceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyFunctionSpaceType{}

// CopyFunctionSpaceType Primary details of function space to be copied and collection of function spaces to be created from it.
type CopyFunctionSpaceType struct {
	// Function Space details that may differ from the source function space.
	TargetFunctionSpace []TargetFunctionSpaceType `json:"targetFunctionSpace,omitempty"`
	// Hotel code of source function space that will serve as the basis for the target function spaces.
	SourceHotelCode *string `json:"sourceHotelCode,omitempty"`
	// Room number of source function space that will serve as the basis for the target function spaces.
	SourceRoomNumber *string `json:"sourceRoomNumber,omitempty"`
}

// NewCopyFunctionSpaceType instantiates a new CopyFunctionSpaceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyFunctionSpaceType() *CopyFunctionSpaceType {
	this := CopyFunctionSpaceType{}
	return &this
}

// NewCopyFunctionSpaceTypeWithDefaults instantiates a new CopyFunctionSpaceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyFunctionSpaceTypeWithDefaults() *CopyFunctionSpaceType {
	this := CopyFunctionSpaceType{}
	return &this
}

// GetTargetFunctionSpace returns the TargetFunctionSpace field value if set, zero value otherwise.
func (o *CopyFunctionSpaceType) GetTargetFunctionSpace() []TargetFunctionSpaceType {
	if o == nil || IsNil(o.TargetFunctionSpace) {
		var ret []TargetFunctionSpaceType
		return ret
	}
	return o.TargetFunctionSpace
}

// GetTargetFunctionSpaceOk returns a tuple with the TargetFunctionSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyFunctionSpaceType) GetTargetFunctionSpaceOk() ([]TargetFunctionSpaceType, bool) {
	if o == nil || IsNil(o.TargetFunctionSpace) {
		return nil, false
	}
	return o.TargetFunctionSpace, true
}

// HasTargetFunctionSpace returns a boolean if a field has been set.
func (o *CopyFunctionSpaceType) HasTargetFunctionSpace() bool {
	if o != nil && !IsNil(o.TargetFunctionSpace) {
		return true
	}

	return false
}

// SetTargetFunctionSpace gets a reference to the given []TargetFunctionSpaceType and assigns it to the TargetFunctionSpace field.
func (o *CopyFunctionSpaceType) SetTargetFunctionSpace(v []TargetFunctionSpaceType) {
	o.TargetFunctionSpace = v
}

// GetSourceHotelCode returns the SourceHotelCode field value if set, zero value otherwise.
func (o *CopyFunctionSpaceType) GetSourceHotelCode() string {
	if o == nil || IsNil(o.SourceHotelCode) {
		var ret string
		return ret
	}
	return *o.SourceHotelCode
}

// GetSourceHotelCodeOk returns a tuple with the SourceHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyFunctionSpaceType) GetSourceHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceHotelCode) {
		return nil, false
	}
	return o.SourceHotelCode, true
}

// HasSourceHotelCode returns a boolean if a field has been set.
func (o *CopyFunctionSpaceType) HasSourceHotelCode() bool {
	if o != nil && !IsNil(o.SourceHotelCode) {
		return true
	}

	return false
}

// SetSourceHotelCode gets a reference to the given string and assigns it to the SourceHotelCode field.
func (o *CopyFunctionSpaceType) SetSourceHotelCode(v string) {
	o.SourceHotelCode = &v
}

// GetSourceRoomNumber returns the SourceRoomNumber field value if set, zero value otherwise.
func (o *CopyFunctionSpaceType) GetSourceRoomNumber() string {
	if o == nil || IsNil(o.SourceRoomNumber) {
		var ret string
		return ret
	}
	return *o.SourceRoomNumber
}

// GetSourceRoomNumberOk returns a tuple with the SourceRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyFunctionSpaceType) GetSourceRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SourceRoomNumber) {
		return nil, false
	}
	return o.SourceRoomNumber, true
}

// HasSourceRoomNumber returns a boolean if a field has been set.
func (o *CopyFunctionSpaceType) HasSourceRoomNumber() bool {
	if o != nil && !IsNil(o.SourceRoomNumber) {
		return true
	}

	return false
}

// SetSourceRoomNumber gets a reference to the given string and assigns it to the SourceRoomNumber field.
func (o *CopyFunctionSpaceType) SetSourceRoomNumber(v string) {
	o.SourceRoomNumber = &v
}

func (o CopyFunctionSpaceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyFunctionSpaceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetFunctionSpace) {
		toSerialize["targetFunctionSpace"] = o.TargetFunctionSpace
	}
	if !IsNil(o.SourceHotelCode) {
		toSerialize["sourceHotelCode"] = o.SourceHotelCode
	}
	if !IsNil(o.SourceRoomNumber) {
		toSerialize["sourceRoomNumber"] = o.SourceRoomNumber
	}
	return toSerialize, nil
}

type NullableCopyFunctionSpaceType struct {
	value *CopyFunctionSpaceType
	isSet bool
}

func (v NullableCopyFunctionSpaceType) Get() *CopyFunctionSpaceType {
	return v.value
}

func (v *NullableCopyFunctionSpaceType) Set(val *CopyFunctionSpaceType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyFunctionSpaceType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyFunctionSpaceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyFunctionSpaceType(val *CopyFunctionSpaceType) *NullableCopyFunctionSpaceType {
	return &NullableCopyFunctionSpaceType{value: val, isSet: true}
}

func (v NullableCopyFunctionSpaceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyFunctionSpaceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


