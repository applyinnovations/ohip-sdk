/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the ItemVendorType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ItemVendorType{}

// ItemVendorType Details of the Item Vendor.
type ItemVendorType struct {
	ProfileId *ProfileId `json:"profileId,omitempty"`
	// The Name of the vendor.
	Name *string `json:"name,omitempty"`
	// Lead time for ordering.
	LeadTime *string `json:"leadTime,omitempty"`
	Price *CurrencyAmountType `json:"price,omitempty"`
	// The Priority of the Vendor.
	Priority *float32 `json:"priority,omitempty"`
	// The phone number of the Vendor.
	Phone *string `json:"phone,omitempty"`
	// The fax number of the Vendor.
	Fax *string `json:"fax,omitempty"`
	// The email address of the Vendor.
	Email *string `json:"email,omitempty"`
}

// NewItemVendorType instantiates a new ItemVendorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemVendorType() *ItemVendorType {
	this := ItemVendorType{}
	return &this
}

// NewItemVendorTypeWithDefaults instantiates a new ItemVendorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemVendorTypeWithDefaults() *ItemVendorType {
	this := ItemVendorType{}
	return &this
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ItemVendorType) GetProfileId() ProfileId {
	if o == nil || IsNil(o.ProfileId) {
		var ret ProfileId
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetProfileIdOk() (*ProfileId, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ItemVendorType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given ProfileId and assigns it to the ProfileId field.
func (o *ItemVendorType) SetProfileId(v ProfileId) {
	o.ProfileId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ItemVendorType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ItemVendorType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ItemVendorType) SetName(v string) {
	o.Name = &v
}

// GetLeadTime returns the LeadTime field value if set, zero value otherwise.
func (o *ItemVendorType) GetLeadTime() string {
	if o == nil || IsNil(o.LeadTime) {
		var ret string
		return ret
	}
	return *o.LeadTime
}

// GetLeadTimeOk returns a tuple with the LeadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetLeadTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LeadTime) {
		return nil, false
	}
	return o.LeadTime, true
}

// HasLeadTime returns a boolean if a field has been set.
func (o *ItemVendorType) HasLeadTime() bool {
	if o != nil && !IsNil(o.LeadTime) {
		return true
	}

	return false
}

// SetLeadTime gets a reference to the given string and assigns it to the LeadTime field.
func (o *ItemVendorType) SetLeadTime(v string) {
	o.LeadTime = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ItemVendorType) GetPrice() CurrencyAmountType {
	if o == nil || IsNil(o.Price) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetPriceOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ItemVendorType) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given CurrencyAmountType and assigns it to the Price field.
func (o *ItemVendorType) SetPrice(v CurrencyAmountType) {
	o.Price = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ItemVendorType) GetPriority() float32 {
	if o == nil || IsNil(o.Priority) {
		var ret float32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetPriorityOk() (*float32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ItemVendorType) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given float32 and assigns it to the Priority field.
func (o *ItemVendorType) SetPriority(v float32) {
	o.Priority = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *ItemVendorType) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *ItemVendorType) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *ItemVendorType) SetPhone(v string) {
	o.Phone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *ItemVendorType) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *ItemVendorType) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *ItemVendorType) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ItemVendorType) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemVendorType) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ItemVendorType) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ItemVendorType) SetEmail(v string) {
	o.Email = &v
}

func (o ItemVendorType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ItemVendorType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LeadTime) {
		toSerialize["leadTime"] = o.LeadTime
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableItemVendorType struct {
	value *ItemVendorType
	isSet bool
}

func (v NullableItemVendorType) Get() *ItemVendorType {
	return v.value
}

func (v *NullableItemVendorType) Set(val *ItemVendorType) {
	v.value = val
	v.isSet = true
}

func (v NullableItemVendorType) IsSet() bool {
	return v.isSet
}

func (v *NullableItemVendorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemVendorType(val *ItemVendorType) *NullableItemVendorType {
	return &NullableItemVendorType{value: val, isSet: true}
}

func (v NullableItemVendorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemVendorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


