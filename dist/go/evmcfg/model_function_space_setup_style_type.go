/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the FunctionSpaceSetupStyleType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionSpaceSetupStyleType{}

// FunctionSpaceSetupStyleType Type for the function space setup style ID
type FunctionSpaceSetupStyleType struct {
	// Setup style code id .
	CodeId *float32 `json:"codeId,omitempty"`
	// Function Space Setup Style Code.
	Code *string `json:"code,omitempty"`
	TranslatableDescription *TranslationTextType200 `json:"translatableDescription,omitempty"`
	// Description of the Function Space Setup Style.
	DisplaySequence *int32 `json:"displaySequence,omitempty"`
	// Display in Directory True or False.
	Directory *bool `json:"directory,omitempty"`
	// Bookmarkable via Website True or False.
	WebBooking *bool `json:"webBooking,omitempty"`
	// Setup Time for web bookings.
	WebSetup *int32 `json:"webSetup,omitempty"`
	// Setdown Time for web bookings.
	WebSetdown *int32 `json:"webSetdown,omitempty"`
	// Indicates if the Setup Style is active.
	Inactive *bool `json:"inactive,omitempty"`
}

// NewFunctionSpaceSetupStyleType instantiates a new FunctionSpaceSetupStyleType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionSpaceSetupStyleType() *FunctionSpaceSetupStyleType {
	this := FunctionSpaceSetupStyleType{}
	return &this
}

// NewFunctionSpaceSetupStyleTypeWithDefaults instantiates a new FunctionSpaceSetupStyleType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionSpaceSetupStyleTypeWithDefaults() *FunctionSpaceSetupStyleType {
	this := FunctionSpaceSetupStyleType{}
	return &this
}

// GetCodeId returns the CodeId field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetCodeId() float32 {
	if o == nil || IsNil(o.CodeId) {
		var ret float32
		return ret
	}
	return *o.CodeId
}

// GetCodeIdOk returns a tuple with the CodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetCodeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.CodeId) {
		return nil, false
	}
	return o.CodeId, true
}

// HasCodeId returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasCodeId() bool {
	if o != nil && !IsNil(o.CodeId) {
		return true
	}

	return false
}

// SetCodeId gets a reference to the given float32 and assigns it to the CodeId field.
func (o *FunctionSpaceSetupStyleType) SetCodeId(v float32) {
	o.CodeId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FunctionSpaceSetupStyleType) SetCode(v string) {
	o.Code = &v
}

// GetTranslatableDescription returns the TranslatableDescription field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetTranslatableDescription() TranslationTextType200 {
	if o == nil || IsNil(o.TranslatableDescription) {
		var ret TranslationTextType200
		return ret
	}
	return *o.TranslatableDescription
}

// GetTranslatableDescriptionOk returns a tuple with the TranslatableDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetTranslatableDescriptionOk() (*TranslationTextType200, bool) {
	if o == nil || IsNil(o.TranslatableDescription) {
		return nil, false
	}
	return o.TranslatableDescription, true
}

// HasTranslatableDescription returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasTranslatableDescription() bool {
	if o != nil && !IsNil(o.TranslatableDescription) {
		return true
	}

	return false
}

// SetTranslatableDescription gets a reference to the given TranslationTextType200 and assigns it to the TranslatableDescription field.
func (o *FunctionSpaceSetupStyleType) SetTranslatableDescription(v TranslationTextType200) {
	o.TranslatableDescription = &v
}

// GetDisplaySequence returns the DisplaySequence field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetDisplaySequence() int32 {
	if o == nil || IsNil(o.DisplaySequence) {
		var ret int32
		return ret
	}
	return *o.DisplaySequence
}

// GetDisplaySequenceOk returns a tuple with the DisplaySequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetDisplaySequenceOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplaySequence) {
		return nil, false
	}
	return o.DisplaySequence, true
}

// HasDisplaySequence returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasDisplaySequence() bool {
	if o != nil && !IsNil(o.DisplaySequence) {
		return true
	}

	return false
}

// SetDisplaySequence gets a reference to the given int32 and assigns it to the DisplaySequence field.
func (o *FunctionSpaceSetupStyleType) SetDisplaySequence(v int32) {
	o.DisplaySequence = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetDirectory() bool {
	if o == nil || IsNil(o.Directory) {
		var ret bool
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetDirectoryOk() (*bool, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given bool and assigns it to the Directory field.
func (o *FunctionSpaceSetupStyleType) SetDirectory(v bool) {
	o.Directory = &v
}

// GetWebBooking returns the WebBooking field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetWebBooking() bool {
	if o == nil || IsNil(o.WebBooking) {
		var ret bool
		return ret
	}
	return *o.WebBooking
}

// GetWebBookingOk returns a tuple with the WebBooking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetWebBookingOk() (*bool, bool) {
	if o == nil || IsNil(o.WebBooking) {
		return nil, false
	}
	return o.WebBooking, true
}

// HasWebBooking returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasWebBooking() bool {
	if o != nil && !IsNil(o.WebBooking) {
		return true
	}

	return false
}

// SetWebBooking gets a reference to the given bool and assigns it to the WebBooking field.
func (o *FunctionSpaceSetupStyleType) SetWebBooking(v bool) {
	o.WebBooking = &v
}

// GetWebSetup returns the WebSetup field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetWebSetup() int32 {
	if o == nil || IsNil(o.WebSetup) {
		var ret int32
		return ret
	}
	return *o.WebSetup
}

// GetWebSetupOk returns a tuple with the WebSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetWebSetupOk() (*int32, bool) {
	if o == nil || IsNil(o.WebSetup) {
		return nil, false
	}
	return o.WebSetup, true
}

// HasWebSetup returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasWebSetup() bool {
	if o != nil && !IsNil(o.WebSetup) {
		return true
	}

	return false
}

// SetWebSetup gets a reference to the given int32 and assigns it to the WebSetup field.
func (o *FunctionSpaceSetupStyleType) SetWebSetup(v int32) {
	o.WebSetup = &v
}

// GetWebSetdown returns the WebSetdown field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetWebSetdown() int32 {
	if o == nil || IsNil(o.WebSetdown) {
		var ret int32
		return ret
	}
	return *o.WebSetdown
}

// GetWebSetdownOk returns a tuple with the WebSetdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetWebSetdownOk() (*int32, bool) {
	if o == nil || IsNil(o.WebSetdown) {
		return nil, false
	}
	return o.WebSetdown, true
}

// HasWebSetdown returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasWebSetdown() bool {
	if o != nil && !IsNil(o.WebSetdown) {
		return true
	}

	return false
}

// SetWebSetdown gets a reference to the given int32 and assigns it to the WebSetdown field.
func (o *FunctionSpaceSetupStyleType) SetWebSetdown(v int32) {
	o.WebSetdown = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *FunctionSpaceSetupStyleType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionSpaceSetupStyleType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *FunctionSpaceSetupStyleType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *FunctionSpaceSetupStyleType) SetInactive(v bool) {
	o.Inactive = &v
}

func (o FunctionSpaceSetupStyleType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionSpaceSetupStyleType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CodeId) {
		toSerialize["codeId"] = o.CodeId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.TranslatableDescription) {
		toSerialize["translatableDescription"] = o.TranslatableDescription
	}
	if !IsNil(o.DisplaySequence) {
		toSerialize["displaySequence"] = o.DisplaySequence
	}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.WebBooking) {
		toSerialize["webBooking"] = o.WebBooking
	}
	if !IsNil(o.WebSetup) {
		toSerialize["webSetup"] = o.WebSetup
	}
	if !IsNil(o.WebSetdown) {
		toSerialize["webSetdown"] = o.WebSetdown
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	return toSerialize, nil
}

type NullableFunctionSpaceSetupStyleType struct {
	value *FunctionSpaceSetupStyleType
	isSet bool
}

func (v NullableFunctionSpaceSetupStyleType) Get() *FunctionSpaceSetupStyleType {
	return v.value
}

func (v *NullableFunctionSpaceSetupStyleType) Set(val *FunctionSpaceSetupStyleType) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionSpaceSetupStyleType) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionSpaceSetupStyleType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionSpaceSetupStyleType(val *FunctionSpaceSetupStyleType) *NullableFunctionSpaceSetupStyleType {
	return &NullableFunctionSpaceSetupStyleType{value: val, isSet: true}
}

func (v NullableFunctionSpaceSetupStyleType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionSpaceSetupStyleType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


