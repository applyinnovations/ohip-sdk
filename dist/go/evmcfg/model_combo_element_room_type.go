/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the ComboElementRoomType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComboElementRoomType{}

// ComboElementRoomType Details of each combo element room.
type ComboElementRoomType struct {
	// Configured code of the room.
	RoomCode *string `json:"roomCode,omitempty"`
	RoomDescription *TranslationTextType2000 `json:"roomDescription,omitempty"`
	// Percentage occupied by the room.
	RoomProportion *float32 `json:"roomProportion,omitempty"`
	// Configured size of the room.
	RoomSize *float32 `json:"roomSize,omitempty"`
}

// NewComboElementRoomType instantiates a new ComboElementRoomType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComboElementRoomType() *ComboElementRoomType {
	this := ComboElementRoomType{}
	return &this
}

// NewComboElementRoomTypeWithDefaults instantiates a new ComboElementRoomType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComboElementRoomTypeWithDefaults() *ComboElementRoomType {
	this := ComboElementRoomType{}
	return &this
}

// GetRoomCode returns the RoomCode field value if set, zero value otherwise.
func (o *ComboElementRoomType) GetRoomCode() string {
	if o == nil || IsNil(o.RoomCode) {
		var ret string
		return ret
	}
	return *o.RoomCode
}

// GetRoomCodeOk returns a tuple with the RoomCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComboElementRoomType) GetRoomCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomCode) {
		return nil, false
	}
	return o.RoomCode, true
}

// HasRoomCode returns a boolean if a field has been set.
func (o *ComboElementRoomType) HasRoomCode() bool {
	if o != nil && !IsNil(o.RoomCode) {
		return true
	}

	return false
}

// SetRoomCode gets a reference to the given string and assigns it to the RoomCode field.
func (o *ComboElementRoomType) SetRoomCode(v string) {
	o.RoomCode = &v
}

// GetRoomDescription returns the RoomDescription field value if set, zero value otherwise.
func (o *ComboElementRoomType) GetRoomDescription() TranslationTextType2000 {
	if o == nil || IsNil(o.RoomDescription) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.RoomDescription
}

// GetRoomDescriptionOk returns a tuple with the RoomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComboElementRoomType) GetRoomDescriptionOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.RoomDescription) {
		return nil, false
	}
	return o.RoomDescription, true
}

// HasRoomDescription returns a boolean if a field has been set.
func (o *ComboElementRoomType) HasRoomDescription() bool {
	if o != nil && !IsNil(o.RoomDescription) {
		return true
	}

	return false
}

// SetRoomDescription gets a reference to the given TranslationTextType2000 and assigns it to the RoomDescription field.
func (o *ComboElementRoomType) SetRoomDescription(v TranslationTextType2000) {
	o.RoomDescription = &v
}

// GetRoomProportion returns the RoomProportion field value if set, zero value otherwise.
func (o *ComboElementRoomType) GetRoomProportion() float32 {
	if o == nil || IsNil(o.RoomProportion) {
		var ret float32
		return ret
	}
	return *o.RoomProportion
}

// GetRoomProportionOk returns a tuple with the RoomProportion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComboElementRoomType) GetRoomProportionOk() (*float32, bool) {
	if o == nil || IsNil(o.RoomProportion) {
		return nil, false
	}
	return o.RoomProportion, true
}

// HasRoomProportion returns a boolean if a field has been set.
func (o *ComboElementRoomType) HasRoomProportion() bool {
	if o != nil && !IsNil(o.RoomProportion) {
		return true
	}

	return false
}

// SetRoomProportion gets a reference to the given float32 and assigns it to the RoomProportion field.
func (o *ComboElementRoomType) SetRoomProportion(v float32) {
	o.RoomProportion = &v
}

// GetRoomSize returns the RoomSize field value if set, zero value otherwise.
func (o *ComboElementRoomType) GetRoomSize() float32 {
	if o == nil || IsNil(o.RoomSize) {
		var ret float32
		return ret
	}
	return *o.RoomSize
}

// GetRoomSizeOk returns a tuple with the RoomSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComboElementRoomType) GetRoomSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.RoomSize) {
		return nil, false
	}
	return o.RoomSize, true
}

// HasRoomSize returns a boolean if a field has been set.
func (o *ComboElementRoomType) HasRoomSize() bool {
	if o != nil && !IsNil(o.RoomSize) {
		return true
	}

	return false
}

// SetRoomSize gets a reference to the given float32 and assigns it to the RoomSize field.
func (o *ComboElementRoomType) SetRoomSize(v float32) {
	o.RoomSize = &v
}

func (o ComboElementRoomType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComboElementRoomType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomCode) {
		toSerialize["roomCode"] = o.RoomCode
	}
	if !IsNil(o.RoomDescription) {
		toSerialize["roomDescription"] = o.RoomDescription
	}
	if !IsNil(o.RoomProportion) {
		toSerialize["roomProportion"] = o.RoomProportion
	}
	if !IsNil(o.RoomSize) {
		toSerialize["roomSize"] = o.RoomSize
	}
	return toSerialize, nil
}

type NullableComboElementRoomType struct {
	value *ComboElementRoomType
	isSet bool
}

func (v NullableComboElementRoomType) Get() *ComboElementRoomType {
	return v.value
}

func (v *NullableComboElementRoomType) Set(val *ComboElementRoomType) {
	v.value = val
	v.isSet = true
}

func (v NullableComboElementRoomType) IsSet() bool {
	return v.isSet
}

func (v *NullableComboElementRoomType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComboElementRoomType(val *ComboElementRoomType) *NullableComboElementRoomType {
	return &NullableComboElementRoomType{value: val, isSet: true}
}

func (v NullableComboElementRoomType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComboElementRoomType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


