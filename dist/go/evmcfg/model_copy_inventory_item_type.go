/*
OPERA Cloud Event Configuration API

This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evmcfg

import (
	"encoding/json"
)

// checks if the CopyInventoryItemType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyInventoryItemType{}

// CopyInventoryItemType The type describes Inventory Item Details being copied.
type CopyInventoryItemType struct {
	CopyAs *CodeDescriptionType `json:"copyAs,omitempty"`
	// Hotel code to which item code will be copied.
	HotelId *string `json:"hotelId,omitempty"`
	// Item code being copied.
	ItemCode *string `json:"itemCode,omitempty"`
}

// NewCopyInventoryItemType instantiates a new CopyInventoryItemType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyInventoryItemType() *CopyInventoryItemType {
	this := CopyInventoryItemType{}
	return &this
}

// NewCopyInventoryItemTypeWithDefaults instantiates a new CopyInventoryItemType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyInventoryItemTypeWithDefaults() *CopyInventoryItemType {
	this := CopyInventoryItemType{}
	return &this
}

// GetCopyAs returns the CopyAs field value if set, zero value otherwise.
func (o *CopyInventoryItemType) GetCopyAs() CodeDescriptionType {
	if o == nil || IsNil(o.CopyAs) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.CopyAs
}

// GetCopyAsOk returns a tuple with the CopyAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyInventoryItemType) GetCopyAsOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.CopyAs) {
		return nil, false
	}
	return o.CopyAs, true
}

// HasCopyAs returns a boolean if a field has been set.
func (o *CopyInventoryItemType) HasCopyAs() bool {
	if o != nil && !IsNil(o.CopyAs) {
		return true
	}

	return false
}

// SetCopyAs gets a reference to the given CodeDescriptionType and assigns it to the CopyAs field.
func (o *CopyInventoryItemType) SetCopyAs(v CodeDescriptionType) {
	o.CopyAs = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CopyInventoryItemType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyInventoryItemType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CopyInventoryItemType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CopyInventoryItemType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetItemCode returns the ItemCode field value if set, zero value otherwise.
func (o *CopyInventoryItemType) GetItemCode() string {
	if o == nil || IsNil(o.ItemCode) {
		var ret string
		return ret
	}
	return *o.ItemCode
}

// GetItemCodeOk returns a tuple with the ItemCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyInventoryItemType) GetItemCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ItemCode) {
		return nil, false
	}
	return o.ItemCode, true
}

// HasItemCode returns a boolean if a field has been set.
func (o *CopyInventoryItemType) HasItemCode() bool {
	if o != nil && !IsNil(o.ItemCode) {
		return true
	}

	return false
}

// SetItemCode gets a reference to the given string and assigns it to the ItemCode field.
func (o *CopyInventoryItemType) SetItemCode(v string) {
	o.ItemCode = &v
}

func (o CopyInventoryItemType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyInventoryItemType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyAs) {
		toSerialize["copyAs"] = o.CopyAs
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ItemCode) {
		toSerialize["itemCode"] = o.ItemCode
	}
	return toSerialize, nil
}

type NullableCopyInventoryItemType struct {
	value *CopyInventoryItemType
	isSet bool
}

func (v NullableCopyInventoryItemType) Get() *CopyInventoryItemType {
	return v.value
}

func (v *NullableCopyInventoryItemType) Set(val *CopyInventoryItemType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyInventoryItemType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyInventoryItemType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyInventoryItemType(val *CopyInventoryItemType) *NullableCopyInventoryItemType {
	return &NullableCopyInventoryItemType{value: val, isSet: true}
}

func (v NullableCopyInventoryItemType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyInventoryItemType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


