/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the CopyActivityConfigCriteriaType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyActivityConfigCriteriaType{}

// CopyActivityConfigCriteriaType Criteria to copy multiple Activity Types from one Hotel to another Hotel.
type CopyActivityConfigCriteriaType struct {
	CopyActivityConfig *CopyActivityConfigCriteriaTypeCopyActivityConfig `json:"copyActivityConfig,omitempty"`
}

// NewCopyActivityConfigCriteriaType instantiates a new CopyActivityConfigCriteriaType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyActivityConfigCriteriaType() *CopyActivityConfigCriteriaType {
	this := CopyActivityConfigCriteriaType{}
	return &this
}

// NewCopyActivityConfigCriteriaTypeWithDefaults instantiates a new CopyActivityConfigCriteriaType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyActivityConfigCriteriaTypeWithDefaults() *CopyActivityConfigCriteriaType {
	this := CopyActivityConfigCriteriaType{}
	return &this
}

// GetCopyActivityConfig returns the CopyActivityConfig field value if set, zero value otherwise.
func (o *CopyActivityConfigCriteriaType) GetCopyActivityConfig() CopyActivityConfigCriteriaTypeCopyActivityConfig {
	if o == nil || IsNil(o.CopyActivityConfig) {
		var ret CopyActivityConfigCriteriaTypeCopyActivityConfig
		return ret
	}
	return *o.CopyActivityConfig
}

// GetCopyActivityConfigOk returns a tuple with the CopyActivityConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyActivityConfigCriteriaType) GetCopyActivityConfigOk() (*CopyActivityConfigCriteriaTypeCopyActivityConfig, bool) {
	if o == nil || IsNil(o.CopyActivityConfig) {
		return nil, false
	}
	return o.CopyActivityConfig, true
}

// HasCopyActivityConfig returns a boolean if a field has been set.
func (o *CopyActivityConfigCriteriaType) HasCopyActivityConfig() bool {
	if o != nil && !IsNil(o.CopyActivityConfig) {
		return true
	}

	return false
}

// SetCopyActivityConfig gets a reference to the given CopyActivityConfigCriteriaTypeCopyActivityConfig and assigns it to the CopyActivityConfig field.
func (o *CopyActivityConfigCriteriaType) SetCopyActivityConfig(v CopyActivityConfigCriteriaTypeCopyActivityConfig) {
	o.CopyActivityConfig = &v
}

func (o CopyActivityConfigCriteriaType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyActivityConfigCriteriaType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyActivityConfig) {
		toSerialize["copyActivityConfig"] = o.CopyActivityConfig
	}
	return toSerialize, nil
}

type NullableCopyActivityConfigCriteriaType struct {
	value *CopyActivityConfigCriteriaType
	isSet bool
}

func (v NullableCopyActivityConfigCriteriaType) Get() *CopyActivityConfigCriteriaType {
	return v.value
}

func (v *NullableCopyActivityConfigCriteriaType) Set(val *CopyActivityConfigCriteriaType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyActivityConfigCriteriaType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyActivityConfigCriteriaType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyActivityConfigCriteriaType(val *CopyActivityConfigCriteriaType) *NullableCopyActivityConfigCriteriaType {
	return &NullableCopyActivityConfigCriteriaType{value: val, isSet: true}
}

func (v NullableCopyActivityConfigCriteriaType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyActivityConfigCriteriaType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


