/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the AutoTraceOwnerAssignmentType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTraceOwnerAssignmentType{}

// AutoTraceOwnerAssignmentType Trace owner assignment detail information.
type AutoTraceOwnerAssignmentType struct {
	AutoTraceOwnerAssignmentId *UniqueIDType `json:"autoTraceOwnerAssignmentId,omitempty"`
	// The hotel code where trace owner assignments are created.
	HotelId *string `json:"hotelId,omitempty"`
	// Owner code of trace owner assignment.
	OwnerCode *string `json:"ownerCode,omitempty"`
	// Owner name of trace owner assignment.
	OwnerName *string `json:"ownerName,omitempty"`
	// Trace Owner code of trace owner assignment.
	TraceOwnerCode *string `json:"traceOwnerCode,omitempty"`
	// Trace Owner name of trace owner assignment.
	TraceOwnerName *string `json:"traceOwnerName,omitempty"`
}

// NewAutoTraceOwnerAssignmentType instantiates a new AutoTraceOwnerAssignmentType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTraceOwnerAssignmentType() *AutoTraceOwnerAssignmentType {
	this := AutoTraceOwnerAssignmentType{}
	return &this
}

// NewAutoTraceOwnerAssignmentTypeWithDefaults instantiates a new AutoTraceOwnerAssignmentType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTraceOwnerAssignmentTypeWithDefaults() *AutoTraceOwnerAssignmentType {
	this := AutoTraceOwnerAssignmentType{}
	return &this
}

// GetAutoTraceOwnerAssignmentId returns the AutoTraceOwnerAssignmentId field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetAutoTraceOwnerAssignmentId() UniqueIDType {
	if o == nil || IsNil(o.AutoTraceOwnerAssignmentId) {
		var ret UniqueIDType
		return ret
	}
	return *o.AutoTraceOwnerAssignmentId
}

// GetAutoTraceOwnerAssignmentIdOk returns a tuple with the AutoTraceOwnerAssignmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetAutoTraceOwnerAssignmentIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.AutoTraceOwnerAssignmentId) {
		return nil, false
	}
	return o.AutoTraceOwnerAssignmentId, true
}

// HasAutoTraceOwnerAssignmentId returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasAutoTraceOwnerAssignmentId() bool {
	if o != nil && !IsNil(o.AutoTraceOwnerAssignmentId) {
		return true
	}

	return false
}

// SetAutoTraceOwnerAssignmentId gets a reference to the given UniqueIDType and assigns it to the AutoTraceOwnerAssignmentId field.
func (o *AutoTraceOwnerAssignmentType) SetAutoTraceOwnerAssignmentId(v UniqueIDType) {
	o.AutoTraceOwnerAssignmentId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *AutoTraceOwnerAssignmentType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetOwnerCode returns the OwnerCode field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetOwnerCode() string {
	if o == nil || IsNil(o.OwnerCode) {
		var ret string
		return ret
	}
	return *o.OwnerCode
}

// GetOwnerCodeOk returns a tuple with the OwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerCode) {
		return nil, false
	}
	return o.OwnerCode, true
}

// HasOwnerCode returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasOwnerCode() bool {
	if o != nil && !IsNil(o.OwnerCode) {
		return true
	}

	return false
}

// SetOwnerCode gets a reference to the given string and assigns it to the OwnerCode field.
func (o *AutoTraceOwnerAssignmentType) SetOwnerCode(v string) {
	o.OwnerCode = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *AutoTraceOwnerAssignmentType) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetTraceOwnerCode returns the TraceOwnerCode field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetTraceOwnerCode() string {
	if o == nil || IsNil(o.TraceOwnerCode) {
		var ret string
		return ret
	}
	return *o.TraceOwnerCode
}

// GetTraceOwnerCodeOk returns a tuple with the TraceOwnerCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetTraceOwnerCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TraceOwnerCode) {
		return nil, false
	}
	return o.TraceOwnerCode, true
}

// HasTraceOwnerCode returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasTraceOwnerCode() bool {
	if o != nil && !IsNil(o.TraceOwnerCode) {
		return true
	}

	return false
}

// SetTraceOwnerCode gets a reference to the given string and assigns it to the TraceOwnerCode field.
func (o *AutoTraceOwnerAssignmentType) SetTraceOwnerCode(v string) {
	o.TraceOwnerCode = &v
}

// GetTraceOwnerName returns the TraceOwnerName field value if set, zero value otherwise.
func (o *AutoTraceOwnerAssignmentType) GetTraceOwnerName() string {
	if o == nil || IsNil(o.TraceOwnerName) {
		var ret string
		return ret
	}
	return *o.TraceOwnerName
}

// GetTraceOwnerNameOk returns a tuple with the TraceOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceOwnerAssignmentType) GetTraceOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.TraceOwnerName) {
		return nil, false
	}
	return o.TraceOwnerName, true
}

// HasTraceOwnerName returns a boolean if a field has been set.
func (o *AutoTraceOwnerAssignmentType) HasTraceOwnerName() bool {
	if o != nil && !IsNil(o.TraceOwnerName) {
		return true
	}

	return false
}

// SetTraceOwnerName gets a reference to the given string and assigns it to the TraceOwnerName field.
func (o *AutoTraceOwnerAssignmentType) SetTraceOwnerName(v string) {
	o.TraceOwnerName = &v
}

func (o AutoTraceOwnerAssignmentType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTraceOwnerAssignmentType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoTraceOwnerAssignmentId) {
		toSerialize["autoTraceOwnerAssignmentId"] = o.AutoTraceOwnerAssignmentId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.OwnerCode) {
		toSerialize["ownerCode"] = o.OwnerCode
	}
	if !IsNil(o.OwnerName) {
		toSerialize["ownerName"] = o.OwnerName
	}
	if !IsNil(o.TraceOwnerCode) {
		toSerialize["traceOwnerCode"] = o.TraceOwnerCode
	}
	if !IsNil(o.TraceOwnerName) {
		toSerialize["traceOwnerName"] = o.TraceOwnerName
	}
	return toSerialize, nil
}

type NullableAutoTraceOwnerAssignmentType struct {
	value *AutoTraceOwnerAssignmentType
	isSet bool
}

func (v NullableAutoTraceOwnerAssignmentType) Get() *AutoTraceOwnerAssignmentType {
	return v.value
}

func (v *NullableAutoTraceOwnerAssignmentType) Set(val *AutoTraceOwnerAssignmentType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTraceOwnerAssignmentType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTraceOwnerAssignmentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTraceOwnerAssignmentType(val *AutoTraceOwnerAssignmentType) *NullableAutoTraceOwnerAssignmentType {
	return &NullableAutoTraceOwnerAssignmentType{value: val, isSet: true}
}

func (v NullableAutoTraceOwnerAssignmentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTraceOwnerAssignmentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


