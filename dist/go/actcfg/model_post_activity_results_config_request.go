/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the PostActivityResultsConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostActivityResultsConfigRequest{}

// PostActivityResultsConfigRequest struct for PostActivityResultsConfigRequest
type PostActivityResultsConfigRequest struct {
	// List of configured Activity Results.
	ActivityResultsConfiguration []ActivityResultsConfigDetailType `json:"activityResultsConfiguration,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewPostActivityResultsConfigRequest instantiates a new PostActivityResultsConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostActivityResultsConfigRequest() *PostActivityResultsConfigRequest {
	this := PostActivityResultsConfigRequest{}
	return &this
}

// NewPostActivityResultsConfigRequestWithDefaults instantiates a new PostActivityResultsConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostActivityResultsConfigRequestWithDefaults() *PostActivityResultsConfigRequest {
	this := PostActivityResultsConfigRequest{}
	return &this
}

// GetActivityResultsConfiguration returns the ActivityResultsConfiguration field value if set, zero value otherwise.
func (o *PostActivityResultsConfigRequest) GetActivityResultsConfiguration() []ActivityResultsConfigDetailType {
	if o == nil || IsNil(o.ActivityResultsConfiguration) {
		var ret []ActivityResultsConfigDetailType
		return ret
	}
	return o.ActivityResultsConfiguration
}

// GetActivityResultsConfigurationOk returns a tuple with the ActivityResultsConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostActivityResultsConfigRequest) GetActivityResultsConfigurationOk() ([]ActivityResultsConfigDetailType, bool) {
	if o == nil || IsNil(o.ActivityResultsConfiguration) {
		return nil, false
	}
	return o.ActivityResultsConfiguration, true
}

// HasActivityResultsConfiguration returns a boolean if a field has been set.
func (o *PostActivityResultsConfigRequest) HasActivityResultsConfiguration() bool {
	if o != nil && !IsNil(o.ActivityResultsConfiguration) {
		return true
	}

	return false
}

// SetActivityResultsConfiguration gets a reference to the given []ActivityResultsConfigDetailType and assigns it to the ActivityResultsConfiguration field.
func (o *PostActivityResultsConfigRequest) SetActivityResultsConfiguration(v []ActivityResultsConfigDetailType) {
	o.ActivityResultsConfiguration = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostActivityResultsConfigRequest) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostActivityResultsConfigRequest) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostActivityResultsConfigRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *PostActivityResultsConfigRequest) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o PostActivityResultsConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostActivityResultsConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityResultsConfiguration) {
		toSerialize["activityResultsConfiguration"] = o.ActivityResultsConfiguration
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostActivityResultsConfigRequest struct {
	value *PostActivityResultsConfigRequest
	isSet bool
}

func (v NullablePostActivityResultsConfigRequest) Get() *PostActivityResultsConfigRequest {
	return v.value
}

func (v *NullablePostActivityResultsConfigRequest) Set(val *PostActivityResultsConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostActivityResultsConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostActivityResultsConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostActivityResultsConfigRequest(val *PostActivityResultsConfigRequest) *NullablePostActivityResultsConfigRequest {
	return &NullablePostActivityResultsConfigRequest{value: val, isSet: true}
}

func (v NullablePostActivityResultsConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostActivityResultsConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


