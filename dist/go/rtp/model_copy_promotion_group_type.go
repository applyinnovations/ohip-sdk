/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the CopyPromotionGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyPromotionGroupType{}

// CopyPromotionGroupType The type describes Promotion Groups Details being copied.
type CopyPromotionGroupType struct {
	// Promotion Group being copied.
	PromotionGroup *string `json:"promotionGroup,omitempty"`
	// The details of Promotion Groups targets, where it is being copied and with what name.
	Targets []CopyPromotionGroupTypeTargetsInner `json:"targets,omitempty"`
}

// NewCopyPromotionGroupType instantiates a new CopyPromotionGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyPromotionGroupType() *CopyPromotionGroupType {
	this := CopyPromotionGroupType{}
	return &this
}

// NewCopyPromotionGroupTypeWithDefaults instantiates a new CopyPromotionGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyPromotionGroupTypeWithDefaults() *CopyPromotionGroupType {
	this := CopyPromotionGroupType{}
	return &this
}

// GetPromotionGroup returns the PromotionGroup field value if set, zero value otherwise.
func (o *CopyPromotionGroupType) GetPromotionGroup() string {
	if o == nil || IsNil(o.PromotionGroup) {
		var ret string
		return ret
	}
	return *o.PromotionGroup
}

// GetPromotionGroupOk returns a tuple with the PromotionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyPromotionGroupType) GetPromotionGroupOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionGroup) {
		return nil, false
	}
	return o.PromotionGroup, true
}

// HasPromotionGroup returns a boolean if a field has been set.
func (o *CopyPromotionGroupType) HasPromotionGroup() bool {
	if o != nil && !IsNil(o.PromotionGroup) {
		return true
	}

	return false
}

// SetPromotionGroup gets a reference to the given string and assigns it to the PromotionGroup field.
func (o *CopyPromotionGroupType) SetPromotionGroup(v string) {
	o.PromotionGroup = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *CopyPromotionGroupType) GetTargets() []CopyPromotionGroupTypeTargetsInner {
	if o == nil || IsNil(o.Targets) {
		var ret []CopyPromotionGroupTypeTargetsInner
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyPromotionGroupType) GetTargetsOk() ([]CopyPromotionGroupTypeTargetsInner, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *CopyPromotionGroupType) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []CopyPromotionGroupTypeTargetsInner and assigns it to the Targets field.
func (o *CopyPromotionGroupType) SetTargets(v []CopyPromotionGroupTypeTargetsInner) {
	o.Targets = v
}

func (o CopyPromotionGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyPromotionGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PromotionGroup) {
		toSerialize["promotionGroup"] = o.PromotionGroup
	}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	return toSerialize, nil
}

type NullableCopyPromotionGroupType struct {
	value *CopyPromotionGroupType
	isSet bool
}

func (v NullableCopyPromotionGroupType) Get() *CopyPromotionGroupType {
	return v.value
}

func (v *NullableCopyPromotionGroupType) Set(val *CopyPromotionGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyPromotionGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyPromotionGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyPromotionGroupType(val *CopyPromotionGroupType) *NullableCopyPromotionGroupType {
	return &NullableCopyPromotionGroupType{value: val, isSet: true}
}

func (v NullableCopyPromotionGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyPromotionGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


