/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the PropertyPromotionCodeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PropertyPromotionCodeType{}

// PropertyPromotionCodeType A template promotion.
type PropertyPromotionCodeType struct {
	// Hotel code the property promotion code belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	PromoCodeRoutingInstruction *PromoCodeRoutingInstructionType `json:"promoCodeRoutingInstruction,omitempty"`
	// An alphanumeric code for the promotion. This code may not be changed once the promotion code is saved.
	PromotionCode *string `json:"promotionCode,omitempty"`
	PromotionCodeDetails *PromotionCodeDetailsType `json:"promotionCodeDetails,omitempty"`
	// List of Promotion Rate Code
	PropertyPromotionRateCodes []PropertyPromotionRateCodeType `json:"propertyPromotionRateCodes,omitempty"`
}

// NewPropertyPromotionCodeType instantiates a new PropertyPromotionCodeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyPromotionCodeType() *PropertyPromotionCodeType {
	this := PropertyPromotionCodeType{}
	return &this
}

// NewPropertyPromotionCodeTypeWithDefaults instantiates a new PropertyPromotionCodeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyPromotionCodeTypeWithDefaults() *PropertyPromotionCodeType {
	this := PropertyPromotionCodeType{}
	return &this
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PropertyPromotionCodeType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyPromotionCodeType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PropertyPromotionCodeType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PropertyPromotionCodeType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPromoCodeRoutingInstruction returns the PromoCodeRoutingInstruction field value if set, zero value otherwise.
func (o *PropertyPromotionCodeType) GetPromoCodeRoutingInstruction() PromoCodeRoutingInstructionType {
	if o == nil || IsNil(o.PromoCodeRoutingInstruction) {
		var ret PromoCodeRoutingInstructionType
		return ret
	}
	return *o.PromoCodeRoutingInstruction
}

// GetPromoCodeRoutingInstructionOk returns a tuple with the PromoCodeRoutingInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyPromotionCodeType) GetPromoCodeRoutingInstructionOk() (*PromoCodeRoutingInstructionType, bool) {
	if o == nil || IsNil(o.PromoCodeRoutingInstruction) {
		return nil, false
	}
	return o.PromoCodeRoutingInstruction, true
}

// HasPromoCodeRoutingInstruction returns a boolean if a field has been set.
func (o *PropertyPromotionCodeType) HasPromoCodeRoutingInstruction() bool {
	if o != nil && !IsNil(o.PromoCodeRoutingInstruction) {
		return true
	}

	return false
}

// SetPromoCodeRoutingInstruction gets a reference to the given PromoCodeRoutingInstructionType and assigns it to the PromoCodeRoutingInstruction field.
func (o *PropertyPromotionCodeType) SetPromoCodeRoutingInstruction(v PromoCodeRoutingInstructionType) {
	o.PromoCodeRoutingInstruction = &v
}

// GetPromotionCode returns the PromotionCode field value if set, zero value otherwise.
func (o *PropertyPromotionCodeType) GetPromotionCode() string {
	if o == nil || IsNil(o.PromotionCode) {
		var ret string
		return ret
	}
	return *o.PromotionCode
}

// GetPromotionCodeOk returns a tuple with the PromotionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyPromotionCodeType) GetPromotionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionCode) {
		return nil, false
	}
	return o.PromotionCode, true
}

// HasPromotionCode returns a boolean if a field has been set.
func (o *PropertyPromotionCodeType) HasPromotionCode() bool {
	if o != nil && !IsNil(o.PromotionCode) {
		return true
	}

	return false
}

// SetPromotionCode gets a reference to the given string and assigns it to the PromotionCode field.
func (o *PropertyPromotionCodeType) SetPromotionCode(v string) {
	o.PromotionCode = &v
}

// GetPromotionCodeDetails returns the PromotionCodeDetails field value if set, zero value otherwise.
func (o *PropertyPromotionCodeType) GetPromotionCodeDetails() PromotionCodeDetailsType {
	if o == nil || IsNil(o.PromotionCodeDetails) {
		var ret PromotionCodeDetailsType
		return ret
	}
	return *o.PromotionCodeDetails
}

// GetPromotionCodeDetailsOk returns a tuple with the PromotionCodeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyPromotionCodeType) GetPromotionCodeDetailsOk() (*PromotionCodeDetailsType, bool) {
	if o == nil || IsNil(o.PromotionCodeDetails) {
		return nil, false
	}
	return o.PromotionCodeDetails, true
}

// HasPromotionCodeDetails returns a boolean if a field has been set.
func (o *PropertyPromotionCodeType) HasPromotionCodeDetails() bool {
	if o != nil && !IsNil(o.PromotionCodeDetails) {
		return true
	}

	return false
}

// SetPromotionCodeDetails gets a reference to the given PromotionCodeDetailsType and assigns it to the PromotionCodeDetails field.
func (o *PropertyPromotionCodeType) SetPromotionCodeDetails(v PromotionCodeDetailsType) {
	o.PromotionCodeDetails = &v
}

// GetPropertyPromotionRateCodes returns the PropertyPromotionRateCodes field value if set, zero value otherwise.
func (o *PropertyPromotionCodeType) GetPropertyPromotionRateCodes() []PropertyPromotionRateCodeType {
	if o == nil || IsNil(o.PropertyPromotionRateCodes) {
		var ret []PropertyPromotionRateCodeType
		return ret
	}
	return o.PropertyPromotionRateCodes
}

// GetPropertyPromotionRateCodesOk returns a tuple with the PropertyPromotionRateCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyPromotionCodeType) GetPropertyPromotionRateCodesOk() ([]PropertyPromotionRateCodeType, bool) {
	if o == nil || IsNil(o.PropertyPromotionRateCodes) {
		return nil, false
	}
	return o.PropertyPromotionRateCodes, true
}

// HasPropertyPromotionRateCodes returns a boolean if a field has been set.
func (o *PropertyPromotionCodeType) HasPropertyPromotionRateCodes() bool {
	if o != nil && !IsNil(o.PropertyPromotionRateCodes) {
		return true
	}

	return false
}

// SetPropertyPromotionRateCodes gets a reference to the given []PropertyPromotionRateCodeType and assigns it to the PropertyPromotionRateCodes field.
func (o *PropertyPromotionCodeType) SetPropertyPromotionRateCodes(v []PropertyPromotionRateCodeType) {
	o.PropertyPromotionRateCodes = v
}

func (o PropertyPromotionCodeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PropertyPromotionCodeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.PromoCodeRoutingInstruction) {
		toSerialize["promoCodeRoutingInstruction"] = o.PromoCodeRoutingInstruction
	}
	if !IsNil(o.PromotionCode) {
		toSerialize["promotionCode"] = o.PromotionCode
	}
	if !IsNil(o.PromotionCodeDetails) {
		toSerialize["promotionCodeDetails"] = o.PromotionCodeDetails
	}
	if !IsNil(o.PropertyPromotionRateCodes) {
		toSerialize["propertyPromotionRateCodes"] = o.PropertyPromotionRateCodes
	}
	return toSerialize, nil
}

type NullablePropertyPromotionCodeType struct {
	value *PropertyPromotionCodeType
	isSet bool
}

func (v NullablePropertyPromotionCodeType) Get() *PropertyPromotionCodeType {
	return v.value
}

func (v *NullablePropertyPromotionCodeType) Set(val *PropertyPromotionCodeType) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyPromotionCodeType) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyPromotionCodeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyPromotionCodeType(val *PropertyPromotionCodeType) *NullablePropertyPromotionCodeType {
	return &NullablePropertyPromotionCodeType{value: val, isSet: true}
}

func (v NullablePropertyPromotionCodeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyPromotionCodeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


