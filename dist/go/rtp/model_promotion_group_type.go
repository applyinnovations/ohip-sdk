/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the PromotionGroupType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromotionGroupType{}

// PromotionGroupType Details of a Promotion Group
type PromotionGroupType struct {
	// Description of the marketing plan associated with the promotion group.
	Plan *string `json:"plan,omitempty"`
	// Name of the promotion group.
	Name *string `json:"name,omitempty"`
	// Type of promotion group (e.g., radio, TV, Internet/Web, email, etc.).
	Type *string `json:"type,omitempty"`
	// A Y or N indicates whether the promotion group is associated with an airline whose passengers also participate in the promotion.
	Airline *string `json:"airline,omitempty"`
	// A Y or N indicates if revenue is expected or the current year from this promotion group.
	Revenue *string `json:"revenue,omitempty"`
	// Collection of Promotion Codes that belong to the promotion group.
	PromotionCodes []PromotionCodeType `json:"promotionCodes,omitempty"`
	// Hotel code the promotion group belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// Alphanumeric code for the promotion group.
	PromotionGroup *string `json:"promotionGroup,omitempty"`
}

// NewPromotionGroupType instantiates a new PromotionGroupType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromotionGroupType() *PromotionGroupType {
	this := PromotionGroupType{}
	return &this
}

// NewPromotionGroupTypeWithDefaults instantiates a new PromotionGroupType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromotionGroupTypeWithDefaults() *PromotionGroupType {
	this := PromotionGroupType{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *PromotionGroupType) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *PromotionGroupType) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *PromotionGroupType) SetPlan(v string) {
	o.Plan = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PromotionGroupType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PromotionGroupType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PromotionGroupType) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PromotionGroupType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PromotionGroupType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PromotionGroupType) SetType(v string) {
	o.Type = &v
}

// GetAirline returns the Airline field value if set, zero value otherwise.
func (o *PromotionGroupType) GetAirline() string {
	if o == nil || IsNil(o.Airline) {
		var ret string
		return ret
	}
	return *o.Airline
}

// GetAirlineOk returns a tuple with the Airline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetAirlineOk() (*string, bool) {
	if o == nil || IsNil(o.Airline) {
		return nil, false
	}
	return o.Airline, true
}

// HasAirline returns a boolean if a field has been set.
func (o *PromotionGroupType) HasAirline() bool {
	if o != nil && !IsNil(o.Airline) {
		return true
	}

	return false
}

// SetAirline gets a reference to the given string and assigns it to the Airline field.
func (o *PromotionGroupType) SetAirline(v string) {
	o.Airline = &v
}

// GetRevenue returns the Revenue field value if set, zero value otherwise.
func (o *PromotionGroupType) GetRevenue() string {
	if o == nil || IsNil(o.Revenue) {
		var ret string
		return ret
	}
	return *o.Revenue
}

// GetRevenueOk returns a tuple with the Revenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetRevenueOk() (*string, bool) {
	if o == nil || IsNil(o.Revenue) {
		return nil, false
	}
	return o.Revenue, true
}

// HasRevenue returns a boolean if a field has been set.
func (o *PromotionGroupType) HasRevenue() bool {
	if o != nil && !IsNil(o.Revenue) {
		return true
	}

	return false
}

// SetRevenue gets a reference to the given string and assigns it to the Revenue field.
func (o *PromotionGroupType) SetRevenue(v string) {
	o.Revenue = &v
}

// GetPromotionCodes returns the PromotionCodes field value if set, zero value otherwise.
func (o *PromotionGroupType) GetPromotionCodes() []PromotionCodeType {
	if o == nil || IsNil(o.PromotionCodes) {
		var ret []PromotionCodeType
		return ret
	}
	return o.PromotionCodes
}

// GetPromotionCodesOk returns a tuple with the PromotionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetPromotionCodesOk() ([]PromotionCodeType, bool) {
	if o == nil || IsNil(o.PromotionCodes) {
		return nil, false
	}
	return o.PromotionCodes, true
}

// HasPromotionCodes returns a boolean if a field has been set.
func (o *PromotionGroupType) HasPromotionCodes() bool {
	if o != nil && !IsNil(o.PromotionCodes) {
		return true
	}

	return false
}

// SetPromotionCodes gets a reference to the given []PromotionCodeType and assigns it to the PromotionCodes field.
func (o *PromotionGroupType) SetPromotionCodes(v []PromotionCodeType) {
	o.PromotionCodes = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *PromotionGroupType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *PromotionGroupType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *PromotionGroupType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPromotionGroup returns the PromotionGroup field value if set, zero value otherwise.
func (o *PromotionGroupType) GetPromotionGroup() string {
	if o == nil || IsNil(o.PromotionGroup) {
		var ret string
		return ret
	}
	return *o.PromotionGroup
}

// GetPromotionGroupOk returns a tuple with the PromotionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionGroupType) GetPromotionGroupOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionGroup) {
		return nil, false
	}
	return o.PromotionGroup, true
}

// HasPromotionGroup returns a boolean if a field has been set.
func (o *PromotionGroupType) HasPromotionGroup() bool {
	if o != nil && !IsNil(o.PromotionGroup) {
		return true
	}

	return false
}

// SetPromotionGroup gets a reference to the given string and assigns it to the PromotionGroup field.
func (o *PromotionGroupType) SetPromotionGroup(v string) {
	o.PromotionGroup = &v
}

func (o PromotionGroupType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromotionGroupType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Airline) {
		toSerialize["airline"] = o.Airline
	}
	if !IsNil(o.Revenue) {
		toSerialize["revenue"] = o.Revenue
	}
	if !IsNil(o.PromotionCodes) {
		toSerialize["promotionCodes"] = o.PromotionCodes
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.PromotionGroup) {
		toSerialize["promotionGroup"] = o.PromotionGroup
	}
	return toSerialize, nil
}

type NullablePromotionGroupType struct {
	value *PromotionGroupType
	isSet bool
}

func (v NullablePromotionGroupType) Get() *PromotionGroupType {
	return v.value
}

func (v *NullablePromotionGroupType) Set(val *PromotionGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullablePromotionGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullablePromotionGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromotionGroupType(val *PromotionGroupType) *NullablePromotionGroupType {
	return &NullablePromotionGroupType{value: val, isSet: true}
}

func (v NullablePromotionGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromotionGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


