/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the CopyRatePlansCriteriaTypeCopyRatePlans type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyRatePlansCriteriaTypeCopyRatePlans{}

// CopyRatePlansCriteriaTypeCopyRatePlans The details of Rate plans to be copied.
type CopyRatePlansCriteriaTypeCopyRatePlans struct {
	// The details of Rate plans to be copied.
	CopyRatePlan []CopyRatePlanType `json:"copyRatePlan,omitempty"`
	// Hotel Code from which rate plans are being copied.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewCopyRatePlansCriteriaTypeCopyRatePlans instantiates a new CopyRatePlansCriteriaTypeCopyRatePlans object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyRatePlansCriteriaTypeCopyRatePlans() *CopyRatePlansCriteriaTypeCopyRatePlans {
	this := CopyRatePlansCriteriaTypeCopyRatePlans{}
	return &this
}

// NewCopyRatePlansCriteriaTypeCopyRatePlansWithDefaults instantiates a new CopyRatePlansCriteriaTypeCopyRatePlans object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyRatePlansCriteriaTypeCopyRatePlansWithDefaults() *CopyRatePlansCriteriaTypeCopyRatePlans {
	this := CopyRatePlansCriteriaTypeCopyRatePlans{}
	return &this
}

// GetCopyRatePlan returns the CopyRatePlan field value if set, zero value otherwise.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) GetCopyRatePlan() []CopyRatePlanType {
	if o == nil || IsNil(o.CopyRatePlan) {
		var ret []CopyRatePlanType
		return ret
	}
	return o.CopyRatePlan
}

// GetCopyRatePlanOk returns a tuple with the CopyRatePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) GetCopyRatePlanOk() ([]CopyRatePlanType, bool) {
	if o == nil || IsNil(o.CopyRatePlan) {
		return nil, false
	}
	return o.CopyRatePlan, true
}

// HasCopyRatePlan returns a boolean if a field has been set.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) HasCopyRatePlan() bool {
	if o != nil && !IsNil(o.CopyRatePlan) {
		return true
	}

	return false
}

// SetCopyRatePlan gets a reference to the given []CopyRatePlanType and assigns it to the CopyRatePlan field.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) SetCopyRatePlan(v []CopyRatePlanType) {
	o.CopyRatePlan = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *CopyRatePlansCriteriaTypeCopyRatePlans) SetHotelId(v string) {
	o.HotelId = &v
}

func (o CopyRatePlansCriteriaTypeCopyRatePlans) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyRatePlansCriteriaTypeCopyRatePlans) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyRatePlan) {
		toSerialize["copyRatePlan"] = o.CopyRatePlan
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableCopyRatePlansCriteriaTypeCopyRatePlans struct {
	value *CopyRatePlansCriteriaTypeCopyRatePlans
	isSet bool
}

func (v NullableCopyRatePlansCriteriaTypeCopyRatePlans) Get() *CopyRatePlansCriteriaTypeCopyRatePlans {
	return v.value
}

func (v *NullableCopyRatePlansCriteriaTypeCopyRatePlans) Set(val *CopyRatePlansCriteriaTypeCopyRatePlans) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyRatePlansCriteriaTypeCopyRatePlans) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyRatePlansCriteriaTypeCopyRatePlans) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyRatePlansCriteriaTypeCopyRatePlans(val *CopyRatePlansCriteriaTypeCopyRatePlans) *NullableCopyRatePlansCriteriaTypeCopyRatePlans {
	return &NullableCopyRatePlansCriteriaTypeCopyRatePlans{value: val, isSet: true}
}

func (v NullableCopyRatePlansCriteriaTypeCopyRatePlans) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyRatePlansCriteriaTypeCopyRatePlans) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


