/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the PromotionCodeDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromotionCodeDetailsType{}

// PromotionCodeDetailsType Details of the promotion.
type PromotionCodeDetailsType struct {
	BookingDate *TimeSpanType `json:"bookingDate,omitempty"`
	// You may enter any information, such as the membership program or level.
	Category *string `json:"category,omitempty"`
	// Description of the category.
	CategoryDesc *string `json:"categoryDesc,omitempty"`
	CheckInOutTime *DateTimeSpanType `json:"checkInOutTime,omitempty"`
	// Description of the promotion.
	Description *string `json:"description,omitempty"`
	// Date the promotion is inactived.
	InactiveDate *string `json:"inactiveDate,omitempty"`
	// Free text comments that further describe the promotion code
	PromoInformation *string `json:"promoInformation,omitempty"`
	// One line of information. If you wish to enter long information, use the Information field.
	PromoInstructions *string `json:"promoInstructions,omitempty"`
	// Group that the promotion code belongs to. If the promotion group will be associated with a profile promotion, the promotion group is identified as PROFILE.
	PromotionGroup *string `json:"promotionGroup,omitempty"`
	// Name of the promotion group.
	PromotionGroupName *string `json:"promotionGroupName,omitempty"`
	PromotionName *TranslationTextType2000 `json:"promotionName,omitempty"`
	StayDate *TimeSpanType `json:"stayDate,omitempty"`
	// Indicates if reservations are allowed to edit after the booking date has passed.
	UpdateOutsideBookingDate *bool `json:"updateOutsideBookingDate,omitempty"`
	// Available only for reservation promotion codes. Indicates if room upgrades are allowed for the promotion.
	UpgradeAllowed *string `json:"upgradeAllowed,omitempty"`
}

// NewPromotionCodeDetailsType instantiates a new PromotionCodeDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromotionCodeDetailsType() *PromotionCodeDetailsType {
	this := PromotionCodeDetailsType{}
	return &this
}

// NewPromotionCodeDetailsTypeWithDefaults instantiates a new PromotionCodeDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromotionCodeDetailsTypeWithDefaults() *PromotionCodeDetailsType {
	this := PromotionCodeDetailsType{}
	return &this
}

// GetBookingDate returns the BookingDate field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetBookingDate() TimeSpanType {
	if o == nil || IsNil(o.BookingDate) {
		var ret TimeSpanType
		return ret
	}
	return *o.BookingDate
}

// GetBookingDateOk returns a tuple with the BookingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetBookingDateOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.BookingDate) {
		return nil, false
	}
	return o.BookingDate, true
}

// HasBookingDate returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasBookingDate() bool {
	if o != nil && !IsNil(o.BookingDate) {
		return true
	}

	return false
}

// SetBookingDate gets a reference to the given TimeSpanType and assigns it to the BookingDate field.
func (o *PromotionCodeDetailsType) SetBookingDate(v TimeSpanType) {
	o.BookingDate = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *PromotionCodeDetailsType) SetCategory(v string) {
	o.Category = &v
}

// GetCategoryDesc returns the CategoryDesc field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetCategoryDesc() string {
	if o == nil || IsNil(o.CategoryDesc) {
		var ret string
		return ret
	}
	return *o.CategoryDesc
}

// GetCategoryDescOk returns a tuple with the CategoryDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetCategoryDescOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryDesc) {
		return nil, false
	}
	return o.CategoryDesc, true
}

// HasCategoryDesc returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasCategoryDesc() bool {
	if o != nil && !IsNil(o.CategoryDesc) {
		return true
	}

	return false
}

// SetCategoryDesc gets a reference to the given string and assigns it to the CategoryDesc field.
func (o *PromotionCodeDetailsType) SetCategoryDesc(v string) {
	o.CategoryDesc = &v
}

// GetCheckInOutTime returns the CheckInOutTime field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetCheckInOutTime() DateTimeSpanType {
	if o == nil || IsNil(o.CheckInOutTime) {
		var ret DateTimeSpanType
		return ret
	}
	return *o.CheckInOutTime
}

// GetCheckInOutTimeOk returns a tuple with the CheckInOutTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetCheckInOutTimeOk() (*DateTimeSpanType, bool) {
	if o == nil || IsNil(o.CheckInOutTime) {
		return nil, false
	}
	return o.CheckInOutTime, true
}

// HasCheckInOutTime returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasCheckInOutTime() bool {
	if o != nil && !IsNil(o.CheckInOutTime) {
		return true
	}

	return false
}

// SetCheckInOutTime gets a reference to the given DateTimeSpanType and assigns it to the CheckInOutTime field.
func (o *PromotionCodeDetailsType) SetCheckInOutTime(v DateTimeSpanType) {
	o.CheckInOutTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PromotionCodeDetailsType) SetDescription(v string) {
	o.Description = &v
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *PromotionCodeDetailsType) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetPromoInformation returns the PromoInformation field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetPromoInformation() string {
	if o == nil || IsNil(o.PromoInformation) {
		var ret string
		return ret
	}
	return *o.PromoInformation
}

// GetPromoInformationOk returns a tuple with the PromoInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetPromoInformationOk() (*string, bool) {
	if o == nil || IsNil(o.PromoInformation) {
		return nil, false
	}
	return o.PromoInformation, true
}

// HasPromoInformation returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasPromoInformation() bool {
	if o != nil && !IsNil(o.PromoInformation) {
		return true
	}

	return false
}

// SetPromoInformation gets a reference to the given string and assigns it to the PromoInformation field.
func (o *PromotionCodeDetailsType) SetPromoInformation(v string) {
	o.PromoInformation = &v
}

// GetPromoInstructions returns the PromoInstructions field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetPromoInstructions() string {
	if o == nil || IsNil(o.PromoInstructions) {
		var ret string
		return ret
	}
	return *o.PromoInstructions
}

// GetPromoInstructionsOk returns a tuple with the PromoInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetPromoInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.PromoInstructions) {
		return nil, false
	}
	return o.PromoInstructions, true
}

// HasPromoInstructions returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasPromoInstructions() bool {
	if o != nil && !IsNil(o.PromoInstructions) {
		return true
	}

	return false
}

// SetPromoInstructions gets a reference to the given string and assigns it to the PromoInstructions field.
func (o *PromotionCodeDetailsType) SetPromoInstructions(v string) {
	o.PromoInstructions = &v
}

// GetPromotionGroup returns the PromotionGroup field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetPromotionGroup() string {
	if o == nil || IsNil(o.PromotionGroup) {
		var ret string
		return ret
	}
	return *o.PromotionGroup
}

// GetPromotionGroupOk returns a tuple with the PromotionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetPromotionGroupOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionGroup) {
		return nil, false
	}
	return o.PromotionGroup, true
}

// HasPromotionGroup returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasPromotionGroup() bool {
	if o != nil && !IsNil(o.PromotionGroup) {
		return true
	}

	return false
}

// SetPromotionGroup gets a reference to the given string and assigns it to the PromotionGroup field.
func (o *PromotionCodeDetailsType) SetPromotionGroup(v string) {
	o.PromotionGroup = &v
}

// GetPromotionGroupName returns the PromotionGroupName field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetPromotionGroupName() string {
	if o == nil || IsNil(o.PromotionGroupName) {
		var ret string
		return ret
	}
	return *o.PromotionGroupName
}

// GetPromotionGroupNameOk returns a tuple with the PromotionGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetPromotionGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.PromotionGroupName) {
		return nil, false
	}
	return o.PromotionGroupName, true
}

// HasPromotionGroupName returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasPromotionGroupName() bool {
	if o != nil && !IsNil(o.PromotionGroupName) {
		return true
	}

	return false
}

// SetPromotionGroupName gets a reference to the given string and assigns it to the PromotionGroupName field.
func (o *PromotionCodeDetailsType) SetPromotionGroupName(v string) {
	o.PromotionGroupName = &v
}

// GetPromotionName returns the PromotionName field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetPromotionName() TranslationTextType2000 {
	if o == nil || IsNil(o.PromotionName) {
		var ret TranslationTextType2000
		return ret
	}
	return *o.PromotionName
}

// GetPromotionNameOk returns a tuple with the PromotionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetPromotionNameOk() (*TranslationTextType2000, bool) {
	if o == nil || IsNil(o.PromotionName) {
		return nil, false
	}
	return o.PromotionName, true
}

// HasPromotionName returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasPromotionName() bool {
	if o != nil && !IsNil(o.PromotionName) {
		return true
	}

	return false
}

// SetPromotionName gets a reference to the given TranslationTextType2000 and assigns it to the PromotionName field.
func (o *PromotionCodeDetailsType) SetPromotionName(v TranslationTextType2000) {
	o.PromotionName = &v
}

// GetStayDate returns the StayDate field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetStayDate() TimeSpanType {
	if o == nil || IsNil(o.StayDate) {
		var ret TimeSpanType
		return ret
	}
	return *o.StayDate
}

// GetStayDateOk returns a tuple with the StayDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetStayDateOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.StayDate) {
		return nil, false
	}
	return o.StayDate, true
}

// HasStayDate returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasStayDate() bool {
	if o != nil && !IsNil(o.StayDate) {
		return true
	}

	return false
}

// SetStayDate gets a reference to the given TimeSpanType and assigns it to the StayDate field.
func (o *PromotionCodeDetailsType) SetStayDate(v TimeSpanType) {
	o.StayDate = &v
}

// GetUpdateOutsideBookingDate returns the UpdateOutsideBookingDate field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetUpdateOutsideBookingDate() bool {
	if o == nil || IsNil(o.UpdateOutsideBookingDate) {
		var ret bool
		return ret
	}
	return *o.UpdateOutsideBookingDate
}

// GetUpdateOutsideBookingDateOk returns a tuple with the UpdateOutsideBookingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetUpdateOutsideBookingDateOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateOutsideBookingDate) {
		return nil, false
	}
	return o.UpdateOutsideBookingDate, true
}

// HasUpdateOutsideBookingDate returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasUpdateOutsideBookingDate() bool {
	if o != nil && !IsNil(o.UpdateOutsideBookingDate) {
		return true
	}

	return false
}

// SetUpdateOutsideBookingDate gets a reference to the given bool and assigns it to the UpdateOutsideBookingDate field.
func (o *PromotionCodeDetailsType) SetUpdateOutsideBookingDate(v bool) {
	o.UpdateOutsideBookingDate = &v
}

// GetUpgradeAllowed returns the UpgradeAllowed field value if set, zero value otherwise.
func (o *PromotionCodeDetailsType) GetUpgradeAllowed() string {
	if o == nil || IsNil(o.UpgradeAllowed) {
		var ret string
		return ret
	}
	return *o.UpgradeAllowed
}

// GetUpgradeAllowedOk returns a tuple with the UpgradeAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromotionCodeDetailsType) GetUpgradeAllowedOk() (*string, bool) {
	if o == nil || IsNil(o.UpgradeAllowed) {
		return nil, false
	}
	return o.UpgradeAllowed, true
}

// HasUpgradeAllowed returns a boolean if a field has been set.
func (o *PromotionCodeDetailsType) HasUpgradeAllowed() bool {
	if o != nil && !IsNil(o.UpgradeAllowed) {
		return true
	}

	return false
}

// SetUpgradeAllowed gets a reference to the given string and assigns it to the UpgradeAllowed field.
func (o *PromotionCodeDetailsType) SetUpgradeAllowed(v string) {
	o.UpgradeAllowed = &v
}

func (o PromotionCodeDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromotionCodeDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookingDate) {
		toSerialize["bookingDate"] = o.BookingDate
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.CategoryDesc) {
		toSerialize["categoryDesc"] = o.CategoryDesc
	}
	if !IsNil(o.CheckInOutTime) {
		toSerialize["checkInOutTime"] = o.CheckInOutTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if !IsNil(o.PromoInformation) {
		toSerialize["promoInformation"] = o.PromoInformation
	}
	if !IsNil(o.PromoInstructions) {
		toSerialize["promoInstructions"] = o.PromoInstructions
	}
	if !IsNil(o.PromotionGroup) {
		toSerialize["promotionGroup"] = o.PromotionGroup
	}
	if !IsNil(o.PromotionGroupName) {
		toSerialize["promotionGroupName"] = o.PromotionGroupName
	}
	if !IsNil(o.PromotionName) {
		toSerialize["promotionName"] = o.PromotionName
	}
	if !IsNil(o.StayDate) {
		toSerialize["stayDate"] = o.StayDate
	}
	if !IsNil(o.UpdateOutsideBookingDate) {
		toSerialize["updateOutsideBookingDate"] = o.UpdateOutsideBookingDate
	}
	if !IsNil(o.UpgradeAllowed) {
		toSerialize["upgradeAllowed"] = o.UpgradeAllowed
	}
	return toSerialize, nil
}

type NullablePromotionCodeDetailsType struct {
	value *PromotionCodeDetailsType
	isSet bool
}

func (v NullablePromotionCodeDetailsType) Get() *PromotionCodeDetailsType {
	return v.value
}

func (v *NullablePromotionCodeDetailsType) Set(val *PromotionCodeDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullablePromotionCodeDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullablePromotionCodeDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromotionCodeDetailsType(val *PromotionCodeDetailsType) *NullablePromotionCodeDetailsType {
	return &NullablePromotionCodeDetailsType{value: val, isSet: true}
}

func (v NullablePromotionCodeDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromotionCodeDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


