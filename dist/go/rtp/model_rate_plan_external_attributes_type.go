/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the RatePlanExternalAttributesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RatePlanExternalAttributesType{}

// RatePlanExternalAttributesType struct for RatePlanExternalAttributesType
type RatePlanExternalAttributesType struct {
	// Rate Category for the rate plan.
	MarshaRateProgram *string `json:"marshaRateProgram,omitempty"`
}

// NewRatePlanExternalAttributesType instantiates a new RatePlanExternalAttributesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatePlanExternalAttributesType() *RatePlanExternalAttributesType {
	this := RatePlanExternalAttributesType{}
	return &this
}

// NewRatePlanExternalAttributesTypeWithDefaults instantiates a new RatePlanExternalAttributesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatePlanExternalAttributesTypeWithDefaults() *RatePlanExternalAttributesType {
	this := RatePlanExternalAttributesType{}
	return &this
}

// GetMarshaRateProgram returns the MarshaRateProgram field value if set, zero value otherwise.
func (o *RatePlanExternalAttributesType) GetMarshaRateProgram() string {
	if o == nil || IsNil(o.MarshaRateProgram) {
		var ret string
		return ret
	}
	return *o.MarshaRateProgram
}

// GetMarshaRateProgramOk returns a tuple with the MarshaRateProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatePlanExternalAttributesType) GetMarshaRateProgramOk() (*string, bool) {
	if o == nil || IsNil(o.MarshaRateProgram) {
		return nil, false
	}
	return o.MarshaRateProgram, true
}

// HasMarshaRateProgram returns a boolean if a field has been set.
func (o *RatePlanExternalAttributesType) HasMarshaRateProgram() bool {
	if o != nil && !IsNil(o.MarshaRateProgram) {
		return true
	}

	return false
}

// SetMarshaRateProgram gets a reference to the given string and assigns it to the MarshaRateProgram field.
func (o *RatePlanExternalAttributesType) SetMarshaRateProgram(v string) {
	o.MarshaRateProgram = &v
}

func (o RatePlanExternalAttributesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RatePlanExternalAttributesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarshaRateProgram) {
		toSerialize["marshaRateProgram"] = o.MarshaRateProgram
	}
	return toSerialize, nil
}

type NullableRatePlanExternalAttributesType struct {
	value *RatePlanExternalAttributesType
	isSet bool
}

func (v NullableRatePlanExternalAttributesType) Get() *RatePlanExternalAttributesType {
	return v.value
}

func (v *NullableRatePlanExternalAttributesType) Set(val *RatePlanExternalAttributesType) {
	v.value = val
	v.isSet = true
}

func (v NullableRatePlanExternalAttributesType) IsSet() bool {
	return v.isSet
}

func (v *NullableRatePlanExternalAttributesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatePlanExternalAttributesType(val *RatePlanExternalAttributesType) *NullableRatePlanExternalAttributesType {
	return &NullableRatePlanExternalAttributesType{value: val, isSet: true}
}

func (v NullableRatePlanExternalAttributesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatePlanExternalAttributesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


