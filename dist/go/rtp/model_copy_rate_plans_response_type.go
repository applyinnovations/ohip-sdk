/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the CopyRatePlansResponseType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyRatePlansResponseType{}

// CopyRatePlansResponseType Copy Rate plan response contains the response messages to identify what happened during copy process.
type CopyRatePlansResponseType struct {
	// Hotel Code from which rate plans are being copied.
	CopyResponse []CopyRatePlansResponseTypeCopyResponseInner `json:"copyResponse,omitempty"`
	// Does the response contains error? if true means request is not completed.
	IsError *bool `json:"isError,omitempty"`
}

// NewCopyRatePlansResponseType instantiates a new CopyRatePlansResponseType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyRatePlansResponseType() *CopyRatePlansResponseType {
	this := CopyRatePlansResponseType{}
	return &this
}

// NewCopyRatePlansResponseTypeWithDefaults instantiates a new CopyRatePlansResponseType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyRatePlansResponseTypeWithDefaults() *CopyRatePlansResponseType {
	this := CopyRatePlansResponseType{}
	return &this
}

// GetCopyResponse returns the CopyResponse field value if set, zero value otherwise.
func (o *CopyRatePlansResponseType) GetCopyResponse() []CopyRatePlansResponseTypeCopyResponseInner {
	if o == nil || IsNil(o.CopyResponse) {
		var ret []CopyRatePlansResponseTypeCopyResponseInner
		return ret
	}
	return o.CopyResponse
}

// GetCopyResponseOk returns a tuple with the CopyResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRatePlansResponseType) GetCopyResponseOk() ([]CopyRatePlansResponseTypeCopyResponseInner, bool) {
	if o == nil || IsNil(o.CopyResponse) {
		return nil, false
	}
	return o.CopyResponse, true
}

// HasCopyResponse returns a boolean if a field has been set.
func (o *CopyRatePlansResponseType) HasCopyResponse() bool {
	if o != nil && !IsNil(o.CopyResponse) {
		return true
	}

	return false
}

// SetCopyResponse gets a reference to the given []CopyRatePlansResponseTypeCopyResponseInner and assigns it to the CopyResponse field.
func (o *CopyRatePlansResponseType) SetCopyResponse(v []CopyRatePlansResponseTypeCopyResponseInner) {
	o.CopyResponse = v
}

// GetIsError returns the IsError field value if set, zero value otherwise.
func (o *CopyRatePlansResponseType) GetIsError() bool {
	if o == nil || IsNil(o.IsError) {
		var ret bool
		return ret
	}
	return *o.IsError
}

// GetIsErrorOk returns a tuple with the IsError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyRatePlansResponseType) GetIsErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.IsError) {
		return nil, false
	}
	return o.IsError, true
}

// HasIsError returns a boolean if a field has been set.
func (o *CopyRatePlansResponseType) HasIsError() bool {
	if o != nil && !IsNil(o.IsError) {
		return true
	}

	return false
}

// SetIsError gets a reference to the given bool and assigns it to the IsError field.
func (o *CopyRatePlansResponseType) SetIsError(v bool) {
	o.IsError = &v
}

func (o CopyRatePlansResponseType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyRatePlansResponseType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyResponse) {
		toSerialize["copyResponse"] = o.CopyResponse
	}
	if !IsNil(o.IsError) {
		toSerialize["isError"] = o.IsError
	}
	return toSerialize, nil
}

type NullableCopyRatePlansResponseType struct {
	value *CopyRatePlansResponseType
	isSet bool
}

func (v NullableCopyRatePlansResponseType) Get() *CopyRatePlansResponseType {
	return v.value
}

func (v *NullableCopyRatePlansResponseType) Set(val *CopyRatePlansResponseType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyRatePlansResponseType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyRatePlansResponseType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyRatePlansResponseType(val *CopyRatePlansResponseType) *NullableCopyRatePlansResponseType {
	return &NullableCopyRatePlansResponseType{value: val, isSet: true}
}

func (v NullableCopyRatePlansResponseType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyRatePlansResponseType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


