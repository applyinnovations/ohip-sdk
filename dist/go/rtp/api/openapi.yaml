openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Rate Availability functionality in OPERA Cloud.\
    \ <br /><br /> Rate Management provides all the tools you need to effectively\
    \ define and manage the rate structures for a property in OPERA Cloud. Some of\
    \ the things you can do include creating and managing rate codes, rate classes,\
    \ rate categories, display sets, rate strategies, as well as managing promotion\
    \ groups and codes.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br\
    \ /><p> This document and all content within is available under the Universal\
    \ Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c)\
    \ 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Rate API
  version: "22.3"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /rtp/v1
tags:
- description: "The Rate Plan APIs allow for creating, managing, and retrieving rates\
    \ and their related components such as negotiated rates and packages."
  name: RatePlan
- description: These APIs will allow you to configure rate related configuration related
    for Administration.
  name: ChainConfig
- description: These APIs will allow you to configure rate related configuration related
    for Administration.
  name: HotelConfig
paths:
  /displaySets:
    get:
      description: Use this API to get Display Sets. <p><strong>OperationId:</strong>getDisplaySets</p>
      operationId: getDisplaySets
      parameters:
      - description: Determines wether to fetch inactive records or not.
        in: query
        name: fetchInactive
        schema:
          type: boolean
      - description: Codes to be searched.
        explode: true
        in: query
        name: codes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search on the code.
        in: query
        name: wildCard
        schema:
          type: string
      - description: Description of the code.
        in: query
        name: description
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/displaySetsDetails'
          description: Response object for fetching Display Sets.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DisplaySets not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Display Sets
      tags:
      - ChainConfig
  /hotels/{hotelId}/bestavailablerates:
    delete:
      description: This API allows to fetch Best Available rates for rate code(s).
        <p><strong>OperationId:</strong>deleteBestAvailableRates</p>
      operationId: deleteBestAvailableRates
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: code
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: end
        required: true
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: start
        required: true
        schema:
          format: date
          type: string
      - in: query
        name: friday
        schema:
          type: boolean
      - in: query
        name: monday
        schema:
          type: boolean
      - in: query
        name: saturday
        schema:
          type: boolean
      - in: query
        name: sunday
        schema:
          type: boolean
      - in: query
        name: thursday
        schema:
          type: boolean
      - in: query
        name: tuesday
        schema:
          type: boolean
      - in: query
        name: wednesday
        schema:
          type: boolean
      - description: Indicates Length of Stay 1 configuration.
        in: query
        name: lOS1
        schema:
          type: boolean
      - description: Indicates Length of Stay 2 configuration.
        in: query
        name: lOS2
        schema:
          type: boolean
      - description: Indicates Length of Stay 3 configuration.
        in: query
        name: lOS3
        schema:
          type: boolean
      - description: Indicates Length of Stay 4 configuration.
        in: query
        name: lOS4
        schema:
          type: boolean
      - description: Indicates Length of Stay 5 configuration.
        in: query
        name: lOS5
        schema:
          type: boolean
      - description: Indicates Length of Stay 6 configuration.
        in: query
        name: lOS6
        schema:
          type: boolean
      - description: Indicates Length of Stay 7 configuration.
        in: query
        name: lOS7
        schema:
          type: boolean
      - description: Indicates Length of Stay 8 configuration.
        in: query
        name: lOS8
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Best Available Rates
      tags:
      - RatePlan
    get:
      description: This API allows to fetch Best Available rates for rate code(s).
        <p><strong>OperationId:</strong>getBestAvailableRates</p>
      operationId: getBestAvailableRates
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: The starting value of the date range.
        in: query
        name: startDay
        required: true
        schema:
          format: date
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: rateCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: endDay
        schema:
          format: date
          type: string
      - description: Allowed values for the days of week type.
        explode: true
        in: query
        name: daysOfWeek
        schema:
          items:
            enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Allowed values for length stay type.
        explode: true
        in: query
        name: lengthOfStay
        schema:
          items:
            enum:
            - One
            - Two
            - Three
            - Four
            - Five
            - Six
            - Seven
            - Eight
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/getBestAvailableRatesDetails'
          description: Response for validating a coupon.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BestAvailableRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Best Available Rates
      tags:
      - RatePlan
    post:
      description: This API allows to create Best Available rates for rate code(s).
        <p><strong>OperationId:</strong>postBestAvailableRates</p>
      operationId: postBestAvailableRates
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postBestAvailableRates_request'
        description: Request to create best available rates for rate code(s)
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create a Best Available Rates
      tags:
      - RatePlan
      x-codegen-request-body-name: createBestAvailableRates
  /hotels/{hotelId}/negotiatedRates:
    get:
      description: This API allows you to fetch negotiated rates and profile for a
        given hotel id. <p><strong>OperationId:</strong>getNegotiatedRates</p>
      operationId: getNegotiatedRates
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Start Date.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: End Date.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Inactive negotiated rates.
        in: query
        name: includeInactiveNegotiatedRates
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: fetchInstructionsLimit
        schema:
          type: integer
      - description: Simple type for negotiated rates instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Discounts
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/negotiatedRates'
          description: Response object for fetching negotiated rates and profile discounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: NegotiatedRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Get negotiated rates and profiles '
      tags:
      - RatePlan
    post:
      description: This API allows you to create negotiated rate for a given profile.
        <p><strong>OperationId:</strong>postNegotiatedRates</p>
      operationId: postNegotiatedRates
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postNegotiatedRates_request'
        description: Request object for creating negotiated rates. Also this object
          creates new profile discounts for given negotiated rates.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create negotiated rates '
      tags:
      - RatePlan
      x-codegen-request-body-name: negotiatedRates
  /hotels/{hotelId}/negotiatedRates/{rateCode}:
    put:
      description: This API allows you to update negotiated rate for a given profile.
        <p><strong>OperationId:</strong>putNegotiatedRates</p>
      operationId: putNegotiatedRates
      parameters:
      - description: Rate Plan Code.
        in: path
        name: rateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postNegotiatedRates_request'
        description: Request object for changing negotiated rates. This object can
          be used to manage the negotiated rates and profile discounts. Profile discounts
          can be created/updated/deleted.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/negotiatedRatesDetails'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change negotiated rates '
      tags:
      - RatePlan
      x-codegen-request-body-name: negotiatedRates
  /hotels/{hotelId}/negotiatedRates/{rateCode}/profiles:
    get:
      description: This API allows you to fetch a Rate Plan and Profile for given
        hotel id and negotiated rate code. <p><strong>OperationId:</strong>getNegotiatedRatesForGivenHotelAndRate</p>
      operationId: getNegotiatedRatesForGivenHotelAndRate
      parameters:
      - description: Rate Plan Code.
        in: path
        name: rateCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Start Date.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: End Date.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Inactive negotiated rates.
        in: query
        name: includeInactiveNegotiatedRates
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: fetchInstructionsLimit
        schema:
          type: integer
      - description: Simple type for negotiated rates instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Discounts
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/negotiatedRates'
          description: Response object for fetching negotiated rates and profile discounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: NegotiatedRatesForGivenHotelAndRate not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Negotiated Rates
      tags:
      - RatePlan
  /hotels/{hotelId}/packageGroups:
    get:
      description: This API allows you to fetch package group. <p><strong>OperationId:</strong>getPackageGroups</p>
      operationId: getPackageGroups
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Package code or group to be searched.
        in: query
        name: code
        schema:
          type: string
      - description: The description or a part of the description based on which results
          should be filtered.
        in: query
        name: descriptionWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packageGroupsInfo'
          description: Response object to fetch package groups.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PackageGroups not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get package groups
      tags:
      - RatePlan
  /hotels/{hotelId}/packages/{packageCode}:
    get:
      description: This API allows you to fetch package details for a given package.
        <p><strong>OperationId:</strong>getPackage</p>
      operationId: getPackage
      parameters:
      - description: Package Code.
        in: path
        name: packageCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for package instructions that can be used in requests
          for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - PostingRules
            - CalculatedPrice
            - Items
            - Details
            - UsageDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packageInfo'
          description: Response object to fetch a package's complete details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Package not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get package for given package
      tags:
      - RatePlan
  /hotels/{hotelId}/packages/{packageCode}/rates:
    get:
      description: This API allows you to fetch rate plan codes associated for a package.
        <p><strong>OperationId:</strong>getPackageRates</p>
      operationId: getPackageRates
      parameters:
      - description: Package Code.
        in: path
        name: packageCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packageRates'
          description: Response object to fetch rate plan codes associated for a package.
            It contains package's short information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: PackageRates not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get package rates
      tags:
      - RatePlan
  /hotels/{hotelId}/rateCategories:
    post:
      description: This API can be used to Use this API to create a Rate Category
        e.g.  RACK. Only one rate category can be Use this API to created at a time.
        <p><strong>OperationId:</strong>postRateCategory</p>
      operationId: postRateCategory
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRateCategory_request'
        description: Request object for Creating a new Rate Category for a property.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Rate Category
      tags:
      - HotelConfig
      x-codegen-request-body-name: rateCategoryCriteria
  /hotels/{hotelId}/rateClasses:
    get:
      description: Use this API to get rate classes. <p><strong>OperationId:</strong>getRateClass</p>
      operationId: getRateClass
      parameters:
      - description: Unique ID of hotel.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - explode: true
        in: query
        name: rateClassListCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Description of the rate class.
        in: query
        name: description
        schema:
          type: string
      - description: Indicator which tells whether inactive rate class to be included
          or not.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/rateClassDetails'
          description: Response for fetch rate classes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RateClass not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get rate classes
      tags:
      - HotelConfig
  /hotels/{hotelId}/ratePlans:
    post:
      description: Use this API you to get Rate Plans for a given hotel.<p><strong>OperationId:</strong>postRatePlan</p>
      operationId: postRatePlan
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRatePlan_request'
        description: Request object to create rate plan.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create rate plans
      tags:
      - RatePlan
      x-codegen-request-body-name: ratePlan
  /hotels/{hotelId}/ratePlans/{ratePlanCode}:
    get:
      description: This API allows you to fetch Rate Plan for a given hotel id and
        Rate Plan Code. <p><strong>OperationId:</strong>getRatePlan</p>
      operationId: getRatePlan
      parameters:
      - description: Rate Plan Code.
        in: path
        name: ratePlanCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for Rate plan codes instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - PrimaryDetails
            - TransactionDetails
            - Packages
            - RateCommission
            - NegotiatedProfiles
            - RateControls
            - RoutingInstructions
            - AccessExclusions
            - ApprovalNotes
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ratePlanInfo'
          description: Response object to fetch rate plan's complete details.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RatePlan not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get rate plan
      tags:
      - RatePlan
  /hotels/{hotelId}/ratePlans/{ratePlanCode}/schedules:
    delete:
      description: Use this API to delete Rate Plan schedules.<p><strong>OperationId:</strong>deleteRatePlanSchedules</p>
      operationId: deleteRatePlanSchedules
      parameters:
      - description: Rate Plan Code.
        in: path
        name: ratePlanCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: ratePlanScheduleIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete rate plan schedule
      tags:
      - RatePlan
    get:
      description: "Use this API to get a rate plan&apos;s pricing schedules. The\
        \ information includes the date range and room types for which the price is\
        \ valid, rate amounts for multiple persons, and associated packages.<p><strong>OperationId:</strong>getRatePlanSchedules</p>"
      operationId: getRatePlanSchedules
      parameters:
      - description: Rate Plan Code.
        in: path
        name: ratePlanCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Exclude the List of Pricing Schedule Packages from the response.
        in: query
        name: excludeRatePlanPackage
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: tierId
        schema:
          maximum: 5
          minimum: 1
          type: integer
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: ratePlanScheduleId
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: ratePlanScheduleIdType
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: Room Type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Class.
        explode: true
        in: query
        name: roomClass
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include inactive rate schedules in the fetch result.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ratePlanSchedulesInfo'
          description: Response object to fetch rate plan schedules.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RatePlanSchedules not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get rate plan schedules
      tags:
      - RatePlan
    post:
      description: This API allows you to create Rate Plan schedules. <p><strong>OperationId:</strong>postRatePlanSchedules</p>
      operationId: postRatePlanSchedules
      parameters:
      - description: Rate Plan Code.
        in: path
        name: ratePlanCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRatePlanSchedules_request'
        description: Request object to create rate plan schedules.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create rate plan schedules
      tags:
      - RatePlan
      x-codegen-request-body-name: ratePlanSchedulesToCreate
    put:
      description: Use this API to  update Rate Plan pricing schedules.<p><strong>OperationId:</strong>putRatePlanSchedules</p>
      operationId: putRatePlanSchedules
      parameters:
      - description: Rate Plan Code.
        in: path
        name: ratePlanCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putRatePlanSchedules_request'
        description: Request object to change rate plan schedules.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change rate plan schedules
      tags:
      - RatePlan
      x-codegen-request-body-name: ratePlanSchedules
  /packages:
    get:
      description: Use this API you to get configured packages for a hotel.<p><strong>OperationId:</strong>getPackages</p>
      operationId: getPackages
      parameters:
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Hotel code.
        explode: true
        in: query
        name: hotelId
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: packageCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The description or a part of the description based on which results
          should be filtered.
        in: query
        name: descriptionWildCard
        schema:
          type: string
      - description: Start Date for pricing schedule.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: End Date for pricing schedule.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Number of adults for pricing schedule calculation.
        in: query
        name: adults
        schema:
          type: integer
      - description: Number of children for pricing schedule calculation.
        in: query
        name: children
        schema:
          type: integer
      - description: Number of children classified under the first Age Qualifying
          Group(Child Bucket#1).
        in: query
        name: bucket1Count
        schema:
          type: integer
      - description: Number of children classified under the second Age Qualifying
          Group(Child Bucket#2).
        in: query
        name: bucket2Count
        schema:
          type: integer
      - description: Number of children classified under the third Age Qualifying
          Group(Child Bucket#3).
        in: query
        name: bucket3Count
        schema:
          type: integer
      - description: Number of children classified under the fourth Age Qualifying
          Group(Child Bucket#4).
        in: query
        name: bucket4Count
        schema:
          type: integer
      - description: Number of children classified under the fifth Age Qualifying
          Group(Child Bucket#5).
        in: query
        name: bucket5Count
        schema:
          type: integer
      - description: Indicates if Group Packages will be fetched.
        in: query
        name: includeGroup
        schema:
          type: boolean
      - description: "Indicates if Only Sell Separate Packages will be fetched, if\
          \ not specified, it will ignore the criteria."
        in: query
        name: sellSeparate
        schema:
          type: boolean
      - description: "Indicates if Only Ticket Posting Rhythm will be fetched, if\
          \ not specified, it will ignore the criteria."
        in: query
        name: ticketPostingRhythm
        schema:
          type: boolean
      - description: Simple type for package instructions that can be used in requests
          for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Header
            - PostingRules
            - CalculatedPrice
            - Items
            - Details
            - UsageDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/packagesInfo'
          description: Response object to fetch list of packages.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Packages not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Packages
      tags:
      - RatePlan
  /profiles/{profileId}/negotiatedRates:
    get:
      description: This API allows you to fetch negotiated Rates for a given profile.
        <p><strong>OperationId:</strong>getNegotiatedRatesForGivenProfile</p>
      operationId: getNegotiatedRatesForGivenProfile
      parameters:
      - description: Unique ID that identifies a single hotel property.
        in: path
        name: profileId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Start Date.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: End Date.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Hotel code associated to the hotel
        in: query
        name: hotelCode
        schema:
          type: string
      - description: Rate Plan Code associated with the rate
        in: query
        name: ratePlanCode
        schema:
          type: string
      - description: Inactive negotiated rates.
        in: query
        name: includeInactiveNegotiatedRates
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: fetchInstructionsLimit
        schema:
          type: integer
      - description: Simple type for negotiated rates instructions that can be used
          in requests for partial operations.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Discounts
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/negotiatedRates'
          description: Response object for fetching negotiated rates and profile discounts.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: NegotiatedRatesForGivenProfile not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get negotiated rate details for given profile
      tags:
      - RatePlan
  /ratePlans:
    get:
      description: Use this API to get configured Rate Plans for a property and filter
        this by search criteria.<p><strong>OperationId:</strong>getRatePlans</p>
      operationId: getRatePlans
      parameters:
      - description: Hotel code.
        explode: true
        in: query
        name: hotelId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates whether rate plan short and long information should
          be included in the fetched results.
        in: query
        name: includeRateInformation
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Rate Plan code.
        explode: true
        in: query
        name: ratePlanCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Rate category of the rate plan.
        explode: true
        in: query
        name: rateCategory
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Sell date of the rate plan.
        in: query
        name: sellDate
        schema:
          format: date
          type: string
      - description: Display set for the rate plan.
        in: query
        name: displaySet
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: id
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
          Refer to OpenTravel Code List Unique ID Type (UIT).
        in: query
        name: type
        schema:
          type: string
      - explode: true
        in: query
        name: attributeName
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: orderType
        schema:
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Include or not include inactive rate codes.
        in: query
        name: includeInactive
        schema:
          type: boolean
      - description: Indicates to only fetch rate plans flagged as Day Use.
        in: query
        name: dayUseOnly
        schema:
          type: boolean
      - description: Indicates that the Rate Plan is approved for selling.
        in: query
        name: approvalStatus
        schema:
          enum:
          - NewUnapproved
          - ChangedUnapproved
          - Rejected
          - Approved
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner’s Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ratePlansSummary'
          description: Response object to fetch rate plans summary information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RatePlans not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get rate plans
      tags:
      - RatePlan
components:
  parameters:
    authKey:
      description: Bearer token that needs to be passed which is generated post user
        authentication
      in: header
      name: authorization
      required: true
      schema:
        type: string
    x-app-key:
      description: Client or Partner’s Application Key
      in: header
      name: x-app-key
      required: true
      schema:
        pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
        type: string
    x-hotelid:
      description: Mandatory parameter to identify the hotel code where the end user
        is logged in
      in: header
      name: x-hotelid
      required: true
      schema:
        type: string
    x-externalsystem:
      description: External system code.
      example: EXTERNALSYSTEMCODE
      in: header
      name: x-externalsystem
      schema:
        maxLength: 80
        type: string
    Accept-Language:
      description: Language code
      in: header
      name: Accept-Language
      schema:
        type: string
    x-hubid:
      description: x-hubid is a logical grouping of multiple properties that allows
        api consumers to manage data from a group of properties. This x-hubid is a
        valid list of hub codes configured in OPERA to which the user has access.
        Rest APIs without hotelId in the operation path can support hub level integration
        using x-hubid
      in: header
      name: x-hubid
      schema:
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Bad Request
    "401":
      content: {}
      description: Unauthorized
    "403":
      content: {}
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: Resource not found
    "405":
      content: {}
      description: Method not allowed
    "406":
      content: {}
      description: Not acceptable.
    "413":
      content: {}
      description: Request Entity Too Large
    "414":
      content: {}
      description: Request URI Too Large
    "415":
      content: {}
      description: Unsupported Media Type
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exceptionDetailType'
      description: System Error
    "502":
      content: {}
      description: Bad Gateway
    "503":
      content: {}
      description: Service Unavailable
  schemas:
    displaySetsDetails:
      description: Response object for fetching Display Sets.
      properties:
        displaySets:
          description: List of Display Sets.
          items:
            $ref: '#/components/schemas/displaySetType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    displaySetsType:
      description: List of Display Sets.
      items:
        $ref: '#/components/schemas/displaySetType'
      maxItems: 4000
      type: array
    displaySetType:
      description: Contains Common Master configuration detail.
      properties:
        code:
          description: Common Master unique code.
          maxLength: 40
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        displayOrder:
          description: Common Master record sequence number.
          type: number
        inactive:
          description: Determines whether this code is inactive or not.
          type: boolean
        protected:
          description: Determines whether this code is protected from deleting and
            making inactive
          type: boolean
      type: object
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          description: Language code for the translation.
          items:
            $ref: '#/components/schemas/translationsTextType_inner'
          maxItems: 4000
          type: array
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        value:
          description: Property Value
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      required:
      - title
      - type
      title: Error Detail
      type: object
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
      type: object
    getBestAvailableRatesDetails:
      properties:
        bestAvailableRatesList:
          $ref: '#/components/schemas/bestAvailableRatesListType'
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bestAvailableRatesListType:
      description: The list of best availabe rates for rate code(s)
      properties:
        bestAvailableRates:
          description: Collection of best available rates for rate code(s)
          items:
            $ref: '#/components/schemas/bestAvailableRateType'
          maxItems: 4000
          type: array
        masterInfoList:
          description: The list of references of rate code selected as best available
            rates
          items:
            $ref: '#/components/schemas/masterInfo'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for which best available rates will be considered.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    bestAvailableRateType:
      description: The list of best availabe rates for rates code(s).
      properties:
        rateCode:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        lengthOfStay:
          description: Best available rate length of stay
          type: integer
        date:
          description: Best available rate date available
          format: date
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    masterInfo:
      description: The reference to the rate codes selected as best availabe rates
      properties:
        rate:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    createBestAvailableRates:
      description: Request to create best available rates for rate code(s)
      properties:
        bestAvailableRates:
          $ref: '#/components/schemas/bestAvailableRatesType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    bestAvailableRatesType:
      description: The best available rate for rate code(s)
      properties:
        hotelId:
          description: Hotel Code for Best Available Rate
          maxLength: 20
          minLength: 0
          type: string
        rateCode:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        duration:
          $ref: '#/components/schemas/bestAvailableRatesType_duration'
        lengthOfStay:
          $ref: '#/components/schemas/bestAvailableRatesType_lengthOfStay'
      type: object
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    timeSpanDaysOfWeekType:
      description: Container for Time span with days of week.
      properties:
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        duration:
          type: string
      type: object
    baseType:
      description: "Simple type for base type, flat or differential."
      enum:
      - Flat
      - Differential
      type: string
    roomTypeListType:
      description: Room Type.
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    rateByAgeBucketsType:
      description: Rate amount by age bucket.
      items:
        $ref: '#/components/schemas/rateByAgeBucketType'
      maxItems: 3
      type: array
    rateByAgeBucketType:
      description: Rate amount by age bucket.
      properties:
        rateAmount:
          description: Rate amount by age bucket.
          type: number
        minimumAge:
          description: Minimum age for age bucket.
          type: integer
        maximumAge:
          description: Maximum age for age bucket.
          type: integer
      type: object
    negotiatedRates:
      description: Response object for fetching negotiated rates and profile discounts.
      properties:
        negotiatedRates:
          description: List of Negotiated rates to be maintained.
          items:
            $ref: '#/components/schemas/negotiatedRateType'
          maxItems: 4000
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    negotiatedRatesType:
      description: List of Negotiated rates to be maintained.
      items:
        $ref: '#/components/schemas/negotiatedRateType'
      maxItems: 4000
      type: array
    negotiatedRateType:
      description: Negotiated rate details
      properties:
        negotiatedProfile:
          description: Collection of Negotiated profiles.
          items:
            $ref: '#/components/schemas/negotiatedProfileType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    negotiatedProfileType:
      description: Profile details
      properties:
        profileIdList:
          description: Unique Id that references an object uniquely in the system.
          items:
            $ref: '#/components/schemas/uniqueID_Type'
          maxItems: 4000
          type: array
        profileName:
          $ref: '#/components/schemas/profileNameType'
        rateInfoList:
          description: collection of Negotiated rates.
          items:
            $ref: '#/components/schemas/negRateAccessType'
          maxItems: 4000
          type: array
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileNameType:
      description: This provides name information for a person.
      properties:
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    negRateAccessType:
      description: Details of Negotiated rate.
      properties:
        commissionCode:
          description: Commission code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        negotiatedRateOrder:
          description: Sequence for the negotiated rate.
          type: integer
        newTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        discounts:
          description: List of discounts for the negotiated rate.
          items:
            $ref: '#/components/schemas/profileDiscountType'
          maxItems: 4000
          type: array
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    profileDiscountType:
      description: Discount details for a profile.
      properties:
        dateRangeDetails:
          $ref: '#/components/schemas/timeSpanDaysOfWeekType'
        discAmount:
          $ref: '#/components/schemas/profileDiscountType_discAmount'
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
            Refer to OpenTravel Code List Unique ID Type (UIT).
          maxLength: 20
          minLength: 0
          type: string
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
      type: object
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    negotiatedRatesDetails:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    packageGroupsInfo:
      description: Response object to fetch package groups.
      properties:
        packageGroupList:
          $ref: '#/components/schemas/packageGroupsInfo_packageGroupList'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelPackageGroupsType:
      properties:
        packageGroup:
          description: Information about the each package group.
          items:
            $ref: '#/components/schemas/packageGroupType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the packages.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    packageGroupType:
      description: Information about a package group common to all usages.
      properties:
        description:
          description: Package group description.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          description: The short description of the package group.
          maxLength: 40
          minLength: 0
          type: string
        code:
          description: Package group Code.
          maxLength: 20
          minLength: 0
          type: string
        sellSeparate:
          description: Can Package group be sold separately?
          type: boolean
        webBookable:
          description: Is Package group web bookable?
          type: boolean
        membersList:
          description: Package Full Information
          items:
            $ref: '#/components/schemas/packageCodeType'
          maxItems: 4000
          type: array
      type: object
    packageCodeListType:
      description: Package Full Information
      items:
        $ref: '#/components/schemas/packageCodeType'
      maxItems: 4000
      type: array
    packageCodeType:
      properties:
        header:
          $ref: '#/components/schemas/packageCodeHeaderType'
        schedules:
          description: Package code price schedule details.
          items:
            $ref: '#/components/schemas/configPackageScheduleType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the packages.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Package Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Package Code Description.
          maxLength: 2000
          minLength: 0
          type: string
        group:
          description: Indicates if it is a Package Group or not.
          type: boolean
        ratePlanCode:
          description: Package Code specific to a rate plan code.
          maxLength: 20
          minLength: 0
          type: string
        adjustOverlappingRange:
          description: Flag to adjust the overlapping dates automatically. True will
            allow the system to adjust the overlapping dates automatically . False
            will not allow overlapping dates and throws error messages if overlapping
            dates are found
          type: boolean
        redemption:
          description: Flag to configure the package as Award Package so they can
            be redeemed for points on a reservation
          type: boolean
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    packageCodeHeaderType:
      properties:
        primaryDetails:
          $ref: '#/components/schemas/configPackagePrimaryDetailsType'
        transactionDetails:
          $ref: '#/components/schemas/configPackageTransactionType'
        postingAttributes:
          $ref: '#/components/schemas/configPostingAttributesType'
        usageDetails:
          $ref: '#/components/schemas/configPackageUsageDetailType'
      type: object
    configPackagePrimaryDetailsType:
      description: A Config Package Info type.
      properties:
        description:
          description: The description of the package.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          description: The short description of the package.
          maxLength: 2000
          minLength: 0
          type: string
        forecastGroup:
          description: The Forecast group package belongs to.
          maxLength: 20
          minLength: 0
          type: string
        arrangementCode:
          description: Arrangement Code.
          maxLength: 20
          minLength: 0
          type: string
        beginSellDate:
          description: Indicates the begin sell date of the package.
          format: date
          type: string
        endSellDate:
          description: Indicates the end sell date of the package.
          format: date
          type: string
      type: object
    configPackageTransactionType:
      description: A HotelPackageTransaction type.
      properties:
        allowance:
          description: "Package is marked as an allowance, in case charge is expected\
            \ back to the guest account from external interface eg. POS. which need\
            \ to be offset against a consumption allowance."
          type: boolean
        currency:
          description: The currency code for this package.
          maxLength: 20
          minLength: 0
          type: string
        postingType:
          description: "The posting frequency for this package, e.g., daily, arrival,\
            \ departure, etc."
          maxLength: 20
          minLength: 0
          type: string
        calculationRule:
          description: The price calculation rule for this package.
          maxLength: 80
          minLength: 0
          type: string
        packagePostingRules:
          $ref: '#/components/schemas/packagePostingRulesType'
      type: object
    packagePostingRulesType:
      properties:
        transactionCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        overageCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        profitCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        lossCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        alternateCodesList:
          description: The alternate transaction code that can be consumed by the
            guest in place of the transaction code.
          items:
            $ref: '#/components/schemas/packageTransactionCodeType'
          maxItems: 4000
          type: array
      type: object
    packageTransactionCodeType:
      properties:
        description:
          description: The description of the code.
          maxLength: 200
          minLength: 0
          type: string
        code:
          description: Posting / transaction code.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/amountDeterminationType'
      type: object
    amountDeterminationType:
      description: "Used to indicate if an amount is inclusive or exclusive of other\
        \ charges, such as taxes."
      enum:
      - Inclusive
      - Exclusive
      type: string
    configPostingAttributesType:
      description: A config Package posting attributes type.
      properties:
        addToRate:
          description: The package price is added to the room rate.
          type: boolean
        printSeparateLine:
          description: The package price is printed on separate line of the folio.
          type: boolean
        sellSeparate:
          description: Can the package be sold separate from rate plan code?
          type: boolean
        postNextDay:
          description: package charges will be posted next business day.
          type: boolean
        forecastNextDay:
          description: Package will be forecasted for consumption the next business
            day.
          type: boolean
        deliveryTimeRequired:
          description: Indicates whether a delivery time is required for the package.
          type: boolean
        webBookable:
          description: Can package be sold via Web channel.
          type: boolean
        formula:
          description: "The custom formula used for this package, if any."
          maxLength: 2000
          minLength: 0
          type: string
        formulaFunctionName:
          description: "The custom formula function name used for this package, if\
            \ any."
          maxLength: 2000
          minLength: 0
          type: string
        formulaFunctionArguments:
          description: Collection of function arguments and their corresponding values.
          items:
            $ref: '#/components/schemas/functionArgumentType'
          maxItems: 4000
          type: array
        startTime:
          description: Start time the package is valid.
          type: string
        endTime:
          description: End time the package is valid.
          type: string
        catering:
          description: Is package used for catering?
          type: boolean
        postingRhythm:
          $ref: '#/components/schemas/packagePostingRhythmType'
        priceCalculationRule:
          $ref: '#/components/schemas/packageCalculationRuleType'
        ticket:
          description: Indicates whether a package is configured as a ticket or not.
          type: boolean
        inventoryItems:
          description: Package Code Inventory Items type.
          items:
            $ref: '#/components/schemas/pkgInventoryItemType'
          maxItems: 4000
          type: array
        calculatedPrice:
          description: "Calculated Package Price based from Number of Adults, Children\
            \ and Calculation Rule."
          type: number
      type: object
    functionArgumentsType:
      description: Collection of function arguments and their corresponding values.
      items:
        $ref: '#/components/schemas/functionArgumentType'
      maxItems: 4000
      type: array
    functionArgumentType:
      description: This type provided details of a function argument and the value
        it holds.
      properties:
        name:
          description: Specifies the name of the function argument.
          maxLength: 200
          minLength: 0
          type: string
        value:
          description: Specifies the value held by the function argument.
          maxLength: 200
          minLength: 0
          type: string
        position:
          description: Specifies the position of the function argument in the argument
            list.
          type: integer
        dataType:
          description: Specifies the datatype of the function argument.
          maxLength: 40
          minLength: 0
          type: string
        required:
          description: Argument of the function mandatory or not.
          type: boolean
      type: object
    packagePostingRhythmType:
      description: Package Posting rhythm type.
      properties:
        everyXNightsStartingNightY:
          $ref: '#/components/schemas/packagePostingRhythmType_everyXNightsStartingNightY'
        certainNightsOfTheWeek:
          $ref: '#/components/schemas/packagePostingRhythmType_certainNightsOfTheWeek'
        customStaySchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customStaySchedule'
        customNightSchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customNightSchedule'
        type:
          $ref: '#/components/schemas/postingRhythmType'
      type: object
    postingRhythmType:
      description: Simple type for posting Rhythm types.
      enum:
      - EveryNight
      - ArrivalNight
      - EveryXNightsStartingNightY
      - CertainNightsOfTheWeek
      - LastNight
      - EveryNightExceptArrivalNight
      - EveryNightExceptLast
      - EveryNightExceptFirstAndLast
      - CustomStaySchedule
      - CustomNightSchedule
      - FloatingAllowancePerStay
      - TicketPosting
      type: string
    packageCalculationRuleType:
      description: Simple type for package caluculation rules.
      enum:
      - FlatRate
      - PerPerson
      - PerAdult
      - PerChild
      - PerRoom
      type: string
    pkgInventoryItemType:
      properties:
        articleNumber:
          description: Article Number of the inventory item.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the inventory item.
          maxLength: 200
          minLength: 0
          type: string
        quantity:
          description: Quantity of the inventory item allocated to the package.
          type: integer
        itemId:
          description: Identifier for the inventory item.
          type: integer
      type: object
    configPackageUsageDetailType:
      description: A Config Package Usage Detail type.
      properties:
        source:
          $ref: '#/components/schemas/productSourceType'
        usedInReservations:
          description: "Indicates if the package is used in, reserved or prospect\
            \ reservations."
          type: boolean
        usedInRates:
          description: Indicates if the package is used in any rate code.
          type: boolean
        usedInHouseReservations:
          description: Indicates if any checked in reservations are using this product.
          type: boolean
      type: object
    productSourceType:
      description: Sources of Products
      enum:
      - Reservation
      - RateHeader
      - RateDetail
      type: string
    configPackageScheduleType:
      description: A Hotel Package Schedule.
      properties:
        newTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        schedulePrices:
          description: Collection of price schedule for the package.
          items:
            $ref: '#/components/schemas/hotelPackageSchedulePriceType'
          maxItems: 4000
          type: array
        ratePlanCode:
          description: The rate plan code specific prices for the package (if any).
          maxLength: 20
          minLength: 0
          type: string
        minNights:
          description: Minimum number of nights that are required on a reservation
            to avail the package.
          type: integer
        maxNights:
          description: Maximum number of nights that are required on a reservation
            to avail the package.
          type: integer
        minPersons:
          description: Minimum number of persons that are required on a reservation
            to avail the package.
          type: integer
        maxPersons:
          description: Maximum number of persons that are required on a reservation
            to avail the package.
          type: integer
        newMinNights:
          description: New minimum number of nights that are required on a reservation
            to avail the package.
          type: integer
        newMaxNights:
          description: New maximum number of nights that are required on a reservation
            to avail the package.
          type: integer
        newMinPersons:
          description: New minimum number of persons that are required on a reservation
            to avail the package.
          type: integer
        newMaxPersons:
          description: New maximum number of persons that are required on a reservation
            to avail the package.
          type: integer
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
      type: object
    hotelPackageSchedulePriceType:
      description: A Hotel Package Schedule Pricing.
      properties:
        unitPrice:
          description: The price per unit of the package.
          type: number
        unitAllowance:
          description: The allowance per unit of the package.
          type: number
        unitPoints:
          description: Number of points per unit of the package
          type: number
        bucket:
          $ref: '#/components/schemas/packageChildBuckets'
      type: object
    packageChildBuckets:
      description: Simple type for package child buckets.
      enum:
      - Bucket1
      - Bucket2
      - Bucket3
      type: string
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    codeInfoType:
      description: ""
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        addtionalCodeInfo:
          description: Holds name of additional code information
          items:
            $ref: '#/components/schemas/addtionalCodeInfoType_inner'
          maxItems: 4000
          type: array
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        code:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    packageInfo:
      description: Request object to create a package.
      properties:
        packageCode:
          $ref: '#/components/schemas/packageCodeType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packageRates:
      description: Response object to fetch rate plan codes associated for a package.
        It contains package's short information.
      properties:
        ratePlanList:
          $ref: '#/components/schemas/packageRates_ratePlanList'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ratePlanShortInfoType:
      description: The Rate plan code information.
      properties:
        primaryDetails:
          $ref: '#/components/schemas/ratePlanPrimaryDetailsType'
        classifications:
          $ref: '#/components/schemas/ratePlanClassificationsType'
        descriptions:
          $ref: '#/components/schemas/ratePlanDescriptionsType'
        externalAttributes:
          $ref: '#/components/schemas/ratePlanExternalAttributesType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        discountAllowed:
          description: Indicates whether the rate plan is allowed to be discounted.
          type: boolean
      type: object
    ratePlanPrimaryDetailsType:
      properties:
        description:
          $ref: '#/components/schemas/translationTextType2000'
        startSellDate:
          description: Start sell date of the rate plan.
          format: date
          type: string
        endSellDate:
          description: End sell date of the rate plan.
          format: date
          type: string
        sellSequence:
          description: Sell Sequence for the rate plan.
          type: number
        privilegedRate:
          description: The particular rate code is marked as privileged making it
            restrictive on who can update information.
          type: boolean
        privilegedRateRestriction:
          description: The restrictions marked on the rate code are marked as privileged
            making it restrictive on who can update information.
          type: boolean
        baseType:
          $ref: '#/components/schemas/baseType'
        lockStatus:
          $ref: '#/components/schemas/rateCodeLockStatusType'
        approvalStatus:
          $ref: '#/components/schemas/ratePlanApprovalStatusType'
      type: object
    rateCodeLockStatusType:
      description: Indicates that the rate code is locked by the central system and
        cannot be edited at the property level.
      enum:
      - Unlocked
      - External
      - Property
      - Central
      type: string
    ratePlanApprovalStatusType:
      description: Indicates that the Rate Plan is approved for selling.
      enum:
      - NewUnapproved
      - ChangedUnapproved
      - Rejected
      - Approved
      type: string
    ratePlanClassificationsType:
      properties:
        rateCategory:
          description: Rate Category for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        displaySet:
          description: Display set for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        marketCode:
          description: Market code for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source code for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        rateGroup:
          description: Rate group for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    ratePlanDescriptionsType:
      description: "Info URL, Short and Long Info details of the rate plan."
      properties:
        shortInfo:
          $ref: '#/components/schemas/translationTextType2000'
        longInfo:
          $ref: '#/components/schemas/translationTextType2000'
        infoURL:
          description: Info URL is the location associated for more information about
            the rate plan.
          type: string
        rateInfoTemplate:
          description: "Rate information template which is configured for the hotel.\
            \ This value can be used to populate the LongInfo of this rate plan, if\
            \ desired."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    ratePlanExternalAttributesType:
      properties:
        marshaRateProgram:
          description: Rate Category for the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        price:
          $ref: '#/components/schemas/currencyAmountType'
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    rateAccessExclusionType:
      description: Access Exclusion information indicating the actions allowed under
        a HUB or Hotel for which the access exclusion is set.
      properties:
        sourceType:
          description: The type of source (CRO or Hotel code) for which the rate access
            exclusion is set.
          maxLength: 40
          minLength: 0
          type: string
        sourceValue:
          description: CRO or Hotel code value.
          maxLength: 80
          minLength: 0
          type: string
        allowModifyReservation:
          description: Allow to modify a reservation under this access exclusion.
          type: boolean
        allowCancelReservation:
          description: Allow to cancel a reservation under this access exclusion.
          type: boolean
        allowCreateReservation:
          description: Allow to create a reservation under this access exclusion.
          type: boolean
        inactive:
          description: The rate access exclusion is inactive
          type: boolean
        excludeFromAvailability:
          description: Exclude a specific rate from availability
          type: boolean
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
      type: object
    rateCategoryCriteria:
      description: Request object for Creating a new Rate Category for a property.
      properties:
        hotelRateCategory:
          $ref: '#/components/schemas/hotelRateCategoryType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelRateCategoryType:
      description: This type represents the rate category type.
      properties:
        rateCategoryDetails:
          $ref: '#/components/schemas/hotelRateCategoryType_rateCategoryDetails'
        rateCategory:
          description: Rate category Code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for a rate category.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    rateClassDetails:
      description: Response for fetch rate classes.
      properties:
        rateClasses:
          $ref: '#/components/schemas/rateClassDetails_rateClasses'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    rateClassesType:
      description: Collection of hotel rate classes.
      items:
        $ref: '#/components/schemas/rateClassType'
      maxItems: 4000
      type: array
    rateClassType:
      description: A hotel rate class.
      properties:
        description:
          description: Description of the rate class.
          maxLength: 2000
          minLength: 0
          type: string
        sequence:
          description: Display Sequence of the rate class.
          type: integer
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        rateClass:
          description: Code that uniquely identifies the rate class.
          maxLength: 20
          minLength: 0
          type: string
        rateCategories:
          description: List of Rate Categories with description.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code the rate class belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    simpleRateCategoriesType:
      description: List of Rate Categories with description.
      items:
        $ref: '#/components/schemas/codeDescriptionType'
      maxItems: 4000
      type: array
    scheduleRateAmountsType:
      properties:
        onePersonRate:
          description: Rate amount for one person.
          type: number
        twoPersonRate:
          description: Rate amount for two persons.
          type: number
        threePersonRate:
          description: Rate amount for three persons.
          type: number
        fourPersonRate:
          description: Rate amount for four persons.
          type: number
        fivePersonRate:
          description: Rate amount for five persons.
          type: number
        extraPersonRate:
          description: Rate amount for each extra person.
          type: number
        extraChildRate:
          description: Rate amount for each extra Child.
          type: number
        oneChildRate:
          description: Rate amount for one Child.
          type: number
        twoChildrenRate:
          description: Rate amount for two Children.
          type: number
        threeChildrenRate:
          description: Rate amount for three Children.
          type: number
        fourChildrenRate:
          description: Rate amount for four Children.
          type: number
        rateByAgeBuckets:
          description: Rate amount by age bucket.
          items:
            $ref: '#/components/schemas/rateByAgeBucketType'
          maxItems: 3
          type: array
        minimumChildrenForFreeStay:
          description: Minimum number of children needed to get free stay.
          type: integer
        pointsRequired:
          description: The number of award points required for applying this rate
            plan schedule.
          type: number
        overrideFloorAmount:
          description: true if floor amount needs to be override
          type: boolean
      type: object
    advancedBaseRateOffsetType:
      description: A Rate which is of Advanced Dynamic Base Rate can have rate schedule
        based on an offset from its Base Rate or BAR Rate.
      properties:
        offset:
          description: offset amount for the advanced dynamic base rate schedule.
          type: number
        flatOrPercentage:
          description: It signifies offset amount is of Flat or Percentage type. Valid
            Values are F/P.
          maxLength: 1
          minLength: 1
          type: string
        applyBar:
          description: Should this schedule be Advanced dynamically based on BAR rate.
          type: boolean
      type: object
    rateAmountBoundariesType:
      description: Rate amount boundaries for the rate plan schedule. Minimum and/or
        maximum rate amounts can be defined for one and/or two adults.
      properties:
        minimum:
          $ref: '#/components/schemas/rateAmountBoundaryType'
        maximum:
          $ref: '#/components/schemas/rateAmountBoundaryType'
      type: object
    rateAmountBoundaryType:
      description: Set of rate amounts for one and/or two adults. This set will represent
        either the minimum or maximum rate boundary.
      properties:
        onePersonRate:
          description: One person rate amount for the rate boundary.
          type: number
        twoPersonRate:
          description: Two person rate amount for the rate boundary.
          type: number
      type: object
    ratePlanScheduleClassificationsType:
      properties:
        marketCode:
          description: Market code for the rate schedule.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: Source code for the rate schedule.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    occupantThresholdPricingType:
      description: "Definition for creating pricing for a rate schedule, based on\
        \ occupants threshold level."
      properties:
        adults:
          $ref: '#/components/schemas/occupantThresholdPricingType_adults'
        children:
          $ref: '#/components/schemas/occupantThresholdPricingType_children'
        occupants:
          $ref: '#/components/schemas/occupantThresholdPricingType_occupants'
      type: object
    scheduleAdjustmentDetailsType:
      description: The list of adjustment codes for the rate plan schedule.
      items:
        $ref: '#/components/schemas/adjustmentDetailType'
      maxItems: 4000
      type: array
    adjustmentDetailType:
      description: The adjustment code details for the rate schedule.
      properties:
        overriddenAmount:
          description: "The amount with which the actual adjustment will be overridden.\
            \ if no amount is sent, default adjustment code's amount will be used."
          type: number
        adjustmentCode:
          description: the adjustment code that needs to be attached to the rate schedule.
          maxLength: 20
          minLength: 0
          type: string
        deleteAdjustment:
          description: Should this Adjustment code be deleted ?
          type: boolean
      type: object
    ratePackagesType:
      properties:
        packages:
          description: Rate Package Full Information
          items:
            $ref: '#/components/schemas/ratePackageCodeType'
          maxItems: 4000
          type: array
        packageGroups:
          description: Package Group full Information along with the members that
            belong to this Group.
          items:
            $ref: '#/components/schemas/ratePackageGroupType'
          maxItems: 4000
          type: array
      type: object
    ratePackageCodeListType:
      description: Rate Package Full Information
      items:
        $ref: '#/components/schemas/ratePackageCodeType'
      maxItems: 4000
      type: array
    ratePackageCodeType:
      description: Package code details applied to a rate plan.
      properties:
        header:
          $ref: '#/components/schemas/packageCodeHeaderType'
        schedules:
          description: Package code price schedule details.
          items:
            $ref: '#/components/schemas/configPackageScheduleType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the packages.
          maxLength: 20
          minLength: 0
          type: string
        code:
          description: Package Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Package Code Description.
          maxLength: 2000
          minLength: 0
          type: string
        group:
          description: Indicates if it is a Package Group or not.
          type: boolean
        ratePlanCode:
          description: Package Code specific to a rate plan code.
          maxLength: 20
          minLength: 0
          type: string
        adjustOverlappingRange:
          description: Flag to adjust the overlapping dates automatically. True will
            allow the system to adjust the overlapping dates automatically . False
            will not allow overlapping dates and throws error messages if overlapping
            dates are found
          type: boolean
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        scheduleExceptions:
          description: Package code schedule price exception for the rate plan.
          items:
            $ref: '#/components/schemas/configPackageScheduleType'
          maxItems: 4000
          type: array
        quantity:
          description: Quantity of the package code included in the rate plan.
          type: integer
      type: object
    ratePackageGroupType:
      description: Information about a package group common to all usages.
      properties:
        description:
          description: Package group description.
          maxLength: 2000
          minLength: 0
          type: string
        shortDescription:
          description: The short description of the package group.
          maxLength: 40
          minLength: 0
          type: string
        code:
          description: Package group Code.
          maxLength: 20
          minLength: 0
          type: string
        sellSeparate:
          description: Can Package group be sold separately?
          type: boolean
        webBookable:
          description: Is Package group web bookable?
          type: boolean
        packages:
          description: Rate Package Full Information
          items:
            $ref: '#/components/schemas/ratePackageCodeType'
          maxItems: 4000
          type: array
      type: object
    tierIDType:
      maximum: 5
      minimum: 1
      type: integer
    ratePlanInfo:
      description: Response object to fetch rate plan's complete details.
      properties:
        ratePlans:
          description: "Rate plan complete details such as primary details, classifications,\
            \ room types etc."
          items:
            $ref: '#/components/schemas/ratePlanType'
          type: array
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ratePlanType:
      description: The Rate plan code Details.
      properties:
        primaryDetails:
          $ref: '#/components/schemas/ratePlanPrimaryDetailsType'
        classifications:
          $ref: '#/components/schemas/ratePlanClassificationsType'
        transactionDetails:
          $ref: '#/components/schemas/ratePlanTransactionDetailsType'
        rateCommission:
          $ref: '#/components/schemas/ratePlanCommissionType'
        rateDeposit:
          $ref: '#/components/schemas/ratePlanDepositType'
        descriptions:
          $ref: '#/components/schemas/ratePlanDescriptionsType'
        roomTypeList:
          description: Details of each room type
          items:
            $ref: '#/components/schemas/rateRoomTypeDetailType'
          maxItems: 4000
          type: array
        ratePackages:
          $ref: '#/components/schemas/ratePackagesType'
        negotiatedRates:
          $ref: '#/components/schemas/ratePlanType_negotiatedRates'
        controls:
          $ref: '#/components/schemas/ratePlanControlsType'
        distribution:
          $ref: '#/components/schemas/ratePlanDistributionType'
        ratePlanCodeIndicators:
          description: Collection of lamp indicators.
          items:
            $ref: '#/components/schemas/indicatorType'
          maxItems: 4000
          type: array
        ratePlanBasedOnRates:
          description: Rate plan type based on rates.
          items:
            $ref: '#/components/schemas/ratePlanBasedOnRateType'
          maxItems: 2
          type: array
        ratePlanScheduleInfo:
          $ref: '#/components/schemas/ratePlanScheduleInfoType'
        approvalNotes:
          description: ""
          items:
            $ref: '#/components/schemas/ratePlanNoteType'
          maxItems: 4000
          type: array
        routingInstructions:
          $ref: '#/components/schemas/ratePlanRoutingInstructionsType'
        externalAttributes:
          $ref: '#/components/schemas/ratePlanExternalAttributesType'
        accessExclusions:
          description: List of access exclusions.
          items:
            $ref: '#/components/schemas/rateAccessExclusionType'
          maxItems: 4000
          type: array
        mobileCheckinAllowed:
          description: This is a placeholder element for future use. Functionality
            may not be available for the current implementation.
          type: boolean
        mobileCheckoutAllowed:
          description: This is a placeholder element for future use. Functionality
            may not be available for the current implementation.
          type: boolean
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan Code
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        supressRate:
          description: Is rate amount suppressed for the rate plan?
          type: boolean
        printRate:
          description: Is Rate amount printed on the reports for the rate plan?
          type: boolean
        discountAllowed:
          description: Is rate plan code discounted?
          type: boolean
        redemption:
          description: Is redemption allowed on the rate code?
          type: boolean
        externallyControlled:
          description: Is rate plan code externally controlled?
          type: boolean
        bARRate:
          description: Is rate plan code of BAR Rate type?
          type: boolean
        daily:
          description: Is rate plan code a daily rate?
          type: boolean
        tiered:
          description: Is rate plan code a tiered rate?
          type: boolean
        dayUse:
          description: Is rate plan code for day use?
          type: boolean
        dayType:
          description: Indicates if rate Calendar factors such as adder/multiplier
            should be used for price calculation.
          type: boolean
        complimentary:
          description: Is rate plan code complimentary?
          type: boolean
        houseUse:
          description: Is rate plan code for house use?
          type: boolean
        negotiated:
          description: "Is rate plan code only available as a negotiated rate that\
            \ must be associated with a guest, company, or travel agent profile ?"
          type: boolean
        ownerRate:
          description: Is rate plan code flagged as an owner rate plan? Owner rate
            plans have special functionality for no-shows depending on the Rolling
            Noshow Preference application setting.
          type: boolean
        membershipEligible:
          description: "Is rate plan code flagged as eligible for memberships? This\
            \ flag controls whether the guest stay, which this rate plan is attached\
            \ to, qualifies for point calculations for Frequent Flyer or Frequent\
            \ Guest programs. If the rate plan associated to the reservation has not\
            \ been flagged for Membership then the guest will not earn any points/miles\
            \ for their stay."
          type: boolean
        advancedDailyBase:
          description: Flag to identify if Rate Code is Advanced Daily Base Rate Code
          type: boolean
        advancedDailyRate:
          description: Flag to identify if Rate Code is Advanced Daily Rate
          type: boolean
        floorAmount:
          description: An amount that act as Floor value for Rate Plan.
          type: number
      type: object
    ratePlanTransactionDetailsType:
      properties:
        folioText:
          $ref: '#/components/schemas/translationTextType2000'
        transactionCode:
          description: Transaction code used by the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        roomTransactionCodes:
          description: Single transaction code and room type/class association.
          items:
            $ref: '#/components/schemas/ratePlanRoomTransactionCodeType'
          maxItems: 4000
          type: array
        packageTransactionCode:
          description: Package Transaction code used by the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Currency code used by the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        rateIncludesTax:
          description: Is tax included in the rate plan?
          type: boolean
        exchangePosting:
          $ref: '#/components/schemas/exchangePostingType'
        postingRhythm:
          $ref: '#/components/schemas/ratePlanPostingRhythmType'
        advancedPostingRhythms:
          description: Posting rhythm details for a rate plan containing Buy x Get
            y functionality.
          items:
            $ref: '#/components/schemas/ratePlanAdvancedPostingRhythmType'
          maxItems: 4000
          type: array
      type: object
    ratePlanRoomTransactionCodesType:
      description: Single transaction code and room type/class association.
      items:
        $ref: '#/components/schemas/ratePlanRoomTransactionCodeType'
      maxItems: 4000
      type: array
    ratePlanRoomTransactionCodeType:
      description: Transaction code associated to a room type or room class on a rate
        plan.
      properties:
        roomType:
          description: Room type which the transaction code is associated to.
          maxLength: 20
          minLength: 0
          type: string
        roomClass:
          description: Room class which the transaction code is associated to.
          maxLength: 20
          minLength: 0
          type: string
        transactionCode:
          description: Transaction code associated to the room type/room class.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    exchangePostingType:
      description: Fixed at Block.
      enum:
      - FixedAtCheckIn
      - FixedAtReservation
      - CurrentDate
      - FixedAtBlock
      type: string
    ratePlanPostingRhythmType:
      description: Rate Plan Posting rhythm type.
      properties:
        doNotPostEveryXNights:
          $ref: '#/components/schemas/ratePlanPostingRhythmType_doNotPostEveryXNights'
      type: object
    ratePlanAdvancedPostingRhythmsType:
      description: Posting rhythm details for a rate plan containing Buy x Get y functionality.
      items:
        $ref: '#/components/schemas/ratePlanAdvancedPostingRhythmType'
      maxItems: 4000
      type: array
    ratePlanAdvancedPostingRhythmType:
      description: Posting rhythm details for a rate plan containing Buy x Get y functionality.
      properties:
        code:
          description: Code identifying the posting rhythm within the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the posting rhythm offer.
          maxLength: 40
          minLength: 0
          type: string
        beginSellDate:
          description: Date which the posting rhythm becomes applicable.
          format: date
          type: string
        endSellDate:
          description: Date which the posting rhythm ceases to be applicable.
          format: date
          type: string
        requiredPaidNights:
          description: The number of nights which are required to be paid in order
            to receive free nights.
          type: integer
        eligibleFreeNights:
          description: The number of free nights which are eligible when the number
            of required paid nights has been met.
          type: integer
        repeatWithinStay:
          description: Indicates if the posting rhythm offer can be repeated more
            than once during the entire stay.
          type: boolean
        repeatWithinSellSegment:
          description: Indicates if the posting rhythm offer can be repeated more
            than once within a specific sell segment of the reservation.
          type: boolean
      type: object
    ratePlanCommissionType:
      properties:
        commissionCode:
          description: commission code used by the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        commissionPercentage:
          description: commission percentage used by the rate plan.
          type: number
        commissionAmount:
          description: commission amount used by the rate plan.
          type: number
      type: object
    ratePlanDepositType:
      properties:
        depositMaturityPreference:
          $ref: '#/components/schemas/depositMaturityPreferenceType'
      type: object
    depositMaturityPreferenceType:
      description: Fixed values for Deposite Maturity Preference affecting the rate
        code
      enum:
      - CheckIn
      - LastStayNight
      - LastDayAdvDeposit
      type: string
    rateRoomTypeListType:
      description: Details of each room type
      items:
        $ref: '#/components/schemas/rateRoomTypeDetailType'
      maxItems: 4000
      type: array
    rateRoomTypeDetailType:
      description: Details of single room type
      properties:
        code:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Text description for the room type
          maxLength: 2000
          minLength: 0
          type: string
        pseudo:
          description: True if room type will not be associated with physical rooms
            included in inventory
          type: boolean
        rateFloor:
          description: This is the minimum amount of which room can be sold
          type: number
      type: object
    ratePlanControlsType:
      properties:
        sell:
          $ref: '#/components/schemas/ratePlanSellControlsType'
        yield:
          $ref: '#/components/schemas/ratePlanYieldControlsType'
      type: object
    ratePlanSellControlsType:
      properties:
        minimumStayThrough:
          description: Minimum number of nights the guest has to stay through to consume
            this rate plan code.
          type: integer
        maximumStayThrough:
          description: Maximum number of nights the guest has to stay through to consume
            this rate plan code.
          type: integer
        minimumLengthOfStay:
          description: Minimum number of nights the guest has to stay to consume this
            rate plan code.
          type: integer
        maximumLengthOfStay:
          description: Maximum number of nights the guest has to stay to consume this
            rate plan code.
          type: integer
        minimumAdvanceBooking:
          description: Minimum number of days the guest has to book in advance to
            consume this rate plan code.
          type: integer
        maximumAdvanceBooking:
          description: Maximum number of days the guest has to book in advance to
            consume this rate plan code.
          type: integer
      type: object
    ratePlanYieldControlsType:
      properties:
        yieldable:
          $ref: '#/components/schemas/ratePlanYieldableType'
        yieldAsRatePlanCode:
          description: This rate plan code is to be yielded as Yield as Rate Plan
            Code (if any).
          maxLength: 20
          minLength: 0
          type: string
        yieldMarketCodeList:
          description: Yield Market Code for the rate plan code.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        rateBucket:
          description: The rate bucket the rate plan code belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    ratePlanYieldableType:
      description: Simple type for valid values for Yieldable element for the Rate
        plan code.
      enum:
      - Yieldable
      - NonYieldable
      - StayPattern
      type: string
    yieldMarketCodeListType:
      description: Yield Market Code for the rate plan code.
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    ratePlanDistributionType:
      properties:
        restrictionUpdate:
          description: Restriction updates for the rate plan to be sent to channels?
          type: boolean
        rateUpdate:
          description: Rate updates for the rate plan to be sent to channels?
          type: boolean
        regionalAvailability:
          description: Consider the rate plan for regional availability to be used
            by channels?
          type: boolean
        myFidelioUploadAllowed:
          description: Rate plan to be uploaded to MyFidleio and published.
          type: boolean
        channelRateMappingExists:
          description: Flag to indicate if Rate Plan is mapped to at least one Channel.
          type: boolean
        channelAllowed:
          description: Rate plan Code is available for channels.
          type: boolean
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    indicatorType:
      description: Lamp indicator Type.
      properties:
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
      type: object
    ratePlanBasedOnRatesType:
      description: Rate plan type based on rates.
      items:
        $ref: '#/components/schemas/ratePlanBasedOnRateType'
      maxItems: 2
      type: array
    ratePlanBasedOnRateType:
      description: "Base Rate type such as \"Base Rate\", \"Dynamic Base Rate\""
      properties:
        baseRate:
          $ref: '#/components/schemas/ratePlanBasedOnRateType_baseRate'
        dynamicBaseRate:
          $ref: '#/components/schemas/ratePlanBasedOnRateType_dynamicBaseRate'
        bARBasedRate:
          $ref: '#/components/schemas/ratePlanBasedOnRateType_bARBasedRate'
        advancedDynamicBaseRate:
          $ref: '#/components/schemas/advancedDynamicBaseRateType'
        basedOnRatePlanType:
          $ref: '#/components/schemas/basedOnRatePlanType'
      type: object
    ratePlanCodeListType:
      description: Rate Plan code.
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    advancedDynamicBaseRateType:
      description: Advanced Dynamic Base Rate type
      properties:
        basedOnRatePlan:
          description: Rate plan code used to Advanced Dynamically base the rate on.
          maxLength: 20
          minLength: 0
          type: string
        rounding:
          description: "Rounding style used for the calculated rate amounts. Valid\
            \ values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down\
            \ - Keep Decimal."
          maxLength: 1
          minLength: 0
          type: string
        compareWithRateSchedules:
          description: "While showing availability, do system need to compare the\
            \ static rates defined for the rate with Advanced dynamically computed\
            \ base rate pricing? If true, availability shows lower of the these two\
            \ pricing. If false, availability shows the advanced dynamically calculated\
            \ pricing."
          type: boolean
        advancedDependentRatePlans:
          description: Rate Plan code.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    basedOnRatePlanType:
      description: None means that rate is a standard rate. If sent in the changeRatePlan
        operation will delete any Based on Rate Plan Type.
      enum:
      - BaseRate
      - DynamicBaseRate
      - BARBasedRate
      - AdvancedDynamicBaseRate
      - None
      type: string
    ratePlanScheduleInfoType:
      description: This type contains summary details about the rate plan schedules
        such as Schedulesefined etc.
      properties:
        schedulesDefined:
          description: Returns true in case the rate plan has any schedules defined.
          type: boolean
      type: object
    ratePlanNotesType:
      description: ""
      items:
        $ref: '#/components/schemas/ratePlanNoteType'
      maxItems: 4000
      type: array
    ratePlanNoteType:
      description: Details of the Rate Plan Approval Note
      properties:
        noteId:
          $ref: '#/components/schemas/uniqueID_Type'
        note:
          description: Note Text
          maxLength: 4000
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    ratePlanRoutingInstructionsType:
      description: Routing fetchInstructions details for a rate plan.
      properties:
        profileType:
          $ref: '#/components/schemas/routingProfileTypeType'
        transactionCodes:
          description: List of Transaction codes info.
          items:
            $ref: '#/components/schemas/trxInfoType'
          maxItems: 4000
          type: array
        billingInstructions:
          description: Set of Billing Instruction codes.
          items:
            $ref: '#/components/schemas/billingInstructionType'
          maxItems: 4000
          type: array
      type: object
    routingProfileTypeType:
      description: Profile Types available for routing instructions.
      enum:
      - Agent
      - Company
      - Contact
      - Source
      type: string
    ratePlan:
      description: Request object to create rate plan.
      properties:
        ratePlan:
          $ref: '#/components/schemas/ratePlanType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ratePlanSchedulesInfo:
      description: Response object to fetch rate plan schedules.
      properties:
        ratePlanScheduleList:
          $ref: '#/components/schemas/ratePlanScheduleListType'
        ratePlanMasterInfo:
          $ref: '#/components/schemas/ratePlanMasterInfoType'
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ratePlanScheduleListType:
      properties:
        ratePlanSchedule:
          description: Rate plan schedule list.
          items:
            $ref: '#/components/schemas/ratePlanSchedulesType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate plan Code.
          maxLength: 20
          minLength: 0
          type: string
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    ratePlanSchedulesType:
      properties:
        ratePlanScheduleId:
          $ref: '#/components/schemas/uniqueID_Type'
        ratePlanScheduleDetail:
          $ref: '#/components/schemas/ratePlanScheduleDetailType'
      type: object
    ratePlanScheduleDetailType:
      description: Details of rate plan schedule including room type list and days
        of week of the schedule.
      properties:
        rateAmounts:
          $ref: '#/components/schemas/scheduleRateAmountsType'
        advancedBaseRateOffset:
          $ref: '#/components/schemas/advancedBaseRateOffsetType'
        rateAmountBoundaries:
          $ref: '#/components/schemas/rateAmountBoundariesType'
        classifications:
          $ref: '#/components/schemas/ratePlanScheduleClassificationsType'
        occupantThresholdPricing:
          $ref: '#/components/schemas/occupantThresholdPricingType'
        adjustmentDetails:
          description: The list of adjustment codes for the rate plan schedule.
          items:
            $ref: '#/components/schemas/adjustmentDetailType'
          maxItems: 4000
          type: array
        rateSchedulePackages:
          $ref: '#/components/schemas/ratePackagesType'
        tierID:
          maximum: 5
          minimum: 1
          type: integer
        seasonCode:
          description: "Season code attached to the rate plan schedule that defines\
            \ the start and end dates. When creating a rate plan schedule, if a season\
            \ code is provided the start and end dates will be ignored. These values\
            \ will be pulled from the season code record."
          maxLength: 20
          minLength: 0
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        roomTypeList:
          description: Room Type.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        advancedDailyBaseRatePlanCode:
          description: The Base Rate Plan Code which will be used to look up for and
            configure the Pricing Schedule for the main Rate Plan Code
          maxLength: 20
          minLength: 0
          type: string
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    ratePlanMasterInfoType:
      description: The Rate plan info type is used primarily by rate plan schedules
        to get basic rate plan header details.
      properties:
        primaryDetails:
          $ref: '#/components/schemas/ratePlanPrimaryDetailsType'
        roomTypeList:
          description: Details of each room type
          items:
            $ref: '#/components/schemas/rateRoomTypeDetailType'
          maxItems: 4000
          type: array
        ratePlanBasedOnRates:
          description: Rate plan type based on rates.
          items:
            $ref: '#/components/schemas/ratePlanBasedOnRateType'
          maxItems: 2
          type: array
        rateTiers:
          description: Details for each rate tier.
          items:
            $ref: '#/components/schemas/rateTierType'
          maxItems: 5
          type: array
        hotelId:
          description: Hotel Code of the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Plan Code of the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        tiered:
          description: Is Rate plan tiered?
          type: boolean
        daily:
          description: Is rate plan code a daily rate?
          type: boolean
        currencyCode:
          description: Currency code used by the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        bARRate:
          description: Is rate plan code of BAR Rate type?
          type: boolean
        complimentary:
          description: Is rate plan code Complimentary?
          type: boolean
        houseUse:
          description: Is rate plan code for House Use?
          type: boolean
        advancedDailyBase:
          description: Flag to identify if Rate Code is Advanced Daily Base Rate Code
          type: boolean
        floorAmount:
          description: An amount that act as Floor value for Rate Plan.
          type: number
      type: object
    rateTiersType:
      description: Details for each rate tier.
      items:
        $ref: '#/components/schemas/rateTierType'
      maxItems: 5
      type: array
    rateTierType:
      description: Details for a single rate tier.
      properties:
        startLOS:
          description: The starting length of stay days. This is a required field.
          type: integer
        endLOS:
          description: The ending length of stay days. This is not a required field.
          type: integer
        tierID:
          maximum: 5
          minimum: 1
          type: integer
      type: object
    ratePlanSchedules:
      description: Request object to change rate plan schedules.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanScheduleList:
          description: List of rate plan schedules to be updated.
          items:
            $ref: '#/components/schemas/ratePlanSchedulesType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    ratePlanSchedulesToCreate:
      description: Request object to create rate plan schedules.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanScheduleList:
          description: List of rate plan schedules to be created.
          items:
            $ref: '#/components/schemas/ratePlanScheduleDetailType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    packagesInfo:
      description: Response object to fetch list of packages.
      properties:
        packageCodesList:
          $ref: '#/components/schemas/packagesInfo_packageCodesList'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    hotelPackageCodesType:
      description: Depending on the fetch instructions either full details or basic
        details will be fetched
      properties:
        packageCodeShortInfo:
          description: Basic information about the each package code.
          items:
            $ref: '#/components/schemas/packageCodeShortInfoType'
          maxItems: 4000
          type: array
        packageCodeInfo:
          description: Full Details about each package code
          items:
            $ref: '#/components/schemas/packageCodeType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel code for the packages.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    packageCodeShortInfoType:
      properties:
        primaryDetails:
          $ref: '#/components/schemas/configPackagePrimaryDetailsType'
        transactionDetails:
          $ref: '#/components/schemas/configPackageTransactionType'
        postingAttributes:
          $ref: '#/components/schemas/configPostingAttributesType'
        code:
          description: Package Code.
          maxLength: 20
          minLength: 0
          type: string
        group:
          description: Indicates if it is a Package Group or not.
          type: boolean
        usedInAppSetting:
          description: Flag to check the package code is used in application setting.
          type: boolean
      type: object
    ratePlansSummary:
      description: Response object to fetch rate plans summary information.
      properties:
        ratePlanShortInfoList:
          $ref: '#/components/schemas/ratePlansSummary_ratePlanShortInfoList'
        masterInfoList:
          description: Refer to Generic common types document.
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        links:
          items:
            $ref: '#/components/schemas/instanceLink'
          type: array
        warnings:
          description: Used in conjunction with the Success element to define a business
            error.
          items:
            $ref: '#/components/schemas/warningType'
          maxItems: 4000
          type: array
      type: object
    postBestAvailableRates_request:
      allOf:
      - $ref: '#/components/schemas/createBestAvailableRates'
    postNegotiatedRates_request:
      allOf:
      - $ref: '#/components/schemas/negotiatedRates'
    postRateCategory_request:
      allOf:
      - $ref: '#/components/schemas/rateCategoryCriteria'
    postRatePlan_request:
      allOf:
      - $ref: '#/components/schemas/ratePlan'
    putRatePlanSchedules_request:
      allOf:
      - $ref: '#/components/schemas/ratePlanSchedules'
    postRatePlanSchedules_request:
      allOf:
      - $ref: '#/components/schemas/ratePlanSchedulesToCreate'
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
      type: object
    bestAvailableRatesType_duration:
      description: Days for which best available rates will be considered
      properties:
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    bestAvailableRatesType_lengthOfStay:
      description: Length of Stay for which best available rates will be considered
      properties:
        lOS1:
          description: Indicates Length of Stay 1 configuration.
          type: boolean
        lOS2:
          description: Indicates Length of Stay 2 configuration.
          type: boolean
        lOS3:
          description: Indicates Length of Stay 3 configuration.
          type: boolean
        lOS4:
          description: Indicates Length of Stay 4 configuration.
          type: boolean
        lOS5:
          description: Indicates Length of Stay 5 configuration.
          type: boolean
        lOS6:
          description: Indicates Length of Stay 6 configuration.
          type: boolean
        lOS7:
          description: Indicates Length of Stay 7 configuration.
          type: boolean
        lOS8:
          description: Indicates Length of Stay 8 configuration.
          type: boolean
      type: object
    profileDiscountType_discAmount:
      description: Discount amount value and type. Percentage or flat for a discounted
        rate.
      properties:
        amount:
          type: number
        flatOrPercentage:
          type: string
      type: object
    packageGroupsInfo_packageGroupList:
      description: List of package groups.
      properties:
        packageGroups:
          description: Package Groups of each hotel.
          items:
            $ref: '#/components/schemas/hotelPackageGroupsType'
          type: array
        allRowsFetched:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalRows:
          description: Total number of rows queried
          type: integer
      type: object
    packagePostingRhythmType_everyXNightsStartingNightY:
      description: Post the package every X nights Staring from Night Y.
      properties:
        startOnNightY:
          description: Starting night for consumption and posting prices.
          type: integer
        postEveryXNights:
          description: Occurance of nights when the package needs to be posted and
            consumed.
          type: integer
      type: object
    packagePostingRhythmType_certainNightsOfTheWeek:
      description: Post the package on certain nights of the week.
      properties:
        sunday:
          type: boolean
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
      type: object
    packagePostingRhythmType_customStaySchedule:
      description: "This user defined schedule lets you enter a posting rhythm over\
        \ a 14-day period, starting with the arrival date, by assigning the day (number)\
        \ within a guest stay for posting this package price."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
      type: object
    packagePostingRhythmType_customNightSchedule:
      description: "The start and end of the posting period is determined as follows:\
        \ If the package is attached to a rate code: The period starts with the date\
        \ when the rate code to which the package is attached becomes effective for\
        \ the stay. The period ends with the date of the last night for that rate\
        \ code (or the last night of the stay if the rate code remains in effect until\
        \ the departure date). If the package is attached separately to the reservation:\
        \ The Begin Date specified on the reservation when the package was attached\
        \ is the start date for the period. The End Date specified on the reservation\
        \ when the package was attached is the end date for the period. If no Begin\
        \ Date and/or End Date are specified when the package is attached to the reservation,\
        \ the Begin Date is assumed to be the arrival date and the End Date is assumed\
        \ to be the departure date of the reservation, irrespective of when the package\
        \ is attached to the reservation."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    packageRates_ratePlanList:
      description: Hotel code for which rates are associated.
      properties:
        ratePlan:
          items:
            $ref: '#/components/schemas/ratePlanShortInfoType'
          type: array
        hotelCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        packageCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hotelRateCategoryType_rateCategoryDetails:
      description: Begin date for the rate category.
      properties:
        beginDate:
          description: Begin date for the rate category.
          format: date
          type: string
        endDate:
          description: End date for the rate category.
          format: date
          type: string
        description:
          description: Description of rate category.
          maxLength: 200
          minLength: 0
          type: string
        rateClass:
          description: Active date of the room category.
          maxLength: 20
          minLength: 0
          type: string
        sellSequence:
          description: Indicates rate category sell sequence.
          type: number
      type: object
    rateClassDetails_rateClasses:
      description: Collection of rate classes.
      properties:
        rateClasses:
          description: Collection of hotel rate classes.
          items:
            $ref: '#/components/schemas/rateClassType'
          maxItems: 4000
          type: array
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    occupantThresholdPricingType_adults:
      description: Threshold for Adults in the room.
      properties:
        threshold:
          description: "Threshold value, after it is reached the corresponding amount\
            \ will be charged."
          type: integer
        amount:
          description: Amount to be charged after the threshold is reached.
          type: number
      type: object
    occupantThresholdPricingType_children:
      description: Threshold for Children in the room.
      properties:
        threshold:
          description: "Threshold value, after it is reached the corresponding amount\
            \ will be charged."
          type: integer
        amount:
          description: Amount to be charged after the threshold is reached.
          type: number
        excludeBucket1:
          description: "When rates are Defined by Age buckets, should the 1st buckets\
            \ children count be excluded from threshold pricing."
          type: boolean
        excludeBucket2:
          description: "When rates are Defined by Age buckets, should the 2nd buckets\
            \ children count be excluded from threshold pricing."
          type: boolean
        excludeBucket3:
          description: "When rates are Defined by Age buckets, should the 3rd buckets\
            \ children count be excluded from threshold pricing."
          type: boolean
      type: object
    occupantThresholdPricingType_occupants:
      description: Threshold for Occupants in the room.
      properties:
        threshold:
          description: "Threshold value, after it is reached the corresponding amount\
            \ will be charged."
          type: integer
        amount:
          description: Amount to be charged after the threshold is reached.
          type: number
      type: object
    ratePlanType_negotiatedRates:
      description: List of negotiated Profiles.
      properties:
        negotiatedRate:
          items:
            $ref: '#/components/schemas/negotiatedRateType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    ratePlanPostingRhythmType_doNotPostEveryXNights:
      description: Do not Post the Rate Code every X nights. This can be used to offer
        free nights after staying certain number of nights on the rate plan.
      properties:
        xNight:
          description: The night the rate plan is not supposed to be posted.
          maximum: 14
          minimum: 1
          type: integer
        postPackages:
          description: Post the packages on free nights if the packages posting rhythm
            falls on the night rate plan is not getting posted.
          type: boolean
      type: object
    ratePlanBasedOnRateType_baseRate:
      description: Base Rate type
      properties:
        basedOnRatePlan:
          description: Rate plan code used to base the rate on.
          maxLength: 20
          minLength: 0
          type: string
        baseAmount:
          description: Base Amount used for base rate calculation.
          type: number
        flatOrPercentage:
          description: Flat or Percentage (FLT/PCT) indicator.
          maxLength: 3
          minLength: 0
          type: string
        rounding:
          description: "Rounding style used for the calculated rate amounts. Valid\
            \ values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down\
            \ - Keep Decimal."
          maxLength: 1
          minLength: 0
          type: string
        dependentRatePlans:
          description: Rate Plan code.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    ratePlanBasedOnRateType_dynamicBaseRate:
      description: Dynamic Base Rate type
      properties:
        dynamicBasedOnRatePlan:
          description: Rate plan code used to Dynamically base the rate on.
          maxLength: 20
          minLength: 0
          type: string
        dynamicBaseAmount:
          description: Base Amount used for Dynamic base rate calculation.
          type: number
        flatOrPercentage:
          description: Flat or Percentage (FLT/PCT) indicator.
          maxLength: 3
          minLength: 0
          type: string
        rounding:
          description: "Rounding style used for the calculated rate amounts. Valid\
            \ values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down\
            \ - Keep Decimal."
          maxLength: 1
          minLength: 0
          type: string
        compareWithRateSchedules:
          description: "While showing availability, do system need to compare the\
            \ static rates defined for the rate with dynamically computed base rate\
            \ pricing? If true, availability shows lower of the these two pricing.\
            \ If false, availabilty shows the dynamically calucated pricing."
          type: boolean
        dependentRatePlans:
          description: Rate Plan code.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    ratePlanBasedOnRateType_bARBasedRate:
      description: Best Available Rate (BAR) Based Rate type
      properties:
        bARBaseAmount:
          description: Base Amount used for BAR based rate calculation.
          type: number
        flatOrPercentage:
          description: Flat or Percentage (FLT/PCT) indicator.
          maxLength: 3
          minLength: 0
          type: string
        rounding:
          description: "Rounding style used for the calculated rate amounts. Valid\
            \ values are U,D,N,C,F which means Up, Down, None, Up-Keep Decimal, Down\
            \ - Keep Decimal."
          maxLength: 1
          minLength: 0
          type: string
        compareWithRateSchedules:
          description: "While showing availability, do system need to compare the\
            \ static rates defined for the rate with dynamically computed BAR based\
            \ rate pricing? If true, availability shows lower of the these two pricing.\
            \ If false, availabilty shows the dynamically calucated pricing."
          type: boolean
        defaultToHighestBar:
          description: "While showing availability, in case all the BAR rates are\
            \ closed whether to calculate the rate amount based on highest BAR instead\
            \ of defaulting to its own rate schedule. If false, availability shows\
            \ rates from its own rate schedule."
          type: boolean
      type: object
    packagesInfo_packageCodesList:
      description: List of package codes.
      properties:
        packageCodes:
          description: Package Codes of each hotel.
          items:
            $ref: '#/components/schemas/hotelPackageCodesType'
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
      type: object
    ratePlansSummary_ratePlanShortInfoList:
      description: List of summary information for the rate plan code.
      properties:
        ratePlanShortInfo:
          description: List of summary information for the rate plan code.
          items:
            $ref: '#/components/schemas/ratePlanShortInfoType'
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        count:
          description: Total number of rows returned
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
      type: object
x-original-swagger-version: "2.0"
