/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the StrategyControlTypeRollingDaysRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StrategyControlTypeRollingDaysRange{}

// StrategyControlTypeRollingDaysRange Rolling control days from today (Start date rolling forward).
type StrategyControlTypeRollingDaysRange struct {
	// Rolling control days from today (Start date rolling forward).
	DaysInAdvanceFrom *int32 `json:"daysInAdvanceFrom,omitempty"`
	// Rolling control days from today (End date rolling forward).
	DaysInAdvanceTo *int32 `json:"daysInAdvanceTo,omitempty"`
}

// NewStrategyControlTypeRollingDaysRange instantiates a new StrategyControlTypeRollingDaysRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStrategyControlTypeRollingDaysRange() *StrategyControlTypeRollingDaysRange {
	this := StrategyControlTypeRollingDaysRange{}
	return &this
}

// NewStrategyControlTypeRollingDaysRangeWithDefaults instantiates a new StrategyControlTypeRollingDaysRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStrategyControlTypeRollingDaysRangeWithDefaults() *StrategyControlTypeRollingDaysRange {
	this := StrategyControlTypeRollingDaysRange{}
	return &this
}

// GetDaysInAdvanceFrom returns the DaysInAdvanceFrom field value if set, zero value otherwise.
func (o *StrategyControlTypeRollingDaysRange) GetDaysInAdvanceFrom() int32 {
	if o == nil || IsNil(o.DaysInAdvanceFrom) {
		var ret int32
		return ret
	}
	return *o.DaysInAdvanceFrom
}

// GetDaysInAdvanceFromOk returns a tuple with the DaysInAdvanceFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyControlTypeRollingDaysRange) GetDaysInAdvanceFromOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysInAdvanceFrom) {
		return nil, false
	}
	return o.DaysInAdvanceFrom, true
}

// HasDaysInAdvanceFrom returns a boolean if a field has been set.
func (o *StrategyControlTypeRollingDaysRange) HasDaysInAdvanceFrom() bool {
	if o != nil && !IsNil(o.DaysInAdvanceFrom) {
		return true
	}

	return false
}

// SetDaysInAdvanceFrom gets a reference to the given int32 and assigns it to the DaysInAdvanceFrom field.
func (o *StrategyControlTypeRollingDaysRange) SetDaysInAdvanceFrom(v int32) {
	o.DaysInAdvanceFrom = &v
}

// GetDaysInAdvanceTo returns the DaysInAdvanceTo field value if set, zero value otherwise.
func (o *StrategyControlTypeRollingDaysRange) GetDaysInAdvanceTo() int32 {
	if o == nil || IsNil(o.DaysInAdvanceTo) {
		var ret int32
		return ret
	}
	return *o.DaysInAdvanceTo
}

// GetDaysInAdvanceToOk returns a tuple with the DaysInAdvanceTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StrategyControlTypeRollingDaysRange) GetDaysInAdvanceToOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysInAdvanceTo) {
		return nil, false
	}
	return o.DaysInAdvanceTo, true
}

// HasDaysInAdvanceTo returns a boolean if a field has been set.
func (o *StrategyControlTypeRollingDaysRange) HasDaysInAdvanceTo() bool {
	if o != nil && !IsNil(o.DaysInAdvanceTo) {
		return true
	}

	return false
}

// SetDaysInAdvanceTo gets a reference to the given int32 and assigns it to the DaysInAdvanceTo field.
func (o *StrategyControlTypeRollingDaysRange) SetDaysInAdvanceTo(v int32) {
	o.DaysInAdvanceTo = &v
}

func (o StrategyControlTypeRollingDaysRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StrategyControlTypeRollingDaysRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DaysInAdvanceFrom) {
		toSerialize["daysInAdvanceFrom"] = o.DaysInAdvanceFrom
	}
	if !IsNil(o.DaysInAdvanceTo) {
		toSerialize["daysInAdvanceTo"] = o.DaysInAdvanceTo
	}
	return toSerialize, nil
}

type NullableStrategyControlTypeRollingDaysRange struct {
	value *StrategyControlTypeRollingDaysRange
	isSet bool
}

func (v NullableStrategyControlTypeRollingDaysRange) Get() *StrategyControlTypeRollingDaysRange {
	return v.value
}

func (v *NullableStrategyControlTypeRollingDaysRange) Set(val *StrategyControlTypeRollingDaysRange) {
	v.value = val
	v.isSet = true
}

func (v NullableStrategyControlTypeRollingDaysRange) IsSet() bool {
	return v.isSet
}

func (v *NullableStrategyControlTypeRollingDaysRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStrategyControlTypeRollingDaysRange(val *StrategyControlTypeRollingDaysRange) *NullableStrategyControlTypeRollingDaysRange {
	return &NullableStrategyControlTypeRollingDaysRange{value: val, isSet: true}
}

func (v NullableStrategyControlTypeRollingDaysRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStrategyControlTypeRollingDaysRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


