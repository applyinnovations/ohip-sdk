/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the CopyPackageCodesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyPackageCodesType{}

// CopyPackageCodesType Copy instructions for package codes.
type CopyPackageCodesType struct {
	// Provides information about the target hotel code where the source package code will be copied to, what the package code will be named under the target hotel code and the description of the package code under the target hotel code.
	CopyPackageCodeInfo []CopyPackageCodeInfoType `json:"copyPackageCodeInfo,omitempty"`
	// Indicator that tells whether the package pricing records should be copied or not.
	CopyPackagePricing *bool `json:"copyPackagePricing,omitempty"`
	// Source hotel code from where package code(s) have to be copied.
	SourceHotelCode *string `json:"sourceHotelCode,omitempty"`
}

// NewCopyPackageCodesType instantiates a new CopyPackageCodesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyPackageCodesType() *CopyPackageCodesType {
	this := CopyPackageCodesType{}
	return &this
}

// NewCopyPackageCodesTypeWithDefaults instantiates a new CopyPackageCodesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyPackageCodesTypeWithDefaults() *CopyPackageCodesType {
	this := CopyPackageCodesType{}
	return &this
}

// GetCopyPackageCodeInfo returns the CopyPackageCodeInfo field value if set, zero value otherwise.
func (o *CopyPackageCodesType) GetCopyPackageCodeInfo() []CopyPackageCodeInfoType {
	if o == nil || IsNil(o.CopyPackageCodeInfo) {
		var ret []CopyPackageCodeInfoType
		return ret
	}
	return o.CopyPackageCodeInfo
}

// GetCopyPackageCodeInfoOk returns a tuple with the CopyPackageCodeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyPackageCodesType) GetCopyPackageCodeInfoOk() ([]CopyPackageCodeInfoType, bool) {
	if o == nil || IsNil(o.CopyPackageCodeInfo) {
		return nil, false
	}
	return o.CopyPackageCodeInfo, true
}

// HasCopyPackageCodeInfo returns a boolean if a field has been set.
func (o *CopyPackageCodesType) HasCopyPackageCodeInfo() bool {
	if o != nil && !IsNil(o.CopyPackageCodeInfo) {
		return true
	}

	return false
}

// SetCopyPackageCodeInfo gets a reference to the given []CopyPackageCodeInfoType and assigns it to the CopyPackageCodeInfo field.
func (o *CopyPackageCodesType) SetCopyPackageCodeInfo(v []CopyPackageCodeInfoType) {
	o.CopyPackageCodeInfo = v
}

// GetCopyPackagePricing returns the CopyPackagePricing field value if set, zero value otherwise.
func (o *CopyPackageCodesType) GetCopyPackagePricing() bool {
	if o == nil || IsNil(o.CopyPackagePricing) {
		var ret bool
		return ret
	}
	return *o.CopyPackagePricing
}

// GetCopyPackagePricingOk returns a tuple with the CopyPackagePricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyPackageCodesType) GetCopyPackagePricingOk() (*bool, bool) {
	if o == nil || IsNil(o.CopyPackagePricing) {
		return nil, false
	}
	return o.CopyPackagePricing, true
}

// HasCopyPackagePricing returns a boolean if a field has been set.
func (o *CopyPackageCodesType) HasCopyPackagePricing() bool {
	if o != nil && !IsNil(o.CopyPackagePricing) {
		return true
	}

	return false
}

// SetCopyPackagePricing gets a reference to the given bool and assigns it to the CopyPackagePricing field.
func (o *CopyPackageCodesType) SetCopyPackagePricing(v bool) {
	o.CopyPackagePricing = &v
}

// GetSourceHotelCode returns the SourceHotelCode field value if set, zero value otherwise.
func (o *CopyPackageCodesType) GetSourceHotelCode() string {
	if o == nil || IsNil(o.SourceHotelCode) {
		var ret string
		return ret
	}
	return *o.SourceHotelCode
}

// GetSourceHotelCodeOk returns a tuple with the SourceHotelCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyPackageCodesType) GetSourceHotelCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceHotelCode) {
		return nil, false
	}
	return o.SourceHotelCode, true
}

// HasSourceHotelCode returns a boolean if a field has been set.
func (o *CopyPackageCodesType) HasSourceHotelCode() bool {
	if o != nil && !IsNil(o.SourceHotelCode) {
		return true
	}

	return false
}

// SetSourceHotelCode gets a reference to the given string and assigns it to the SourceHotelCode field.
func (o *CopyPackageCodesType) SetSourceHotelCode(v string) {
	o.SourceHotelCode = &v
}

func (o CopyPackageCodesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyPackageCodesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CopyPackageCodeInfo) {
		toSerialize["copyPackageCodeInfo"] = o.CopyPackageCodeInfo
	}
	if !IsNil(o.CopyPackagePricing) {
		toSerialize["copyPackagePricing"] = o.CopyPackagePricing
	}
	if !IsNil(o.SourceHotelCode) {
		toSerialize["sourceHotelCode"] = o.SourceHotelCode
	}
	return toSerialize, nil
}

type NullableCopyPackageCodesType struct {
	value *CopyPackageCodesType
	isSet bool
}

func (v NullableCopyPackageCodesType) Get() *CopyPackageCodesType {
	return v.value
}

func (v *NullableCopyPackageCodesType) Set(val *CopyPackageCodesType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyPackageCodesType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyPackageCodesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyPackageCodesType(val *CopyPackageCodesType) *NullableCopyPackageCodesType {
	return &NullableCopyPackageCodesType{value: val, isSet: true}
}

func (v NullableCopyPackageCodesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyPackageCodesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


