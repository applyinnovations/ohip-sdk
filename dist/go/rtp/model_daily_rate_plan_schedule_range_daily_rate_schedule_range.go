/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the DailyRatePlanScheduleRangeDailyRateScheduleRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyRatePlanScheduleRangeDailyRateScheduleRange{}

// DailyRatePlanScheduleRangeDailyRateScheduleRange Daily Rate schedules range operation request, contains information related to Daily rate schedules range update operation.
type DailyRatePlanScheduleRangeDailyRateScheduleRange struct {
	// The Base Rate Plan Code which will be used to look up for and configure the Pricing Schedule for the main Rate Plan Code
	AdvancedDailyBaseRatePlanCode *string `json:"advancedDailyBaseRatePlanCode,omitempty"`
	DateRange *TimeSpanDaysOfWeekType `json:"dateRange,omitempty"`
	HotelId *string `json:"hotelId,omitempty"`
	// Flag to indicate if the occupancy data is absolute or relative to the current value.
	IncrementFlag *bool `json:"incrementFlag,omitempty"`
	OccupantThresholdPricing *OccupantThresholdPricingType `json:"occupantThresholdPricing,omitempty"`
	RateAmounts *ScheduleRateAmountsType `json:"rateAmounts,omitempty"`
	RatePlanCode *string `json:"ratePlanCode,omitempty"`
	// List of room classes for which the range update has to be applied.
	RoomClasses []string `json:"roomClasses,omitempty"`
	// List of room types for which the range update has to be applied.
	RoomTypes []string `json:"roomTypes,omitempty"`
}

// NewDailyRatePlanScheduleRangeDailyRateScheduleRange instantiates a new DailyRatePlanScheduleRangeDailyRateScheduleRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyRatePlanScheduleRangeDailyRateScheduleRange() *DailyRatePlanScheduleRangeDailyRateScheduleRange {
	this := DailyRatePlanScheduleRangeDailyRateScheduleRange{}
	return &this
}

// NewDailyRatePlanScheduleRangeDailyRateScheduleRangeWithDefaults instantiates a new DailyRatePlanScheduleRangeDailyRateScheduleRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyRatePlanScheduleRangeDailyRateScheduleRangeWithDefaults() *DailyRatePlanScheduleRangeDailyRateScheduleRange {
	this := DailyRatePlanScheduleRangeDailyRateScheduleRange{}
	return &this
}

// GetAdvancedDailyBaseRatePlanCode returns the AdvancedDailyBaseRatePlanCode field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetAdvancedDailyBaseRatePlanCode() string {
	if o == nil || IsNil(o.AdvancedDailyBaseRatePlanCode) {
		var ret string
		return ret
	}
	return *o.AdvancedDailyBaseRatePlanCode
}

// GetAdvancedDailyBaseRatePlanCodeOk returns a tuple with the AdvancedDailyBaseRatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetAdvancedDailyBaseRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedDailyBaseRatePlanCode) {
		return nil, false
	}
	return o.AdvancedDailyBaseRatePlanCode, true
}

// HasAdvancedDailyBaseRatePlanCode returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasAdvancedDailyBaseRatePlanCode() bool {
	if o != nil && !IsNil(o.AdvancedDailyBaseRatePlanCode) {
		return true
	}

	return false
}

// SetAdvancedDailyBaseRatePlanCode gets a reference to the given string and assigns it to the AdvancedDailyBaseRatePlanCode field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetAdvancedDailyBaseRatePlanCode(v string) {
	o.AdvancedDailyBaseRatePlanCode = &v
}

// GetDateRange returns the DateRange field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetDateRange() TimeSpanDaysOfWeekType {
	if o == nil || IsNil(o.DateRange) {
		var ret TimeSpanDaysOfWeekType
		return ret
	}
	return *o.DateRange
}

// GetDateRangeOk returns a tuple with the DateRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetDateRangeOk() (*TimeSpanDaysOfWeekType, bool) {
	if o == nil || IsNil(o.DateRange) {
		return nil, false
	}
	return o.DateRange, true
}

// HasDateRange returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasDateRange() bool {
	if o != nil && !IsNil(o.DateRange) {
		return true
	}

	return false
}

// SetDateRange gets a reference to the given TimeSpanDaysOfWeekType and assigns it to the DateRange field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetDateRange(v TimeSpanDaysOfWeekType) {
	o.DateRange = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIncrementFlag returns the IncrementFlag field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetIncrementFlag() bool {
	if o == nil || IsNil(o.IncrementFlag) {
		var ret bool
		return ret
	}
	return *o.IncrementFlag
}

// GetIncrementFlagOk returns a tuple with the IncrementFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetIncrementFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.IncrementFlag) {
		return nil, false
	}
	return o.IncrementFlag, true
}

// HasIncrementFlag returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasIncrementFlag() bool {
	if o != nil && !IsNil(o.IncrementFlag) {
		return true
	}

	return false
}

// SetIncrementFlag gets a reference to the given bool and assigns it to the IncrementFlag field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetIncrementFlag(v bool) {
	o.IncrementFlag = &v
}

// GetOccupantThresholdPricing returns the OccupantThresholdPricing field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetOccupantThresholdPricing() OccupantThresholdPricingType {
	if o == nil || IsNil(o.OccupantThresholdPricing) {
		var ret OccupantThresholdPricingType
		return ret
	}
	return *o.OccupantThresholdPricing
}

// GetOccupantThresholdPricingOk returns a tuple with the OccupantThresholdPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetOccupantThresholdPricingOk() (*OccupantThresholdPricingType, bool) {
	if o == nil || IsNil(o.OccupantThresholdPricing) {
		return nil, false
	}
	return o.OccupantThresholdPricing, true
}

// HasOccupantThresholdPricing returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasOccupantThresholdPricing() bool {
	if o != nil && !IsNil(o.OccupantThresholdPricing) {
		return true
	}

	return false
}

// SetOccupantThresholdPricing gets a reference to the given OccupantThresholdPricingType and assigns it to the OccupantThresholdPricing field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetOccupantThresholdPricing(v OccupantThresholdPricingType) {
	o.OccupantThresholdPricing = &v
}

// GetRateAmounts returns the RateAmounts field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRateAmounts() ScheduleRateAmountsType {
	if o == nil || IsNil(o.RateAmounts) {
		var ret ScheduleRateAmountsType
		return ret
	}
	return *o.RateAmounts
}

// GetRateAmountsOk returns a tuple with the RateAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRateAmountsOk() (*ScheduleRateAmountsType, bool) {
	if o == nil || IsNil(o.RateAmounts) {
		return nil, false
	}
	return o.RateAmounts, true
}

// HasRateAmounts returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasRateAmounts() bool {
	if o != nil && !IsNil(o.RateAmounts) {
		return true
	}

	return false
}

// SetRateAmounts gets a reference to the given ScheduleRateAmountsType and assigns it to the RateAmounts field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetRateAmounts(v ScheduleRateAmountsType) {
	o.RateAmounts = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRatePlanCode() string {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret string
		return ret
	}
	return *o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRatePlanCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given string and assigns it to the RatePlanCode field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetRatePlanCode(v string) {
	o.RatePlanCode = &v
}

// GetRoomClasses returns the RoomClasses field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRoomClasses() []string {
	if o == nil || IsNil(o.RoomClasses) {
		var ret []string
		return ret
	}
	return o.RoomClasses
}

// GetRoomClassesOk returns a tuple with the RoomClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRoomClassesOk() ([]string, bool) {
	if o == nil || IsNil(o.RoomClasses) {
		return nil, false
	}
	return o.RoomClasses, true
}

// HasRoomClasses returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasRoomClasses() bool {
	if o != nil && !IsNil(o.RoomClasses) {
		return true
	}

	return false
}

// SetRoomClasses gets a reference to the given []string and assigns it to the RoomClasses field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetRoomClasses(v []string) {
	o.RoomClasses = v
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRoomTypes() []string {
	if o == nil || IsNil(o.RoomTypes) {
		var ret []string
		return ret
	}
	return o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) GetRoomTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given []string and assigns it to the RoomTypes field.
func (o *DailyRatePlanScheduleRangeDailyRateScheduleRange) SetRoomTypes(v []string) {
	o.RoomTypes = v
}

func (o DailyRatePlanScheduleRangeDailyRateScheduleRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyRatePlanScheduleRangeDailyRateScheduleRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdvancedDailyBaseRatePlanCode) {
		toSerialize["advancedDailyBaseRatePlanCode"] = o.AdvancedDailyBaseRatePlanCode
	}
	if !IsNil(o.DateRange) {
		toSerialize["dateRange"] = o.DateRange
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.IncrementFlag) {
		toSerialize["incrementFlag"] = o.IncrementFlag
	}
	if !IsNil(o.OccupantThresholdPricing) {
		toSerialize["occupantThresholdPricing"] = o.OccupantThresholdPricing
	}
	if !IsNil(o.RateAmounts) {
		toSerialize["rateAmounts"] = o.RateAmounts
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.RoomClasses) {
		toSerialize["roomClasses"] = o.RoomClasses
	}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	return toSerialize, nil
}

type NullableDailyRatePlanScheduleRangeDailyRateScheduleRange struct {
	value *DailyRatePlanScheduleRangeDailyRateScheduleRange
	isSet bool
}

func (v NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) Get() *DailyRatePlanScheduleRangeDailyRateScheduleRange {
	return v.value
}

func (v *NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) Set(val *DailyRatePlanScheduleRangeDailyRateScheduleRange) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyRatePlanScheduleRangeDailyRateScheduleRange(val *DailyRatePlanScheduleRangeDailyRateScheduleRange) *NullableDailyRatePlanScheduleRangeDailyRateScheduleRange {
	return &NullableDailyRatePlanScheduleRangeDailyRateScheduleRange{value: val, isSet: true}
}

func (v NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyRatePlanScheduleRangeDailyRateScheduleRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


