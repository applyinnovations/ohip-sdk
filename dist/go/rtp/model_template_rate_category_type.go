/*
OPERA Cloud Rate API

APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtp

import (
	"encoding/json"
)

// checks if the TemplateRateCategoryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateRateCategoryType{}

// TemplateRateCategoryType This type represents the rate category type.
type TemplateRateCategoryType struct {
	// Rate category Code.
	RateCategory *string `json:"rateCategory,omitempty"`
	RateCategoryDetails *HotelRateCategoryTypeRateCategoryDetails `json:"rateCategoryDetails,omitempty"`
}

// NewTemplateRateCategoryType instantiates a new TemplateRateCategoryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateRateCategoryType() *TemplateRateCategoryType {
	this := TemplateRateCategoryType{}
	return &this
}

// NewTemplateRateCategoryTypeWithDefaults instantiates a new TemplateRateCategoryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateRateCategoryTypeWithDefaults() *TemplateRateCategoryType {
	this := TemplateRateCategoryType{}
	return &this
}

// GetRateCategory returns the RateCategory field value if set, zero value otherwise.
func (o *TemplateRateCategoryType) GetRateCategory() string {
	if o == nil || IsNil(o.RateCategory) {
		var ret string
		return ret
	}
	return *o.RateCategory
}

// GetRateCategoryOk returns a tuple with the RateCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRateCategoryType) GetRateCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.RateCategory) {
		return nil, false
	}
	return o.RateCategory, true
}

// HasRateCategory returns a boolean if a field has been set.
func (o *TemplateRateCategoryType) HasRateCategory() bool {
	if o != nil && !IsNil(o.RateCategory) {
		return true
	}

	return false
}

// SetRateCategory gets a reference to the given string and assigns it to the RateCategory field.
func (o *TemplateRateCategoryType) SetRateCategory(v string) {
	o.RateCategory = &v
}

// GetRateCategoryDetails returns the RateCategoryDetails field value if set, zero value otherwise.
func (o *TemplateRateCategoryType) GetRateCategoryDetails() HotelRateCategoryTypeRateCategoryDetails {
	if o == nil || IsNil(o.RateCategoryDetails) {
		var ret HotelRateCategoryTypeRateCategoryDetails
		return ret
	}
	return *o.RateCategoryDetails
}

// GetRateCategoryDetailsOk returns a tuple with the RateCategoryDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateRateCategoryType) GetRateCategoryDetailsOk() (*HotelRateCategoryTypeRateCategoryDetails, bool) {
	if o == nil || IsNil(o.RateCategoryDetails) {
		return nil, false
	}
	return o.RateCategoryDetails, true
}

// HasRateCategoryDetails returns a boolean if a field has been set.
func (o *TemplateRateCategoryType) HasRateCategoryDetails() bool {
	if o != nil && !IsNil(o.RateCategoryDetails) {
		return true
	}

	return false
}

// SetRateCategoryDetails gets a reference to the given HotelRateCategoryTypeRateCategoryDetails and assigns it to the RateCategoryDetails field.
func (o *TemplateRateCategoryType) SetRateCategoryDetails(v HotelRateCategoryTypeRateCategoryDetails) {
	o.RateCategoryDetails = &v
}

func (o TemplateRateCategoryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateRateCategoryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RateCategory) {
		toSerialize["rateCategory"] = o.RateCategory
	}
	if !IsNil(o.RateCategoryDetails) {
		toSerialize["rateCategoryDetails"] = o.RateCategoryDetails
	}
	return toSerialize, nil
}

type NullableTemplateRateCategoryType struct {
	value *TemplateRateCategoryType
	isSet bool
}

func (v NullableTemplateRateCategoryType) Get() *TemplateRateCategoryType {
	return v.value
}

func (v *NullableTemplateRateCategoryType) Set(val *TemplateRateCategoryType) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateRateCategoryType) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateRateCategoryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateRateCategoryType(val *TemplateRateCategoryType) *NullableTemplateRateCategoryType {
	return &NullableTemplateRateCategoryType{value: val, isSet: true}
}

func (v NullableTemplateRateCategoryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateRateCategoryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


