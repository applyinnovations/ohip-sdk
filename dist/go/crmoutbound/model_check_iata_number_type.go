/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the CheckIataNumberType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckIataNumberType{}

// CheckIataNumberType Type provides the IATA Validation information.
type CheckIataNumberType struct {
	// IATA Number.
	Code *string `json:"code,omitempty"`
	// Last Refresh Date.
	LastRefreshDate *string `json:"lastRefreshDate,omitempty"`
	// Reason.
	Reason *string `json:"reason,omitempty"`
	// Agency Name.
	AgencyName *string `json:"agencyName,omitempty"`
	// Approval Date.
	ApprovalDate *string `json:"approvalDate,omitempty"`
	// Agency Class.
	AgencyClass *string `json:"agencyClass,omitempty"`
	// Site Type.
	SiteType *string `json:"siteType,omitempty"`
	// Address.
	Address *string `json:"address,omitempty"`
	// City.
	City *string `json:"city,omitempty"`
	// Postal Code.
	PostalCode *string `json:"postalCode,omitempty"`
	// State.
	State *string `json:"state,omitempty"`
	// Country.
	Country *string `json:"country,omitempty"`
	// Phone Number.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Message.
	Message *string `json:"message,omitempty"`
}

// NewCheckIataNumberType instantiates a new CheckIataNumberType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckIataNumberType() *CheckIataNumberType {
	this := CheckIataNumberType{}
	return &this
}

// NewCheckIataNumberTypeWithDefaults instantiates a new CheckIataNumberType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckIataNumberTypeWithDefaults() *CheckIataNumberType {
	this := CheckIataNumberType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CheckIataNumberType) SetCode(v string) {
	o.Code = &v
}

// GetLastRefreshDate returns the LastRefreshDate field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetLastRefreshDate() string {
	if o == nil || IsNil(o.LastRefreshDate) {
		var ret string
		return ret
	}
	return *o.LastRefreshDate
}

// GetLastRefreshDateOk returns a tuple with the LastRefreshDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetLastRefreshDateOk() (*string, bool) {
	if o == nil || IsNil(o.LastRefreshDate) {
		return nil, false
	}
	return o.LastRefreshDate, true
}

// HasLastRefreshDate returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasLastRefreshDate() bool {
	if o != nil && !IsNil(o.LastRefreshDate) {
		return true
	}

	return false
}

// SetLastRefreshDate gets a reference to the given string and assigns it to the LastRefreshDate field.
func (o *CheckIataNumberType) SetLastRefreshDate(v string) {
	o.LastRefreshDate = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CheckIataNumberType) SetReason(v string) {
	o.Reason = &v
}

// GetAgencyName returns the AgencyName field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetAgencyName() string {
	if o == nil || IsNil(o.AgencyName) {
		var ret string
		return ret
	}
	return *o.AgencyName
}

// GetAgencyNameOk returns a tuple with the AgencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetAgencyNameOk() (*string, bool) {
	if o == nil || IsNil(o.AgencyName) {
		return nil, false
	}
	return o.AgencyName, true
}

// HasAgencyName returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasAgencyName() bool {
	if o != nil && !IsNil(o.AgencyName) {
		return true
	}

	return false
}

// SetAgencyName gets a reference to the given string and assigns it to the AgencyName field.
func (o *CheckIataNumberType) SetAgencyName(v string) {
	o.AgencyName = &v
}

// GetApprovalDate returns the ApprovalDate field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetApprovalDate() string {
	if o == nil || IsNil(o.ApprovalDate) {
		var ret string
		return ret
	}
	return *o.ApprovalDate
}

// GetApprovalDateOk returns a tuple with the ApprovalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetApprovalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovalDate) {
		return nil, false
	}
	return o.ApprovalDate, true
}

// HasApprovalDate returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasApprovalDate() bool {
	if o != nil && !IsNil(o.ApprovalDate) {
		return true
	}

	return false
}

// SetApprovalDate gets a reference to the given string and assigns it to the ApprovalDate field.
func (o *CheckIataNumberType) SetApprovalDate(v string) {
	o.ApprovalDate = &v
}

// GetAgencyClass returns the AgencyClass field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetAgencyClass() string {
	if o == nil || IsNil(o.AgencyClass) {
		var ret string
		return ret
	}
	return *o.AgencyClass
}

// GetAgencyClassOk returns a tuple with the AgencyClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetAgencyClassOk() (*string, bool) {
	if o == nil || IsNil(o.AgencyClass) {
		return nil, false
	}
	return o.AgencyClass, true
}

// HasAgencyClass returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasAgencyClass() bool {
	if o != nil && !IsNil(o.AgencyClass) {
		return true
	}

	return false
}

// SetAgencyClass gets a reference to the given string and assigns it to the AgencyClass field.
func (o *CheckIataNumberType) SetAgencyClass(v string) {
	o.AgencyClass = &v
}

// GetSiteType returns the SiteType field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetSiteType() string {
	if o == nil || IsNil(o.SiteType) {
		var ret string
		return ret
	}
	return *o.SiteType
}

// GetSiteTypeOk returns a tuple with the SiteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetSiteTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SiteType) {
		return nil, false
	}
	return o.SiteType, true
}

// HasSiteType returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasSiteType() bool {
	if o != nil && !IsNil(o.SiteType) {
		return true
	}

	return false
}

// SetSiteType gets a reference to the given string and assigns it to the SiteType field.
func (o *CheckIataNumberType) SetSiteType(v string) {
	o.SiteType = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CheckIataNumberType) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CheckIataNumberType) SetCity(v string) {
	o.City = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CheckIataNumberType) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CheckIataNumberType) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CheckIataNumberType) SetCountry(v string) {
	o.Country = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *CheckIataNumberType) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CheckIataNumberType) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckIataNumberType) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CheckIataNumberType) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CheckIataNumberType) SetMessage(v string) {
	o.Message = &v
}

func (o CheckIataNumberType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckIataNumberType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.LastRefreshDate) {
		toSerialize["lastRefreshDate"] = o.LastRefreshDate
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.AgencyName) {
		toSerialize["agencyName"] = o.AgencyName
	}
	if !IsNil(o.ApprovalDate) {
		toSerialize["approvalDate"] = o.ApprovalDate
	}
	if !IsNil(o.AgencyClass) {
		toSerialize["agencyClass"] = o.AgencyClass
	}
	if !IsNil(o.SiteType) {
		toSerialize["siteType"] = o.SiteType
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableCheckIataNumberType struct {
	value *CheckIataNumberType
	isSet bool
}

func (v NullableCheckIataNumberType) Get() *CheckIataNumberType {
	return v.value
}

func (v *NullableCheckIataNumberType) Set(val *CheckIataNumberType) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckIataNumberType) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckIataNumberType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckIataNumberType(val *CheckIataNumberType) *NullableCheckIataNumberType {
	return &NullableCheckIataNumberType{value: val, isSet: true}
}

func (v NullableCheckIataNumberType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckIataNumberType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


