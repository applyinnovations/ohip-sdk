/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the DuplicateOPERASubscriptionsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DuplicateOPERASubscriptionsType{}

// DuplicateOPERASubscriptionsType Contains subscription details about an external profile within a particular external system that is linked to multiple OPERA profiles.
type DuplicateOPERASubscriptionsType struct {
	ExternalProfileId *UniqueIDType `json:"externalProfileId,omitempty"`
	// Details of the OPERA Profile subscription to external system
	ProfileSubscriptions []ProfileSubscriptionType `json:"profileSubscriptions,omitempty"`
}

// NewDuplicateOPERASubscriptionsType instantiates a new DuplicateOPERASubscriptionsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDuplicateOPERASubscriptionsType() *DuplicateOPERASubscriptionsType {
	this := DuplicateOPERASubscriptionsType{}
	return &this
}

// NewDuplicateOPERASubscriptionsTypeWithDefaults instantiates a new DuplicateOPERASubscriptionsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDuplicateOPERASubscriptionsTypeWithDefaults() *DuplicateOPERASubscriptionsType {
	this := DuplicateOPERASubscriptionsType{}
	return &this
}

// GetExternalProfileId returns the ExternalProfileId field value if set, zero value otherwise.
func (o *DuplicateOPERASubscriptionsType) GetExternalProfileId() UniqueIDType {
	if o == nil || IsNil(o.ExternalProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ExternalProfileId
}

// GetExternalProfileIdOk returns a tuple with the ExternalProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DuplicateOPERASubscriptionsType) GetExternalProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ExternalProfileId) {
		return nil, false
	}
	return o.ExternalProfileId, true
}

// HasExternalProfileId returns a boolean if a field has been set.
func (o *DuplicateOPERASubscriptionsType) HasExternalProfileId() bool {
	if o != nil && !IsNil(o.ExternalProfileId) {
		return true
	}

	return false
}

// SetExternalProfileId gets a reference to the given UniqueIDType and assigns it to the ExternalProfileId field.
func (o *DuplicateOPERASubscriptionsType) SetExternalProfileId(v UniqueIDType) {
	o.ExternalProfileId = &v
}

// GetProfileSubscriptions returns the ProfileSubscriptions field value if set, zero value otherwise.
func (o *DuplicateOPERASubscriptionsType) GetProfileSubscriptions() []ProfileSubscriptionType {
	if o == nil || IsNil(o.ProfileSubscriptions) {
		var ret []ProfileSubscriptionType
		return ret
	}
	return o.ProfileSubscriptions
}

// GetProfileSubscriptionsOk returns a tuple with the ProfileSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DuplicateOPERASubscriptionsType) GetProfileSubscriptionsOk() ([]ProfileSubscriptionType, bool) {
	if o == nil || IsNil(o.ProfileSubscriptions) {
		return nil, false
	}
	return o.ProfileSubscriptions, true
}

// HasProfileSubscriptions returns a boolean if a field has been set.
func (o *DuplicateOPERASubscriptionsType) HasProfileSubscriptions() bool {
	if o != nil && !IsNil(o.ProfileSubscriptions) {
		return true
	}

	return false
}

// SetProfileSubscriptions gets a reference to the given []ProfileSubscriptionType and assigns it to the ProfileSubscriptions field.
func (o *DuplicateOPERASubscriptionsType) SetProfileSubscriptions(v []ProfileSubscriptionType) {
	o.ProfileSubscriptions = v
}

func (o DuplicateOPERASubscriptionsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DuplicateOPERASubscriptionsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalProfileId) {
		toSerialize["externalProfileId"] = o.ExternalProfileId
	}
	if !IsNil(o.ProfileSubscriptions) {
		toSerialize["profileSubscriptions"] = o.ProfileSubscriptions
	}
	return toSerialize, nil
}

type NullableDuplicateOPERASubscriptionsType struct {
	value *DuplicateOPERASubscriptionsType
	isSet bool
}

func (v NullableDuplicateOPERASubscriptionsType) Get() *DuplicateOPERASubscriptionsType {
	return v.value
}

func (v *NullableDuplicateOPERASubscriptionsType) Set(val *DuplicateOPERASubscriptionsType) {
	v.value = val
	v.isSet = true
}

func (v NullableDuplicateOPERASubscriptionsType) IsSet() bool {
	return v.isSet
}

func (v *NullableDuplicateOPERASubscriptionsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDuplicateOPERASubscriptionsType(val *DuplicateOPERASubscriptionsType) *NullableDuplicateOPERASubscriptionsType {
	return &NullableDuplicateOPERASubscriptionsType{value: val, isSet: true}
}

func (v NullableDuplicateOPERASubscriptionsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDuplicateOPERASubscriptionsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


