/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the IataNumberDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IataNumberDetails{}

// IataNumberDetails Response object to fetch IATA Number validation for Travel Agency Profile.
type IataNumberDetails struct {
	CheckIataNumberInfo *CheckIataNumberType `json:"checkIataNumberInfo,omitempty"`
	Links []InstanceLink `json:"links,omitempty"`
	// Used in conjunction with the Success element to define a business error.
	Warnings []WarningType `json:"warnings,omitempty"`
}

// NewIataNumberDetails instantiates a new IataNumberDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIataNumberDetails() *IataNumberDetails {
	this := IataNumberDetails{}
	return &this
}

// NewIataNumberDetailsWithDefaults instantiates a new IataNumberDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIataNumberDetailsWithDefaults() *IataNumberDetails {
	this := IataNumberDetails{}
	return &this
}

// GetCheckIataNumberInfo returns the CheckIataNumberInfo field value if set, zero value otherwise.
func (o *IataNumberDetails) GetCheckIataNumberInfo() CheckIataNumberType {
	if o == nil || IsNil(o.CheckIataNumberInfo) {
		var ret CheckIataNumberType
		return ret
	}
	return *o.CheckIataNumberInfo
}

// GetCheckIataNumberInfoOk returns a tuple with the CheckIataNumberInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IataNumberDetails) GetCheckIataNumberInfoOk() (*CheckIataNumberType, bool) {
	if o == nil || IsNil(o.CheckIataNumberInfo) {
		return nil, false
	}
	return o.CheckIataNumberInfo, true
}

// HasCheckIataNumberInfo returns a boolean if a field has been set.
func (o *IataNumberDetails) HasCheckIataNumberInfo() bool {
	if o != nil && !IsNil(o.CheckIataNumberInfo) {
		return true
	}

	return false
}

// SetCheckIataNumberInfo gets a reference to the given CheckIataNumberType and assigns it to the CheckIataNumberInfo field.
func (o *IataNumberDetails) SetCheckIataNumberInfo(v CheckIataNumberType) {
	o.CheckIataNumberInfo = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *IataNumberDetails) GetLinks() []InstanceLink {
	if o == nil || IsNil(o.Links) {
		var ret []InstanceLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IataNumberDetails) GetLinksOk() ([]InstanceLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *IataNumberDetails) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InstanceLink and assigns it to the Links field.
func (o *IataNumberDetails) SetLinks(v []InstanceLink) {
	o.Links = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *IataNumberDetails) GetWarnings() []WarningType {
	if o == nil || IsNil(o.Warnings) {
		var ret []WarningType
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IataNumberDetails) GetWarningsOk() ([]WarningType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *IataNumberDetails) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningType and assigns it to the Warnings field.
func (o *IataNumberDetails) SetWarnings(v []WarningType) {
	o.Warnings = v
}

func (o IataNumberDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IataNumberDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CheckIataNumberInfo) {
		toSerialize["checkIataNumberInfo"] = o.CheckIataNumberInfo
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableIataNumberDetails struct {
	value *IataNumberDetails
	isSet bool
}

func (v NullableIataNumberDetails) Get() *IataNumberDetails {
	return v.value
}

func (v *NullableIataNumberDetails) Set(val *IataNumberDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableIataNumberDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableIataNumberDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIataNumberDetails(val *IataNumberDetails) *NullableIataNumberDetails {
	return &NullableIataNumberDetails{value: val, isSet: true}
}

func (v NullableIataNumberDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIataNumberDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


