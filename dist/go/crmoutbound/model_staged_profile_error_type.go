/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StagedProfileErrorType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileErrorType{}

// StagedProfileErrorType Criteria to fetch the staged profile.
type StagedProfileErrorType struct {
	Field *StagedProfileErrorField `json:"field,omitempty"`
	// The error description for the staged profile.
	ErrorDescription *string `json:"errorDescription,omitempty"`
}

// NewStagedProfileErrorType instantiates a new StagedProfileErrorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileErrorType() *StagedProfileErrorType {
	this := StagedProfileErrorType{}
	return &this
}

// NewStagedProfileErrorTypeWithDefaults instantiates a new StagedProfileErrorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileErrorTypeWithDefaults() *StagedProfileErrorType {
	this := StagedProfileErrorType{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *StagedProfileErrorType) GetField() StagedProfileErrorField {
	if o == nil || IsNil(o.Field) {
		var ret StagedProfileErrorField
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileErrorType) GetFieldOk() (*StagedProfileErrorField, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *StagedProfileErrorType) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given StagedProfileErrorField and assigns it to the Field field.
func (o *StagedProfileErrorType) SetField(v StagedProfileErrorField) {
	o.Field = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *StagedProfileErrorType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileErrorType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *StagedProfileErrorType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *StagedProfileErrorType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

func (o StagedProfileErrorType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileErrorType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	return toSerialize, nil
}

type NullableStagedProfileErrorType struct {
	value *StagedProfileErrorType
	isSet bool
}

func (v NullableStagedProfileErrorType) Get() *StagedProfileErrorType {
	return v.value
}

func (v *NullableStagedProfileErrorType) Set(val *StagedProfileErrorType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileErrorType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileErrorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileErrorType(val *StagedProfileErrorType) *NullableStagedProfileErrorType {
	return &NullableStagedProfileErrorType{value: val, isSet: true}
}

func (v NullableStagedProfileErrorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileErrorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


