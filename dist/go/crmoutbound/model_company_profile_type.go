/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the CompanyProfileType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyProfileType{}

// CompanyProfileType Type provides the detailed information about the profile and its children.
type CompanyProfileType struct {
	Company *CompanyType `json:"company,omitempty"`
	ProfileImage *ImageSetType `json:"profileImage,omitempty"`
	Addresses *GuestProfileTypeAddresses `json:"addresses,omitempty"`
	// Business/Market Segment associated to the profile.
	BusinessSegments []string `json:"businessSegments,omitempty"`
	// Territory associated to the profile.
	Territory *string `json:"territory,omitempty"`
	Telephones *ProfileTypeTelephones `json:"telephones,omitempty"`
	Emails *ProfileTypeEmails `json:"emails,omitempty"`
	Comments *ProfileTypeComments `json:"comments,omitempty"`
	ProfileMemberships *ProfileTypeProfileMemberships `json:"profileMemberships,omitempty"`
	PreferenceCollection *ProfileTypePreferenceCollection `json:"preferenceCollection,omitempty"`
	Keywords *ProfileTypeKeywords `json:"keywords,omitempty"`
	// Collection of lamp indicators.
	ProfileIndicators []IndicatorType `json:"profileIndicators,omitempty"`
	LastStayInfo *LastStayInfoType `json:"lastStayInfo,omitempty"`
	ProfileAccessType *ProfileAccessType `json:"profileAccessType,omitempty"`
	ProfileRestrictions *ProfileRestrictions `json:"profileRestrictions,omitempty"`
	MailingActions *MailingActionsType `json:"mailingActions,omitempty"`
	PrivacyInfo *PrivacyInfoType `json:"privacyInfo,omitempty"`
	UserDefinedFields *UserDefinedFieldsType `json:"userDefinedFields,omitempty"`
	// Localization Guest Type associated to the profile.
	LocalizationGuestType *string `json:"localizationGuestType,omitempty"`
	// Eligible for Fiscal Folio/Payload generation.
	EligibleForFiscalFolio *string `json:"eligibleForFiscalFolio,omitempty"`
	ProfileType *CompanyProfileTypeType `json:"profileType,omitempty"`
	StatusCode *ProfileStatusType `json:"statusCode,omitempty"`
	// Hotel which this profile is registered with. This attribute is not used for configuration.
	RegisteredProperty *string `json:"registeredProperty,omitempty"`
	// Hotel which this profile is to be registered. This attribute is only used during creation of profile.
	RequestForHotel *string `json:"requestForHotel,omitempty"`
	// What level this profile is protected.
	ProtectedBy *string `json:"protectedBy,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Mark this profile as recently accessed.
	MarkAsRecentlyAccessed *bool `json:"markAsRecentlyAccessed,omitempty"`
	// \"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.
	MarkForHistory *bool `json:"markForHistory,omitempty"`
	// Populates true if the profile has commission configured false otherwise.
	HasCommission *bool `json:"hasCommission,omitempty"`
}

// NewCompanyProfileType instantiates a new CompanyProfileType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyProfileType() *CompanyProfileType {
	this := CompanyProfileType{}
	return &this
}

// NewCompanyProfileTypeWithDefaults instantiates a new CompanyProfileType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyProfileTypeWithDefaults() *CompanyProfileType {
	this := CompanyProfileType{}
	return &this
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *CompanyProfileType) GetCompany() CompanyType {
	if o == nil || IsNil(o.Company) {
		var ret CompanyType
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetCompanyOk() (*CompanyType, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *CompanyProfileType) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given CompanyType and assigns it to the Company field.
func (o *CompanyProfileType) SetCompany(v CompanyType) {
	o.Company = &v
}

// GetProfileImage returns the ProfileImage field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileImage() ImageSetType {
	if o == nil || IsNil(o.ProfileImage) {
		var ret ImageSetType
		return ret
	}
	return *o.ProfileImage
}

// GetProfileImageOk returns a tuple with the ProfileImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileImageOk() (*ImageSetType, bool) {
	if o == nil || IsNil(o.ProfileImage) {
		return nil, false
	}
	return o.ProfileImage, true
}

// HasProfileImage returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileImage() bool {
	if o != nil && !IsNil(o.ProfileImage) {
		return true
	}

	return false
}

// SetProfileImage gets a reference to the given ImageSetType and assigns it to the ProfileImage field.
func (o *CompanyProfileType) SetProfileImage(v ImageSetType) {
	o.ProfileImage = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *CompanyProfileType) GetAddresses() GuestProfileTypeAddresses {
	if o == nil || IsNil(o.Addresses) {
		var ret GuestProfileTypeAddresses
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetAddressesOk() (*GuestProfileTypeAddresses, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *CompanyProfileType) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given GuestProfileTypeAddresses and assigns it to the Addresses field.
func (o *CompanyProfileType) SetAddresses(v GuestProfileTypeAddresses) {
	o.Addresses = &v
}

// GetBusinessSegments returns the BusinessSegments field value if set, zero value otherwise.
func (o *CompanyProfileType) GetBusinessSegments() []string {
	if o == nil || IsNil(o.BusinessSegments) {
		var ret []string
		return ret
	}
	return o.BusinessSegments
}

// GetBusinessSegmentsOk returns a tuple with the BusinessSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetBusinessSegmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessSegments) {
		return nil, false
	}
	return o.BusinessSegments, true
}

// HasBusinessSegments returns a boolean if a field has been set.
func (o *CompanyProfileType) HasBusinessSegments() bool {
	if o != nil && !IsNil(o.BusinessSegments) {
		return true
	}

	return false
}

// SetBusinessSegments gets a reference to the given []string and assigns it to the BusinessSegments field.
func (o *CompanyProfileType) SetBusinessSegments(v []string) {
	o.BusinessSegments = v
}

// GetTerritory returns the Territory field value if set, zero value otherwise.
func (o *CompanyProfileType) GetTerritory() string {
	if o == nil || IsNil(o.Territory) {
		var ret string
		return ret
	}
	return *o.Territory
}

// GetTerritoryOk returns a tuple with the Territory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetTerritoryOk() (*string, bool) {
	if o == nil || IsNil(o.Territory) {
		return nil, false
	}
	return o.Territory, true
}

// HasTerritory returns a boolean if a field has been set.
func (o *CompanyProfileType) HasTerritory() bool {
	if o != nil && !IsNil(o.Territory) {
		return true
	}

	return false
}

// SetTerritory gets a reference to the given string and assigns it to the Territory field.
func (o *CompanyProfileType) SetTerritory(v string) {
	o.Territory = &v
}

// GetTelephones returns the Telephones field value if set, zero value otherwise.
func (o *CompanyProfileType) GetTelephones() ProfileTypeTelephones {
	if o == nil || IsNil(o.Telephones) {
		var ret ProfileTypeTelephones
		return ret
	}
	return *o.Telephones
}

// GetTelephonesOk returns a tuple with the Telephones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetTelephonesOk() (*ProfileTypeTelephones, bool) {
	if o == nil || IsNil(o.Telephones) {
		return nil, false
	}
	return o.Telephones, true
}

// HasTelephones returns a boolean if a field has been set.
func (o *CompanyProfileType) HasTelephones() bool {
	if o != nil && !IsNil(o.Telephones) {
		return true
	}

	return false
}

// SetTelephones gets a reference to the given ProfileTypeTelephones and assigns it to the Telephones field.
func (o *CompanyProfileType) SetTelephones(v ProfileTypeTelephones) {
	o.Telephones = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *CompanyProfileType) GetEmails() ProfileTypeEmails {
	if o == nil || IsNil(o.Emails) {
		var ret ProfileTypeEmails
		return ret
	}
	return *o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetEmailsOk() (*ProfileTypeEmails, bool) {
	if o == nil || IsNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *CompanyProfileType) HasEmails() bool {
	if o != nil && !IsNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given ProfileTypeEmails and assigns it to the Emails field.
func (o *CompanyProfileType) SetEmails(v ProfileTypeEmails) {
	o.Emails = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *CompanyProfileType) GetComments() ProfileTypeComments {
	if o == nil || IsNil(o.Comments) {
		var ret ProfileTypeComments
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetCommentsOk() (*ProfileTypeComments, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *CompanyProfileType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given ProfileTypeComments and assigns it to the Comments field.
func (o *CompanyProfileType) SetComments(v ProfileTypeComments) {
	o.Comments = &v
}

// GetProfileMemberships returns the ProfileMemberships field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileMemberships() ProfileTypeProfileMemberships {
	if o == nil || IsNil(o.ProfileMemberships) {
		var ret ProfileTypeProfileMemberships
		return ret
	}
	return *o.ProfileMemberships
}

// GetProfileMembershipsOk returns a tuple with the ProfileMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileMembershipsOk() (*ProfileTypeProfileMemberships, bool) {
	if o == nil || IsNil(o.ProfileMemberships) {
		return nil, false
	}
	return o.ProfileMemberships, true
}

// HasProfileMemberships returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileMemberships() bool {
	if o != nil && !IsNil(o.ProfileMemberships) {
		return true
	}

	return false
}

// SetProfileMemberships gets a reference to the given ProfileTypeProfileMemberships and assigns it to the ProfileMemberships field.
func (o *CompanyProfileType) SetProfileMemberships(v ProfileTypeProfileMemberships) {
	o.ProfileMemberships = &v
}

// GetPreferenceCollection returns the PreferenceCollection field value if set, zero value otherwise.
func (o *CompanyProfileType) GetPreferenceCollection() ProfileTypePreferenceCollection {
	if o == nil || IsNil(o.PreferenceCollection) {
		var ret ProfileTypePreferenceCollection
		return ret
	}
	return *o.PreferenceCollection
}

// GetPreferenceCollectionOk returns a tuple with the PreferenceCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetPreferenceCollectionOk() (*ProfileTypePreferenceCollection, bool) {
	if o == nil || IsNil(o.PreferenceCollection) {
		return nil, false
	}
	return o.PreferenceCollection, true
}

// HasPreferenceCollection returns a boolean if a field has been set.
func (o *CompanyProfileType) HasPreferenceCollection() bool {
	if o != nil && !IsNil(o.PreferenceCollection) {
		return true
	}

	return false
}

// SetPreferenceCollection gets a reference to the given ProfileTypePreferenceCollection and assigns it to the PreferenceCollection field.
func (o *CompanyProfileType) SetPreferenceCollection(v ProfileTypePreferenceCollection) {
	o.PreferenceCollection = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *CompanyProfileType) GetKeywords() ProfileTypeKeywords {
	if o == nil || IsNil(o.Keywords) {
		var ret ProfileTypeKeywords
		return ret
	}
	return *o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetKeywordsOk() (*ProfileTypeKeywords, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *CompanyProfileType) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given ProfileTypeKeywords and assigns it to the Keywords field.
func (o *CompanyProfileType) SetKeywords(v ProfileTypeKeywords) {
	o.Keywords = &v
}

// GetProfileIndicators returns the ProfileIndicators field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileIndicators() []IndicatorType {
	if o == nil || IsNil(o.ProfileIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ProfileIndicators
}

// GetProfileIndicatorsOk returns a tuple with the ProfileIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ProfileIndicators) {
		return nil, false
	}
	return o.ProfileIndicators, true
}

// HasProfileIndicators returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileIndicators() bool {
	if o != nil && !IsNil(o.ProfileIndicators) {
		return true
	}

	return false
}

// SetProfileIndicators gets a reference to the given []IndicatorType and assigns it to the ProfileIndicators field.
func (o *CompanyProfileType) SetProfileIndicators(v []IndicatorType) {
	o.ProfileIndicators = v
}

// GetLastStayInfo returns the LastStayInfo field value if set, zero value otherwise.
func (o *CompanyProfileType) GetLastStayInfo() LastStayInfoType {
	if o == nil || IsNil(o.LastStayInfo) {
		var ret LastStayInfoType
		return ret
	}
	return *o.LastStayInfo
}

// GetLastStayInfoOk returns a tuple with the LastStayInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetLastStayInfoOk() (*LastStayInfoType, bool) {
	if o == nil || IsNil(o.LastStayInfo) {
		return nil, false
	}
	return o.LastStayInfo, true
}

// HasLastStayInfo returns a boolean if a field has been set.
func (o *CompanyProfileType) HasLastStayInfo() bool {
	if o != nil && !IsNil(o.LastStayInfo) {
		return true
	}

	return false
}

// SetLastStayInfo gets a reference to the given LastStayInfoType and assigns it to the LastStayInfo field.
func (o *CompanyProfileType) SetLastStayInfo(v LastStayInfoType) {
	o.LastStayInfo = &v
}

// GetProfileAccessType returns the ProfileAccessType field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileAccessType() ProfileAccessType {
	if o == nil || IsNil(o.ProfileAccessType) {
		var ret ProfileAccessType
		return ret
	}
	return *o.ProfileAccessType
}

// GetProfileAccessTypeOk returns a tuple with the ProfileAccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileAccessTypeOk() (*ProfileAccessType, bool) {
	if o == nil || IsNil(o.ProfileAccessType) {
		return nil, false
	}
	return o.ProfileAccessType, true
}

// HasProfileAccessType returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileAccessType() bool {
	if o != nil && !IsNil(o.ProfileAccessType) {
		return true
	}

	return false
}

// SetProfileAccessType gets a reference to the given ProfileAccessType and assigns it to the ProfileAccessType field.
func (o *CompanyProfileType) SetProfileAccessType(v ProfileAccessType) {
	o.ProfileAccessType = &v
}

// GetProfileRestrictions returns the ProfileRestrictions field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileRestrictions() ProfileRestrictions {
	if o == nil || IsNil(o.ProfileRestrictions) {
		var ret ProfileRestrictions
		return ret
	}
	return *o.ProfileRestrictions
}

// GetProfileRestrictionsOk returns a tuple with the ProfileRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileRestrictionsOk() (*ProfileRestrictions, bool) {
	if o == nil || IsNil(o.ProfileRestrictions) {
		return nil, false
	}
	return o.ProfileRestrictions, true
}

// HasProfileRestrictions returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileRestrictions() bool {
	if o != nil && !IsNil(o.ProfileRestrictions) {
		return true
	}

	return false
}

// SetProfileRestrictions gets a reference to the given ProfileRestrictions and assigns it to the ProfileRestrictions field.
func (o *CompanyProfileType) SetProfileRestrictions(v ProfileRestrictions) {
	o.ProfileRestrictions = &v
}

// GetMailingActions returns the MailingActions field value if set, zero value otherwise.
func (o *CompanyProfileType) GetMailingActions() MailingActionsType {
	if o == nil || IsNil(o.MailingActions) {
		var ret MailingActionsType
		return ret
	}
	return *o.MailingActions
}

// GetMailingActionsOk returns a tuple with the MailingActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetMailingActionsOk() (*MailingActionsType, bool) {
	if o == nil || IsNil(o.MailingActions) {
		return nil, false
	}
	return o.MailingActions, true
}

// HasMailingActions returns a boolean if a field has been set.
func (o *CompanyProfileType) HasMailingActions() bool {
	if o != nil && !IsNil(o.MailingActions) {
		return true
	}

	return false
}

// SetMailingActions gets a reference to the given MailingActionsType and assigns it to the MailingActions field.
func (o *CompanyProfileType) SetMailingActions(v MailingActionsType) {
	o.MailingActions = &v
}

// GetPrivacyInfo returns the PrivacyInfo field value if set, zero value otherwise.
func (o *CompanyProfileType) GetPrivacyInfo() PrivacyInfoType {
	if o == nil || IsNil(o.PrivacyInfo) {
		var ret PrivacyInfoType
		return ret
	}
	return *o.PrivacyInfo
}

// GetPrivacyInfoOk returns a tuple with the PrivacyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetPrivacyInfoOk() (*PrivacyInfoType, bool) {
	if o == nil || IsNil(o.PrivacyInfo) {
		return nil, false
	}
	return o.PrivacyInfo, true
}

// HasPrivacyInfo returns a boolean if a field has been set.
func (o *CompanyProfileType) HasPrivacyInfo() bool {
	if o != nil && !IsNil(o.PrivacyInfo) {
		return true
	}

	return false
}

// SetPrivacyInfo gets a reference to the given PrivacyInfoType and assigns it to the PrivacyInfo field.
func (o *CompanyProfileType) SetPrivacyInfo(v PrivacyInfoType) {
	o.PrivacyInfo = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *CompanyProfileType) GetUserDefinedFields() UserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret UserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetUserDefinedFieldsOk() (*UserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *CompanyProfileType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given UserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *CompanyProfileType) SetUserDefinedFields(v UserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

// GetLocalizationGuestType returns the LocalizationGuestType field value if set, zero value otherwise.
func (o *CompanyProfileType) GetLocalizationGuestType() string {
	if o == nil || IsNil(o.LocalizationGuestType) {
		var ret string
		return ret
	}
	return *o.LocalizationGuestType
}

// GetLocalizationGuestTypeOk returns a tuple with the LocalizationGuestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetLocalizationGuestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LocalizationGuestType) {
		return nil, false
	}
	return o.LocalizationGuestType, true
}

// HasLocalizationGuestType returns a boolean if a field has been set.
func (o *CompanyProfileType) HasLocalizationGuestType() bool {
	if o != nil && !IsNil(o.LocalizationGuestType) {
		return true
	}

	return false
}

// SetLocalizationGuestType gets a reference to the given string and assigns it to the LocalizationGuestType field.
func (o *CompanyProfileType) SetLocalizationGuestType(v string) {
	o.LocalizationGuestType = &v
}

// GetEligibleForFiscalFolio returns the EligibleForFiscalFolio field value if set, zero value otherwise.
func (o *CompanyProfileType) GetEligibleForFiscalFolio() string {
	if o == nil || IsNil(o.EligibleForFiscalFolio) {
		var ret string
		return ret
	}
	return *o.EligibleForFiscalFolio
}

// GetEligibleForFiscalFolioOk returns a tuple with the EligibleForFiscalFolio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetEligibleForFiscalFolioOk() (*string, bool) {
	if o == nil || IsNil(o.EligibleForFiscalFolio) {
		return nil, false
	}
	return o.EligibleForFiscalFolio, true
}

// HasEligibleForFiscalFolio returns a boolean if a field has been set.
func (o *CompanyProfileType) HasEligibleForFiscalFolio() bool {
	if o != nil && !IsNil(o.EligibleForFiscalFolio) {
		return true
	}

	return false
}

// SetEligibleForFiscalFolio gets a reference to the given string and assigns it to the EligibleForFiscalFolio field.
func (o *CompanyProfileType) SetEligibleForFiscalFolio(v string) {
	o.EligibleForFiscalFolio = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProfileType() CompanyProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret CompanyProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProfileTypeOk() (*CompanyProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given CompanyProfileTypeType and assigns it to the ProfileType field.
func (o *CompanyProfileType) SetProfileType(v CompanyProfileTypeType) {
	o.ProfileType = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *CompanyProfileType) GetStatusCode() ProfileStatusType {
	if o == nil || IsNil(o.StatusCode) {
		var ret ProfileStatusType
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetStatusCodeOk() (*ProfileStatusType, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *CompanyProfileType) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given ProfileStatusType and assigns it to the StatusCode field.
func (o *CompanyProfileType) SetStatusCode(v ProfileStatusType) {
	o.StatusCode = &v
}

// GetRegisteredProperty returns the RegisteredProperty field value if set, zero value otherwise.
func (o *CompanyProfileType) GetRegisteredProperty() string {
	if o == nil || IsNil(o.RegisteredProperty) {
		var ret string
		return ret
	}
	return *o.RegisteredProperty
}

// GetRegisteredPropertyOk returns a tuple with the RegisteredProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetRegisteredPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.RegisteredProperty) {
		return nil, false
	}
	return o.RegisteredProperty, true
}

// HasRegisteredProperty returns a boolean if a field has been set.
func (o *CompanyProfileType) HasRegisteredProperty() bool {
	if o != nil && !IsNil(o.RegisteredProperty) {
		return true
	}

	return false
}

// SetRegisteredProperty gets a reference to the given string and assigns it to the RegisteredProperty field.
func (o *CompanyProfileType) SetRegisteredProperty(v string) {
	o.RegisteredProperty = &v
}

// GetRequestForHotel returns the RequestForHotel field value if set, zero value otherwise.
func (o *CompanyProfileType) GetRequestForHotel() string {
	if o == nil || IsNil(o.RequestForHotel) {
		var ret string
		return ret
	}
	return *o.RequestForHotel
}

// GetRequestForHotelOk returns a tuple with the RequestForHotel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetRequestForHotelOk() (*string, bool) {
	if o == nil || IsNil(o.RequestForHotel) {
		return nil, false
	}
	return o.RequestForHotel, true
}

// HasRequestForHotel returns a boolean if a field has been set.
func (o *CompanyProfileType) HasRequestForHotel() bool {
	if o != nil && !IsNil(o.RequestForHotel) {
		return true
	}

	return false
}

// SetRequestForHotel gets a reference to the given string and assigns it to the RequestForHotel field.
func (o *CompanyProfileType) SetRequestForHotel(v string) {
	o.RequestForHotel = &v
}

// GetProtectedBy returns the ProtectedBy field value if set, zero value otherwise.
func (o *CompanyProfileType) GetProtectedBy() string {
	if o == nil || IsNil(o.ProtectedBy) {
		var ret string
		return ret
	}
	return *o.ProtectedBy
}

// GetProtectedByOk returns a tuple with the ProtectedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetProtectedByOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectedBy) {
		return nil, false
	}
	return o.ProtectedBy, true
}

// HasProtectedBy returns a boolean if a field has been set.
func (o *CompanyProfileType) HasProtectedBy() bool {
	if o != nil && !IsNil(o.ProtectedBy) {
		return true
	}

	return false
}

// SetProtectedBy gets a reference to the given string and assigns it to the ProtectedBy field.
func (o *CompanyProfileType) SetProtectedBy(v string) {
	o.ProtectedBy = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *CompanyProfileType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *CompanyProfileType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *CompanyProfileType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *CompanyProfileType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *CompanyProfileType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *CompanyProfileType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *CompanyProfileType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *CompanyProfileType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *CompanyProfileType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *CompanyProfileType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *CompanyProfileType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *CompanyProfileType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetMarkAsRecentlyAccessed returns the MarkAsRecentlyAccessed field value if set, zero value otherwise.
func (o *CompanyProfileType) GetMarkAsRecentlyAccessed() bool {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		var ret bool
		return ret
	}
	return *o.MarkAsRecentlyAccessed
}

// GetMarkAsRecentlyAccessedOk returns a tuple with the MarkAsRecentlyAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetMarkAsRecentlyAccessedOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkAsRecentlyAccessed) {
		return nil, false
	}
	return o.MarkAsRecentlyAccessed, true
}

// HasMarkAsRecentlyAccessed returns a boolean if a field has been set.
func (o *CompanyProfileType) HasMarkAsRecentlyAccessed() bool {
	if o != nil && !IsNil(o.MarkAsRecentlyAccessed) {
		return true
	}

	return false
}

// SetMarkAsRecentlyAccessed gets a reference to the given bool and assigns it to the MarkAsRecentlyAccessed field.
func (o *CompanyProfileType) SetMarkAsRecentlyAccessed(v bool) {
	o.MarkAsRecentlyAccessed = &v
}

// GetMarkForHistory returns the MarkForHistory field value if set, zero value otherwise.
func (o *CompanyProfileType) GetMarkForHistory() bool {
	if o == nil || IsNil(o.MarkForHistory) {
		var ret bool
		return ret
	}
	return *o.MarkForHistory
}

// GetMarkForHistoryOk returns a tuple with the MarkForHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetMarkForHistoryOk() (*bool, bool) {
	if o == nil || IsNil(o.MarkForHistory) {
		return nil, false
	}
	return o.MarkForHistory, true
}

// HasMarkForHistory returns a boolean if a field has been set.
func (o *CompanyProfileType) HasMarkForHistory() bool {
	if o != nil && !IsNil(o.MarkForHistory) {
		return true
	}

	return false
}

// SetMarkForHistory gets a reference to the given bool and assigns it to the MarkForHistory field.
func (o *CompanyProfileType) SetMarkForHistory(v bool) {
	o.MarkForHistory = &v
}

// GetHasCommission returns the HasCommission field value if set, zero value otherwise.
func (o *CompanyProfileType) GetHasCommission() bool {
	if o == nil || IsNil(o.HasCommission) {
		var ret bool
		return ret
	}
	return *o.HasCommission
}

// GetHasCommissionOk returns a tuple with the HasCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyProfileType) GetHasCommissionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCommission) {
		return nil, false
	}
	return o.HasCommission, true
}

// HasHasCommission returns a boolean if a field has been set.
func (o *CompanyProfileType) HasHasCommission() bool {
	if o != nil && !IsNil(o.HasCommission) {
		return true
	}

	return false
}

// SetHasCommission gets a reference to the given bool and assigns it to the HasCommission field.
func (o *CompanyProfileType) SetHasCommission(v bool) {
	o.HasCommission = &v
}

func (o CompanyProfileType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyProfileType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.ProfileImage) {
		toSerialize["profileImage"] = o.ProfileImage
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.BusinessSegments) {
		toSerialize["businessSegments"] = o.BusinessSegments
	}
	if !IsNil(o.Territory) {
		toSerialize["territory"] = o.Territory
	}
	if !IsNil(o.Telephones) {
		toSerialize["telephones"] = o.Telephones
	}
	if !IsNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.ProfileMemberships) {
		toSerialize["profileMemberships"] = o.ProfileMemberships
	}
	if !IsNil(o.PreferenceCollection) {
		toSerialize["preferenceCollection"] = o.PreferenceCollection
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.ProfileIndicators) {
		toSerialize["profileIndicators"] = o.ProfileIndicators
	}
	if !IsNil(o.LastStayInfo) {
		toSerialize["lastStayInfo"] = o.LastStayInfo
	}
	if !IsNil(o.ProfileAccessType) {
		toSerialize["profileAccessType"] = o.ProfileAccessType
	}
	if !IsNil(o.ProfileRestrictions) {
		toSerialize["profileRestrictions"] = o.ProfileRestrictions
	}
	if !IsNil(o.MailingActions) {
		toSerialize["mailingActions"] = o.MailingActions
	}
	if !IsNil(o.PrivacyInfo) {
		toSerialize["privacyInfo"] = o.PrivacyInfo
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.LocalizationGuestType) {
		toSerialize["localizationGuestType"] = o.LocalizationGuestType
	}
	if !IsNil(o.EligibleForFiscalFolio) {
		toSerialize["eligibleForFiscalFolio"] = o.EligibleForFiscalFolio
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.RegisteredProperty) {
		toSerialize["registeredProperty"] = o.RegisteredProperty
	}
	if !IsNil(o.RequestForHotel) {
		toSerialize["requestForHotel"] = o.RequestForHotel
	}
	if !IsNil(o.ProtectedBy) {
		toSerialize["protectedBy"] = o.ProtectedBy
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.MarkAsRecentlyAccessed) {
		toSerialize["markAsRecentlyAccessed"] = o.MarkAsRecentlyAccessed
	}
	if !IsNil(o.MarkForHistory) {
		toSerialize["markForHistory"] = o.MarkForHistory
	}
	if !IsNil(o.HasCommission) {
		toSerialize["hasCommission"] = o.HasCommission
	}
	return toSerialize, nil
}

type NullableCompanyProfileType struct {
	value *CompanyProfileType
	isSet bool
}

func (v NullableCompanyProfileType) Get() *CompanyProfileType {
	return v.value
}

func (v *NullableCompanyProfileType) Set(val *CompanyProfileType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyProfileType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyProfileType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyProfileType(val *CompanyProfileType) *NullableCompanyProfileType {
	return &NullableCompanyProfileType{value: val, isSet: true}
}

func (v NullableCompanyProfileType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyProfileType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


