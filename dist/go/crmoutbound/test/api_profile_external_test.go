/*
OPERA Cloud Customer Relationship Management Outbound API

Testing ProfileExternalApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package crmoutbound

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/applyinnovations/ohip-sdk/crmoutbound"
)

func Test_crmoutbound_ProfileExternalApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProfileExternalApiService CheckIataNumber", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var iataNumber string
		var hotelId string

		resp, httpRes, err := apiClient.ProfileExternalApi.CheckIataNumber(context.Background(), iataNumber, hotelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService DownloadExternalProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var extSystemCode string
		var chainCode string
		var profileExternalId string

		resp, httpRes, err := apiClient.ProfileExternalApi.DownloadExternalProfile(context.Background(), extSystemCode, chainCode, profileExternalId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService GetExternalProfiles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var extSystemCode string
		var chainCode string

		resp, httpRes, err := apiClient.ProfileExternalApi.GetExternalProfiles(context.Background(), extSystemCode, chainCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService GetGamingOffers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var membershipNo string
		var extSystemCode string

		resp, httpRes, err := apiClient.ProfileExternalApi.GetGamingOffers(context.Background(), membershipNo, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService GetPlayerStatistics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var profileId string
		var extSystemCode string

		resp, httpRes, err := apiClient.ProfileExternalApi.GetPlayerStatistics(context.Background(), profileId, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService GetValidatedAddress", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var externalAddressId string

		resp, httpRes, err := apiClient.ProfileExternalApi.GetValidatedAddress(context.Background(), externalAddressId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService GetValidatedAddresses", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ProfileExternalApi.GetValidatedAddresses(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileExternalApiService ValidateMembershipNumber", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var chainCode string
		var extSystemCode string

		resp, httpRes, err := apiClient.ProfileExternalApi.ValidateMembershipNumber(context.Background(), chainCode, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
