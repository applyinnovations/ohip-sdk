/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the MemberInfoRSType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberInfoRSType{}

// MemberInfoRSType struct for MemberInfoRSType
type MemberInfoRSType struct {
	MemberInfoDetails *MemberInfoDetailsType `json:"memberInfoDetails,omitempty"`
	MemberInfoRangeDetails *MemberInfoDetailsType `json:"memberInfoRangeDetails,omitempty"`
	// Points required for next tier of membership.
	NextTierPoints *int32 `json:"nextTierPoints,omitempty"`
	// Points available for the member.
	PointsAvailable *int32 `json:"pointsAvailable,omitempty"`
}

// NewMemberInfoRSType instantiates a new MemberInfoRSType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberInfoRSType() *MemberInfoRSType {
	this := MemberInfoRSType{}
	return &this
}

// NewMemberInfoRSTypeWithDefaults instantiates a new MemberInfoRSType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberInfoRSTypeWithDefaults() *MemberInfoRSType {
	this := MemberInfoRSType{}
	return &this
}

// GetMemberInfoDetails returns the MemberInfoDetails field value if set, zero value otherwise.
func (o *MemberInfoRSType) GetMemberInfoDetails() MemberInfoDetailsType {
	if o == nil || IsNil(o.MemberInfoDetails) {
		var ret MemberInfoDetailsType
		return ret
	}
	return *o.MemberInfoDetails
}

// GetMemberInfoDetailsOk returns a tuple with the MemberInfoDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberInfoRSType) GetMemberInfoDetailsOk() (*MemberInfoDetailsType, bool) {
	if o == nil || IsNil(o.MemberInfoDetails) {
		return nil, false
	}
	return o.MemberInfoDetails, true
}

// HasMemberInfoDetails returns a boolean if a field has been set.
func (o *MemberInfoRSType) HasMemberInfoDetails() bool {
	if o != nil && !IsNil(o.MemberInfoDetails) {
		return true
	}

	return false
}

// SetMemberInfoDetails gets a reference to the given MemberInfoDetailsType and assigns it to the MemberInfoDetails field.
func (o *MemberInfoRSType) SetMemberInfoDetails(v MemberInfoDetailsType) {
	o.MemberInfoDetails = &v
}

// GetMemberInfoRangeDetails returns the MemberInfoRangeDetails field value if set, zero value otherwise.
func (o *MemberInfoRSType) GetMemberInfoRangeDetails() MemberInfoDetailsType {
	if o == nil || IsNil(o.MemberInfoRangeDetails) {
		var ret MemberInfoDetailsType
		return ret
	}
	return *o.MemberInfoRangeDetails
}

// GetMemberInfoRangeDetailsOk returns a tuple with the MemberInfoRangeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberInfoRSType) GetMemberInfoRangeDetailsOk() (*MemberInfoDetailsType, bool) {
	if o == nil || IsNil(o.MemberInfoRangeDetails) {
		return nil, false
	}
	return o.MemberInfoRangeDetails, true
}

// HasMemberInfoRangeDetails returns a boolean if a field has been set.
func (o *MemberInfoRSType) HasMemberInfoRangeDetails() bool {
	if o != nil && !IsNil(o.MemberInfoRangeDetails) {
		return true
	}

	return false
}

// SetMemberInfoRangeDetails gets a reference to the given MemberInfoDetailsType and assigns it to the MemberInfoRangeDetails field.
func (o *MemberInfoRSType) SetMemberInfoRangeDetails(v MemberInfoDetailsType) {
	o.MemberInfoRangeDetails = &v
}

// GetNextTierPoints returns the NextTierPoints field value if set, zero value otherwise.
func (o *MemberInfoRSType) GetNextTierPoints() int32 {
	if o == nil || IsNil(o.NextTierPoints) {
		var ret int32
		return ret
	}
	return *o.NextTierPoints
}

// GetNextTierPointsOk returns a tuple with the NextTierPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberInfoRSType) GetNextTierPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.NextTierPoints) {
		return nil, false
	}
	return o.NextTierPoints, true
}

// HasNextTierPoints returns a boolean if a field has been set.
func (o *MemberInfoRSType) HasNextTierPoints() bool {
	if o != nil && !IsNil(o.NextTierPoints) {
		return true
	}

	return false
}

// SetNextTierPoints gets a reference to the given int32 and assigns it to the NextTierPoints field.
func (o *MemberInfoRSType) SetNextTierPoints(v int32) {
	o.NextTierPoints = &v
}

// GetPointsAvailable returns the PointsAvailable field value if set, zero value otherwise.
func (o *MemberInfoRSType) GetPointsAvailable() int32 {
	if o == nil || IsNil(o.PointsAvailable) {
		var ret int32
		return ret
	}
	return *o.PointsAvailable
}

// GetPointsAvailableOk returns a tuple with the PointsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberInfoRSType) GetPointsAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.PointsAvailable) {
		return nil, false
	}
	return o.PointsAvailable, true
}

// HasPointsAvailable returns a boolean if a field has been set.
func (o *MemberInfoRSType) HasPointsAvailable() bool {
	if o != nil && !IsNil(o.PointsAvailable) {
		return true
	}

	return false
}

// SetPointsAvailable gets a reference to the given int32 and assigns it to the PointsAvailable field.
func (o *MemberInfoRSType) SetPointsAvailable(v int32) {
	o.PointsAvailable = &v
}

func (o MemberInfoRSType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberInfoRSType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MemberInfoDetails) {
		toSerialize["memberInfoDetails"] = o.MemberInfoDetails
	}
	if !IsNil(o.MemberInfoRangeDetails) {
		toSerialize["memberInfoRangeDetails"] = o.MemberInfoRangeDetails
	}
	if !IsNil(o.NextTierPoints) {
		toSerialize["nextTierPoints"] = o.NextTierPoints
	}
	if !IsNil(o.PointsAvailable) {
		toSerialize["pointsAvailable"] = o.PointsAvailable
	}
	return toSerialize, nil
}

type NullableMemberInfoRSType struct {
	value *MemberInfoRSType
	isSet bool
}

func (v NullableMemberInfoRSType) Get() *MemberInfoRSType {
	return v.value
}

func (v *NullableMemberInfoRSType) Set(val *MemberInfoRSType) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberInfoRSType) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberInfoRSType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberInfoRSType(val *MemberInfoRSType) *NullableMemberInfoRSType {
	return &NullableMemberInfoRSType{value: val, isSet: true}
}

func (v NullableMemberInfoRSType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberInfoRSType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


