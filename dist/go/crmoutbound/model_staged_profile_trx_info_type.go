/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StagedProfileTrxInfoType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileTrxInfoType{}

// StagedProfileTrxInfoType Transaction codes info.
type StagedProfileTrxInfoType struct {
	// Transaction codes info.
	Description *string `json:"description,omitempty"`
	// Category of the transaction code.
	TrxGroup *string `json:"trxGroup,omitempty"`
	// Sub category of the transaction code.
	TrxSubGroup *string `json:"trxSubGroup,omitempty"`
	// Unique Universal product code of the transaction code.
	UniversalProductCode *string `json:"universalProductCode,omitempty"`
	// This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.
	RoutingInstructionsId *float32 `json:"routingInstructionsId,omitempty"`
	Articles *StagedProfileTrxInfoTypeArticles `json:"articles,omitempty"`
	// Unique identifier for the Transaction code.
	TrxCode *string `json:"trxCode,omitempty"`
	// Hotel context of the Transaction code.
	HotelId *string `json:"hotelId,omitempty"`
	// Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.
	PrintTrxReceipt *bool `json:"printTrxReceipt,omitempty"`
	// The error in transaction code information in a staged profile with an invalid status
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	Id *string `json:"id,omitempty"`
	// A reference to the type of object defined by the UniqueID element.
	Type *string `json:"type,omitempty"`
}

// NewStagedProfileTrxInfoType instantiates a new StagedProfileTrxInfoType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileTrxInfoType() *StagedProfileTrxInfoType {
	this := StagedProfileTrxInfoType{}
	return &this
}

// NewStagedProfileTrxInfoTypeWithDefaults instantiates a new StagedProfileTrxInfoType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileTrxInfoTypeWithDefaults() *StagedProfileTrxInfoType {
	this := StagedProfileTrxInfoType{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StagedProfileTrxInfoType) SetDescription(v string) {
	o.Description = &v
}

// GetTrxGroup returns the TrxGroup field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetTrxGroup() string {
	if o == nil || IsNil(o.TrxGroup) {
		var ret string
		return ret
	}
	return *o.TrxGroup
}

// GetTrxGroupOk returns a tuple with the TrxGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetTrxGroupOk() (*string, bool) {
	if o == nil || IsNil(o.TrxGroup) {
		return nil, false
	}
	return o.TrxGroup, true
}

// HasTrxGroup returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasTrxGroup() bool {
	if o != nil && !IsNil(o.TrxGroup) {
		return true
	}

	return false
}

// SetTrxGroup gets a reference to the given string and assigns it to the TrxGroup field.
func (o *StagedProfileTrxInfoType) SetTrxGroup(v string) {
	o.TrxGroup = &v
}

// GetTrxSubGroup returns the TrxSubGroup field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetTrxSubGroup() string {
	if o == nil || IsNil(o.TrxSubGroup) {
		var ret string
		return ret
	}
	return *o.TrxSubGroup
}

// GetTrxSubGroupOk returns a tuple with the TrxSubGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetTrxSubGroupOk() (*string, bool) {
	if o == nil || IsNil(o.TrxSubGroup) {
		return nil, false
	}
	return o.TrxSubGroup, true
}

// HasTrxSubGroup returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasTrxSubGroup() bool {
	if o != nil && !IsNil(o.TrxSubGroup) {
		return true
	}

	return false
}

// SetTrxSubGroup gets a reference to the given string and assigns it to the TrxSubGroup field.
func (o *StagedProfileTrxInfoType) SetTrxSubGroup(v string) {
	o.TrxSubGroup = &v
}

// GetUniversalProductCode returns the UniversalProductCode field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetUniversalProductCode() string {
	if o == nil || IsNil(o.UniversalProductCode) {
		var ret string
		return ret
	}
	return *o.UniversalProductCode
}

// GetUniversalProductCodeOk returns a tuple with the UniversalProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetUniversalProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.UniversalProductCode) {
		return nil, false
	}
	return o.UniversalProductCode, true
}

// HasUniversalProductCode returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasUniversalProductCode() bool {
	if o != nil && !IsNil(o.UniversalProductCode) {
		return true
	}

	return false
}

// SetUniversalProductCode gets a reference to the given string and assigns it to the UniversalProductCode field.
func (o *StagedProfileTrxInfoType) SetUniversalProductCode(v string) {
	o.UniversalProductCode = &v
}

// GetRoutingInstructionsId returns the RoutingInstructionsId field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetRoutingInstructionsId() float32 {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		var ret float32
		return ret
	}
	return *o.RoutingInstructionsId
}

// GetRoutingInstructionsIdOk returns a tuple with the RoutingInstructionsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetRoutingInstructionsIdOk() (*float32, bool) {
	if o == nil || IsNil(o.RoutingInstructionsId) {
		return nil, false
	}
	return o.RoutingInstructionsId, true
}

// HasRoutingInstructionsId returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasRoutingInstructionsId() bool {
	if o != nil && !IsNil(o.RoutingInstructionsId) {
		return true
	}

	return false
}

// SetRoutingInstructionsId gets a reference to the given float32 and assigns it to the RoutingInstructionsId field.
func (o *StagedProfileTrxInfoType) SetRoutingInstructionsId(v float32) {
	o.RoutingInstructionsId = &v
}

// GetArticles returns the Articles field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetArticles() StagedProfileTrxInfoTypeArticles {
	if o == nil || IsNil(o.Articles) {
		var ret StagedProfileTrxInfoTypeArticles
		return ret
	}
	return *o.Articles
}

// GetArticlesOk returns a tuple with the Articles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetArticlesOk() (*StagedProfileTrxInfoTypeArticles, bool) {
	if o == nil || IsNil(o.Articles) {
		return nil, false
	}
	return o.Articles, true
}

// HasArticles returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasArticles() bool {
	if o != nil && !IsNil(o.Articles) {
		return true
	}

	return false
}

// SetArticles gets a reference to the given StagedProfileTrxInfoTypeArticles and assigns it to the Articles field.
func (o *StagedProfileTrxInfoType) SetArticles(v StagedProfileTrxInfoTypeArticles) {
	o.Articles = &v
}

// GetTrxCode returns the TrxCode field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetTrxCode() string {
	if o == nil || IsNil(o.TrxCode) {
		var ret string
		return ret
	}
	return *o.TrxCode
}

// GetTrxCodeOk returns a tuple with the TrxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetTrxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TrxCode) {
		return nil, false
	}
	return o.TrxCode, true
}

// HasTrxCode returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasTrxCode() bool {
	if o != nil && !IsNil(o.TrxCode) {
		return true
	}

	return false
}

// SetTrxCode gets a reference to the given string and assigns it to the TrxCode field.
func (o *StagedProfileTrxInfoType) SetTrxCode(v string) {
	o.TrxCode = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StagedProfileTrxInfoType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetPrintTrxReceipt returns the PrintTrxReceipt field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetPrintTrxReceipt() bool {
	if o == nil || IsNil(o.PrintTrxReceipt) {
		var ret bool
		return ret
	}
	return *o.PrintTrxReceipt
}

// GetPrintTrxReceiptOk returns a tuple with the PrintTrxReceipt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetPrintTrxReceiptOk() (*bool, bool) {
	if o == nil || IsNil(o.PrintTrxReceipt) {
		return nil, false
	}
	return o.PrintTrxReceipt, true
}

// HasPrintTrxReceipt returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasPrintTrxReceipt() bool {
	if o != nil && !IsNil(o.PrintTrxReceipt) {
		return true
	}

	return false
}

// SetPrintTrxReceipt gets a reference to the given bool and assigns it to the PrintTrxReceipt field.
func (o *StagedProfileTrxInfoType) SetPrintTrxReceipt(v bool) {
	o.PrintTrxReceipt = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *StagedProfileTrxInfoType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StagedProfileTrxInfoType) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StagedProfileTrxInfoType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileTrxInfoType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StagedProfileTrxInfoType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StagedProfileTrxInfoType) SetType(v string) {
	o.Type = &v
}

func (o StagedProfileTrxInfoType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileTrxInfoType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TrxGroup) {
		toSerialize["trxGroup"] = o.TrxGroup
	}
	if !IsNil(o.TrxSubGroup) {
		toSerialize["trxSubGroup"] = o.TrxSubGroup
	}
	if !IsNil(o.UniversalProductCode) {
		toSerialize["universalProductCode"] = o.UniversalProductCode
	}
	if !IsNil(o.RoutingInstructionsId) {
		toSerialize["routingInstructionsId"] = o.RoutingInstructionsId
	}
	if !IsNil(o.Articles) {
		toSerialize["articles"] = o.Articles
	}
	if !IsNil(o.TrxCode) {
		toSerialize["trxCode"] = o.TrxCode
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.PrintTrxReceipt) {
		toSerialize["printTrxReceipt"] = o.PrintTrxReceipt
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableStagedProfileTrxInfoType struct {
	value *StagedProfileTrxInfoType
	isSet bool
}

func (v NullableStagedProfileTrxInfoType) Get() *StagedProfileTrxInfoType {
	return v.value
}

func (v *NullableStagedProfileTrxInfoType) Set(val *StagedProfileTrxInfoType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileTrxInfoType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileTrxInfoType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileTrxInfoType(val *StagedProfileTrxInfoType) *NullableStagedProfileTrxInfoType {
	return &NullableStagedProfileTrxInfoType{value: val, isSet: true}
}

func (v NullableStagedProfileTrxInfoType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileTrxInfoType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


