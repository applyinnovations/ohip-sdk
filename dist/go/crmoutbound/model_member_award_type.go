/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the MemberAwardType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberAwardType{}

// MemberAwardType struct for MemberAwardType
type MemberAwardType struct {
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	// The type of the membership.
	MembershipType *string `json:"membershipType,omitempty"`
	// The card number associated with this membership.
	MembershipCardNo *string `json:"membershipCardNo,omitempty"`
	// The current level of the membership.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ReservationIdList []UniqueIDType `json:"reservationIdList,omitempty"`
	// Number of adults associated with the reservation.
	Adults *int32 `json:"adults,omitempty"`
	ReservationTimeSpan *TimeSpanType `json:"reservationTimeSpan,omitempty"`
	// Member points before award transaction.
	MemberPointsBefore *int32 `json:"memberPointsBefore,omitempty"`
	// Member points after award transaction.
	MemberPointsAfter *int32 `json:"memberPointsAfter,omitempty"`
	// Points associated with the award.
	AwardPoints *int32 `json:"awardPoints,omitempty"`
	// Number of cancel points returned.
	CancelPointsReturn *int32 `json:"cancelPointsReturn,omitempty"`
	// Actual number of cancel points.
	ActualCancelPoints *int32 `json:"actualCancelPoints,omitempty"`
	// Points that will expire.
	ExpiryPoints *int32 `json:"expiryPoints,omitempty"`
	AwardProcessType *MemberAwardProcessType `json:"awardProcessType,omitempty"`
	// Details related to member award per stay date.
	MemberAwardDetails []MemberAwardDetailType `json:"memberAwardDetails,omitempty"`
	// Property associated with the reservation.
	HotelId *string `json:"hotelId,omitempty"`
}

// NewMemberAwardType instantiates a new MemberAwardType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberAwardType() *MemberAwardType {
	this := MemberAwardType{}
	return &this
}

// NewMemberAwardTypeWithDefaults instantiates a new MemberAwardType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberAwardTypeWithDefaults() *MemberAwardType {
	this := MemberAwardType{}
	return &this
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *MemberAwardType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *MemberAwardType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *MemberAwardType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *MemberAwardType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *MemberAwardType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *MemberAwardType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetMembershipCardNo returns the MembershipCardNo field value if set, zero value otherwise.
func (o *MemberAwardType) GetMembershipCardNo() string {
	if o == nil || IsNil(o.MembershipCardNo) {
		var ret string
		return ret
	}
	return *o.MembershipCardNo
}

// GetMembershipCardNoOk returns a tuple with the MembershipCardNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMembershipCardNoOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipCardNo) {
		return nil, false
	}
	return o.MembershipCardNo, true
}

// HasMembershipCardNo returns a boolean if a field has been set.
func (o *MemberAwardType) HasMembershipCardNo() bool {
	if o != nil && !IsNil(o.MembershipCardNo) {
		return true
	}

	return false
}

// SetMembershipCardNo gets a reference to the given string and assigns it to the MembershipCardNo field.
func (o *MemberAwardType) SetMembershipCardNo(v string) {
	o.MembershipCardNo = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *MemberAwardType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *MemberAwardType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *MemberAwardType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *MemberAwardType) GetReservationIdList() []UniqueIDType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetReservationIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *MemberAwardType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given []UniqueIDType and assigns it to the ReservationIdList field.
func (o *MemberAwardType) SetReservationIdList(v []UniqueIDType) {
	o.ReservationIdList = v
}

// GetAdults returns the Adults field value if set, zero value otherwise.
func (o *MemberAwardType) GetAdults() int32 {
	if o == nil || IsNil(o.Adults) {
		var ret int32
		return ret
	}
	return *o.Adults
}

// GetAdultsOk returns a tuple with the Adults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetAdultsOk() (*int32, bool) {
	if o == nil || IsNil(o.Adults) {
		return nil, false
	}
	return o.Adults, true
}

// HasAdults returns a boolean if a field has been set.
func (o *MemberAwardType) HasAdults() bool {
	if o != nil && !IsNil(o.Adults) {
		return true
	}

	return false
}

// SetAdults gets a reference to the given int32 and assigns it to the Adults field.
func (o *MemberAwardType) SetAdults(v int32) {
	o.Adults = &v
}

// GetReservationTimeSpan returns the ReservationTimeSpan field value if set, zero value otherwise.
func (o *MemberAwardType) GetReservationTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.ReservationTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.ReservationTimeSpan
}

// GetReservationTimeSpanOk returns a tuple with the ReservationTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetReservationTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.ReservationTimeSpan) {
		return nil, false
	}
	return o.ReservationTimeSpan, true
}

// HasReservationTimeSpan returns a boolean if a field has been set.
func (o *MemberAwardType) HasReservationTimeSpan() bool {
	if o != nil && !IsNil(o.ReservationTimeSpan) {
		return true
	}

	return false
}

// SetReservationTimeSpan gets a reference to the given TimeSpanType and assigns it to the ReservationTimeSpan field.
func (o *MemberAwardType) SetReservationTimeSpan(v TimeSpanType) {
	o.ReservationTimeSpan = &v
}

// GetMemberPointsBefore returns the MemberPointsBefore field value if set, zero value otherwise.
func (o *MemberAwardType) GetMemberPointsBefore() int32 {
	if o == nil || IsNil(o.MemberPointsBefore) {
		var ret int32
		return ret
	}
	return *o.MemberPointsBefore
}

// GetMemberPointsBeforeOk returns a tuple with the MemberPointsBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMemberPointsBeforeOk() (*int32, bool) {
	if o == nil || IsNil(o.MemberPointsBefore) {
		return nil, false
	}
	return o.MemberPointsBefore, true
}

// HasMemberPointsBefore returns a boolean if a field has been set.
func (o *MemberAwardType) HasMemberPointsBefore() bool {
	if o != nil && !IsNil(o.MemberPointsBefore) {
		return true
	}

	return false
}

// SetMemberPointsBefore gets a reference to the given int32 and assigns it to the MemberPointsBefore field.
func (o *MemberAwardType) SetMemberPointsBefore(v int32) {
	o.MemberPointsBefore = &v
}

// GetMemberPointsAfter returns the MemberPointsAfter field value if set, zero value otherwise.
func (o *MemberAwardType) GetMemberPointsAfter() int32 {
	if o == nil || IsNil(o.MemberPointsAfter) {
		var ret int32
		return ret
	}
	return *o.MemberPointsAfter
}

// GetMemberPointsAfterOk returns a tuple with the MemberPointsAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMemberPointsAfterOk() (*int32, bool) {
	if o == nil || IsNil(o.MemberPointsAfter) {
		return nil, false
	}
	return o.MemberPointsAfter, true
}

// HasMemberPointsAfter returns a boolean if a field has been set.
func (o *MemberAwardType) HasMemberPointsAfter() bool {
	if o != nil && !IsNil(o.MemberPointsAfter) {
		return true
	}

	return false
}

// SetMemberPointsAfter gets a reference to the given int32 and assigns it to the MemberPointsAfter field.
func (o *MemberAwardType) SetMemberPointsAfter(v int32) {
	o.MemberPointsAfter = &v
}

// GetAwardPoints returns the AwardPoints field value if set, zero value otherwise.
func (o *MemberAwardType) GetAwardPoints() int32 {
	if o == nil || IsNil(o.AwardPoints) {
		var ret int32
		return ret
	}
	return *o.AwardPoints
}

// GetAwardPointsOk returns a tuple with the AwardPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetAwardPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardPoints) {
		return nil, false
	}
	return o.AwardPoints, true
}

// HasAwardPoints returns a boolean if a field has been set.
func (o *MemberAwardType) HasAwardPoints() bool {
	if o != nil && !IsNil(o.AwardPoints) {
		return true
	}

	return false
}

// SetAwardPoints gets a reference to the given int32 and assigns it to the AwardPoints field.
func (o *MemberAwardType) SetAwardPoints(v int32) {
	o.AwardPoints = &v
}

// GetCancelPointsReturn returns the CancelPointsReturn field value if set, zero value otherwise.
func (o *MemberAwardType) GetCancelPointsReturn() int32 {
	if o == nil || IsNil(o.CancelPointsReturn) {
		var ret int32
		return ret
	}
	return *o.CancelPointsReturn
}

// GetCancelPointsReturnOk returns a tuple with the CancelPointsReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetCancelPointsReturnOk() (*int32, bool) {
	if o == nil || IsNil(o.CancelPointsReturn) {
		return nil, false
	}
	return o.CancelPointsReturn, true
}

// HasCancelPointsReturn returns a boolean if a field has been set.
func (o *MemberAwardType) HasCancelPointsReturn() bool {
	if o != nil && !IsNil(o.CancelPointsReturn) {
		return true
	}

	return false
}

// SetCancelPointsReturn gets a reference to the given int32 and assigns it to the CancelPointsReturn field.
func (o *MemberAwardType) SetCancelPointsReturn(v int32) {
	o.CancelPointsReturn = &v
}

// GetActualCancelPoints returns the ActualCancelPoints field value if set, zero value otherwise.
func (o *MemberAwardType) GetActualCancelPoints() int32 {
	if o == nil || IsNil(o.ActualCancelPoints) {
		var ret int32
		return ret
	}
	return *o.ActualCancelPoints
}

// GetActualCancelPointsOk returns a tuple with the ActualCancelPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetActualCancelPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.ActualCancelPoints) {
		return nil, false
	}
	return o.ActualCancelPoints, true
}

// HasActualCancelPoints returns a boolean if a field has been set.
func (o *MemberAwardType) HasActualCancelPoints() bool {
	if o != nil && !IsNil(o.ActualCancelPoints) {
		return true
	}

	return false
}

// SetActualCancelPoints gets a reference to the given int32 and assigns it to the ActualCancelPoints field.
func (o *MemberAwardType) SetActualCancelPoints(v int32) {
	o.ActualCancelPoints = &v
}

// GetExpiryPoints returns the ExpiryPoints field value if set, zero value otherwise.
func (o *MemberAwardType) GetExpiryPoints() int32 {
	if o == nil || IsNil(o.ExpiryPoints) {
		var ret int32
		return ret
	}
	return *o.ExpiryPoints
}

// GetExpiryPointsOk returns a tuple with the ExpiryPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetExpiryPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiryPoints) {
		return nil, false
	}
	return o.ExpiryPoints, true
}

// HasExpiryPoints returns a boolean if a field has been set.
func (o *MemberAwardType) HasExpiryPoints() bool {
	if o != nil && !IsNil(o.ExpiryPoints) {
		return true
	}

	return false
}

// SetExpiryPoints gets a reference to the given int32 and assigns it to the ExpiryPoints field.
func (o *MemberAwardType) SetExpiryPoints(v int32) {
	o.ExpiryPoints = &v
}

// GetAwardProcessType returns the AwardProcessType field value if set, zero value otherwise.
func (o *MemberAwardType) GetAwardProcessType() MemberAwardProcessType {
	if o == nil || IsNil(o.AwardProcessType) {
		var ret MemberAwardProcessType
		return ret
	}
	return *o.AwardProcessType
}

// GetAwardProcessTypeOk returns a tuple with the AwardProcessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetAwardProcessTypeOk() (*MemberAwardProcessType, bool) {
	if o == nil || IsNil(o.AwardProcessType) {
		return nil, false
	}
	return o.AwardProcessType, true
}

// HasAwardProcessType returns a boolean if a field has been set.
func (o *MemberAwardType) HasAwardProcessType() bool {
	if o != nil && !IsNil(o.AwardProcessType) {
		return true
	}

	return false
}

// SetAwardProcessType gets a reference to the given MemberAwardProcessType and assigns it to the AwardProcessType field.
func (o *MemberAwardType) SetAwardProcessType(v MemberAwardProcessType) {
	o.AwardProcessType = &v
}

// GetMemberAwardDetails returns the MemberAwardDetails field value if set, zero value otherwise.
func (o *MemberAwardType) GetMemberAwardDetails() []MemberAwardDetailType {
	if o == nil || IsNil(o.MemberAwardDetails) {
		var ret []MemberAwardDetailType
		return ret
	}
	return o.MemberAwardDetails
}

// GetMemberAwardDetailsOk returns a tuple with the MemberAwardDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetMemberAwardDetailsOk() ([]MemberAwardDetailType, bool) {
	if o == nil || IsNil(o.MemberAwardDetails) {
		return nil, false
	}
	return o.MemberAwardDetails, true
}

// HasMemberAwardDetails returns a boolean if a field has been set.
func (o *MemberAwardType) HasMemberAwardDetails() bool {
	if o != nil && !IsNil(o.MemberAwardDetails) {
		return true
	}

	return false
}

// SetMemberAwardDetails gets a reference to the given []MemberAwardDetailType and assigns it to the MemberAwardDetails field.
func (o *MemberAwardType) SetMemberAwardDetails(v []MemberAwardDetailType) {
	o.MemberAwardDetails = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *MemberAwardType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberAwardType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *MemberAwardType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *MemberAwardType) SetHotelId(v string) {
	o.HotelId = &v
}

func (o MemberAwardType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberAwardType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.MembershipCardNo) {
		toSerialize["membershipCardNo"] = o.MembershipCardNo
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.Adults) {
		toSerialize["adults"] = o.Adults
	}
	if !IsNil(o.ReservationTimeSpan) {
		toSerialize["reservationTimeSpan"] = o.ReservationTimeSpan
	}
	if !IsNil(o.MemberPointsBefore) {
		toSerialize["memberPointsBefore"] = o.MemberPointsBefore
	}
	if !IsNil(o.MemberPointsAfter) {
		toSerialize["memberPointsAfter"] = o.MemberPointsAfter
	}
	if !IsNil(o.AwardPoints) {
		toSerialize["awardPoints"] = o.AwardPoints
	}
	if !IsNil(o.CancelPointsReturn) {
		toSerialize["cancelPointsReturn"] = o.CancelPointsReturn
	}
	if !IsNil(o.ActualCancelPoints) {
		toSerialize["actualCancelPoints"] = o.ActualCancelPoints
	}
	if !IsNil(o.ExpiryPoints) {
		toSerialize["expiryPoints"] = o.ExpiryPoints
	}
	if !IsNil(o.AwardProcessType) {
		toSerialize["awardProcessType"] = o.AwardProcessType
	}
	if !IsNil(o.MemberAwardDetails) {
		toSerialize["memberAwardDetails"] = o.MemberAwardDetails
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	return toSerialize, nil
}

type NullableMemberAwardType struct {
	value *MemberAwardType
	isSet bool
}

func (v NullableMemberAwardType) Get() *MemberAwardType {
	return v.value
}

func (v *NullableMemberAwardType) Set(val *MemberAwardType) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberAwardType) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberAwardType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberAwardType(val *MemberAwardType) *NullableMemberAwardType {
	return &NullableMemberAwardType{value: val, isSet: true}
}

func (v NullableMemberAwardType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberAwardType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


