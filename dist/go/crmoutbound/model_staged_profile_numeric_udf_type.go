/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the StagedProfileNumericUDFType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileNumericUDFType{}

// StagedProfileNumericUDFType Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.
type StagedProfileNumericUDFType struct {
	// Name of user defined field.
	Name *string `json:"name,omitempty"`
	// Value of user defined field.
	Value *float32 `json:"value,omitempty"`
	// Label of user defined field used by vendors or customers.
	Altname *string `json:"altname,omitempty"`
	// The error in a user defined field in a staged profile with an invalid status
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// PMS table name.
	TableName *string `json:"tableName,omitempty"`
	// Indicates whether the UDF information is valid.
	Valid *bool `json:"valid,omitempty"`
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	Id *string `json:"id,omitempty"`
	// A reference to the type of object defined by the UniqueID element.
	Type *string `json:"type,omitempty"`
}

// NewStagedProfileNumericUDFType instantiates a new StagedProfileNumericUDFType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileNumericUDFType() *StagedProfileNumericUDFType {
	this := StagedProfileNumericUDFType{}
	return &this
}

// NewStagedProfileNumericUDFTypeWithDefaults instantiates a new StagedProfileNumericUDFType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileNumericUDFTypeWithDefaults() *StagedProfileNumericUDFType {
	this := StagedProfileNumericUDFType{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StagedProfileNumericUDFType) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *StagedProfileNumericUDFType) SetValue(v float32) {
	o.Value = &v
}

// GetAltname returns the Altname field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetAltname() string {
	if o == nil || IsNil(o.Altname) {
		var ret string
		return ret
	}
	return *o.Altname
}

// GetAltnameOk returns a tuple with the Altname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetAltnameOk() (*string, bool) {
	if o == nil || IsNil(o.Altname) {
		return nil, false
	}
	return o.Altname, true
}

// HasAltname returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasAltname() bool {
	if o != nil && !IsNil(o.Altname) {
		return true
	}

	return false
}

// SetAltname gets a reference to the given string and assigns it to the Altname field.
func (o *StagedProfileNumericUDFType) SetAltname(v string) {
	o.Altname = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *StagedProfileNumericUDFType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetTableName returns the TableName field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetTableName() string {
	if o == nil || IsNil(o.TableName) {
		var ret string
		return ret
	}
	return *o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetTableNameOk() (*string, bool) {
	if o == nil || IsNil(o.TableName) {
		return nil, false
	}
	return o.TableName, true
}

// HasTableName returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasTableName() bool {
	if o != nil && !IsNil(o.TableName) {
		return true
	}

	return false
}

// SetTableName gets a reference to the given string and assigns it to the TableName field.
func (o *StagedProfileNumericUDFType) SetTableName(v string) {
	o.TableName = &v
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetValid() bool {
	if o == nil || IsNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetValidOk() (*bool, bool) {
	if o == nil || IsNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasValid() bool {
	if o != nil && !IsNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *StagedProfileNumericUDFType) SetValid(v bool) {
	o.Valid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StagedProfileNumericUDFType) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StagedProfileNumericUDFType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileNumericUDFType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StagedProfileNumericUDFType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StagedProfileNumericUDFType) SetType(v string) {
	o.Type = &v
}

func (o StagedProfileNumericUDFType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileNumericUDFType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Altname) {
		toSerialize["altname"] = o.Altname
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.TableName) {
		toSerialize["tableName"] = o.TableName
	}
	if !IsNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableStagedProfileNumericUDFType struct {
	value *StagedProfileNumericUDFType
	isSet bool
}

func (v NullableStagedProfileNumericUDFType) Get() *StagedProfileNumericUDFType {
	return v.value
}

func (v *NullableStagedProfileNumericUDFType) Set(val *StagedProfileNumericUDFType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileNumericUDFType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileNumericUDFType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileNumericUDFType(val *StagedProfileNumericUDFType) *NullableStagedProfileNumericUDFType {
	return &NullableStagedProfileNumericUDFType{value: val, isSet: true}
}

func (v NullableStagedProfileNumericUDFType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileNumericUDFType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


