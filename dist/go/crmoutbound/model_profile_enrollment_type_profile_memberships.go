/*
OPERA Cloud Customer Relationship Management Outbound API

APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 20.99.99.99
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmoutbound

import (
	"encoding/json"
)

// checks if the ProfileEnrollmentTypeProfileMemberships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileEnrollmentTypeProfileMemberships{}

// ProfileEnrollmentTypeProfileMemberships List of loyalty program(s) the profile is subscribed to.
type ProfileEnrollmentTypeProfileMemberships struct {
	// Collection of Detailed information on memberships for the customer.
	ProfileMembership []ProfileMembershipType `json:"profileMembership,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	AllRowsFetched *bool `json:"allRowsFetched,omitempty"`
	// Total number of rows queried
	TotalRows *int32 `json:"totalRows,omitempty"`
}

// NewProfileEnrollmentTypeProfileMemberships instantiates a new ProfileEnrollmentTypeProfileMemberships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileEnrollmentTypeProfileMemberships() *ProfileEnrollmentTypeProfileMemberships {
	this := ProfileEnrollmentTypeProfileMemberships{}
	return &this
}

// NewProfileEnrollmentTypeProfileMembershipsWithDefaults instantiates a new ProfileEnrollmentTypeProfileMemberships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileEnrollmentTypeProfileMembershipsWithDefaults() *ProfileEnrollmentTypeProfileMemberships {
	this := ProfileEnrollmentTypeProfileMemberships{}
	return &this
}

// GetProfileMembership returns the ProfileMembership field value if set, zero value otherwise.
func (o *ProfileEnrollmentTypeProfileMemberships) GetProfileMembership() []ProfileMembershipType {
	if o == nil || IsNil(o.ProfileMembership) {
		var ret []ProfileMembershipType
		return ret
	}
	return o.ProfileMembership
}

// GetProfileMembershipOk returns a tuple with the ProfileMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) GetProfileMembershipOk() ([]ProfileMembershipType, bool) {
	if o == nil || IsNil(o.ProfileMembership) {
		return nil, false
	}
	return o.ProfileMembership, true
}

// HasProfileMembership returns a boolean if a field has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) HasProfileMembership() bool {
	if o != nil && !IsNil(o.ProfileMembership) {
		return true
	}

	return false
}

// SetProfileMembership gets a reference to the given []ProfileMembershipType and assigns it to the ProfileMembership field.
func (o *ProfileEnrollmentTypeProfileMemberships) SetProfileMembership(v []ProfileMembershipType) {
	o.ProfileMembership = v
}

// GetAllRowsFetched returns the AllRowsFetched field value if set, zero value otherwise.
func (o *ProfileEnrollmentTypeProfileMemberships) GetAllRowsFetched() bool {
	if o == nil || IsNil(o.AllRowsFetched) {
		var ret bool
		return ret
	}
	return *o.AllRowsFetched
}

// GetAllRowsFetchedOk returns a tuple with the AllRowsFetched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) GetAllRowsFetchedOk() (*bool, bool) {
	if o == nil || IsNil(o.AllRowsFetched) {
		return nil, false
	}
	return o.AllRowsFetched, true
}

// HasAllRowsFetched returns a boolean if a field has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) HasAllRowsFetched() bool {
	if o != nil && !IsNil(o.AllRowsFetched) {
		return true
	}

	return false
}

// SetAllRowsFetched gets a reference to the given bool and assigns it to the AllRowsFetched field.
func (o *ProfileEnrollmentTypeProfileMemberships) SetAllRowsFetched(v bool) {
	o.AllRowsFetched = &v
}

// GetTotalRows returns the TotalRows field value if set, zero value otherwise.
func (o *ProfileEnrollmentTypeProfileMemberships) GetTotalRows() int32 {
	if o == nil || IsNil(o.TotalRows) {
		var ret int32
		return ret
	}
	return *o.TotalRows
}

// GetTotalRowsOk returns a tuple with the TotalRows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) GetTotalRowsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRows) {
		return nil, false
	}
	return o.TotalRows, true
}

// HasTotalRows returns a boolean if a field has been set.
func (o *ProfileEnrollmentTypeProfileMemberships) HasTotalRows() bool {
	if o != nil && !IsNil(o.TotalRows) {
		return true
	}

	return false
}

// SetTotalRows gets a reference to the given int32 and assigns it to the TotalRows field.
func (o *ProfileEnrollmentTypeProfileMemberships) SetTotalRows(v int32) {
	o.TotalRows = &v
}

func (o ProfileEnrollmentTypeProfileMemberships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileEnrollmentTypeProfileMemberships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileMembership) {
		toSerialize["profileMembership"] = o.ProfileMembership
	}
	if !IsNil(o.AllRowsFetched) {
		toSerialize["allRowsFetched"] = o.AllRowsFetched
	}
	if !IsNil(o.TotalRows) {
		toSerialize["totalRows"] = o.TotalRows
	}
	return toSerialize, nil
}

type NullableProfileEnrollmentTypeProfileMemberships struct {
	value *ProfileEnrollmentTypeProfileMemberships
	isSet bool
}

func (v NullableProfileEnrollmentTypeProfileMemberships) Get() *ProfileEnrollmentTypeProfileMemberships {
	return v.value
}

func (v *NullableProfileEnrollmentTypeProfileMemberships) Set(val *ProfileEnrollmentTypeProfileMemberships) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileEnrollmentTypeProfileMemberships) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileEnrollmentTypeProfileMemberships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileEnrollmentTypeProfileMemberships(val *ProfileEnrollmentTypeProfileMemberships) *NullableProfileEnrollmentTypeProfileMemberships {
	return &NullableProfileEnrollmentTypeProfileMemberships{value: val, isSet: true}
}

func (v NullableProfileEnrollmentTypeProfileMemberships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileEnrollmentTypeProfileMemberships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


