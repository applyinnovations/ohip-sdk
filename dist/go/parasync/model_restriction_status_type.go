/*
OPERA Cloud Price Availability Rate Async API

APIs to cater for Price and Rate Availability Asynchronous functionality in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package parasync

import (
	"encoding/json"
)

// checks if the RestrictionStatusType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestrictionStatusType{}

// RestrictionStatusType The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.
type RestrictionStatusType struct {
	Code *RestrictionStatusesType `json:"code,omitempty"`
	// Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay1 *bool `json:"lengthOfStay1,omitempty"`
	// Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay2 *bool `json:"lengthOfStay2,omitempty"`
	// Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay3 *bool `json:"lengthOfStay3,omitempty"`
	// Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay4 *bool `json:"lengthOfStay4,omitempty"`
	// Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay5 *bool `json:"lengthOfStay5,omitempty"`
	// Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay6 *bool `json:"lengthOfStay6,omitempty"`
	// Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LengthOfStayNotAvailable.
	LengthOfStay7 *bool `json:"lengthOfStay7,omitempty"`
	// Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.
	Unit *int32 `json:"unit,omitempty"`
}

// NewRestrictionStatusType instantiates a new RestrictionStatusType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestrictionStatusType() *RestrictionStatusType {
	this := RestrictionStatusType{}
	return &this
}

// NewRestrictionStatusTypeWithDefaults instantiates a new RestrictionStatusType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestrictionStatusTypeWithDefaults() *RestrictionStatusType {
	this := RestrictionStatusType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetCode() RestrictionStatusesType {
	if o == nil || IsNil(o.Code) {
		var ret RestrictionStatusesType
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetCodeOk() (*RestrictionStatusesType, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given RestrictionStatusesType and assigns it to the Code field.
func (o *RestrictionStatusType) SetCode(v RestrictionStatusesType) {
	o.Code = &v
}

// GetLengthOfStay1 returns the LengthOfStay1 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay1() bool {
	if o == nil || IsNil(o.LengthOfStay1) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay1
}

// GetLengthOfStay1Ok returns a tuple with the LengthOfStay1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay1Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay1) {
		return nil, false
	}
	return o.LengthOfStay1, true
}

// HasLengthOfStay1 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay1() bool {
	if o != nil && !IsNil(o.LengthOfStay1) {
		return true
	}

	return false
}

// SetLengthOfStay1 gets a reference to the given bool and assigns it to the LengthOfStay1 field.
func (o *RestrictionStatusType) SetLengthOfStay1(v bool) {
	o.LengthOfStay1 = &v
}

// GetLengthOfStay2 returns the LengthOfStay2 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay2() bool {
	if o == nil || IsNil(o.LengthOfStay2) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay2
}

// GetLengthOfStay2Ok returns a tuple with the LengthOfStay2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay2Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay2) {
		return nil, false
	}
	return o.LengthOfStay2, true
}

// HasLengthOfStay2 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay2() bool {
	if o != nil && !IsNil(o.LengthOfStay2) {
		return true
	}

	return false
}

// SetLengthOfStay2 gets a reference to the given bool and assigns it to the LengthOfStay2 field.
func (o *RestrictionStatusType) SetLengthOfStay2(v bool) {
	o.LengthOfStay2 = &v
}

// GetLengthOfStay3 returns the LengthOfStay3 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay3() bool {
	if o == nil || IsNil(o.LengthOfStay3) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay3
}

// GetLengthOfStay3Ok returns a tuple with the LengthOfStay3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay3Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay3) {
		return nil, false
	}
	return o.LengthOfStay3, true
}

// HasLengthOfStay3 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay3() bool {
	if o != nil && !IsNil(o.LengthOfStay3) {
		return true
	}

	return false
}

// SetLengthOfStay3 gets a reference to the given bool and assigns it to the LengthOfStay3 field.
func (o *RestrictionStatusType) SetLengthOfStay3(v bool) {
	o.LengthOfStay3 = &v
}

// GetLengthOfStay4 returns the LengthOfStay4 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay4() bool {
	if o == nil || IsNil(o.LengthOfStay4) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay4
}

// GetLengthOfStay4Ok returns a tuple with the LengthOfStay4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay4Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay4) {
		return nil, false
	}
	return o.LengthOfStay4, true
}

// HasLengthOfStay4 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay4() bool {
	if o != nil && !IsNil(o.LengthOfStay4) {
		return true
	}

	return false
}

// SetLengthOfStay4 gets a reference to the given bool and assigns it to the LengthOfStay4 field.
func (o *RestrictionStatusType) SetLengthOfStay4(v bool) {
	o.LengthOfStay4 = &v
}

// GetLengthOfStay5 returns the LengthOfStay5 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay5() bool {
	if o == nil || IsNil(o.LengthOfStay5) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay5
}

// GetLengthOfStay5Ok returns a tuple with the LengthOfStay5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay5Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay5) {
		return nil, false
	}
	return o.LengthOfStay5, true
}

// HasLengthOfStay5 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay5() bool {
	if o != nil && !IsNil(o.LengthOfStay5) {
		return true
	}

	return false
}

// SetLengthOfStay5 gets a reference to the given bool and assigns it to the LengthOfStay5 field.
func (o *RestrictionStatusType) SetLengthOfStay5(v bool) {
	o.LengthOfStay5 = &v
}

// GetLengthOfStay6 returns the LengthOfStay6 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay6() bool {
	if o == nil || IsNil(o.LengthOfStay6) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay6
}

// GetLengthOfStay6Ok returns a tuple with the LengthOfStay6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay6Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay6) {
		return nil, false
	}
	return o.LengthOfStay6, true
}

// HasLengthOfStay6 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay6() bool {
	if o != nil && !IsNil(o.LengthOfStay6) {
		return true
	}

	return false
}

// SetLengthOfStay6 gets a reference to the given bool and assigns it to the LengthOfStay6 field.
func (o *RestrictionStatusType) SetLengthOfStay6(v bool) {
	o.LengthOfStay6 = &v
}

// GetLengthOfStay7 returns the LengthOfStay7 field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetLengthOfStay7() bool {
	if o == nil || IsNil(o.LengthOfStay7) {
		var ret bool
		return ret
	}
	return *o.LengthOfStay7
}

// GetLengthOfStay7Ok returns a tuple with the LengthOfStay7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetLengthOfStay7Ok() (*bool, bool) {
	if o == nil || IsNil(o.LengthOfStay7) {
		return nil, false
	}
	return o.LengthOfStay7, true
}

// HasLengthOfStay7 returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasLengthOfStay7() bool {
	if o != nil && !IsNil(o.LengthOfStay7) {
		return true
	}

	return false
}

// SetLengthOfStay7 gets a reference to the given bool and assigns it to the LengthOfStay7 field.
func (o *RestrictionStatusType) SetLengthOfStay7(v bool) {
	o.LengthOfStay7 = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *RestrictionStatusType) GetUnit() int32 {
	if o == nil || IsNil(o.Unit) {
		var ret int32
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestrictionStatusType) GetUnitOk() (*int32, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *RestrictionStatusType) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given int32 and assigns it to the Unit field.
func (o *RestrictionStatusType) SetUnit(v int32) {
	o.Unit = &v
}

func (o RestrictionStatusType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestrictionStatusType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.LengthOfStay1) {
		toSerialize["lengthOfStay1"] = o.LengthOfStay1
	}
	if !IsNil(o.LengthOfStay2) {
		toSerialize["lengthOfStay2"] = o.LengthOfStay2
	}
	if !IsNil(o.LengthOfStay3) {
		toSerialize["lengthOfStay3"] = o.LengthOfStay3
	}
	if !IsNil(o.LengthOfStay4) {
		toSerialize["lengthOfStay4"] = o.LengthOfStay4
	}
	if !IsNil(o.LengthOfStay5) {
		toSerialize["lengthOfStay5"] = o.LengthOfStay5
	}
	if !IsNil(o.LengthOfStay6) {
		toSerialize["lengthOfStay6"] = o.LengthOfStay6
	}
	if !IsNil(o.LengthOfStay7) {
		toSerialize["lengthOfStay7"] = o.LengthOfStay7
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableRestrictionStatusType struct {
	value *RestrictionStatusType
	isSet bool
}

func (v NullableRestrictionStatusType) Get() *RestrictionStatusType {
	return v.value
}

func (v *NullableRestrictionStatusType) Set(val *RestrictionStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableRestrictionStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableRestrictionStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestrictionStatusType(val *RestrictionStatusType) *NullableRestrictionStatusType {
	return &NullableRestrictionStatusType{value: val, isSet: true}
}

func (v NullableRestrictionStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestrictionStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


