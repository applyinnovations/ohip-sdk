/*
Opera Cloud Inventory Asynchronous API

APIs to cater for Inventory related asynchronous functionality in OPERA Cloud. This includes viewing inventory data along with its revenue and updating inventory&apos;s sell limits for date ranges. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invasync

import (
	"encoding/json"
)

// checks if the RevenueInventoryStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevenueInventoryStatisticsType{}

// RevenueInventoryStatisticsType Revenue and statistics for an occupancy date and hotel code.
type RevenueInventoryStatisticsType struct {
	// The property for which revenue inventory statistics are fetched
	Property *string `json:"property,omitempty"`
	// The occupancy date for which the revenue inventory statistics are fetched.
	OccupancyDate *string `json:"occupancyDate,omitempty"`
	ResType *string `json:"resType,omitempty"`
	// The market code for which the revenue inventory statistics are fetched.
	MarketCode *string `json:"marketCode,omitempty"`
	// The room type for which the revenue inventory statistics are fetched.
	RoomType *string `json:"roomType,omitempty"`
	// The statistical figure for physical rooms.
	PhysicalRooms *string `json:"physicalRooms,omitempty"`
	// The statistical figure for out of order rooms.
	OoRooms *string `json:"ooRooms,omitempty"`
	// The statistical figure for out of service rooms.
	OsRooms *string `json:"osRooms,omitempty"`
	// The statistical figure for rooms sold.
	RoomsSold *string `json:"roomsSold,omitempty"`
	// The statistical figure for room revenue.
	RoomRevenue *string `json:"roomRevenue,omitempty"`
	// The statistical figure for arrival rooms.
	RoomArrivals *string `json:"roomArrivals,omitempty"`
	// The statistical figure of departure rooms.
	RoomDepartures *string `json:"roomDepartures,omitempty"`
	// The statistical figure for food revenue.
	FoodRevenue *string `json:"foodRevenue,omitempty"`
	// The statistical figure for total revenue.
	TotalRevenue *string `json:"totalRevenue,omitempty"`
	// The statistical figure for canceled rooms.
	CancelledRooms *string `json:"cancelledRooms,omitempty"`
	// The statistical figure of no show rooms.
	NoShowRooms *string `json:"noShowRooms,omitempty"`
}

// NewRevenueInventoryStatisticsType instantiates a new RevenueInventoryStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevenueInventoryStatisticsType() *RevenueInventoryStatisticsType {
	this := RevenueInventoryStatisticsType{}
	return &this
}

// NewRevenueInventoryStatisticsTypeWithDefaults instantiates a new RevenueInventoryStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevenueInventoryStatisticsTypeWithDefaults() *RevenueInventoryStatisticsType {
	this := RevenueInventoryStatisticsType{}
	return &this
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *RevenueInventoryStatisticsType) SetProperty(v string) {
	o.Property = &v
}

// GetOccupancyDate returns the OccupancyDate field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetOccupancyDate() string {
	if o == nil || IsNil(o.OccupancyDate) {
		var ret string
		return ret
	}
	return *o.OccupancyDate
}

// GetOccupancyDateOk returns a tuple with the OccupancyDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetOccupancyDateOk() (*string, bool) {
	if o == nil || IsNil(o.OccupancyDate) {
		return nil, false
	}
	return o.OccupancyDate, true
}

// HasOccupancyDate returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasOccupancyDate() bool {
	if o != nil && !IsNil(o.OccupancyDate) {
		return true
	}

	return false
}

// SetOccupancyDate gets a reference to the given string and assigns it to the OccupancyDate field.
func (o *RevenueInventoryStatisticsType) SetOccupancyDate(v string) {
	o.OccupancyDate = &v
}

// GetResType returns the ResType field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetResType() string {
	if o == nil || IsNil(o.ResType) {
		var ret string
		return ret
	}
	return *o.ResType
}

// GetResTypeOk returns a tuple with the ResType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetResTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResType) {
		return nil, false
	}
	return o.ResType, true
}

// HasResType returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasResType() bool {
	if o != nil && !IsNil(o.ResType) {
		return true
	}

	return false
}

// SetResType gets a reference to the given string and assigns it to the ResType field.
func (o *RevenueInventoryStatisticsType) SetResType(v string) {
	o.ResType = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *RevenueInventoryStatisticsType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *RevenueInventoryStatisticsType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetPhysicalRooms returns the PhysicalRooms field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetPhysicalRooms() string {
	if o == nil || IsNil(o.PhysicalRooms) {
		var ret string
		return ret
	}
	return *o.PhysicalRooms
}

// GetPhysicalRoomsOk returns a tuple with the PhysicalRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetPhysicalRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.PhysicalRooms) {
		return nil, false
	}
	return o.PhysicalRooms, true
}

// HasPhysicalRooms returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasPhysicalRooms() bool {
	if o != nil && !IsNil(o.PhysicalRooms) {
		return true
	}

	return false
}

// SetPhysicalRooms gets a reference to the given string and assigns it to the PhysicalRooms field.
func (o *RevenueInventoryStatisticsType) SetPhysicalRooms(v string) {
	o.PhysicalRooms = &v
}

// GetOoRooms returns the OoRooms field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetOoRooms() string {
	if o == nil || IsNil(o.OoRooms) {
		var ret string
		return ret
	}
	return *o.OoRooms
}

// GetOoRoomsOk returns a tuple with the OoRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetOoRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.OoRooms) {
		return nil, false
	}
	return o.OoRooms, true
}

// HasOoRooms returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasOoRooms() bool {
	if o != nil && !IsNil(o.OoRooms) {
		return true
	}

	return false
}

// SetOoRooms gets a reference to the given string and assigns it to the OoRooms field.
func (o *RevenueInventoryStatisticsType) SetOoRooms(v string) {
	o.OoRooms = &v
}

// GetOsRooms returns the OsRooms field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetOsRooms() string {
	if o == nil || IsNil(o.OsRooms) {
		var ret string
		return ret
	}
	return *o.OsRooms
}

// GetOsRoomsOk returns a tuple with the OsRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetOsRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.OsRooms) {
		return nil, false
	}
	return o.OsRooms, true
}

// HasOsRooms returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasOsRooms() bool {
	if o != nil && !IsNil(o.OsRooms) {
		return true
	}

	return false
}

// SetOsRooms gets a reference to the given string and assigns it to the OsRooms field.
func (o *RevenueInventoryStatisticsType) SetOsRooms(v string) {
	o.OsRooms = &v
}

// GetRoomsSold returns the RoomsSold field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetRoomsSold() string {
	if o == nil || IsNil(o.RoomsSold) {
		var ret string
		return ret
	}
	return *o.RoomsSold
}

// GetRoomsSoldOk returns a tuple with the RoomsSold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetRoomsSoldOk() (*string, bool) {
	if o == nil || IsNil(o.RoomsSold) {
		return nil, false
	}
	return o.RoomsSold, true
}

// HasRoomsSold returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasRoomsSold() bool {
	if o != nil && !IsNil(o.RoomsSold) {
		return true
	}

	return false
}

// SetRoomsSold gets a reference to the given string and assigns it to the RoomsSold field.
func (o *RevenueInventoryStatisticsType) SetRoomsSold(v string) {
	o.RoomsSold = &v
}

// GetRoomRevenue returns the RoomRevenue field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetRoomRevenue() string {
	if o == nil || IsNil(o.RoomRevenue) {
		var ret string
		return ret
	}
	return *o.RoomRevenue
}

// GetRoomRevenueOk returns a tuple with the RoomRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetRoomRevenueOk() (*string, bool) {
	if o == nil || IsNil(o.RoomRevenue) {
		return nil, false
	}
	return o.RoomRevenue, true
}

// HasRoomRevenue returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasRoomRevenue() bool {
	if o != nil && !IsNil(o.RoomRevenue) {
		return true
	}

	return false
}

// SetRoomRevenue gets a reference to the given string and assigns it to the RoomRevenue field.
func (o *RevenueInventoryStatisticsType) SetRoomRevenue(v string) {
	o.RoomRevenue = &v
}

// GetRoomArrivals returns the RoomArrivals field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetRoomArrivals() string {
	if o == nil || IsNil(o.RoomArrivals) {
		var ret string
		return ret
	}
	return *o.RoomArrivals
}

// GetRoomArrivalsOk returns a tuple with the RoomArrivals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetRoomArrivalsOk() (*string, bool) {
	if o == nil || IsNil(o.RoomArrivals) {
		return nil, false
	}
	return o.RoomArrivals, true
}

// HasRoomArrivals returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasRoomArrivals() bool {
	if o != nil && !IsNil(o.RoomArrivals) {
		return true
	}

	return false
}

// SetRoomArrivals gets a reference to the given string and assigns it to the RoomArrivals field.
func (o *RevenueInventoryStatisticsType) SetRoomArrivals(v string) {
	o.RoomArrivals = &v
}

// GetRoomDepartures returns the RoomDepartures field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetRoomDepartures() string {
	if o == nil || IsNil(o.RoomDepartures) {
		var ret string
		return ret
	}
	return *o.RoomDepartures
}

// GetRoomDeparturesOk returns a tuple with the RoomDepartures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetRoomDeparturesOk() (*string, bool) {
	if o == nil || IsNil(o.RoomDepartures) {
		return nil, false
	}
	return o.RoomDepartures, true
}

// HasRoomDepartures returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasRoomDepartures() bool {
	if o != nil && !IsNil(o.RoomDepartures) {
		return true
	}

	return false
}

// SetRoomDepartures gets a reference to the given string and assigns it to the RoomDepartures field.
func (o *RevenueInventoryStatisticsType) SetRoomDepartures(v string) {
	o.RoomDepartures = &v
}

// GetFoodRevenue returns the FoodRevenue field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetFoodRevenue() string {
	if o == nil || IsNil(o.FoodRevenue) {
		var ret string
		return ret
	}
	return *o.FoodRevenue
}

// GetFoodRevenueOk returns a tuple with the FoodRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetFoodRevenueOk() (*string, bool) {
	if o == nil || IsNil(o.FoodRevenue) {
		return nil, false
	}
	return o.FoodRevenue, true
}

// HasFoodRevenue returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasFoodRevenue() bool {
	if o != nil && !IsNil(o.FoodRevenue) {
		return true
	}

	return false
}

// SetFoodRevenue gets a reference to the given string and assigns it to the FoodRevenue field.
func (o *RevenueInventoryStatisticsType) SetFoodRevenue(v string) {
	o.FoodRevenue = &v
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetTotalRevenue() string {
	if o == nil || IsNil(o.TotalRevenue) {
		var ret string
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetTotalRevenueOk() (*string, bool) {
	if o == nil || IsNil(o.TotalRevenue) {
		return nil, false
	}
	return o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasTotalRevenue() bool {
	if o != nil && !IsNil(o.TotalRevenue) {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given string and assigns it to the TotalRevenue field.
func (o *RevenueInventoryStatisticsType) SetTotalRevenue(v string) {
	o.TotalRevenue = &v
}

// GetCancelledRooms returns the CancelledRooms field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetCancelledRooms() string {
	if o == nil || IsNil(o.CancelledRooms) {
		var ret string
		return ret
	}
	return *o.CancelledRooms
}

// GetCancelledRoomsOk returns a tuple with the CancelledRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetCancelledRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.CancelledRooms) {
		return nil, false
	}
	return o.CancelledRooms, true
}

// HasCancelledRooms returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasCancelledRooms() bool {
	if o != nil && !IsNil(o.CancelledRooms) {
		return true
	}

	return false
}

// SetCancelledRooms gets a reference to the given string and assigns it to the CancelledRooms field.
func (o *RevenueInventoryStatisticsType) SetCancelledRooms(v string) {
	o.CancelledRooms = &v
}

// GetNoShowRooms returns the NoShowRooms field value if set, zero value otherwise.
func (o *RevenueInventoryStatisticsType) GetNoShowRooms() string {
	if o == nil || IsNil(o.NoShowRooms) {
		var ret string
		return ret
	}
	return *o.NoShowRooms
}

// GetNoShowRoomsOk returns a tuple with the NoShowRooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevenueInventoryStatisticsType) GetNoShowRoomsOk() (*string, bool) {
	if o == nil || IsNil(o.NoShowRooms) {
		return nil, false
	}
	return o.NoShowRooms, true
}

// HasNoShowRooms returns a boolean if a field has been set.
func (o *RevenueInventoryStatisticsType) HasNoShowRooms() bool {
	if o != nil && !IsNil(o.NoShowRooms) {
		return true
	}

	return false
}

// SetNoShowRooms gets a reference to the given string and assigns it to the NoShowRooms field.
func (o *RevenueInventoryStatisticsType) SetNoShowRooms(v string) {
	o.NoShowRooms = &v
}

func (o RevenueInventoryStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevenueInventoryStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.OccupancyDate) {
		toSerialize["occupancyDate"] = o.OccupancyDate
	}
	if !IsNil(o.ResType) {
		toSerialize["resType"] = o.ResType
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.PhysicalRooms) {
		toSerialize["physicalRooms"] = o.PhysicalRooms
	}
	if !IsNil(o.OoRooms) {
		toSerialize["ooRooms"] = o.OoRooms
	}
	if !IsNil(o.OsRooms) {
		toSerialize["osRooms"] = o.OsRooms
	}
	if !IsNil(o.RoomsSold) {
		toSerialize["roomsSold"] = o.RoomsSold
	}
	if !IsNil(o.RoomRevenue) {
		toSerialize["roomRevenue"] = o.RoomRevenue
	}
	if !IsNil(o.RoomArrivals) {
		toSerialize["roomArrivals"] = o.RoomArrivals
	}
	if !IsNil(o.RoomDepartures) {
		toSerialize["roomDepartures"] = o.RoomDepartures
	}
	if !IsNil(o.FoodRevenue) {
		toSerialize["foodRevenue"] = o.FoodRevenue
	}
	if !IsNil(o.TotalRevenue) {
		toSerialize["totalRevenue"] = o.TotalRevenue
	}
	if !IsNil(o.CancelledRooms) {
		toSerialize["cancelledRooms"] = o.CancelledRooms
	}
	if !IsNil(o.NoShowRooms) {
		toSerialize["noShowRooms"] = o.NoShowRooms
	}
	return toSerialize, nil
}

type NullableRevenueInventoryStatisticsType struct {
	value *RevenueInventoryStatisticsType
	isSet bool
}

func (v NullableRevenueInventoryStatisticsType) Get() *RevenueInventoryStatisticsType {
	return v.value
}

func (v *NullableRevenueInventoryStatisticsType) Set(val *RevenueInventoryStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRevenueInventoryStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRevenueInventoryStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevenueInventoryStatisticsType(val *RevenueInventoryStatisticsType) *NullableRevenueInventoryStatisticsType {
	return &NullableRevenueInventoryStatisticsType{value: val, isSet: true}
}

func (v NullableRevenueInventoryStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevenueInventoryStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


