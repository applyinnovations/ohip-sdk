/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the SuspendedStayDailyRateType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedStayDailyRateType{}

// SuspendedStayDailyRateType Suspended Stay Rate information.
type SuspendedStayDailyRateType struct {
	// Suspended Stay Record ID.
	SuspendedStayRecordId *string `json:"suspendedStayRecordId,omitempty"`
	// Transaction date of the rate.
	TransactionDate *string `json:"transactionDate,omitempty"`
	// Rate code used for the stay.
	RateCode *string `json:"rateCode,omitempty"`
	// Market Code of the stay.
	MarketCode *string `json:"marketCode,omitempty"`
	Amount *CurrencyAmountType `json:"amount,omitempty"`
}

// NewSuspendedStayDailyRateType instantiates a new SuspendedStayDailyRateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedStayDailyRateType() *SuspendedStayDailyRateType {
	this := SuspendedStayDailyRateType{}
	return &this
}

// NewSuspendedStayDailyRateTypeWithDefaults instantiates a new SuspendedStayDailyRateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedStayDailyRateTypeWithDefaults() *SuspendedStayDailyRateType {
	this := SuspendedStayDailyRateType{}
	return &this
}

// GetSuspendedStayRecordId returns the SuspendedStayRecordId field value if set, zero value otherwise.
func (o *SuspendedStayDailyRateType) GetSuspendedStayRecordId() string {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		var ret string
		return ret
	}
	return *o.SuspendedStayRecordId
}

// GetSuspendedStayRecordIdOk returns a tuple with the SuspendedStayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayDailyRateType) GetSuspendedStayRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		return nil, false
	}
	return o.SuspendedStayRecordId, true
}

// HasSuspendedStayRecordId returns a boolean if a field has been set.
func (o *SuspendedStayDailyRateType) HasSuspendedStayRecordId() bool {
	if o != nil && !IsNil(o.SuspendedStayRecordId) {
		return true
	}

	return false
}

// SetSuspendedStayRecordId gets a reference to the given string and assigns it to the SuspendedStayRecordId field.
func (o *SuspendedStayDailyRateType) SetSuspendedStayRecordId(v string) {
	o.SuspendedStayRecordId = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *SuspendedStayDailyRateType) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayDailyRateType) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *SuspendedStayDailyRateType) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *SuspendedStayDailyRateType) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *SuspendedStayDailyRateType) GetRateCode() string {
	if o == nil || IsNil(o.RateCode) {
		var ret string
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayDailyRateType) GetRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *SuspendedStayDailyRateType) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given string and assigns it to the RateCode field.
func (o *SuspendedStayDailyRateType) SetRateCode(v string) {
	o.RateCode = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *SuspendedStayDailyRateType) GetMarketCode() string {
	if o == nil || IsNil(o.MarketCode) {
		var ret string
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayDailyRateType) GetMarketCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *SuspendedStayDailyRateType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given string and assigns it to the MarketCode field.
func (o *SuspendedStayDailyRateType) SetMarketCode(v string) {
	o.MarketCode = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *SuspendedStayDailyRateType) GetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.Amount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayDailyRateType) GetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *SuspendedStayDailyRateType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given CurrencyAmountType and assigns it to the Amount field.
func (o *SuspendedStayDailyRateType) SetAmount(v CurrencyAmountType) {
	o.Amount = &v
}

func (o SuspendedStayDailyRateType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedStayDailyRateType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedStayRecordId) {
		toSerialize["suspendedStayRecordId"] = o.SuspendedStayRecordId
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableSuspendedStayDailyRateType struct {
	value *SuspendedStayDailyRateType
	isSet bool
}

func (v NullableSuspendedStayDailyRateType) Get() *SuspendedStayDailyRateType {
	return v.value
}

func (v *NullableSuspendedStayDailyRateType) Set(val *SuspendedStayDailyRateType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedStayDailyRateType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedStayDailyRateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedStayDailyRateType(val *SuspendedStayDailyRateType) *NullableSuspendedStayDailyRateType {
	return &NullableSuspendedStayDailyRateType{value: val, isSet: true}
}

func (v NullableSuspendedStayDailyRateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedStayDailyRateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


