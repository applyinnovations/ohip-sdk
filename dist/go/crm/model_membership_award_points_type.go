/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipAwardPointsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipAwardPointsType{}

// MembershipAwardPointsType Details associated with award points.
type MembershipAwardPointsType struct {
	// Total number of base award points for a membership points transaction.
	BasePoints *int32 `json:"basePoints,omitempty"`
	// If a membership points transaction involves bonus points, the total number of bonus points.
	BonusPoints *int32 `json:"bonusPoints,omitempty"`
	// If a membership points transaction involves points imported into ORS from a third-party system, the total number of points.
	MiscPoints *int32 `json:"miscPoints,omitempty"`
	// The date until points are eligible for redemption based on membership type configuration.
	PointsExpiryDate *string `json:"pointsExpiryDate,omitempty"`
	// Rule Code for award points.
	RuleCode *string `json:"ruleCode,omitempty"`
	// The total number of award points.
	TotalPoints *int32 `json:"totalPoints,omitempty"`
}

// NewMembershipAwardPointsType instantiates a new MembershipAwardPointsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipAwardPointsType() *MembershipAwardPointsType {
	this := MembershipAwardPointsType{}
	return &this
}

// NewMembershipAwardPointsTypeWithDefaults instantiates a new MembershipAwardPointsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipAwardPointsTypeWithDefaults() *MembershipAwardPointsType {
	this := MembershipAwardPointsType{}
	return &this
}

// GetBasePoints returns the BasePoints field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetBasePoints() int32 {
	if o == nil || IsNil(o.BasePoints) {
		var ret int32
		return ret
	}
	return *o.BasePoints
}

// GetBasePointsOk returns a tuple with the BasePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetBasePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.BasePoints) {
		return nil, false
	}
	return o.BasePoints, true
}

// HasBasePoints returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasBasePoints() bool {
	if o != nil && !IsNil(o.BasePoints) {
		return true
	}

	return false
}

// SetBasePoints gets a reference to the given int32 and assigns it to the BasePoints field.
func (o *MembershipAwardPointsType) SetBasePoints(v int32) {
	o.BasePoints = &v
}

// GetBonusPoints returns the BonusPoints field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetBonusPoints() int32 {
	if o == nil || IsNil(o.BonusPoints) {
		var ret int32
		return ret
	}
	return *o.BonusPoints
}

// GetBonusPointsOk returns a tuple with the BonusPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetBonusPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.BonusPoints) {
		return nil, false
	}
	return o.BonusPoints, true
}

// HasBonusPoints returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasBonusPoints() bool {
	if o != nil && !IsNil(o.BonusPoints) {
		return true
	}

	return false
}

// SetBonusPoints gets a reference to the given int32 and assigns it to the BonusPoints field.
func (o *MembershipAwardPointsType) SetBonusPoints(v int32) {
	o.BonusPoints = &v
}

// GetMiscPoints returns the MiscPoints field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetMiscPoints() int32 {
	if o == nil || IsNil(o.MiscPoints) {
		var ret int32
		return ret
	}
	return *o.MiscPoints
}

// GetMiscPointsOk returns a tuple with the MiscPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetMiscPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.MiscPoints) {
		return nil, false
	}
	return o.MiscPoints, true
}

// HasMiscPoints returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasMiscPoints() bool {
	if o != nil && !IsNil(o.MiscPoints) {
		return true
	}

	return false
}

// SetMiscPoints gets a reference to the given int32 and assigns it to the MiscPoints field.
func (o *MembershipAwardPointsType) SetMiscPoints(v int32) {
	o.MiscPoints = &v
}

// GetPointsExpiryDate returns the PointsExpiryDate field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetPointsExpiryDate() string {
	if o == nil || IsNil(o.PointsExpiryDate) {
		var ret string
		return ret
	}
	return *o.PointsExpiryDate
}

// GetPointsExpiryDateOk returns a tuple with the PointsExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetPointsExpiryDateOk() (*string, bool) {
	if o == nil || IsNil(o.PointsExpiryDate) {
		return nil, false
	}
	return o.PointsExpiryDate, true
}

// HasPointsExpiryDate returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasPointsExpiryDate() bool {
	if o != nil && !IsNil(o.PointsExpiryDate) {
		return true
	}

	return false
}

// SetPointsExpiryDate gets a reference to the given string and assigns it to the PointsExpiryDate field.
func (o *MembershipAwardPointsType) SetPointsExpiryDate(v string) {
	o.PointsExpiryDate = &v
}

// GetRuleCode returns the RuleCode field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetRuleCode() string {
	if o == nil || IsNil(o.RuleCode) {
		var ret string
		return ret
	}
	return *o.RuleCode
}

// GetRuleCodeOk returns a tuple with the RuleCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetRuleCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleCode) {
		return nil, false
	}
	return o.RuleCode, true
}

// HasRuleCode returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasRuleCode() bool {
	if o != nil && !IsNil(o.RuleCode) {
		return true
	}

	return false
}

// SetRuleCode gets a reference to the given string and assigns it to the RuleCode field.
func (o *MembershipAwardPointsType) SetRuleCode(v string) {
	o.RuleCode = &v
}

// GetTotalPoints returns the TotalPoints field value if set, zero value otherwise.
func (o *MembershipAwardPointsType) GetTotalPoints() int32 {
	if o == nil || IsNil(o.TotalPoints) {
		var ret int32
		return ret
	}
	return *o.TotalPoints
}

// GetTotalPointsOk returns a tuple with the TotalPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipAwardPointsType) GetTotalPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPoints) {
		return nil, false
	}
	return o.TotalPoints, true
}

// HasTotalPoints returns a boolean if a field has been set.
func (o *MembershipAwardPointsType) HasTotalPoints() bool {
	if o != nil && !IsNil(o.TotalPoints) {
		return true
	}

	return false
}

// SetTotalPoints gets a reference to the given int32 and assigns it to the TotalPoints field.
func (o *MembershipAwardPointsType) SetTotalPoints(v int32) {
	o.TotalPoints = &v
}

func (o MembershipAwardPointsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipAwardPointsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasePoints) {
		toSerialize["basePoints"] = o.BasePoints
	}
	if !IsNil(o.BonusPoints) {
		toSerialize["bonusPoints"] = o.BonusPoints
	}
	if !IsNil(o.MiscPoints) {
		toSerialize["miscPoints"] = o.MiscPoints
	}
	if !IsNil(o.PointsExpiryDate) {
		toSerialize["pointsExpiryDate"] = o.PointsExpiryDate
	}
	if !IsNil(o.RuleCode) {
		toSerialize["ruleCode"] = o.RuleCode
	}
	if !IsNil(o.TotalPoints) {
		toSerialize["totalPoints"] = o.TotalPoints
	}
	return toSerialize, nil
}

type NullableMembershipAwardPointsType struct {
	value *MembershipAwardPointsType
	isSet bool
}

func (v NullableMembershipAwardPointsType) Get() *MembershipAwardPointsType {
	return v.value
}

func (v *NullableMembershipAwardPointsType) Set(val *MembershipAwardPointsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipAwardPointsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipAwardPointsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipAwardPointsType(val *MembershipAwardPointsType) *NullableMembershipAwardPointsType {
	return &NullableMembershipAwardPointsType{value: val, isSet: true}
}

func (v NullableMembershipAwardPointsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipAwardPointsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


