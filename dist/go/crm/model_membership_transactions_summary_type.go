/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipTransactionsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTransactionsSummaryType{}

// MembershipTransactionsSummaryType Details of membership transaction like Details, Summary, point, etc.
type MembershipTransactionsSummaryType struct {
	MembershipDetails *MembershipDetailsType `json:"membershipDetails,omitempty"`
	TransactionsSummary *MemberTransactionSummaryType `json:"transactionsSummary,omitempty"`
	RecentTransactionsSummary *MemberTransactionRecentSummaryType `json:"recentTransactionsSummary,omitempty"`
	PointsSummary *MemberPointsSummaryType `json:"pointsSummary,omitempty"`
}

// NewMembershipTransactionsSummaryType instantiates a new MembershipTransactionsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTransactionsSummaryType() *MembershipTransactionsSummaryType {
	this := MembershipTransactionsSummaryType{}
	return &this
}

// NewMembershipTransactionsSummaryTypeWithDefaults instantiates a new MembershipTransactionsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTransactionsSummaryTypeWithDefaults() *MembershipTransactionsSummaryType {
	this := MembershipTransactionsSummaryType{}
	return &this
}

// GetMembershipDetails returns the MembershipDetails field value if set, zero value otherwise.
func (o *MembershipTransactionsSummaryType) GetMembershipDetails() MembershipDetailsType {
	if o == nil || IsNil(o.MembershipDetails) {
		var ret MembershipDetailsType
		return ret
	}
	return *o.MembershipDetails
}

// GetMembershipDetailsOk returns a tuple with the MembershipDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTransactionsSummaryType) GetMembershipDetailsOk() (*MembershipDetailsType, bool) {
	if o == nil || IsNil(o.MembershipDetails) {
		return nil, false
	}
	return o.MembershipDetails, true
}

// HasMembershipDetails returns a boolean if a field has been set.
func (o *MembershipTransactionsSummaryType) HasMembershipDetails() bool {
	if o != nil && !IsNil(o.MembershipDetails) {
		return true
	}

	return false
}

// SetMembershipDetails gets a reference to the given MembershipDetailsType and assigns it to the MembershipDetails field.
func (o *MembershipTransactionsSummaryType) SetMembershipDetails(v MembershipDetailsType) {
	o.MembershipDetails = &v
}

// GetTransactionsSummary returns the TransactionsSummary field value if set, zero value otherwise.
func (o *MembershipTransactionsSummaryType) GetTransactionsSummary() MemberTransactionSummaryType {
	if o == nil || IsNil(o.TransactionsSummary) {
		var ret MemberTransactionSummaryType
		return ret
	}
	return *o.TransactionsSummary
}

// GetTransactionsSummaryOk returns a tuple with the TransactionsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTransactionsSummaryType) GetTransactionsSummaryOk() (*MemberTransactionSummaryType, bool) {
	if o == nil || IsNil(o.TransactionsSummary) {
		return nil, false
	}
	return o.TransactionsSummary, true
}

// HasTransactionsSummary returns a boolean if a field has been set.
func (o *MembershipTransactionsSummaryType) HasTransactionsSummary() bool {
	if o != nil && !IsNil(o.TransactionsSummary) {
		return true
	}

	return false
}

// SetTransactionsSummary gets a reference to the given MemberTransactionSummaryType and assigns it to the TransactionsSummary field.
func (o *MembershipTransactionsSummaryType) SetTransactionsSummary(v MemberTransactionSummaryType) {
	o.TransactionsSummary = &v
}

// GetRecentTransactionsSummary returns the RecentTransactionsSummary field value if set, zero value otherwise.
func (o *MembershipTransactionsSummaryType) GetRecentTransactionsSummary() MemberTransactionRecentSummaryType {
	if o == nil || IsNil(o.RecentTransactionsSummary) {
		var ret MemberTransactionRecentSummaryType
		return ret
	}
	return *o.RecentTransactionsSummary
}

// GetRecentTransactionsSummaryOk returns a tuple with the RecentTransactionsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTransactionsSummaryType) GetRecentTransactionsSummaryOk() (*MemberTransactionRecentSummaryType, bool) {
	if o == nil || IsNil(o.RecentTransactionsSummary) {
		return nil, false
	}
	return o.RecentTransactionsSummary, true
}

// HasRecentTransactionsSummary returns a boolean if a field has been set.
func (o *MembershipTransactionsSummaryType) HasRecentTransactionsSummary() bool {
	if o != nil && !IsNil(o.RecentTransactionsSummary) {
		return true
	}

	return false
}

// SetRecentTransactionsSummary gets a reference to the given MemberTransactionRecentSummaryType and assigns it to the RecentTransactionsSummary field.
func (o *MembershipTransactionsSummaryType) SetRecentTransactionsSummary(v MemberTransactionRecentSummaryType) {
	o.RecentTransactionsSummary = &v
}

// GetPointsSummary returns the PointsSummary field value if set, zero value otherwise.
func (o *MembershipTransactionsSummaryType) GetPointsSummary() MemberPointsSummaryType {
	if o == nil || IsNil(o.PointsSummary) {
		var ret MemberPointsSummaryType
		return ret
	}
	return *o.PointsSummary
}

// GetPointsSummaryOk returns a tuple with the PointsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTransactionsSummaryType) GetPointsSummaryOk() (*MemberPointsSummaryType, bool) {
	if o == nil || IsNil(o.PointsSummary) {
		return nil, false
	}
	return o.PointsSummary, true
}

// HasPointsSummary returns a boolean if a field has been set.
func (o *MembershipTransactionsSummaryType) HasPointsSummary() bool {
	if o != nil && !IsNil(o.PointsSummary) {
		return true
	}

	return false
}

// SetPointsSummary gets a reference to the given MemberPointsSummaryType and assigns it to the PointsSummary field.
func (o *MembershipTransactionsSummaryType) SetPointsSummary(v MemberPointsSummaryType) {
	o.PointsSummary = &v
}

func (o MembershipTransactionsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTransactionsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipDetails) {
		toSerialize["membershipDetails"] = o.MembershipDetails
	}
	if !IsNil(o.TransactionsSummary) {
		toSerialize["transactionsSummary"] = o.TransactionsSummary
	}
	if !IsNil(o.RecentTransactionsSummary) {
		toSerialize["recentTransactionsSummary"] = o.RecentTransactionsSummary
	}
	if !IsNil(o.PointsSummary) {
		toSerialize["pointsSummary"] = o.PointsSummary
	}
	return toSerialize, nil
}

type NullableMembershipTransactionsSummaryType struct {
	value *MembershipTransactionsSummaryType
	isSet bool
}

func (v NullableMembershipTransactionsSummaryType) Get() *MembershipTransactionsSummaryType {
	return v.value
}

func (v *NullableMembershipTransactionsSummaryType) Set(val *MembershipTransactionsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTransactionsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTransactionsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTransactionsSummaryType(val *MembershipTransactionsSummaryType) *NullableMembershipTransactionsSummaryType {
	return &NullableMembershipTransactionsSummaryType{value: val, isSet: true}
}

func (v NullableMembershipTransactionsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTransactionsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


