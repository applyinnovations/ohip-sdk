/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the SuspendedStaySummariesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedStaySummariesType{}

// SuspendedStaySummariesType A complex type containing the collection of Suspended Stay Summaries.
type SuspendedStaySummariesType struct {
	// A collection of Suspended Stay Summaries.
	SuspendedStaySummaries []SuspendedStaySummaryType `json:"suspendedStaySummaries,omitempty"`
	// Evaluated total page count based on the requested max fetch count.
	TotalPages *int32 `json:"totalPages,omitempty"`
	// Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
	Offset *int32 `json:"offset,omitempty"`
	// Indicates maximum number of records a Web Service should return.
	Limit *int32 `json:"limit,omitempty"`
	// Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
	HasMore *bool `json:"hasMore,omitempty"`
	// Total number of rows queried
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Total number of rows returned
	Count *int32 `json:"count,omitempty"`
}

// NewSuspendedStaySummariesType instantiates a new SuspendedStaySummariesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedStaySummariesType() *SuspendedStaySummariesType {
	this := SuspendedStaySummariesType{}
	return &this
}

// NewSuspendedStaySummariesTypeWithDefaults instantiates a new SuspendedStaySummariesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedStaySummariesTypeWithDefaults() *SuspendedStaySummariesType {
	this := SuspendedStaySummariesType{}
	return &this
}

// GetSuspendedStaySummaries returns the SuspendedStaySummaries field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetSuspendedStaySummaries() []SuspendedStaySummaryType {
	if o == nil || IsNil(o.SuspendedStaySummaries) {
		var ret []SuspendedStaySummaryType
		return ret
	}
	return o.SuspendedStaySummaries
}

// GetSuspendedStaySummariesOk returns a tuple with the SuspendedStaySummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetSuspendedStaySummariesOk() ([]SuspendedStaySummaryType, bool) {
	if o == nil || IsNil(o.SuspendedStaySummaries) {
		return nil, false
	}
	return o.SuspendedStaySummaries, true
}

// HasSuspendedStaySummaries returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasSuspendedStaySummaries() bool {
	if o != nil && !IsNil(o.SuspendedStaySummaries) {
		return true
	}

	return false
}

// SetSuspendedStaySummaries gets a reference to the given []SuspendedStaySummaryType and assigns it to the SuspendedStaySummaries field.
func (o *SuspendedStaySummariesType) SetSuspendedStaySummaries(v []SuspendedStaySummaryType) {
	o.SuspendedStaySummaries = v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *SuspendedStaySummariesType) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *SuspendedStaySummariesType) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *SuspendedStaySummariesType) SetLimit(v int32) {
	o.Limit = &v
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetHasMore() bool {
	if o == nil || IsNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetHasMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMore) {
		return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasHasMore() bool {
	if o != nil && !IsNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *SuspendedStaySummariesType) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetTotalResults() int32 {
	if o == nil || IsNil(o.TotalResults) {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalResults) {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasTotalResults() bool {
	if o != nil && !IsNil(o.TotalResults) {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *SuspendedStaySummariesType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SuspendedStaySummariesType) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummariesType) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SuspendedStaySummariesType) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SuspendedStaySummariesType) SetCount(v int32) {
	o.Count = &v
}

func (o SuspendedStaySummariesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedStaySummariesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedStaySummaries) {
		toSerialize["suspendedStaySummaries"] = o.SuspendedStaySummaries
	}
	if !IsNil(o.TotalPages) {
		toSerialize["totalPages"] = o.TotalPages
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.HasMore) {
		toSerialize["hasMore"] = o.HasMore
	}
	if !IsNil(o.TotalResults) {
		toSerialize["totalResults"] = o.TotalResults
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableSuspendedStaySummariesType struct {
	value *SuspendedStaySummariesType
	isSet bool
}

func (v NullableSuspendedStaySummariesType) Get() *SuspendedStaySummariesType {
	return v.value
}

func (v *NullableSuspendedStaySummariesType) Set(val *SuspendedStaySummariesType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedStaySummariesType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedStaySummariesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedStaySummariesType(val *SuspendedStaySummariesType) *NullableSuspendedStaySummariesType {
	return &NullableSuspendedStaySummariesType{value: val, isSet: true}
}

func (v NullableSuspendedStaySummariesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedStaySummariesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


