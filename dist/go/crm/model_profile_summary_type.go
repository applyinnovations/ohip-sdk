/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 22.3.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 22.3
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileSummaryType{}

// ProfileSummaryType Type provides the basic information about the profile.
type ProfileSummaryType struct {
	FormerName *ProfileSummaryTypeFormerName `json:"formerName,omitempty"`
	AltName *ProfileNameType `json:"altName,omitempty"`
	Anonymization *AnonymizationType `json:"anonymization,omitempty"`
	AddressInfo *AddressInfoType `json:"addressInfo,omitempty"`
	TelephoneInfo *TelephoneInfoType `json:"telephoneInfo,omitempty"`
	EmailInfo *EmailInfoType `json:"emailInfo,omitempty"`
	ProfileMembership *ProfileMembershipType `json:"profileMembership,omitempty"`
	URLInfo *URLInfoType `json:"uRLInfo,omitempty"`
	CitizenCountry *CountryNameType `json:"citizenCountry,omitempty"`
	// Collection of lamp indicators.
	ProfileIndicators []IndicatorType `json:"profileIndicators,omitempty"`
	// List of Generic Name-Value-Pair Parameters used for super search matches.
	SearchMatches []SearchMatchType `json:"searchMatches,omitempty"`
	ProfileAccessType *ProfileAccessType `json:"profileAccessType,omitempty"`
	ProfileRestrictions *ProfileRestrictions `json:"profileRestrictions,omitempty"`
	VipStatus *VIPStatusType `json:"vipStatus,omitempty"`
	// Generic type for a list of owners.
	Owners []OwnerType `json:"owners,omitempty"`
	// Primary Company of the profile.
	PrimaryCompany *string `json:"primaryCompany,omitempty"`
	ARAccount *DirectBillingType `json:"aRAccount,omitempty"`
	Commission *CodeDescriptionType `json:"commission,omitempty"`
	TaxInfo *ProfileTaxInfoType `json:"taxInfo,omitempty"`
	Cashiering *ProfileCashieringType `json:"cashiering,omitempty"`
	LastStayInfo *LastStayInfoType `json:"lastStayInfo,omitempty"`
	// Allowed actions for profile operations.
	AllowedActions []ProfileAllowedActionType `json:"allowedActions,omitempty"`
	PrimaryAccountInfo *PrimaryProfileInfoType `json:"primaryAccountInfo,omitempty"`
	SalesInfo *SalesInfoType `json:"salesInfo,omitempty"`
	AdditionalInfo *ProfileAdditionalInfoType `json:"additionalInfo,omitempty"`
	ProfileType *ProfileTypeType `json:"profileType,omitempty"`
	// This element tells If there is an active subscription for this external profile .
	Subscription *bool `json:"subscription,omitempty"`
	StatusCode *ProfileStatusType `json:"statusCode,omitempty"`
	// What level this profile is protected.
	Protected *string `json:"protected,omitempty"`
	// This element tells profile is property exclusive or not.
	PrivateProfile *bool `json:"privateProfile,omitempty"`
	// Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
	InheritedNegRates *bool `json:"inheritedNegRates,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Property this profile is registered with.
	RegisteredProperty *string `json:"registeredProperty,omitempty"`
}

// NewProfileSummaryType instantiates a new ProfileSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileSummaryType() *ProfileSummaryType {
	this := ProfileSummaryType{}
	return &this
}

// NewProfileSummaryTypeWithDefaults instantiates a new ProfileSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileSummaryTypeWithDefaults() *ProfileSummaryType {
	this := ProfileSummaryType{}
	return &this
}

// GetFormerName returns the FormerName field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetFormerName() ProfileSummaryTypeFormerName {
	if o == nil || IsNil(o.FormerName) {
		var ret ProfileSummaryTypeFormerName
		return ret
	}
	return *o.FormerName
}

// GetFormerNameOk returns a tuple with the FormerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetFormerNameOk() (*ProfileSummaryTypeFormerName, bool) {
	if o == nil || IsNil(o.FormerName) {
		return nil, false
	}
	return o.FormerName, true
}

// HasFormerName returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasFormerName() bool {
	if o != nil && !IsNil(o.FormerName) {
		return true
	}

	return false
}

// SetFormerName gets a reference to the given ProfileSummaryTypeFormerName and assigns it to the FormerName field.
func (o *ProfileSummaryType) SetFormerName(v ProfileSummaryTypeFormerName) {
	o.FormerName = &v
}

// GetAltName returns the AltName field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetAltName() ProfileNameType {
	if o == nil || IsNil(o.AltName) {
		var ret ProfileNameType
		return ret
	}
	return *o.AltName
}

// GetAltNameOk returns a tuple with the AltName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetAltNameOk() (*ProfileNameType, bool) {
	if o == nil || IsNil(o.AltName) {
		return nil, false
	}
	return o.AltName, true
}

// HasAltName returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasAltName() bool {
	if o != nil && !IsNil(o.AltName) {
		return true
	}

	return false
}

// SetAltName gets a reference to the given ProfileNameType and assigns it to the AltName field.
func (o *ProfileSummaryType) SetAltName(v ProfileNameType) {
	o.AltName = &v
}

// GetAnonymization returns the Anonymization field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetAnonymization() AnonymizationType {
	if o == nil || IsNil(o.Anonymization) {
		var ret AnonymizationType
		return ret
	}
	return *o.Anonymization
}

// GetAnonymizationOk returns a tuple with the Anonymization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetAnonymizationOk() (*AnonymizationType, bool) {
	if o == nil || IsNil(o.Anonymization) {
		return nil, false
	}
	return o.Anonymization, true
}

// HasAnonymization returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasAnonymization() bool {
	if o != nil && !IsNil(o.Anonymization) {
		return true
	}

	return false
}

// SetAnonymization gets a reference to the given AnonymizationType and assigns it to the Anonymization field.
func (o *ProfileSummaryType) SetAnonymization(v AnonymizationType) {
	o.Anonymization = &v
}

// GetAddressInfo returns the AddressInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetAddressInfo() AddressInfoType {
	if o == nil || IsNil(o.AddressInfo) {
		var ret AddressInfoType
		return ret
	}
	return *o.AddressInfo
}

// GetAddressInfoOk returns a tuple with the AddressInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetAddressInfoOk() (*AddressInfoType, bool) {
	if o == nil || IsNil(o.AddressInfo) {
		return nil, false
	}
	return o.AddressInfo, true
}

// HasAddressInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasAddressInfo() bool {
	if o != nil && !IsNil(o.AddressInfo) {
		return true
	}

	return false
}

// SetAddressInfo gets a reference to the given AddressInfoType and assigns it to the AddressInfo field.
func (o *ProfileSummaryType) SetAddressInfo(v AddressInfoType) {
	o.AddressInfo = &v
}

// GetTelephoneInfo returns the TelephoneInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetTelephoneInfo() TelephoneInfoType {
	if o == nil || IsNil(o.TelephoneInfo) {
		var ret TelephoneInfoType
		return ret
	}
	return *o.TelephoneInfo
}

// GetTelephoneInfoOk returns a tuple with the TelephoneInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetTelephoneInfoOk() (*TelephoneInfoType, bool) {
	if o == nil || IsNil(o.TelephoneInfo) {
		return nil, false
	}
	return o.TelephoneInfo, true
}

// HasTelephoneInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasTelephoneInfo() bool {
	if o != nil && !IsNil(o.TelephoneInfo) {
		return true
	}

	return false
}

// SetTelephoneInfo gets a reference to the given TelephoneInfoType and assigns it to the TelephoneInfo field.
func (o *ProfileSummaryType) SetTelephoneInfo(v TelephoneInfoType) {
	o.TelephoneInfo = &v
}

// GetEmailInfo returns the EmailInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetEmailInfo() EmailInfoType {
	if o == nil || IsNil(o.EmailInfo) {
		var ret EmailInfoType
		return ret
	}
	return *o.EmailInfo
}

// GetEmailInfoOk returns a tuple with the EmailInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetEmailInfoOk() (*EmailInfoType, bool) {
	if o == nil || IsNil(o.EmailInfo) {
		return nil, false
	}
	return o.EmailInfo, true
}

// HasEmailInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasEmailInfo() bool {
	if o != nil && !IsNil(o.EmailInfo) {
		return true
	}

	return false
}

// SetEmailInfo gets a reference to the given EmailInfoType and assigns it to the EmailInfo field.
func (o *ProfileSummaryType) SetEmailInfo(v EmailInfoType) {
	o.EmailInfo = &v
}

// GetProfileMembership returns the ProfileMembership field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProfileMembership() ProfileMembershipType {
	if o == nil || IsNil(o.ProfileMembership) {
		var ret ProfileMembershipType
		return ret
	}
	return *o.ProfileMembership
}

// GetProfileMembershipOk returns a tuple with the ProfileMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProfileMembershipOk() (*ProfileMembershipType, bool) {
	if o == nil || IsNil(o.ProfileMembership) {
		return nil, false
	}
	return o.ProfileMembership, true
}

// HasProfileMembership returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProfileMembership() bool {
	if o != nil && !IsNil(o.ProfileMembership) {
		return true
	}

	return false
}

// SetProfileMembership gets a reference to the given ProfileMembershipType and assigns it to the ProfileMembership field.
func (o *ProfileSummaryType) SetProfileMembership(v ProfileMembershipType) {
	o.ProfileMembership = &v
}

// GetURLInfo returns the URLInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetURLInfo() URLInfoType {
	if o == nil || IsNil(o.URLInfo) {
		var ret URLInfoType
		return ret
	}
	return *o.URLInfo
}

// GetURLInfoOk returns a tuple with the URLInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetURLInfoOk() (*URLInfoType, bool) {
	if o == nil || IsNil(o.URLInfo) {
		return nil, false
	}
	return o.URLInfo, true
}

// HasURLInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasURLInfo() bool {
	if o != nil && !IsNil(o.URLInfo) {
		return true
	}

	return false
}

// SetURLInfo gets a reference to the given URLInfoType and assigns it to the URLInfo field.
func (o *ProfileSummaryType) SetURLInfo(v URLInfoType) {
	o.URLInfo = &v
}

// GetCitizenCountry returns the CitizenCountry field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetCitizenCountry() CountryNameType {
	if o == nil || IsNil(o.CitizenCountry) {
		var ret CountryNameType
		return ret
	}
	return *o.CitizenCountry
}

// GetCitizenCountryOk returns a tuple with the CitizenCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetCitizenCountryOk() (*CountryNameType, bool) {
	if o == nil || IsNil(o.CitizenCountry) {
		return nil, false
	}
	return o.CitizenCountry, true
}

// HasCitizenCountry returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasCitizenCountry() bool {
	if o != nil && !IsNil(o.CitizenCountry) {
		return true
	}

	return false
}

// SetCitizenCountry gets a reference to the given CountryNameType and assigns it to the CitizenCountry field.
func (o *ProfileSummaryType) SetCitizenCountry(v CountryNameType) {
	o.CitizenCountry = &v
}

// GetProfileIndicators returns the ProfileIndicators field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProfileIndicators() []IndicatorType {
	if o == nil || IsNil(o.ProfileIndicators) {
		var ret []IndicatorType
		return ret
	}
	return o.ProfileIndicators
}

// GetProfileIndicatorsOk returns a tuple with the ProfileIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProfileIndicatorsOk() ([]IndicatorType, bool) {
	if o == nil || IsNil(o.ProfileIndicators) {
		return nil, false
	}
	return o.ProfileIndicators, true
}

// HasProfileIndicators returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProfileIndicators() bool {
	if o != nil && !IsNil(o.ProfileIndicators) {
		return true
	}

	return false
}

// SetProfileIndicators gets a reference to the given []IndicatorType and assigns it to the ProfileIndicators field.
func (o *ProfileSummaryType) SetProfileIndicators(v []IndicatorType) {
	o.ProfileIndicators = v
}

// GetSearchMatches returns the SearchMatches field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetSearchMatches() []SearchMatchType {
	if o == nil || IsNil(o.SearchMatches) {
		var ret []SearchMatchType
		return ret
	}
	return o.SearchMatches
}

// GetSearchMatchesOk returns a tuple with the SearchMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetSearchMatchesOk() ([]SearchMatchType, bool) {
	if o == nil || IsNil(o.SearchMatches) {
		return nil, false
	}
	return o.SearchMatches, true
}

// HasSearchMatches returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasSearchMatches() bool {
	if o != nil && !IsNil(o.SearchMatches) {
		return true
	}

	return false
}

// SetSearchMatches gets a reference to the given []SearchMatchType and assigns it to the SearchMatches field.
func (o *ProfileSummaryType) SetSearchMatches(v []SearchMatchType) {
	o.SearchMatches = v
}

// GetProfileAccessType returns the ProfileAccessType field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProfileAccessType() ProfileAccessType {
	if o == nil || IsNil(o.ProfileAccessType) {
		var ret ProfileAccessType
		return ret
	}
	return *o.ProfileAccessType
}

// GetProfileAccessTypeOk returns a tuple with the ProfileAccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProfileAccessTypeOk() (*ProfileAccessType, bool) {
	if o == nil || IsNil(o.ProfileAccessType) {
		return nil, false
	}
	return o.ProfileAccessType, true
}

// HasProfileAccessType returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProfileAccessType() bool {
	if o != nil && !IsNil(o.ProfileAccessType) {
		return true
	}

	return false
}

// SetProfileAccessType gets a reference to the given ProfileAccessType and assigns it to the ProfileAccessType field.
func (o *ProfileSummaryType) SetProfileAccessType(v ProfileAccessType) {
	o.ProfileAccessType = &v
}

// GetProfileRestrictions returns the ProfileRestrictions field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProfileRestrictions() ProfileRestrictions {
	if o == nil || IsNil(o.ProfileRestrictions) {
		var ret ProfileRestrictions
		return ret
	}
	return *o.ProfileRestrictions
}

// GetProfileRestrictionsOk returns a tuple with the ProfileRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProfileRestrictionsOk() (*ProfileRestrictions, bool) {
	if o == nil || IsNil(o.ProfileRestrictions) {
		return nil, false
	}
	return o.ProfileRestrictions, true
}

// HasProfileRestrictions returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProfileRestrictions() bool {
	if o != nil && !IsNil(o.ProfileRestrictions) {
		return true
	}

	return false
}

// SetProfileRestrictions gets a reference to the given ProfileRestrictions and assigns it to the ProfileRestrictions field.
func (o *ProfileSummaryType) SetProfileRestrictions(v ProfileRestrictions) {
	o.ProfileRestrictions = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetVipStatus() VIPStatusType {
	if o == nil || IsNil(o.VipStatus) {
		var ret VIPStatusType
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetVipStatusOk() (*VIPStatusType, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given VIPStatusType and assigns it to the VipStatus field.
func (o *ProfileSummaryType) SetVipStatus(v VIPStatusType) {
	o.VipStatus = &v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetOwners() []OwnerType {
	if o == nil || IsNil(o.Owners) {
		var ret []OwnerType
		return ret
	}
	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetOwnersOk() ([]OwnerType, bool) {
	if o == nil || IsNil(o.Owners) {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasOwners() bool {
	if o != nil && !IsNil(o.Owners) {
		return true
	}

	return false
}

// SetOwners gets a reference to the given []OwnerType and assigns it to the Owners field.
func (o *ProfileSummaryType) SetOwners(v []OwnerType) {
	o.Owners = v
}

// GetPrimaryCompany returns the PrimaryCompany field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetPrimaryCompany() string {
	if o == nil || IsNil(o.PrimaryCompany) {
		var ret string
		return ret
	}
	return *o.PrimaryCompany
}

// GetPrimaryCompanyOk returns a tuple with the PrimaryCompany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetPrimaryCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryCompany) {
		return nil, false
	}
	return o.PrimaryCompany, true
}

// HasPrimaryCompany returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasPrimaryCompany() bool {
	if o != nil && !IsNil(o.PrimaryCompany) {
		return true
	}

	return false
}

// SetPrimaryCompany gets a reference to the given string and assigns it to the PrimaryCompany field.
func (o *ProfileSummaryType) SetPrimaryCompany(v string) {
	o.PrimaryCompany = &v
}

// GetARAccount returns the ARAccount field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetARAccount() DirectBillingType {
	if o == nil || IsNil(o.ARAccount) {
		var ret DirectBillingType
		return ret
	}
	return *o.ARAccount
}

// GetARAccountOk returns a tuple with the ARAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetARAccountOk() (*DirectBillingType, bool) {
	if o == nil || IsNil(o.ARAccount) {
		return nil, false
	}
	return o.ARAccount, true
}

// HasARAccount returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasARAccount() bool {
	if o != nil && !IsNil(o.ARAccount) {
		return true
	}

	return false
}

// SetARAccount gets a reference to the given DirectBillingType and assigns it to the ARAccount field.
func (o *ProfileSummaryType) SetARAccount(v DirectBillingType) {
	o.ARAccount = &v
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetCommission() CodeDescriptionType {
	if o == nil || IsNil(o.Commission) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetCommissionOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.Commission) {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasCommission() bool {
	if o != nil && !IsNil(o.Commission) {
		return true
	}

	return false
}

// SetCommission gets a reference to the given CodeDescriptionType and assigns it to the Commission field.
func (o *ProfileSummaryType) SetCommission(v CodeDescriptionType) {
	o.Commission = &v
}

// GetTaxInfo returns the TaxInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetTaxInfo() ProfileTaxInfoType {
	if o == nil || IsNil(o.TaxInfo) {
		var ret ProfileTaxInfoType
		return ret
	}
	return *o.TaxInfo
}

// GetTaxInfoOk returns a tuple with the TaxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetTaxInfoOk() (*ProfileTaxInfoType, bool) {
	if o == nil || IsNil(o.TaxInfo) {
		return nil, false
	}
	return o.TaxInfo, true
}

// HasTaxInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasTaxInfo() bool {
	if o != nil && !IsNil(o.TaxInfo) {
		return true
	}

	return false
}

// SetTaxInfo gets a reference to the given ProfileTaxInfoType and assigns it to the TaxInfo field.
func (o *ProfileSummaryType) SetTaxInfo(v ProfileTaxInfoType) {
	o.TaxInfo = &v
}

// GetCashiering returns the Cashiering field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetCashiering() ProfileCashieringType {
	if o == nil || IsNil(o.Cashiering) {
		var ret ProfileCashieringType
		return ret
	}
	return *o.Cashiering
}

// GetCashieringOk returns a tuple with the Cashiering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetCashieringOk() (*ProfileCashieringType, bool) {
	if o == nil || IsNil(o.Cashiering) {
		return nil, false
	}
	return o.Cashiering, true
}

// HasCashiering returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasCashiering() bool {
	if o != nil && !IsNil(o.Cashiering) {
		return true
	}

	return false
}

// SetCashiering gets a reference to the given ProfileCashieringType and assigns it to the Cashiering field.
func (o *ProfileSummaryType) SetCashiering(v ProfileCashieringType) {
	o.Cashiering = &v
}

// GetLastStayInfo returns the LastStayInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetLastStayInfo() LastStayInfoType {
	if o == nil || IsNil(o.LastStayInfo) {
		var ret LastStayInfoType
		return ret
	}
	return *o.LastStayInfo
}

// GetLastStayInfoOk returns a tuple with the LastStayInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetLastStayInfoOk() (*LastStayInfoType, bool) {
	if o == nil || IsNil(o.LastStayInfo) {
		return nil, false
	}
	return o.LastStayInfo, true
}

// HasLastStayInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasLastStayInfo() bool {
	if o != nil && !IsNil(o.LastStayInfo) {
		return true
	}

	return false
}

// SetLastStayInfo gets a reference to the given LastStayInfoType and assigns it to the LastStayInfo field.
func (o *ProfileSummaryType) SetLastStayInfo(v LastStayInfoType) {
	o.LastStayInfo = &v
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetAllowedActions() []ProfileAllowedActionType {
	if o == nil || IsNil(o.AllowedActions) {
		var ret []ProfileAllowedActionType
		return ret
	}
	return o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetAllowedActionsOk() ([]ProfileAllowedActionType, bool) {
	if o == nil || IsNil(o.AllowedActions) {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasAllowedActions() bool {
	if o != nil && !IsNil(o.AllowedActions) {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given []ProfileAllowedActionType and assigns it to the AllowedActions field.
func (o *ProfileSummaryType) SetAllowedActions(v []ProfileAllowedActionType) {
	o.AllowedActions = v
}

// GetPrimaryAccountInfo returns the PrimaryAccountInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetPrimaryAccountInfo() PrimaryProfileInfoType {
	if o == nil || IsNil(o.PrimaryAccountInfo) {
		var ret PrimaryProfileInfoType
		return ret
	}
	return *o.PrimaryAccountInfo
}

// GetPrimaryAccountInfoOk returns a tuple with the PrimaryAccountInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetPrimaryAccountInfoOk() (*PrimaryProfileInfoType, bool) {
	if o == nil || IsNil(o.PrimaryAccountInfo) {
		return nil, false
	}
	return o.PrimaryAccountInfo, true
}

// HasPrimaryAccountInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasPrimaryAccountInfo() bool {
	if o != nil && !IsNil(o.PrimaryAccountInfo) {
		return true
	}

	return false
}

// SetPrimaryAccountInfo gets a reference to the given PrimaryProfileInfoType and assigns it to the PrimaryAccountInfo field.
func (o *ProfileSummaryType) SetPrimaryAccountInfo(v PrimaryProfileInfoType) {
	o.PrimaryAccountInfo = &v
}

// GetSalesInfo returns the SalesInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetSalesInfo() SalesInfoType {
	if o == nil || IsNil(o.SalesInfo) {
		var ret SalesInfoType
		return ret
	}
	return *o.SalesInfo
}

// GetSalesInfoOk returns a tuple with the SalesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetSalesInfoOk() (*SalesInfoType, bool) {
	if o == nil || IsNil(o.SalesInfo) {
		return nil, false
	}
	return o.SalesInfo, true
}

// HasSalesInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasSalesInfo() bool {
	if o != nil && !IsNil(o.SalesInfo) {
		return true
	}

	return false
}

// SetSalesInfo gets a reference to the given SalesInfoType and assigns it to the SalesInfo field.
func (o *ProfileSummaryType) SetSalesInfo(v SalesInfoType) {
	o.SalesInfo = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetAdditionalInfo() ProfileAdditionalInfoType {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret ProfileAdditionalInfoType
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetAdditionalInfoOk() (*ProfileAdditionalInfoType, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given ProfileAdditionalInfoType and assigns it to the AdditionalInfo field.
func (o *ProfileSummaryType) SetAdditionalInfo(v ProfileAdditionalInfoType) {
	o.AdditionalInfo = &v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProfileType() ProfileTypeType {
	if o == nil || IsNil(o.ProfileType) {
		var ret ProfileTypeType
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProfileTypeOk() (*ProfileTypeType, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given ProfileTypeType and assigns it to the ProfileType field.
func (o *ProfileSummaryType) SetProfileType(v ProfileTypeType) {
	o.ProfileType = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetSubscription() bool {
	if o == nil || IsNil(o.Subscription) {
		var ret bool
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetSubscriptionOk() (*bool, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given bool and assigns it to the Subscription field.
func (o *ProfileSummaryType) SetSubscription(v bool) {
	o.Subscription = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetStatusCode() ProfileStatusType {
	if o == nil || IsNil(o.StatusCode) {
		var ret ProfileStatusType
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetStatusCodeOk() (*ProfileStatusType, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given ProfileStatusType and assigns it to the StatusCode field.
func (o *ProfileSummaryType) SetStatusCode(v ProfileStatusType) {
	o.StatusCode = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetProtected() string {
	if o == nil || IsNil(o.Protected) {
		var ret string
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetProtectedOk() (*string, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given string and assigns it to the Protected field.
func (o *ProfileSummaryType) SetProtected(v string) {
	o.Protected = &v
}

// GetPrivateProfile returns the PrivateProfile field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetPrivateProfile() bool {
	if o == nil || IsNil(o.PrivateProfile) {
		var ret bool
		return ret
	}
	return *o.PrivateProfile
}

// GetPrivateProfileOk returns a tuple with the PrivateProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetPrivateProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.PrivateProfile) {
		return nil, false
	}
	return o.PrivateProfile, true
}

// HasPrivateProfile returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasPrivateProfile() bool {
	if o != nil && !IsNil(o.PrivateProfile) {
		return true
	}

	return false
}

// SetPrivateProfile gets a reference to the given bool and assigns it to the PrivateProfile field.
func (o *ProfileSummaryType) SetPrivateProfile(v bool) {
	o.PrivateProfile = &v
}

// GetInheritedNegRates returns the InheritedNegRates field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetInheritedNegRates() bool {
	if o == nil || IsNil(o.InheritedNegRates) {
		var ret bool
		return ret
	}
	return *o.InheritedNegRates
}

// GetInheritedNegRatesOk returns a tuple with the InheritedNegRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetInheritedNegRatesOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritedNegRates) {
		return nil, false
	}
	return o.InheritedNegRates, true
}

// HasInheritedNegRates returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasInheritedNegRates() bool {
	if o != nil && !IsNil(o.InheritedNegRates) {
		return true
	}

	return false
}

// SetInheritedNegRates gets a reference to the given bool and assigns it to the InheritedNegRates field.
func (o *ProfileSummaryType) SetInheritedNegRates(v bool) {
	o.InheritedNegRates = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *ProfileSummaryType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *ProfileSummaryType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *ProfileSummaryType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *ProfileSummaryType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetRegisteredProperty returns the RegisteredProperty field value if set, zero value otherwise.
func (o *ProfileSummaryType) GetRegisteredProperty() string {
	if o == nil || IsNil(o.RegisteredProperty) {
		var ret string
		return ret
	}
	return *o.RegisteredProperty
}

// GetRegisteredPropertyOk returns a tuple with the RegisteredProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileSummaryType) GetRegisteredPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.RegisteredProperty) {
		return nil, false
	}
	return o.RegisteredProperty, true
}

// HasRegisteredProperty returns a boolean if a field has been set.
func (o *ProfileSummaryType) HasRegisteredProperty() bool {
	if o != nil && !IsNil(o.RegisteredProperty) {
		return true
	}

	return false
}

// SetRegisteredProperty gets a reference to the given string and assigns it to the RegisteredProperty field.
func (o *ProfileSummaryType) SetRegisteredProperty(v string) {
	o.RegisteredProperty = &v
}

func (o ProfileSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FormerName) {
		toSerialize["formerName"] = o.FormerName
	}
	if !IsNil(o.AltName) {
		toSerialize["altName"] = o.AltName
	}
	if !IsNil(o.Anonymization) {
		toSerialize["anonymization"] = o.Anonymization
	}
	if !IsNil(o.AddressInfo) {
		toSerialize["addressInfo"] = o.AddressInfo
	}
	if !IsNil(o.TelephoneInfo) {
		toSerialize["telephoneInfo"] = o.TelephoneInfo
	}
	if !IsNil(o.EmailInfo) {
		toSerialize["emailInfo"] = o.EmailInfo
	}
	if !IsNil(o.ProfileMembership) {
		toSerialize["profileMembership"] = o.ProfileMembership
	}
	if !IsNil(o.URLInfo) {
		toSerialize["uRLInfo"] = o.URLInfo
	}
	if !IsNil(o.CitizenCountry) {
		toSerialize["citizenCountry"] = o.CitizenCountry
	}
	if !IsNil(o.ProfileIndicators) {
		toSerialize["profileIndicators"] = o.ProfileIndicators
	}
	if !IsNil(o.SearchMatches) {
		toSerialize["searchMatches"] = o.SearchMatches
	}
	if !IsNil(o.ProfileAccessType) {
		toSerialize["profileAccessType"] = o.ProfileAccessType
	}
	if !IsNil(o.ProfileRestrictions) {
		toSerialize["profileRestrictions"] = o.ProfileRestrictions
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	if !IsNil(o.Owners) {
		toSerialize["owners"] = o.Owners
	}
	if !IsNil(o.PrimaryCompany) {
		toSerialize["primaryCompany"] = o.PrimaryCompany
	}
	if !IsNil(o.ARAccount) {
		toSerialize["aRAccount"] = o.ARAccount
	}
	if !IsNil(o.Commission) {
		toSerialize["commission"] = o.Commission
	}
	if !IsNil(o.TaxInfo) {
		toSerialize["taxInfo"] = o.TaxInfo
	}
	if !IsNil(o.Cashiering) {
		toSerialize["cashiering"] = o.Cashiering
	}
	if !IsNil(o.LastStayInfo) {
		toSerialize["lastStayInfo"] = o.LastStayInfo
	}
	if !IsNil(o.AllowedActions) {
		toSerialize["allowedActions"] = o.AllowedActions
	}
	if !IsNil(o.PrimaryAccountInfo) {
		toSerialize["primaryAccountInfo"] = o.PrimaryAccountInfo
	}
	if !IsNil(o.SalesInfo) {
		toSerialize["salesInfo"] = o.SalesInfo
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	if !IsNil(o.PrivateProfile) {
		toSerialize["privateProfile"] = o.PrivateProfile
	}
	if !IsNil(o.InheritedNegRates) {
		toSerialize["inheritedNegRates"] = o.InheritedNegRates
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.RegisteredProperty) {
		toSerialize["registeredProperty"] = o.RegisteredProperty
	}
	return toSerialize, nil
}

type NullableProfileSummaryType struct {
	value *ProfileSummaryType
	isSet bool
}

func (v NullableProfileSummaryType) Get() *ProfileSummaryType {
	return v.value
}

func (v *NullableProfileSummaryType) Set(val *ProfileSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileSummaryType(val *ProfileSummaryType) *NullableProfileSummaryType {
	return &NullableProfileSummaryType{value: val, isSet: true}
}

func (v NullableProfileSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


