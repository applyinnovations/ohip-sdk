/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileStatisticsType{}

// ProfileStatisticsType Contains summary/detail/Revenue statistics information for Profile.
type ProfileStatisticsType struct {
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	StayStatisticsSummaryList *StatisticsSummaryListType `json:"stayStatisticsSummaryList,omitempty"`
	// Collection of stay statistics detail information
	StayStatisticsDetailList []StayStatisticsDetailType `json:"stayStatisticsDetailList,omitempty"`
	// List of the detailed and yearly summarized information about the profile revenue.
	RevenueStatisticsSummaryList []RevenueStatisticsSummaryType `json:"revenueStatisticsSummaryList,omitempty"`
	ReportType *StatisticsReportType `json:"reportType,omitempty"`
}

// NewProfileStatisticsType instantiates a new ProfileStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileStatisticsType() *ProfileStatisticsType {
	this := ProfileStatisticsType{}
	return &this
}

// NewProfileStatisticsTypeWithDefaults instantiates a new ProfileStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileStatisticsTypeWithDefaults() *ProfileStatisticsType {
	this := ProfileStatisticsType{}
	return &this
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *ProfileStatisticsType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatisticsType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *ProfileStatisticsType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *ProfileStatisticsType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetStayStatisticsSummaryList returns the StayStatisticsSummaryList field value if set, zero value otherwise.
func (o *ProfileStatisticsType) GetStayStatisticsSummaryList() StatisticsSummaryListType {
	if o == nil || IsNil(o.StayStatisticsSummaryList) {
		var ret StatisticsSummaryListType
		return ret
	}
	return *o.StayStatisticsSummaryList
}

// GetStayStatisticsSummaryListOk returns a tuple with the StayStatisticsSummaryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatisticsType) GetStayStatisticsSummaryListOk() (*StatisticsSummaryListType, bool) {
	if o == nil || IsNil(o.StayStatisticsSummaryList) {
		return nil, false
	}
	return o.StayStatisticsSummaryList, true
}

// HasStayStatisticsSummaryList returns a boolean if a field has been set.
func (o *ProfileStatisticsType) HasStayStatisticsSummaryList() bool {
	if o != nil && !IsNil(o.StayStatisticsSummaryList) {
		return true
	}

	return false
}

// SetStayStatisticsSummaryList gets a reference to the given StatisticsSummaryListType and assigns it to the StayStatisticsSummaryList field.
func (o *ProfileStatisticsType) SetStayStatisticsSummaryList(v StatisticsSummaryListType) {
	o.StayStatisticsSummaryList = &v
}

// GetStayStatisticsDetailList returns the StayStatisticsDetailList field value if set, zero value otherwise.
func (o *ProfileStatisticsType) GetStayStatisticsDetailList() []StayStatisticsDetailType {
	if o == nil || IsNil(o.StayStatisticsDetailList) {
		var ret []StayStatisticsDetailType
		return ret
	}
	return o.StayStatisticsDetailList
}

// GetStayStatisticsDetailListOk returns a tuple with the StayStatisticsDetailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatisticsType) GetStayStatisticsDetailListOk() ([]StayStatisticsDetailType, bool) {
	if o == nil || IsNil(o.StayStatisticsDetailList) {
		return nil, false
	}
	return o.StayStatisticsDetailList, true
}

// HasStayStatisticsDetailList returns a boolean if a field has been set.
func (o *ProfileStatisticsType) HasStayStatisticsDetailList() bool {
	if o != nil && !IsNil(o.StayStatisticsDetailList) {
		return true
	}

	return false
}

// SetStayStatisticsDetailList gets a reference to the given []StayStatisticsDetailType and assigns it to the StayStatisticsDetailList field.
func (o *ProfileStatisticsType) SetStayStatisticsDetailList(v []StayStatisticsDetailType) {
	o.StayStatisticsDetailList = v
}

// GetRevenueStatisticsSummaryList returns the RevenueStatisticsSummaryList field value if set, zero value otherwise.
func (o *ProfileStatisticsType) GetRevenueStatisticsSummaryList() []RevenueStatisticsSummaryType {
	if o == nil || IsNil(o.RevenueStatisticsSummaryList) {
		var ret []RevenueStatisticsSummaryType
		return ret
	}
	return o.RevenueStatisticsSummaryList
}

// GetRevenueStatisticsSummaryListOk returns a tuple with the RevenueStatisticsSummaryList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatisticsType) GetRevenueStatisticsSummaryListOk() ([]RevenueStatisticsSummaryType, bool) {
	if o == nil || IsNil(o.RevenueStatisticsSummaryList) {
		return nil, false
	}
	return o.RevenueStatisticsSummaryList, true
}

// HasRevenueStatisticsSummaryList returns a boolean if a field has been set.
func (o *ProfileStatisticsType) HasRevenueStatisticsSummaryList() bool {
	if o != nil && !IsNil(o.RevenueStatisticsSummaryList) {
		return true
	}

	return false
}

// SetRevenueStatisticsSummaryList gets a reference to the given []RevenueStatisticsSummaryType and assigns it to the RevenueStatisticsSummaryList field.
func (o *ProfileStatisticsType) SetRevenueStatisticsSummaryList(v []RevenueStatisticsSummaryType) {
	o.RevenueStatisticsSummaryList = v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *ProfileStatisticsType) GetReportType() StatisticsReportType {
	if o == nil || IsNil(o.ReportType) {
		var ret StatisticsReportType
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileStatisticsType) GetReportTypeOk() (*StatisticsReportType, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *ProfileStatisticsType) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given StatisticsReportType and assigns it to the ReportType field.
func (o *ProfileStatisticsType) SetReportType(v StatisticsReportType) {
	o.ReportType = &v
}

func (o ProfileStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.StayStatisticsSummaryList) {
		toSerialize["stayStatisticsSummaryList"] = o.StayStatisticsSummaryList
	}
	if !IsNil(o.StayStatisticsDetailList) {
		toSerialize["stayStatisticsDetailList"] = o.StayStatisticsDetailList
	}
	if !IsNil(o.RevenueStatisticsSummaryList) {
		toSerialize["revenueStatisticsSummaryList"] = o.RevenueStatisticsSummaryList
	}
	if !IsNil(o.ReportType) {
		toSerialize["reportType"] = o.ReportType
	}
	return toSerialize, nil
}

type NullableProfileStatisticsType struct {
	value *ProfileStatisticsType
	isSet bool
}

func (v NullableProfileStatisticsType) Get() *ProfileStatisticsType {
	return v.value
}

func (v *NullableProfileStatisticsType) Set(val *ProfileStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileStatisticsType(val *ProfileStatisticsType) *NullableProfileStatisticsType {
	return &NullableProfileStatisticsType{value: val, isSet: true}
}

func (v NullableProfileStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


