/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StagedProfileMembershipType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileMembershipType{}

// StagedProfileMembershipType Detailed information of the memberships.
type StagedProfileMembershipType struct {
	// Basic information about membership benefit.
	Benefits []BenefitType `json:"benefits,omitempty"`
	// Indicates how the award points for this membership type will be managed.
	CentralSetup *bool `json:"centralSetup,omitempty"`
	Comment *ParagraphType `json:"comment,omitempty"`
	// Time stamp of the creation.
	CreateDateTime *string `json:"createDateTime,omitempty"`
	// ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
	CreatorId *string `json:"creatorId,omitempty"`
	// Profile MemberShip Points.
	CurrentPoints *float32 `json:"currentPoints,omitempty"`
	// Device encoded string.
	DeviceCode *string `json:"deviceCode,omitempty"`
	// Device disabled date.
	DeviceDisabledDate *string `json:"deviceDisabledDate,omitempty"`
	Downgrade *DowngradeType `json:"downgrade,omitempty"`
	// Indicates information regarding the member's possible downgrades.
	DowngradeDescription *string `json:"downgradeDescription,omitempty"`
	EarningPreference *MembershipEarningPreferenceType `json:"earningPreference,omitempty"`
	// Indicates the starting date.
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	// Enrollment code.
	EnrollmentCode *string `json:"enrollmentCode,omitempty"`
	// Resort/CRO where enrollment is done.
	EnrollmentResort *string `json:"enrollmentResort,omitempty"`
	// Source from where the enrollment is done.
	EnrollmentSource *string `json:"enrollmentSource,omitempty"`
	// The error in membership information in a staged profile with an invalid status.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.
	ExcludeFromBatch *bool `json:"excludeFromBatch,omitempty"`
	// Indicates the ending date.
	ExpireDate *string `json:"expireDate,omitempty"`
	// When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).
	ExpireDateExclusiveIndicator *bool `json:"expireDateExclusiveIndicator,omitempty"`
	// A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
	Id *string `json:"id,omitempty"`
	// Indicates whether membership is active or inactive.
	Inactive *bool `json:"inactive,omitempty"`
	// Inactivation date of the record.
	InactiveDate *string `json:"inactiveDate,omitempty"`
	// Identifies the last software system or person to modify a record.
	LastModifierId *string `json:"lastModifierId,omitempty"`
	// Time stamp of last modification.
	LastModifyDateTime *string `json:"lastModifyDateTime,omitempty"`
	// Indicates where the guest is in the membership enrollment process.
	MemberStatus *string `json:"memberStatus,omitempty"`
	// Indicates the membership class.
	MembershipClass *string `json:"membershipClass,omitempty"`
	// Indicates how the guest enrolled in the program.
	MembershipEnrollmentCode *string `json:"membershipEnrollmentCode,omitempty"`
	// Card Number of the membership.
	MembershipId *string `json:"membershipId,omitempty"`
	// Membership ID Number.
	MembershipIdNo *int32 `json:"membershipIdNo,omitempty"`
	// Indicates the membership level.
	MembershipLevel *string `json:"membershipLevel,omitempty"`
	// Indicates the membership level description.
	MembershipLevelDescription *string `json:"membershipLevelDescription,omitempty"`
	// Membership status.
	MembershipStatus *string `json:"membershipStatus,omitempty"`
	// Type of membership.
	MembershipType *string `json:"membershipType,omitempty"`
	// Name to be displayed on the membership card.
	NameOnCard *string `json:"nameOnCard,omitempty"`
	// Card Number of the membership.
	NewMembershipNumber *string `json:"newMembershipNumber,omitempty"`
	// Display Order sequence.
	OrderSequence *float32 `json:"orderSequence,omitempty"`
	// Ranking assigned to the Player Profile by the Gaming system.
	PlayerRanking *int32 `json:"playerRanking,omitempty"`
	// Label used to refer to points for this membership type
	PointsLabel *string `json:"pointsLabel,omitempty"`
	// Preferred Card.
	PreferredCard *bool `json:"preferredCard,omitempty"`
	// Boolean indicator set to True implies membership is a Primary Membership.
	PrimaryMembership *bool `json:"primaryMembership,omitempty"`
	// Indicator if Membership is a Primary Membership.
	PrimaryMembershipYn *string `json:"primaryMembershipYn,omitempty"`
	// Description of the membership program.
	ProgramDescription *string `json:"programDescription,omitempty"`
	// Value Rating Type Description for this membership.
	Rating *string `json:"rating,omitempty"`
	ReIssueNewCard *CardReIssueType `json:"reIssueNewCard,omitempty"`
	// Registration resort.
	RegistrationResort *string `json:"registrationResort,omitempty"`
	// Indicates when the member signed up for the loyalty program.
	SignupDate *string `json:"signupDate,omitempty"`
	TierAdministration *TierAdministrationType `json:"tierAdministration,omitempty"`
	// A reference to the type of object defined by the UniqueID element.
	Type *string `json:"type,omitempty"`
	// Indicates if existing information for primary membership should be overwritten.
	UpdateExistingMembership *bool `json:"updateExistingMembership,omitempty"`
	// Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.
	UpgradeDescription *string `json:"upgradeDescription,omitempty"`
}

// NewStagedProfileMembershipType instantiates a new StagedProfileMembershipType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileMembershipType() *StagedProfileMembershipType {
	this := StagedProfileMembershipType{}
	return &this
}

// NewStagedProfileMembershipTypeWithDefaults instantiates a new StagedProfileMembershipType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileMembershipTypeWithDefaults() *StagedProfileMembershipType {
	this := StagedProfileMembershipType{}
	return &this
}

// GetBenefits returns the Benefits field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetBenefits() []BenefitType {
	if o == nil || IsNil(o.Benefits) {
		var ret []BenefitType
		return ret
	}
	return o.Benefits
}

// GetBenefitsOk returns a tuple with the Benefits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetBenefitsOk() ([]BenefitType, bool) {
	if o == nil || IsNil(o.Benefits) {
		return nil, false
	}
	return o.Benefits, true
}

// HasBenefits returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasBenefits() bool {
	if o != nil && !IsNil(o.Benefits) {
		return true
	}

	return false
}

// SetBenefits gets a reference to the given []BenefitType and assigns it to the Benefits field.
func (o *StagedProfileMembershipType) SetBenefits(v []BenefitType) {
	o.Benefits = v
}

// GetCentralSetup returns the CentralSetup field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetCentralSetup() bool {
	if o == nil || IsNil(o.CentralSetup) {
		var ret bool
		return ret
	}
	return *o.CentralSetup
}

// GetCentralSetupOk returns a tuple with the CentralSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetCentralSetupOk() (*bool, bool) {
	if o == nil || IsNil(o.CentralSetup) {
		return nil, false
	}
	return o.CentralSetup, true
}

// HasCentralSetup returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasCentralSetup() bool {
	if o != nil && !IsNil(o.CentralSetup) {
		return true
	}

	return false
}

// SetCentralSetup gets a reference to the given bool and assigns it to the CentralSetup field.
func (o *StagedProfileMembershipType) SetCentralSetup(v bool) {
	o.CentralSetup = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetComment() ParagraphType {
	if o == nil || IsNil(o.Comment) {
		var ret ParagraphType
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetCommentOk() (*ParagraphType, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given ParagraphType and assigns it to the Comment field.
func (o *StagedProfileMembershipType) SetComment(v ParagraphType) {
	o.Comment = &v
}

// GetCreateDateTime returns the CreateDateTime field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetCreateDateTime() string {
	if o == nil || IsNil(o.CreateDateTime) {
		var ret string
		return ret
	}
	return *o.CreateDateTime
}

// GetCreateDateTimeOk returns a tuple with the CreateDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetCreateDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDateTime) {
		return nil, false
	}
	return o.CreateDateTime, true
}

// HasCreateDateTime returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasCreateDateTime() bool {
	if o != nil && !IsNil(o.CreateDateTime) {
		return true
	}

	return false
}

// SetCreateDateTime gets a reference to the given string and assigns it to the CreateDateTime field.
func (o *StagedProfileMembershipType) SetCreateDateTime(v string) {
	o.CreateDateTime = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *StagedProfileMembershipType) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetCurrentPoints returns the CurrentPoints field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetCurrentPoints() float32 {
	if o == nil || IsNil(o.CurrentPoints) {
		var ret float32
		return ret
	}
	return *o.CurrentPoints
}

// GetCurrentPointsOk returns a tuple with the CurrentPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetCurrentPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentPoints) {
		return nil, false
	}
	return o.CurrentPoints, true
}

// HasCurrentPoints returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasCurrentPoints() bool {
	if o != nil && !IsNil(o.CurrentPoints) {
		return true
	}

	return false
}

// SetCurrentPoints gets a reference to the given float32 and assigns it to the CurrentPoints field.
func (o *StagedProfileMembershipType) SetCurrentPoints(v float32) {
	o.CurrentPoints = &v
}

// GetDeviceCode returns the DeviceCode field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetDeviceCode() string {
	if o == nil || IsNil(o.DeviceCode) {
		var ret string
		return ret
	}
	return *o.DeviceCode
}

// GetDeviceCodeOk returns a tuple with the DeviceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetDeviceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceCode) {
		return nil, false
	}
	return o.DeviceCode, true
}

// HasDeviceCode returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasDeviceCode() bool {
	if o != nil && !IsNil(o.DeviceCode) {
		return true
	}

	return false
}

// SetDeviceCode gets a reference to the given string and assigns it to the DeviceCode field.
func (o *StagedProfileMembershipType) SetDeviceCode(v string) {
	o.DeviceCode = &v
}

// GetDeviceDisabledDate returns the DeviceDisabledDate field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetDeviceDisabledDate() string {
	if o == nil || IsNil(o.DeviceDisabledDate) {
		var ret string
		return ret
	}
	return *o.DeviceDisabledDate
}

// GetDeviceDisabledDateOk returns a tuple with the DeviceDisabledDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetDeviceDisabledDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceDisabledDate) {
		return nil, false
	}
	return o.DeviceDisabledDate, true
}

// HasDeviceDisabledDate returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasDeviceDisabledDate() bool {
	if o != nil && !IsNil(o.DeviceDisabledDate) {
		return true
	}

	return false
}

// SetDeviceDisabledDate gets a reference to the given string and assigns it to the DeviceDisabledDate field.
func (o *StagedProfileMembershipType) SetDeviceDisabledDate(v string) {
	o.DeviceDisabledDate = &v
}

// GetDowngrade returns the Downgrade field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetDowngrade() DowngradeType {
	if o == nil || IsNil(o.Downgrade) {
		var ret DowngradeType
		return ret
	}
	return *o.Downgrade
}

// GetDowngradeOk returns a tuple with the Downgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetDowngradeOk() (*DowngradeType, bool) {
	if o == nil || IsNil(o.Downgrade) {
		return nil, false
	}
	return o.Downgrade, true
}

// HasDowngrade returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasDowngrade() bool {
	if o != nil && !IsNil(o.Downgrade) {
		return true
	}

	return false
}

// SetDowngrade gets a reference to the given DowngradeType and assigns it to the Downgrade field.
func (o *StagedProfileMembershipType) SetDowngrade(v DowngradeType) {
	o.Downgrade = &v
}

// GetDowngradeDescription returns the DowngradeDescription field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetDowngradeDescription() string {
	if o == nil || IsNil(o.DowngradeDescription) {
		var ret string
		return ret
	}
	return *o.DowngradeDescription
}

// GetDowngradeDescriptionOk returns a tuple with the DowngradeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetDowngradeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DowngradeDescription) {
		return nil, false
	}
	return o.DowngradeDescription, true
}

// HasDowngradeDescription returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasDowngradeDescription() bool {
	if o != nil && !IsNil(o.DowngradeDescription) {
		return true
	}

	return false
}

// SetDowngradeDescription gets a reference to the given string and assigns it to the DowngradeDescription field.
func (o *StagedProfileMembershipType) SetDowngradeDescription(v string) {
	o.DowngradeDescription = &v
}

// GetEarningPreference returns the EarningPreference field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetEarningPreference() MembershipEarningPreferenceType {
	if o == nil || IsNil(o.EarningPreference) {
		var ret MembershipEarningPreferenceType
		return ret
	}
	return *o.EarningPreference
}

// GetEarningPreferenceOk returns a tuple with the EarningPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetEarningPreferenceOk() (*MembershipEarningPreferenceType, bool) {
	if o == nil || IsNil(o.EarningPreference) {
		return nil, false
	}
	return o.EarningPreference, true
}

// HasEarningPreference returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasEarningPreference() bool {
	if o != nil && !IsNil(o.EarningPreference) {
		return true
	}

	return false
}

// SetEarningPreference gets a reference to the given MembershipEarningPreferenceType and assigns it to the EarningPreference field.
func (o *StagedProfileMembershipType) SetEarningPreference(v MembershipEarningPreferenceType) {
	o.EarningPreference = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *StagedProfileMembershipType) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetEnrollmentCode returns the EnrollmentCode field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetEnrollmentCode() string {
	if o == nil || IsNil(o.EnrollmentCode) {
		var ret string
		return ret
	}
	return *o.EnrollmentCode
}

// GetEnrollmentCodeOk returns a tuple with the EnrollmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetEnrollmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentCode) {
		return nil, false
	}
	return o.EnrollmentCode, true
}

// HasEnrollmentCode returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasEnrollmentCode() bool {
	if o != nil && !IsNil(o.EnrollmentCode) {
		return true
	}

	return false
}

// SetEnrollmentCode gets a reference to the given string and assigns it to the EnrollmentCode field.
func (o *StagedProfileMembershipType) SetEnrollmentCode(v string) {
	o.EnrollmentCode = &v
}

// GetEnrollmentResort returns the EnrollmentResort field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetEnrollmentResort() string {
	if o == nil || IsNil(o.EnrollmentResort) {
		var ret string
		return ret
	}
	return *o.EnrollmentResort
}

// GetEnrollmentResortOk returns a tuple with the EnrollmentResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetEnrollmentResortOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentResort) {
		return nil, false
	}
	return o.EnrollmentResort, true
}

// HasEnrollmentResort returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasEnrollmentResort() bool {
	if o != nil && !IsNil(o.EnrollmentResort) {
		return true
	}

	return false
}

// SetEnrollmentResort gets a reference to the given string and assigns it to the EnrollmentResort field.
func (o *StagedProfileMembershipType) SetEnrollmentResort(v string) {
	o.EnrollmentResort = &v
}

// GetEnrollmentSource returns the EnrollmentSource field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetEnrollmentSource() string {
	if o == nil || IsNil(o.EnrollmentSource) {
		var ret string
		return ret
	}
	return *o.EnrollmentSource
}

// GetEnrollmentSourceOk returns a tuple with the EnrollmentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetEnrollmentSourceOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentSource) {
		return nil, false
	}
	return o.EnrollmentSource, true
}

// HasEnrollmentSource returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasEnrollmentSource() bool {
	if o != nil && !IsNil(o.EnrollmentSource) {
		return true
	}

	return false
}

// SetEnrollmentSource gets a reference to the given string and assigns it to the EnrollmentSource field.
func (o *StagedProfileMembershipType) SetEnrollmentSource(v string) {
	o.EnrollmentSource = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *StagedProfileMembershipType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetExcludeFromBatch returns the ExcludeFromBatch field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetExcludeFromBatch() bool {
	if o == nil || IsNil(o.ExcludeFromBatch) {
		var ret bool
		return ret
	}
	return *o.ExcludeFromBatch
}

// GetExcludeFromBatchOk returns a tuple with the ExcludeFromBatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetExcludeFromBatchOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludeFromBatch) {
		return nil, false
	}
	return o.ExcludeFromBatch, true
}

// HasExcludeFromBatch returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasExcludeFromBatch() bool {
	if o != nil && !IsNil(o.ExcludeFromBatch) {
		return true
	}

	return false
}

// SetExcludeFromBatch gets a reference to the given bool and assigns it to the ExcludeFromBatch field.
func (o *StagedProfileMembershipType) SetExcludeFromBatch(v bool) {
	o.ExcludeFromBatch = &v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetExpireDate() string {
	if o == nil || IsNil(o.ExpireDate) {
		var ret string
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetExpireDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireDate) {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasExpireDate() bool {
	if o != nil && !IsNil(o.ExpireDate) {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given string and assigns it to the ExpireDate field.
func (o *StagedProfileMembershipType) SetExpireDate(v string) {
	o.ExpireDate = &v
}

// GetExpireDateExclusiveIndicator returns the ExpireDateExclusiveIndicator field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetExpireDateExclusiveIndicator() bool {
	if o == nil || IsNil(o.ExpireDateExclusiveIndicator) {
		var ret bool
		return ret
	}
	return *o.ExpireDateExclusiveIndicator
}

// GetExpireDateExclusiveIndicatorOk returns a tuple with the ExpireDateExclusiveIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetExpireDateExclusiveIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpireDateExclusiveIndicator) {
		return nil, false
	}
	return o.ExpireDateExclusiveIndicator, true
}

// HasExpireDateExclusiveIndicator returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasExpireDateExclusiveIndicator() bool {
	if o != nil && !IsNil(o.ExpireDateExclusiveIndicator) {
		return true
	}

	return false
}

// SetExpireDateExclusiveIndicator gets a reference to the given bool and assigns it to the ExpireDateExclusiveIndicator field.
func (o *StagedProfileMembershipType) SetExpireDateExclusiveIndicator(v bool) {
	o.ExpireDateExclusiveIndicator = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StagedProfileMembershipType) SetId(v string) {
	o.Id = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *StagedProfileMembershipType) SetInactive(v bool) {
	o.Inactive = &v
}

// GetInactiveDate returns the InactiveDate field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetInactiveDate() string {
	if o == nil || IsNil(o.InactiveDate) {
		var ret string
		return ret
	}
	return *o.InactiveDate
}

// GetInactiveDateOk returns a tuple with the InactiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetInactiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.InactiveDate) {
		return nil, false
	}
	return o.InactiveDate, true
}

// HasInactiveDate returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasInactiveDate() bool {
	if o != nil && !IsNil(o.InactiveDate) {
		return true
	}

	return false
}

// SetInactiveDate gets a reference to the given string and assigns it to the InactiveDate field.
func (o *StagedProfileMembershipType) SetInactiveDate(v string) {
	o.InactiveDate = &v
}

// GetLastModifierId returns the LastModifierId field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetLastModifierId() string {
	if o == nil || IsNil(o.LastModifierId) {
		var ret string
		return ret
	}
	return *o.LastModifierId
}

// GetLastModifierIdOk returns a tuple with the LastModifierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetLastModifierIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifierId) {
		return nil, false
	}
	return o.LastModifierId, true
}

// HasLastModifierId returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasLastModifierId() bool {
	if o != nil && !IsNil(o.LastModifierId) {
		return true
	}

	return false
}

// SetLastModifierId gets a reference to the given string and assigns it to the LastModifierId field.
func (o *StagedProfileMembershipType) SetLastModifierId(v string) {
	o.LastModifierId = &v
}

// GetLastModifyDateTime returns the LastModifyDateTime field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetLastModifyDateTime() string {
	if o == nil || IsNil(o.LastModifyDateTime) {
		var ret string
		return ret
	}
	return *o.LastModifyDateTime
}

// GetLastModifyDateTimeOk returns a tuple with the LastModifyDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetLastModifyDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifyDateTime) {
		return nil, false
	}
	return o.LastModifyDateTime, true
}

// HasLastModifyDateTime returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasLastModifyDateTime() bool {
	if o != nil && !IsNil(o.LastModifyDateTime) {
		return true
	}

	return false
}

// SetLastModifyDateTime gets a reference to the given string and assigns it to the LastModifyDateTime field.
func (o *StagedProfileMembershipType) SetLastModifyDateTime(v string) {
	o.LastModifyDateTime = &v
}

// GetMemberStatus returns the MemberStatus field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMemberStatus() string {
	if o == nil || IsNil(o.MemberStatus) {
		var ret string
		return ret
	}
	return *o.MemberStatus
}

// GetMemberStatusOk returns a tuple with the MemberStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMemberStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MemberStatus) {
		return nil, false
	}
	return o.MemberStatus, true
}

// HasMemberStatus returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMemberStatus() bool {
	if o != nil && !IsNil(o.MemberStatus) {
		return true
	}

	return false
}

// SetMemberStatus gets a reference to the given string and assigns it to the MemberStatus field.
func (o *StagedProfileMembershipType) SetMemberStatus(v string) {
	o.MemberStatus = &v
}

// GetMembershipClass returns the MembershipClass field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipClass() string {
	if o == nil || IsNil(o.MembershipClass) {
		var ret string
		return ret
	}
	return *o.MembershipClass
}

// GetMembershipClassOk returns a tuple with the MembershipClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipClassOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipClass) {
		return nil, false
	}
	return o.MembershipClass, true
}

// HasMembershipClass returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipClass() bool {
	if o != nil && !IsNil(o.MembershipClass) {
		return true
	}

	return false
}

// SetMembershipClass gets a reference to the given string and assigns it to the MembershipClass field.
func (o *StagedProfileMembershipType) SetMembershipClass(v string) {
	o.MembershipClass = &v
}

// GetMembershipEnrollmentCode returns the MembershipEnrollmentCode field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipEnrollmentCode() string {
	if o == nil || IsNil(o.MembershipEnrollmentCode) {
		var ret string
		return ret
	}
	return *o.MembershipEnrollmentCode
}

// GetMembershipEnrollmentCodeOk returns a tuple with the MembershipEnrollmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipEnrollmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipEnrollmentCode) {
		return nil, false
	}
	return o.MembershipEnrollmentCode, true
}

// HasMembershipEnrollmentCode returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipEnrollmentCode() bool {
	if o != nil && !IsNil(o.MembershipEnrollmentCode) {
		return true
	}

	return false
}

// SetMembershipEnrollmentCode gets a reference to the given string and assigns it to the MembershipEnrollmentCode field.
func (o *StagedProfileMembershipType) SetMembershipEnrollmentCode(v string) {
	o.MembershipEnrollmentCode = &v
}

// GetMembershipId returns the MembershipId field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipId() string {
	if o == nil || IsNil(o.MembershipId) {
		var ret string
		return ret
	}
	return *o.MembershipId
}

// GetMembershipIdOk returns a tuple with the MembershipId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipIdOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipId) {
		return nil, false
	}
	return o.MembershipId, true
}

// HasMembershipId returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipId() bool {
	if o != nil && !IsNil(o.MembershipId) {
		return true
	}

	return false
}

// SetMembershipId gets a reference to the given string and assigns it to the MembershipId field.
func (o *StagedProfileMembershipType) SetMembershipId(v string) {
	o.MembershipId = &v
}

// GetMembershipIdNo returns the MembershipIdNo field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipIdNo() int32 {
	if o == nil || IsNil(o.MembershipIdNo) {
		var ret int32
		return ret
	}
	return *o.MembershipIdNo
}

// GetMembershipIdNoOk returns a tuple with the MembershipIdNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipIdNoOk() (*int32, bool) {
	if o == nil || IsNil(o.MembershipIdNo) {
		return nil, false
	}
	return o.MembershipIdNo, true
}

// HasMembershipIdNo returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipIdNo() bool {
	if o != nil && !IsNil(o.MembershipIdNo) {
		return true
	}

	return false
}

// SetMembershipIdNo gets a reference to the given int32 and assigns it to the MembershipIdNo field.
func (o *StagedProfileMembershipType) SetMembershipIdNo(v int32) {
	o.MembershipIdNo = &v
}

// GetMembershipLevel returns the MembershipLevel field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipLevel() string {
	if o == nil || IsNil(o.MembershipLevel) {
		var ret string
		return ret
	}
	return *o.MembershipLevel
}

// GetMembershipLevelOk returns a tuple with the MembershipLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevel) {
		return nil, false
	}
	return o.MembershipLevel, true
}

// HasMembershipLevel returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipLevel() bool {
	if o != nil && !IsNil(o.MembershipLevel) {
		return true
	}

	return false
}

// SetMembershipLevel gets a reference to the given string and assigns it to the MembershipLevel field.
func (o *StagedProfileMembershipType) SetMembershipLevel(v string) {
	o.MembershipLevel = &v
}

// GetMembershipLevelDescription returns the MembershipLevelDescription field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipLevelDescription() string {
	if o == nil || IsNil(o.MembershipLevelDescription) {
		var ret string
		return ret
	}
	return *o.MembershipLevelDescription
}

// GetMembershipLevelDescriptionOk returns a tuple with the MembershipLevelDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipLevelDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipLevelDescription) {
		return nil, false
	}
	return o.MembershipLevelDescription, true
}

// HasMembershipLevelDescription returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipLevelDescription() bool {
	if o != nil && !IsNil(o.MembershipLevelDescription) {
		return true
	}

	return false
}

// SetMembershipLevelDescription gets a reference to the given string and assigns it to the MembershipLevelDescription field.
func (o *StagedProfileMembershipType) SetMembershipLevelDescription(v string) {
	o.MembershipLevelDescription = &v
}

// GetMembershipStatus returns the MembershipStatus field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipStatus() string {
	if o == nil || IsNil(o.MembershipStatus) {
		var ret string
		return ret
	}
	return *o.MembershipStatus
}

// GetMembershipStatusOk returns a tuple with the MembershipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipStatus) {
		return nil, false
	}
	return o.MembershipStatus, true
}

// HasMembershipStatus returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipStatus() bool {
	if o != nil && !IsNil(o.MembershipStatus) {
		return true
	}

	return false
}

// SetMembershipStatus gets a reference to the given string and assigns it to the MembershipStatus field.
func (o *StagedProfileMembershipType) SetMembershipStatus(v string) {
	o.MembershipStatus = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *StagedProfileMembershipType) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetNameOnCard returns the NameOnCard field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetNameOnCard() string {
	if o == nil || IsNil(o.NameOnCard) {
		var ret string
		return ret
	}
	return *o.NameOnCard
}

// GetNameOnCardOk returns a tuple with the NameOnCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetNameOnCardOk() (*string, bool) {
	if o == nil || IsNil(o.NameOnCard) {
		return nil, false
	}
	return o.NameOnCard, true
}

// HasNameOnCard returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasNameOnCard() bool {
	if o != nil && !IsNil(o.NameOnCard) {
		return true
	}

	return false
}

// SetNameOnCard gets a reference to the given string and assigns it to the NameOnCard field.
func (o *StagedProfileMembershipType) SetNameOnCard(v string) {
	o.NameOnCard = &v
}

// GetNewMembershipNumber returns the NewMembershipNumber field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetNewMembershipNumber() string {
	if o == nil || IsNil(o.NewMembershipNumber) {
		var ret string
		return ret
	}
	return *o.NewMembershipNumber
}

// GetNewMembershipNumberOk returns a tuple with the NewMembershipNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetNewMembershipNumberOk() (*string, bool) {
	if o == nil || IsNil(o.NewMembershipNumber) {
		return nil, false
	}
	return o.NewMembershipNumber, true
}

// HasNewMembershipNumber returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasNewMembershipNumber() bool {
	if o != nil && !IsNil(o.NewMembershipNumber) {
		return true
	}

	return false
}

// SetNewMembershipNumber gets a reference to the given string and assigns it to the NewMembershipNumber field.
func (o *StagedProfileMembershipType) SetNewMembershipNumber(v string) {
	o.NewMembershipNumber = &v
}

// GetOrderSequence returns the OrderSequence field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetOrderSequence() float32 {
	if o == nil || IsNil(o.OrderSequence) {
		var ret float32
		return ret
	}
	return *o.OrderSequence
}

// GetOrderSequenceOk returns a tuple with the OrderSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetOrderSequenceOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderSequence) {
		return nil, false
	}
	return o.OrderSequence, true
}

// HasOrderSequence returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasOrderSequence() bool {
	if o != nil && !IsNil(o.OrderSequence) {
		return true
	}

	return false
}

// SetOrderSequence gets a reference to the given float32 and assigns it to the OrderSequence field.
func (o *StagedProfileMembershipType) SetOrderSequence(v float32) {
	o.OrderSequence = &v
}

// GetPlayerRanking returns the PlayerRanking field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetPlayerRanking() int32 {
	if o == nil || IsNil(o.PlayerRanking) {
		var ret int32
		return ret
	}
	return *o.PlayerRanking
}

// GetPlayerRankingOk returns a tuple with the PlayerRanking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetPlayerRankingOk() (*int32, bool) {
	if o == nil || IsNil(o.PlayerRanking) {
		return nil, false
	}
	return o.PlayerRanking, true
}

// HasPlayerRanking returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasPlayerRanking() bool {
	if o != nil && !IsNil(o.PlayerRanking) {
		return true
	}

	return false
}

// SetPlayerRanking gets a reference to the given int32 and assigns it to the PlayerRanking field.
func (o *StagedProfileMembershipType) SetPlayerRanking(v int32) {
	o.PlayerRanking = &v
}

// GetPointsLabel returns the PointsLabel field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetPointsLabel() string {
	if o == nil || IsNil(o.PointsLabel) {
		var ret string
		return ret
	}
	return *o.PointsLabel
}

// GetPointsLabelOk returns a tuple with the PointsLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetPointsLabelOk() (*string, bool) {
	if o == nil || IsNil(o.PointsLabel) {
		return nil, false
	}
	return o.PointsLabel, true
}

// HasPointsLabel returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasPointsLabel() bool {
	if o != nil && !IsNil(o.PointsLabel) {
		return true
	}

	return false
}

// SetPointsLabel gets a reference to the given string and assigns it to the PointsLabel field.
func (o *StagedProfileMembershipType) SetPointsLabel(v string) {
	o.PointsLabel = &v
}

// GetPreferredCard returns the PreferredCard field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetPreferredCard() bool {
	if o == nil || IsNil(o.PreferredCard) {
		var ret bool
		return ret
	}
	return *o.PreferredCard
}

// GetPreferredCardOk returns a tuple with the PreferredCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetPreferredCardOk() (*bool, bool) {
	if o == nil || IsNil(o.PreferredCard) {
		return nil, false
	}
	return o.PreferredCard, true
}

// HasPreferredCard returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasPreferredCard() bool {
	if o != nil && !IsNil(o.PreferredCard) {
		return true
	}

	return false
}

// SetPreferredCard gets a reference to the given bool and assigns it to the PreferredCard field.
func (o *StagedProfileMembershipType) SetPreferredCard(v bool) {
	o.PreferredCard = &v
}

// GetPrimaryMembership returns the PrimaryMembership field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetPrimaryMembership() bool {
	if o == nil || IsNil(o.PrimaryMembership) {
		var ret bool
		return ret
	}
	return *o.PrimaryMembership
}

// GetPrimaryMembershipOk returns a tuple with the PrimaryMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetPrimaryMembershipOk() (*bool, bool) {
	if o == nil || IsNil(o.PrimaryMembership) {
		return nil, false
	}
	return o.PrimaryMembership, true
}

// HasPrimaryMembership returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasPrimaryMembership() bool {
	if o != nil && !IsNil(o.PrimaryMembership) {
		return true
	}

	return false
}

// SetPrimaryMembership gets a reference to the given bool and assigns it to the PrimaryMembership field.
func (o *StagedProfileMembershipType) SetPrimaryMembership(v bool) {
	o.PrimaryMembership = &v
}

// GetPrimaryMembershipYn returns the PrimaryMembershipYn field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetPrimaryMembershipYn() string {
	if o == nil || IsNil(o.PrimaryMembershipYn) {
		var ret string
		return ret
	}
	return *o.PrimaryMembershipYn
}

// GetPrimaryMembershipYnOk returns a tuple with the PrimaryMembershipYn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetPrimaryMembershipYnOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryMembershipYn) {
		return nil, false
	}
	return o.PrimaryMembershipYn, true
}

// HasPrimaryMembershipYn returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasPrimaryMembershipYn() bool {
	if o != nil && !IsNil(o.PrimaryMembershipYn) {
		return true
	}

	return false
}

// SetPrimaryMembershipYn gets a reference to the given string and assigns it to the PrimaryMembershipYn field.
func (o *StagedProfileMembershipType) SetPrimaryMembershipYn(v string) {
	o.PrimaryMembershipYn = &v
}

// GetProgramDescription returns the ProgramDescription field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetProgramDescription() string {
	if o == nil || IsNil(o.ProgramDescription) {
		var ret string
		return ret
	}
	return *o.ProgramDescription
}

// GetProgramDescriptionOk returns a tuple with the ProgramDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetProgramDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramDescription) {
		return nil, false
	}
	return o.ProgramDescription, true
}

// HasProgramDescription returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasProgramDescription() bool {
	if o != nil && !IsNil(o.ProgramDescription) {
		return true
	}

	return false
}

// SetProgramDescription gets a reference to the given string and assigns it to the ProgramDescription field.
func (o *StagedProfileMembershipType) SetProgramDescription(v string) {
	o.ProgramDescription = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetRating() string {
	if o == nil || IsNil(o.Rating) {
		var ret string
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetRatingOk() (*string, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given string and assigns it to the Rating field.
func (o *StagedProfileMembershipType) SetRating(v string) {
	o.Rating = &v
}

// GetReIssueNewCard returns the ReIssueNewCard field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetReIssueNewCard() CardReIssueType {
	if o == nil || IsNil(o.ReIssueNewCard) {
		var ret CardReIssueType
		return ret
	}
	return *o.ReIssueNewCard
}

// GetReIssueNewCardOk returns a tuple with the ReIssueNewCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetReIssueNewCardOk() (*CardReIssueType, bool) {
	if o == nil || IsNil(o.ReIssueNewCard) {
		return nil, false
	}
	return o.ReIssueNewCard, true
}

// HasReIssueNewCard returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasReIssueNewCard() bool {
	if o != nil && !IsNil(o.ReIssueNewCard) {
		return true
	}

	return false
}

// SetReIssueNewCard gets a reference to the given CardReIssueType and assigns it to the ReIssueNewCard field.
func (o *StagedProfileMembershipType) SetReIssueNewCard(v CardReIssueType) {
	o.ReIssueNewCard = &v
}

// GetRegistrationResort returns the RegistrationResort field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetRegistrationResort() string {
	if o == nil || IsNil(o.RegistrationResort) {
		var ret string
		return ret
	}
	return *o.RegistrationResort
}

// GetRegistrationResortOk returns a tuple with the RegistrationResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetRegistrationResortOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationResort) {
		return nil, false
	}
	return o.RegistrationResort, true
}

// HasRegistrationResort returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasRegistrationResort() bool {
	if o != nil && !IsNil(o.RegistrationResort) {
		return true
	}

	return false
}

// SetRegistrationResort gets a reference to the given string and assigns it to the RegistrationResort field.
func (o *StagedProfileMembershipType) SetRegistrationResort(v string) {
	o.RegistrationResort = &v
}

// GetSignupDate returns the SignupDate field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetSignupDate() string {
	if o == nil || IsNil(o.SignupDate) {
		var ret string
		return ret
	}
	return *o.SignupDate
}

// GetSignupDateOk returns a tuple with the SignupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetSignupDateOk() (*string, bool) {
	if o == nil || IsNil(o.SignupDate) {
		return nil, false
	}
	return o.SignupDate, true
}

// HasSignupDate returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasSignupDate() bool {
	if o != nil && !IsNil(o.SignupDate) {
		return true
	}

	return false
}

// SetSignupDate gets a reference to the given string and assigns it to the SignupDate field.
func (o *StagedProfileMembershipType) SetSignupDate(v string) {
	o.SignupDate = &v
}

// GetTierAdministration returns the TierAdministration field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetTierAdministration() TierAdministrationType {
	if o == nil || IsNil(o.TierAdministration) {
		var ret TierAdministrationType
		return ret
	}
	return *o.TierAdministration
}

// GetTierAdministrationOk returns a tuple with the TierAdministration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetTierAdministrationOk() (*TierAdministrationType, bool) {
	if o == nil || IsNil(o.TierAdministration) {
		return nil, false
	}
	return o.TierAdministration, true
}

// HasTierAdministration returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasTierAdministration() bool {
	if o != nil && !IsNil(o.TierAdministration) {
		return true
	}

	return false
}

// SetTierAdministration gets a reference to the given TierAdministrationType and assigns it to the TierAdministration field.
func (o *StagedProfileMembershipType) SetTierAdministration(v TierAdministrationType) {
	o.TierAdministration = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StagedProfileMembershipType) SetType(v string) {
	o.Type = &v
}

// GetUpdateExistingMembership returns the UpdateExistingMembership field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetUpdateExistingMembership() bool {
	if o == nil || IsNil(o.UpdateExistingMembership) {
		var ret bool
		return ret
	}
	return *o.UpdateExistingMembership
}

// GetUpdateExistingMembershipOk returns a tuple with the UpdateExistingMembership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetUpdateExistingMembershipOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateExistingMembership) {
		return nil, false
	}
	return o.UpdateExistingMembership, true
}

// HasUpdateExistingMembership returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasUpdateExistingMembership() bool {
	if o != nil && !IsNil(o.UpdateExistingMembership) {
		return true
	}

	return false
}

// SetUpdateExistingMembership gets a reference to the given bool and assigns it to the UpdateExistingMembership field.
func (o *StagedProfileMembershipType) SetUpdateExistingMembership(v bool) {
	o.UpdateExistingMembership = &v
}

// GetUpgradeDescription returns the UpgradeDescription field value if set, zero value otherwise.
func (o *StagedProfileMembershipType) GetUpgradeDescription() string {
	if o == nil || IsNil(o.UpgradeDescription) {
		var ret string
		return ret
	}
	return *o.UpgradeDescription
}

// GetUpgradeDescriptionOk returns a tuple with the UpgradeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileMembershipType) GetUpgradeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.UpgradeDescription) {
		return nil, false
	}
	return o.UpgradeDescription, true
}

// HasUpgradeDescription returns a boolean if a field has been set.
func (o *StagedProfileMembershipType) HasUpgradeDescription() bool {
	if o != nil && !IsNil(o.UpgradeDescription) {
		return true
	}

	return false
}

// SetUpgradeDescription gets a reference to the given string and assigns it to the UpgradeDescription field.
func (o *StagedProfileMembershipType) SetUpgradeDescription(v string) {
	o.UpgradeDescription = &v
}

func (o StagedProfileMembershipType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileMembershipType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Benefits) {
		toSerialize["benefits"] = o.Benefits
	}
	if !IsNil(o.CentralSetup) {
		toSerialize["centralSetup"] = o.CentralSetup
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CreateDateTime) {
		toSerialize["createDateTime"] = o.CreateDateTime
	}
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.CurrentPoints) {
		toSerialize["currentPoints"] = o.CurrentPoints
	}
	if !IsNil(o.DeviceCode) {
		toSerialize["deviceCode"] = o.DeviceCode
	}
	if !IsNil(o.DeviceDisabledDate) {
		toSerialize["deviceDisabledDate"] = o.DeviceDisabledDate
	}
	if !IsNil(o.Downgrade) {
		toSerialize["downgrade"] = o.Downgrade
	}
	if !IsNil(o.DowngradeDescription) {
		toSerialize["downgradeDescription"] = o.DowngradeDescription
	}
	if !IsNil(o.EarningPreference) {
		toSerialize["earningPreference"] = o.EarningPreference
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !IsNil(o.EnrollmentCode) {
		toSerialize["enrollmentCode"] = o.EnrollmentCode
	}
	if !IsNil(o.EnrollmentResort) {
		toSerialize["enrollmentResort"] = o.EnrollmentResort
	}
	if !IsNil(o.EnrollmentSource) {
		toSerialize["enrollmentSource"] = o.EnrollmentSource
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.ExcludeFromBatch) {
		toSerialize["excludeFromBatch"] = o.ExcludeFromBatch
	}
	if !IsNil(o.ExpireDate) {
		toSerialize["expireDate"] = o.ExpireDate
	}
	if !IsNil(o.ExpireDateExclusiveIndicator) {
		toSerialize["expireDateExclusiveIndicator"] = o.ExpireDateExclusiveIndicator
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.InactiveDate) {
		toSerialize["inactiveDate"] = o.InactiveDate
	}
	if !IsNil(o.LastModifierId) {
		toSerialize["lastModifierId"] = o.LastModifierId
	}
	if !IsNil(o.LastModifyDateTime) {
		toSerialize["lastModifyDateTime"] = o.LastModifyDateTime
	}
	if !IsNil(o.MemberStatus) {
		toSerialize["memberStatus"] = o.MemberStatus
	}
	if !IsNil(o.MembershipClass) {
		toSerialize["membershipClass"] = o.MembershipClass
	}
	if !IsNil(o.MembershipEnrollmentCode) {
		toSerialize["membershipEnrollmentCode"] = o.MembershipEnrollmentCode
	}
	if !IsNil(o.MembershipId) {
		toSerialize["membershipId"] = o.MembershipId
	}
	if !IsNil(o.MembershipIdNo) {
		toSerialize["membershipIdNo"] = o.MembershipIdNo
	}
	if !IsNil(o.MembershipLevel) {
		toSerialize["membershipLevel"] = o.MembershipLevel
	}
	if !IsNil(o.MembershipLevelDescription) {
		toSerialize["membershipLevelDescription"] = o.MembershipLevelDescription
	}
	if !IsNil(o.MembershipStatus) {
		toSerialize["membershipStatus"] = o.MembershipStatus
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membershipType"] = o.MembershipType
	}
	if !IsNil(o.NameOnCard) {
		toSerialize["nameOnCard"] = o.NameOnCard
	}
	if !IsNil(o.NewMembershipNumber) {
		toSerialize["newMembershipNumber"] = o.NewMembershipNumber
	}
	if !IsNil(o.OrderSequence) {
		toSerialize["orderSequence"] = o.OrderSequence
	}
	if !IsNil(o.PlayerRanking) {
		toSerialize["playerRanking"] = o.PlayerRanking
	}
	if !IsNil(o.PointsLabel) {
		toSerialize["pointsLabel"] = o.PointsLabel
	}
	if !IsNil(o.PreferredCard) {
		toSerialize["preferredCard"] = o.PreferredCard
	}
	if !IsNil(o.PrimaryMembership) {
		toSerialize["primaryMembership"] = o.PrimaryMembership
	}
	if !IsNil(o.PrimaryMembershipYn) {
		toSerialize["primaryMembershipYn"] = o.PrimaryMembershipYn
	}
	if !IsNil(o.ProgramDescription) {
		toSerialize["programDescription"] = o.ProgramDescription
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.ReIssueNewCard) {
		toSerialize["reIssueNewCard"] = o.ReIssueNewCard
	}
	if !IsNil(o.RegistrationResort) {
		toSerialize["registrationResort"] = o.RegistrationResort
	}
	if !IsNil(o.SignupDate) {
		toSerialize["signupDate"] = o.SignupDate
	}
	if !IsNil(o.TierAdministration) {
		toSerialize["tierAdministration"] = o.TierAdministration
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdateExistingMembership) {
		toSerialize["updateExistingMembership"] = o.UpdateExistingMembership
	}
	if !IsNil(o.UpgradeDescription) {
		toSerialize["upgradeDescription"] = o.UpgradeDescription
	}
	return toSerialize, nil
}

type NullableStagedProfileMembershipType struct {
	value *StagedProfileMembershipType
	isSet bool
}

func (v NullableStagedProfileMembershipType) Get() *StagedProfileMembershipType {
	return v.value
}

func (v *NullableStagedProfileMembershipType) Set(val *StagedProfileMembershipType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileMembershipType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileMembershipType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileMembershipType(val *StagedProfileMembershipType) *NullableStagedProfileMembershipType {
	return &NullableStagedProfileMembershipType{value: val, isSet: true}
}

func (v NullableStagedProfileMembershipType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileMembershipType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


