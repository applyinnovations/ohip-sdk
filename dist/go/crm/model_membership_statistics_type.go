/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipStatisticsType{}

// MembershipStatisticsType List of membership transactions and the summary of the different total points statistics.
type MembershipStatisticsType struct {
	StatisticsSummary *MembershipStatisticsSummaryType `json:"statisticsSummary,omitempty"`
	// Activity or a transaction related to the Membership.
	Transactions []MembershipTransactionSummaryType `json:"transactions,omitempty"`
	// The type of membership.
	Type *string `json:"type,omitempty"`
	// The membership card number.
	CardNumber *string `json:"cardNumber,omitempty"`
	// The level of the membership.
	Level *string `json:"level,omitempty"`
}

// NewMembershipStatisticsType instantiates a new MembershipStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipStatisticsType() *MembershipStatisticsType {
	this := MembershipStatisticsType{}
	return &this
}

// NewMembershipStatisticsTypeWithDefaults instantiates a new MembershipStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipStatisticsTypeWithDefaults() *MembershipStatisticsType {
	this := MembershipStatisticsType{}
	return &this
}

// GetStatisticsSummary returns the StatisticsSummary field value if set, zero value otherwise.
func (o *MembershipStatisticsType) GetStatisticsSummary() MembershipStatisticsSummaryType {
	if o == nil || IsNil(o.StatisticsSummary) {
		var ret MembershipStatisticsSummaryType
		return ret
	}
	return *o.StatisticsSummary
}

// GetStatisticsSummaryOk returns a tuple with the StatisticsSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsType) GetStatisticsSummaryOk() (*MembershipStatisticsSummaryType, bool) {
	if o == nil || IsNil(o.StatisticsSummary) {
		return nil, false
	}
	return o.StatisticsSummary, true
}

// HasStatisticsSummary returns a boolean if a field has been set.
func (o *MembershipStatisticsType) HasStatisticsSummary() bool {
	if o != nil && !IsNil(o.StatisticsSummary) {
		return true
	}

	return false
}

// SetStatisticsSummary gets a reference to the given MembershipStatisticsSummaryType and assigns it to the StatisticsSummary field.
func (o *MembershipStatisticsType) SetStatisticsSummary(v MembershipStatisticsSummaryType) {
	o.StatisticsSummary = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *MembershipStatisticsType) GetTransactions() []MembershipTransactionSummaryType {
	if o == nil || IsNil(o.Transactions) {
		var ret []MembershipTransactionSummaryType
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsType) GetTransactionsOk() ([]MembershipTransactionSummaryType, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *MembershipStatisticsType) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []MembershipTransactionSummaryType and assigns it to the Transactions field.
func (o *MembershipStatisticsType) SetTransactions(v []MembershipTransactionSummaryType) {
	o.Transactions = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MembershipStatisticsType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MembershipStatisticsType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MembershipStatisticsType) SetType(v string) {
	o.Type = &v
}

// GetCardNumber returns the CardNumber field value if set, zero value otherwise.
func (o *MembershipStatisticsType) GetCardNumber() string {
	if o == nil || IsNil(o.CardNumber) {
		var ret string
		return ret
	}
	return *o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsType) GetCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumber) {
		return nil, false
	}
	return o.CardNumber, true
}

// HasCardNumber returns a boolean if a field has been set.
func (o *MembershipStatisticsType) HasCardNumber() bool {
	if o != nil && !IsNil(o.CardNumber) {
		return true
	}

	return false
}

// SetCardNumber gets a reference to the given string and assigns it to the CardNumber field.
func (o *MembershipStatisticsType) SetCardNumber(v string) {
	o.CardNumber = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *MembershipStatisticsType) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsType) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *MembershipStatisticsType) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *MembershipStatisticsType) SetLevel(v string) {
	o.Level = &v
}

func (o MembershipStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatisticsSummary) {
		toSerialize["statisticsSummary"] = o.StatisticsSummary
	}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CardNumber) {
		toSerialize["cardNumber"] = o.CardNumber
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	return toSerialize, nil
}

type NullableMembershipStatisticsType struct {
	value *MembershipStatisticsType
	isSet bool
}

func (v NullableMembershipStatisticsType) Get() *MembershipStatisticsType {
	return v.value
}

func (v *NullableMembershipStatisticsType) Set(val *MembershipStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipStatisticsType(val *MembershipStatisticsType) *NullableMembershipStatisticsType {
	return &NullableMembershipStatisticsType{value: val, isSet: true}
}

func (v NullableMembershipStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


