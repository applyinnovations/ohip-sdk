/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipTierPointsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTierPointsType{}

// MembershipTierPointsType Collection of the tier points.
type MembershipTierPointsType struct {
	// Sum of the base night and bonus night points.
	NightPoints *int32 `json:"nightPoints,omitempty"`
	// Points Cost.
	PointsCost *int32 `json:"pointsCost,omitempty"`
	// Date when points were created.
	PointsCreditDate *string `json:"pointsCreditDate,omitempty"`
	// Sum of the base revenue and bonus revenue points.
	RevenuePoints *int32 `json:"revenuePoints,omitempty"`
	// Sum of the base stay and bonus stay points.
	StayPoints *int32 `json:"stayPoints,omitempty"`
}

// NewMembershipTierPointsType instantiates a new MembershipTierPointsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTierPointsType() *MembershipTierPointsType {
	this := MembershipTierPointsType{}
	return &this
}

// NewMembershipTierPointsTypeWithDefaults instantiates a new MembershipTierPointsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTierPointsTypeWithDefaults() *MembershipTierPointsType {
	this := MembershipTierPointsType{}
	return &this
}

// GetNightPoints returns the NightPoints field value if set, zero value otherwise.
func (o *MembershipTierPointsType) GetNightPoints() int32 {
	if o == nil || IsNil(o.NightPoints) {
		var ret int32
		return ret
	}
	return *o.NightPoints
}

// GetNightPointsOk returns a tuple with the NightPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTierPointsType) GetNightPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.NightPoints) {
		return nil, false
	}
	return o.NightPoints, true
}

// HasNightPoints returns a boolean if a field has been set.
func (o *MembershipTierPointsType) HasNightPoints() bool {
	if o != nil && !IsNil(o.NightPoints) {
		return true
	}

	return false
}

// SetNightPoints gets a reference to the given int32 and assigns it to the NightPoints field.
func (o *MembershipTierPointsType) SetNightPoints(v int32) {
	o.NightPoints = &v
}

// GetPointsCost returns the PointsCost field value if set, zero value otherwise.
func (o *MembershipTierPointsType) GetPointsCost() int32 {
	if o == nil || IsNil(o.PointsCost) {
		var ret int32
		return ret
	}
	return *o.PointsCost
}

// GetPointsCostOk returns a tuple with the PointsCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTierPointsType) GetPointsCostOk() (*int32, bool) {
	if o == nil || IsNil(o.PointsCost) {
		return nil, false
	}
	return o.PointsCost, true
}

// HasPointsCost returns a boolean if a field has been set.
func (o *MembershipTierPointsType) HasPointsCost() bool {
	if o != nil && !IsNil(o.PointsCost) {
		return true
	}

	return false
}

// SetPointsCost gets a reference to the given int32 and assigns it to the PointsCost field.
func (o *MembershipTierPointsType) SetPointsCost(v int32) {
	o.PointsCost = &v
}

// GetPointsCreditDate returns the PointsCreditDate field value if set, zero value otherwise.
func (o *MembershipTierPointsType) GetPointsCreditDate() string {
	if o == nil || IsNil(o.PointsCreditDate) {
		var ret string
		return ret
	}
	return *o.PointsCreditDate
}

// GetPointsCreditDateOk returns a tuple with the PointsCreditDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTierPointsType) GetPointsCreditDateOk() (*string, bool) {
	if o == nil || IsNil(o.PointsCreditDate) {
		return nil, false
	}
	return o.PointsCreditDate, true
}

// HasPointsCreditDate returns a boolean if a field has been set.
func (o *MembershipTierPointsType) HasPointsCreditDate() bool {
	if o != nil && !IsNil(o.PointsCreditDate) {
		return true
	}

	return false
}

// SetPointsCreditDate gets a reference to the given string and assigns it to the PointsCreditDate field.
func (o *MembershipTierPointsType) SetPointsCreditDate(v string) {
	o.PointsCreditDate = &v
}

// GetRevenuePoints returns the RevenuePoints field value if set, zero value otherwise.
func (o *MembershipTierPointsType) GetRevenuePoints() int32 {
	if o == nil || IsNil(o.RevenuePoints) {
		var ret int32
		return ret
	}
	return *o.RevenuePoints
}

// GetRevenuePointsOk returns a tuple with the RevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTierPointsType) GetRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.RevenuePoints) {
		return nil, false
	}
	return o.RevenuePoints, true
}

// HasRevenuePoints returns a boolean if a field has been set.
func (o *MembershipTierPointsType) HasRevenuePoints() bool {
	if o != nil && !IsNil(o.RevenuePoints) {
		return true
	}

	return false
}

// SetRevenuePoints gets a reference to the given int32 and assigns it to the RevenuePoints field.
func (o *MembershipTierPointsType) SetRevenuePoints(v int32) {
	o.RevenuePoints = &v
}

// GetStayPoints returns the StayPoints field value if set, zero value otherwise.
func (o *MembershipTierPointsType) GetStayPoints() int32 {
	if o == nil || IsNil(o.StayPoints) {
		var ret int32
		return ret
	}
	return *o.StayPoints
}

// GetStayPointsOk returns a tuple with the StayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTierPointsType) GetStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.StayPoints) {
		return nil, false
	}
	return o.StayPoints, true
}

// HasStayPoints returns a boolean if a field has been set.
func (o *MembershipTierPointsType) HasStayPoints() bool {
	if o != nil && !IsNil(o.StayPoints) {
		return true
	}

	return false
}

// SetStayPoints gets a reference to the given int32 and assigns it to the StayPoints field.
func (o *MembershipTierPointsType) SetStayPoints(v int32) {
	o.StayPoints = &v
}

func (o MembershipTierPointsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTierPointsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NightPoints) {
		toSerialize["nightPoints"] = o.NightPoints
	}
	if !IsNil(o.PointsCost) {
		toSerialize["pointsCost"] = o.PointsCost
	}
	if !IsNil(o.PointsCreditDate) {
		toSerialize["pointsCreditDate"] = o.PointsCreditDate
	}
	if !IsNil(o.RevenuePoints) {
		toSerialize["revenuePoints"] = o.RevenuePoints
	}
	if !IsNil(o.StayPoints) {
		toSerialize["stayPoints"] = o.StayPoints
	}
	return toSerialize, nil
}

type NullableMembershipTierPointsType struct {
	value *MembershipTierPointsType
	isSet bool
}

func (v NullableMembershipTierPointsType) Get() *MembershipTierPointsType {
	return v.value
}

func (v *NullableMembershipTierPointsType) Set(val *MembershipTierPointsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTierPointsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTierPointsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTierPointsType(val *MembershipTierPointsType) *NullableMembershipTierPointsType {
	return &NullableMembershipTierPointsType{value: val, isSet: true}
}

func (v NullableMembershipTierPointsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTierPointsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


