/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the SuspendedStayErrorType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedStayErrorType{}

// SuspendedStayErrorType Suspended Stay Error information.
type SuspendedStayErrorType struct {
	// Suspended Stay Record ID.
	SuspendedStayRecordId *string `json:"suspendedStayRecordId,omitempty"`
	// Indicates the error type.
	ErrorType *string `json:"errorType,omitempty"`
	// Indicates the description of the error.
	ErrorDescription *string `json:"errorDescription,omitempty"`
}

// NewSuspendedStayErrorType instantiates a new SuspendedStayErrorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedStayErrorType() *SuspendedStayErrorType {
	this := SuspendedStayErrorType{}
	return &this
}

// NewSuspendedStayErrorTypeWithDefaults instantiates a new SuspendedStayErrorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedStayErrorTypeWithDefaults() *SuspendedStayErrorType {
	this := SuspendedStayErrorType{}
	return &this
}

// GetSuspendedStayRecordId returns the SuspendedStayRecordId field value if set, zero value otherwise.
func (o *SuspendedStayErrorType) GetSuspendedStayRecordId() string {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		var ret string
		return ret
	}
	return *o.SuspendedStayRecordId
}

// GetSuspendedStayRecordIdOk returns a tuple with the SuspendedStayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayErrorType) GetSuspendedStayRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		return nil, false
	}
	return o.SuspendedStayRecordId, true
}

// HasSuspendedStayRecordId returns a boolean if a field has been set.
func (o *SuspendedStayErrorType) HasSuspendedStayRecordId() bool {
	if o != nil && !IsNil(o.SuspendedStayRecordId) {
		return true
	}

	return false
}

// SetSuspendedStayRecordId gets a reference to the given string and assigns it to the SuspendedStayRecordId field.
func (o *SuspendedStayErrorType) SetSuspendedStayRecordId(v string) {
	o.SuspendedStayRecordId = &v
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise.
func (o *SuspendedStayErrorType) GetErrorType() string {
	if o == nil || IsNil(o.ErrorType) {
		var ret string
		return ret
	}
	return *o.ErrorType
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayErrorType) GetErrorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorType) {
		return nil, false
	}
	return o.ErrorType, true
}

// HasErrorType returns a boolean if a field has been set.
func (o *SuspendedStayErrorType) HasErrorType() bool {
	if o != nil && !IsNil(o.ErrorType) {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given string and assigns it to the ErrorType field.
func (o *SuspendedStayErrorType) SetErrorType(v string) {
	o.ErrorType = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *SuspendedStayErrorType) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStayErrorType) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *SuspendedStayErrorType) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *SuspendedStayErrorType) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

func (o SuspendedStayErrorType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedStayErrorType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedStayRecordId) {
		toSerialize["suspendedStayRecordId"] = o.SuspendedStayRecordId
	}
	if !IsNil(o.ErrorType) {
		toSerialize["errorType"] = o.ErrorType
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	return toSerialize, nil
}

type NullableSuspendedStayErrorType struct {
	value *SuspendedStayErrorType
	isSet bool
}

func (v NullableSuspendedStayErrorType) Get() *SuspendedStayErrorType {
	return v.value
}

func (v *NullableSuspendedStayErrorType) Set(val *SuspendedStayErrorType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedStayErrorType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedStayErrorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedStayErrorType(val *SuspendedStayErrorType) *NullableSuspendedStayErrorType {
	return &NullableSuspendedStayErrorType{value: val, isSet: true}
}

func (v NullableSuspendedStayErrorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedStayErrorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


