/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StayStatisticsRevenueType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StayStatisticsRevenueType{}

// StayStatisticsRevenueType Contains different list of stay statistics revenue information
type StayStatisticsRevenueType struct {
	AverageDailyRate *StatisticsRevenueTypeType `json:"averageDailyRate,omitempty"`
	TotalRevenue *StatisticsRevenueTypeType `json:"totalRevenue,omitempty"`
	RoomRevenue *StatisticsRevenueTypeType `json:"roomRevenue,omitempty"`
	FBRevenue *StatisticsRevenueTypeType `json:"fBRevenue,omitempty"`
	ExtraRevenue *StatisticsRevenueTypeType `json:"extraRevenue,omitempty"`
	NonRevenue *StatisticsRevenueTypeType `json:"nonRevenue,omitempty"`
	Currency *string `json:"currency,omitempty"`
	StayReservation *StayReservationType `json:"stayReservation,omitempty"`
}

// NewStayStatisticsRevenueType instantiates a new StayStatisticsRevenueType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStayStatisticsRevenueType() *StayStatisticsRevenueType {
	this := StayStatisticsRevenueType{}
	return &this
}

// NewStayStatisticsRevenueTypeWithDefaults instantiates a new StayStatisticsRevenueType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStayStatisticsRevenueTypeWithDefaults() *StayStatisticsRevenueType {
	this := StayStatisticsRevenueType{}
	return &this
}

// GetAverageDailyRate returns the AverageDailyRate field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetAverageDailyRate() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.AverageDailyRate) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.AverageDailyRate
}

// GetAverageDailyRateOk returns a tuple with the AverageDailyRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetAverageDailyRateOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.AverageDailyRate) {
		return nil, false
	}
	return o.AverageDailyRate, true
}

// HasAverageDailyRate returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasAverageDailyRate() bool {
	if o != nil && !IsNil(o.AverageDailyRate) {
		return true
	}

	return false
}

// SetAverageDailyRate gets a reference to the given StatisticsRevenueTypeType and assigns it to the AverageDailyRate field.
func (o *StayStatisticsRevenueType) SetAverageDailyRate(v StatisticsRevenueTypeType) {
	o.AverageDailyRate = &v
}

// GetTotalRevenue returns the TotalRevenue field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetTotalRevenue() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.TotalRevenue) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.TotalRevenue
}

// GetTotalRevenueOk returns a tuple with the TotalRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetTotalRevenueOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.TotalRevenue) {
		return nil, false
	}
	return o.TotalRevenue, true
}

// HasTotalRevenue returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasTotalRevenue() bool {
	if o != nil && !IsNil(o.TotalRevenue) {
		return true
	}

	return false
}

// SetTotalRevenue gets a reference to the given StatisticsRevenueTypeType and assigns it to the TotalRevenue field.
func (o *StayStatisticsRevenueType) SetTotalRevenue(v StatisticsRevenueTypeType) {
	o.TotalRevenue = &v
}

// GetRoomRevenue returns the RoomRevenue field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetRoomRevenue() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.RoomRevenue) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.RoomRevenue
}

// GetRoomRevenueOk returns a tuple with the RoomRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetRoomRevenueOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.RoomRevenue) {
		return nil, false
	}
	return o.RoomRevenue, true
}

// HasRoomRevenue returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasRoomRevenue() bool {
	if o != nil && !IsNil(o.RoomRevenue) {
		return true
	}

	return false
}

// SetRoomRevenue gets a reference to the given StatisticsRevenueTypeType and assigns it to the RoomRevenue field.
func (o *StayStatisticsRevenueType) SetRoomRevenue(v StatisticsRevenueTypeType) {
	o.RoomRevenue = &v
}

// GetFBRevenue returns the FBRevenue field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetFBRevenue() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.FBRevenue) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.FBRevenue
}

// GetFBRevenueOk returns a tuple with the FBRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetFBRevenueOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.FBRevenue) {
		return nil, false
	}
	return o.FBRevenue, true
}

// HasFBRevenue returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasFBRevenue() bool {
	if o != nil && !IsNil(o.FBRevenue) {
		return true
	}

	return false
}

// SetFBRevenue gets a reference to the given StatisticsRevenueTypeType and assigns it to the FBRevenue field.
func (o *StayStatisticsRevenueType) SetFBRevenue(v StatisticsRevenueTypeType) {
	o.FBRevenue = &v
}

// GetExtraRevenue returns the ExtraRevenue field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetExtraRevenue() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.ExtraRevenue) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.ExtraRevenue
}

// GetExtraRevenueOk returns a tuple with the ExtraRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetExtraRevenueOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.ExtraRevenue) {
		return nil, false
	}
	return o.ExtraRevenue, true
}

// HasExtraRevenue returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasExtraRevenue() bool {
	if o != nil && !IsNil(o.ExtraRevenue) {
		return true
	}

	return false
}

// SetExtraRevenue gets a reference to the given StatisticsRevenueTypeType and assigns it to the ExtraRevenue field.
func (o *StayStatisticsRevenueType) SetExtraRevenue(v StatisticsRevenueTypeType) {
	o.ExtraRevenue = &v
}

// GetNonRevenue returns the NonRevenue field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetNonRevenue() StatisticsRevenueTypeType {
	if o == nil || IsNil(o.NonRevenue) {
		var ret StatisticsRevenueTypeType
		return ret
	}
	return *o.NonRevenue
}

// GetNonRevenueOk returns a tuple with the NonRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetNonRevenueOk() (*StatisticsRevenueTypeType, bool) {
	if o == nil || IsNil(o.NonRevenue) {
		return nil, false
	}
	return o.NonRevenue, true
}

// HasNonRevenue returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasNonRevenue() bool {
	if o != nil && !IsNil(o.NonRevenue) {
		return true
	}

	return false
}

// SetNonRevenue gets a reference to the given StatisticsRevenueTypeType and assigns it to the NonRevenue field.
func (o *StayStatisticsRevenueType) SetNonRevenue(v StatisticsRevenueTypeType) {
	o.NonRevenue = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *StayStatisticsRevenueType) SetCurrency(v string) {
	o.Currency = &v
}

// GetStayReservation returns the StayReservation field value if set, zero value otherwise.
func (o *StayStatisticsRevenueType) GetStayReservation() StayReservationType {
	if o == nil || IsNil(o.StayReservation) {
		var ret StayReservationType
		return ret
	}
	return *o.StayReservation
}

// GetStayReservationOk returns a tuple with the StayReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StayStatisticsRevenueType) GetStayReservationOk() (*StayReservationType, bool) {
	if o == nil || IsNil(o.StayReservation) {
		return nil, false
	}
	return o.StayReservation, true
}

// HasStayReservation returns a boolean if a field has been set.
func (o *StayStatisticsRevenueType) HasStayReservation() bool {
	if o != nil && !IsNil(o.StayReservation) {
		return true
	}

	return false
}

// SetStayReservation gets a reference to the given StayReservationType and assigns it to the StayReservation field.
func (o *StayStatisticsRevenueType) SetStayReservation(v StayReservationType) {
	o.StayReservation = &v
}

func (o StayStatisticsRevenueType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StayStatisticsRevenueType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageDailyRate) {
		toSerialize["averageDailyRate"] = o.AverageDailyRate
	}
	if !IsNil(o.TotalRevenue) {
		toSerialize["totalRevenue"] = o.TotalRevenue
	}
	if !IsNil(o.RoomRevenue) {
		toSerialize["roomRevenue"] = o.RoomRevenue
	}
	if !IsNil(o.FBRevenue) {
		toSerialize["fBRevenue"] = o.FBRevenue
	}
	if !IsNil(o.ExtraRevenue) {
		toSerialize["extraRevenue"] = o.ExtraRevenue
	}
	if !IsNil(o.NonRevenue) {
		toSerialize["nonRevenue"] = o.NonRevenue
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.StayReservation) {
		toSerialize["stayReservation"] = o.StayReservation
	}
	return toSerialize, nil
}

type NullableStayStatisticsRevenueType struct {
	value *StayStatisticsRevenueType
	isSet bool
}

func (v NullableStayStatisticsRevenueType) Get() *StayStatisticsRevenueType {
	return v.value
}

func (v *NullableStayStatisticsRevenueType) Set(val *StayStatisticsRevenueType) {
	v.value = val
	v.isSet = true
}

func (v NullableStayStatisticsRevenueType) IsSet() bool {
	return v.isSet
}

func (v *NullableStayStatisticsRevenueType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStayStatisticsRevenueType(val *StayStatisticsRevenueType) *NullableStayStatisticsRevenueType {
	return &NullableStayStatisticsRevenueType{value: val, isSet: true}
}

func (v NullableStayStatisticsRevenueType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStayStatisticsRevenueType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


