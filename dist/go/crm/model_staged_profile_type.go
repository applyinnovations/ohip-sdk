/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the StagedProfileType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StagedProfileType{}

// StagedProfileType Detailed information about the staged profile.
type StagedProfileType struct {
	// Collection of detailed information about address for the staged profile.
	Addresses []StagedProfileAddressType `json:"addresses,omitempty"`
	// List of Notes for the customer.
	Comments []StagedProfileCommentInfoType `json:"comments,omitempty"`
	Company *StagedProfileCompanyType `json:"company,omitempty"`
	Customer *StagedProfileCustomerType `json:"customer,omitempty"`
	// Collection of detailed information about email for the staged profile.
	Emails []StagedProfileEmailType `json:"emails,omitempty"`
	// Hotel code that the staged profile belongs to.
	HotelId *string `json:"hotelId,omitempty"`
	// Collection of detailed information about identification for the staged profile.
	Identifications []StagedProfileIdentificationsType `json:"identifications,omitempty"`
	// The date on which the staged profile has been received.
	ImportDate *string `json:"importDate,omitempty"`
	// Collection of detailed information about keyword for the staged profile.
	Keywords []StagedProfileKeywordType `json:"keywords,omitempty"`
	MailingActions *MailingActionsType `json:"mailingActions,omitempty"`
	// Collection of detailed information about memberships for the staged profile.
	Memberships []StagedProfileMembershipType `json:"memberships,omitempty"`
	// Collection of detailed information about negotiated rates for the staged profile.
	NegotiatedRates []StagedProfileNegotiatedRateType `json:"negotiatedRates,omitempty"`
	// Collection of detailed information about preferences for the staged profile.
	Preferences []StagedProfilePreferenceType `json:"preferences,omitempty"`
	PrivacyInfo *PrivacyInfoType `json:"privacyInfo,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	// Type of the staged profile.
	ProfileType *string `json:"profileType,omitempty"`
	// Collection of routing instructions for the staged profile.
	RoutingInstructions []StagedProfileRoutingInstructionType `json:"routingInstructions,omitempty"`
	// The status of the staged profile.
	StageStatus *string `json:"stageStatus,omitempty"`
	// Collection of detailed information about telephone/fax for the staged profile.
	Telephones []StagedProfilePhoneType `json:"telephones,omitempty"`
	// Collection of detailed information about web url/address for the staged profile.
	URLs []StagedProfileURLType `json:"uRLs,omitempty"`
	UserDefinedFields *StagedProfileUserDefinedFieldsType `json:"userDefinedFields,omitempty"`
}

// NewStagedProfileType instantiates a new StagedProfileType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStagedProfileType() *StagedProfileType {
	this := StagedProfileType{}
	return &this
}

// NewStagedProfileTypeWithDefaults instantiates a new StagedProfileType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStagedProfileTypeWithDefaults() *StagedProfileType {
	this := StagedProfileType{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *StagedProfileType) GetAddresses() []StagedProfileAddressType {
	if o == nil || IsNil(o.Addresses) {
		var ret []StagedProfileAddressType
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetAddressesOk() ([]StagedProfileAddressType, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *StagedProfileType) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []StagedProfileAddressType and assigns it to the Addresses field.
func (o *StagedProfileType) SetAddresses(v []StagedProfileAddressType) {
	o.Addresses = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *StagedProfileType) GetComments() []StagedProfileCommentInfoType {
	if o == nil || IsNil(o.Comments) {
		var ret []StagedProfileCommentInfoType
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetCommentsOk() ([]StagedProfileCommentInfoType, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *StagedProfileType) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []StagedProfileCommentInfoType and assigns it to the Comments field.
func (o *StagedProfileType) SetComments(v []StagedProfileCommentInfoType) {
	o.Comments = v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *StagedProfileType) GetCompany() StagedProfileCompanyType {
	if o == nil || IsNil(o.Company) {
		var ret StagedProfileCompanyType
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetCompanyOk() (*StagedProfileCompanyType, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *StagedProfileType) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given StagedProfileCompanyType and assigns it to the Company field.
func (o *StagedProfileType) SetCompany(v StagedProfileCompanyType) {
	o.Company = &v
}

// GetCustomer returns the Customer field value if set, zero value otherwise.
func (o *StagedProfileType) GetCustomer() StagedProfileCustomerType {
	if o == nil || IsNil(o.Customer) {
		var ret StagedProfileCustomerType
		return ret
	}
	return *o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetCustomerOk() (*StagedProfileCustomerType, bool) {
	if o == nil || IsNil(o.Customer) {
		return nil, false
	}
	return o.Customer, true
}

// HasCustomer returns a boolean if a field has been set.
func (o *StagedProfileType) HasCustomer() bool {
	if o != nil && !IsNil(o.Customer) {
		return true
	}

	return false
}

// SetCustomer gets a reference to the given StagedProfileCustomerType and assigns it to the Customer field.
func (o *StagedProfileType) SetCustomer(v StagedProfileCustomerType) {
	o.Customer = &v
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *StagedProfileType) GetEmails() []StagedProfileEmailType {
	if o == nil || IsNil(o.Emails) {
		var ret []StagedProfileEmailType
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetEmailsOk() ([]StagedProfileEmailType, bool) {
	if o == nil || IsNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *StagedProfileType) HasEmails() bool {
	if o != nil && !IsNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []StagedProfileEmailType and assigns it to the Emails field.
func (o *StagedProfileType) SetEmails(v []StagedProfileEmailType) {
	o.Emails = v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *StagedProfileType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *StagedProfileType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *StagedProfileType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetIdentifications returns the Identifications field value if set, zero value otherwise.
func (o *StagedProfileType) GetIdentifications() []StagedProfileIdentificationsType {
	if o == nil || IsNil(o.Identifications) {
		var ret []StagedProfileIdentificationsType
		return ret
	}
	return o.Identifications
}

// GetIdentificationsOk returns a tuple with the Identifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetIdentificationsOk() ([]StagedProfileIdentificationsType, bool) {
	if o == nil || IsNil(o.Identifications) {
		return nil, false
	}
	return o.Identifications, true
}

// HasIdentifications returns a boolean if a field has been set.
func (o *StagedProfileType) HasIdentifications() bool {
	if o != nil && !IsNil(o.Identifications) {
		return true
	}

	return false
}

// SetIdentifications gets a reference to the given []StagedProfileIdentificationsType and assigns it to the Identifications field.
func (o *StagedProfileType) SetIdentifications(v []StagedProfileIdentificationsType) {
	o.Identifications = v
}

// GetImportDate returns the ImportDate field value if set, zero value otherwise.
func (o *StagedProfileType) GetImportDate() string {
	if o == nil || IsNil(o.ImportDate) {
		var ret string
		return ret
	}
	return *o.ImportDate
}

// GetImportDateOk returns a tuple with the ImportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetImportDateOk() (*string, bool) {
	if o == nil || IsNil(o.ImportDate) {
		return nil, false
	}
	return o.ImportDate, true
}

// HasImportDate returns a boolean if a field has been set.
func (o *StagedProfileType) HasImportDate() bool {
	if o != nil && !IsNil(o.ImportDate) {
		return true
	}

	return false
}

// SetImportDate gets a reference to the given string and assigns it to the ImportDate field.
func (o *StagedProfileType) SetImportDate(v string) {
	o.ImportDate = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *StagedProfileType) GetKeywords() []StagedProfileKeywordType {
	if o == nil || IsNil(o.Keywords) {
		var ret []StagedProfileKeywordType
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetKeywordsOk() ([]StagedProfileKeywordType, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *StagedProfileType) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []StagedProfileKeywordType and assigns it to the Keywords field.
func (o *StagedProfileType) SetKeywords(v []StagedProfileKeywordType) {
	o.Keywords = v
}

// GetMailingActions returns the MailingActions field value if set, zero value otherwise.
func (o *StagedProfileType) GetMailingActions() MailingActionsType {
	if o == nil || IsNil(o.MailingActions) {
		var ret MailingActionsType
		return ret
	}
	return *o.MailingActions
}

// GetMailingActionsOk returns a tuple with the MailingActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetMailingActionsOk() (*MailingActionsType, bool) {
	if o == nil || IsNil(o.MailingActions) {
		return nil, false
	}
	return o.MailingActions, true
}

// HasMailingActions returns a boolean if a field has been set.
func (o *StagedProfileType) HasMailingActions() bool {
	if o != nil && !IsNil(o.MailingActions) {
		return true
	}

	return false
}

// SetMailingActions gets a reference to the given MailingActionsType and assigns it to the MailingActions field.
func (o *StagedProfileType) SetMailingActions(v MailingActionsType) {
	o.MailingActions = &v
}

// GetMemberships returns the Memberships field value if set, zero value otherwise.
func (o *StagedProfileType) GetMemberships() []StagedProfileMembershipType {
	if o == nil || IsNil(o.Memberships) {
		var ret []StagedProfileMembershipType
		return ret
	}
	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetMembershipsOk() ([]StagedProfileMembershipType, bool) {
	if o == nil || IsNil(o.Memberships) {
		return nil, false
	}
	return o.Memberships, true
}

// HasMemberships returns a boolean if a field has been set.
func (o *StagedProfileType) HasMemberships() bool {
	if o != nil && !IsNil(o.Memberships) {
		return true
	}

	return false
}

// SetMemberships gets a reference to the given []StagedProfileMembershipType and assigns it to the Memberships field.
func (o *StagedProfileType) SetMemberships(v []StagedProfileMembershipType) {
	o.Memberships = v
}

// GetNegotiatedRates returns the NegotiatedRates field value if set, zero value otherwise.
func (o *StagedProfileType) GetNegotiatedRates() []StagedProfileNegotiatedRateType {
	if o == nil || IsNil(o.NegotiatedRates) {
		var ret []StagedProfileNegotiatedRateType
		return ret
	}
	return o.NegotiatedRates
}

// GetNegotiatedRatesOk returns a tuple with the NegotiatedRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetNegotiatedRatesOk() ([]StagedProfileNegotiatedRateType, bool) {
	if o == nil || IsNil(o.NegotiatedRates) {
		return nil, false
	}
	return o.NegotiatedRates, true
}

// HasNegotiatedRates returns a boolean if a field has been set.
func (o *StagedProfileType) HasNegotiatedRates() bool {
	if o != nil && !IsNil(o.NegotiatedRates) {
		return true
	}

	return false
}

// SetNegotiatedRates gets a reference to the given []StagedProfileNegotiatedRateType and assigns it to the NegotiatedRates field.
func (o *StagedProfileType) SetNegotiatedRates(v []StagedProfileNegotiatedRateType) {
	o.NegotiatedRates = v
}

// GetPreferences returns the Preferences field value if set, zero value otherwise.
func (o *StagedProfileType) GetPreferences() []StagedProfilePreferenceType {
	if o == nil || IsNil(o.Preferences) {
		var ret []StagedProfilePreferenceType
		return ret
	}
	return o.Preferences
}

// GetPreferencesOk returns a tuple with the Preferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetPreferencesOk() ([]StagedProfilePreferenceType, bool) {
	if o == nil || IsNil(o.Preferences) {
		return nil, false
	}
	return o.Preferences, true
}

// HasPreferences returns a boolean if a field has been set.
func (o *StagedProfileType) HasPreferences() bool {
	if o != nil && !IsNil(o.Preferences) {
		return true
	}

	return false
}

// SetPreferences gets a reference to the given []StagedProfilePreferenceType and assigns it to the Preferences field.
func (o *StagedProfileType) SetPreferences(v []StagedProfilePreferenceType) {
	o.Preferences = v
}

// GetPrivacyInfo returns the PrivacyInfo field value if set, zero value otherwise.
func (o *StagedProfileType) GetPrivacyInfo() PrivacyInfoType {
	if o == nil || IsNil(o.PrivacyInfo) {
		var ret PrivacyInfoType
		return ret
	}
	return *o.PrivacyInfo
}

// GetPrivacyInfoOk returns a tuple with the PrivacyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetPrivacyInfoOk() (*PrivacyInfoType, bool) {
	if o == nil || IsNil(o.PrivacyInfo) {
		return nil, false
	}
	return o.PrivacyInfo, true
}

// HasPrivacyInfo returns a boolean if a field has been set.
func (o *StagedProfileType) HasPrivacyInfo() bool {
	if o != nil && !IsNil(o.PrivacyInfo) {
		return true
	}

	return false
}

// SetPrivacyInfo gets a reference to the given PrivacyInfoType and assigns it to the PrivacyInfo field.
func (o *StagedProfileType) SetPrivacyInfo(v PrivacyInfoType) {
	o.PrivacyInfo = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *StagedProfileType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *StagedProfileType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *StagedProfileType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetProfileType returns the ProfileType field value if set, zero value otherwise.
func (o *StagedProfileType) GetProfileType() string {
	if o == nil || IsNil(o.ProfileType) {
		var ret string
		return ret
	}
	return *o.ProfileType
}

// GetProfileTypeOk returns a tuple with the ProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetProfileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileType) {
		return nil, false
	}
	return o.ProfileType, true
}

// HasProfileType returns a boolean if a field has been set.
func (o *StagedProfileType) HasProfileType() bool {
	if o != nil && !IsNil(o.ProfileType) {
		return true
	}

	return false
}

// SetProfileType gets a reference to the given string and assigns it to the ProfileType field.
func (o *StagedProfileType) SetProfileType(v string) {
	o.ProfileType = &v
}

// GetRoutingInstructions returns the RoutingInstructions field value if set, zero value otherwise.
func (o *StagedProfileType) GetRoutingInstructions() []StagedProfileRoutingInstructionType {
	if o == nil || IsNil(o.RoutingInstructions) {
		var ret []StagedProfileRoutingInstructionType
		return ret
	}
	return o.RoutingInstructions
}

// GetRoutingInstructionsOk returns a tuple with the RoutingInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetRoutingInstructionsOk() ([]StagedProfileRoutingInstructionType, bool) {
	if o == nil || IsNil(o.RoutingInstructions) {
		return nil, false
	}
	return o.RoutingInstructions, true
}

// HasRoutingInstructions returns a boolean if a field has been set.
func (o *StagedProfileType) HasRoutingInstructions() bool {
	if o != nil && !IsNil(o.RoutingInstructions) {
		return true
	}

	return false
}

// SetRoutingInstructions gets a reference to the given []StagedProfileRoutingInstructionType and assigns it to the RoutingInstructions field.
func (o *StagedProfileType) SetRoutingInstructions(v []StagedProfileRoutingInstructionType) {
	o.RoutingInstructions = v
}

// GetStageStatus returns the StageStatus field value if set, zero value otherwise.
func (o *StagedProfileType) GetStageStatus() string {
	if o == nil || IsNil(o.StageStatus) {
		var ret string
		return ret
	}
	return *o.StageStatus
}

// GetStageStatusOk returns a tuple with the StageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetStageStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StageStatus) {
		return nil, false
	}
	return o.StageStatus, true
}

// HasStageStatus returns a boolean if a field has been set.
func (o *StagedProfileType) HasStageStatus() bool {
	if o != nil && !IsNil(o.StageStatus) {
		return true
	}

	return false
}

// SetStageStatus gets a reference to the given string and assigns it to the StageStatus field.
func (o *StagedProfileType) SetStageStatus(v string) {
	o.StageStatus = &v
}

// GetTelephones returns the Telephones field value if set, zero value otherwise.
func (o *StagedProfileType) GetTelephones() []StagedProfilePhoneType {
	if o == nil || IsNil(o.Telephones) {
		var ret []StagedProfilePhoneType
		return ret
	}
	return o.Telephones
}

// GetTelephonesOk returns a tuple with the Telephones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetTelephonesOk() ([]StagedProfilePhoneType, bool) {
	if o == nil || IsNil(o.Telephones) {
		return nil, false
	}
	return o.Telephones, true
}

// HasTelephones returns a boolean if a field has been set.
func (o *StagedProfileType) HasTelephones() bool {
	if o != nil && !IsNil(o.Telephones) {
		return true
	}

	return false
}

// SetTelephones gets a reference to the given []StagedProfilePhoneType and assigns it to the Telephones field.
func (o *StagedProfileType) SetTelephones(v []StagedProfilePhoneType) {
	o.Telephones = v
}

// GetURLs returns the URLs field value if set, zero value otherwise.
func (o *StagedProfileType) GetURLs() []StagedProfileURLType {
	if o == nil || IsNil(o.URLs) {
		var ret []StagedProfileURLType
		return ret
	}
	return o.URLs
}

// GetURLsOk returns a tuple with the URLs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetURLsOk() ([]StagedProfileURLType, bool) {
	if o == nil || IsNil(o.URLs) {
		return nil, false
	}
	return o.URLs, true
}

// HasURLs returns a boolean if a field has been set.
func (o *StagedProfileType) HasURLs() bool {
	if o != nil && !IsNil(o.URLs) {
		return true
	}

	return false
}

// SetURLs gets a reference to the given []StagedProfileURLType and assigns it to the URLs field.
func (o *StagedProfileType) SetURLs(v []StagedProfileURLType) {
	o.URLs = v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *StagedProfileType) GetUserDefinedFields() StagedProfileUserDefinedFieldsType {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret StagedProfileUserDefinedFieldsType
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StagedProfileType) GetUserDefinedFieldsOk() (*StagedProfileUserDefinedFieldsType, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *StagedProfileType) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given StagedProfileUserDefinedFieldsType and assigns it to the UserDefinedFields field.
func (o *StagedProfileType) SetUserDefinedFields(v StagedProfileUserDefinedFieldsType) {
	o.UserDefinedFields = &v
}

func (o StagedProfileType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StagedProfileType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Customer) {
		toSerialize["customer"] = o.Customer
	}
	if !IsNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.Identifications) {
		toSerialize["identifications"] = o.Identifications
	}
	if !IsNil(o.ImportDate) {
		toSerialize["importDate"] = o.ImportDate
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.MailingActions) {
		toSerialize["mailingActions"] = o.MailingActions
	}
	if !IsNil(o.Memberships) {
		toSerialize["memberships"] = o.Memberships
	}
	if !IsNil(o.NegotiatedRates) {
		toSerialize["negotiatedRates"] = o.NegotiatedRates
	}
	if !IsNil(o.Preferences) {
		toSerialize["preferences"] = o.Preferences
	}
	if !IsNil(o.PrivacyInfo) {
		toSerialize["privacyInfo"] = o.PrivacyInfo
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.ProfileType) {
		toSerialize["profileType"] = o.ProfileType
	}
	if !IsNil(o.RoutingInstructions) {
		toSerialize["routingInstructions"] = o.RoutingInstructions
	}
	if !IsNil(o.StageStatus) {
		toSerialize["stageStatus"] = o.StageStatus
	}
	if !IsNil(o.Telephones) {
		toSerialize["telephones"] = o.Telephones
	}
	if !IsNil(o.URLs) {
		toSerialize["uRLs"] = o.URLs
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	return toSerialize, nil
}

type NullableStagedProfileType struct {
	value *StagedProfileType
	isSet bool
}

func (v NullableStagedProfileType) Get() *StagedProfileType {
	return v.value
}

func (v *NullableStagedProfileType) Set(val *StagedProfileType) {
	v.value = val
	v.isSet = true
}

func (v NullableStagedProfileType) IsSet() bool {
	return v.isSet
}

func (v *NullableStagedProfileType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStagedProfileType(val *StagedProfileType) *NullableStagedProfileType {
	return &NullableStagedProfileType{value: val, isSet: true}
}

func (v NullableStagedProfileType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStagedProfileType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


