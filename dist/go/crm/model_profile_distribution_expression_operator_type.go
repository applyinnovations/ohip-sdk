/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileDistributionExpressionOperatorType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDistributionExpressionOperatorType{}

// ProfileDistributionExpressionOperatorType struct for ProfileDistributionExpressionOperatorType
type ProfileDistributionExpressionOperatorType struct {
	OperatorName *string `json:"operatorName,omitempty"`
	OperatorDescription *string `json:"operatorDescription,omitempty"`
	ParameterSize *float32 `json:"parameterSize,omitempty"`
}

// NewProfileDistributionExpressionOperatorType instantiates a new ProfileDistributionExpressionOperatorType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDistributionExpressionOperatorType() *ProfileDistributionExpressionOperatorType {
	this := ProfileDistributionExpressionOperatorType{}
	return &this
}

// NewProfileDistributionExpressionOperatorTypeWithDefaults instantiates a new ProfileDistributionExpressionOperatorType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDistributionExpressionOperatorTypeWithDefaults() *ProfileDistributionExpressionOperatorType {
	this := ProfileDistributionExpressionOperatorType{}
	return &this
}

// GetOperatorName returns the OperatorName field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionOperatorType) GetOperatorName() string {
	if o == nil || IsNil(o.OperatorName) {
		var ret string
		return ret
	}
	return *o.OperatorName
}

// GetOperatorNameOk returns a tuple with the OperatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionOperatorType) GetOperatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorName) {
		return nil, false
	}
	return o.OperatorName, true
}

// HasOperatorName returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionOperatorType) HasOperatorName() bool {
	if o != nil && !IsNil(o.OperatorName) {
		return true
	}

	return false
}

// SetOperatorName gets a reference to the given string and assigns it to the OperatorName field.
func (o *ProfileDistributionExpressionOperatorType) SetOperatorName(v string) {
	o.OperatorName = &v
}

// GetOperatorDescription returns the OperatorDescription field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionOperatorType) GetOperatorDescription() string {
	if o == nil || IsNil(o.OperatorDescription) {
		var ret string
		return ret
	}
	return *o.OperatorDescription
}

// GetOperatorDescriptionOk returns a tuple with the OperatorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionOperatorType) GetOperatorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.OperatorDescription) {
		return nil, false
	}
	return o.OperatorDescription, true
}

// HasOperatorDescription returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionOperatorType) HasOperatorDescription() bool {
	if o != nil && !IsNil(o.OperatorDescription) {
		return true
	}

	return false
}

// SetOperatorDescription gets a reference to the given string and assigns it to the OperatorDescription field.
func (o *ProfileDistributionExpressionOperatorType) SetOperatorDescription(v string) {
	o.OperatorDescription = &v
}

// GetParameterSize returns the ParameterSize field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionOperatorType) GetParameterSize() float32 {
	if o == nil || IsNil(o.ParameterSize) {
		var ret float32
		return ret
	}
	return *o.ParameterSize
}

// GetParameterSizeOk returns a tuple with the ParameterSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionOperatorType) GetParameterSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.ParameterSize) {
		return nil, false
	}
	return o.ParameterSize, true
}

// HasParameterSize returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionOperatorType) HasParameterSize() bool {
	if o != nil && !IsNil(o.ParameterSize) {
		return true
	}

	return false
}

// SetParameterSize gets a reference to the given float32 and assigns it to the ParameterSize field.
func (o *ProfileDistributionExpressionOperatorType) SetParameterSize(v float32) {
	o.ParameterSize = &v
}

func (o ProfileDistributionExpressionOperatorType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDistributionExpressionOperatorType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperatorName) {
		toSerialize["operatorName"] = o.OperatorName
	}
	if !IsNil(o.OperatorDescription) {
		toSerialize["operatorDescription"] = o.OperatorDescription
	}
	if !IsNil(o.ParameterSize) {
		toSerialize["parameterSize"] = o.ParameterSize
	}
	return toSerialize, nil
}

type NullableProfileDistributionExpressionOperatorType struct {
	value *ProfileDistributionExpressionOperatorType
	isSet bool
}

func (v NullableProfileDistributionExpressionOperatorType) Get() *ProfileDistributionExpressionOperatorType {
	return v.value
}

func (v *NullableProfileDistributionExpressionOperatorType) Set(val *ProfileDistributionExpressionOperatorType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDistributionExpressionOperatorType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDistributionExpressionOperatorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDistributionExpressionOperatorType(val *ProfileDistributionExpressionOperatorType) *NullableProfileDistributionExpressionOperatorType {
	return &NullableProfileDistributionExpressionOperatorType{value: val, isSet: true}
}

func (v NullableProfileDistributionExpressionOperatorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDistributionExpressionOperatorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


