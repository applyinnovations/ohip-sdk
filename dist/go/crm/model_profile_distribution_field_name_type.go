/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileDistributionFieldNameType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDistributionFieldNameType{}

// ProfileDistributionFieldNameType struct for ProfileDistributionFieldNameType
type ProfileDistributionFieldNameType struct {
	Field *FieldType `json:"field,omitempty"`
}

// NewProfileDistributionFieldNameType instantiates a new ProfileDistributionFieldNameType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDistributionFieldNameType() *ProfileDistributionFieldNameType {
	this := ProfileDistributionFieldNameType{}
	return &this
}

// NewProfileDistributionFieldNameTypeWithDefaults instantiates a new ProfileDistributionFieldNameType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDistributionFieldNameTypeWithDefaults() *ProfileDistributionFieldNameType {
	this := ProfileDistributionFieldNameType{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ProfileDistributionFieldNameType) GetField() FieldType {
	if o == nil || IsNil(o.Field) {
		var ret FieldType
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionFieldNameType) GetFieldOk() (*FieldType, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ProfileDistributionFieldNameType) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given FieldType and assigns it to the Field field.
func (o *ProfileDistributionFieldNameType) SetField(v FieldType) {
	o.Field = &v
}

func (o ProfileDistributionFieldNameType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDistributionFieldNameType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	return toSerialize, nil
}

type NullableProfileDistributionFieldNameType struct {
	value *ProfileDistributionFieldNameType
	isSet bool
}

func (v NullableProfileDistributionFieldNameType) Get() *ProfileDistributionFieldNameType {
	return v.value
}

func (v *NullableProfileDistributionFieldNameType) Set(val *ProfileDistributionFieldNameType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDistributionFieldNameType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDistributionFieldNameType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDistributionFieldNameType(val *ProfileDistributionFieldNameType) *NullableProfileDistributionFieldNameType {
	return &NullableProfileDistributionFieldNameType{value: val, isSet: true}
}

func (v NullableProfileDistributionFieldNameType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDistributionFieldNameType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


