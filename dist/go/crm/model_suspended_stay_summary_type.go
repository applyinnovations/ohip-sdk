/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the SuspendedStaySummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuspendedStaySummaryType{}

// SuspendedStaySummaryType Collection of Suspended Stay information.
type SuspendedStaySummaryType struct {
	// Suspended Stay Record ID.
	SuspendedStayRecordId *string `json:"suspendedStayRecordId,omitempty"`
	// Hotel code of the reservation.
	HotelId *string `json:"hotelId,omitempty"`
	// Reservation status.
	ReservationStatus *string `json:"reservationStatus,omitempty"`
	// External Confirmation number of the reservation on PMS side.
	ExternalConfirmationNo *string `json:"externalConfirmationNo,omitempty"`
	// Unique Id that references an object uniquely in the system.
	ProfileIdList []UniqueIDType `json:"profileIdList,omitempty"`
	// Date of arrival.
	ArrivalDate *string `json:"arrivalDate,omitempty"`
	// Date of departure.
	DepartureDate *string `json:"departureDate,omitempty"`
	// Status of the stay.
	StayStatus *string `json:"stayStatus,omitempty"`
}

// NewSuspendedStaySummaryType instantiates a new SuspendedStaySummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuspendedStaySummaryType() *SuspendedStaySummaryType {
	this := SuspendedStaySummaryType{}
	return &this
}

// NewSuspendedStaySummaryTypeWithDefaults instantiates a new SuspendedStaySummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuspendedStaySummaryTypeWithDefaults() *SuspendedStaySummaryType {
	this := SuspendedStaySummaryType{}
	return &this
}

// GetSuspendedStayRecordId returns the SuspendedStayRecordId field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetSuspendedStayRecordId() string {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		var ret string
		return ret
	}
	return *o.SuspendedStayRecordId
}

// GetSuspendedStayRecordIdOk returns a tuple with the SuspendedStayRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetSuspendedStayRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuspendedStayRecordId) {
		return nil, false
	}
	return o.SuspendedStayRecordId, true
}

// HasSuspendedStayRecordId returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasSuspendedStayRecordId() bool {
	if o != nil && !IsNil(o.SuspendedStayRecordId) {
		return true
	}

	return false
}

// SetSuspendedStayRecordId gets a reference to the given string and assigns it to the SuspendedStayRecordId field.
func (o *SuspendedStaySummaryType) SetSuspendedStayRecordId(v string) {
	o.SuspendedStayRecordId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *SuspendedStaySummaryType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetReservationStatus() string {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret string
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given string and assigns it to the ReservationStatus field.
func (o *SuspendedStaySummaryType) SetReservationStatus(v string) {
	o.ReservationStatus = &v
}

// GetExternalConfirmationNo returns the ExternalConfirmationNo field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetExternalConfirmationNo() string {
	if o == nil || IsNil(o.ExternalConfirmationNo) {
		var ret string
		return ret
	}
	return *o.ExternalConfirmationNo
}

// GetExternalConfirmationNoOk returns a tuple with the ExternalConfirmationNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetExternalConfirmationNoOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalConfirmationNo) {
		return nil, false
	}
	return o.ExternalConfirmationNo, true
}

// HasExternalConfirmationNo returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasExternalConfirmationNo() bool {
	if o != nil && !IsNil(o.ExternalConfirmationNo) {
		return true
	}

	return false
}

// SetExternalConfirmationNo gets a reference to the given string and assigns it to the ExternalConfirmationNo field.
func (o *SuspendedStaySummaryType) SetExternalConfirmationNo(v string) {
	o.ExternalConfirmationNo = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetProfileIdList() []UniqueIDType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret []UniqueIDType
		return ret
	}
	return o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetProfileIdListOk() ([]UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given []UniqueIDType and assigns it to the ProfileIdList field.
func (o *SuspendedStaySummaryType) SetProfileIdList(v []UniqueIDType) {
	o.ProfileIdList = v
}

// GetArrivalDate returns the ArrivalDate field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetArrivalDate() string {
	if o == nil || IsNil(o.ArrivalDate) {
		var ret string
		return ret
	}
	return *o.ArrivalDate
}

// GetArrivalDateOk returns a tuple with the ArrivalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetArrivalDateOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalDate) {
		return nil, false
	}
	return o.ArrivalDate, true
}

// HasArrivalDate returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasArrivalDate() bool {
	if o != nil && !IsNil(o.ArrivalDate) {
		return true
	}

	return false
}

// SetArrivalDate gets a reference to the given string and assigns it to the ArrivalDate field.
func (o *SuspendedStaySummaryType) SetArrivalDate(v string) {
	o.ArrivalDate = &v
}

// GetDepartureDate returns the DepartureDate field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetDepartureDate() string {
	if o == nil || IsNil(o.DepartureDate) {
		var ret string
		return ret
	}
	return *o.DepartureDate
}

// GetDepartureDateOk returns a tuple with the DepartureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetDepartureDateOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureDate) {
		return nil, false
	}
	return o.DepartureDate, true
}

// HasDepartureDate returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasDepartureDate() bool {
	if o != nil && !IsNil(o.DepartureDate) {
		return true
	}

	return false
}

// SetDepartureDate gets a reference to the given string and assigns it to the DepartureDate field.
func (o *SuspendedStaySummaryType) SetDepartureDate(v string) {
	o.DepartureDate = &v
}

// GetStayStatus returns the StayStatus field value if set, zero value otherwise.
func (o *SuspendedStaySummaryType) GetStayStatus() string {
	if o == nil || IsNil(o.StayStatus) {
		var ret string
		return ret
	}
	return *o.StayStatus
}

// GetStayStatusOk returns a tuple with the StayStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuspendedStaySummaryType) GetStayStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StayStatus) {
		return nil, false
	}
	return o.StayStatus, true
}

// HasStayStatus returns a boolean if a field has been set.
func (o *SuspendedStaySummaryType) HasStayStatus() bool {
	if o != nil && !IsNil(o.StayStatus) {
		return true
	}

	return false
}

// SetStayStatus gets a reference to the given string and assigns it to the StayStatus field.
func (o *SuspendedStaySummaryType) SetStayStatus(v string) {
	o.StayStatus = &v
}

func (o SuspendedStaySummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuspendedStaySummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SuspendedStayRecordId) {
		toSerialize["suspendedStayRecordId"] = o.SuspendedStayRecordId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.ExternalConfirmationNo) {
		toSerialize["externalConfirmationNo"] = o.ExternalConfirmationNo
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	if !IsNil(o.ArrivalDate) {
		toSerialize["arrivalDate"] = o.ArrivalDate
	}
	if !IsNil(o.DepartureDate) {
		toSerialize["departureDate"] = o.DepartureDate
	}
	if !IsNil(o.StayStatus) {
		toSerialize["stayStatus"] = o.StayStatus
	}
	return toSerialize, nil
}

type NullableSuspendedStaySummaryType struct {
	value *SuspendedStaySummaryType
	isSet bool
}

func (v NullableSuspendedStaySummaryType) Get() *SuspendedStaySummaryType {
	return v.value
}

func (v *NullableSuspendedStaySummaryType) Set(val *SuspendedStaySummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableSuspendedStaySummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableSuspendedStaySummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuspendedStaySummaryType(val *SuspendedStaySummaryType) *NullableSuspendedStaySummaryType {
	return &NullableSuspendedStaySummaryType{value: val, isSet: true}
}

func (v NullableSuspendedStaySummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuspendedStaySummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


