/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality-integrations_ww@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ClaimAdjustmentPointsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClaimAdjustmentPointsType{}

// ClaimAdjustmentPointsType Summary of membership claim award points and tier points.
type ClaimAdjustmentPointsType struct {
	// The selected adjustment code's Award, Stay, Nights, and Revenue thresholds will display.
	AdjustmentCode *string `json:"adjustmentCode,omitempty"`
	// Base award points for adjustment.
	AwardBasePoints *int32 `json:"awardBasePoints,omitempty"`
	// Bonus award points for adjustment.
	AwardBonusPoints *int32 `json:"awardBonusPoints,omitempty"`
	// Miscellaneous award points for adjustment.
	AwardMiscPoints *int32 `json:"awardMiscPoints,omitempty"`
	// Total award points for adjustment.
	AwardTotalPoints *int32 `json:"awardTotalPoints,omitempty"`
	// Base nights limits for adjustment.
	BaseNightsLimits *string `json:"baseNightsLimits,omitempty"`
	// Base revenue limits for adjustment.
	BaseRevenueLimits *string `json:"baseRevenueLimits,omitempty"`
	// Base stay limits for adjustment.
	BaseStayLimits *string `json:"baseStayLimits,omitempty"`
	// Tier base nights points for adjustment.
	TierBaseNightsPoints *int32 `json:"tierBaseNightsPoints,omitempty"`
	// Tier Base revenue points for adjustment.
	TierBaseRevenuePoints *int32 `json:"tierBaseRevenuePoints,omitempty"`
	// Tier base stay points for adjustment.
	TierBaseStayPoints *int32 `json:"tierBaseStayPoints,omitempty"`
	// Tier bonus nights points for adjustment.
	TierBonusNightsPoints *int32 `json:"tierBonusNightsPoints,omitempty"`
	// Tier Bonus revenue points for adjustment.
	TierBonusRevenuePoints *int32 `json:"tierBonusRevenuePoints,omitempty"`
	// Tier bonus stay points for adjustment.
	TierBonusStayPoints *int32 `json:"tierBonusStayPoints,omitempty"`
	// Tier total nights points for adjustment.
	TierTotalNightsPoints *int32 `json:"tierTotalNightsPoints,omitempty"`
	// Tier Total tier revenue points for adjustment.
	TierTotalRevenuePoints *int32 `json:"tierTotalRevenuePoints,omitempty"`
	// Tier total stay points for adjustment.
	TierTotalStayPoints *int32 `json:"tierTotalStayPoints,omitempty"`
	// Total base points limits for adjustment.
	TotalBasePointsLimits *string `json:"totalBasePointsLimits,omitempty"`
}

// NewClaimAdjustmentPointsType instantiates a new ClaimAdjustmentPointsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClaimAdjustmentPointsType() *ClaimAdjustmentPointsType {
	this := ClaimAdjustmentPointsType{}
	return &this
}

// NewClaimAdjustmentPointsTypeWithDefaults instantiates a new ClaimAdjustmentPointsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClaimAdjustmentPointsTypeWithDefaults() *ClaimAdjustmentPointsType {
	this := ClaimAdjustmentPointsType{}
	return &this
}

// GetAdjustmentCode returns the AdjustmentCode field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetAdjustmentCode() string {
	if o == nil || IsNil(o.AdjustmentCode) {
		var ret string
		return ret
	}
	return *o.AdjustmentCode
}

// GetAdjustmentCodeOk returns a tuple with the AdjustmentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetAdjustmentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustmentCode) {
		return nil, false
	}
	return o.AdjustmentCode, true
}

// HasAdjustmentCode returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasAdjustmentCode() bool {
	if o != nil && !IsNil(o.AdjustmentCode) {
		return true
	}

	return false
}

// SetAdjustmentCode gets a reference to the given string and assigns it to the AdjustmentCode field.
func (o *ClaimAdjustmentPointsType) SetAdjustmentCode(v string) {
	o.AdjustmentCode = &v
}

// GetAwardBasePoints returns the AwardBasePoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetAwardBasePoints() int32 {
	if o == nil || IsNil(o.AwardBasePoints) {
		var ret int32
		return ret
	}
	return *o.AwardBasePoints
}

// GetAwardBasePointsOk returns a tuple with the AwardBasePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetAwardBasePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardBasePoints) {
		return nil, false
	}
	return o.AwardBasePoints, true
}

// HasAwardBasePoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasAwardBasePoints() bool {
	if o != nil && !IsNil(o.AwardBasePoints) {
		return true
	}

	return false
}

// SetAwardBasePoints gets a reference to the given int32 and assigns it to the AwardBasePoints field.
func (o *ClaimAdjustmentPointsType) SetAwardBasePoints(v int32) {
	o.AwardBasePoints = &v
}

// GetAwardBonusPoints returns the AwardBonusPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetAwardBonusPoints() int32 {
	if o == nil || IsNil(o.AwardBonusPoints) {
		var ret int32
		return ret
	}
	return *o.AwardBonusPoints
}

// GetAwardBonusPointsOk returns a tuple with the AwardBonusPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetAwardBonusPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardBonusPoints) {
		return nil, false
	}
	return o.AwardBonusPoints, true
}

// HasAwardBonusPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasAwardBonusPoints() bool {
	if o != nil && !IsNil(o.AwardBonusPoints) {
		return true
	}

	return false
}

// SetAwardBonusPoints gets a reference to the given int32 and assigns it to the AwardBonusPoints field.
func (o *ClaimAdjustmentPointsType) SetAwardBonusPoints(v int32) {
	o.AwardBonusPoints = &v
}

// GetAwardMiscPoints returns the AwardMiscPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetAwardMiscPoints() int32 {
	if o == nil || IsNil(o.AwardMiscPoints) {
		var ret int32
		return ret
	}
	return *o.AwardMiscPoints
}

// GetAwardMiscPointsOk returns a tuple with the AwardMiscPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetAwardMiscPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardMiscPoints) {
		return nil, false
	}
	return o.AwardMiscPoints, true
}

// HasAwardMiscPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasAwardMiscPoints() bool {
	if o != nil && !IsNil(o.AwardMiscPoints) {
		return true
	}

	return false
}

// SetAwardMiscPoints gets a reference to the given int32 and assigns it to the AwardMiscPoints field.
func (o *ClaimAdjustmentPointsType) SetAwardMiscPoints(v int32) {
	o.AwardMiscPoints = &v
}

// GetAwardTotalPoints returns the AwardTotalPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetAwardTotalPoints() int32 {
	if o == nil || IsNil(o.AwardTotalPoints) {
		var ret int32
		return ret
	}
	return *o.AwardTotalPoints
}

// GetAwardTotalPointsOk returns a tuple with the AwardTotalPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetAwardTotalPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardTotalPoints) {
		return nil, false
	}
	return o.AwardTotalPoints, true
}

// HasAwardTotalPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasAwardTotalPoints() bool {
	if o != nil && !IsNil(o.AwardTotalPoints) {
		return true
	}

	return false
}

// SetAwardTotalPoints gets a reference to the given int32 and assigns it to the AwardTotalPoints field.
func (o *ClaimAdjustmentPointsType) SetAwardTotalPoints(v int32) {
	o.AwardTotalPoints = &v
}

// GetBaseNightsLimits returns the BaseNightsLimits field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetBaseNightsLimits() string {
	if o == nil || IsNil(o.BaseNightsLimits) {
		var ret string
		return ret
	}
	return *o.BaseNightsLimits
}

// GetBaseNightsLimitsOk returns a tuple with the BaseNightsLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetBaseNightsLimitsOk() (*string, bool) {
	if o == nil || IsNil(o.BaseNightsLimits) {
		return nil, false
	}
	return o.BaseNightsLimits, true
}

// HasBaseNightsLimits returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasBaseNightsLimits() bool {
	if o != nil && !IsNil(o.BaseNightsLimits) {
		return true
	}

	return false
}

// SetBaseNightsLimits gets a reference to the given string and assigns it to the BaseNightsLimits field.
func (o *ClaimAdjustmentPointsType) SetBaseNightsLimits(v string) {
	o.BaseNightsLimits = &v
}

// GetBaseRevenueLimits returns the BaseRevenueLimits field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetBaseRevenueLimits() string {
	if o == nil || IsNil(o.BaseRevenueLimits) {
		var ret string
		return ret
	}
	return *o.BaseRevenueLimits
}

// GetBaseRevenueLimitsOk returns a tuple with the BaseRevenueLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetBaseRevenueLimitsOk() (*string, bool) {
	if o == nil || IsNil(o.BaseRevenueLimits) {
		return nil, false
	}
	return o.BaseRevenueLimits, true
}

// HasBaseRevenueLimits returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasBaseRevenueLimits() bool {
	if o != nil && !IsNil(o.BaseRevenueLimits) {
		return true
	}

	return false
}

// SetBaseRevenueLimits gets a reference to the given string and assigns it to the BaseRevenueLimits field.
func (o *ClaimAdjustmentPointsType) SetBaseRevenueLimits(v string) {
	o.BaseRevenueLimits = &v
}

// GetBaseStayLimits returns the BaseStayLimits field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetBaseStayLimits() string {
	if o == nil || IsNil(o.BaseStayLimits) {
		var ret string
		return ret
	}
	return *o.BaseStayLimits
}

// GetBaseStayLimitsOk returns a tuple with the BaseStayLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetBaseStayLimitsOk() (*string, bool) {
	if o == nil || IsNil(o.BaseStayLimits) {
		return nil, false
	}
	return o.BaseStayLimits, true
}

// HasBaseStayLimits returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasBaseStayLimits() bool {
	if o != nil && !IsNil(o.BaseStayLimits) {
		return true
	}

	return false
}

// SetBaseStayLimits gets a reference to the given string and assigns it to the BaseStayLimits field.
func (o *ClaimAdjustmentPointsType) SetBaseStayLimits(v string) {
	o.BaseStayLimits = &v
}

// GetTierBaseNightsPoints returns the TierBaseNightsPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBaseNightsPoints() int32 {
	if o == nil || IsNil(o.TierBaseNightsPoints) {
		var ret int32
		return ret
	}
	return *o.TierBaseNightsPoints
}

// GetTierBaseNightsPointsOk returns a tuple with the TierBaseNightsPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBaseNightsPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBaseNightsPoints) {
		return nil, false
	}
	return o.TierBaseNightsPoints, true
}

// HasTierBaseNightsPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBaseNightsPoints() bool {
	if o != nil && !IsNil(o.TierBaseNightsPoints) {
		return true
	}

	return false
}

// SetTierBaseNightsPoints gets a reference to the given int32 and assigns it to the TierBaseNightsPoints field.
func (o *ClaimAdjustmentPointsType) SetTierBaseNightsPoints(v int32) {
	o.TierBaseNightsPoints = &v
}

// GetTierBaseRevenuePoints returns the TierBaseRevenuePoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBaseRevenuePoints() int32 {
	if o == nil || IsNil(o.TierBaseRevenuePoints) {
		var ret int32
		return ret
	}
	return *o.TierBaseRevenuePoints
}

// GetTierBaseRevenuePointsOk returns a tuple with the TierBaseRevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBaseRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBaseRevenuePoints) {
		return nil, false
	}
	return o.TierBaseRevenuePoints, true
}

// HasTierBaseRevenuePoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBaseRevenuePoints() bool {
	if o != nil && !IsNil(o.TierBaseRevenuePoints) {
		return true
	}

	return false
}

// SetTierBaseRevenuePoints gets a reference to the given int32 and assigns it to the TierBaseRevenuePoints field.
func (o *ClaimAdjustmentPointsType) SetTierBaseRevenuePoints(v int32) {
	o.TierBaseRevenuePoints = &v
}

// GetTierBaseStayPoints returns the TierBaseStayPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBaseStayPoints() int32 {
	if o == nil || IsNil(o.TierBaseStayPoints) {
		var ret int32
		return ret
	}
	return *o.TierBaseStayPoints
}

// GetTierBaseStayPointsOk returns a tuple with the TierBaseStayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBaseStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBaseStayPoints) {
		return nil, false
	}
	return o.TierBaseStayPoints, true
}

// HasTierBaseStayPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBaseStayPoints() bool {
	if o != nil && !IsNil(o.TierBaseStayPoints) {
		return true
	}

	return false
}

// SetTierBaseStayPoints gets a reference to the given int32 and assigns it to the TierBaseStayPoints field.
func (o *ClaimAdjustmentPointsType) SetTierBaseStayPoints(v int32) {
	o.TierBaseStayPoints = &v
}

// GetTierBonusNightsPoints returns the TierBonusNightsPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBonusNightsPoints() int32 {
	if o == nil || IsNil(o.TierBonusNightsPoints) {
		var ret int32
		return ret
	}
	return *o.TierBonusNightsPoints
}

// GetTierBonusNightsPointsOk returns a tuple with the TierBonusNightsPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBonusNightsPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBonusNightsPoints) {
		return nil, false
	}
	return o.TierBonusNightsPoints, true
}

// HasTierBonusNightsPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBonusNightsPoints() bool {
	if o != nil && !IsNil(o.TierBonusNightsPoints) {
		return true
	}

	return false
}

// SetTierBonusNightsPoints gets a reference to the given int32 and assigns it to the TierBonusNightsPoints field.
func (o *ClaimAdjustmentPointsType) SetTierBonusNightsPoints(v int32) {
	o.TierBonusNightsPoints = &v
}

// GetTierBonusRevenuePoints returns the TierBonusRevenuePoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBonusRevenuePoints() int32 {
	if o == nil || IsNil(o.TierBonusRevenuePoints) {
		var ret int32
		return ret
	}
	return *o.TierBonusRevenuePoints
}

// GetTierBonusRevenuePointsOk returns a tuple with the TierBonusRevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBonusRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBonusRevenuePoints) {
		return nil, false
	}
	return o.TierBonusRevenuePoints, true
}

// HasTierBonusRevenuePoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBonusRevenuePoints() bool {
	if o != nil && !IsNil(o.TierBonusRevenuePoints) {
		return true
	}

	return false
}

// SetTierBonusRevenuePoints gets a reference to the given int32 and assigns it to the TierBonusRevenuePoints field.
func (o *ClaimAdjustmentPointsType) SetTierBonusRevenuePoints(v int32) {
	o.TierBonusRevenuePoints = &v
}

// GetTierBonusStayPoints returns the TierBonusStayPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierBonusStayPoints() int32 {
	if o == nil || IsNil(o.TierBonusStayPoints) {
		var ret int32
		return ret
	}
	return *o.TierBonusStayPoints
}

// GetTierBonusStayPointsOk returns a tuple with the TierBonusStayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierBonusStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierBonusStayPoints) {
		return nil, false
	}
	return o.TierBonusStayPoints, true
}

// HasTierBonusStayPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierBonusStayPoints() bool {
	if o != nil && !IsNil(o.TierBonusStayPoints) {
		return true
	}

	return false
}

// SetTierBonusStayPoints gets a reference to the given int32 and assigns it to the TierBonusStayPoints field.
func (o *ClaimAdjustmentPointsType) SetTierBonusStayPoints(v int32) {
	o.TierBonusStayPoints = &v
}

// GetTierTotalNightsPoints returns the TierTotalNightsPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierTotalNightsPoints() int32 {
	if o == nil || IsNil(o.TierTotalNightsPoints) {
		var ret int32
		return ret
	}
	return *o.TierTotalNightsPoints
}

// GetTierTotalNightsPointsOk returns a tuple with the TierTotalNightsPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierTotalNightsPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierTotalNightsPoints) {
		return nil, false
	}
	return o.TierTotalNightsPoints, true
}

// HasTierTotalNightsPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierTotalNightsPoints() bool {
	if o != nil && !IsNil(o.TierTotalNightsPoints) {
		return true
	}

	return false
}

// SetTierTotalNightsPoints gets a reference to the given int32 and assigns it to the TierTotalNightsPoints field.
func (o *ClaimAdjustmentPointsType) SetTierTotalNightsPoints(v int32) {
	o.TierTotalNightsPoints = &v
}

// GetTierTotalRevenuePoints returns the TierTotalRevenuePoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierTotalRevenuePoints() int32 {
	if o == nil || IsNil(o.TierTotalRevenuePoints) {
		var ret int32
		return ret
	}
	return *o.TierTotalRevenuePoints
}

// GetTierTotalRevenuePointsOk returns a tuple with the TierTotalRevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierTotalRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierTotalRevenuePoints) {
		return nil, false
	}
	return o.TierTotalRevenuePoints, true
}

// HasTierTotalRevenuePoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierTotalRevenuePoints() bool {
	if o != nil && !IsNil(o.TierTotalRevenuePoints) {
		return true
	}

	return false
}

// SetTierTotalRevenuePoints gets a reference to the given int32 and assigns it to the TierTotalRevenuePoints field.
func (o *ClaimAdjustmentPointsType) SetTierTotalRevenuePoints(v int32) {
	o.TierTotalRevenuePoints = &v
}

// GetTierTotalStayPoints returns the TierTotalStayPoints field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTierTotalStayPoints() int32 {
	if o == nil || IsNil(o.TierTotalStayPoints) {
		var ret int32
		return ret
	}
	return *o.TierTotalStayPoints
}

// GetTierTotalStayPointsOk returns a tuple with the TierTotalStayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTierTotalStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierTotalStayPoints) {
		return nil, false
	}
	return o.TierTotalStayPoints, true
}

// HasTierTotalStayPoints returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTierTotalStayPoints() bool {
	if o != nil && !IsNil(o.TierTotalStayPoints) {
		return true
	}

	return false
}

// SetTierTotalStayPoints gets a reference to the given int32 and assigns it to the TierTotalStayPoints field.
func (o *ClaimAdjustmentPointsType) SetTierTotalStayPoints(v int32) {
	o.TierTotalStayPoints = &v
}

// GetTotalBasePointsLimits returns the TotalBasePointsLimits field value if set, zero value otherwise.
func (o *ClaimAdjustmentPointsType) GetTotalBasePointsLimits() string {
	if o == nil || IsNil(o.TotalBasePointsLimits) {
		var ret string
		return ret
	}
	return *o.TotalBasePointsLimits
}

// GetTotalBasePointsLimitsOk returns a tuple with the TotalBasePointsLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdjustmentPointsType) GetTotalBasePointsLimitsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalBasePointsLimits) {
		return nil, false
	}
	return o.TotalBasePointsLimits, true
}

// HasTotalBasePointsLimits returns a boolean if a field has been set.
func (o *ClaimAdjustmentPointsType) HasTotalBasePointsLimits() bool {
	if o != nil && !IsNil(o.TotalBasePointsLimits) {
		return true
	}

	return false
}

// SetTotalBasePointsLimits gets a reference to the given string and assigns it to the TotalBasePointsLimits field.
func (o *ClaimAdjustmentPointsType) SetTotalBasePointsLimits(v string) {
	o.TotalBasePointsLimits = &v
}

func (o ClaimAdjustmentPointsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClaimAdjustmentPointsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjustmentCode) {
		toSerialize["adjustmentCode"] = o.AdjustmentCode
	}
	if !IsNil(o.AwardBasePoints) {
		toSerialize["awardBasePoints"] = o.AwardBasePoints
	}
	if !IsNil(o.AwardBonusPoints) {
		toSerialize["awardBonusPoints"] = o.AwardBonusPoints
	}
	if !IsNil(o.AwardMiscPoints) {
		toSerialize["awardMiscPoints"] = o.AwardMiscPoints
	}
	if !IsNil(o.AwardTotalPoints) {
		toSerialize["awardTotalPoints"] = o.AwardTotalPoints
	}
	if !IsNil(o.BaseNightsLimits) {
		toSerialize["baseNightsLimits"] = o.BaseNightsLimits
	}
	if !IsNil(o.BaseRevenueLimits) {
		toSerialize["baseRevenueLimits"] = o.BaseRevenueLimits
	}
	if !IsNil(o.BaseStayLimits) {
		toSerialize["baseStayLimits"] = o.BaseStayLimits
	}
	if !IsNil(o.TierBaseNightsPoints) {
		toSerialize["tierBaseNightsPoints"] = o.TierBaseNightsPoints
	}
	if !IsNil(o.TierBaseRevenuePoints) {
		toSerialize["tierBaseRevenuePoints"] = o.TierBaseRevenuePoints
	}
	if !IsNil(o.TierBaseStayPoints) {
		toSerialize["tierBaseStayPoints"] = o.TierBaseStayPoints
	}
	if !IsNil(o.TierBonusNightsPoints) {
		toSerialize["tierBonusNightsPoints"] = o.TierBonusNightsPoints
	}
	if !IsNil(o.TierBonusRevenuePoints) {
		toSerialize["tierBonusRevenuePoints"] = o.TierBonusRevenuePoints
	}
	if !IsNil(o.TierBonusStayPoints) {
		toSerialize["tierBonusStayPoints"] = o.TierBonusStayPoints
	}
	if !IsNil(o.TierTotalNightsPoints) {
		toSerialize["tierTotalNightsPoints"] = o.TierTotalNightsPoints
	}
	if !IsNil(o.TierTotalRevenuePoints) {
		toSerialize["tierTotalRevenuePoints"] = o.TierTotalRevenuePoints
	}
	if !IsNil(o.TierTotalStayPoints) {
		toSerialize["tierTotalStayPoints"] = o.TierTotalStayPoints
	}
	if !IsNil(o.TotalBasePointsLimits) {
		toSerialize["totalBasePointsLimits"] = o.TotalBasePointsLimits
	}
	return toSerialize, nil
}

type NullableClaimAdjustmentPointsType struct {
	value *ClaimAdjustmentPointsType
	isSet bool
}

func (v NullableClaimAdjustmentPointsType) Get() *ClaimAdjustmentPointsType {
	return v.value
}

func (v *NullableClaimAdjustmentPointsType) Set(val *ClaimAdjustmentPointsType) {
	v.value = val
	v.isSet = true
}

func (v NullableClaimAdjustmentPointsType) IsSet() bool {
	return v.isSet
}

func (v *NullableClaimAdjustmentPointsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClaimAdjustmentPointsType(val *ClaimAdjustmentPointsType) *NullableClaimAdjustmentPointsType {
	return &NullableClaimAdjustmentPointsType{value: val, isSet: true}
}

func (v NullableClaimAdjustmentPointsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClaimAdjustmentPointsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


