/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MemberPointsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberPointsSummaryType{}

// MemberPointsSummaryType Member Points Summary.
type MemberPointsSummaryType struct {
	AvailablePoints *TransactionSummaryAttributeType `json:"availablePoints,omitempty"`
	NextTierPoints *TransactionSummaryAttributeType `json:"nextTierPoints,omitempty"`
}

// NewMemberPointsSummaryType instantiates a new MemberPointsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberPointsSummaryType() *MemberPointsSummaryType {
	this := MemberPointsSummaryType{}
	return &this
}

// NewMemberPointsSummaryTypeWithDefaults instantiates a new MemberPointsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberPointsSummaryTypeWithDefaults() *MemberPointsSummaryType {
	this := MemberPointsSummaryType{}
	return &this
}

// GetAvailablePoints returns the AvailablePoints field value if set, zero value otherwise.
func (o *MemberPointsSummaryType) GetAvailablePoints() TransactionSummaryAttributeType {
	if o == nil || IsNil(o.AvailablePoints) {
		var ret TransactionSummaryAttributeType
		return ret
	}
	return *o.AvailablePoints
}

// GetAvailablePointsOk returns a tuple with the AvailablePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberPointsSummaryType) GetAvailablePointsOk() (*TransactionSummaryAttributeType, bool) {
	if o == nil || IsNil(o.AvailablePoints) {
		return nil, false
	}
	return o.AvailablePoints, true
}

// HasAvailablePoints returns a boolean if a field has been set.
func (o *MemberPointsSummaryType) HasAvailablePoints() bool {
	if o != nil && !IsNil(o.AvailablePoints) {
		return true
	}

	return false
}

// SetAvailablePoints gets a reference to the given TransactionSummaryAttributeType and assigns it to the AvailablePoints field.
func (o *MemberPointsSummaryType) SetAvailablePoints(v TransactionSummaryAttributeType) {
	o.AvailablePoints = &v
}

// GetNextTierPoints returns the NextTierPoints field value if set, zero value otherwise.
func (o *MemberPointsSummaryType) GetNextTierPoints() TransactionSummaryAttributeType {
	if o == nil || IsNil(o.NextTierPoints) {
		var ret TransactionSummaryAttributeType
		return ret
	}
	return *o.NextTierPoints
}

// GetNextTierPointsOk returns a tuple with the NextTierPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberPointsSummaryType) GetNextTierPointsOk() (*TransactionSummaryAttributeType, bool) {
	if o == nil || IsNil(o.NextTierPoints) {
		return nil, false
	}
	return o.NextTierPoints, true
}

// HasNextTierPoints returns a boolean if a field has been set.
func (o *MemberPointsSummaryType) HasNextTierPoints() bool {
	if o != nil && !IsNil(o.NextTierPoints) {
		return true
	}

	return false
}

// SetNextTierPoints gets a reference to the given TransactionSummaryAttributeType and assigns it to the NextTierPoints field.
func (o *MemberPointsSummaryType) SetNextTierPoints(v TransactionSummaryAttributeType) {
	o.NextTierPoints = &v
}

func (o MemberPointsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberPointsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailablePoints) {
		toSerialize["availablePoints"] = o.AvailablePoints
	}
	if !IsNil(o.NextTierPoints) {
		toSerialize["nextTierPoints"] = o.NextTierPoints
	}
	return toSerialize, nil
}

type NullableMemberPointsSummaryType struct {
	value *MemberPointsSummaryType
	isSet bool
}

func (v NullableMemberPointsSummaryType) Get() *MemberPointsSummaryType {
	return v.value
}

func (v *NullableMemberPointsSummaryType) Set(val *MemberPointsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberPointsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberPointsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberPointsSummaryType(val *MemberPointsSummaryType) *NullableMemberPointsSummaryType {
	return &NullableMemberPointsSummaryType{value: val, isSet: true}
}

func (v NullableMemberPointsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberPointsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


