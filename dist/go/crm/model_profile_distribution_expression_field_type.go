/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>

API version: 24.4
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the ProfileDistributionExpressionFieldType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProfileDistributionExpressionFieldType{}

// ProfileDistributionExpressionFieldType struct for ProfileDistributionExpressionFieldType
type ProfileDistributionExpressionFieldType struct {
	FieldName *ProfileDistributionFieldNameType `json:"fieldName,omitempty"`
	FieldDescription *string `json:"fieldDescription,omitempty"`
	TableName *string `json:"tableName,omitempty"`
	Virtual *bool `json:"virtual,omitempty"`
	DataType *string `json:"dataType,omitempty"`
	LovSelected *string `json:"lovSelected,omitempty"`
}

// NewProfileDistributionExpressionFieldType instantiates a new ProfileDistributionExpressionFieldType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileDistributionExpressionFieldType() *ProfileDistributionExpressionFieldType {
	this := ProfileDistributionExpressionFieldType{}
	return &this
}

// NewProfileDistributionExpressionFieldTypeWithDefaults instantiates a new ProfileDistributionExpressionFieldType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileDistributionExpressionFieldTypeWithDefaults() *ProfileDistributionExpressionFieldType {
	this := ProfileDistributionExpressionFieldType{}
	return &this
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetFieldName() ProfileDistributionFieldNameType {
	if o == nil || IsNil(o.FieldName) {
		var ret ProfileDistributionFieldNameType
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetFieldNameOk() (*ProfileDistributionFieldNameType, bool) {
	if o == nil || IsNil(o.FieldName) {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasFieldName() bool {
	if o != nil && !IsNil(o.FieldName) {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given ProfileDistributionFieldNameType and assigns it to the FieldName field.
func (o *ProfileDistributionExpressionFieldType) SetFieldName(v ProfileDistributionFieldNameType) {
	o.FieldName = &v
}

// GetFieldDescription returns the FieldDescription field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetFieldDescription() string {
	if o == nil || IsNil(o.FieldDescription) {
		var ret string
		return ret
	}
	return *o.FieldDescription
}

// GetFieldDescriptionOk returns a tuple with the FieldDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetFieldDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FieldDescription) {
		return nil, false
	}
	return o.FieldDescription, true
}

// HasFieldDescription returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasFieldDescription() bool {
	if o != nil && !IsNil(o.FieldDescription) {
		return true
	}

	return false
}

// SetFieldDescription gets a reference to the given string and assigns it to the FieldDescription field.
func (o *ProfileDistributionExpressionFieldType) SetFieldDescription(v string) {
	o.FieldDescription = &v
}

// GetTableName returns the TableName field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetTableName() string {
	if o == nil || IsNil(o.TableName) {
		var ret string
		return ret
	}
	return *o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetTableNameOk() (*string, bool) {
	if o == nil || IsNil(o.TableName) {
		return nil, false
	}
	return o.TableName, true
}

// HasTableName returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasTableName() bool {
	if o != nil && !IsNil(o.TableName) {
		return true
	}

	return false
}

// SetTableName gets a reference to the given string and assigns it to the TableName field.
func (o *ProfileDistributionExpressionFieldType) SetTableName(v string) {
	o.TableName = &v
}

// GetVirtual returns the Virtual field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetVirtual() bool {
	if o == nil || IsNil(o.Virtual) {
		var ret bool
		return ret
	}
	return *o.Virtual
}

// GetVirtualOk returns a tuple with the Virtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.Virtual) {
		return nil, false
	}
	return o.Virtual, true
}

// HasVirtual returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasVirtual() bool {
	if o != nil && !IsNil(o.Virtual) {
		return true
	}

	return false
}

// SetVirtual gets a reference to the given bool and assigns it to the Virtual field.
func (o *ProfileDistributionExpressionFieldType) SetVirtual(v bool) {
	o.Virtual = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetDataType() string {
	if o == nil || IsNil(o.DataType) {
		var ret string
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetDataTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasDataType() bool {
	if o != nil && !IsNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given string and assigns it to the DataType field.
func (o *ProfileDistributionExpressionFieldType) SetDataType(v string) {
	o.DataType = &v
}

// GetLovSelected returns the LovSelected field value if set, zero value otherwise.
func (o *ProfileDistributionExpressionFieldType) GetLovSelected() string {
	if o == nil || IsNil(o.LovSelected) {
		var ret string
		return ret
	}
	return *o.LovSelected
}

// GetLovSelectedOk returns a tuple with the LovSelected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileDistributionExpressionFieldType) GetLovSelectedOk() (*string, bool) {
	if o == nil || IsNil(o.LovSelected) {
		return nil, false
	}
	return o.LovSelected, true
}

// HasLovSelected returns a boolean if a field has been set.
func (o *ProfileDistributionExpressionFieldType) HasLovSelected() bool {
	if o != nil && !IsNil(o.LovSelected) {
		return true
	}

	return false
}

// SetLovSelected gets a reference to the given string and assigns it to the LovSelected field.
func (o *ProfileDistributionExpressionFieldType) SetLovSelected(v string) {
	o.LovSelected = &v
}

func (o ProfileDistributionExpressionFieldType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProfileDistributionExpressionFieldType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldName) {
		toSerialize["fieldName"] = o.FieldName
	}
	if !IsNil(o.FieldDescription) {
		toSerialize["fieldDescription"] = o.FieldDescription
	}
	if !IsNil(o.TableName) {
		toSerialize["tableName"] = o.TableName
	}
	if !IsNil(o.Virtual) {
		toSerialize["virtual"] = o.Virtual
	}
	if !IsNil(o.DataType) {
		toSerialize["dataType"] = o.DataType
	}
	if !IsNil(o.LovSelected) {
		toSerialize["lovSelected"] = o.LovSelected
	}
	return toSerialize, nil
}

type NullableProfileDistributionExpressionFieldType struct {
	value *ProfileDistributionExpressionFieldType
	isSet bool
}

func (v NullableProfileDistributionExpressionFieldType) Get() *ProfileDistributionExpressionFieldType {
	return v.value
}

func (v *NullableProfileDistributionExpressionFieldType) Set(val *ProfileDistributionExpressionFieldType) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileDistributionExpressionFieldType) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileDistributionExpressionFieldType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileDistributionExpressionFieldType(val *ProfileDistributionExpressionFieldType) *NullableProfileDistributionExpressionFieldType {
	return &NullableProfileDistributionExpressionFieldType{value: val, isSet: true}
}

func (v NullableProfileDistributionExpressionFieldType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileDistributionExpressionFieldType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


