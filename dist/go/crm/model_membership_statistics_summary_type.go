/*
OPERA Cloud Customer Relationship Management API

APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm

import (
	"encoding/json"
)

// checks if the MembershipStatisticsSummaryType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipStatisticsSummaryType{}

// MembershipStatisticsSummaryType Totals of the each of the points.
type MembershipStatisticsSummaryType struct {
	// Total of the award points from all the transactions.
	AwardPoints *int32 `json:"awardPoints,omitempty"`
	// Total of the Points Cost from all the transactions.
	PointsCost *int32 `json:"pointsCost,omitempty"`
	// Total of the Tier Night points from all the transactions.
	TierNightPoints *int32 `json:"tierNightPoints,omitempty"`
	// Total of the Tier Revenue points from all the transactions.
	TierRevenuePoints *int32 `json:"tierRevenuePoints,omitempty"`
	// Total of the Tier Stay points from all the transactions.
	TierStayPoints *int32 `json:"tierStayPoints,omitempty"`
}

// NewMembershipStatisticsSummaryType instantiates a new MembershipStatisticsSummaryType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipStatisticsSummaryType() *MembershipStatisticsSummaryType {
	this := MembershipStatisticsSummaryType{}
	return &this
}

// NewMembershipStatisticsSummaryTypeWithDefaults instantiates a new MembershipStatisticsSummaryType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipStatisticsSummaryTypeWithDefaults() *MembershipStatisticsSummaryType {
	this := MembershipStatisticsSummaryType{}
	return &this
}

// GetAwardPoints returns the AwardPoints field value if set, zero value otherwise.
func (o *MembershipStatisticsSummaryType) GetAwardPoints() int32 {
	if o == nil || IsNil(o.AwardPoints) {
		var ret int32
		return ret
	}
	return *o.AwardPoints
}

// GetAwardPointsOk returns a tuple with the AwardPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsSummaryType) GetAwardPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.AwardPoints) {
		return nil, false
	}
	return o.AwardPoints, true
}

// HasAwardPoints returns a boolean if a field has been set.
func (o *MembershipStatisticsSummaryType) HasAwardPoints() bool {
	if o != nil && !IsNil(o.AwardPoints) {
		return true
	}

	return false
}

// SetAwardPoints gets a reference to the given int32 and assigns it to the AwardPoints field.
func (o *MembershipStatisticsSummaryType) SetAwardPoints(v int32) {
	o.AwardPoints = &v
}

// GetPointsCost returns the PointsCost field value if set, zero value otherwise.
func (o *MembershipStatisticsSummaryType) GetPointsCost() int32 {
	if o == nil || IsNil(o.PointsCost) {
		var ret int32
		return ret
	}
	return *o.PointsCost
}

// GetPointsCostOk returns a tuple with the PointsCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsSummaryType) GetPointsCostOk() (*int32, bool) {
	if o == nil || IsNil(o.PointsCost) {
		return nil, false
	}
	return o.PointsCost, true
}

// HasPointsCost returns a boolean if a field has been set.
func (o *MembershipStatisticsSummaryType) HasPointsCost() bool {
	if o != nil && !IsNil(o.PointsCost) {
		return true
	}

	return false
}

// SetPointsCost gets a reference to the given int32 and assigns it to the PointsCost field.
func (o *MembershipStatisticsSummaryType) SetPointsCost(v int32) {
	o.PointsCost = &v
}

// GetTierNightPoints returns the TierNightPoints field value if set, zero value otherwise.
func (o *MembershipStatisticsSummaryType) GetTierNightPoints() int32 {
	if o == nil || IsNil(o.TierNightPoints) {
		var ret int32
		return ret
	}
	return *o.TierNightPoints
}

// GetTierNightPointsOk returns a tuple with the TierNightPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsSummaryType) GetTierNightPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierNightPoints) {
		return nil, false
	}
	return o.TierNightPoints, true
}

// HasTierNightPoints returns a boolean if a field has been set.
func (o *MembershipStatisticsSummaryType) HasTierNightPoints() bool {
	if o != nil && !IsNil(o.TierNightPoints) {
		return true
	}

	return false
}

// SetTierNightPoints gets a reference to the given int32 and assigns it to the TierNightPoints field.
func (o *MembershipStatisticsSummaryType) SetTierNightPoints(v int32) {
	o.TierNightPoints = &v
}

// GetTierRevenuePoints returns the TierRevenuePoints field value if set, zero value otherwise.
func (o *MembershipStatisticsSummaryType) GetTierRevenuePoints() int32 {
	if o == nil || IsNil(o.TierRevenuePoints) {
		var ret int32
		return ret
	}
	return *o.TierRevenuePoints
}

// GetTierRevenuePointsOk returns a tuple with the TierRevenuePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsSummaryType) GetTierRevenuePointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierRevenuePoints) {
		return nil, false
	}
	return o.TierRevenuePoints, true
}

// HasTierRevenuePoints returns a boolean if a field has been set.
func (o *MembershipStatisticsSummaryType) HasTierRevenuePoints() bool {
	if o != nil && !IsNil(o.TierRevenuePoints) {
		return true
	}

	return false
}

// SetTierRevenuePoints gets a reference to the given int32 and assigns it to the TierRevenuePoints field.
func (o *MembershipStatisticsSummaryType) SetTierRevenuePoints(v int32) {
	o.TierRevenuePoints = &v
}

// GetTierStayPoints returns the TierStayPoints field value if set, zero value otherwise.
func (o *MembershipStatisticsSummaryType) GetTierStayPoints() int32 {
	if o == nil || IsNil(o.TierStayPoints) {
		var ret int32
		return ret
	}
	return *o.TierStayPoints
}

// GetTierStayPointsOk returns a tuple with the TierStayPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipStatisticsSummaryType) GetTierStayPointsOk() (*int32, bool) {
	if o == nil || IsNil(o.TierStayPoints) {
		return nil, false
	}
	return o.TierStayPoints, true
}

// HasTierStayPoints returns a boolean if a field has been set.
func (o *MembershipStatisticsSummaryType) HasTierStayPoints() bool {
	if o != nil && !IsNil(o.TierStayPoints) {
		return true
	}

	return false
}

// SetTierStayPoints gets a reference to the given int32 and assigns it to the TierStayPoints field.
func (o *MembershipStatisticsSummaryType) SetTierStayPoints(v int32) {
	o.TierStayPoints = &v
}

func (o MembershipStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipStatisticsSummaryType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwardPoints) {
		toSerialize["awardPoints"] = o.AwardPoints
	}
	if !IsNil(o.PointsCost) {
		toSerialize["pointsCost"] = o.PointsCost
	}
	if !IsNil(o.TierNightPoints) {
		toSerialize["tierNightPoints"] = o.TierNightPoints
	}
	if !IsNil(o.TierRevenuePoints) {
		toSerialize["tierRevenuePoints"] = o.TierRevenuePoints
	}
	if !IsNil(o.TierStayPoints) {
		toSerialize["tierStayPoints"] = o.TierStayPoints
	}
	return toSerialize, nil
}

type NullableMembershipStatisticsSummaryType struct {
	value *MembershipStatisticsSummaryType
	isSet bool
}

func (v NullableMembershipStatisticsSummaryType) Get() *MembershipStatisticsSummaryType {
	return v.value
}

func (v *NullableMembershipStatisticsSummaryType) Set(val *MembershipStatisticsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipStatisticsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipStatisticsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipStatisticsSummaryType(val *MembershipStatisticsSummaryType) *NullableMembershipStatisticsSummaryType {
	return &NullableMembershipStatisticsSummaryType{value: val, isSet: true}
}

func (v NullableMembershipStatisticsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipStatisticsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


